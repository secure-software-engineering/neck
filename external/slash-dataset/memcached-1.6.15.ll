; ModuleID = 'memcached.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.stats = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.timeval, i64, i64 }
%struct.timeval = type { i64, i64 }
%struct.settings = type { i64, i32, i32, i32, i8*, i32, i32, i64, i32, i8*, i8*, i32, double, i32, i32, i32, i8, i32, i32, i8, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i32, double, i32, i32, i8, i32, i8, i8, i8*, i32, i32, i32, i32, double, double, i32, i8, i32, i32, i32, i32, i32, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, double, double, i8, [64 x i32], i32, i8* }
%struct.conn = type { i8**, i32, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, %struct.event, i16, i16, i8*, i8*, i32, i32, %struct._mc_resp*, %struct._mc_resp*, i8*, i32, i8*, i32, i32, [3 x %struct.io_queue_s], i32, i32, i32, i32, i32, %struct.sockaddr_in6, i32, i8, %struct.anon.12, %union.protocol_binary_request_header, i64, i16, i32, i32, %struct.conn*, %struct.LIBEVENT_THREAD*, i32 (%struct.conn*)*, i64 (%struct.conn*, i8*, i64)*, i64 (%struct.conn*, %struct.msghdr*, i32)*, i64 (%struct.conn*, i8*, i64)* }
%struct.event = type { %struct.event_callback, %union.anon.1, i32, %struct.event_base*, %union.anon.3, i16, i16, %struct.timeval }
%struct.event_callback = type { %struct.anon.0, i16, i8, i8, %union.anon, i8* }
%struct.anon.0 = type { %struct.event_callback*, %struct.event_callback** }
%union.anon = type { void (i32, i16, i8*)* }
%union.anon.1 = type { %struct.anon.2 }
%struct.anon.2 = type { %struct.event*, %struct.event** }
%struct.event_base = type opaque
%union.anon.3 = type { %struct.anon.4 }
%struct.anon.4 = type { %struct.anon.2, %struct.timeval }
%struct._mc_resp = type { %struct._mc_resp_bundle*, %struct._mc_resp*, i32, i32, i8*, %struct._io_pending_t*, %struct._stritem*, [4 x %struct.iovec], i32, i8, i8, i8, i8, i16, i16, i16, %struct.sockaddr_in6, i32, [1024 x i8] }
%struct._mc_resp_bundle = type { i8, i8, %struct._mc_resp_bundle*, %struct._mc_resp_bundle*, [0 x %struct._mc_resp] }
%struct._io_pending_t = type { i32, %struct.LIBEVENT_THREAD*, %struct.conn*, %struct._mc_resp*, [120 x i8] }
%struct._stritem = type { %struct._stritem*, %struct._stritem*, %struct._stritem*, i32, i32, i32, i16, i16, i8, i8, [0 x %union.anon.10] }
%union.anon.10 = type { i64 }
%struct.iovec = type { i8*, i64 }
%struct.io_queue_s = type { i8*, i8*, i32, i32 }
%struct.sockaddr_in6 = type { i16, i16, i32, %struct.in6_addr, i32 }
%struct.in6_addr = type { %union.anon.11 }
%union.anon.11 = type { [4 x i32] }
%struct.anon.12 = type { i8*, i64, i64 }
%union.protocol_binary_request_header = type { %struct.anon.13 }
%struct.anon.13 = type { i8, i8, i16, i8, i8, i16, i32, i32, i64 }
%struct.LIBEVENT_THREAD = type { i64, %struct.event_base*, %struct.event, i32, %struct.thread_stats, [3 x %struct.io_queue_cb_s], %struct.conn_queue*, %struct.cache_t*, %struct._mc_resp_bundle*, %struct.cache_t*, i8*, %struct._logger*, i8*, i32 }
%struct.thread_stats = type { %union.pthread_mutex_t, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [64 x %struct.slab_stats], [256 x i64], i64, i64, i64 }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct.slab_stats = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.io_queue_cb_s = type { i8*, void (%struct.io_queue_s*)*, void (%struct.io_queue_s*)*, void (%struct._io_pending_t*)*, void (%struct._io_pending_t*)*, i32 }
%struct.conn_queue = type { %struct.conn_ev_head, %union.pthread_mutex_t, %struct.cache_t* }
%struct.conn_ev_head = type { %struct.conn_queue_item*, %struct.conn_queue_item** }
%struct.conn_queue_item = type { i32, i32, i32, i32, i32, i32, %struct.conn*, i8*, %struct._io_pending_t*, %struct.anon.11 }
%struct.anon.11 = type { %struct.conn_queue_item* }
%struct.cache_t = type { %union.pthread_mutex_t, i8*, %struct.cache_head, i64, i32, i32, i32, i32 }
%struct.cache_head = type { %struct.cache_free_s*, %struct.cache_free_s** }
%struct.cache_free_s = type { %struct.anon.8 }
%struct.anon.8 = type { %struct.cache_free_s* }
%struct._logger = type { %struct._logger*, %struct._logger*, %union.pthread_mutex_t, i64, i64, i64, i16, i16, i16, %struct.bipbuf_t*, %struct._entry_details* }
%struct.bipbuf_t = type { i64, i32, i32, i32, i32, [0 x i8] }
%struct._entry_details = type { i32, i16, void (%struct._logentry*, %struct._entry_details*, i8*, %struct.__va_list_tag*)*, i32 (%struct._logentry*, i8*)*, i8* }
%struct._logentry = type { i32, i8, i16, i64, %struct.timeval, i32, [0 x %union.anon.9] }
%union.anon.9 = type { i8 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.msghdr = type { i8*, i32, %struct.iovec*, i64, i8*, i64, i32 }
%struct.stats_state = type { i64, i64, i64, i64, i32, i32, i32, i32, i8, i8, i8, i8 }
%struct.slab_rebalance = type { i8*, i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8* }
%union.pthread_cond_t = type { %struct.anon }
%struct.anon = type { i32, i32, i64, i64, i64, i8*, i32, i32 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.option = type { i8*, i32, i32*, i32 }
%struct.slabclass_t = type { i32, i32, i8*, i32, i32, i8**, i32 }
%struct.slab_automove_reg_t = type { i8* (%struct.settings*)*, void (i8*)*, void (i8*, i32*, i32*)* }
%struct.itemstats_t = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i32 }
%struct._lru_bump_buf = type { %struct._lru_bump_buf*, %struct._lru_bump_buf*, %union.pthread_mutex_t, %struct.bipbuf_t*, i64 }
%struct._prefix_stats = type { i8*, i64, i64, i64, i64, i64, %struct._prefix_stats* }
%struct.logger_watcher = type { i8*, i32, i32, i64, i64, i8, i32, i16, %struct.bipbuf_t* }
%struct.pollfd = type { i32, i16, i16 }
%struct._crawler_module_t = type { i8*, %struct.crawler_client_t, %struct.crawler_module_reg_t* }
%struct.crawler_client_t = type { i8*, i32, %struct.bipbuf_t*, i8* }
%struct.crawler_module_reg_t = type { {}*, void (%struct._crawler_module_t*, %struct._stritem*, i32, i32)*, void (%struct._crawler_module_t*, i32)*, void (%struct._crawler_module_t*)*, i8, i8 }
%struct.crawler = type { %struct._stritem*, %struct._stritem*, %struct._stritem*, i32, i32, i32, i16, i16, i8, i8, i32, i64, i64, i64 }
%struct.auth_entry = type { i8*, i64, i8*, i64 }
%struct._restart_data_cb = type { i8*, %struct._restart_data_cb*, i32 (i8*, i8*, i8*)*, i32 (i8*, i8*, i8*)*, [255 x i8] }
%struct.sockaddr_storage = type { i16, [118 x i8], i64 }
%union.__SOCKADDR_ARG = type { %struct.sockaddr* }
%struct.sockaddr = type { i16, [14 x i8] }
%struct._strchunk = type { %struct._strchunk*, %struct._strchunk*, %struct._stritem*, i32, i32, i32, i16, i16, i8, i8, [0 x i8] }
%struct.rusage = type { %struct.timeval, %struct.timeval, %union.anon.10, %union.anon.10, %union.anon.10, %union.anon.10, %union.anon.10, %union.anon.10, %union.anon.10, %union.anon.10, %union.anon.10, %union.anon.10, %union.anon.10, %union.anon.10, %union.anon.10, %union.anon.10 }
%struct.sockaddr_in = type { i16, i16, %struct.in_addr, [8 x i8] }
%struct.in_addr = type { i32 }
%struct.sockaddr_un = type { i16, [108 x i8] }
%struct.timezone = type { i32, i32 }
%struct.passwd = type { i8*, i8*, i32, i32, i8*, i8*, i8* }
%struct._mc_meta_data = type { i8*, i64, i8*, i64, i64, i32 }
%struct.event_config = type opaque
%union.pthread_attr_t = type { i64, [48 x i8] }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timeval, %struct.timeval, %struct.timeval, [3 x i64] }
%struct.addrinfo = type { i32, i32, i32, i32, i32, %struct.sockaddr*, i8*, %struct.addrinfo* }
%union.anon.29 = type { %struct.sockaddr_in6 }
%struct.__loadu_si128 = type { <2 x i64> }
%union.anon.2 = type { i8* }
%struct.slab_stats_automove = type { i32, i32, i64, i64 }
%struct.lru_pull_tail_return = type { %struct._stritem*, i32 }
%struct.item_stats_automove = type { i64, i64, i32 }
%struct.crawler_expired_data = type { %union.pthread_mutex_t, [256 x %struct.crawlerstats_t], i32, i32, i8, i8 }
%struct.crawlerstats_t = type { [61 x i64], i64, i64, i64, i64, i32, i32, i8 }
%struct.assoc_iterator = type { i64, %struct._stritem*, %struct._stritem*, i8 }
%struct.logger_stats = type { i64, i64, i64, i64, i64 }
%struct.logentry_eviction = type { i64, i32, i32, i16, i8, i8, [0 x i8] }
%struct.logentry_item_get = type { i8, i8, i8, i32, i32, [0 x i8] }
%struct.logentry_item_store = type { i32, i32, i32, i8, i8, i32, i32, [0 x i8] }
%struct.logentry_conn_event = type { i32, i32, i32, %struct.sockaddr_in6 }
%struct.logentry_ext_write = type { i64, i32, i16, i8, i8, i8, [0 x i8] }
%struct.slab_automove = type { %struct.window_data*, i32, i32, double, [64 x %struct.item_stats_automove], [64 x %struct.item_stats_automove], [64 x %struct.slab_stats_automove], [64 x %struct.slab_stats_automove] }
%struct.window_data = type { i64, i64, float, i64 }
%struct.restart_cb_ctx = type { %struct._IO_FILE*, %struct._restart_data_cb*, i8*, i8 }
%struct._meta_flags = type { i16, i8, i32, i32, i32, i32, i64, i64, i64 }
%union.protocol_binary_response_get = type { %struct.anon.18 }
%struct.anon.18 = type { %union.protocol_binary_request_header, %struct.in_addr }
%union.protocol_binary_request_set = type { %struct.anon.16 }
%struct.anon.16 = type { %union.protocol_binary_request_header, %struct.timezone }
%union.protocol_binary_response_incr = type { %struct.anon.22 }
%struct.anon.22 = type { %union.protocol_binary_request_header, %union.anon.10 }
%union.protocol_binary_request_incr = type { %struct.anon.24 }
%struct.anon.24 = type { %union.protocol_binary_request_header, %struct.item_stats_automove }
%struct.extstore_stats = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.extstore_page_data* }
%struct.extstore_page_data = type { i64, i64, i32, i32 }
%struct.store_engine = type { %union.pthread_mutex_t, %struct._store_page*, %struct.__store_wbuf*, %struct._obj_io*, %struct.store_io_thread*, %struct.store_maint_thread*, %struct._store_page*, %struct._store_page**, %struct._store_page**, i64, i32, i32, i32, i32, i32, i32, i32, i32, %union.pthread_mutex_t, %struct.extstore_stats }
%struct.__store_wbuf = type { %struct.__store_wbuf*, i8*, i8*, i32, i32, i32, i8, i8 }
%struct._obj_io = type { i8*, %struct._obj_io*, i8*, %struct.iovec*, i32, i32, i32, i32, i16, i32, void (i8*, %struct._obj_io*, i32)* }
%struct.store_io_thread = type { %union.pthread_mutex_t, %union.pthread_cond_t, %struct._obj_io*, %struct._obj_io*, %struct.store_engine*, i32 }
%struct.store_maint_thread = type { %union.pthread_mutex_t, %union.pthread_cond_t, %struct.store_engine* }
%struct._store_page = type { %union.pthread_mutex_t, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, i16, i8, i8, i8, %struct.__store_wbuf*, %struct._store_page* }
%struct.extstore_conf_file = type { i32, i8*, i32, i64, i32, i32, %struct.extstore_conf_file* }
%struct.extstore_conf = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.flock = type { i16, i16, i64, i64, i32 }
%struct.item_hdr = type { i32, i32, i16 }
%struct._io_pending_storage_t = type { i32, %struct.LIBEVENT_THREAD*, %struct.conn*, %struct._mc_resp*, %struct._stritem*, %struct._obj_io, i32, i8, i8, i8, i8 }
%struct.storage_compact_wrap = type { %struct._obj_io, %union.pthread_mutex_t, i8, i8, i8 }
%struct.storage_settings = type { %struct.extstore_conf_file*, %struct.extstore_conf }
%struct.slab_automove.433 = type { %struct.window_data.432*, %struct.timezone*, %struct.settings*, i32, i32, i32, i32, double, double, i8, [64 x i32], [64 x %struct.item_stats_automove], [64 x %struct.item_stats_automove], [64 x %struct.slab_stats_automove], [64 x %struct.slab_stats_automove] }
%struct.window_data.432 = type { i64, i64, i64, i32, i32 }

@ext_storage = dso_local global i8* null, align 8
@process_started = dso_local global i64 0, align 8
@current_time = dso_local global i32 0, align 4
@stats = dso_local global %struct.stats zeroinitializer, align 8
@settings = dso_local global %struct.settings zeroinitializer, align 8
@conns = dso_local global %struct.conn** null, align 8
@stats_state = dso_local global %struct.stats_state zeroinitializer, align 8
@slab_rebal = dso_local global %struct.slab_rebalance zeroinitializer, align 8
@slab_rebalance_signal = dso_local global i32 0, align 4
@do_run_conn_timeout_thread = internal global i32 0, align 4
@conn_timeout_lock = internal global %union.pthread_mutex_t zeroinitializer, align 8
@conn_timeout_cond = internal global %union.pthread_cond_t zeroinitializer, align 8
@conn_timeout_tid = internal global i64 0, align 8
@stderr = external dso_local global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [48 x i8] c"fd %d wants to timeout, but isn't in read state\00", align 1
@.str.1 = private unnamed_addr constant [20 x i8] c"Closing idle fd %d\0A\00", align 1
@drive_machine.use_accept4 = internal global i32 1, align 4
@.str.390 = private unnamed_addr constant [10 x i8] c"accept4()\00", align 1
@.str.391 = private unnamed_addr constant [9 x i8] c"accept()\00", align 1
@.str.392 = private unnamed_addr constant [27 x i8] c"Too many open connections\0A\00", align 1
@.str.393 = private unnamed_addr constant [19 x i8] c"setting O_NONBLOCK\00", align 1
@.str.394 = private unnamed_addr constant [34 x i8] c"ERROR Too many open connections\0D\0A\00", align 1
@.str.395 = private unnamed_addr constant [23 x i8] c"Couldn't update event\0A\00", align 1
@.str.396 = private unnamed_addr constant [33 x i8] c"Invalid rlbytes to read: len %d\0A\00", align 1
@.str.397 = private unnamed_addr constant [39 x i8] c"SERVER_ERROR Out of memory during read\00", align 1
@.str.398 = private unnamed_addr constant [102 x i8] c"Failed to read, and not due to blocking:\0Aerrno: %d %s \0Arcurr=%p ritem=%p rbuf=%p rlbytes=%d rsize=%d\0A\00", align 1
@.str.399 = private unnamed_addr constant [41 x i8] c"Failed to read, and not due to blocking\0A\00", align 1
@.str.400 = private unnamed_addr constant [21 x i8] c"Unexpected state %d\0A\00", align 1
@.str.360 = private unnamed_addr constant [24 x i8] c"<%d connection closed.\0A\00", align 1
@allow_new_conns = internal global i8 1, align 1
@.str.13 = private unnamed_addr constant [7 x i8] c"binary\00", align 1
@.str.14 = private unnamed_addr constant [6 x i8] c"ascii\00", align 1
@.str.12 = private unnamed_addr constant [68 x i8] c"ERROR: double free detected during conn_release_items(): [%d] [%s]\0A\00", align 1
@.str.403 = private unnamed_addr constant [41 x i8] c"Failed to write, and not due to blocking\00", align 1
@out_of_memory.error_prefix = internal constant [14 x i8] c"SERVER_ERROR \00", align 1
@.str.16 = private unnamed_addr constant [16 x i8] c">%d NOREPLY %s\0A\00", align 1
@.str.17 = private unnamed_addr constant [8 x i8] c">%d %s\0A\00", align 1
@.str.18 = private unnamed_addr constant [34 x i8] c"SERVER_ERROR output line too long\00", align 1
@.str.19 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1
@.str.401 = private unnamed_addr constant [31 x i8] c"Couldn't realloc input buffer\0A\00", align 1
@.str.402 = private unnamed_addr constant [43 x i8] c"SERVER_ERROR out of memory reading request\00", align 1
@.str.404 = private unnamed_addr constant [47 x i8] c"Catastrophic: event fd doesn't match conn fd!\0A\00", align 1
@.str.15 = private unnamed_addr constant [25 x i8] c"%d: going from %s to %s\0A\00", align 1
@__const.state_text.statenames = private unnamed_addr constant [13 x i8*] [i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.361, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.362, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.363, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.364, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.365, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.366, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.367, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.368, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.369, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.370, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.371, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.372, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.373, i32 0, i32 0)], align 16
@.str.361 = private unnamed_addr constant [15 x i8] c"conn_listening\00", align 1
@.str.362 = private unnamed_addr constant [13 x i8] c"conn_new_cmd\00", align 1
@.str.363 = private unnamed_addr constant [13 x i8] c"conn_waiting\00", align 1
@.str.364 = private unnamed_addr constant [10 x i8] c"conn_read\00", align 1
@.str.365 = private unnamed_addr constant [15 x i8] c"conn_parse_cmd\00", align 1
@.str.366 = private unnamed_addr constant [11 x i8] c"conn_write\00", align 1
@.str.367 = private unnamed_addr constant [11 x i8] c"conn_nread\00", align 1
@.str.368 = private unnamed_addr constant [13 x i8] c"conn_swallow\00", align 1
@.str.369 = private unnamed_addr constant [13 x i8] c"conn_closing\00", align 1
@.str.370 = private unnamed_addr constant [12 x i8] c"conn_mwrite\00", align 1
@.str.371 = private unnamed_addr constant [12 x i8] c"conn_closed\00", align 1
@.str.372 = private unnamed_addr constant [11 x i8] c"conn_watch\00", align 1
@.str.373 = private unnamed_addr constant [14 x i8] c"conn_io_queue\00", align 1
@.str.2 = private unnamed_addr constant [10 x i8] c"event_add\00", align 1
@.str.3 = private unnamed_addr constant [38 x i8] c"Failed to allocate connection object\0A\00", align 1
@.str.4 = private unnamed_addr constant [43 x i8] c"Failed to allocate buffers for connection\0A\00", align 1
@.str.5 = private unnamed_addr constant [12 x i8] c"getpeername\00", align 1
@.str.6 = private unnamed_addr constant [27 x i8] c"<%d server listening (%s)\0A\00", align 1
@.str.7 = private unnamed_addr constant [28 x i8] c"<%d server listening (udp)\0A\00", align 1
@.str.8 = private unnamed_addr constant [44 x i8] c"<%d new auto-negotiating client connection\0A\00", align 1
@.str.9 = private unnamed_addr constant [34 x i8] c"<%d new ascii client connection.\0A\00", align 1
@.str.10 = private unnamed_addr constant [35 x i8] c"<%d new binary client connection.\0A\00", align 1
@.str.11 = private unnamed_addr constant [40 x i8] c"<%d new unknown (%d) client connection\0A\00", align 1
@.str.389 = private unnamed_addr constant [34 x i8] c"%d: Client using the %s protocol\0A\00", align 1
@.str.358 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@.str.359 = private unnamed_addr constant [15 x i8] c"auto-negotiate\00", align 1
@max_fds = internal global i32 0, align 4
@.str.374 = private unnamed_addr constant [6 x i8] c"END\0D\0A\00", align 1
@.str.375 = private unnamed_addr constant [10 x i8] c"STAT %s\0D\0A\00", align 1
@.str.376 = private unnamed_addr constant [13 x i8] c"STAT %s %s\0D\0A\00", align 1
@.str.20 = private unnamed_addr constant [40 x i8] c"CAS:  failure: expected %llu, got %llu\0A\00", align 1
@.str.21 = private unnamed_addr constant [41 x i8] c"SERVER_ERROR out of memory writing stats\00", align 1
@.str.22 = private unnamed_addr constant [4 x i8] c"pid\00", align 1
@.str.23 = private unnamed_addr constant [4 x i8] c"%lu\00", align 1
@.str.24 = private unnamed_addr constant [7 x i8] c"uptime\00", align 1
@.str.25 = private unnamed_addr constant [3 x i8] c"%u\00", align 1
@.str.26 = private unnamed_addr constant [5 x i8] c"time\00", align 1
@.str.27 = private unnamed_addr constant [4 x i8] c"%ld\00", align 1
@.str.28 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.29 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.30 = private unnamed_addr constant [7 x i8] c"1.6.15\00", align 1
@.str.31 = private unnamed_addr constant [9 x i8] c"libevent\00", align 1
@.str.32 = private unnamed_addr constant [13 x i8] c"pointer_size\00", align 1
@.str.33 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.34 = private unnamed_addr constant [12 x i8] c"rusage_user\00", align 1
@.str.35 = private unnamed_addr constant [10 x i8] c"%ld.%06ld\00", align 1
@.str.36 = private unnamed_addr constant [14 x i8] c"rusage_system\00", align 1
@.str.37 = private unnamed_addr constant [16 x i8] c"max_connections\00", align 1
@.str.38 = private unnamed_addr constant [17 x i8] c"curr_connections\00", align 1
@.str.39 = private unnamed_addr constant [5 x i8] c"%llu\00", align 1
@.str.40 = private unnamed_addr constant [18 x i8] c"total_connections\00", align 1
@.str.41 = private unnamed_addr constant [21 x i8] c"rejected_connections\00", align 1
@.str.42 = private unnamed_addr constant [22 x i8] c"connection_structures\00", align 1
@.str.43 = private unnamed_addr constant [17 x i8] c"response_obj_oom\00", align 1
@.str.44 = private unnamed_addr constant [19 x i8] c"response_obj_count\00", align 1
@.str.45 = private unnamed_addr constant [19 x i8] c"response_obj_bytes\00", align 1
@.str.46 = private unnamed_addr constant [15 x i8] c"read_buf_count\00", align 1
@.str.47 = private unnamed_addr constant [15 x i8] c"read_buf_bytes\00", align 1
@.str.48 = private unnamed_addr constant [20 x i8] c"read_buf_bytes_free\00", align 1
@.str.49 = private unnamed_addr constant [13 x i8] c"read_buf_oom\00", align 1
@.str.50 = private unnamed_addr constant [13 x i8] c"reserved_fds\00", align 1
@.str.51 = private unnamed_addr constant [8 x i8] c"cmd_get\00", align 1
@.str.52 = private unnamed_addr constant [8 x i8] c"cmd_set\00", align 1
@.str.53 = private unnamed_addr constant [10 x i8] c"cmd_flush\00", align 1
@.str.54 = private unnamed_addr constant [10 x i8] c"cmd_touch\00", align 1
@.str.55 = private unnamed_addr constant [9 x i8] c"cmd_meta\00", align 1
@.str.56 = private unnamed_addr constant [9 x i8] c"get_hits\00", align 1
@.str.57 = private unnamed_addr constant [11 x i8] c"get_misses\00", align 1
@.str.58 = private unnamed_addr constant [12 x i8] c"get_expired\00", align 1
@.str.59 = private unnamed_addr constant [12 x i8] c"get_flushed\00", align 1
@.str.60 = private unnamed_addr constant [13 x i8] c"get_extstore\00", align 1
@.str.61 = private unnamed_addr constant [21 x i8] c"get_aborted_extstore\00", align 1
@.str.62 = private unnamed_addr constant [17 x i8] c"get_oom_extstore\00", align 1
@.str.63 = private unnamed_addr constant [22 x i8] c"recache_from_extstore\00", align 1
@.str.64 = private unnamed_addr constant [19 x i8] c"miss_from_extstore\00", align 1
@.str.65 = private unnamed_addr constant [21 x i8] c"badcrc_from_extstore\00", align 1
@.str.66 = private unnamed_addr constant [14 x i8] c"delete_misses\00", align 1
@.str.67 = private unnamed_addr constant [12 x i8] c"delete_hits\00", align 1
@.str.68 = private unnamed_addr constant [12 x i8] c"incr_misses\00", align 1
@.str.69 = private unnamed_addr constant [10 x i8] c"incr_hits\00", align 1
@.str.70 = private unnamed_addr constant [12 x i8] c"decr_misses\00", align 1
@.str.71 = private unnamed_addr constant [10 x i8] c"decr_hits\00", align 1
@.str.72 = private unnamed_addr constant [11 x i8] c"cas_misses\00", align 1
@.str.73 = private unnamed_addr constant [9 x i8] c"cas_hits\00", align 1
@.str.74 = private unnamed_addr constant [11 x i8] c"cas_badval\00", align 1
@.str.75 = private unnamed_addr constant [11 x i8] c"touch_hits\00", align 1
@.str.76 = private unnamed_addr constant [13 x i8] c"touch_misses\00", align 1
@.str.77 = private unnamed_addr constant [16 x i8] c"store_too_large\00", align 1
@.str.78 = private unnamed_addr constant [16 x i8] c"store_no_memory\00", align 1
@.str.79 = private unnamed_addr constant [10 x i8] c"auth_cmds\00", align 1
@.str.80 = private unnamed_addr constant [12 x i8] c"auth_errors\00", align 1
@.str.81 = private unnamed_addr constant [11 x i8] c"idle_kicks\00", align 1
@.str.82 = private unnamed_addr constant [11 x i8] c"bytes_read\00", align 1
@.str.83 = private unnamed_addr constant [14 x i8] c"bytes_written\00", align 1
@.str.84 = private unnamed_addr constant [15 x i8] c"limit_maxbytes\00", align 1
@.str.85 = private unnamed_addr constant [16 x i8] c"accepting_conns\00", align 1
@.str.86 = private unnamed_addr constant [20 x i8] c"listen_disabled_num\00", align 1
@.str.87 = private unnamed_addr constant [27 x i8] c"time_in_listen_disabled_us\00", align 1
@.str.88 = private unnamed_addr constant [8 x i8] c"threads\00", align 1
@.str.89 = private unnamed_addr constant [12 x i8] c"conn_yields\00", align 1
@.str.90 = private unnamed_addr constant [17 x i8] c"hash_power_level\00", align 1
@.str.91 = private unnamed_addr constant [11 x i8] c"hash_bytes\00", align 1
@.str.92 = private unnamed_addr constant [18 x i8] c"hash_is_expanding\00", align 1
@.str.93 = private unnamed_addr constant [22 x i8] c"slab_reassign_rescues\00", align 1
@.str.94 = private unnamed_addr constant [28 x i8] c"slab_reassign_chunk_rescues\00", align 1
@.str.95 = private unnamed_addr constant [30 x i8] c"slab_reassign_evictions_nomem\00", align 1
@.str.96 = private unnamed_addr constant [29 x i8] c"slab_reassign_inline_reclaim\00", align 1
@.str.97 = private unnamed_addr constant [25 x i8] c"slab_reassign_busy_items\00", align 1
@.str.98 = private unnamed_addr constant [27 x i8] c"slab_reassign_busy_deletes\00", align 1
@.str.99 = private unnamed_addr constant [22 x i8] c"slab_reassign_running\00", align 1
@.str.100 = private unnamed_addr constant [12 x i8] c"slabs_moved\00", align 1
@.str.101 = private unnamed_addr constant [20 x i8] c"lru_crawler_running\00", align 1
@.str.102 = private unnamed_addr constant [19 x i8] c"lru_crawler_starts\00", align 1
@.str.103 = private unnamed_addr constant [23 x i8] c"lru_maintainer_juggles\00", align 1
@.str.104 = private unnamed_addr constant [13 x i8] c"malloc_fails\00", align 1
@.str.105 = private unnamed_addr constant [19 x i8] c"log_worker_dropped\00", align 1
@.str.106 = private unnamed_addr constant [19 x i8] c"log_worker_written\00", align 1
@.str.107 = private unnamed_addr constant [20 x i8] c"log_watcher_skipped\00", align 1
@.str.108 = private unnamed_addr constant [17 x i8] c"log_watcher_sent\00", align 1
@.str.109 = private unnamed_addr constant [13 x i8] c"log_watchers\00", align 1
@.str.110 = private unnamed_addr constant [20 x i8] c"unexpected_napi_ids\00", align 1
@.str.111 = private unnamed_addr constant [21 x i8] c"round_robin_fallback\00", align 1
@.str.112 = private unnamed_addr constant [9 x i8] c"maxbytes\00", align 1
@.str.113 = private unnamed_addr constant [9 x i8] c"maxconns\00", align 1
@.str.114 = private unnamed_addr constant [8 x i8] c"tcpport\00", align 1
@.str.115 = private unnamed_addr constant [8 x i8] c"udpport\00", align 1
@.str.117 = private unnamed_addr constant [5 x i8] c"NULL\00", align 1
@.str.116 = private unnamed_addr constant [6 x i8] c"inter\00", align 1
@.str.118 = private unnamed_addr constant [10 x i8] c"verbosity\00", align 1
@.str.119 = private unnamed_addr constant [7 x i8] c"oldest\00", align 1
@.str.121 = private unnamed_addr constant [3 x i8] c"on\00", align 1
@.str.122 = private unnamed_addr constant [4 x i8] c"off\00", align 1
@.str.120 = private unnamed_addr constant [10 x i8] c"evictions\00", align 1
@.str.123 = private unnamed_addr constant [14 x i8] c"domain_socket\00", align 1
@.str.124 = private unnamed_addr constant [6 x i8] c"umask\00", align 1
@.str.125 = private unnamed_addr constant [3 x i8] c"%o\00", align 1
@.str.127 = private unnamed_addr constant [4 x i8] c"yes\00", align 1
@.str.128 = private unnamed_addr constant [3 x i8] c"no\00", align 1
@.str.126 = private unnamed_addr constant [17 x i8] c"shutdown_command\00", align 1
@.str.129 = private unnamed_addr constant [14 x i8] c"growth_factor\00", align 1
@.str.130 = private unnamed_addr constant [5 x i8] c"%.2f\00", align 1
@.str.131 = private unnamed_addr constant [11 x i8] c"chunk_size\00", align 1
@.str.132 = private unnamed_addr constant [12 x i8] c"num_threads\00", align 1
@.str.133 = private unnamed_addr constant [20 x i8] c"num_threads_per_udp\00", align 1
@.str.134 = private unnamed_addr constant [16 x i8] c"stat_key_prefix\00", align 1
@.str.135 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.136 = private unnamed_addr constant [15 x i8] c"detail_enabled\00", align 1
@.str.137 = private unnamed_addr constant [15 x i8] c"reqs_per_event\00", align 1
@.str.138 = private unnamed_addr constant [12 x i8] c"cas_enabled\00", align 1
@.str.139 = private unnamed_addr constant [12 x i8] c"tcp_backlog\00", align 1
@.str.140 = private unnamed_addr constant [17 x i8] c"binding_protocol\00", align 1
@.str.141 = private unnamed_addr constant [18 x i8] c"auth_enabled_sasl\00", align 1
@.str.142 = private unnamed_addr constant [19 x i8] c"auth_enabled_ascii\00", align 1
@.str.143 = private unnamed_addr constant [14 x i8] c"item_size_max\00", align 1
@.str.144 = private unnamed_addr constant [14 x i8] c"maxconns_fast\00", align 1
@.str.145 = private unnamed_addr constant [15 x i8] c"hashpower_init\00", align 1
@.str.146 = private unnamed_addr constant [14 x i8] c"slab_reassign\00", align 1
@.str.147 = private unnamed_addr constant [14 x i8] c"slab_automove\00", align 1
@.str.148 = private unnamed_addr constant [20 x i8] c"slab_automove_ratio\00", align 1
@.str.149 = private unnamed_addr constant [21 x i8] c"slab_automove_window\00", align 1
@.str.150 = private unnamed_addr constant [15 x i8] c"slab_chunk_max\00", align 1
@.str.151 = private unnamed_addr constant [12 x i8] c"lru_crawler\00", align 1
@.str.152 = private unnamed_addr constant [18 x i8] c"lru_crawler_sleep\00", align 1
@.str.153 = private unnamed_addr constant [20 x i8] c"lru_crawler_tocrawl\00", align 1
@.str.154 = private unnamed_addr constant [17 x i8] c"tail_repair_time\00", align 1
@.str.155 = private unnamed_addr constant [14 x i8] c"flush_enabled\00", align 1
@.str.156 = private unnamed_addr constant [13 x i8] c"dump_enabled\00", align 1
@.str.157 = private unnamed_addr constant [15 x i8] c"hash_algorithm\00", align 1
@.str.158 = private unnamed_addr constant [22 x i8] c"lru_maintainer_thread\00", align 1
@.str.159 = private unnamed_addr constant [14 x i8] c"lru_segmented\00", align 1
@.str.160 = private unnamed_addr constant [12 x i8] c"hot_lru_pct\00", align 1
@.str.161 = private unnamed_addr constant [13 x i8] c"warm_lru_pct\00", align 1
@.str.162 = private unnamed_addr constant [15 x i8] c"hot_max_factor\00", align 1
@.str.163 = private unnamed_addr constant [16 x i8] c"warm_max_factor\00", align 1
@.str.164 = private unnamed_addr constant [9 x i8] c"temp_lru\00", align 1
@.str.165 = private unnamed_addr constant [14 x i8] c"temporary_ttl\00", align 1
@.str.166 = private unnamed_addr constant [13 x i8] c"idle_timeout\00", align 1
@.str.167 = private unnamed_addr constant [20 x i8] c"watcher_logbuf_size\00", align 1
@.str.168 = private unnamed_addr constant [19 x i8] c"worker_logbuf_size\00", align 1
@.str.169 = private unnamed_addr constant [19 x i8] c"read_buf_mem_limit\00", align 1
@.str.170 = private unnamed_addr constant [12 x i8] c"track_sizes\00", align 1
@.str.171 = private unnamed_addr constant [22 x i8] c"inline_ascii_response\00", align 1
@.str.172 = private unnamed_addr constant [14 x i8] c"ext_item_size\00", align 1
@.str.173 = private unnamed_addr constant [13 x i8] c"ext_item_age\00", align 1
@.str.174 = private unnamed_addr constant [12 x i8] c"ext_low_ttl\00", align 1
@.str.175 = private unnamed_addr constant [17 x i8] c"ext_recache_rate\00", align 1
@.str.176 = private unnamed_addr constant [14 x i8] c"ext_wbuf_size\00", align 1
@.str.177 = private unnamed_addr constant [18 x i8] c"ext_compact_under\00", align 1
@.str.178 = private unnamed_addr constant [15 x i8] c"ext_drop_under\00", align 1
@.str.179 = private unnamed_addr constant [14 x i8] c"ext_max_sleep\00", align 1
@.str.180 = private unnamed_addr constant [13 x i8] c"ext_max_frag\00", align 1
@.str.181 = private unnamed_addr constant [24 x i8] c"slab_automove_freeratio\00", align 1
@.str.182 = private unnamed_addr constant [5 x i8] c"%.3f\00", align 1
@.str.183 = private unnamed_addr constant [16 x i8] c"ext_drop_unread\00", align 1
@.str.184 = private unnamed_addr constant [13 x i8] c"num_napi_ids\00", align 1
@.str.185 = private unnamed_addr constant [12 x i8] c"memory_file\00", align 1
@.str.186 = private unnamed_addr constant [6 x i8] c"bytes\00", align 1
@.str.187 = private unnamed_addr constant [11 x i8] c"curr_items\00", align 1
@.str.188 = private unnamed_addr constant [12 x i8] c"total_items\00", align 1
@.str.189 = private unnamed_addr constant [22 x i8] c"slab_global_page_pool\00", align 1
@.str.190 = private unnamed_addr constant [6 x i8] c"items\00", align 1
@.str.191 = private unnamed_addr constant [6 x i8] c"slabs\00", align 1
@.str.192 = private unnamed_addr constant [6 x i8] c"sizes\00", align 1
@.str.193 = private unnamed_addr constant [13 x i8] c"sizes_enable\00", align 1
@.str.194 = private unnamed_addr constant [14 x i8] c"sizes_disable\00", align 1
@.str.195 = private unnamed_addr constant [6 x i8] c"%d:%s\00", align 1
@.str.196 = private unnamed_addr constant [4 x i8] c"UDP\00", align 1
@.str.197 = private unnamed_addr constant [5 x i8] c"addr\00", align 1
@.str.198 = private unnamed_addr constant [12 x i8] c"listen_addr\00", align 1
@.str.199 = private unnamed_addr constant [6 x i8] c"state\00", align 1
@.str.200 = private unnamed_addr constant [20 x i8] c"secs_since_last_cmd\00", align 1
@.str.377 = private unnamed_addr constant [7 x i8] c"<null>\00", align 1
@.str.378 = private unnamed_addr constant [9 x i8] c"<closed>\00", align 1
@.str.379 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.380 = private unnamed_addr constant [4 x i8] c"udp\00", align 1
@.str.381 = private unnamed_addr constant [4 x i8] c"tcp\00", align 1
@.str.382 = private unnamed_addr constant [2 x i8] c"]\00", align 1
@.str.383 = private unnamed_addr constant [5 x i8] c"udp6\00", align 1
@.str.384 = private unnamed_addr constant [5 x i8] c"tcp6\00", align 1
@.str.385 = private unnamed_addr constant [5 x i8] c"unix\00", align 1
@.str.386 = private unnamed_addr constant [8 x i8] c"<AF %d>\00", align 1
@.str.387 = private unnamed_addr constant [9 x i8] c"%s:%s:%u\00", align 1
@.str.388 = private unnamed_addr constant [6 x i8] c"%s:%s\00", align 1
@.str.201 = private unnamed_addr constant [39 x i8] c"Tried to do incr/decr on invalid item\0A\00", align 1
@listen_conn = internal global %struct.conn* null, align 8
@.str.202 = private unnamed_addr constant [7 x i8] c"listen\00", align 1
@__const.maxconns_handler.t = private unnamed_addr constant %struct.timeval { i64 0, i64 10000 }, align 8
@maxconnsevent = internal global %struct.event zeroinitializer, align 8
@main_base = internal global %struct.event_base* null, align 8
@__const.main.subopts_tokens = private unnamed_addr constant [40 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.144, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.203, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.204, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.146, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.147, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.148, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.149, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.154, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.157, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.151, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.152, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.153, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.205, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.160, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.161, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.162, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.163, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.165, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.166, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.167, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.168, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.206, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.150, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.170, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.207, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.208, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.209, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.210, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.211, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.212, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.213, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.214, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.215, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.216, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.217, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.218, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.219, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.169, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.220, i32 0, i32 0), i8* null], align 16
@.str.221 = private unnamed_addr constant [36 x i8] c"failed to allocate extstore config\0A\00", align 1
@.str.222 = private unnamed_addr constant [59 x i8] c"a:AZp:s:U:m:Mc:khiVrvdl:u:P:f:n:t:D:LR:Cb:B:I:SFXWY:e:o:N:\00", align 1
@__const.main.longopts = private unnamed_addr constant [37 x %struct.option] [%struct.option { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.223, i32 0, i32 0), i32 1, i32* null, i32 97 }, %struct.option { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.224, i32 0, i32 0), i32 0, i32* null, i32 65 }, %struct.option { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.225, i32 0, i32 0), i32 0, i32* null, i32 90 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.226, i32 0, i32 0), i32 1, i32* null, i32 112 }, %struct.option { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.227, i32 0, i32 0), i32 1, i32* null, i32 115 }, %struct.option { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.228, i32 0, i32 0), i32 1, i32* null, i32 85 }, %struct.option { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.229, i32 0, i32 0), i32 1, i32* null, i32 109 }, %struct.option { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.230, i32 0, i32 0), i32 0, i32* null, i32 77 }, %struct.option { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.231, i32 0, i32 0), i32 1, i32* null, i32 99 }, %struct.option { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.232, i32 0, i32 0), i32 0, i32* null, i32 107 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.233, i32 0, i32 0), i32 0, i32* null, i32 104 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.234, i32 0, i32 0), i32 0, i32* null, i32 105 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.28, i32 0, i32 0), i32 0, i32* null, i32 86 }, %struct.option { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.235, i32 0, i32 0), i32 0, i32* null, i32 114 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.236, i32 0, i32 0), i32 2, i32* null, i32 118 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.237, i32 0, i32 0), i32 0, i32* null, i32 100 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.202, i32 0, i32 0), i32 1, i32* null, i32 108 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.238, i32 0, i32 0), i32 1, i32* null, i32 117 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.239, i32 0, i32 0), i32 1, i32* null, i32 80 }, %struct.option { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.240, i32 0, i32 0), i32 1, i32* null, i32 102 }, %struct.option { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.241, i32 0, i32 0), i32 1, i32* null, i32 110 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.88, i32 0, i32 0), i32 1, i32* null, i32 116 }, %struct.option { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.242, i32 0, i32 0), i32 0, i32* null, i32 76 }, %struct.option { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.243, i32 0, i32 0), i32 1, i32* null, i32 82 }, %struct.option { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.244, i32 0, i32 0), i32 0, i32* null, i32 67 }, %struct.option { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.245, i32 0, i32 0), i32 1, i32* null, i32 98 }, %struct.option { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.246, i32 0, i32 0), i32 1, i32* null, i32 66 }, %struct.option { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.247, i32 0, i32 0), i32 1, i32* null, i32 73 }, %struct.option { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.248, i32 0, i32 0), i32 0, i32* null, i32 83 }, %struct.option { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.249, i32 0, i32 0), i32 0, i32* null, i32 70 }, %struct.option { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.250, i32 0, i32 0), i32 0, i32* null, i32 88 }, %struct.option { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.251, i32 0, i32 0), i32 0, i32* null, i32 87 }, %struct.option { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.252, i32 0, i32 0), i32 1, i32* null, i32 89 }, %struct.option { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.253, i32 0, i32 0), i32 1, i32* null, i32 101 }, %struct.option { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.254, i32 0, i32 0), i32 1, i32* null, i32 111 }, %struct.option { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.255, i32 0, i32 0), i32 1, i32* null, i32 78 }, %struct.option zeroinitializer], align 16
@.str.256 = private unnamed_addr constant [44 x i8] c"This server is not built with TLS support.\0A\00", align 1
@optarg = external dso_local global i8*, align 8
@.str.257 = private unnamed_addr constant [44 x i8] c"Maximum connections must be greater than 0\0A\00", align 1
@.str.258 = private unnamed_addr constant [18 x i8] c"memcached 1.6.15\0A\00", align 1
@.str.259 = private unnamed_addr constant [27 x i8] c"Failed to allocate memory\0A\00", align 1
@.str.260 = private unnamed_addr constant [6 x i8] c"%s,%s\00", align 1
@.str.261 = private unnamed_addr constant [53 x i8] c"Number of requests per event must be greater than 0\0A\00", align 1
@.str.262 = private unnamed_addr constant [31 x i8] c"Factor must be greater than 1\0A\00", align 1
@.str.263 = private unnamed_addr constant [35 x i8] c"Chunk size must be greater than 0\0A\00", align 1
@.str.264 = private unnamed_addr constant [42 x i8] c"Number of threads must be greater than 0\0A\00", align 1
@.str.265 = private unnamed_addr constant [133 x i8] c"WARNING: Setting a high number of workerthreads is not recommended.\0A Set this value to the number of cores in your machine or less.\0A\00", align 1
@.str.266 = private unnamed_addr constant [24 x i8] c"No delimiter specified\0A\00", align 1
@.str.267 = private unnamed_addr constant [83 x i8] c"Cannot enable large pages on this system\0A(There is no support as of this version)\0A\00", align 1
@.str.268 = private unnamed_addr constant [5 x i8] c"auto\00", align 1
@.str.269 = private unnamed_addr constant [84 x i8] c"Invalid value for binding protocol: %s\0A -- should be one of auto, binary, or ascii\0A\00", align 1
@.str.270 = private unnamed_addr constant [45 x i8] c"This server is not built with SASL support.\0A\00", align 1
@.str.271 = private unnamed_addr constant [51 x i8] c"Maximum number of NAPI IDs must be greater than 0\0A\00", align 1
@.str.272 = private unnamed_addr constant [40 x i8] c"Missing numeric argument for hashpower\0A\00", align 1
@.str.273 = private unnamed_addr constant [47 x i8] c"Initial hashtable multiplier of %d is too low\0A\00", align 1
@.str.274 = private unnamed_addr constant [120 x i8] c"Initial hashtable multiplier of %d is too high\0AChoose a value based on \22STAT hash_power_level\22 from a running instance\0A\00", align 1
@.str.275 = private unnamed_addr constant [39 x i8] c"slab_automove must be between 0 and 2\0A\00", align 1
@.str.276 = private unnamed_addr constant [38 x i8] c"Missing slab_automove_ratio argument\0A\00", align 1
@.str.277 = private unnamed_addr constant [41 x i8] c"slab_automove_ratio must be > 0 and < 1\0A\00", align 1
@.str.278 = private unnamed_addr constant [39 x i8] c"Missing slab_automove_window argument\0A\00", align 1
@.str.279 = private unnamed_addr constant [34 x i8] c"slab_automove_window must be > 2\0A\00", align 1
@.str.280 = private unnamed_addr constant [47 x i8] c"Missing numeric argument for tail_repair_time\0A\00", align 1
@.str.281 = private unnamed_addr constant [53 x i8] c"Cannot set tail_repair_time to less than 10 seconds\0A\00", align 1
@.str.282 = private unnamed_addr constant [33 x i8] c"Missing hash_algorithm argument\0A\00", align 1
@.str.283 = private unnamed_addr constant [8 x i8] c"jenkins\00", align 1
@.str.284 = private unnamed_addr constant [8 x i8] c"murmur3\00", align 1
@.str.285 = private unnamed_addr constant [5 x i8] c"xxh3\00", align 1
@.str.286 = private unnamed_addr constant [56 x i8] c"Unknown hash_algorithm option (jenkins, murmur3, xxh3)\0A\00", align 1
@.str.287 = private unnamed_addr constant [33 x i8] c"Missing lru_crawler_sleep value\0A\00", align 1
@.str.288 = private unnamed_addr constant [50 x i8] c"LRU crawler sleep must be between 0 and 1 second\0A\00", align 1
@.str.289 = private unnamed_addr constant [35 x i8] c"Missing lru_crawler_tocrawl value\0A\00", align 1
@.str.290 = private unnamed_addr constant [49 x i8] c"lru_crawler_tocrawl takes a numeric 32bit value\0A\00", align 1
@.str.291 = private unnamed_addr constant [30 x i8] c"Missing hot_lru_pct argument\0A\00", align 1
@.str.292 = private unnamed_addr constant [34 x i8] c"hot_lru_pct must be > 1 and < 80\0A\00", align 1
@.str.293 = private unnamed_addr constant [31 x i8] c"Missing warm_lru_pct argument\0A\00", align 1
@.str.294 = private unnamed_addr constant [35 x i8] c"warm_lru_pct must be > 1 and < 80\0A\00", align 1
@.str.295 = private unnamed_addr constant [33 x i8] c"Missing hot_max_factor argument\0A\00", align 1
@.str.296 = private unnamed_addr constant [28 x i8] c"hot_max_factor must be > 0\0A\00", align 1
@.str.297 = private unnamed_addr constant [34 x i8] c"Missing warm_max_factor argument\0A\00", align 1
@.str.298 = private unnamed_addr constant [29 x i8] c"warm_max_factor must be > 0\0A\00", align 1
@.str.299 = private unnamed_addr constant [32 x i8] c"Missing temporary_ttl argument\0A\00", align 1
@.str.300 = private unnamed_addr constant [43 x i8] c"Missing numeric argument for idle_timeout\0A\00", align 1
@.str.301 = private unnamed_addr constant [38 x i8] c"Missing watcher_logbuf_size argument\0A\00", align 1
@.str.302 = private unnamed_addr constant [49 x i8] c"could not parse argument to watcher_logbuf_size\0A\00", align 1
@.str.303 = private unnamed_addr constant [37 x i8] c"Missing worker_logbuf_size argument\0A\00", align 1
@.str.304 = private unnamed_addr constant [48 x i8] c"could not parse argument to worker_logbuf_size\0A\00", align 1
@.str.305 = private unnamed_addr constant [33 x i8] c"Missing slab_chunk_max argument\0A\00", align 1
@.str.306 = private unnamed_addr constant [44 x i8] c"could not parse argument to slab_chunk_max\0A\00", align 1
@.str.307 = private unnamed_addr constant [72 x i8] c"DEPRECATED: resp_obj_mem_limit no longer used. See read_buf_mem_limit,\0A\00", align 1
@.str.308 = private unnamed_addr constant [37 x i8] c"Missing read_buf_mem_limit argument\0A\00", align 1
@.str.309 = private unnamed_addr constant [48 x i8] c"could not parse argument to read_buf_mem_limit\0A\00", align 1
@.str.310 = private unnamed_addr constant [23 x i8] c"Illegal argument \22%c\22\0A\00", align 1
@.str.311 = private unnamed_addr constant [69 x i8] c"Number of napi_ids(%d) cannot be greater than number of threads(%d)\0A\00", align 1
@.str.312 = private unnamed_addr constant [47 x i8] c"Item max size cannot be less than 1024 bytes.\0A\00", align 1
@.str.313 = private unnamed_addr constant [59 x i8] c"Cannot set item size limit higher than 1/2 of memory max.\0A\00", align 1
@.str.314 = private unnamed_addr constant [52 x i8] c"Cannot set item size limit higher than a gigabyte.\0A\00", align 1
@.str.315 = private unnamed_addr constant [72 x i8] c"slab_chunk_max (bytes: %d) cannot be larger than -I (item_size_max %d)\0A\00", align 1
@.str.316 = private unnamed_addr constant [79 x i8] c"-I (item_size_max: %d) must be evenly divisible by slab_chunk_max (bytes: %d)\0A\00", align 1
@.str.317 = private unnamed_addr constant [72 x i8] c"slab_chunk_max (bytes: %d) must divide evenly into %d (slab_page_size)\0A\00", align 1
@.str.318 = private unnamed_addr constant [5 x i8] c"1.25\00", align 1
@.str.319 = private unnamed_addr constant [62 x i8] c"hot_lru_pct + warm_lru_pct cannot be more than 80%% combined\0A\00", align 1
@.str.320 = private unnamed_addr constant [53 x i8] c"temporary_ttl requires lru_maintainer to be enabled\0A\00", align 1
@.str.321 = private unnamed_addr constant [38 x i8] c"Failed to initialize hash_algorithm!\0A\00", align 1
@.str.322 = private unnamed_addr constant [62 x i8] c"ERROR: You cannot allow the ASCII protocol while using SASL.\0A\00", align 1
@.str.323 = private unnamed_addr constant [66 x i8] c"ERROR: Cannot enable UDP while using binary SASL authentication.\0A\00", align 1
@.str.324 = private unnamed_addr constant [86 x i8] c"ERROR: You cannot allow the BINARY protocol while using ascii authentication tokens.\0A\00", align 1
@.str.325 = private unnamed_addr constant [36 x i8] c"failed to ensure corefile creation\0A\00", align 1
@.str.326 = private unnamed_addr constant [37 x i8] c"failed to getrlimit number of files\0A\00", align 1
@.str.327 = private unnamed_addr constant [97 x i8] c"failed to set rlimit for open files. Try starting as root or requesting smaller maxconns value.\0A\00", align 1
@.str.328 = private unnamed_addr constant [41 x i8] c"can't run as root without the -u switch\0A\00", align 1
@.str.329 = private unnamed_addr constant [37 x i8] c"can't find the user %s to switch to\0A\00", align 1
@.str.330 = private unnamed_addr constant [41 x i8] c"failed to drop supplementary groups: %s\0A\00", align 1
@.str.331 = private unnamed_addr constant [38 x i8] c"failed to assume identity of user %s\0A\00", align 1
@.str.332 = private unnamed_addr constant [24 x i8] c"Failed to ignore SIGHUP\00", align 1
@.str.333 = private unnamed_addr constant [42 x i8] c"failed to daemon() in order to daemonize\0A\00", align 1
@.str.334 = private unnamed_addr constant [44 x i8] c"warning: -k invalid, mlockall() failed: %s\0A\00", align 1
@.str.335 = private unnamed_addr constant [68 x i8] c"Cannot use UDP with ascii authentication enabled (-U 0 to disable)\0A\00", align 1
@.str.336 = private unnamed_addr constant [39 x i8] c"Could not stat authfile [%s], error %s\00", align 1
@.str.337 = private unnamed_addr constant [51 x i8] c"Could not open authfile [%s] for reading, error %s\00", align 1
@.str.338 = private unnamed_addr constant [40 x i8] c"Out of memory reading password file: %s\00", align 1
@.str.339 = private unnamed_addr constant [63 x i8] c"Authfile [%s] has a malformed entry. Should be 'user:password'\00", align 1
@.str.340 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@.str.341 = private unnamed_addr constant [65 x i8] c"[restart] memory restart with extstore not presently supported.\0A\00", align 1
@.str.342 = private unnamed_addr constant [36 x i8] c"failed to ignore SIGPIPE; sigaction\00", align 1
@.str.343 = private unnamed_addr constant [37 x i8] c"Failed to enable LRU crawler thread\0A\00", align 1
@.str.344 = private unnamed_addr constant [43 x i8] c"Failed to start storage compaction thread\0A\00", align 1
@.str.345 = private unnamed_addr constant [39 x i8] c"Failed to start storage writer thread\0A\00", align 1
@.str.346 = private unnamed_addr constant [40 x i8] c"Failed to enable LRU maintainer thread\0A\00", align 1
@monotonic = internal global i8 0, align 1
@monotonic_start = internal global i64 0, align 8
@.str.347 = private unnamed_addr constant [36 x i8] c"failed to listen on UNIX socket: %s\00", align 1
@.str.348 = private unnamed_addr constant [24 x i8] c"MEMCACHED_PORT_FILENAME\00", align 1
@.str.349 = private unnamed_addr constant [7 x i8] c"%s.lck\00", align 1
@.str.350 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@.str.351 = private unnamed_addr constant [25 x i8] c"Failed to open \22%s\22: %s\0A\00", align 1
@.str.352 = private unnamed_addr constant [32 x i8] c"failed to listen on TCP port %d\00", align 1
@.str.353 = private unnamed_addr constant [43 x i8] c"failed to listen on one of interface(s) %s\00", align 1
@.str.354 = private unnamed_addr constant [32 x i8] c"failed to listen on UDP port %d\00", align 1
@.str.355 = private unnamed_addr constant [50 x i8] c"Maxconns setting is too low, use -c to increase.\0A\00", align 1
@stop_main_loop = internal global i32 0, align 4
@.str.356 = private unnamed_addr constant [21 x i8] c"Gracefully stopping\0A\00", align 1
@.str.357 = private unnamed_addr constant [18 x i8] c"Exiting on error\0A\00", align 1
@.str.507 = private unnamed_addr constant [33 x i8] c"Could not remove the pid file %s\00", align 1
@.str.499 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.500 = private unnamed_addr constant [65 x i8] c"WARNING: The pid file contained the following (running) pid: %u\0A\00", align 1
@.str.501 = private unnamed_addr constant [7 x i8] c"%s.tmp\00", align 1
@.str.502 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.503 = private unnamed_addr constant [43 x i8] c"Could not open the pid file %s for writing\00", align 1
@.str.504 = private unnamed_addr constant [5 x i8] c"%ld\0A\00", align 1
@.str.505 = private unnamed_addr constant [32 x i8] c"Could not close the pid file %s\00", align 1
@.str.506 = private unnamed_addr constant [44 x i8] c"Could not rename the pid file from %s to %s\00", align 1
@.str.483 = private unnamed_addr constant [63 x i8] c"Failed to allocate memory for parsing server interface string\0A\00", align 1
@.str.484 = private unnamed_addr constant [3 x i8] c";,\00", align 1
@.str.485 = private unnamed_addr constant [27 x i8] c"Invalid IPV6 address: \22%s\22\00", align 1
@.str.486 = private unnamed_addr constant [26 x i8] c"Invalid port number: \22%s\22\00", align 1
@.str.487 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@.str.488 = private unnamed_addr constant [19 x i8] c"getaddrinfo(): %s\0A\00", align 1
@.str.489 = private unnamed_addr constant [14 x i8] c"getaddrinfo()\00", align 1
@.str.490 = private unnamed_addr constant [14 x i8] c"server_socket\00", align 1
@.str.491 = private unnamed_addr constant [40 x i8] c"-N <num_napi_ids> option not supported\0A\00", align 1
@.str.492 = private unnamed_addr constant [11 x i8] c"setsockopt\00", align 1
@.str.479 = private unnamed_addr constant [7 x i8] c"bind()\00", align 1
@.str.480 = private unnamed_addr constant [9 x i8] c"listen()\00", align 1
@.str.494 = private unnamed_addr constant [4 x i8] c"TCP\00", align 1
@.str.493 = private unnamed_addr constant [13 x i8] c"%s INET: %u\0A\00", align 1
@.str.495 = private unnamed_addr constant [14 x i8] c"%s INET6: %u\0A\00", align 1
@.str.496 = private unnamed_addr constant [36 x i8] c"Failed to duplicate file descriptor\00", align 1
@.str.481 = private unnamed_addr constant [39 x i8] c"failed to create listening connection\0A\00", align 1
@.str.497 = private unnamed_addr constant [22 x i8] c"getsockopt(SO_SNDBUF)\00", align 1
@.str.498 = private unnamed_addr constant [32 x i8] c"<%d send buffer was %d, now %d\0A\00", align 1
@.str.482 = private unnamed_addr constant [9 x i8] c"socket()\00", align 1
@__const.clock_handler.t = private unnamed_addr constant %struct.timeval { i64 1, i64 0 }, align 8
@clock_handler.initialized = internal global i8 0, align 1
@clockevent = internal global %struct.event zeroinitializer, align 8
@.str.475 = private unnamed_addr constant [49 x i8] c"Can't create idle connection timeout thread: %s\0A\00", align 1
@.str.476 = private unnamed_addr constant [47 x i8] c"idle timeout thread at top of connection list\0A\00", align 1
@.str.477 = private unnamed_addr constant [40 x i8] c"idle timeout thread sleeping for %ulus\0A\00", align 1
@.str.478 = private unnamed_addr constant [53 x i8] c"idle timeout thread finished pass, sleeping for %ds\0A\00", align 1
@.str.458 = private unnamed_addr constant [12 x i8] c"slab_config\00", align 1
@.str.456 = private unnamed_addr constant [20 x i8] c"slab_chunk_size_max\00", align 1
@.str.457 = private unnamed_addr constant [15 x i8] c"slab_page_size\00", align 1
@.str.469 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@.str.468 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@.str.459 = private unnamed_addr constant [8 x i8] c"use_cas\00", align 1
@.str.464 = private unnamed_addr constant [13 x i8] c"current_time\00", align 1
@.str.466 = private unnamed_addr constant [16 x i8] c"process_started\00", align 1
@.str.465 = private unnamed_addr constant [10 x i8] c"stop_time\00", align 1
@.str.460 = private unnamed_addr constant [12 x i8] c"current_cas\00", align 1
@.str.461 = private unnamed_addr constant [11 x i8] c"oldest_cas\00", align 1
@.str.463 = private unnamed_addr constant [11 x i8] c"logger_gid\00", align 1
@.str.203 = private unnamed_addr constant [10 x i8] c"hashpower\00", align 1
@.str.462 = private unnamed_addr constant [12 x i8] c"oldest_live\00", align 1
@.str.455 = private unnamed_addr constant [13 x i8] c"mmap_oldbase\00", align 1
@.str.474 = private unnamed_addr constant [3 x i8] c"%p\00", align 1
@__const._mc_meta_load_cb.opts = private unnamed_addr constant [18 x i8*] [i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.455, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.112, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.131, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.456, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.457, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.458, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.459, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.146, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.460, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.461, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.462, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.463, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.464, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.465, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.466, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.203, i32 0, i32 0), i8* null], align 16
@.str.467 = private unnamed_addr constant [37 x i8] c"[restart] unknown/unhandled key: %s\0A\00", align 1
@.str.470 = private unnamed_addr constant [34 x i8] c"[restart] failed to parse %s: %s\0A\00", align 1
@.str.471 = private unnamed_addr constant [29 x i8] c"[restart] unhandled key: %s\0A\00", align 1
@.str.472 = private unnamed_addr constant [72 x i8] c"[restart] restart incompatible due to setting for [%s] [old value: %s]\0A\00", align 1
@.str.473 = private unnamed_addr constant [39 x i8] c"[restart] missing some metadata lines\0A\00", align 1
@.str.452 = private unnamed_addr constant [37 x i8] c"Failed to duplicate file descriptor\0A\00", align 1
@.str.453 = private unnamed_addr constant [67 x i8] c"Failed to query maximum file descriptor; falling back to maxconns\0A\00", align 1
@.str.454 = private unnamed_addr constant [42 x i8] c"Failed to allocate connection structures\0A\00", align 1
@.str.447 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.448 = private unnamed_addr constant [36 x i8] c"slab size %u is out of valid range\0A\00", align 1
@.str.449 = private unnamed_addr constant [69 x i8] c"slab size %u cannot be lower than or equal to a previous class size\0A\00", align 1
@.str.450 = private unnamed_addr constant [67 x i8] c"slab size %u must be at least %d bytes larger than previous class\0A\00", align 1
@.str.451 = private unnamed_addr constant [33 x i8] c"too many slab classes specified\0A\00", align 1
@enable_large_pages.mm_thp_paths = internal global [3 x i8*] [i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.440, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.441, i32 0, i32 0), i8* null], align 16
@.str.442 = private unnamed_addr constant [46 x i8] c"Transparent huge pages support not detected.\0A\00", align 1
@.str.443 = private unnamed_addr constant [29 x i8] c"Will use default page size.\0A\00", align 1
@.str.444 = private unnamed_addr constant [58 x i8] c"Transparent huge pages could not read the configuration.\0A\00", align 1
@.str.445 = private unnamed_addr constant [8 x i8] c"[never]\00", align 1
@.str.446 = private unnamed_addr constant [42 x i8] c"Transparent huge pages support disabled.\0A\00", align 1
@.str.440 = private unnamed_addr constant [44 x i8] c"/sys/kernel/mm/transparent_hugepage/enabled\00", align 1
@.str.441 = private unnamed_addr constant [51 x i8] c"/sys/kernel/mm/redhat_transparent_hugepage/enabled\00", align 1
@.str.438 = private unnamed_addr constant [19 x i8] c"memcached 1.6.15\0A\0A\00", align 1
@.str.439 = private unnamed_addr constant [3203 x i8] c"Copyright (c) 2003, Danga Interactive, Inc. <http://www.danga.com/>\0AAll rights reserved.\0A\0ARedistribution and use in source and binary forms, with or without\0Amodification, are permitted provided that the following conditions are\0Amet:\0A\0A    * Redistributions of source code must retain the above copyright\0Anotice, this list of conditions and the following disclaimer.\0A\0A    * Redistributions in binary form must reproduce the above\0Acopyright notice, this list of conditions and the following disclaimer\0Ain the documentation and/or other materials provided with the\0Adistribution.\0A\0A    * Neither the name of the Danga Interactive nor the names of its\0Acontributors may be used to endorse or promote products derived from\0Athis software without specific prior written permission.\0A\0ATHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\0A\22AS IS\22 AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\0ALIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\0AA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\0AOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\0ASPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\0ALIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\0ADATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\0ATHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\0A(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\0AOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\0A\0A\0AThis product includes software developed by Niels Provos.\0A\0A[ libevent ]\0A\0ACopyright 2000-2003 Niels Provos <provos@citi.umich.edu>\0AAll rights reserved.\0A\0ARedistribution and use in source and binary forms, with or without\0Amodification, are permitted provided that the following conditions\0Aare met:\0A1. Redistributions of source code must retain the above copyright\0A   notice, this list of conditions and the following disclaimer.\0A2. Redistributions in binary form must reproduce the above copyright\0A   notice, this list of conditions and the following disclaimer in the\0A   documentation and/or other materials provided with the distribution.\0A3. All advertising materials mentioning features or use of this software\0A   must display the following acknowledgement:\0A      This product includes software developed by Niels Provos.\0A4. The name of the author may not be used to endorse or promote products\0A   derived from this software without specific prior written permission.\0A\0ATHIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\0AIMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\0AOF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\0AIN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\0AINCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\0ANOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\0ADATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\0ATHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\0A(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\0ATHIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\0A\00", align 1
@.str.410 = private unnamed_addr constant [130 x i8] c"-p, --port=<num>          TCP port to listen on (default: %d)\0A-U, --udp-port=<num>      UDP port to listen on (default: %d, off)\0A\00", align 1
@.str.411 = private unnamed_addr constant [79 x i8] c"-s, --unix-socket=<file>  UNIX socket to listen on (disables network support)\0A\00", align 1
@.str.412 = private unnamed_addr constant [79 x i8] c"-a, --unix-mask=<mask>    access mask for UNIX socket, in octal (default: %o)\0A\00", align 1
@.str.413 = private unnamed_addr constant [59 x i8] c"-A, --enable-shutdown     enable ascii \22shutdown\22 command\0A\00", align 1
@.str.414 = private unnamed_addr constant [72 x i8] c"-l, --listen=<addr>       interface to listen on (default: INADDR_ANY)\0A\00", align 1
@.str.415 = private unnamed_addr constant [1054 x i8] c"-d, --daemon              run as a daemon\0A-r, --enable-coredumps    maximize core file limit\0A-u, --user=<user>         assume identity of <username> (only when run as root)\0A-m, --memory-limit=<num>  item memory in megabytes (default: %lu)\0A-M, --disable-evictions   return error on memory exhausted instead of evicting\0A-c, --conn-limit=<num>    max simultaneous connections (default: %d)\0A-k, --lock-memory         lock down all paged memory\0A-v, --verbose             verbose (print errors/warnings while in event loop)\0A-vv                       very verbose (also print client commands/responses)\0A-vvv                      extremely verbose (internal state transitions)\0A-h, --help                print this help and exit\0A-i, --license             print memcached and libevent license\0A-V, --version             print version and exit\0A-P, --pidfile=<file>      save PID in <file>, only used with -d option\0A-f, --slab-growth-factor=<num> chunk size growth factor (default: %2.2f)\0A-n, --slab-min-size=<bytes> min space used for key+value+flags (default: %d)\0A\00", align 1
@.str.228 = private unnamed_addr constant [9 x i8] c"udp-port\00", align 1
@.str.416 = private unnamed_addr constant [71 x i8] c"-L, --enable-largepages  try to use large memory pages (if available)\0A\00", align 1
@.str.417 = private unnamed_addr constant [366 x i8] c"-D <char>     Use <char> as the delimiter between key prefixes and IDs.\0A              This is used for per-prefix stats reporting. The default is\0A              \22%c\22 (colon). If this option is specified, stats collection\0A              is turned on automatically; if not, then it may be turned on\0A              by sending the \22stats detail on\22 command to the server.\0A\00", align 1
@.str.418 = private unnamed_addr constant [66 x i8] c"-t, --threads=<num>       number of threads to use (default: %d)\0A\00", align 1
@.str.419 = private unnamed_addr constant [199 x i8] c"-R, --max-reqs-per-event  maximum number of requests per event, limits the\0A                          requests processed per connection to prevent \0A                          starvation (default: %d)\0A\00", align 1
@.str.420 = private unnamed_addr constant [46 x i8] c"-C, --disable-cas         disable use of CAS\0A\00", align 1
@.str.421 = private unnamed_addr constant [70 x i8] c"-b, --listen-backlog=<num> set the backlog queue limit (default: %d)\0A\00", align 1
@.str.422 = private unnamed_addr constant [82 x i8] c"-B, --protocol=<name>     protocol - one of ascii, binary, or auto (default: %s)\0A\00", align 1
@.str.423 = private unnamed_addr constant [110 x i8] c"-I, --max-item-size=<num> adjusts max item size\0A                          (default: %dm, min: %dk, max: %dm)\0A\00", align 1
@.str.424 = private unnamed_addr constant [53 x i8] c"-F, --disable-flush-all   disable flush_all command\0A\00", align 1
@.str.425 = private unnamed_addr constant [76 x i8] c"-X, --disable-dumping     disable stats cachedump and lru_crawler metadump\0A\00", align 1
@.str.426 = private unnamed_addr constant [65 x i8] c"-W  --disable-watch       disable watch commands (live logging)\0A\00", align 1
@.str.427 = private unnamed_addr constant [139 x i8] c"-Y, --auth-file=<file>    (EXPERIMENTAL) enable ASCII protocol authentication. format:\0A                          user:pass\\nuser2:pass2\\n\0A\00", align 1
@.str.428 = private unnamed_addr constant [220 x i8] c"-e, --memory-file=<file>  (EXPERIMENTAL) mmap a file for item memory.\0A                          use only in ram disks or persistent memory mounts!\0A                          enables restartable cache (stop with SIGUSR1)\0A\00", align 1
@.str.429 = private unnamed_addr constant [1068 x i8] c"-o, --extended            comma separated list of extended options\0A                          most options have a 'no_' prefix to disable\0A   - maxconns_fast:       immediately close new connections after limit (default: %s)\0A   - hashpower:           an integer multiplier for how large the hash\0A                          table should be. normally grows at runtime. (default starts at: %d)\0A                          set based on \22STAT hash_power_level\22\0A   - tail_repair_time:    time in seconds for how long to wait before\0A                          forcefully killing LRU tail item.\0A                          disabled by default; very dangerous option.\0A   - hash_algorithm:      the hash table algorithm\0A                          default is murmur3 hash. options: jenkins, murmur3, xxh3\0A   - no_lru_crawler:      disable LRU Crawler background thread.\0A   - lru_crawler_sleep:   microseconds to sleep between items\0A                          default is %d.\0A   - lru_crawler_tocrawl: max items to crawl per slab per run\0A                          default is %u (unlimited)\0A\00", align 1
@.str.430 = private unnamed_addr constant [224 x i8] c"   - read_buf_mem_limit:  limit in megabytes for connection read/response buffers.\0A                          do not adjust unless you have high (20k+) conn. limits.\0A                          0 means unlimited (default: %u)\0A\00", align 1
@.str.431 = private unnamed_addr constant [749 x i8] c"   - no_lru_maintainer:   disable new LRU system + background thread.\0A   - hot_lru_pct:         pct of slab memory to reserve for hot lru.\0A                          (requires lru_maintainer, default pct: %d)\0A   - warm_lru_pct:        pct of slab memory to reserve for warm lru.\0A                          (requires lru_maintainer, default pct: %d)\0A   - hot_max_factor:      items idle > cold lru age * drop from hot lru. (default: %.2f)\0A   - warm_max_factor:     items idle > cold lru age * this drop from warm. (default: %.2f)\0A   - temporary_ttl:       TTL's below get separate LRU, can't be evicted.\0A                          (requires lru_maintainer, default: %d)\0A   - idle_timeout:        timeout for idle connections. (default: %d, no timeout)\0A\00", align 1
@.str.432 = private unnamed_addr constant [696 x i8] c"   - slab_chunk_max:      (EXPERIMENTAL) maximum slab size in kilobytes. use extreme care. (default: %d)\0A   - watcher_logbuf_size: size in kilobytes of per-watcher write buffer. (default: %u)\0A   - worker_logbuf_size:  size in kilobytes of per-worker-thread buffer\0A                          read by background thread, then written to watchers. (default: %u)\0A   - track_sizes:         enable dynamic reports for 'stats sizes' command.\0A   - no_hashexpand:       disables hash table expansion (dangerous)\0A   - modern:              enables options which will be default in future.\0A                          currently: nothing\0A   - no_modern:           uses defaults of previous major version (1.4.x)\0A\00", align 1
@.str.433 = private unnamed_addr constant [86 x i8] c"\0A   - External storage (ext_*) related options (see: https://memcached.org/extstore)\0A\00", align 1
@.str.434 = private unnamed_addr constant [1352 x i8] c"   - ext_path:            file to write to for external storage.\0A                          ie: ext_path=/mnt/d1/extstore:1G\0A   - ext_page_size:       size in megabytes of storage pages. (default: %u)\0A   - ext_wbuf_size:       size in megabytes of page write buffers. (default: %u)\0A   - ext_threads:         number of IO threads to run. (default: %u)\0A   - ext_item_size:       store items larger than this (bytes, default %u)\0A   - ext_item_age:        store items idle at least this long (seconds, default: no age limit)\0A   - ext_low_ttl:         consider TTLs lower than this specially (default: %u)\0A   - ext_drop_unread:     don't re-write unread values during compaction (default: %s)\0A   - ext_recache_rate:    recache an item every N accesses (default: %u)\0A   - ext_compact_under:   compact when fewer than this many free pages\0A                          (default: 1/4th of the assigned storage)\0A   - ext_drop_under:      drop COLD items when fewer than this many free pages\0A                          (default: 1/4th of the assigned storage)\0A   - ext_max_frag:        max page fragmentation to tolerate (default: %.2f)\0A   - ext_max_sleep:       max sleep time of background threads in us (default: %u)\0A   - slab_automove_freeratio: ratio of memory to hold free as buffer.\0A                          (see doc/storage.txt for more info, default: %.3f)\0A\00", align 1
@.str.435 = private unnamed_addr constant [85 x i8] c"-N, --napi_ids            number of napi ids. see doc/napi_ids.txt for more details\0A\00", align 1
@.str.436 = private unnamed_addr constant [8 x i8] c"enabled\00", align 1
@.str.437 = private unnamed_addr constant [9 x i8] c"disabled\00", align 1
@.str.223 = private unnamed_addr constant [10 x i8] c"unix-mask\00", align 1
@.str.224 = private unnamed_addr constant [16 x i8] c"enable-shutdown\00", align 1
@.str.225 = private unnamed_addr constant [11 x i8] c"enable-ssl\00", align 1
@.str.226 = private unnamed_addr constant [5 x i8] c"port\00", align 1
@.str.227 = private unnamed_addr constant [12 x i8] c"unix-socket\00", align 1
@.str.229 = private unnamed_addr constant [13 x i8] c"memory-limit\00", align 1
@.str.230 = private unnamed_addr constant [18 x i8] c"disable-evictions\00", align 1
@.str.231 = private unnamed_addr constant [11 x i8] c"conn-limit\00", align 1
@.str.232 = private unnamed_addr constant [12 x i8] c"lock-memory\00", align 1
@.str.233 = private unnamed_addr constant [5 x i8] c"help\00", align 1
@.str.234 = private unnamed_addr constant [8 x i8] c"license\00", align 1
@.str.235 = private unnamed_addr constant [17 x i8] c"enable-coredumps\00", align 1
@.str.236 = private unnamed_addr constant [8 x i8] c"verbose\00", align 1
@.str.237 = private unnamed_addr constant [7 x i8] c"daemon\00", align 1
@.str.238 = private unnamed_addr constant [5 x i8] c"user\00", align 1
@.str.239 = private unnamed_addr constant [8 x i8] c"pidfile\00", align 1
@.str.240 = private unnamed_addr constant [19 x i8] c"slab-growth-factor\00", align 1
@.str.241 = private unnamed_addr constant [14 x i8] c"slab-min-size\00", align 1
@.str.242 = private unnamed_addr constant [18 x i8] c"enable-largepages\00", align 1
@.str.243 = private unnamed_addr constant [19 x i8] c"max-reqs-per-event\00", align 1
@.str.244 = private unnamed_addr constant [12 x i8] c"disable-cas\00", align 1
@.str.245 = private unnamed_addr constant [15 x i8] c"listen-backlog\00", align 1
@.str.246 = private unnamed_addr constant [9 x i8] c"protocol\00", align 1
@.str.247 = private unnamed_addr constant [14 x i8] c"max-item-size\00", align 1
@.str.248 = private unnamed_addr constant [12 x i8] c"enable-sasl\00", align 1
@.str.249 = private unnamed_addr constant [18 x i8] c"disable-flush-all\00", align 1
@.str.250 = private unnamed_addr constant [16 x i8] c"disable-dumping\00", align 1
@.str.251 = private unnamed_addr constant [14 x i8] c"disable-watch\00", align 1
@.str.252 = private unnamed_addr constant [10 x i8] c"auth-file\00", align 1
@.str.253 = private unnamed_addr constant [12 x i8] c"memory-file\00", align 1
@.str.254 = private unnamed_addr constant [9 x i8] c"extended\00", align 1
@.str.255 = private unnamed_addr constant [9 x i8] c"napi-ids\00", align 1
@.str.409 = private unnamed_addr constant [82 x i8] c"Default value of [%s] has changed. Modify the help text and default value check.\0A\00", align 1
@.str.408 = private unnamed_addr constant [39 x i8] c"Graceful shutdown signal handled: %s.\0A\00", align 1
@.str.407 = private unnamed_addr constant [21 x i8] c"Signal handled: %s.\0A\00", align 1
@.str.405 = private unnamed_addr constant [3 x i8] c"1.\00", align 1
@.str.406 = private unnamed_addr constant [59 x i8] c"You are using libevent %s.\0APlease upgrade to 2.x or newer\0A\00", align 1
@.str.204 = private unnamed_addr constant [14 x i8] c"no_hashexpand\00", align 1
@.str.205 = private unnamed_addr constant [15 x i8] c"lru_maintainer\00", align 1
@.str.206 = private unnamed_addr constant [11 x i8] c"slab_sizes\00", align 1
@.str.207 = private unnamed_addr constant [21 x i8] c"no_inline_ascii_resp\00", align 1
@.str.208 = private unnamed_addr constant [7 x i8] c"modern\00", align 1
@.str.209 = private unnamed_addr constant [10 x i8] c"no_modern\00", align 1
@.str.210 = private unnamed_addr constant [17 x i8] c"no_chunked_items\00", align 1
@.str.211 = private unnamed_addr constant [17 x i8] c"no_slab_reassign\00", align 1
@.str.212 = private unnamed_addr constant [17 x i8] c"no_slab_automove\00", align 1
@.str.213 = private unnamed_addr constant [17 x i8] c"no_maxconns_fast\00", align 1
@.str.214 = private unnamed_addr constant [18 x i8] c"inline_ascii_resp\00", align 1
@.str.215 = private unnamed_addr constant [15 x i8] c"no_lru_crawler\00", align 1
@.str.216 = private unnamed_addr constant [18 x i8] c"no_lru_maintainer\00", align 1
@.str.217 = private unnamed_addr constant [19 x i8] c"no_drop_privileges\00", align 1
@.str.218 = private unnamed_addr constant [16 x i8] c"drop_privileges\00", align 1
@.str.219 = private unnamed_addr constant [19 x i8] c"resp_obj_mem_limit\00", align 1
@.str.220 = private unnamed_addr constant [18 x i8] c"meta_response_old\00", align 1
@hash = dso_local global i32 (i8*, i64)* null, align 8
@.str.508 = private unnamed_addr constant [8 x i8] c"jenkins\00", align 1
@.str.1.509 = private unnamed_addr constant [8 x i8] c"murmur3\00", align 1
@.str.2.510 = private unnamed_addr constant [5 x i8] c"xxh3\00", align 1
@XXH3_kSecret = internal constant [192 x i8] c"\B8\FEl9#\A4K\BE|\01\81,\F7!\AD\1C\DE\D4m\E9\83\90\97\DBr@\A4\A4\B7\B3g\1F\CBy\E6N\CC\C0\E5x\82Z\D0}\CC\FFr!\B8\08Ft\F7C$\8E\E05\90\E6\81:&L<(R\BB\91\C3\00\CB\88\D0e\8B\1BS.\A3qdH\97\A2\0D\F9N8\19\EFF\A9\DE\AC\D8\A8\FAv?\E3\9C4?\F9\DC\BB\C7\C7\0BO\1D\8AQ\E0K\CD\B4Y1\C8\9F~\C9\D9xsd\EA\C5\AC\834\D3\EB\C3\C5\81\A0\FF\FA\13c\EB\17\0D\DDQ\B7\F0\DAI\D3\16U&)\D4h\9E+\16\BEX}G\A1\FC\8F\F8\B8\D1z\D01\CEE\CB:\8F\95\16\04(\AF\D7\FB\CA\BBK@~", align 64
@__const.XXH3_hashLong_64b_internal.acc = private unnamed_addr constant [8 x i64] [i64 3266489917, i64 -7046029288634856825, i64 -4417276706812531889, i64 1609587929392839161, i64 -8796714831421723037, i64 2246822519, i64 2870177450012600261, i64 2654435761], align 16
@storage = internal global i8* null, align 8
@slabclass = internal global [64 x %struct.slabclass_t] zeroinitializer, align 16
@power_largest = internal global i32 0, align 4
@mem_limit = internal global i64 0, align 8
@mem_base = internal global i8* null, align 8
@mem_current = internal global i8* null, align 8
@mem_avail = internal global i64 0, align 8
@.str.519 = private unnamed_addr constant [98 x i8] c"Warning: Failed to allocate requested memory in one large chunk.\0AWill allocate in smaller chunks\0A\00", align 1
@.str.1.520 = private unnamed_addr constant [44 x i8] c"slab class %3d: chunk size %9u perslab %7u\0A\00", align 1
@.str.2.521 = private unnamed_addr constant [22 x i8] c"T_MEMD_INITIAL_MALLOC\00", align 1
@mem_malloced = internal global i64 0, align 8
@.str.12.522 = private unnamed_addr constant [121 x i8] c"Error while preallocating slab memory!\0AIf using -L or other prealloc options, max memory must be at least %d megabytes.\0A\00", align 1
@mem_limit_reached = internal global i8 0, align 1
@.str.4.523 = private unnamed_addr constant [14 x i8] c"/proc/meminfo\00", align 1
@.str.5.524 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.6.525 = private unnamed_addr constant [14 x i8] c"Hugepagesize:\00", align 1
@.str.7.526 = private unnamed_addr constant [5 x i8] c"%zu\0A\00", align 1
@.str.8.527 = private unnamed_addr constant [40 x i8] c"Failed to get supported huge page size\0A\00", align 1
@.str.9.528 = private unnamed_addr constant [21 x i8] c"huge page size: %zu\0A\00", align 1
@.str.10.529 = private unnamed_addr constant [40 x i8] c"Failed to get aligned memory chunk: %d\0A\00", align 1
@.str.11.530 = private unnamed_addr constant [45 x i8] c"Failed to set transparent hugepage hint: %d\0A\00", align 1
@slabs_lock = internal global %union.pthread_mutex_t zeroinitializer, align 8
@.str.13.537 = private unnamed_addr constant [6 x i8] c"%d:%s\00", align 1
@.str.14.538 = private unnamed_addr constant [11 x i8] c"chunk_size\00", align 1
@.str.15.539 = private unnamed_addr constant [3 x i8] c"%u\00", align 1
@.str.16.540 = private unnamed_addr constant [16 x i8] c"chunks_per_page\00", align 1
@.str.17.541 = private unnamed_addr constant [12 x i8] c"total_pages\00", align 1
@.str.18.542 = private unnamed_addr constant [13 x i8] c"total_chunks\00", align 1
@.str.19.543 = private unnamed_addr constant [12 x i8] c"used_chunks\00", align 1
@.str.20.544 = private unnamed_addr constant [12 x i8] c"free_chunks\00", align 1
@.str.21.545 = private unnamed_addr constant [16 x i8] c"free_chunks_end\00", align 1
@.str.22.546 = private unnamed_addr constant [9 x i8] c"get_hits\00", align 1
@.str.23.547 = private unnamed_addr constant [5 x i8] c"%llu\00", align 1
@.str.24.548 = private unnamed_addr constant [8 x i8] c"cmd_set\00", align 1
@.str.25.549 = private unnamed_addr constant [12 x i8] c"delete_hits\00", align 1
@.str.26.550 = private unnamed_addr constant [10 x i8] c"incr_hits\00", align 1
@.str.27.551 = private unnamed_addr constant [10 x i8] c"decr_hits\00", align 1
@.str.28.552 = private unnamed_addr constant [9 x i8] c"cas_hits\00", align 1
@.str.29.553 = private unnamed_addr constant [11 x i8] c"cas_badval\00", align 1
@.str.30.554 = private unnamed_addr constant [11 x i8] c"touch_hits\00", align 1
@.str.31.555 = private unnamed_addr constant [13 x i8] c"active_slabs\00", align 1
@.str.32.556 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.33.557 = private unnamed_addr constant [15 x i8] c"total_malloced\00", align 1
@slabs_rebalance_lock = internal global %union.pthread_mutex_t zeroinitializer, align 8
@slab_rebalance_cond = internal global %union.pthread_cond_t zeroinitializer, align 8
@slabs_reassign_pick_any.cur = internal global i32 0, align 4
@rebalance_tid = internal global i64 0, align 8
@.str.3.560 = private unnamed_addr constant [31 x i8] c"Can't create rebal thread: %s\0A\00", align 1
@do_run_slab_rebalance_thread = internal global i32 1, align 4
@.str.36.561 = private unnamed_addr constant [22 x i8] c"finished a slab move\0A\00", align 1
@.str.35.562 = private unnamed_addr constant [56 x i8] c"Slab reassign hit a busy item: refcount: %d (%d -> %d)\0A\00", align 1
@.str.34.563 = private unnamed_addr constant [26 x i8] c"Started a slab rebalance\0A\00", align 1
@slab_automove_default = dso_local global %struct.slab_automove_reg_t { i8* (%struct.settings*)* @slab_automove_init, void (i8*)* @slab_automove_free, void (i8*, i32*, i32*)* @slab_automove_run }, align 8
@slab_automove_extstore = dso_local global %struct.slab_automove_reg_t { i8* (%struct.settings*)* @slab_automove_extstore_init, void (i8*)* @slab_automove_extstore_free, void (i8*, i32*, i32*)* @slab_automove_extstore_run }, align 8
@itemstats = internal global [256 x %struct.itemstats_t] zeroinitializer, align 16
@cas_id_lock = internal global %union.pthread_mutex_t zeroinitializer, align 8
@cas_id = internal global i64 0, align 8
@sizes = internal global [256 x i32] zeroinitializer, align 16
@tails = internal global [256 x %struct._stritem*] zeroinitializer, align 16
@sizes_bytes = internal global [256 x i64] zeroinitializer, align 16
@heads = internal global [256 x %struct._stritem*] zeroinitializer, align 16
@stats_sizes_hist = internal global i32* null, align 8
@stats_sizes_cas_min = internal global i64 0, align 8
@stats_sizes_buckets = internal global i32 0, align 4
@.str.590 = private unnamed_addr constant [25 x i8] c"ITEM %s [%d b; %llu s]\0D\0A\00", align 1
@.str.1.591 = private unnamed_addr constant [6 x i8] c"END\0D\0A\00", align 1
@lru_type_map = internal global [4 x i32] [i32 0, i32 64, i32 128, i32 192], align 16
@.str.2.594 = private unnamed_addr constant [18 x i8] c"expired_unfetched\00", align 1
@.str.3.595 = private unnamed_addr constant [5 x i8] c"%llu\00", align 1
@.str.4.596 = private unnamed_addr constant [18 x i8] c"evicted_unfetched\00", align 1
@.str.5.597 = private unnamed_addr constant [15 x i8] c"evicted_active\00", align 1
@.str.6.598 = private unnamed_addr constant [10 x i8] c"evictions\00", align 1
@.str.7.599 = private unnamed_addr constant [10 x i8] c"reclaimed\00", align 1
@.str.8.600 = private unnamed_addr constant [18 x i8] c"crawler_reclaimed\00", align 1
@.str.9.601 = private unnamed_addr constant [22 x i8] c"crawler_items_checked\00", align 1
@.str.10.602 = private unnamed_addr constant [18 x i8] c"lrutail_reflocked\00", align 1
@.str.11.603 = private unnamed_addr constant [14 x i8] c"moves_to_cold\00", align 1
@.str.12.604 = private unnamed_addr constant [14 x i8] c"moves_to_warm\00", align 1
@.str.13.605 = private unnamed_addr constant [17 x i8] c"moves_within_lru\00", align 1
@.str.14.606 = private unnamed_addr constant [16 x i8] c"direct_reclaims\00", align 1
@.str.15.607 = private unnamed_addr constant [18 x i8] c"lru_bumps_dropped\00", align 1
@bump_buf_lock = internal global %union.pthread_mutex_t zeroinitializer, align 8
@bump_buf_head = internal global %struct._lru_bump_buf* null, align 8
@.str.16.610 = private unnamed_addr constant [12 x i8] c"items:%d:%s\00", align 1
@.str.17.611 = private unnamed_addr constant [7 x i8] c"number\00", align 1
@.str.18.612 = private unnamed_addr constant [3 x i8] c"%u\00", align 1
@.str.19.613 = private unnamed_addr constant [11 x i8] c"number_hot\00", align 1
@.str.20.614 = private unnamed_addr constant [12 x i8] c"number_warm\00", align 1
@.str.21.615 = private unnamed_addr constant [12 x i8] c"number_cold\00", align 1
@.str.22.616 = private unnamed_addr constant [12 x i8] c"number_temp\00", align 1
@.str.23.617 = private unnamed_addr constant [8 x i8] c"age_hot\00", align 1
@.str.24.618 = private unnamed_addr constant [9 x i8] c"age_warm\00", align 1
@.str.25.619 = private unnamed_addr constant [4 x i8] c"age\00", align 1
@.str.26.620 = private unnamed_addr constant [14 x i8] c"mem_requested\00", align 1
@.str.27.621 = private unnamed_addr constant [8 x i8] c"evicted\00", align 1
@.str.28.622 = private unnamed_addr constant [16 x i8] c"evicted_nonzero\00", align 1
@.str.29.623 = private unnamed_addr constant [13 x i8] c"evicted_time\00", align 1
@.str.30.624 = private unnamed_addr constant [12 x i8] c"outofmemory\00", align 1
@.str.31.625 = private unnamed_addr constant [12 x i8] c"tailrepairs\00", align 1
@.str.32.626 = private unnamed_addr constant [12 x i8] c"hits_to_hot\00", align 1
@.str.33.627 = private unnamed_addr constant [13 x i8] c"hits_to_warm\00", align 1
@.str.34.628 = private unnamed_addr constant [13 x i8] c"hits_to_cold\00", align 1
@.str.35.629 = private unnamed_addr constant [13 x i8] c"hits_to_temp\00", align 1
@stats_sizes_lock = internal global %union.pthread_mutex_t zeroinitializer, align 8
@.str.36.636 = private unnamed_addr constant [13 x i8] c"sizes_status\00", align 1
@.str.37.637 = private unnamed_addr constant [6 x i8] c"error\00", align 1
@.str.38.638 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.39.639 = private unnamed_addr constant [12 x i8] c"sizes_error\00", align 1
@.str.40.640 = private unnamed_addr constant [21 x i8] c"cas_support_disabled\00", align 1
@.str.41.641 = private unnamed_addr constant [8 x i8] c"enabled\00", align 1
@.str.42.642 = private unnamed_addr constant [10 x i8] c"no_memory\00", align 1
@.str.43.645 = private unnamed_addr constant [9 x i8] c"disabled\00", align 1
@.str.44.648 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.45.651 = private unnamed_addr constant [13 x i8] c"> NOT FOUND \00", align 1
@.str.46.652 = private unnamed_addr constant [13 x i8] c"> FOUND KEY \00", align 1
@.str.47.653 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.48.654 = private unnamed_addr constant [17 x i8] c" -nuked by flush\00", align 1
@.str.49.655 = private unnamed_addr constant [18 x i8] c" -nuked by expire\00", align 1
@.str.50.656 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@bump_buf_tail = internal global %struct._lru_bump_buf* null, align 8
@lru_maintainer_lock = internal global %union.pthread_mutex_t zeroinitializer, align 8
@do_run_lru_maintainer_thread = internal global i32 0, align 4
@lru_maintainer_tid = internal global i64 0, align 8
@.str.51.657 = private unnamed_addr constant [42 x i8] c"Failed to stop LRU maintainer thread: %s\0A\00", align 1
@.str.52.660 = private unnamed_addr constant [40 x i8] c"Can't create LRU maintainer thread: %s\0A\00", align 1
@.str.53.661 = private unnamed_addr constant [59 x i8] c"Failed to allocate crawler data for LRU maintainer thread\0A\00", align 1
@.str.54.662 = private unnamed_addr constant [53 x i8] c"Failed to allocate logger for LRU maintainer thread\0A\00", align 1
@.str.55.663 = private unnamed_addr constant [43 x i8] c"Starting LRU maintainer background thread\0A\00", align 1
@.str.56.664 = private unnamed_addr constant [32 x i8] c"LRU maintainer thread stopping\0A\00", align 1
@.str.57.665 = private unnamed_addr constant [3 x i8] c"na\00", align 1
@lru_maintainer_crawler_check.next_crawl_wait = internal global [256 x i32] zeroinitializer, align 16
@lru_maintainer_crawler_check.next_crawls = internal global [256 x i32] zeroinitializer, align 16
@.str.58.666 = private unnamed_addr constant [4 x i8] c"hot\00", align 1
@.str.59.667 = private unnamed_addr constant [5 x i8] c"warm\00", align 1
@.str.60.668 = private unnamed_addr constant [5 x i8] c"cold\00", align 1
@.str.61.669 = private unnamed_addr constant [5 x i8] c"temp\00", align 1
@lru_maintainer_initialized = internal global i32 0, align 4
@hashpower = dso_local global i32 16, align 4
@hash_bulk_move = dso_local global i32 1, align 4
@primary_hashtable = internal global %struct._stritem** null, align 8
@.str.674 = private unnamed_addr constant [27 x i8] c"Failed to init hashtable.\0A\00", align 1
@expanding = internal global i8 0, align 1
@expand_bucket = internal global i64 0, align 8
@old_hashtable = internal global %struct._stritem** null, align 8
@maintenance_lock = internal global %union.pthread_mutex_t zeroinitializer, align 8
@maintenance_cond = internal global %union.pthread_cond_t zeroinitializer, align 8
@.str.1.685 = private unnamed_addr constant [25 x i8] c"MEMCACHED_HASH_BULK_MOVE\00", align 1
@maintenance_tid = internal global i64 0, align 8
@.str.2.686 = private unnamed_addr constant [25 x i8] c"Can't create thread: %s\0A\00", align 1
@do_run_maintenance_thread = internal global i32 1, align 4
@.str.3.687 = private unnamed_addr constant [27 x i8] c"Hash table expansion done\0A\00", align 1
@.str.4.688 = private unnamed_addr constant [31 x i8] c"Hash table expansion starting\0A\00", align 1
@conn_lock = dso_local global %union.pthread_mutex_t zeroinitializer, align 8
@item_lock_hashpower = dso_local global i32 0, align 4
@lru_locks = dso_local global [256 x %union.pthread_mutex_t] zeroinitializer, align 16
@item_locks = internal global %union.pthread_mutex_t* null, align 8
@worker_hang_lock = internal global %union.pthread_mutex_t zeroinitializer, align 8
@.str.703 = private unnamed_addr constant [23 x i8] c"Unknown lock type: %d\0A\00", align 1
@init_lock = internal global %union.pthread_mutex_t zeroinitializer, align 8
@init_count = internal global i32 0, align 4
@threads = internal global %struct.LIBEVENT_THREAD* null, align 8
@init_cond = internal global %union.pthread_cond_t zeroinitializer, align 8
@.str.20.704 = private unnamed_addr constant [33 x i8] c"failed writing to worker eventfd\00", align 1
@stats_lock = internal global %union.pthread_mutex_t zeroinitializer, align 8
@.str.1.711 = private unnamed_addr constant [15 x i8] c"stopped assoc\0A\00", align 1
@.str.2.712 = private unnamed_addr constant [24 x i8] c"asking workers to stop\0A\00", align 1
@.str.3.713 = private unnamed_addr constant [35 x i8] c"asking background threads to stop\0A\00", align 1
@.str.4.714 = private unnamed_addr constant [21 x i8] c"stopped lru crawler\0A\00", align 1
@.str.5.715 = private unnamed_addr constant [20 x i8] c"stopped maintainer\0A\00", align 1
@.str.6.716 = private unnamed_addr constant [20 x i8] c"stopped slab mover\0A\00", align 1
@.str.7.717 = private unnamed_addr constant [23 x i8] c"stopped logger thread\0A\00", align 1
@.str.8.718 = private unnamed_addr constant [29 x i8] c"stopped idle timeout thread\0A\00", align 1
@.str.9.719 = private unnamed_addr constant [21 x i8] c"closing connections\0A\00", align 1
@.str.10.720 = private unnamed_addr constant [24 x i8] c"reaping worker threads\0A\00", align 1
@.str.11.721 = private unnamed_addr constant [32 x i8] c"all background threads stopped\0A\00", align 1
@.str.12.726 = private unnamed_addr constant [49 x i8] c"Failed to allocate memory for connection object\0A\00", align 1
@last_thread_by_napi_id = internal global i32 -1, align 4
@last_thread = internal global i32 -1, align 4
@.str.13.729 = private unnamed_addr constant [42 x i8] c"<%d connection closing from side thread.\0A\00", align 1
@.str.14.748 = private unnamed_addr constant [81 x i8] c"Hash table power size (%d) cannot be equal to or less than item lock table (%d)\0A\00", align 1
@.str.15.749 = private unnamed_addr constant [56 x i8] c"Item lock table grows with `-t N` (worker threadcount)\0A\00", align 1
@.str.16.750 = private unnamed_addr constant [41 x i8] c"Hash table grows with `-o hashpower=N` \0A\00", align 1
@item_lock_count = internal global i32 0, align 4
@.str.17.751 = private unnamed_addr constant [26 x i8] c"Can't allocate item locks\00", align 1
@.str.18.752 = private unnamed_addr constant [34 x i8] c"Can't allocate thread descriptors\00", align 1
@.str.19.753 = private unnamed_addr constant [42 x i8] c"failed creating eventfd for worker thread\00", align 1
@.str.34.754 = private unnamed_addr constant [25 x i8] c"Can't create thread: %s\0A\00", align 1
@.str.21.755 = private unnamed_addr constant [27 x i8] c"Can't allocate event base\0A\00", align 1
@.str.22.756 = private unnamed_addr constant [36 x i8] c"Can't monitor libevent notify pipe\0A\00", align 1
@.str.23.757 = private unnamed_addr constant [47 x i8] c"Failed to allocate memory for connection queue\00", align 1
@.str.24.758 = private unnamed_addr constant [27 x i8] c"Failed to initialize mutex\00", align 1
@.str.25.759 = private unnamed_addr constant [5 x i8] c"rbuf\00", align 1
@.str.26.760 = private unnamed_addr constant [36 x i8] c"Failed to create read buffer cache\0A\00", align 1
@.str.27.761 = private unnamed_addr constant [3 x i8] c"io\00", align 1
@.str.28.762 = private unnamed_addr constant [34 x i8] c"Failed to create IO object cache\0A\00", align 1
@.str.32.763 = private unnamed_addr constant [3 x i8] c"cq\00", align 1
@.str.33.764 = private unnamed_addr constant [41 x i8] c"Failed to create connection queue cache\0A\00", align 1
@.str.29.765 = private unnamed_addr constant [31 x i8] c"Can't read from libevent pipe\0A\00", align 1
@.str.30.766 = private unnamed_addr constant [39 x i8] c"Can't listen for events on UDP socket\0A\00", align 1
@.str.31.767 = private unnamed_addr constant [34 x i8] c"Can't listen for events on fd %d\0A\00", align 1
@.str.770 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.1.771 = private unnamed_addr constant [6 x i8] c"chdir\00", align 1
@.str.2.772 = private unnamed_addr constant [10 x i8] c"/dev/null\00", align 1
@.str.3.773 = private unnamed_addr constant [11 x i8] c"dup2 stdin\00", align 1
@.str.4.774 = private unnamed_addr constant [12 x i8] c"dup2 stdout\00", align 1
@.str.5.775 = private unnamed_addr constant [12 x i8] c"dup2 stderr\00", align 1
@.str.6.776 = private unnamed_addr constant [6 x i8] c"close\00", align 1
@prefix_delimiter = internal global i8 0, align 1
@prefix_stats = internal global [256 x %struct._prefix_stats*] zeroinitializer, align 16
@num_prefixes = internal global i32 0, align 4
@total_prefix_size = internal global i32 0, align 4
@.str.781 = private unnamed_addr constant [49 x i8] c"Can't allocate space for stats structure: calloc\00", align 1
@.str.1.782 = private unnamed_addr constant [48 x i8] c"Can't allocate space for copy of prefix: malloc\00", align 1
@.str.2.783 = private unnamed_addr constant [48 x i8] c"PREFIX %s get %llu hit %llu set %llu del %llu\0D\0A\00", align 1
@.str.3.784 = private unnamed_addr constant [38 x i8] c"Can't allocate stats response: malloc\00", align 1
@.str.4.785 = private unnamed_addr constant [6 x i8] c"END\0D\0A\00", align 1
@uriencode_str = internal global [768 x i8] zeroinitializer, align 16
@uriencode_map = internal global [256 x i8*] zeroinitializer, align 16
@.str.788 = private unnamed_addr constant [9 x i8] c"%%%02hhX\00", align 1
@base64_table = internal constant [65 x i8] c"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\00", align 16
@dtable = internal constant [256 x i8] calign 16
@logger_stack_lock = dso_local global %union.pthread_mutex_t zeroinitializer, align 8
@logger_stack_cond = dso_local global %union.pthread_cond_t zeroinitializer, align 8
@watcher_count = dso_local global i32 0, align 4
@logger_key = dso_local global i32 0, align 4
@watchers = dso_local global [20 x %struct.logger_watcher*] zeroinitializer, align 16
@watchers_pollfds = dso_local global [20 x %struct.pollfd] zeroinitializer, align 16
@logger_gid = internal global i64 0, align 8
@logger_stack_head = internal global %struct._logger* null, align 8
@logger_stack_tail = internal global %struct._logger* null, align 8
@do_run_logger_thread = internal global i32 1, align 4
@logger_tid = internal global i64 0, align 8
@.str.2.831 = private unnamed_addr constant [31 x i8] c"Can't start logger thread: %s\0A\00", align 1
@.str.6.832 = private unnamed_addr constant [55 x i8] c"something failed with logger thread watcher fd polling\00", align 1
@.str.3.833 = private unnamed_addr constant [35 x i8] c"LOGGER: Failed to parse log entry\0A\00", align 1
@.str.4.834 = private unnamed_addr constant [51 x i8] c"LOGGER: unexpectedly couldn't advance buf pointer\0A\00", align 1
@.str.5.835 = private unnamed_addr constant [14 x i8] c"skipped=%llu\0A\00", align 1
@default_entries = internal constant [15 x %struct._entry_details] [%struct._entry_details { i32 512, i16 512, void (%struct._logentry*, %struct._entry_details*, i8*, %struct.__va_list_tag*)* @_logger_log_text, i32 (%struct._logentry*, i8*)* @_logger_parse_text, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.836, i32 0, i32 0) }, %struct._entry_details { i32 512, i16 64, void (%struct._logentry*, %struct._entry_details*, i8*, %struct.__va_list_tag*)* @_logger_log_evictions, i32 (%struct._logentry*, i8*)* @_logger_parse_ee, i8* null }, %struct._entry_details { i32 512, i16 4, void (%struct._logentry*, %struct._entry_details*, i8*, %struct.__va_list_tag*)* @_logger_log_item_get, i32 (%struct._logentry*, i8*)* @_logger_parse_ige, i8* null }, %struct._entry_details { i32 512, i16 8, void (%struct._logentry*, %struct._entry_details*, i8*, %struct.__va_list_tag*)* @_logger_log_item_store, i32 (%struct._logentry*, i8*)* @_logger_parse_ise, i8* null }, %struct._entry_details { i32 512, i16 2, void (%struct._logentry*, %struct._entry_details*, i8*, %struct.__va_list_tag*)* @_logger_log_text, i32 (%struct._logentry*, i8*)* @_logger_parse_text, i8* getelementptr inbounds ([133 x i8], [133 x i8]* @.str.8.837, i32 0, i32 0) }, %struct._entry_details { i32 512, i16 2, void (%struct._logentry*, %struct._entry_details*, i8*, %struct.__va_list_tag*)* @_logger_log_text, i32 (%struct._logentry*, i8*)* @_logger_parse_text, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.838, i32 0, i32 0) }, %struct._entry_details { i32 512, i16 32, void (%struct._logentry*, %struct._entry_details*, i8*, %struct.__va_list_tag*)* @_logger_log_conn_event, i32 (%struct._logentry*, i8*)* @_logger_parse_cne, i8* null }, %struct._entry_details { i32 512, i16 32, void (%struct._logentry*, %struct._entry_details*, i8*, %struct.__va_list_tag*)* @_logger_log_conn_event, i32 (%struct._logentry*, i8*)* @_logger_parse_cce, i8* null }, %struct._entry_details { i32 512, i16 64, void (%struct._logentry*, %struct._entry_details*, i8*, %struct.__va_list_tag*)* @_logger_log_ext_write, i32 (%struct._logentry*, i8*)* @_logger_parse_extw, i8* null }, %struct._entry_details { i32 512, i16 2, void (%struct._logentry*, %struct._entry_details*, i8*, %struct.__va_list_tag*)* @_logger_log_text, i32 (%struct._logentry*, i8*)* @_logger_parse_text, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.10.839, i32 0, i32 0) }, %struct._entry_details { i32 512, i16 2, void (%struct._logentry*, %struct._entry_details*, i8*, %struct.__va_list_tag*)* @_logger_log_text, i32 (%struct._logentry*, i8*)* @_logger_parse_text, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11.840, i32 0, i32 0) }, %struct._entry_details { i32 512, i16 2, void (%struct._logentry*, %struct._entry_details*, i8*, %struct.__va_list_tag*)* @_logger_log_text, i32 (%struct._logentry*, i8*)* @_logger_parse_text, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.12.841, i32 0, i32 0) }, %struct._entry_details { i32 512, i16 2, void (%struct._logentry*, %struct._entry_details*, i8*, %struct.__va_list_tag*)* @_logger_log_text, i32 (%struct._logentry*, i8*)* @_logger_parse_text, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.13.842, i32 0, i32 0) }, %struct._entry_details { i32 512, i16 2, void (%struct._logentry*, %struct._entry_details*, i8*, %struct.__va_list_tag*)* @_logger_log_text, i32 (%struct._logentry*, i8*)* @_logger_parse_text, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.14.843, i32 0, i32 0) }, %struct._entry_details { i32 512, i16 2, void (%struct._logentry*, %struct._entry_details*, i8*, %struct.__va_list_tag*)* @_logger_log_text, i32 (%struct._logentry*, i8*)* @_logger_parse_text, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.15.844, i32 0, i32 0) }], align 16
@.str.7.836 = private unnamed_addr constant [7 x i8] c"<%d %s\00", align 1
@.str.8.837 = private unnamed_addr constant [133 x i8] c"type=lru_crawler crawler=%d lru=%s low_mark=%llu next_reclaims=%llu since_run=%u next_run=%d elapsed=%u examined=%llu reclaimed=%llu\00", align 1
@.str.9.838 = private unnamed_addr constant [29 x i8] c"type=slab_move src=%d dst=%d\00", align 1
@.str.10.839 = private unnamed_addr constant [39 x i8] c"type=compact_start id=%lu version=%llu\00", align 1
@.str.11.840 = private unnamed_addr constant [26 x i8] c"type=compact_abort id=%lu\00", align 1
@.str.12.841 = private unnamed_addr constant [43 x i8] c"type=compact_read_start id=%lu offset=%llu\00", align 1
@.str.13.842 = private unnamed_addr constant [74 x i8] c"type=compact_read_end id=%lu offset=%llu rescues=%lu lost=%lu skipped=%lu\00", align 1
@.str.14.843 = private unnamed_addr constant [24 x i8] c"type=compact_end id=%lu\00", align 1
@.str.15.844 = private unnamed_addr constant [43 x i8] c"type=compact_fraginfo ratio=%.2f bytes=%lu\00", align 1
@.str.19.845 = private unnamed_addr constant [4 x i8] c"yes\00", align 1
@.str.20.846 = private unnamed_addr constant [3 x i8] c"no\00", align 1
@.str.50.847 = private unnamed_addr constant [83 x i8] c"ts=%d.%d gid=%llu type=extwrite key=%s fetch=%s ttl=%lld la=%d clsid=%u bucket=%u\0A\00", align 1
@__const._logger_parse_cce.transport_map = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.40.854, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.41.855, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.42.856, i32 0, i32 0)], align 16
@__const._logger_parse_cce.reason_map = private unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.45.850, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.46.851, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.47.852, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.48.853, i32 0, i32 0)], align 16
@.str.49.848 = private unnamed_addr constant [82 x i8] c"ts=%d.%d gid=%llu type=conn_close rip=%s rport=%hu transport=%s reason=%s cfd=%d\0A\00", align 1
@.str.44.849 = private unnamed_addr constant [5 x i8] c"unix\00", align 1
@.str.45.850 = private unnamed_addr constant [6 x i8] c"error\00", align 1
@.str.46.851 = private unnamed_addr constant [7 x i8] c"normal\00", align 1
@.str.47.852 = private unnamed_addr constant [13 x i8] c"idle_timeout\00", align 1
@.str.48.853 = private unnamed_addr constant [9 x i8] c"shutdown\00", align 1
@.str.40.854 = private unnamed_addr constant [6 x i8] c"local\00", align 1
@.str.41.855 = private unnamed_addr constant [4 x i8] c"tcp\00", align 1
@.str.42.856 = private unnamed_addr constant [4 x i8] c"udp\00", align 1
@__const._logger_parse_cne.transport_map = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.40.854, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.41.855, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.42.856, i32 0, i32 0)], align 16
@.str.43.857 = private unnamed_addr constant [70 x i8] c"ts=%d.%d gid=%llu type=conn_new rip=%s rport=%hu transport=%s cfd=%d\0A\00", align 1
@.str.26.858 = private unnamed_addr constant [3 x i8] c"na\00", align 1
@.str.27.859 = private unnamed_addr constant [11 x i8] c"not_stored\00", align 1
@.str.28.860 = private unnamed_addr constant [7 x i8] c"stored\00", align 1
@.str.29.861 = private unnamed_addr constant [7 x i8] c"exists\00", align 1
@.str.21.862 = private unnamed_addr constant [10 x i8] c"not_found\00", align 1
@.str.30.863 = private unnamed_addr constant [10 x i8] c"too_large\00", align 1
@.str.31.864 = private unnamed_addr constant [10 x i8] c"no_memory\00", align 1
@__const._logger_parse_ise.cmd_map = private unnamed_addr constant [7 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.32.866, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.33.867, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.34.868, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.35.869, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.36.870, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.37.871, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.38.872, i32 0, i32 0)], align 16
@.str.39.865 = private unnamed_addr constant [90 x i8] c"ts=%d.%d gid=%llu type=item_store key=%s status=%s cmd=%s ttl=%u clsid=%u cfd=%d size=%d\0A\00", align 1
@.str.32.866 = private unnamed_addr constant [5 x i8] c"null\00", align 1
@.str.33.867 = private unnamed_addr constant [4 x i8] c"add\00", align 1
@.str.34.868 = private unnamed_addr constant [4 x i8] c"set\00", align 1
@.str.35.869 = private unnamed_addr constant [8 x i8] c"replace\00", align 1
@.str.36.870 = private unnamed_addr constant [7 x i8] c"append\00", align 1
@.str.37.871 = private unnamed_addr constant [8 x i8] c"prepend\00", align 1
@.str.38.872 = private unnamed_addr constant [4 x i8] c"cas\00", align 1
@__const._logger_parse_ige.was_found_map = private unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.21.862, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.22.874, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23.875, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24.876, i32 0, i32 0)], align 16
@.str.25.873 = private unnamed_addr constant [74 x i8] c"ts=%d.%d gid=%llu type=item_get key=%s status=%s clsid=%u cfd=%d size=%d\0A\00", align 1
@.str.22.874 = private unnamed_addr constant [6 x i8] c"found\00", align 1
@.str.23.875 = private unnamed_addr constant [8 x i8] c"flushed\00", align 1
@.str.24.876 = private unnamed_addr constant [8 x i8] c"expired\00", align 1
@.str.18.877 = private unnamed_addr constant [81 x i8] c"ts=%d.%d gid=%llu type=eviction key=%s fetch=%s ttl=%lld la=%d clsid=%u size=%d\0A\00", align 1
@.str.17.878 = private unnamed_addr constant [22 x i8] c"ts=%d.%d gid=%llu %s\0A\00", align 1
@.str.16.879 = private unnamed_addr constant [54 x i8] c"LOGGER: Failed to vsnprintf a text entry: (total) %d\0A\00", align 1
@logger_count = internal global i32 0, align 4
@.str.886 = private unnamed_addr constant [44 x i8] c"LOGGER: Failed to bipbuf push a text entry\0A\00", align 1
@.str.1.887 = private unnamed_addr constant [5 x i8] c"OK\0D\0A\00", align 1
@crawler_expired_mod = dso_local global { i32 (%struct._crawler_module_t*, i8*)*, void (%struct._crawler_module_t*, %struct._stritem*, i32, i32)*, void (%struct._crawler_module_t*, i32)*, void (%struct._crawler_module_t*)*, i8, i8 } { i32 (%struct._crawler_module_t*, i8*)* @crawler_expired_init, void (%struct._crawler_module_t*, %struct._stritem*, i32, i32)* @crawler_expired_eval, void (%struct._crawler_module_t*, i32)* @crawler_expired_doneclass, void (%struct._crawler_module_t*)* @crawler_expired_finalize, i8 1, i8 0 }, align 8
@storage.888 = internal global i8* null, align 8
@crawlers = internal global [256 x %struct.crawler] zeroinitializer, align 16
@.str.5.889 = private unnamed_addr constant [58 x i8] c"LRU crawler found an expired item (flags: %d, slab: %d): \00", align 1
@.str.6.890 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.7.891 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@crawler_metadump_mod = dso_local global { i32 (%struct._crawler_module_t*, i8*)*, void (%struct._crawler_module_t*, %struct._stritem*, i32, i32)*, void (%struct._crawler_module_t*, i32)*, void (%struct._crawler_module_t*)*, i8, i8 } { i32 (%struct._crawler_module_t*, i8*)* null, void (%struct._crawler_module_t*, %struct._stritem*, i32, i32)* @crawler_metadump_eval, void (%struct._crawler_module_t*, i32)* null, void (%struct._crawler_module_t*)* @crawler_metadump_finalize, i8 0, i8 1 }, align 8
@.str.11.892 = private unnamed_addr constant [6 x i8] c"END\0D\0A\00", align 1
@.str.9.893 = private unnamed_addr constant [4 x i8] c"yes\00", align 1
@.str.10.894 = private unnamed_addr constant [3 x i8] c"no\00", align 1
@.str.8.895 = private unnamed_addr constant [58 x i8] c"key=%s exp=%ld la=%llu cas=%llu fetch=%s cls=%u size=%lu\0A\00", align 1
@crawler_mod_regs = dso_local global [3 x %struct.crawler_module_reg_t*] [%struct.crawler_module_reg_t* bitcast ({ i32 (%struct._crawler_module_t*, i8*)*, void (%struct._crawler_module_t*, %struct._stritem*, i32, i32)*, void (%struct._crawler_module_t*, i32)*, void (%struct._crawler_module_t*)*, i8, i8 }* @crawler_expired_mod to %struct.crawler_module_reg_t*), %struct.crawler_module_reg_t* bitcast ({ i32 (%struct._crawler_module_t*, i8*)*, void (%struct._crawler_module_t*, %struct._stritem*, i32, i32)*, void (%struct._crawler_module_t*, i32)*, void (%struct._crawler_module_t*)*, i8, i8 }* @crawler_expired_mod to %struct.crawler_module_reg_t*), %struct.crawler_module_reg_t* bitcast ({ i32 (%struct._crawler_module_t*, i8*)*, void (%struct._crawler_module_t*, %struct._stritem*, i32, i32)*, void (%struct._crawler_module_t*, i32)*, void (%struct._crawler_module_t*)*, i8, i8 }* @crawler_metadump_mod to %struct.crawler_module_reg_t*)], align 16
@active_crawler_type = dso_local global i32 0, align 4
@active_crawler_mod = dso_local global %struct._crawler_module_t zeroinitializer, align 8
@lru_crawler_lock = internal global %union.pthread_mutex_t zeroinitializer, align 8
@do_run_lru_crawler_thread = internal global i32 0, align 4
@lru_crawler_cond = internal global %union.pthread_cond_t zeroinitializer, align 8
@item_crawler_tid = internal global i64 0, align 8
@.str.898 = private unnamed_addr constant [39 x i8] c"Failed to stop LRU crawler thread: %s\0A\00", align 1
@.str.1.901 = private unnamed_addr constant [37 x i8] c"Can't create LRU crawler thread: %s\0A\00", align 1
@.str.12.902 = private unnamed_addr constant [40 x i8] c"Starting LRU crawler background thread\0A\00", align 1
@crawler_count = internal global i32 0, align 4
@.str.13.903 = private unnamed_addr constant [30 x i8] c"Nothing left to crawl for %d\0A\00", align 1
@.str.14.904 = private unnamed_addr constant [29 x i8] c"LRU crawler thread sleeping\0A\00", align 1
@.str.15.905 = private unnamed_addr constant [29 x i8] c"LRU crawler thread stopping\0A\00", align 1
@lru_crawler_start.block_ae_until = internal global i32 0, align 4
@.str.16.908 = private unnamed_addr constant [36 x i8] c"Kicking LRU crawler off for LRU %u\0A\00", align 1
@.str.2.909 = private unnamed_addr constant [4 x i8] c"all\00", align 1
@.str.3.910 = private unnamed_addr constant [5 x i8] c"hash\00", align 1
@.str.4.911 = private unnamed_addr constant [2 x i8] c",\00", align 1
@lru_crawler_initialized = internal global i32 0, align 4
@lut = internal constant [201 x i8] c"00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899\00", align 16
@entry_cnt = dso_local global i32 0, align 4
@main_auth_data = dso_local global i8* null, align 8
@main_auth_entries = dso_local global [8 x %struct.auth_entry] zeroinitializer, align 16
@.str.928 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@memory_file = dso_local global i8* null, align 8
@.str.931 = private unnamed_addr constant [48 x i8] c"[restart] failed to allocate callback register\0A\00", align 1
@cb_stack = internal global %struct._restart_data_cb* null, align 8
@.str.1.934 = private unnamed_addr constant [60 x i8] c"[restart] internal handler for metadata tag not found: %s:\0A\00", align 1
@.str.2.935 = private unnamed_addr constant [38 x i8] c"[restart] invalid metadata line:\0A\0A%s\0A\00", align 1
@.str.3.938 = private unnamed_addr constant [77 x i8] c"[restart] fatal error while saving metadata state, value too long for: %s %s\00", align 1
@.str.4.939 = private unnamed_addr constant [8 x i8] c"K%s %s\0A\00", align 1
@mmap_fd = internal global i32 0, align 4
@.str.5.942 = private unnamed_addr constant [29 x i8] c"failed to open file for mmap\00", align 1
@.str.6.943 = private unnamed_addr constant [17 x i8] c"ftruncate failed\00", align 1
@.str.7.944 = private unnamed_addr constant [77 x i8] c"[restart] memory limit not divisible evenly by pagesize (please report bug)\0A\00", align 1
@mmap_base = internal global i8* null, align 8
@.str.8.945 = private unnamed_addr constant [25 x i8] c"failed to mmap, aborting\00", align 1
@slabmem_limit = internal global i64 0, align 8
@.str.15.946 = private unnamed_addr constant [6 x i8] c".meta\00", align 1
@.str.16.947 = private unnamed_addr constant [55 x i8] c"[restart] failed to allocate memory for restart check\0A\00", align 1
@.str.17.948 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.18.949 = private unnamed_addr constant [62 x i8] c"[restart] no metadata save file, starting with a clean cache\0A\00", align 1
@.str.19.950 = private unnamed_addr constant [33 x i8] c"[restart] corrupt metadata file\0A\00", align 1
@.str.20.951 = private unnamed_addr constant [51 x i8] c"[restart] Failed to read a tag from metadata file\0A\00", align 1
@.str.21.952 = private unnamed_addr constant [68 x i8] c"[restart] failed to validate metadata, starting with a clean cache\0A\00", align 1
@.str.9.955 = private unnamed_addr constant [34 x i8] c"[restart] failed to save metadata\00", align 1
@.str.10.956 = private unnamed_addr constant [41 x i8] c"[restart] failed to munmap shared memory\00", align 1
@.str.11.957 = private unnamed_addr constant [43 x i8] c"[restart] failed to close shared memory fd\00", align 1
@.str.22.958 = private unnamed_addr constant [58 x i8] c"[restart] failed to allocate memory during metadata save\0A\00", align 1
@.str.23.959 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.24.960 = private unnamed_addr constant [30 x i8] c"failed to write metadata file\00", align 1
@.str.25.961 = private unnamed_addr constant [5 x i8] c"T%s\0A\00", align 1
@.str.12.964 = private unnamed_addr constant [53 x i8] c"[restart] original memory base: [%p] new base: [%p]\0A\00", align 1
@.str.13.965 = private unnamed_addr constant [34 x i8] c"[restart] recovery start [%d.%d]\0A\00", align 1
@.str.14.966 = private unnamed_addr constant [32 x i8] c"[restart] recovery end [%d.%d]\0A\00", align 1
@.str.969 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1
@.str.1.970 = private unnamed_addr constant [28 x i8] c"CLIENT_ERROR bad data chunk\00", align 1
@.str.2.971 = private unnamed_addr constant [7 x i8] c"STORED\00", align 1
@.str.3.972 = private unnamed_addr constant [7 x i8] c"EXISTS\00", align 1
@.str.4.973 = private unnamed_addr constant [10 x i8] c"NOT_FOUND\00", align 1
@.str.5.974 = private unnamed_addr constant [11 x i8] c"NOT_STORED\00", align 1
@.str.6.975 = private unnamed_addr constant [37 x i8] c"SERVER_ERROR Unhandled storage type.\00", align 1
@.str.44.976 = private unnamed_addr constant [3 x i8] c"OK\00", align 1
@.str.45.977 = private unnamed_addr constant [3 x i8] c"HD\00", align 1
@.str.46.978 = private unnamed_addr constant [3 x i8] c"EX\00", align 1
@.str.47.979 = private unnamed_addr constant [3 x i8] c"NF\00", align 1
@.str.48.980 = private unnamed_addr constant [3 x i8] c"NS\00", align 1
@.str.7.983 = private unnamed_addr constant [4 x i8] c"set\00", align 1
@.str.8.984 = private unnamed_addr constant [29 x i8] c"CLIENT_ERROR unauthenticated\00", align 1
@.str.9.985 = private unnamed_addr constant [42 x i8] c"CLIENT_ERROR bad command line termination\00", align 1
@.str.10.986 = private unnamed_addr constant [45 x i8] c"CLIENT_ERROR bad authentication token format\00", align 1
@.str.11.989 = private unnamed_addr constant [36 x i8] c"CLIENT_ERROR authentication failure\00", align 1
@.str.12.990 = private unnamed_addr constant [5 x i8] c"get \00", align 1
@.str.13.991 = private unnamed_addr constant [6 x i8] c"gets \00", align 1
@.str.14.992 = private unnamed_addr constant [8 x i8] c"<%d %s\0A\00", align 1
@.str.15.993 = private unnamed_addr constant [6 x i8] c"ERROR\00", align 1
@.str.16.994 = private unnamed_addr constant [3 x i8] c"MN\00", align 1
@.str.17.995 = private unnamed_addr constant [4 x i8] c"get\00", align 1
@.str.18.996 = private unnamed_addr constant [5 x i8] c"gets\00", align 1
@.str.19.997 = private unnamed_addr constant [4 x i8] c"gat\00", align 1
@.str.20.998 = private unnamed_addr constant [5 x i8] c"gats\00", align 1
@.str.21.999 = private unnamed_addr constant [6 x i8] c"stats\00", align 1
@.str.22.1000 = private unnamed_addr constant [9 x i8] c"shutdown\00", align 1
@.str.23.1001 = private unnamed_addr constant [6 x i8] c"slabs\00", align 1
@.str.24.1002 = private unnamed_addr constant [4 x i8] c"add\00", align 1
@.str.25.1003 = private unnamed_addr constant [7 x i8] c"append\00", align 1
@.str.26.1004 = private unnamed_addr constant [4 x i8] c"cas\00", align 1
@.str.27.1005 = private unnamed_addr constant [15 x i8] c"cache_memlimit\00", align 1
@.str.28.1006 = private unnamed_addr constant [5 x i8] c"incr\00", align 1
@.str.29.1007 = private unnamed_addr constant [7 x i8] c"delete\00", align 1
@.str.30.1008 = private unnamed_addr constant [5 x i8] c"decr\00", align 1
@.str.31.1009 = private unnamed_addr constant [6 x i8] c"touch\00", align 1
@.str.32.1010 = private unnamed_addr constant [8 x i8] c"replace\00", align 1
@.str.33.1011 = private unnamed_addr constant [8 x i8] c"prepend\00", align 1
@.str.34.1012 = private unnamed_addr constant [5 x i8] c"bget\00", align 1
@.str.35.1013 = private unnamed_addr constant [10 x i8] c"flush_all\00", align 1
@.str.36.1014 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.37.1015 = private unnamed_addr constant [5 x i8] c"quit\00", align 1
@.str.38.1016 = private unnamed_addr constant [12 x i8] c"lru_crawler\00", align 1
@.str.39.1017 = private unnamed_addr constant [6 x i8] c"watch\00", align 1
@.str.40.1018 = private unnamed_addr constant [10 x i8] c"verbosity\00", align 1
@.str.41.1019 = private unnamed_addr constant [4 x i8] c"lru\00", align 1
@.str.42.1020 = private unnamed_addr constant [9 x i8] c"extstore\00", align 1
@.str.43.1021 = private unnamed_addr constant [6 x i8] c"HTTP/\00", align 1
@.str.162.1022 = private unnamed_addr constant [15 x i8] c"free_memchunks\00", align 1
@.str.163.1023 = private unnamed_addr constant [10 x i8] c"item_size\00", align 1
@.str.164.1024 = private unnamed_addr constant [9 x i8] c"item_age\00", align 1
@.str.165.1025 = private unnamed_addr constant [8 x i8] c"low_ttl\00", align 1
@.str.166.1026 = private unnamed_addr constant [13 x i8] c"recache_rate\00", align 1
@.str.167.1027 = private unnamed_addr constant [14 x i8] c"compact_under\00", align 1
@.str.168.1028 = private unnamed_addr constant [11 x i8] c"drop_under\00", align 1
@.str.169.1029 = private unnamed_addr constant [10 x i8] c"max_sleep\00", align 1
@.str.170.1030 = private unnamed_addr constant [9 x i8] c"max_frag\00", align 1
@.str.171.1031 = private unnamed_addr constant [12 x i8] c"drop_unread\00", align 1
@.str.88.1032 = private unnamed_addr constant [8 x i8] c"noreply\00", align 1
@.str.155.1033 = private unnamed_addr constant [5 x i8] c"tune\00", align 1
@.str.156.1034 = private unnamed_addr constant [43 x i8] c"ERROR hot and warm pcts must not exceed 80\00", align 1
@.str.157.1035 = private unnamed_addr constant [50 x i8] c"ERROR hot/warm age factors must be greater than 0\00", align 1
@.str.158.1036 = private unnamed_addr constant [5 x i8] c"mode\00", align 1
@.str.159.1037 = private unnamed_addr constant [5 x i8] c"flat\00", align 1
@.str.160.1038 = private unnamed_addr constant [10 x i8] c"segmented\00", align 1
@.str.161.1039 = private unnamed_addr constant [9 x i8] c"temp_ttl\00", align 1
@.str.49.1040 = private unnamed_addr constant [37 x i8] c"CLIENT_ERROR bad command line format\00", align 1
@.str.142.1041 = private unnamed_addr constant [40 x i8] c"CLIENT_ERROR watch commands not allowed\00", align 1
@.str.143.1042 = private unnamed_addr constant [50 x i8] c"ERROR cannot pipeline other commands before watch\00", align 1
@.str.144.1043 = private unnamed_addr constant [8 x i8] c"rawcmds\00", align 1
@.str.145.1044 = private unnamed_addr constant [10 x i8] c"evictions\00", align 1
@.str.146.1045 = private unnamed_addr constant [9 x i8] c"fetchers\00", align 1
@.str.147.1046 = private unnamed_addr constant [10 x i8] c"mutations\00", align 1
@.str.148.1047 = private unnamed_addr constant [10 x i8] c"sysevents\00", align 1
@.str.149.1048 = private unnamed_addr constant [11 x i8] c"connevents\00", align 1
@.str.150.1049 = private unnamed_addr constant [10 x i8] c"proxycmds\00", align 1
@.str.151.1050 = private unnamed_addr constant [12 x i8] c"proxyevents\00", align 1
@.str.152.1051 = private unnamed_addr constant [10 x i8] c"proxyuser\00", align 1
@.str.153.1052 = private unnamed_addr constant [43 x i8] c"WATCHER_TOO_MANY log watcher limit reached\00", align 1
@.str.154.1053 = private unnamed_addr constant [41 x i8] c"WATCHER_FAILED failed to add log watcher\00", align 1
@.str.126.1054 = private unnamed_addr constant [6 x i8] c"crawl\00", align 1
@.str.127.1055 = private unnamed_addr constant [34 x i8] c"CLIENT_ERROR lru crawler disabled\00", align 1
@.str.128.1056 = private unnamed_addr constant [42 x i8] c"BUSY currently processing crawler request\00", align 1
@.str.129.1057 = private unnamed_addr constant [26 x i8] c"BADCLASS invalid class id\00", align 1
@.str.130.1058 = private unnamed_addr constant [29 x i8] c"NOTSTARTED no items to crawl\00", align 1
@.str.131.1059 = private unnamed_addr constant [32 x i8] c"ERROR an unknown error happened\00", align 1
@.str.132.1060 = private unnamed_addr constant [9 x i8] c"metadump\00", align 1
@.str.133.1061 = private unnamed_addr constant [27 x i8] c"ERROR metadump not allowed\00", align 1
@.str.134.1062 = private unnamed_addr constant [53 x i8] c"ERROR cannot pipeline other commands before metadump\00", align 1
@.str.135.1063 = private unnamed_addr constant [8 x i8] c"tocrawl\00", align 1
@.str.136.1064 = private unnamed_addr constant [6 x i8] c"sleep\00", align 1
@.str.137.1065 = private unnamed_addr constant [46 x i8] c"CLIENT_ERROR sleep must be one second or less\00", align 1
@.str.138.1066 = private unnamed_addr constant [7 x i8] c"enable\00", align 1
@.str.139.1067 = private unnamed_addr constant [41 x i8] c"ERROR failed to start lru crawler thread\00", align 1
@.str.140.1068 = private unnamed_addr constant [8 x i8] c"disable\00", align 1
@.str.141.1069 = private unnamed_addr constant [40 x i8] c"ERROR failed to stop lru crawler thread\00", align 1
@.str.125.1070 = private unnamed_addr constant [15 x i8] c"VERSION 1.6.15\00", align 1
@.str.124.1071 = private unnamed_addr constant [35 x i8] c"CLIENT_ERROR flush_all not allowed\00", align 1
@.str.80.1072 = private unnamed_addr constant [38 x i8] c"CLIENT_ERROR invalid exptime argument\00", align 1
@.str.123.1073 = private unnamed_addr constant [8 x i8] c"TOUCHED\00", align 1
@.str.120.1074 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.121.1075 = private unnamed_addr constant [69 x i8] c"CLIENT_ERROR bad command line format.  Usage: delete <key> [noreply]\00", align 1
@.str.122.1076 = private unnamed_addr constant [8 x i8] c"DELETED\00", align 1
@.str.119.1077 = private unnamed_addr constant [44 x i8] c"CLIENT_ERROR invalid numeric delta argument\00", align 1
@.str.72.1078 = private unnamed_addr constant [61 x i8] c"CLIENT_ERROR cannot increment or decrement non-numeric value\00", align 1
@.str.73.1079 = private unnamed_addr constant [27 x i8] c"SERVER_ERROR out of memory\00", align 1
@.str.115.1080 = private unnamed_addr constant [55 x i8] c"MEMLIMIT_TOO_SMALL cannot set maxbytes to less than 8m\00", align 1
@.str.116.1081 = private unnamed_addr constant [58 x i8] c"MEMLIMIT_ADJUST_FAILED input value is megabytes not bytes\00", align 1
@.str.117.1082 = private unnamed_addr constant [28 x i8] c"maxbytes adjusted to %llum\0A\00", align 1
@.str.118.1083 = private unnamed_addr constant [57 x i8] c"MEMLIMIT_ADJUST_FAILED out of bounds or unable to adjust\00", align 1
@.str.107.1084 = private unnamed_addr constant [9 x i8] c"reassign\00", align 1
@.str.108.1085 = private unnamed_addr constant [40 x i8] c"CLIENT_ERROR slab reassignment disabled\00", align 1
@.str.109.1086 = private unnamed_addr constant [43 x i8] c"BUSY currently processing reassign request\00", align 1
@.str.110.1087 = private unnamed_addr constant [37 x i8] c"BADCLASS invalid src or dst class id\00", align 1
@.str.111.1088 = private unnamed_addr constant [40 x i8] c"NOSPARE source class has no spare pages\00", align 1
@.str.112.1089 = private unnamed_addr constant [37 x i8] c"SAME src and dst class are identical\00", align 1
@.str.113.1090 = private unnamed_addr constant [9 x i8] c"automove\00", align 1
@.str.114.1091 = private unnamed_addr constant [6 x i8] c"ratio\00", align 1
@.str.104.1092 = private unnamed_addr constant [28 x i8] c"ERROR: shutdown not enabled\00", align 1
@.str.105.1093 = private unnamed_addr constant [9 x i8] c"graceful\00", align 1
@.str.106.1094 = private unnamed_addr constant [35 x i8] c"CLIENT_ERROR invalid shutdown mode\00", align 1
@.str.89.1095 = private unnamed_addr constant [30 x i8] c"CLIENT_ERROR bad command line\00", align 1
@.str.90.1096 = private unnamed_addr constant [6 x i8] c"reset\00", align 1
@.str.91.1097 = private unnamed_addr constant [6 x i8] c"RESET\00", align 1
@.str.92.1098 = private unnamed_addr constant [7 x i8] c"detail\00", align 1
@.str.93.1099 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.94.1100 = private unnamed_addr constant [9 x i8] c"settings\00", align 1
@.str.95.1101 = private unnamed_addr constant [10 x i8] c"cachedump\00", align 1
@.str.96.1102 = private unnamed_addr constant [41 x i8] c"CLIENT_ERROR stats cachedump not allowed\00", align 1
@.str.97.1103 = private unnamed_addr constant [29 x i8] c"CLIENT_ERROR Illegal slab id\00", align 1
@.str.98.1104 = private unnamed_addr constant [6 x i8] c"conns\00", align 1
@.str.99.1105 = private unnamed_addr constant [41 x i8] c"SERVER_ERROR out of memory writing stats\00", align 1
@.str.100.1106 = private unnamed_addr constant [3 x i8] c"on\00", align 1
@.str.101.1107 = private unnamed_addr constant [4 x i8] c"off\00", align 1
@.str.102.1108 = private unnamed_addr constant [5 x i8] c"dump\00", align 1
@.str.103.1109 = private unnamed_addr constant [45 x i8] c"CLIENT_ERROR usage: stats detail on|off|dump\00", align 1
@.str.64.1110 = private unnamed_addr constant [40 x i8] c"SERVER_ERROR object too large for cache\00", align 1
@.str.65.1111 = private unnamed_addr constant [42 x i8] c"SERVER_ERROR out of memory storing object\00", align 1
@.str.81.1112 = private unnamed_addr constant [7 x i8] c"VALUE \00", align 1
@.str.82.1113 = private unnamed_addr constant [17 x i8] c">%d sending key \00", align 1
@.str.83.1114 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.84.1115 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.85.1116 = private unnamed_addr constant [9 x i8] c">%d END\0A\00", align 1
@.str.86.1117 = private unnamed_addr constant [48 x i8] c"SERVER_ERROR out of memory writing get response\00", align 1
@.str.87.1118 = private unnamed_addr constant [6 x i8] c"END\0D\0A\00", align 1
@.str.76.1119 = private unnamed_addr constant [4 x i8] c"ME \00", align 1
@.str.78.1120 = private unnamed_addr constant [4 x i8] c"yes\00", align 1
@.str.79.1121 = private unnamed_addr constant [3 x i8] c"no\00", align 1
@.str.77.1122 = private unnamed_addr constant [51 x i8] c"exp=%d la=%llu cas=%llu fetch=%s cls=%u size=%lu\0D\0A\00", align 1
@.str.54.1123 = private unnamed_addr constant [3 x i8] c"EN\00", align 1
@.str.62.1124 = private unnamed_addr constant [36 x i8] c"CLIENT_ERROR options flags too long\00", align 1
@.str.66.1125 = private unnamed_addr constant [39 x i8] c"CLIENT_ERROR invalid or duplicate flag\00", align 1
@.str.71.1126 = private unnamed_addr constant [41 x i8] c"CLIENT_ERROR invalid mode for ma M token\00", align 1
@.str.68.1127 = private unnamed_addr constant [4 x i8] c"OK \00", align 1
@.str.69.1128 = private unnamed_addr constant [4 x i8] c"HD \00", align 1
@.str.74.1129 = private unnamed_addr constant [4 x i8] c"NS \00", align 1
@.str.75.1130 = private unnamed_addr constant [47 x i8] c"SERVER_ERROR Out of memory allocating new item\00", align 1
@.str.70.1131 = private unnamed_addr constant [4 x i8] c"NF \00", align 1
@.str.67.1132 = private unnamed_addr constant [4 x i8] c"EX \00", align 1
@.str.52.1133 = private unnamed_addr constant [4 x i8] c"VA \00", align 1
@.str.53.1134 = private unnamed_addr constant [35 x i8] c"CLIENT_ERROR opaque token too long\00", align 1
@.str.55.1135 = private unnamed_addr constant [28 x i8] c"CLIENT_ERROR duplicate flag\00", align 1
@.str.56.1136 = private unnamed_addr constant [32 x i8] c"CLIENT_ERROR error decoding key\00", align 1
@.str.57.1137 = private unnamed_addr constant [46 x i8] c"CLIENT_ERROR bad token in command line format\00", align 1
@.str.58.1138 = private unnamed_addr constant [42 x i8] c"CLIENT_ERROR incorrect length for M token\00", align 1
@.str.59.1139 = private unnamed_addr constant [43 x i8] c"CLIENT_ERROR invalid numeric initial value\00", align 1
@.str.60.1140 = private unnamed_addr constant [41 x i8] c"CLIENT_ERROR invalid numeric delta value\00", align 1
@.str.61.1141 = private unnamed_addr constant [26 x i8] c"CLIENT_ERROR invalid flag\00", align 1
@.str.63.1142 = private unnamed_addr constant [41 x i8] c"CLIENT_ERROR invalid mode for ms M token\00", align 1
@.str.50.1143 = private unnamed_addr constant [40 x i8] c"CLIENT_ERROR options flags are too long\00", align 1
@.str.51.1144 = private unnamed_addr constant [44 x i8] c"SERVER_ERROR refcount overflow during fetch\00", align 1
@.str.1147 = private unnamed_addr constant [26 x i8] c"Not handling substate %d\0A\00", align 1
@.str.20.1150 = private unnamed_addr constant [37 x i8] c"mech:  ``%s'' with %d bytes of data\0A\00", align 1
@.str.21.1151 = private unnamed_addr constant [76 x i8] c"%d: SASL_STEP called but sasl_server_start not called for this connection!\0A\00", align 1
@.str.22.1152 = private unnamed_addr constant [40 x i8] c"Unhandled command %d with challenge %s\0A\00", align 1
@.str.23.1153 = private unnamed_addr constant [23 x i8] c"sasl result code:  %d\0A\00", align 1
@.str.24.1154 = private unnamed_addr constant [14 x i8] c"Authenticated\00", align 1
@.str.25.1155 = private unnamed_addr constant [28 x i8] c"Unknown sasl response:  %d\0A\00", align 1
@.str.18.1156 = private unnamed_addr constant [26 x i8] c">%d Writing bin response:\00", align 1
@.str.19.1157 = private unnamed_addr constant [7 x i8] c"\0A>%d  \00", align 1
@.str.3.1158 = private unnamed_addr constant [8 x i8] c" 0x%02x\00", align 1
@.str.4.1159 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.6.1160 = private unnamed_addr constant [14 x i8] c"Out of memory\00", align 1
@.str.7.1161 = private unnamed_addr constant [16 x i8] c"Unknown command\00", align 1
@.str.8.1162 = private unnamed_addr constant [10 x i8] c"Not found\00", align 1
@.str.9.1163 = private unnamed_addr constant [18 x i8] c"Invalid arguments\00", align 1
@.str.10.1164 = private unnamed_addr constant [21 x i8] c"Data exists for key.\00", align 1
@.str.11.1165 = private unnamed_addr constant [11 x i8] c"Too large.\00", align 1
@.str.12.1166 = private unnamed_addr constant [47 x i8] c"Non-numeric server-side value for incr or decr\00", align 1
@.str.13.1167 = private unnamed_addr constant [12 x i8] c"Not stored.\00", align 1
@.str.14.1168 = private unnamed_addr constant [14 x i8] c"Auth failure.\00", align 1
@.str.15.1169 = private unnamed_addr constant [16 x i8] c"UNHANDLED ERROR\00", align 1
@.str.16.1170 = private unnamed_addr constant [25 x i8] c">%d UNHANDLED ERROR: %d\0A\00", align 1
@.str.17.1171 = private unnamed_addr constant [26 x i8] c">%d Writing an error: %s\0A\00", align 1
@.str.26.1172 = private unnamed_addr constant [33 x i8] c"Failed to initialize SASL conn.\0A\00", align 1
@.str.1.1175 = private unnamed_addr constant [31 x i8] c"<%d Read binary protocol data:\00", align 1
@.str.2.1176 = private unnamed_addr constant [8 x i8] c"\0A<%d   \00", align 1
@.str.5.1177 = private unnamed_addr constant [20 x i8] c"Invalid magic:  %x\0A\00", align 1
@.str.27.1178 = private unnamed_addr constant [7 x i8] c"1.6.15\00", align 1
@.str.59.1179 = private unnamed_addr constant [33 x i8] c"Failed to list SASL mechanisms.\0A\00", align 1
@.str.49.1180 = private unnamed_addr constant [11 x i8] c"<%d STATS \00", align 1
@.str.35.1181 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.50.1182 = private unnamed_addr constant [6 x i8] c"reset\00", align 1
@.str.51.1183 = private unnamed_addr constant [9 x i8] c"settings\00", align 1
@.str.52.1184 = private unnamed_addr constant [7 x i8] c"detail\00", align 1
@.str.53.1185 = private unnamed_addr constant [6 x i8] c" dump\00", align 1
@.str.54.1186 = private unnamed_addr constant [44 x i8] c"SERVER_ERROR Out of memory generating stats\00", align 1
@.str.55.1187 = private unnamed_addr constant [9 x i8] c"detailed\00", align 1
@.str.56.1188 = private unnamed_addr constant [4 x i8] c" on\00", align 1
@.str.57.1189 = private unnamed_addr constant [5 x i8] c" off\00", align 1
@.str.58.1190 = private unnamed_addr constant [51 x i8] c"SERVER_ERROR Out of memory preparing to send stats\00", align 1
@.str.48.1191 = private unnamed_addr constant [17 x i8] c"Value len is %d\0A\00", align 1
@.str.37.1192 = private unnamed_addr constant [43 x i8] c"SERVER_ERROR Out of memory allocating item\00", align 1
@.str.42.1193 = private unnamed_addr constant [6 x i8] c"incr \00", align 1
@.str.43.1194 = private unnamed_addr constant [17 x i8] c" %lld, %llu, %d\0A\00", align 1
@.str.44.1195 = private unnamed_addr constant [46 x i8] c"SERVER_ERROR Out of memory incrementing value\00", align 1
@.str.45.1196 = private unnamed_addr constant [5 x i8] c"%llu\00", align 1
@.str.46.1197 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1
@.str.47.1198 = private unnamed_addr constant [47 x i8] c"SERVER_ERROR Out of memory allocating new item\00", align 1
@.str.41.1199 = private unnamed_addr constant [10 x i8] c"Deleting \00", align 1
@.str.39.1200 = private unnamed_addr constant [6 x i8] c"TOUCH\00", align 1
@.str.40.1201 = private unnamed_addr constant [4 x i8] c"GET\00", align 1
@.str.38.1202 = private unnamed_addr constant [8 x i8] c"<%d %s \00", align 1
@.str.32.1203 = private unnamed_addr constant [9 x i8] c"<%d ADD \00", align 1
@.str.33.1204 = private unnamed_addr constant [9 x i8] c"<%d SET \00", align 1
@.str.34.1205 = private unnamed_addr constant [13 x i8] c"<%d REPLACE \00", align 1
@.str.36.1206 = private unnamed_addr constant [17 x i8] c" Value len is %d\00", align 1
@.str.31.1207 = private unnamed_addr constant [51 x i8] c"Protocol error (opcode %02x), close connection %d\0A\00", align 1
@.str.29.1208 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@.str.30.1209 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@.str.28.1210 = private unnamed_addr constant [37 x i8] c"authenticated() in cmd 0x%02x is %s\0A\00", align 1
@.str.1211 = private unnamed_addr constant [14 x i8] c"unknown error\00", align 1
@.str.1.1212 = private unnamed_addr constant [41 x i8] c"page_size must be divisible by wbuf_size\00", align 1
@.str.2.1213 = private unnamed_addr constant [35 x i8] c"wbuf_count must be >= page_buckets\00", align 1
@.str.3.1214 = private unnamed_addr constant [25 x i8] c"page_buckets must be > 0\00", align 1
@.str.4.1215 = private unnamed_addr constant [57 x i8] c"page_size and wbuf_size must be divisible by 1024*1024*2\00", align 1
@.str.5.1216 = private unnamed_addr constant [73 x i8] c"page_count must total to < 65536. Increase page_size or lower path sizes\00", align 1
@.str.6.1217 = private unnamed_addr constant [25 x i8] c"failed calloc for engine\00", align 1
@.str.7.1218 = private unnamed_addr constant [20 x i8] c"failed to open file\00", align 1
@crc32c = dso_local global i32 (i32, i8*, i64)* null, align 8
@crc32c_sw.little = internal constant i32 1, align 4
@crc32c_once_big = internal global i32 0, align 4
@crc32c_table_big_byte = internal global [256 x i32] zeroinitializer, align 16
@crc32c_table_big = internal global [8 x [256 x i64]] zeroinitializer, align 16
@crc32c_once_little = internal global i32 0, align 4
@crc32c_table_little = internal global [8 x [256 x i32]] zeroinitializer, align 16
@crc32c_once_hw = internal global i32 0, align 4
@crc32c_long = internal global [4 x [256 x i32]] zeroinitializer, align 16
@crc32c_short = internal global [4 x [256 x i32]] zeroinitializer, align 16
@.str.1225 = private unnamed_addr constant [6 x i8] c"%d:%s\00", align 1
@.str.1.1226 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.2.1227 = private unnamed_addr constant [5 x i8] c"%llu\00", align 1
@.str.3.1228 = private unnamed_addr constant [6 x i8] c"bytes\00", align 1
@.str.4.1229 = private unnamed_addr constant [7 x i8] c"bucket\00", align 1
@.str.5.1230 = private unnamed_addr constant [3 x i8] c"%u\00", align 1
@.str.6.1231 = private unnamed_addr constant [12 x i8] c"free_bucket\00", align 1
@.str.7.1234 = private unnamed_addr constant [22 x i8] c"extstore_compact_lost\00", align 1
@.str.8.1235 = private unnamed_addr constant [25 x i8] c"extstore_compact_rescues\00", align 1
@.str.9.1236 = private unnamed_addr constant [25 x i8] c"extstore_compact_skipped\00", align 1
@.str.10.1237 = private unnamed_addr constant [21 x i8] c"extstore_page_allocs\00", align 1
@.str.11.1238 = private unnamed_addr constant [24 x i8] c"extstore_page_evictions\00", align 1
@.str.12.1239 = private unnamed_addr constant [23 x i8] c"extstore_page_reclaims\00", align 1
@.str.13.1240 = private unnamed_addr constant [20 x i8] c"extstore_pages_free\00", align 1
@.str.14.1241 = private unnamed_addr constant [20 x i8] c"extstore_pages_used\00", align 1
@.str.15.1242 = private unnamed_addr constant [25 x i8] c"extstore_objects_evicted\00", align 1
@.str.16.1243 = private unnamed_addr constant [22 x i8] c"extstore_objects_read\00", align 1
@.str.17.1244 = private unnamed_addr constant [25 x i8] c"extstore_objects_written\00", align 1
@.str.18.1245 = private unnamed_addr constant [22 x i8] c"extstore_objects_used\00", align 1
@.str.19.1246 = private unnamed_addr constant [23 x i8] c"extstore_bytes_evicted\00", align 1
@.str.20.1247 = private unnamed_addr constant [23 x i8] c"extstore_bytes_written\00", align 1
@.str.21.1248 = private unnamed_addr constant [20 x i8] c"extstore_bytes_read\00", align 1
@.str.22.1249 = private unnamed_addr constant [20 x i8] c"extstore_bytes_used\00", align 1
@.str.23.1250 = private unnamed_addr constant [26 x i8] c"extstore_bytes_fragmented\00", align 1
@.str.24.1251 = private unnamed_addr constant [24 x i8] c"extstore_limit_maxbytes\00", align 1
@.str.25.1252 = private unnamed_addr constant [18 x i8] c"extstore_io_queue\00", align 1
@.str.26.1255 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.87.1256 = private unnamed_addr constant [4 x i8] c"VA \00", align 1
@.str.88.1257 = private unnamed_addr constant [5 x i8] c"EN\0D\0A\00", align 1
@storage_write_plock = internal global %union.pthread_mutex_t zeroinitializer, align 8
@storage_write_tid = internal global i64 0, align 8
@.str.27.1270 = private unnamed_addr constant [39 x i8] c"Can't create storage_write thread: %s\0A\00", align 1
@.str.89.1271 = private unnamed_addr constant [57 x i8] c"Failed to allocate logger for storage compaction thread\0A\00", align 1
@storage_compact_plock = internal global %union.pthread_mutex_t zeroinitializer, align 8
@storage_compact_tid = internal global i64 0, align 8
@.str.28.1278 = private unnamed_addr constant [41 x i8] c"Can't create storage_compact thread: %s\0A\00", align 1
@.str.90.1279 = private unnamed_addr constant [66 x i8] c"Failed to allocate readback buffer for storage compaction thread\0A\00", align 1
@.str.29.1280 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.30.1281 = private unnamed_addr constant [73 x i8] c"must supply size to ext_path, ie: ext_path=/f/e:64m (M|G|T|P supported)\0A\00", align 1
@.str.31.1282 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.32.1283 = private unnamed_addr constant [8 x i8] c"compact\00", align 1
@.str.33.1284 = private unnamed_addr constant [7 x i8] c"lowttl\00", align 1
@.str.34.1285 = private unnamed_addr constant [8 x i8] c"chunked\00", align 1
@.str.35.1286 = private unnamed_addr constant [8 x i8] c"default\00", align 1
@.str.36.1287 = private unnamed_addr constant [29 x i8] c"Unknown extstore bucket: %s\0A\00", align 1
@.str.37.1288 = private unnamed_addr constant [53 x i8] c"ext_path only presently supports the default bucket\0A\00", align 1
@__const.storage_read_config.subopts_tokens = private unnamed_addr constant [16 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.38.1323, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.39.1324, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.40.1325, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.41.1326, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.42.1327, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.43.1328, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.44.1329, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.45.1330, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.46.1331, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.47.1332, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.48.1333, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.49.1334, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.50.1335, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.51.1336, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.52.1337, i32 0, i32 0), i8* null], align 16
@.str.53.1293 = private unnamed_addr constant [58 x i8] c"Must specify ext_page_size before any ext_path arguments\0A\00", align 1
@.str.54.1294 = private unnamed_addr constant [32 x i8] c"Missing ext_page_size argument\0A\00", align 1
@.str.55.1295 = private unnamed_addr constant [43 x i8] c"could not parse argument to ext_page_size\0A\00", align 1
@.str.56.1296 = private unnamed_addr constant [32 x i8] c"Missing ext_wbuf_size argument\0A\00", align 1
@.str.57.1297 = private unnamed_addr constant [43 x i8] c"could not parse argument to ext_wbuf_size\0A\00", align 1
@.str.58.1298 = private unnamed_addr constant [30 x i8] c"Missing ext_threads argument\0A\00", align 1
@.str.59.1299 = private unnamed_addr constant [41 x i8] c"could not parse argument to ext_threads\0A\00", align 1
@.str.60.1300 = private unnamed_addr constant [31 x i8] c"Missing ext_io_depth argument\0A\00", align 1
@.str.61.1301 = private unnamed_addr constant [42 x i8] c"could not parse argument to ext_io_depth\0A\00", align 1
@.str.62.1302 = private unnamed_addr constant [32 x i8] c"Missing ext_item_size argument\0A\00", align 1
@.str.63.1303 = private unnamed_addr constant [43 x i8] c"could not parse argument to ext_item_size\0A\00", align 1
@.str.64.1304 = private unnamed_addr constant [31 x i8] c"Missing ext_item_age argument\0A\00", align 1
@.str.65.1305 = private unnamed_addr constant [42 x i8] c"could not parse argument to ext_item_age\0A\00", align 1
@.str.66.1306 = private unnamed_addr constant [30 x i8] c"Missing ext_low_ttl argument\0A\00", align 1
@.str.67.1307 = private unnamed_addr constant [41 x i8] c"could not parse argument to ext_low_ttl\0A\00", align 1
@.str.68.1308 = private unnamed_addr constant [35 x i8] c"Missing ext_recache_rate argument\0A\00", align 1
@.str.69.1309 = private unnamed_addr constant [46 x i8] c"could not parse argument to ext_recache_rate\0A\00", align 1
@.str.70.1310 = private unnamed_addr constant [36 x i8] c"Missing ext_compact_under argument\0A\00", align 1
@.str.71.1311 = private unnamed_addr constant [47 x i8] c"could not parse argument to ext_compact_under\0A\00", align 1
@.str.72.1312 = private unnamed_addr constant [33 x i8] c"Missing ext_drop_under argument\0A\00", align 1
@.str.73.1313 = private unnamed_addr constant [44 x i8] c"could not parse argument to ext_drop_under\0A\00", align 1
@.str.74.1314 = private unnamed_addr constant [32 x i8] c"Missing ext_max_sleep argument\0A\00", align 1
@.str.75.1315 = private unnamed_addr constant [43 x i8] c"could not parse argument to ext_max_sleep\0A\00", align 1
@.str.76.1316 = private unnamed_addr constant [31 x i8] c"Missing ext_max_frag argument\0A\00", align 1
@.str.77.1317 = private unnamed_addr constant [42 x i8] c"could not parse argument to ext_max_frag\0A\00", align 1
@.str.78.1318 = private unnamed_addr constant [42 x i8] c"Missing slab_automove_freeratio argument\0A\00", align 1
@.str.79.1319 = private unnamed_addr constant [53 x i8] c"could not parse argument to slab_automove_freeratio\0A\00", align 1
@.str.80.1320 = private unnamed_addr constant [35 x i8] c"failed to parse ext_path argument\0A\00", align 1
@.str.81.1321 = private unnamed_addr constant [55 x i8] c"missing argument to ext_path, ie: ext_path=/d/file:5G\0A\00", align 1
@.str.82.1322 = private unnamed_addr constant [24 x i8] c"Illegal suboption \22%s\22\0A\00", align 1
@.str.38.1323 = private unnamed_addr constant [14 x i8] c"ext_page_size\00", align 1
@.str.39.1324 = private unnamed_addr constant [14 x i8] c"ext_wbuf_size\00", align 1
@.str.40.1325 = private unnamed_addr constant [12 x i8] c"ext_threads\00", align 1
@.str.41.1326 = private unnamed_addr constant [13 x i8] c"ext_io_depth\00", align 1
@.str.42.1327 = private unnamed_addr constant [9 x i8] c"ext_path\00", align 1
@.str.43.1328 = private unnamed_addr constant [14 x i8] c"ext_item_size\00", align 1
@.str.44.1329 = private unnamed_addr constant [13 x i8] c"ext_item_age\00", align 1
@.str.45.1330 = private unnamed_addr constant [12 x i8] c"ext_low_ttl\00", align 1
@.str.46.1331 = private unnamed_addr constant [17 x i8] c"ext_recache_rate\00", align 1
@.str.47.1332 = private unnamed_addr constant [18 x i8] c"ext_compact_under\00", align 1
@.str.48.1333 = private unnamed_addr constant [15 x i8] c"ext_drop_under\00", align 1
@.str.49.1334 = private unnamed_addr constant [14 x i8] c"ext_max_sleep\00", align 1
@.str.50.1335 = private unnamed_addr constant [13 x i8] c"ext_max_frag\00", align 1
@.str.51.1336 = private unnamed_addr constant [16 x i8] c"ext_drop_unread\00", align 1
@.str.52.1337 = private unnamed_addr constant [24 x i8] c"slab_automove_freeratio\00", align 1
@.str.83.1340 = private unnamed_addr constant [64 x i8] c"-I (item_size_max: %d) cannot be larger than ext_wbuf_size: %d\0A\00", align 1
@.str.84.1341 = private unnamed_addr constant [56 x i8] c"Cannot use UDP with extstore enabled (-U 0 to disable)\0A\00", align 1
@.str.85.1344 = private unnamed_addr constant [43 x i8] c"Failed to initialize external storage: %s\0A\00", align 1
@.str.86.1345 = private unnamed_addr constant [14 x i8] c"extstore open\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @realtime(i64 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i64, align 8
  store i64 %0, i64* %3, align 8
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %6, label %7

6:                                                ; preds = %1
  store i32 0, i32* %2, align 4
  br label %26

7:                                                ; preds = %1
  %8 = load i64, i64* %3, align 8
  %9 = icmp sgt i64 %8, 2592000
  br i1 %9, label %10, label %20

10:                                               ; preds = %7
  %11 = load i64, i64* %3, align 8
  %12 = load i64, i64* @process_started, align 8
  %13 = icmp sle i64 %11, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %10
  store i32 1, i32* %2, align 4
  br label %26

15:                                               ; preds = %10
  %16 = load i64, i64* %3, align 8
  %17 = load i64, i64* @process_started, align 8
  %18 = sub nsw i64 %16, %17
  %19 = trunc i64 %18 to i32
  store i32 %19, i32* %2, align 4
  br label %26

20:                                               ; preds = %7
  %21 = load i64, i64* %3, align 8
  %22 = load volatile i32, i32* @current_time, align 4
  %23 = zext i32 %22 to i64
  %24 = add nsw i64 %21, %23
  %25 = trunc i64 %24 to i32
  store i32 %25, i32* %2, align 4
  br label %26

26:                                               ; preds = %20, %15, %14, %6
  %27 = load i32, i32* %2, align 4
  ret i32 %27
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @stats_reset() #0 {
  call void @STATS_LOCK()
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (%struct.stats* @stats to i8*), i8 0, i64 208, i1 false)
  call void @stats_prefix_clear()
  call void @STATS_UNLOCK()
  call void @threadlocal_stats_reset()
  call void @item_stats_reset()
  ret void
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @stop_conn_timeout_thread() #0 {
  %1 = alloca i32, align 4
  %2 = load i32, i32* @do_run_conn_timeout_thread, align 4
  %3 = icmp ne i32 %2, 0
  br i1 %3, label %5, label %4

4:                                                ; preds = %0
  store i32 -1, i32* %1, align 4
  br label %11

5:                                                ; preds = %0
  %6 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @conn_timeout_lock) #14
  store i32 0, i32* @do_run_conn_timeout_thread, align 4
  %7 = call i32 @pthread_cond_signal(%union.pthread_cond_t* @conn_timeout_cond) #14
  %8 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @conn_timeout_lock) #14
  %9 = load i64, i64* @conn_timeout_tid, align 8
  %10 = call i32 @pthread_join(i64 %9, i8** null)
  store i32 0, i32* %1, align 4
  br label %11

11:                                               ; preds = %5, %4
  %12 = load i32, i32* %1, align 4
  ret i32 %12
}

; Function Attrs: nounwind
declare dso_local i32 @pthread_mutex_lock(%union.pthread_mutex_t*) #2

; Function Attrs: nounwind
declare dso_local i32 @pthread_cond_signal(%union.pthread_cond_t*) #2

; Function Attrs: nounwind
declare dso_local i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) #2

declare dso_local i32 @pthread_join(i64, i8**) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @rbuf_switch_to_malloc(%struct.conn* %0) #0 {
  %2 = alloca i1, align 1
  %3 = alloca %struct.conn*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i8*, align 8
  store %struct.conn* %0, %struct.conn** %3, align 8
  %6 = load %struct.conn*, %struct.conn** %3, align 8
  %7 = getelementptr inbounds %struct.conn, %struct.conn* %6, i32 0, i32 17
  %8 = load i32, i32* %7, align 8
  %9 = mul nsw i32 %8, 2
  %10 = sext i32 %9 to i64
  store i64 %10, i64* %4, align 8
  %11 = load i64, i64* %4, align 8
  %12 = call noalias i8* @malloc(i64 %11) #14
  store i8* %12, i8** %5, align 8
  %13 = load i8*, i8** %5, align 8
  %14 = icmp ne i8* %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %1
  store i1 false, i1* %2, align 1
  br label %44

16:                                               ; preds = %1
  %17 = load i8*, i8** %5, align 8
  %18 = load %struct.conn*, %struct.conn** %3, align 8
  %19 = getelementptr inbounds %struct.conn, %struct.conn* %18, i32 0, i32 16
  %20 = load i8*, i8** %19, align 8
  %21 = load %struct.conn*, %struct.conn** %3, align 8
  %22 = getelementptr inbounds %struct.conn, %struct.conn* %21, i32 0, i32 18
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %17, i8* align 1 %20, i64 %24, i1 false)
  %25 = load %struct.conn*, %struct.conn** %3, align 8
  %26 = getelementptr inbounds %struct.conn, %struct.conn* %25, i32 0, i32 42
  %27 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %26, align 8
  %28 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %27, i32 0, i32 7
  %29 = load %struct.cache_t*, %struct.cache_t** %28, align 8
  %30 = load %struct.conn*, %struct.conn** %3, align 8
  %31 = getelementptr inbounds %struct.conn, %struct.conn* %30, i32 0, i32 15
  %32 = load i8*, i8** %31, align 8
  call void @do_cache_free(%struct.cache_t* %29, i8* %32)
  %33 = load i8*, i8** %5, align 8
  %34 = load %struct.conn*, %struct.conn** %3, align 8
  %35 = getelementptr inbounds %struct.conn, %struct.conn* %34, i32 0, i32 15
  store i8* %33, i8** %35, align 8
  %36 = load %struct.conn*, %struct.conn** %3, align 8
  %37 = getelementptr inbounds %struct.conn, %struct.conn* %36, i32 0, i32 16
  store i8* %33, i8** %37, align 8
  %38 = load i64, i64* %4, align 8
  %39 = trunc i64 %38 to i32
  %40 = load %struct.conn*, %struct.conn** %3, align 8
  %41 = getelementptr inbounds %struct.conn, %struct.conn* %40, i32 0, i32 17
  store i32 %39, i32* %41, align 8
  %42 = load %struct.conn*, %struct.conn** %3, align 8
  %43 = getelementptr inbounds %struct.conn, %struct.conn* %42, i32 0, i32 7
  store i8 1, i8* %43, align 1
  store i1 true, i1* %2, align 1
  br label %44

44:                                               ; preds = %16, %15
  %45 = load i1, i1* %2, align 1
  ret i1 %45
}

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #2

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @conn_close_idle(%struct.conn* %0) #0 {
  %2 = alloca %struct.conn*, align 8
  store %struct.conn* %0, %struct.conn** %2, align 8
  %3 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 50), align 4
  %4 = icmp sgt i32 %3, 0
  br i1 %4, label %5, label %66

5:                                                ; preds = %1
  %6 = load volatile i32, i32* @current_time, align 4
  %7 = load %struct.conn*, %struct.conn** %2, align 8
  %8 = getelementptr inbounds %struct.conn, %struct.conn* %7, i32 0, i32 11
  %9 = load i32, i32* %8, align 4
  %10 = sub i32 %6, %9
  %11 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 50), align 4
  %12 = icmp ugt i32 %10, %11
  br i1 %12, label %13, label %66

13:                                               ; preds = %5
  %14 = load %struct.conn*, %struct.conn** %2, align 8
  %15 = getelementptr inbounds %struct.conn, %struct.conn* %14, i32 0, i32 9
  %16 = load i32, i32* %15, align 4
  %17 = icmp ne i32 %16, 1
  br i1 %17, label %18, label %33

18:                                               ; preds = %13
  %19 = load %struct.conn*, %struct.conn** %2, align 8
  %20 = getelementptr inbounds %struct.conn, %struct.conn* %19, i32 0, i32 9
  %21 = load i32, i32* %20, align 4
  %22 = icmp ne i32 %21, 3
  br i1 %22, label %23, label %33

23:                                               ; preds = %18
  %24 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %25 = icmp sgt i32 %24, 1
  br i1 %25, label %26, label %32

26:                                               ; preds = %23
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %28 = load %struct.conn*, %struct.conn** %2, align 8
  %29 = getelementptr inbounds %struct.conn, %struct.conn* %28, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %27, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 %30)
  br label %32

32:                                               ; preds = %26, %23
  br label %66

33:                                               ; preds = %18, %13
  %34 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %35 = icmp sgt i32 %34, 1
  br i1 %35, label %36, label %42

36:                                               ; preds = %33
  %37 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %38 = load %struct.conn*, %struct.conn** %2, align 8
  %39 = getelementptr inbounds %struct.conn, %struct.conn* %38, i32 0, i32 1
  %40 = load i32, i32* %39, align 8
  %41 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %37, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i32 %40)
  br label %42

42:                                               ; preds = %36, %33
  %43 = load %struct.conn*, %struct.conn** %2, align 8
  %44 = getelementptr inbounds %struct.conn, %struct.conn* %43, i32 0, i32 42
  %45 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %44, align 8
  %46 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %45, i32 0, i32 4
  %47 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %46, i32 0, i32 0
  %48 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %47) #14
  %49 = load %struct.conn*, %struct.conn** %2, align 8
  %50 = getelementptr inbounds %struct.conn, %struct.conn* %49, i32 0, i32 42
  %51 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %50, align 8
  %52 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %51, i32 0, i32 4
  %53 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %52, i32 0, i32 18
  %54 = load i64, i64* %53, align 8
  %55 = add i64 %54, 1
  store i64 %55, i64* %53, align 8
  %56 = load %struct.conn*, %struct.conn** %2, align 8
  %57 = getelementptr inbounds %struct.conn, %struct.conn* %56, i32 0, i32 42
  %58 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %57, align 8
  %59 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %58, i32 0, i32 4
  %60 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %59, i32 0, i32 0
  %61 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %60) #14
  %62 = load %struct.conn*, %struct.conn** %2, align 8
  %63 = getelementptr inbounds %struct.conn, %struct.conn* %62, i32 0, i32 30
  store i32 2, i32* %63, align 4
  %64 = load %struct.conn*, %struct.conn** %2, align 8
  call void @conn_set_state(%struct.conn* %64, i32 8)
  %65 = load %struct.conn*, %struct.conn** %2, align 8
  call void @drive_machine(%struct.conn* %65)
  br label %66

66:                                               ; preds = %32, %42, %5, %1
  ret void
}

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @conn_set_state(%struct.conn* %0, i32 %1) #0 {
  %3 = alloca %struct.conn*, align 8
  %4 = alloca i32, align 4
  store %struct.conn* %0, %struct.conn** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  %6 = load %struct.conn*, %struct.conn** %3, align 8
  %7 = getelementptr inbounds %struct.conn, %struct.conn* %6, i32 0, i32 9
  %8 = load i32, i32* %7, align 4
  %9 = icmp ne i32 %5, %8
  br i1 %9, label %10, label %36

10:                                               ; preds = %2
  %11 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %12 = icmp sgt i32 %11, 2
  br i1 %12, label %13, label %25

13:                                               ; preds = %10
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %15 = load %struct.conn*, %struct.conn** %3, align 8
  %16 = getelementptr inbounds %struct.conn, %struct.conn* %15, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = load %struct.conn*, %struct.conn** %3, align 8
  %19 = getelementptr inbounds %struct.conn, %struct.conn* %18, i32 0, i32 9
  %20 = load i32, i32* %19, align 4
  %21 = call i8* @state_text(i32 %20)
  %22 = load i32, i32* %4, align 4
  %23 = call i8* @state_text(i32 %22)
  %24 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %14, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.15, i64 0, i64 0), i32 %17, i8* %21, i8* %23)
  br label %25

25:                                               ; preds = %13, %10
  %26 = load i32, i32* %4, align 4
  %27 = icmp eq i32 %26, 5
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = load i32, i32* %4, align 4
  %30 = icmp eq i32 %29, 9
  br i1 %30, label %31, label %32

31:                                               ; preds = %28, %25
  br label %32

32:                                               ; preds = %31, %28
  %33 = load i32, i32* %4, align 4
  %34 = load %struct.conn*, %struct.conn** %3, align 8
  %35 = getelementptr inbounds %struct.conn, %struct.conn* %34, i32 0, i32 9
  store i32 %33, i32* %35, align 4
  br label %36

36:                                               ; preds = %32, %2
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @drive_machine(%struct.conn* %0) #0 {
  %2 = alloca %struct.conn*, align 8
  %3 = alloca i8, align 1
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %struct.sockaddr_storage, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca %union.__SOCKADDR_ARG, align 8
  %11 = alloca %union.__SOCKADDR_ARG, align 8
  %12 = alloca i8, align 1
  %13 = alloca i8*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca %struct.io_queue_s*, align 8
  %17 = alloca %struct.io_queue_cb_s*, align 8
  store %struct.conn* %0, %struct.conn** %2, align 8
  store i8 0, i8* %3, align 1
  %18 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 18), align 4
  store i32 %18, i32* %7, align 4
  br label %19

19:                                               ; preds = %734, %58, %1
  %20 = load i8, i8* %3, align 1
  %21 = trunc i8 %20 to i1
  %22 = xor i1 %21, true
  br i1 %22, label %23, label %735

23:                                               ; preds = %19
  %24 = load %struct.conn*, %struct.conn** %2, align 8
  %25 = getelementptr inbounds %struct.conn, %struct.conn* %24, i32 0, i32 9
  %26 = load i32, i32* %25, align 4
  switch i32 %26, label %734 [
    i32 0, label %27
    i32 2, label %135
    i32 3, label %149
    i32 4, label %175
    i32 1, label %195
    i32 6, label %248
    i32 7, label %490
    i32 5, label %631
    i32 9, label %631
    i32 8, label %718
    i32 10, label %728
    i32 11, label %729
    i32 12, label %730
    i32 13, label %733
  ]

27:                                               ; preds = %23
  store i32 128, i32* %5, align 4
  %28 = load i32, i32* @drive_machine.use_accept4, align 4
  %29 = icmp ne i32 %28, 0
  br i1 %29, label %30, label %39

30:                                               ; preds = %27
  %31 = load %struct.conn*, %struct.conn** %2, align 8
  %32 = getelementptr inbounds %struct.conn, %struct.conn* %31, i32 0, i32 1
  %33 = load i32, i32* %32, align 8
  %34 = bitcast %union.__SOCKADDR_ARG* %10 to %struct.sockaddr**
  %35 = bitcast %struct.sockaddr_storage* %6 to %struct.sockaddr*
  store %struct.sockaddr* %35, %struct.sockaddr** %34, align 8
  %36 = getelementptr inbounds %union.__SOCKADDR_ARG, %union.__SOCKADDR_ARG* %10, i32 0, i32 0
  %37 = load %struct.sockaddr*, %struct.sockaddr** %36, align 8
  %38 = call i32 @accept4(i32 %33, %struct.sockaddr* %37, i32* %5, i32 2048)
  store i32 %38, i32* %4, align 4
  br label %48

39:                                               ; preds = %27
  %40 = load %struct.conn*, %struct.conn** %2, align 8
  %41 = getelementptr inbounds %struct.conn, %struct.conn* %40, i32 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = bitcast %union.__SOCKADDR_ARG* %11 to %struct.sockaddr**
  %44 = bitcast %struct.sockaddr_storage* %6 to %struct.sockaddr*
  store %struct.sockaddr* %44, %struct.sockaddr** %43, align 8
  %45 = getelementptr inbounds %union.__SOCKADDR_ARG, %union.__SOCKADDR_ARG* %11, i32 0, i32 0
  %46 = load %struct.sockaddr*, %struct.sockaddr** %45, align 8
  %47 = call i32 @accept(i32 %42, %struct.sockaddr* %46, i32* %5)
  store i32 %47, i32* %4, align 4
  br label %48

48:                                               ; preds = %39, %30
  %49 = load i32, i32* %4, align 4
  %50 = icmp eq i32 %49, -1
  br i1 %50, label %51, label %86

51:                                               ; preds = %48
  %52 = load i32, i32* @drive_machine.use_accept4, align 4
  %53 = icmp ne i32 %52, 0
  br i1 %53, label %54, label %59

54:                                               ; preds = %51
  %55 = call i32* @__errno_location() #15
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 38
  br i1 %57, label %58, label %59

58:                                               ; preds = %54
  store i32 0, i32* @drive_machine.use_accept4, align 4
  br label %19, !llvm.loop !2

59:                                               ; preds = %54, %51
  %60 = load i32, i32* @drive_machine.use_accept4, align 4
  %61 = icmp ne i32 %60, 0
  %62 = zext i1 %61 to i64
  %63 = select i1 %61, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.390, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.391, i64 0, i64 0)
  call void @perror(i8* %63)
  %64 = call i32* @__errno_location() #15
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 11
  br i1 %66, label %71, label %67

67:                                               ; preds = %59
  %68 = call i32* @__errno_location() #15
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %69, 11
  br i1 %70, label %71, label %72

71:                                               ; preds = %67, %59
  store i8 1, i8* %3, align 1
  br label %85

72:                                               ; preds = %67
  %73 = call i32* @__errno_location() #15
  %74 = load i32, i32* %73, align 4
  %75 = icmp eq i32 %74, 24
  br i1 %75, label %76, label %83

76:                                               ; preds = %72
  %77 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %78 = icmp sgt i32 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %76
  %80 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %81 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %80, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.392, i64 0, i64 0))
  br label %82

82:                                               ; preds = %79, %76
  call void @accept_new_conns(i1 zeroext false)
  store i8 1, i8* %3, align 1
  br label %84

83:                                               ; preds = %72
  call void @perror(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.391, i64 0, i64 0))
  store i8 1, i8* %3, align 1
  br label %84

84:                                               ; preds = %83, %82
  br label %85

85:                                               ; preds = %84, %71
  br label %734

86:                                               ; preds = %48
  %87 = load i32, i32* @drive_machine.use_accept4, align 4
  %88 = icmp ne i32 %87, 0
  br i1 %88, label %100, label %89

89:                                               ; preds = %86
  %90 = load i32, i32* %4, align 4
  %91 = load i32, i32* %4, align 4
  %92 = call i32 (i32, i32, ...) @fcntl(i32 %91, i32 3)
  %93 = or i32 %92, 2048
  %94 = call i32 (i32, i32, ...) @fcntl(i32 %90, i32 4, i32 %93)
  %95 = icmp slt i32 %94, 0
  br i1 %95, label %96, label %99

96:                                               ; preds = %89
  call void @perror(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.393, i64 0, i64 0))
  %97 = load i32, i32* %4, align 4
  %98 = call i32 @close(i32 %97)
  br label %734

99:                                               ; preds = %89
  br label %100

100:                                              ; preds = %99, %86
  %101 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 27), align 1
  %102 = trunc i8 %101 to i1
  br i1 %102, label %103, label %115

103:                                              ; preds = %100
  %104 = load i32, i32* %4, align 4
  %105 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 1), align 8
  %106 = sub nsw i32 %105, 1
  %107 = icmp sge i32 %104, %106
  %108 = zext i1 %107 to i8
  store i8 %108, i8* %12, align 1
  %109 = load i8, i8* %12, align 1
  %110 = trunc i8 %109 to i1
  br i1 %110, label %111, label %114

111:                                              ; preds = %103
  call void @STATS_LOCK()
  %112 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 2), align 8
  %113 = add i64 %112, 1
  store i64 %113, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 2), align 8
  call void @STATS_UNLOCK()
  br label %114

114:                                              ; preds = %111, %103
  br label %116

115:                                              ; preds = %100
  store i8 0, i8* %12, align 1
  br label %116

116:                                              ; preds = %115, %114
  %117 = load i8, i8* %12, align 1
  %118 = trunc i8 %117 to i1
  br i1 %118, label %119, label %128

119:                                              ; preds = %116
  store i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.394, i64 0, i64 0), i8** %9, align 8
  %120 = load i32, i32* %4, align 4
  %121 = load i8*, i8** %9, align 8
  %122 = load i8*, i8** %9, align 8
  %123 = call i64 @strlen(i8* %122) #16
  %124 = call i64 @write(i32 %120, i8* %121, i64 %123)
  %125 = trunc i64 %124 to i32
  store i32 %125, i32* %8, align 4
  %126 = load i32, i32* %4, align 4
  %127 = call i32 @close(i32 %126)
  br label %134

128:                                              ; preds = %116
  store i8* null, i8** %13, align 8
  %129 = load i32, i32* %4, align 4
  %130 = load %struct.conn*, %struct.conn** %2, align 8
  %131 = getelementptr inbounds %struct.conn, %struct.conn* %130, i32 0, i32 29
  %132 = load i32, i32* %131, align 8
  %133 = load i8*, i8** %13, align 8
  call void @dispatch_conn_new(i32 %129, i32 1, i32 18, i32 0, i32 %132, i8* %133)
  br label %134

134:                                              ; preds = %128, %119
  store i8 1, i8* %3, align 1
  br label %734

135:                                              ; preds = %23
  %136 = load %struct.conn*, %struct.conn** %2, align 8
  call void @rbuf_release(%struct.conn* %136)
  %137 = load %struct.conn*, %struct.conn** %2, align 8
  %138 = call zeroext i1 @update_event(%struct.conn* %137, i32 18)
  br i1 %138, label %147, label %139

139:                                              ; preds = %135
  %140 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %141 = icmp sgt i32 %140, 0
  br i1 %141, label %142, label %145

142:                                              ; preds = %139
  %143 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %144 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %143, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.395, i64 0, i64 0))
  br label %145

145:                                              ; preds = %142, %139
  %146 = load %struct.conn*, %struct.conn** %2, align 8
  call void @conn_set_state(%struct.conn* %146, i32 8)
  br label %734

147:                                              ; preds = %135
  %148 = load %struct.conn*, %struct.conn** %2, align 8
  call void @conn_set_state(%struct.conn* %148, i32 3)
  store i8 1, i8* %3, align 1
  br label %734

149:                                              ; preds = %23
  %150 = load %struct.conn*, %struct.conn** %2, align 8
  %151 = getelementptr inbounds %struct.conn, %struct.conn* %150, i32 0, i32 29
  %152 = load i32, i32* %151, align 8
  %153 = icmp eq i32 %152, 2
  br i1 %153, label %162, label %154

154:                                              ; preds = %149
  %155 = load %struct.conn*, %struct.conn** %2, align 8
  %156 = call zeroext i1 @rbuf_alloc(%struct.conn* %155)
  br i1 %156, label %159, label %157

157:                                              ; preds = %154
  %158 = load %struct.conn*, %struct.conn** %2, align 8
  call void @conn_set_state(%struct.conn* %158, i32 8)
  br label %734

159:                                              ; preds = %154
  %160 = load %struct.conn*, %struct.conn** %2, align 8
  %161 = call i32 @try_read_network(%struct.conn* %160)
  store i32 %161, i32* %8, align 4
  br label %165

162:                                              ; preds = %149
  %163 = load %struct.conn*, %struct.conn** %2, align 8
  %164 = call i32 @try_read_udp(%struct.conn* %163)
  store i32 %164, i32* %8, align 4
  br label %165

165:                                              ; preds = %162, %159
  %166 = load i32, i32* %8, align 4
  switch i32 %166, label %174 [
    i32 1, label %167
    i32 0, label %169
    i32 2, label %171
    i32 3, label %173
  ]

167:                                              ; preds = %165
  %168 = load %struct.conn*, %struct.conn** %2, align 8
  call void @conn_set_state(%struct.conn* %168, i32 2)
  br label %174

169:                                              ; preds = %165
  %170 = load %struct.conn*, %struct.conn** %2, align 8
  call void @conn_set_state(%struct.conn* %170, i32 4)
  br label %174

171:                                              ; preds = %165
  %172 = load %struct.conn*, %struct.conn** %2, align 8
  call void @conn_set_state(%struct.conn* %172, i32 8)
  br label %174

173:                                              ; preds = %165
  br label %174

174:                                              ; preds = %165, %173, %171, %169, %167
  br label %734

175:                                              ; preds = %23
  %176 = load %struct.conn*, %struct.conn** %2, align 8
  %177 = getelementptr inbounds %struct.conn, %struct.conn* %176, i32 0, i32 34
  store i8 0, i8* %177, align 4
  %178 = load %struct.conn*, %struct.conn** %2, align 8
  %179 = getelementptr inbounds %struct.conn, %struct.conn* %178, i32 0, i32 43
  %180 = load i32 (%struct.conn*)*, i32 (%struct.conn*)** %179, align 8
  %181 = load %struct.conn*, %struct.conn** %2, align 8
  %182 = call i32 %180(%struct.conn* %181)
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %184, label %194

184:                                              ; preds = %175
  %185 = load %struct.conn*, %struct.conn** %2, align 8
  %186 = getelementptr inbounds %struct.conn, %struct.conn* %185, i32 0, i32 20
  %187 = load %struct._mc_resp*, %struct._mc_resp** %186, align 8
  %188 = icmp ne %struct._mc_resp* %187, null
  br i1 %188, label %189, label %191

189:                                              ; preds = %184
  %190 = load %struct.conn*, %struct.conn** %2, align 8
  call void @conn_set_state(%struct.conn* %190, i32 9)
  br label %193

191:                                              ; preds = %184
  %192 = load %struct.conn*, %struct.conn** %2, align 8
  call void @conn_set_state(%struct.conn* %192, i32 2)
  br label %193

193:                                              ; preds = %191, %189
  br label %194

194:                                              ; preds = %193, %175
  br label %734

195:                                              ; preds = %23
  %196 = load i32, i32* %7, align 4
  %197 = add nsw i32 %196, -1
  store i32 %197, i32* %7, align 4
  %198 = load i32, i32* %7, align 4
  %199 = icmp sge i32 %198, 0
  br i1 %199, label %200, label %202

200:                                              ; preds = %195
  %201 = load %struct.conn*, %struct.conn** %2, align 8
  call void @reset_cmd_handler(%struct.conn* %201)
  br label %247

202:                                              ; preds = %195
  %203 = load %struct.conn*, %struct.conn** %2, align 8
  %204 = getelementptr inbounds %struct.conn, %struct.conn* %203, i32 0, i32 20
  %205 = load %struct._mc_resp*, %struct._mc_resp** %204, align 8
  %206 = icmp ne %struct._mc_resp* %205, null
  br i1 %206, label %207, label %209

207:                                              ; preds = %202
  %208 = load %struct.conn*, %struct.conn** %2, align 8
  call void @conn_set_state(%struct.conn* %208, i32 9)
  br label %246

209:                                              ; preds = %202
  %210 = load %struct.conn*, %struct.conn** %2, align 8
  %211 = getelementptr inbounds %struct.conn, %struct.conn* %210, i32 0, i32 42
  %212 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %211, align 8
  %213 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %212, i32 0, i32 4
  %214 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %213, i32 0, i32 0
  %215 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %214) #14
  %216 = load %struct.conn*, %struct.conn** %2, align 8
  %217 = getelementptr inbounds %struct.conn, %struct.conn* %216, i32 0, i32 42
  %218 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %217, align 8
  %219 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %218, i32 0, i32 4
  %220 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %219, i32 0, i32 15
  %221 = load i64, i64* %220, align 8
  %222 = add i64 %221, 1
  store i64 %222, i64* %220, align 8
  %223 = load %struct.conn*, %struct.conn** %2, align 8
  %224 = getelementptr inbounds %struct.conn, %struct.conn* %223, i32 0, i32 42
  %225 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %224, align 8
  %226 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %225, i32 0, i32 4
  %227 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %226, i32 0, i32 0
  %228 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %227) #14
  %229 = load %struct.conn*, %struct.conn** %2, align 8
  %230 = getelementptr inbounds %struct.conn, %struct.conn* %229, i32 0, i32 18
  %231 = load i32, i32* %230, align 4
  %232 = icmp sgt i32 %231, 0
  br i1 %232, label %233, label %245

233:                                              ; preds = %209
  %234 = load %struct.conn*, %struct.conn** %2, align 8
  %235 = call zeroext i1 @update_event(%struct.conn* %234, i32 20)
  br i1 %235, label %244, label %236

236:                                              ; preds = %233
  %237 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %238 = icmp sgt i32 %237, 0
  br i1 %238, label %239, label %242

239:                                              ; preds = %236
  %240 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %241 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %240, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.395, i64 0, i64 0))
  br label %242

242:                                              ; preds = %239, %236
  %243 = load %struct.conn*, %struct.conn** %2, align 8
  call void @conn_set_state(%struct.conn* %243, i32 8)
  br label %734

244:                                              ; preds = %233
  br label %245

245:                                              ; preds = %244, %209
  store i8 1, i8* %3, align 1
  br label %246

246:                                              ; preds = %245, %207
  br label %247

247:                                              ; preds = %246, %200
  br label %734

248:                                              ; preds = %23
  %249 = load %struct.conn*, %struct.conn** %2, align 8
  %250 = getelementptr inbounds %struct.conn, %struct.conn* %249, i32 0, i32 22
  %251 = load i32, i32* %250, align 8
  %252 = icmp eq i32 %251, 0
  br i1 %252, label %253, label %255

253:                                              ; preds = %248
  %254 = load %struct.conn*, %struct.conn** %2, align 8
  call void @complete_nread(%struct.conn* %254)
  br label %734

255:                                              ; preds = %248
  %256 = load %struct.conn*, %struct.conn** %2, align 8
  %257 = getelementptr inbounds %struct.conn, %struct.conn* %256, i32 0, i32 22
  %258 = load i32, i32* %257, align 8
  %259 = icmp slt i32 %258, 0
  br i1 %259, label %260, label %271

260:                                              ; preds = %255
  %261 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %262 = icmp ne i32 %261, 0
  br i1 %262, label %263, label %269

263:                                              ; preds = %260
  %264 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %265 = load %struct.conn*, %struct.conn** %2, align 8
  %266 = getelementptr inbounds %struct.conn, %struct.conn* %265, i32 0, i32 22
  %267 = load i32, i32* %266, align 8
  %268 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %264, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.396, i64 0, i64 0), i32 %267)
  br label %269

269:                                              ; preds = %263, %260
  %270 = load %struct.conn*, %struct.conn** %2, align 8
  call void @conn_set_state(%struct.conn* %270, i32 8)
  br label %734

271:                                              ; preds = %255
  %272 = load %struct.conn*, %struct.conn** %2, align 8
  %273 = getelementptr inbounds %struct.conn, %struct.conn* %272, i32 0, i32 8
  %274 = load i8, i8* %273, align 2
  %275 = trunc i8 %274 to i1
  br i1 %275, label %286, label %276

276:                                              ; preds = %271
  %277 = load %struct.conn*, %struct.conn** %2, align 8
  %278 = getelementptr inbounds %struct.conn, %struct.conn* %277, i32 0, i32 23
  %279 = load i8*, i8** %278, align 8
  %280 = bitcast i8* %279 to %struct._stritem*
  %281 = getelementptr inbounds %struct._stritem, %struct._stritem* %280, i32 0, i32 7
  %282 = load i16, i16* %281, align 2
  %283 = zext i16 %282 to i32
  %284 = and i32 %283, 32
  %285 = icmp eq i32 %284, 0
  br i1 %285, label %286, label %410

286:                                              ; preds = %276, %271
  %287 = load %struct.conn*, %struct.conn** %2, align 8
  %288 = getelementptr inbounds %struct.conn, %struct.conn* %287, i32 0, i32 18
  %289 = load i32, i32* %288, align 4
  %290 = icmp sgt i32 %289, 0
  br i1 %290, label %291, label %345

291:                                              ; preds = %286
  %292 = load %struct.conn*, %struct.conn** %2, align 8
  %293 = getelementptr inbounds %struct.conn, %struct.conn* %292, i32 0, i32 18
  %294 = load i32, i32* %293, align 4
  %295 = load %struct.conn*, %struct.conn** %2, align 8
  %296 = getelementptr inbounds %struct.conn, %struct.conn* %295, i32 0, i32 22
  %297 = load i32, i32* %296, align 8
  %298 = icmp sgt i32 %294, %297
  br i1 %298, label %299, label %303

299:                                              ; preds = %291
  %300 = load %struct.conn*, %struct.conn** %2, align 8
  %301 = getelementptr inbounds %struct.conn, %struct.conn* %300, i32 0, i32 22
  %302 = load i32, i32* %301, align 8
  br label %307

303:                                              ; preds = %291
  %304 = load %struct.conn*, %struct.conn** %2, align 8
  %305 = getelementptr inbounds %struct.conn, %struct.conn* %304, i32 0, i32 18
  %306 = load i32, i32* %305, align 4
  br label %307

307:                                              ; preds = %303, %299
  %308 = phi i32 [ %302, %299 ], [ %306, %303 ]
  store i32 %308, i32* %14, align 4
  %309 = load %struct.conn*, %struct.conn** %2, align 8
  %310 = getelementptr inbounds %struct.conn, %struct.conn* %309, i32 0, i32 21
  %311 = load i8*, i8** %310, align 8
  %312 = load %struct.conn*, %struct.conn** %2, align 8
  %313 = getelementptr inbounds %struct.conn, %struct.conn* %312, i32 0, i32 16
  %314 = load i8*, i8** %313, align 8
  %315 = load i32, i32* %14, align 4
  %316 = sext i32 %315 to i64
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %311, i8* align 1 %314, i64 %316, i1 false)
  %317 = load i32, i32* %14, align 4
  %318 = load %struct.conn*, %struct.conn** %2, align 8
  %319 = getelementptr inbounds %struct.conn, %struct.conn* %318, i32 0, i32 21
  %320 = load i8*, i8** %319, align 8
  %321 = sext i32 %317 to i64
  %322 = getelementptr inbounds i8, i8* %320, i64 %321
  store i8* %322, i8** %319, align 8
  %323 = load i32, i32* %14, align 4
  %324 = load %struct.conn*, %struct.conn** %2, align 8
  %325 = getelementptr inbounds %struct.conn, %struct.conn* %324, i32 0, i32 22
  %326 = load i32, i32* %325, align 8
  %327 = sub nsw i32 %326, %323
  store i32 %327, i32* %325, align 8
  %328 = load i32, i32* %14, align 4
  %329 = load %struct.conn*, %struct.conn** %2, align 8
  %330 = getelementptr inbounds %struct.conn, %struct.conn* %329, i32 0, i32 16
  %331 = load i8*, i8** %330, align 8
  %332 = sext i32 %328 to i64
  %333 = getelementptr inbounds i8, i8* %331, i64 %332
  store i8* %333, i8** %330, align 8
  %334 = load i32, i32* %14, align 4
  %335 = load %struct.conn*, %struct.conn** %2, align 8
  %336 = getelementptr inbounds %struct.conn, %struct.conn* %335, i32 0, i32 18
  %337 = load i32, i32* %336, align 4
  %338 = sub nsw i32 %337, %334
  store i32 %338, i32* %336, align 4
  %339 = load %struct.conn*, %struct.conn** %2, align 8
  %340 = getelementptr inbounds %struct.conn, %struct.conn* %339, i32 0, i32 22
  %341 = load i32, i32* %340, align 8
  %342 = icmp eq i32 %341, 0
  br i1 %342, label %343, label %344

343:                                              ; preds = %307
  br label %734

344:                                              ; preds = %307
  br label %345

345:                                              ; preds = %344, %286
  %346 = load %struct.conn*, %struct.conn** %2, align 8
  %347 = getelementptr inbounds %struct.conn, %struct.conn* %346, i32 0, i32 44
  %348 = load i64 (%struct.conn*, i8*, i64)*, i64 (%struct.conn*, i8*, i64)** %347, align 8
  %349 = load %struct.conn*, %struct.conn** %2, align 8
  %350 = load %struct.conn*, %struct.conn** %2, align 8
  %351 = getelementptr inbounds %struct.conn, %struct.conn* %350, i32 0, i32 21
  %352 = load i8*, i8** %351, align 8
  %353 = load %struct.conn*, %struct.conn** %2, align 8
  %354 = getelementptr inbounds %struct.conn, %struct.conn* %353, i32 0, i32 22
  %355 = load i32, i32* %354, align 8
  %356 = sext i32 %355 to i64
  %357 = call i64 %348(%struct.conn* %349, i8* %352, i64 %356)
  %358 = trunc i64 %357 to i32
  store i32 %358, i32* %8, align 4
  %359 = load i32, i32* %8, align 4
  %360 = icmp sgt i32 %359, 0
  br i1 %360, label %361, label %409

361:                                              ; preds = %345
  %362 = load %struct.conn*, %struct.conn** %2, align 8
  %363 = getelementptr inbounds %struct.conn, %struct.conn* %362, i32 0, i32 42
  %364 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %363, align 8
  %365 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %364, i32 0, i32 4
  %366 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %365, i32 0, i32 0
  %367 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %366) #14
  %368 = load i32, i32* %8, align 4
  %369 = sext i32 %368 to i64
  %370 = load %struct.conn*, %struct.conn** %2, align 8
  %371 = getelementptr inbounds %struct.conn, %struct.conn* %370, i32 0, i32 42
  %372 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %371, align 8
  %373 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %372, i32 0, i32 4
  %374 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %373, i32 0, i32 12
  %375 = load i64, i64* %374, align 8
  %376 = add i64 %375, %369
  store i64 %376, i64* %374, align 8
  %377 = load %struct.conn*, %struct.conn** %2, align 8
  %378 = getelementptr inbounds %struct.conn, %struct.conn* %377, i32 0, i32 42
  %379 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %378, align 8
  %380 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %379, i32 0, i32 4
  %381 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %380, i32 0, i32 0
  %382 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %381) #14
  %383 = load %struct.conn*, %struct.conn** %2, align 8
  %384 = getelementptr inbounds %struct.conn, %struct.conn* %383, i32 0, i32 16
  %385 = load i8*, i8** %384, align 8
  %386 = load %struct.conn*, %struct.conn** %2, align 8
  %387 = getelementptr inbounds %struct.conn, %struct.conn* %386, i32 0, i32 21
  %388 = load i8*, i8** %387, align 8
  %389 = icmp eq i8* %385, %388
  br i1 %389, label %390, label %397

390:                                              ; preds = %361
  %391 = load i32, i32* %8, align 4
  %392 = load %struct.conn*, %struct.conn** %2, align 8
  %393 = getelementptr inbounds %struct.conn, %struct.conn* %392, i32 0, i32 16
  %394 = load i8*, i8** %393, align 8
  %395 = sext i32 %391 to i64
  %396 = getelementptr inbounds i8, i8* %394, i64 %395
  store i8* %396, i8** %393, align 8
  br label %397

397:                                              ; preds = %390, %361
  %398 = load i32, i32* %8, align 4
  %399 = load %struct.conn*, %struct.conn** %2, align 8
  %400 = getelementptr inbounds %struct.conn, %struct.conn* %399, i32 0, i32 21
  %401 = load i8*, i8** %400, align 8
  %402 = sext i32 %398 to i64
  %403 = getelementptr inbounds i8, i8* %401, i64 %402
  store i8* %403, i8** %400, align 8
  %404 = load i32, i32* %8, align 4
  %405 = load %struct.conn*, %struct.conn** %2, align 8
  %406 = getelementptr inbounds %struct.conn, %struct.conn* %405, i32 0, i32 22
  %407 = load i32, i32* %406, align 8
  %408 = sub nsw i32 %407, %404
  store i32 %408, i32* %406, align 8
  br label %734

409:                                              ; preds = %345
  br label %417

410:                                              ; preds = %276
  %411 = load %struct.conn*, %struct.conn** %2, align 8
  %412 = call i32 @read_into_chunked_item(%struct.conn* %411)
  store i32 %412, i32* %8, align 4
  %413 = load i32, i32* %8, align 4
  %414 = icmp sgt i32 %413, 0
  br i1 %414, label %415, label %416

415:                                              ; preds = %410
  br label %734

416:                                              ; preds = %410
  br label %417

417:                                              ; preds = %416, %409
  %418 = load i32, i32* %8, align 4
  %419 = icmp eq i32 %418, 0
  br i1 %419, label %420, label %424

420:                                              ; preds = %417
  %421 = load %struct.conn*, %struct.conn** %2, align 8
  %422 = getelementptr inbounds %struct.conn, %struct.conn* %421, i32 0, i32 30
  store i32 1, i32* %422, align 4
  %423 = load %struct.conn*, %struct.conn** %2, align 8
  call void @conn_set_state(%struct.conn* %423, i32 8)
  br label %734

424:                                              ; preds = %417
  %425 = load i32, i32* %8, align 4
  %426 = icmp eq i32 %425, -1
  br i1 %426, label %427, label %447

427:                                              ; preds = %424
  %428 = call i32* @__errno_location() #15
  %429 = load i32, i32* %428, align 4
  %430 = icmp eq i32 %429, 11
  br i1 %430, label %435, label %431

431:                                              ; preds = %427
  %432 = call i32* @__errno_location() #15
  %433 = load i32, i32* %432, align 4
  %434 = icmp eq i32 %433, 11
  br i1 %434, label %435, label %447

435:                                              ; preds = %431, %427
  %436 = load %struct.conn*, %struct.conn** %2, align 8
  %437 = call zeroext i1 @update_event(%struct.conn* %436, i32 18)
  br i1 %437, label %446, label %438

438:                                              ; preds = %435
  %439 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %440 = icmp sgt i32 %439, 0
  br i1 %440, label %441, label %444

441:                                              ; preds = %438
  %442 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %443 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %442, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.395, i64 0, i64 0))
  br label %444

444:                                              ; preds = %441, %438
  %445 = load %struct.conn*, %struct.conn** %2, align 8
  call void @conn_set_state(%struct.conn* %445, i32 8)
  br label %734

446:                                              ; preds = %435
  store i8 1, i8* %3, align 1
  br label %734

447:                                              ; preds = %431, %424
  %448 = load i32, i32* %8, align 4
  %449 = icmp eq i32 %448, -2
  br i1 %449, label %450, label %462

450:                                              ; preds = %447
  %451 = load %struct.conn*, %struct.conn** %2, align 8
  call void @out_of_memory(%struct.conn* %451, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.397, i64 0, i64 0))
  %452 = load %struct.conn*, %struct.conn** %2, align 8
  %453 = getelementptr inbounds %struct.conn, %struct.conn* %452, i32 0, i32 22
  %454 = load i32, i32* %453, align 8
  %455 = load %struct.conn*, %struct.conn** %2, align 8
  %456 = getelementptr inbounds %struct.conn, %struct.conn* %455, i32 0, i32 24
  store i32 %454, i32* %456, align 8
  %457 = load %struct.conn*, %struct.conn** %2, align 8
  call void @conn_set_state(%struct.conn* %457, i32 7)
  %458 = load %struct.conn*, %struct.conn** %2, align 8
  %459 = getelementptr inbounds %struct.conn, %struct.conn* %458, i32 0, i32 4
  store i8 0, i8* %459, align 2
  %460 = load %struct.conn*, %struct.conn** %2, align 8
  %461 = getelementptr inbounds %struct.conn, %struct.conn* %460, i32 0, i32 5
  store i8 0, i8* %461, align 1
  br label %734

462:                                              ; preds = %447
  %463 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %464 = icmp sgt i32 %463, 0
  br i1 %464, label %465, label %488

465:                                              ; preds = %462
  %466 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %467 = call i32* @__errno_location() #15
  %468 = load i32, i32* %467, align 4
  %469 = call i32* @__errno_location() #15
  %470 = load i32, i32* %469, align 4
  %471 = call i8* @strerror(i32 %470) #14
  %472 = load %struct.conn*, %struct.conn** %2, align 8
  %473 = getelementptr inbounds %struct.conn, %struct.conn* %472, i32 0, i32 16
  %474 = load i8*, i8** %473, align 8
  %475 = load %struct.conn*, %struct.conn** %2, align 8
  %476 = getelementptr inbounds %struct.conn, %struct.conn* %475, i32 0, i32 21
  %477 = load i8*, i8** %476, align 8
  %478 = load %struct.conn*, %struct.conn** %2, align 8
  %479 = getelementptr inbounds %struct.conn, %struct.conn* %478, i32 0, i32 15
  %480 = load i8*, i8** %479, align 8
  %481 = load %struct.conn*, %struct.conn** %2, align 8
  %482 = getelementptr inbounds %struct.conn, %struct.conn* %481, i32 0, i32 22
  %483 = load i32, i32* %482, align 8
  %484 = load %struct.conn*, %struct.conn** %2, align 8
  %485 = getelementptr inbounds %struct.conn, %struct.conn* %484, i32 0, i32 17
  %486 = load i32, i32* %485, align 8
  %487 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %466, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @.str.398, i64 0, i64 0), i32 %468, i8* %471, i8* %474, i8* %477, i8* %480, i32 %483, i32 %486)
  br label %488

488:                                              ; preds = %465, %462
  %489 = load %struct.conn*, %struct.conn** %2, align 8
  call void @conn_set_state(%struct.conn* %489, i32 8)
  br label %734

490:                                              ; preds = %23
  %491 = load %struct.conn*, %struct.conn** %2, align 8
  %492 = getelementptr inbounds %struct.conn, %struct.conn* %491, i32 0, i32 24
  %493 = load i32, i32* %492, align 8
  %494 = icmp sle i32 %493, 0
  br i1 %494, label %495, label %497

495:                                              ; preds = %490
  %496 = load %struct.conn*, %struct.conn** %2, align 8
  call void @conn_set_state(%struct.conn* %496, i32 1)
  br label %734

497:                                              ; preds = %490
  %498 = load %struct.conn*, %struct.conn** %2, align 8
  %499 = getelementptr inbounds %struct.conn, %struct.conn* %498, i32 0, i32 18
  %500 = load i32, i32* %499, align 4
  %501 = icmp sgt i32 %500, 0
  br i1 %501, label %502, label %536

502:                                              ; preds = %497
  %503 = load %struct.conn*, %struct.conn** %2, align 8
  %504 = getelementptr inbounds %struct.conn, %struct.conn* %503, i32 0, i32 18
  %505 = load i32, i32* %504, align 4
  %506 = load %struct.conn*, %struct.conn** %2, align 8
  %507 = getelementptr inbounds %struct.conn, %struct.conn* %506, i32 0, i32 24
  %508 = load i32, i32* %507, align 8
  %509 = icmp sgt i32 %505, %508
  br i1 %509, label %510, label %514

510:                                              ; preds = %502
  %511 = load %struct.conn*, %struct.conn** %2, align 8
  %512 = getelementptr inbounds %struct.conn, %struct.conn* %511, i32 0, i32 24
  %513 = load i32, i32* %512, align 8
  br label %518

514:                                              ; preds = %502
  %515 = load %struct.conn*, %struct.conn** %2, align 8
  %516 = getelementptr inbounds %struct.conn, %struct.conn* %515, i32 0, i32 18
  %517 = load i32, i32* %516, align 4
  br label %518

518:                                              ; preds = %514, %510
  %519 = phi i32 [ %513, %510 ], [ %517, %514 ]
  store i32 %519, i32* %15, align 4
  %520 = load i32, i32* %15, align 4
  %521 = load %struct.conn*, %struct.conn** %2, align 8
  %522 = getelementptr inbounds %struct.conn, %struct.conn* %521, i32 0, i32 24
  %523 = load i32, i32* %522, align 8
  %524 = sub nsw i32 %523, %520
  store i32 %524, i32* %522, align 8
  %525 = load i32, i32* %15, align 4
  %526 = load %struct.conn*, %struct.conn** %2, align 8
  %527 = getelementptr inbounds %struct.conn, %struct.conn* %526, i32 0, i32 16
  %528 = load i8*, i8** %527, align 8
  %529 = sext i32 %525 to i64
  %530 = getelementptr inbounds i8, i8* %528, i64 %529
  store i8* %530, i8** %527, align 8
  %531 = load i32, i32* %15, align 4
  %532 = load %struct.conn*, %struct.conn** %2, align 8
  %533 = getelementptr inbounds %struct.conn, %struct.conn* %532, i32 0, i32 18
  %534 = load i32, i32* %533, align 4
  %535 = sub nsw i32 %534, %531
  store i32 %535, i32* %533, align 4
  br label %734

536:                                              ; preds = %497
  %537 = load %struct.conn*, %struct.conn** %2, align 8
  %538 = getelementptr inbounds %struct.conn, %struct.conn* %537, i32 0, i32 44
  %539 = load i64 (%struct.conn*, i8*, i64)*, i64 (%struct.conn*, i8*, i64)** %538, align 8
  %540 = load %struct.conn*, %struct.conn** %2, align 8
  %541 = load %struct.conn*, %struct.conn** %2, align 8
  %542 = getelementptr inbounds %struct.conn, %struct.conn* %541, i32 0, i32 15
  %543 = load i8*, i8** %542, align 8
  %544 = load %struct.conn*, %struct.conn** %2, align 8
  %545 = getelementptr inbounds %struct.conn, %struct.conn* %544, i32 0, i32 17
  %546 = load i32, i32* %545, align 8
  %547 = load %struct.conn*, %struct.conn** %2, align 8
  %548 = getelementptr inbounds %struct.conn, %struct.conn* %547, i32 0, i32 24
  %549 = load i32, i32* %548, align 8
  %550 = icmp sgt i32 %546, %549
  br i1 %550, label %551, label %555

551:                                              ; preds = %536
  %552 = load %struct.conn*, %struct.conn** %2, align 8
  %553 = getelementptr inbounds %struct.conn, %struct.conn* %552, i32 0, i32 24
  %554 = load i32, i32* %553, align 8
  br label %559

555:                                              ; preds = %536
  %556 = load %struct.conn*, %struct.conn** %2, align 8
  %557 = getelementptr inbounds %struct.conn, %struct.conn* %556, i32 0, i32 17
  %558 = load i32, i32* %557, align 8
  br label %559

559:                                              ; preds = %555, %551
  %560 = phi i32 [ %554, %551 ], [ %558, %555 ]
  %561 = sext i32 %560 to i64
  %562 = call i64 %539(%struct.conn* %540, i8* %543, i64 %561)
  %563 = trunc i64 %562 to i32
  store i32 %563, i32* %8, align 4
  %564 = load i32, i32* %8, align 4
  %565 = icmp sgt i32 %564, 0
  br i1 %565, label %566, label %593

566:                                              ; preds = %559
  %567 = load %struct.conn*, %struct.conn** %2, align 8
  %568 = getelementptr inbounds %struct.conn, %struct.conn* %567, i32 0, i32 42
  %569 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %568, align 8
  %570 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %569, i32 0, i32 4
  %571 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %570, i32 0, i32 0
  %572 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %571) #14
  %573 = load i32, i32* %8, align 4
  %574 = sext i32 %573 to i64
  %575 = load %struct.conn*, %struct.conn** %2, align 8
  %576 = getelementptr inbounds %struct.conn, %struct.conn* %575, i32 0, i32 42
  %577 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %576, align 8
  %578 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %577, i32 0, i32 4
  %579 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %578, i32 0, i32 12
  %580 = load i64, i64* %579, align 8
  %581 = add i64 %580, %574
  store i64 %581, i64* %579, align 8
  %582 = load %struct.conn*, %struct.conn** %2, align 8
  %583 = getelementptr inbounds %struct.conn, %struct.conn* %582, i32 0, i32 42
  %584 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %583, align 8
  %585 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %584, i32 0, i32 4
  %586 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %585, i32 0, i32 0
  %587 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %586) #14
  %588 = load i32, i32* %8, align 4
  %589 = load %struct.conn*, %struct.conn** %2, align 8
  %590 = getelementptr inbounds %struct.conn, %struct.conn* %589, i32 0, i32 24
  %591 = load i32, i32* %590, align 8
  %592 = sub nsw i32 %591, %588
  store i32 %592, i32* %590, align 8
  br label %734

593:                                              ; preds = %559
  %594 = load i32, i32* %8, align 4
  %595 = icmp eq i32 %594, 0
  br i1 %595, label %596, label %600

596:                                              ; preds = %593
  %597 = load %struct.conn*, %struct.conn** %2, align 8
  %598 = getelementptr inbounds %struct.conn, %struct.conn* %597, i32 0, i32 30
  store i32 1, i32* %598, align 4
  %599 = load %struct.conn*, %struct.conn** %2, align 8
  call void @conn_set_state(%struct.conn* %599, i32 8)
  br label %734

600:                                              ; preds = %593
  %601 = load i32, i32* %8, align 4
  %602 = icmp eq i32 %601, -1
  br i1 %602, label %603, label %623

603:                                              ; preds = %600
  %604 = call i32* @__errno_location() #15
  %605 = load i32, i32* %604, align 4
  %606 = icmp eq i32 %605, 11
  br i1 %606, label %611, label %607

607:                                              ; preds = %603
  %608 = call i32* @__errno_location() #15
  %609 = load i32, i32* %608, align 4
  %610 = icmp eq i32 %609, 11
  br i1 %610, label %611, label %623

611:                                              ; preds = %607, %603
  %612 = load %struct.conn*, %struct.conn** %2, align 8
  %613 = call zeroext i1 @update_event(%struct.conn* %612, i32 18)
  br i1 %613, label %622, label %614

614:                                              ; preds = %611
  %615 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %616 = icmp sgt i32 %615, 0
  br i1 %616, label %617, label %620

617:                                              ; preds = %614
  %618 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %619 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %618, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.395, i64 0, i64 0))
  br label %620

620:                                              ; preds = %617, %614
  %621 = load %struct.conn*, %struct.conn** %2, align 8
  call void @conn_set_state(%struct.conn* %621, i32 8)
  br label %734

622:                                              ; preds = %611
  store i8 1, i8* %3, align 1
  br label %734

623:                                              ; preds = %607, %600
  %624 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %625 = icmp sgt i32 %624, 0
  br i1 %625, label %626, label %629

626:                                              ; preds = %623
  %627 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %628 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %627, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.399, i64 0, i64 0))
  br label %629

629:                                              ; preds = %626, %623
  %630 = load %struct.conn*, %struct.conn** %2, align 8
  call void @conn_set_state(%struct.conn* %630, i32 8)
  br label %734

631:                                              ; preds = %23, %23
  %632 = load %struct.conn*, %struct.conn** %2, align 8
  %633 = getelementptr inbounds %struct.conn, %struct.conn* %632, i32 0, i32 26
  %634 = getelementptr inbounds [3 x %struct.io_queue_s], [3 x %struct.io_queue_s]* %633, i64 0, i64 0
  store %struct.io_queue_s* %634, %struct.io_queue_s** %16, align 8
  br label %635

635:                                              ; preds = %662, %631
  %636 = load %struct.io_queue_s*, %struct.io_queue_s** %16, align 8
  %637 = getelementptr inbounds %struct.io_queue_s, %struct.io_queue_s* %636, i32 0, i32 3
  %638 = load i32, i32* %637, align 4
  %639 = icmp ne i32 %638, 0
  br i1 %639, label %640, label %665

640:                                              ; preds = %635
  %641 = load %struct.io_queue_s*, %struct.io_queue_s** %16, align 8
  %642 = getelementptr inbounds %struct.io_queue_s, %struct.io_queue_s* %641, i32 0, i32 1
  %643 = load i8*, i8** %642, align 8
  %644 = icmp ne i8* %643, null
  br i1 %644, label %645, label %661

645:                                              ; preds = %640
  %646 = load %struct.conn*, %struct.conn** %2, align 8
  %647 = getelementptr inbounds %struct.conn, %struct.conn* %646, i32 0, i32 42
  %648 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %647, align 8
  %649 = load %struct.io_queue_s*, %struct.io_queue_s** %16, align 8
  %650 = getelementptr inbounds %struct.io_queue_s, %struct.io_queue_s* %649, i32 0, i32 3
  %651 = load i32, i32* %650, align 4
  %652 = call %struct.io_queue_cb_s* @thread_io_queue_get(%struct.LIBEVENT_THREAD* %648, i32 %651)
  store %struct.io_queue_cb_s* %652, %struct.io_queue_cb_s** %17, align 8
  %653 = load %struct.io_queue_cb_s*, %struct.io_queue_cb_s** %17, align 8
  %654 = getelementptr inbounds %struct.io_queue_cb_s, %struct.io_queue_cb_s* %653, i32 0, i32 1
  %655 = load void (%struct.io_queue_s*)*, void (%struct.io_queue_s*)** %654, align 8
  %656 = load %struct.io_queue_s*, %struct.io_queue_s** %16, align 8
  call void %655(%struct.io_queue_s* %656)
  %657 = load %struct.conn*, %struct.conn** %2, align 8
  %658 = getelementptr inbounds %struct.conn, %struct.conn* %657, i32 0, i32 25
  %659 = load i32, i32* %658, align 4
  %660 = add nsw i32 %659, 1
  store i32 %660, i32* %658, align 4
  br label %661

661:                                              ; preds = %645, %640
  br label %662

662:                                              ; preds = %661
  %663 = load %struct.io_queue_s*, %struct.io_queue_s** %16, align 8
  %664 = getelementptr inbounds %struct.io_queue_s, %struct.io_queue_s* %663, i32 1
  store %struct.io_queue_s* %664, %struct.io_queue_s** %16, align 8
  br label %635, !llvm.loop !4

665:                                              ; preds = %635
  %666 = load %struct.conn*, %struct.conn** %2, align 8
  %667 = getelementptr inbounds %struct.conn, %struct.conn* %666, i32 0, i32 25
  %668 = load i32, i32* %667, align 4
  %669 = icmp ne i32 %668, 0
  br i1 %669, label %670, label %675

670:                                              ; preds = %665
  %671 = load %struct.conn*, %struct.conn** %2, align 8
  call void @conn_set_state(%struct.conn* %671, i32 12)
  %672 = load %struct.conn*, %struct.conn** %2, align 8
  %673 = getelementptr inbounds %struct.conn, %struct.conn* %672, i32 0, i32 12
  %674 = call i32 @event_del(%struct.event* %673)
  store i8 1, i8* %3, align 1
  br label %734

675:                                              ; preds = %665
  %676 = load %struct.conn*, %struct.conn** %2, align 8
  %677 = getelementptr inbounds %struct.conn, %struct.conn* %676, i32 0, i32 29
  %678 = load i32, i32* %677, align 8
  %679 = icmp eq i32 %678, 2
  br i1 %679, label %683, label %680

680:                                              ; preds = %675
  %681 = load %struct.conn*, %struct.conn** %2, align 8
  %682 = call i32 @transmit(%struct.conn* %681)
  br label %686

683:                                              ; preds = %675
  %684 = load %struct.conn*, %struct.conn** %2, align 8
  %685 = call i32 @transmit_udp(%struct.conn* %684)
  br label %686

686:                                              ; preds = %683, %680
  %687 = phi i32 [ %682, %680 ], [ %685, %683 ]
  switch i32 %687, label %717 [
    i32 0, label %688
    i32 1, label %715
    i32 3, label %715
    i32 2, label %716
  ]

688:                                              ; preds = %686
  %689 = load %struct.conn*, %struct.conn** %2, align 8
  %690 = getelementptr inbounds %struct.conn, %struct.conn* %689, i32 0, i32 9
  %691 = load i32, i32* %690, align 4
  %692 = icmp eq i32 %691, 9
  br i1 %692, label %693, label %703

693:                                              ; preds = %688
  %694 = load %struct.conn*, %struct.conn** %2, align 8
  call void @conn_release_items(%struct.conn* %694)
  %695 = load %struct.conn*, %struct.conn** %2, align 8
  call void @conn_set_state(%struct.conn* %695, i32 1)
  %696 = load %struct.conn*, %struct.conn** %2, align 8
  %697 = getelementptr inbounds %struct.conn, %struct.conn* %696, i32 0, i32 6
  %698 = load i8, i8* %697, align 8
  %699 = trunc i8 %698 to i1
  br i1 %699, label %700, label %702

700:                                              ; preds = %693
  %701 = load %struct.conn*, %struct.conn** %2, align 8
  call void @conn_set_state(%struct.conn* %701, i32 8)
  br label %702

702:                                              ; preds = %700, %693
  br label %714

703:                                              ; preds = %688
  %704 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %705 = icmp sgt i32 %704, 0
  br i1 %705, label %706, label %712

706:                                              ; preds = %703
  %707 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %708 = load %struct.conn*, %struct.conn** %2, align 8
  %709 = getelementptr inbounds %struct.conn, %struct.conn* %708, i32 0, i32 9
  %710 = load i32, i32* %709, align 4
  %711 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %707, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.400, i64 0, i64 0), i32 %710)
  br label %712

712:                                              ; preds = %706, %703
  %713 = load %struct.conn*, %struct.conn** %2, align 8
  call void @conn_set_state(%struct.conn* %713, i32 8)
  br label %714

714:                                              ; preds = %712, %702
  br label %717

715:                                              ; preds = %686, %686
  br label %717

716:                                              ; preds = %686
  store i8 1, i8* %3, align 1
  br label %717

717:                                              ; preds = %686, %716, %715, %714
  br label %734

718:                                              ; preds = %23
  %719 = load %struct.conn*, %struct.conn** %2, align 8
  %720 = getelementptr inbounds %struct.conn, %struct.conn* %719, i32 0, i32 29
  %721 = load i32, i32* %720, align 8
  %722 = icmp eq i32 %721, 2
  br i1 %722, label %723, label %725

723:                                              ; preds = %718
  %724 = load %struct.conn*, %struct.conn** %2, align 8
  call void @conn_cleanup(%struct.conn* %724)
  br label %727

725:                                              ; preds = %718
  %726 = load %struct.conn*, %struct.conn** %2, align 8
  call void @conn_close(%struct.conn* %726)
  br label %727

727:                                              ; preds = %725, %723
  store i8 1, i8* %3, align 1
  br label %734

728:                                              ; preds = %23
  call void @abort() #17
  unreachable

729:                                              ; preds = %23
  store i8 1, i8* %3, align 1
  br label %734

730:                                              ; preds = %23
  %731 = load %struct.conn*, %struct.conn** %2, align 8
  call void @conn_io_queue_complete(%struct.conn* %731)
  %732 = load %struct.conn*, %struct.conn** %2, align 8
  call void @conn_set_state(%struct.conn* %732, i32 9)
  br label %734

733:                                              ; preds = %23
  br label %734

734:                                              ; preds = %23, %733, %730, %729, %727, %717, %670, %629, %622, %620, %596, %566, %518, %495, %488, %450, %446, %444, %420, %415, %397, %343, %269, %253, %247, %242, %194, %174, %157, %147, %145, %134, %96, %85
  br label %19, !llvm.loop !2

735:                                              ; preds = %19
  ret void
}

declare dso_local i32 @accept4(i32, %struct.sockaddr*, i32*, i32) #3

declare dso_local i32 @accept(i32, %struct.sockaddr*, i32*) #3

; Function Attrs: nounwind readnone willreturn
declare dso_local i32* @__errno_location() #5

declare dso_local void @perror(i8*) #3

declare dso_local i32 @fcntl(i32, i32, ...) #3

declare dso_local i32 @close(i32) #3

; Function Attrs: nounwind readonly willreturn
declare dso_local i64 @strlen(i8*) #6

declare dso_local i64 @write(i32, i8*, i64) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @rbuf_release(%struct.conn* %0) #0 {
  %2 = alloca %struct.conn*, align 8
  store %struct.conn* %0, %struct.conn** %2, align 8
  %3 = load %struct.conn*, %struct.conn** %2, align 8
  %4 = getelementptr inbounds %struct.conn, %struct.conn* %3, i32 0, i32 15
  %5 = load i8*, i8** %4, align 8
  %6 = icmp ne i8* %5, null
  br i1 %6, label %7, label %44

7:                                                ; preds = %1
  %8 = load %struct.conn*, %struct.conn** %2, align 8
  %9 = getelementptr inbounds %struct.conn, %struct.conn* %8, i32 0, i32 18
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %44

12:                                               ; preds = %7
  %13 = load %struct.conn*, %struct.conn** %2, align 8
  %14 = getelementptr inbounds %struct.conn, %struct.conn* %13, i32 0, i32 29
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 2
  br i1 %16, label %44, label %17

17:                                               ; preds = %12
  %18 = load %struct.conn*, %struct.conn** %2, align 8
  %19 = getelementptr inbounds %struct.conn, %struct.conn* %18, i32 0, i32 7
  %20 = load i8, i8* %19, align 1
  %21 = trunc i8 %20 to i1
  br i1 %21, label %22, label %28

22:                                               ; preds = %17
  %23 = load %struct.conn*, %struct.conn** %2, align 8
  %24 = getelementptr inbounds %struct.conn, %struct.conn* %23, i32 0, i32 15
  %25 = load i8*, i8** %24, align 8
  call void @free(i8* %25) #14
  %26 = load %struct.conn*, %struct.conn** %2, align 8
  %27 = getelementptr inbounds %struct.conn, %struct.conn* %26, i32 0, i32 7
  store i8 0, i8* %27, align 1
  br label %37

28:                                               ; preds = %17
  %29 = load %struct.conn*, %struct.conn** %2, align 8
  %30 = getelementptr inbounds %struct.conn, %struct.conn* %29, i32 0, i32 42
  %31 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %30, align 8
  %32 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %31, i32 0, i32 7
  %33 = load %struct.cache_t*, %struct.cache_t** %32, align 8
  %34 = load %struct.conn*, %struct.conn** %2, align 8
  %35 = getelementptr inbounds %struct.conn, %struct.conn* %34, i32 0, i32 15
  %36 = load i8*, i8** %35, align 8
  call void @do_cache_free(%struct.cache_t* %33, i8* %36)
  br label %37

37:                                               ; preds = %28, %22
  %38 = load %struct.conn*, %struct.conn** %2, align 8
  %39 = getelementptr inbounds %struct.conn, %struct.conn* %38, i32 0, i32 17
  store i32 0, i32* %39, align 8
  %40 = load %struct.conn*, %struct.conn** %2, align 8
  %41 = getelementptr inbounds %struct.conn, %struct.conn* %40, i32 0, i32 15
  store i8* null, i8** %41, align 8
  %42 = load %struct.conn*, %struct.conn** %2, align 8
  %43 = getelementptr inbounds %struct.conn, %struct.conn* %42, i32 0, i32 16
  store i8* null, i8** %43, align 8
  br label %44

44:                                               ; preds = %37, %12, %7, %1
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @update_event(%struct.conn* %0, i32 %1) #0 {
  %3 = alloca i1, align 1
  %4 = alloca %struct.conn*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.event_base*, align 8
  store %struct.conn* %0, %struct.conn** %4, align 8
  store i32 %1, i32* %5, align 4
  %7 = load %struct.conn*, %struct.conn** %4, align 8
  %8 = getelementptr inbounds %struct.conn, %struct.conn* %7, i32 0, i32 12
  %9 = getelementptr inbounds %struct.event, %struct.event* %8, i32 0, i32 3
  %10 = load %struct.event_base*, %struct.event_base** %9, align 8
  store %struct.event_base* %10, %struct.event_base** %6, align 8
  %11 = load %struct.conn*, %struct.conn** %4, align 8
  %12 = getelementptr inbounds %struct.conn, %struct.conn* %11, i32 0, i32 13
  %13 = load i16, i16* %12, align 8
  %14 = sext i16 %13 to i32
  %15 = load i32, i32* %5, align 4
  %16 = icmp eq i32 %14, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %2
  store i1 true, i1* %3, align 1
  br label %48

18:                                               ; preds = %2
  %19 = load %struct.conn*, %struct.conn** %4, align 8
  %20 = getelementptr inbounds %struct.conn, %struct.conn* %19, i32 0, i32 12
  %21 = call i32 @event_del(%struct.event* %20)
  %22 = icmp eq i32 %21, -1
  br i1 %22, label %23, label %24

23:                                               ; preds = %18
  store i1 false, i1* %3, align 1
  br label %48

24:                                               ; preds = %18
  %25 = load %struct.conn*, %struct.conn** %4, align 8
  %26 = getelementptr inbounds %struct.conn, %struct.conn* %25, i32 0, i32 12
  %27 = load %struct.conn*, %struct.conn** %4, align 8
  %28 = getelementptr inbounds %struct.conn, %struct.conn* %27, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = load i32, i32* %5, align 4
  %31 = trunc i32 %30 to i16
  %32 = load %struct.conn*, %struct.conn** %4, align 8
  %33 = bitcast %struct.conn* %32 to i8*
  call void @event_set(%struct.event* %26, i32 %29, i16 signext %31, void (i32, i16, i8*)* @event_handler, i8* %33)
  %34 = load %struct.event_base*, %struct.event_base** %6, align 8
  %35 = load %struct.conn*, %struct.conn** %4, align 8
  %36 = getelementptr inbounds %struct.conn, %struct.conn* %35, i32 0, i32 12
  %37 = call i32 @event_base_set(%struct.event_base* %34, %struct.event* %36)
  %38 = load i32, i32* %5, align 4
  %39 = trunc i32 %38 to i16
  %40 = load %struct.conn*, %struct.conn** %4, align 8
  %41 = getelementptr inbounds %struct.conn, %struct.conn* %40, i32 0, i32 13
  store i16 %39, i16* %41, align 8
  %42 = load %struct.conn*, %struct.conn** %4, align 8
  %43 = getelementptr inbounds %struct.conn, %struct.conn* %42, i32 0, i32 12
  %44 = call i32 @event_add(%struct.event* %43, %struct.timeval* null)
  %45 = icmp eq i32 %44, -1
  br i1 %45, label %46, label %47

46:                                               ; preds = %24
  store i1 false, i1* %3, align 1
  br label %48

47:                                               ; preds = %24
  store i1 true, i1* %3, align 1
  br label %48

48:                                               ; preds = %47, %46, %23, %17
  %49 = load i1, i1* %3, align 1
  ret i1 %49
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @rbuf_alloc(%struct.conn* %0) #0 {
  %2 = alloca i1, align 1
  %3 = alloca %struct.conn*, align 8
  store %struct.conn* %0, %struct.conn** %3, align 8
  %4 = load %struct.conn*, %struct.conn** %3, align 8
  %5 = getelementptr inbounds %struct.conn, %struct.conn* %4, i32 0, i32 15
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %8, label %49

8:                                                ; preds = %1
  %9 = load %struct.conn*, %struct.conn** %3, align 8
  %10 = getelementptr inbounds %struct.conn, %struct.conn* %9, i32 0, i32 42
  %11 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %10, align 8
  %12 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %11, i32 0, i32 7
  %13 = load %struct.cache_t*, %struct.cache_t** %12, align 8
  %14 = call i8* @do_cache_alloc(%struct.cache_t* %13)
  %15 = load %struct.conn*, %struct.conn** %3, align 8
  %16 = getelementptr inbounds %struct.conn, %struct.conn* %15, i32 0, i32 15
  store i8* %14, i8** %16, align 8
  %17 = load %struct.conn*, %struct.conn** %3, align 8
  %18 = getelementptr inbounds %struct.conn, %struct.conn* %17, i32 0, i32 15
  %19 = load i8*, i8** %18, align 8
  %20 = icmp ne i8* %19, null
  br i1 %20, label %41, label %21

21:                                               ; preds = %8
  %22 = load %struct.conn*, %struct.conn** %3, align 8
  %23 = getelementptr inbounds %struct.conn, %struct.conn* %22, i32 0, i32 42
  %24 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %23, align 8
  %25 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %24, i32 0, i32 4
  %26 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %25, i32 0, i32 0
  %27 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %26) #14
  %28 = load %struct.conn*, %struct.conn** %3, align 8
  %29 = getelementptr inbounds %struct.conn, %struct.conn* %28, i32 0, i32 42
  %30 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %29, align 8
  %31 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %30, i32 0, i32 4
  %32 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %31, i32 0, i32 22
  %33 = load i64, i64* %32, align 8
  %34 = add i64 %33, 1
  store i64 %34, i64* %32, align 8
  %35 = load %struct.conn*, %struct.conn** %3, align 8
  %36 = getelementptr inbounds %struct.conn, %struct.conn* %35, i32 0, i32 42
  %37 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %36, align 8
  %38 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %37, i32 0, i32 4
  %39 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %38, i32 0, i32 0
  %40 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %39) #14
  store i1 false, i1* %2, align 1
  br label %50

41:                                               ; preds = %8
  %42 = load %struct.conn*, %struct.conn** %3, align 8
  %43 = getelementptr inbounds %struct.conn, %struct.conn* %42, i32 0, i32 17
  store i32 16384, i32* %43, align 8
  %44 = load %struct.conn*, %struct.conn** %3, align 8
  %45 = getelementptr inbounds %struct.conn, %struct.conn* %44, i32 0, i32 15
  %46 = load i8*, i8** %45, align 8
  %47 = load %struct.conn*, %struct.conn** %3, align 8
  %48 = getelementptr inbounds %struct.conn, %struct.conn* %47, i32 0, i32 16
  store i8* %46, i8** %48, align 8
  br label %49

49:                                               ; preds = %41, %1
  store i1 true, i1* %2, align 1
  br label %50

50:                                               ; preds = %49, %21
  %51 = load i1, i1* %2, align 1
  ret i1 %51
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @try_read_network(%struct.conn* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.conn*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  store %struct.conn* %0, %struct.conn** %3, align 8
  store i32 1, i32* %4, align 4
  store i32 0, i32* %6, align 4
  %9 = load %struct.conn*, %struct.conn** %3, align 8
  %10 = getelementptr inbounds %struct.conn, %struct.conn* %9, i32 0, i32 16
  %11 = load i8*, i8** %10, align 8
  %12 = load %struct.conn*, %struct.conn** %3, align 8
  %13 = getelementptr inbounds %struct.conn, %struct.conn* %12, i32 0, i32 15
  %14 = load i8*, i8** %13, align 8
  %15 = icmp ne i8* %11, %14
  br i1 %15, label %16, label %38

16:                                               ; preds = %1
  %17 = load %struct.conn*, %struct.conn** %3, align 8
  %18 = getelementptr inbounds %struct.conn, %struct.conn* %17, i32 0, i32 18
  %19 = load i32, i32* %18, align 4
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %21, label %32

21:                                               ; preds = %16
  %22 = load %struct.conn*, %struct.conn** %3, align 8
  %23 = getelementptr inbounds %struct.conn, %struct.conn* %22, i32 0, i32 15
  %24 = load i8*, i8** %23, align 8
  %25 = load %struct.conn*, %struct.conn** %3, align 8
  %26 = getelementptr inbounds %struct.conn, %struct.conn* %25, i32 0, i32 16
  %27 = load i8*, i8** %26, align 8
  %28 = load %struct.conn*, %struct.conn** %3, align 8
  %29 = getelementptr inbounds %struct.conn, %struct.conn* %28, i32 0, i32 18
  %30 = load i32, i32* %29, align 4
  %31 = sext i32 %30 to i64
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %24, i8* align 1 %27, i64 %31, i1 false)
  br label %32

32:                                               ; preds = %21, %16
  %33 = load %struct.conn*, %struct.conn** %3, align 8
  %34 = getelementptr inbounds %struct.conn, %struct.conn* %33, i32 0, i32 15
  %35 = load i8*, i8** %34, align 8
  %36 = load %struct.conn*, %struct.conn** %3, align 8
  %37 = getelementptr inbounds %struct.conn, %struct.conn* %36, i32 0, i32 16
  store i8* %35, i8** %37, align 8
  br label %38

38:                                               ; preds = %32, %1
  br label %39

39:                                               ; preds = %38, %156, %177
  %40 = load %struct.conn*, %struct.conn** %3, align 8
  %41 = getelementptr inbounds %struct.conn, %struct.conn* %40, i32 0, i32 18
  %42 = load i32, i32* %41, align 4
  %43 = load %struct.conn*, %struct.conn** %3, align 8
  %44 = getelementptr inbounds %struct.conn, %struct.conn* %43, i32 0, i32 17
  %45 = load i32, i32* %44, align 8
  %46 = icmp sge i32 %42, %45
  br i1 %46, label %47, label %95

47:                                               ; preds = %39
  %48 = load %struct.conn*, %struct.conn** %3, align 8
  %49 = getelementptr inbounds %struct.conn, %struct.conn* %48, i32 0, i32 7
  %50 = load i8, i8* %49, align 1
  %51 = trunc i8 %50 to i1
  br i1 %51, label %52, label %95

52:                                               ; preds = %47
  %53 = load i32, i32* %6, align 4
  %54 = icmp eq i32 %53, 4
  br i1 %54, label %55, label %57

55:                                               ; preds = %52
  %56 = load i32, i32* %4, align 4
  store i32 %56, i32* %2, align 4
  br label %180

57:                                               ; preds = %52
  %58 = load i32, i32* %6, align 4
  %59 = add nsw i32 %58, 1
  store i32 %59, i32* %6, align 4
  %60 = load %struct.conn*, %struct.conn** %3, align 8
  %61 = getelementptr inbounds %struct.conn, %struct.conn* %60, i32 0, i32 15
  %62 = load i8*, i8** %61, align 8
  %63 = load %struct.conn*, %struct.conn** %3, align 8
  %64 = getelementptr inbounds %struct.conn, %struct.conn* %63, i32 0, i32 17
  %65 = load i32, i32* %64, align 8
  %66 = mul nsw i32 %65, 2
  %67 = sext i32 %66 to i64
  %68 = call i8* @realloc(i8* %62, i64 %67) #14
  store i8* %68, i8** %7, align 8
  %69 = load i8*, i8** %7, align 8
  %70 = icmp ne i8* %69, null
  br i1 %70, label %85, label %71

71:                                               ; preds = %57
  call void @STATS_LOCK()
  %72 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 3), align 8
  %73 = add i64 %72, 1
  store i64 %73, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 3), align 8
  call void @STATS_UNLOCK()
  %74 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %75 = icmp sgt i32 %74, 0
  br i1 %75, label %76, label %79

76:                                               ; preds = %71
  %77 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %78 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %77, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.401, i64 0, i64 0))
  br label %79

79:                                               ; preds = %76, %71
  %80 = load %struct.conn*, %struct.conn** %3, align 8
  %81 = getelementptr inbounds %struct.conn, %struct.conn* %80, i32 0, i32 18
  store i32 0, i32* %81, align 4
  %82 = load %struct.conn*, %struct.conn** %3, align 8
  call void @out_of_memory(%struct.conn* %82, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.402, i64 0, i64 0))
  %83 = load %struct.conn*, %struct.conn** %3, align 8
  %84 = getelementptr inbounds %struct.conn, %struct.conn* %83, i32 0, i32 6
  store i8 1, i8* %84, align 8
  store i32 3, i32* %2, align 4
  br label %180

85:                                               ; preds = %57
  %86 = load i8*, i8** %7, align 8
  %87 = load %struct.conn*, %struct.conn** %3, align 8
  %88 = getelementptr inbounds %struct.conn, %struct.conn* %87, i32 0, i32 15
  store i8* %86, i8** %88, align 8
  %89 = load %struct.conn*, %struct.conn** %3, align 8
  %90 = getelementptr inbounds %struct.conn, %struct.conn* %89, i32 0, i32 16
  store i8* %86, i8** %90, align 8
  %91 = load %struct.conn*, %struct.conn** %3, align 8
  %92 = getelementptr inbounds %struct.conn, %struct.conn* %91, i32 0, i32 17
  %93 = load i32, i32* %92, align 8
  %94 = mul nsw i32 %93, 2
  store i32 %94, i32* %92, align 8
  br label %95

95:                                               ; preds = %85, %47, %39
  %96 = load %struct.conn*, %struct.conn** %3, align 8
  %97 = getelementptr inbounds %struct.conn, %struct.conn* %96, i32 0, i32 17
  %98 = load i32, i32* %97, align 8
  %99 = load %struct.conn*, %struct.conn** %3, align 8
  %100 = getelementptr inbounds %struct.conn, %struct.conn* %99, i32 0, i32 18
  %101 = load i32, i32* %100, align 4
  %102 = sub nsw i32 %98, %101
  store i32 %102, i32* %8, align 4
  %103 = load %struct.conn*, %struct.conn** %3, align 8
  %104 = getelementptr inbounds %struct.conn, %struct.conn* %103, i32 0, i32 44
  %105 = load i64 (%struct.conn*, i8*, i64)*, i64 (%struct.conn*, i8*, i64)** %104, align 8
  %106 = load %struct.conn*, %struct.conn** %3, align 8
  %107 = load %struct.conn*, %struct.conn** %3, align 8
  %108 = getelementptr inbounds %struct.conn, %struct.conn* %107, i32 0, i32 15
  %109 = load i8*, i8** %108, align 8
  %110 = load %struct.conn*, %struct.conn** %3, align 8
  %111 = getelementptr inbounds %struct.conn, %struct.conn* %110, i32 0, i32 18
  %112 = load i32, i32* %111, align 4
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds i8, i8* %109, i64 %113
  %115 = load i32, i32* %8, align 4
  %116 = sext i32 %115 to i64
  %117 = call i64 %105(%struct.conn* %106, i8* %114, i64 %116)
  %118 = trunc i64 %117 to i32
  store i32 %118, i32* %5, align 4
  %119 = load i32, i32* %5, align 4
  %120 = icmp sgt i32 %119, 0
  br i1 %120, label %121, label %158

121:                                              ; preds = %95
  %122 = load %struct.conn*, %struct.conn** %3, align 8
  %123 = getelementptr inbounds %struct.conn, %struct.conn* %122, i32 0, i32 42
  %124 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %123, align 8
  %125 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %124, i32 0, i32 4
  %126 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %125, i32 0, i32 0
  %127 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %126) #14
  %128 = load i32, i32* %5, align 4
  %129 = sext i32 %128 to i64
  %130 = load %struct.conn*, %struct.conn** %3, align 8
  %131 = getelementptr inbounds %struct.conn, %struct.conn* %130, i32 0, i32 42
  %132 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %131, align 8
  %133 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %132, i32 0, i32 4
  %134 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %133, i32 0, i32 12
  %135 = load i64, i64* %134, align 8
  %136 = add i64 %135, %129
  store i64 %136, i64* %134, align 8
  %137 = load %struct.conn*, %struct.conn** %3, align 8
  %138 = getelementptr inbounds %struct.conn, %struct.conn* %137, i32 0, i32 42
  %139 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %138, align 8
  %140 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %139, i32 0, i32 4
  %141 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %140, i32 0, i32 0
  %142 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %141) #14
  store i32 0, i32* %4, align 4
  %143 = load i32, i32* %5, align 4
  %144 = load %struct.conn*, %struct.conn** %3, align 8
  %145 = getelementptr inbounds %struct.conn, %struct.conn* %144, i32 0, i32 18
  %146 = load i32, i32* %145, align 4
  %147 = add nsw i32 %146, %143
  store i32 %147, i32* %145, align 4
  %148 = load i32, i32* %5, align 4
  %149 = load i32, i32* %8, align 4
  %150 = icmp eq i32 %148, %149
  br i1 %150, label %151, label %157

151:                                              ; preds = %121
  %152 = load %struct.conn*, %struct.conn** %3, align 8
  %153 = getelementptr inbounds %struct.conn, %struct.conn* %152, i32 0, i32 7
  %154 = load i8, i8* %153, align 1
  %155 = trunc i8 %154 to i1
  br i1 %155, label %156, label %157

156:                                              ; preds = %151
  br label %39

157:                                              ; preds = %151, %121
  br label %178

158:                                              ; preds = %95
  %159 = load i32, i32* %5, align 4
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %164

161:                                              ; preds = %158
  %162 = load %struct.conn*, %struct.conn** %3, align 8
  %163 = getelementptr inbounds %struct.conn, %struct.conn* %162, i32 0, i32 30
  store i32 1, i32* %163, align 4
  store i32 2, i32* %2, align 4
  br label %180

164:                                              ; preds = %158
  %165 = load i32, i32* %5, align 4
  %166 = icmp eq i32 %165, -1
  br i1 %166, label %167, label %177

167:                                              ; preds = %164
  %168 = call i32* @__errno_location() #15
  %169 = load i32, i32* %168, align 4
  %170 = icmp eq i32 %169, 11
  br i1 %170, label %175, label %171

171:                                              ; preds = %167
  %172 = call i32* @__errno_location() #15
  %173 = load i32, i32* %172, align 4
  %174 = icmp eq i32 %173, 11
  br i1 %174, label %175, label %176

175:                                              ; preds = %171, %167
  br label %178

176:                                              ; preds = %171
  store i32 2, i32* %2, align 4
  br label %180

177:                                              ; preds = %164
  br label %39

178:                                              ; preds = %175, %157
  %179 = load i32, i32* %4, align 4
  store i32 %179, i32* %2, align 4
  br label %180

180:                                              ; preds = %178, %176, %161, %79, %55
  %181 = load i32, i32* %2, align 4
  ret i32 %181
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @try_read_udp(%struct.conn* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.conn*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %union.__SOCKADDR_ARG, align 8
  %6 = alloca i8*, align 8
  store %struct.conn* %0, %struct.conn** %3, align 8
  %7 = load %struct.conn*, %struct.conn** %3, align 8
  %8 = getelementptr inbounds %struct.conn, %struct.conn* %7, i32 0, i32 33
  store i32 28, i32* %8, align 8
  %9 = load %struct.conn*, %struct.conn** %3, align 8
  %10 = getelementptr inbounds %struct.conn, %struct.conn* %9, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = load %struct.conn*, %struct.conn** %3, align 8
  %13 = getelementptr inbounds %struct.conn, %struct.conn* %12, i32 0, i32 15
  %14 = load i8*, i8** %13, align 8
  %15 = load %struct.conn*, %struct.conn** %3, align 8
  %16 = getelementptr inbounds %struct.conn, %struct.conn* %15, i32 0, i32 17
  %17 = load i32, i32* %16, align 8
  %18 = sext i32 %17 to i64
  %19 = bitcast %union.__SOCKADDR_ARG* %5 to %struct.sockaddr**
  %20 = load %struct.conn*, %struct.conn** %3, align 8
  %21 = getelementptr inbounds %struct.conn, %struct.conn* %20, i32 0, i32 32
  %22 = bitcast %struct.sockaddr_in6* %21 to %struct.sockaddr*
  store %struct.sockaddr* %22, %struct.sockaddr** %19, align 8
  %23 = load %struct.conn*, %struct.conn** %3, align 8
  %24 = getelementptr inbounds %struct.conn, %struct.conn* %23, i32 0, i32 33
  %25 = getelementptr inbounds %union.__SOCKADDR_ARG, %union.__SOCKADDR_ARG* %5, i32 0, i32 0
  %26 = load %struct.sockaddr*, %struct.sockaddr** %25, align 8
  %27 = call i64 @recvfrom(i32 %11, i8* %14, i64 %18, i32 0, %struct.sockaddr* %26, i32* %24)
  %28 = trunc i64 %27 to i32
  store i32 %28, i32* %4, align 4
  %29 = load i32, i32* %4, align 4
  %30 = icmp sgt i32 %29, 8
  br i1 %30, label %31, label %100

31:                                               ; preds = %1
  %32 = load %struct.conn*, %struct.conn** %3, align 8
  %33 = getelementptr inbounds %struct.conn, %struct.conn* %32, i32 0, i32 15
  %34 = load i8*, i8** %33, align 8
  store i8* %34, i8** %6, align 8
  %35 = load %struct.conn*, %struct.conn** %3, align 8
  %36 = getelementptr inbounds %struct.conn, %struct.conn* %35, i32 0, i32 42
  %37 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %36, align 8
  %38 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %37, i32 0, i32 4
  %39 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %38, i32 0, i32 0
  %40 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %39) #14
  %41 = load i32, i32* %4, align 4
  %42 = sext i32 %41 to i64
  %43 = load %struct.conn*, %struct.conn** %3, align 8
  %44 = getelementptr inbounds %struct.conn, %struct.conn* %43, i32 0, i32 42
  %45 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %44, align 8
  %46 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %45, i32 0, i32 4
  %47 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %46, i32 0, i32 12
  %48 = load i64, i64* %47, align 8
  %49 = add i64 %48, %42
  store i64 %49, i64* %47, align 8
  %50 = load %struct.conn*, %struct.conn** %3, align 8
  %51 = getelementptr inbounds %struct.conn, %struct.conn* %50, i32 0, i32 42
  %52 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %51, align 8
  %53 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %52, i32 0, i32 4
  %54 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %53, i32 0, i32 0
  %55 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %54) #14
  %56 = load i8*, i8** %6, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 0
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i32
  %60 = mul nsw i32 %59, 256
  %61 = load i8*, i8** %6, align 8
  %62 = getelementptr inbounds i8, i8* %61, i64 1
  %63 = load i8, i8* %62, align 1
  %64 = zext i8 %63 to i32
  %65 = add nsw i32 %60, %64
  %66 = load %struct.conn*, %struct.conn** %3, align 8
  %67 = getelementptr inbounds %struct.conn, %struct.conn* %66, i32 0, i32 31
  store i32 %65, i32* %67, align 8
  %68 = load i8*, i8** %6, align 8
  %69 = getelementptr inbounds i8, i8* %68, i64 4
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i32
  %72 = icmp ne i32 %71, 0
  br i1 %72, label %79, label %73

73:                                               ; preds = %31
  %74 = load i8*, i8** %6, align 8
  %75 = getelementptr inbounds i8, i8* %74, i64 5
  %76 = load i8, i8* %75, align 1
  %77 = zext i8 %76 to i32
  %78 = icmp ne i32 %77, 1
  br i1 %78, label %79, label %80

79:                                               ; preds = %73, %31
  store i32 1, i32* %2, align 4
  br label %101

80:                                               ; preds = %73
  %81 = load i32, i32* %4, align 4
  %82 = sub nsw i32 %81, 8
  store i32 %82, i32* %4, align 4
  %83 = load %struct.conn*, %struct.conn** %3, align 8
  %84 = getelementptr inbounds %struct.conn, %struct.conn* %83, i32 0, i32 15
  %85 = load i8*, i8** %84, align 8
  %86 = load %struct.conn*, %struct.conn** %3, align 8
  %87 = getelementptr inbounds %struct.conn, %struct.conn* %86, i32 0, i32 15
  %88 = load i8*, i8** %87, align 8
  %89 = getelementptr inbounds i8, i8* %88, i64 8
  %90 = load i32, i32* %4, align 4
  %91 = sext i32 %90 to i64
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %85, i8* align 1 %89, i64 %91, i1 false)
  %92 = load i32, i32* %4, align 4
  %93 = load %struct.conn*, %struct.conn** %3, align 8
  %94 = getelementptr inbounds %struct.conn, %struct.conn* %93, i32 0, i32 18
  store i32 %92, i32* %94, align 4
  %95 = load %struct.conn*, %struct.conn** %3, align 8
  %96 = getelementptr inbounds %struct.conn, %struct.conn* %95, i32 0, i32 15
  %97 = load i8*, i8** %96, align 8
  %98 = load %struct.conn*, %struct.conn** %3, align 8
  %99 = getelementptr inbounds %struct.conn, %struct.conn* %98, i32 0, i32 16
  store i8* %97, i8** %99, align 8
  store i32 0, i32* %2, align 4
  br label %101

100:                                              ; preds = %1
  store i32 1, i32* %2, align 4
  br label %101

101:                                              ; preds = %100, %80, %79
  %102 = load i32, i32* %2, align 4
  ret i32 %102
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @reset_cmd_handler(%struct.conn* %0) #0 {
  %2 = alloca %struct.conn*, align 8
  store %struct.conn* %0, %struct.conn** %2, align 8
  %3 = load %struct.conn*, %struct.conn** %2, align 8
  %4 = getelementptr inbounds %struct.conn, %struct.conn* %3, i32 0, i32 38
  store i16 -1, i16* %4, align 8
  %5 = load %struct.conn*, %struct.conn** %2, align 8
  %6 = getelementptr inbounds %struct.conn, %struct.conn* %5, i32 0, i32 10
  store i32 0, i32* %6, align 8
  %7 = load %struct.conn*, %struct.conn** %2, align 8
  %8 = getelementptr inbounds %struct.conn, %struct.conn* %7, i32 0, i32 23
  %9 = load i8*, i8** %8, align 8
  %10 = icmp ne i8* %9, null
  br i1 %10, label %11, label %30

11:                                               ; preds = %1
  %12 = load %struct.conn*, %struct.conn** %2, align 8
  %13 = getelementptr inbounds %struct.conn, %struct.conn* %12, i32 0, i32 8
  %14 = load i8, i8* %13, align 2
  %15 = trunc i8 %14 to i1
  br i1 %15, label %16, label %22

16:                                               ; preds = %11
  %17 = load %struct.conn*, %struct.conn** %2, align 8
  %18 = getelementptr inbounds %struct.conn, %struct.conn* %17, i32 0, i32 23
  %19 = load i8*, i8** %18, align 8
  call void @free(i8* %19) #14
  %20 = load %struct.conn*, %struct.conn** %2, align 8
  %21 = getelementptr inbounds %struct.conn, %struct.conn* %20, i32 0, i32 8
  store i8 0, i8* %21, align 2
  br label %27

22:                                               ; preds = %11
  %23 = load %struct.conn*, %struct.conn** %2, align 8
  %24 = getelementptr inbounds %struct.conn, %struct.conn* %23, i32 0, i32 23
  %25 = load i8*, i8** %24, align 8
  %26 = bitcast i8* %25 to %struct._stritem*
  call void @item_remove(%struct._stritem* %26)
  br label %27

27:                                               ; preds = %22, %16
  %28 = load %struct.conn*, %struct.conn** %2, align 8
  %29 = getelementptr inbounds %struct.conn, %struct.conn* %28, i32 0, i32 23
  store i8* null, i8** %29, align 8
  br label %30

30:                                               ; preds = %27, %1
  %31 = load %struct.conn*, %struct.conn** %2, align 8
  %32 = getelementptr inbounds %struct.conn, %struct.conn* %31, i32 0, i32 18
  %33 = load i32, i32* %32, align 4
  %34 = icmp sgt i32 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %30
  %36 = load %struct.conn*, %struct.conn** %2, align 8
  call void @conn_set_state(%struct.conn* %36, i32 4)
  br label %47

37:                                               ; preds = %30
  %38 = load %struct.conn*, %struct.conn** %2, align 8
  %39 = getelementptr inbounds %struct.conn, %struct.conn* %38, i32 0, i32 20
  %40 = load %struct._mc_resp*, %struct._mc_resp** %39, align 8
  %41 = icmp ne %struct._mc_resp* %40, null
  br i1 %41, label %42, label %44

42:                                               ; preds = %37
  %43 = load %struct.conn*, %struct.conn** %2, align 8
  call void @conn_set_state(%struct.conn* %43, i32 9)
  br label %46

44:                                               ; preds = %37
  %45 = load %struct.conn*, %struct.conn** %2, align 8
  call void @conn_set_state(%struct.conn* %45, i32 2)
  br label %46

46:                                               ; preds = %44, %42
  br label %47

47:                                               ; preds = %46, %35
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @complete_nread(%struct.conn* %0) #0 {
  %2 = alloca %struct.conn*, align 8
  store %struct.conn* %0, %struct.conn** %2, align 8
  %3 = load %struct.conn*, %struct.conn** %2, align 8
  %4 = getelementptr inbounds %struct.conn, %struct.conn* %3, i32 0, i32 28
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 3
  br i1 %6, label %7, label %9

7:                                                ; preds = %1
  %8 = load %struct.conn*, %struct.conn** %2, align 8
  call void @complete_nread_ascii(%struct.conn* %8)
  br label %17

9:                                                ; preds = %1
  %10 = load %struct.conn*, %struct.conn** %2, align 8
  %11 = getelementptr inbounds %struct.conn, %struct.conn* %10, i32 0, i32 28
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 4
  br i1 %13, label %14, label %16

14:                                               ; preds = %9
  %15 = load %struct.conn*, %struct.conn** %2, align 8
  call void @complete_nread_binary(%struct.conn* %15)
  br label %16

16:                                               ; preds = %14, %9
  br label %17

17:                                               ; preds = %16, %7
  ret void
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @read_into_chunked_item(%struct.conn* %0) #0 {
  %2 = alloca %struct.conn*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct._strchunk*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct._strchunk*, align 8
  store %struct.conn* %0, %struct.conn** %2, align 8
  store i32 0, i32* %3, align 4
  br label %9

9:                                                ; preds = %222, %60, %1
  %10 = load %struct.conn*, %struct.conn** %2, align 8
  %11 = getelementptr inbounds %struct.conn, %struct.conn* %10, i32 0, i32 22
  %12 = load i32, i32* %11, align 8
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %14, label %223

14:                                               ; preds = %9
  %15 = load %struct.conn*, %struct.conn** %2, align 8
  %16 = getelementptr inbounds %struct.conn, %struct.conn* %15, i32 0, i32 21
  %17 = load i8*, i8** %16, align 8
  %18 = bitcast i8* %17 to %struct._strchunk*
  store %struct._strchunk* %18, %struct._strchunk** %5, align 8
  %19 = load %struct._strchunk*, %struct._strchunk** %5, align 8
  %20 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %19, i32 0, i32 3
  %21 = load i32, i32* %20, align 8
  %22 = load %struct._strchunk*, %struct._strchunk** %5, align 8
  %23 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %22, i32 0, i32 4
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %21, %24
  br i1 %25, label %26, label %62

26:                                               ; preds = %14
  %27 = load %struct._strchunk*, %struct._strchunk** %5, align 8
  %28 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %27, i32 0, i32 0
  %29 = load %struct._strchunk*, %struct._strchunk** %28, align 8
  %30 = icmp ne %struct._strchunk* %29, null
  br i1 %30, label %31, label %38

31:                                               ; preds = %26
  %32 = load %struct._strchunk*, %struct._strchunk** %5, align 8
  %33 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %32, i32 0, i32 0
  %34 = load %struct._strchunk*, %struct._strchunk** %33, align 8
  %35 = bitcast %struct._strchunk* %34 to i8*
  %36 = load %struct.conn*, %struct.conn** %2, align 8
  %37 = getelementptr inbounds %struct.conn, %struct.conn* %36, i32 0, i32 21
  store i8* %35, i8** %37, align 8
  br label %61

38:                                               ; preds = %26
  %39 = load %struct._strchunk*, %struct._strchunk** %5, align 8
  %40 = load %struct.conn*, %struct.conn** %2, align 8
  %41 = getelementptr inbounds %struct.conn, %struct.conn* %40, i32 0, i32 22
  %42 = load i32, i32* %41, align 8
  %43 = load %struct.conn*, %struct.conn** %2, align 8
  %44 = getelementptr inbounds %struct.conn, %struct.conn* %43, i32 0, i32 28
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 4
  %47 = zext i1 %46 to i64
  %48 = select i1 %46, i32 2, i32 0
  %49 = add nsw i32 %42, %48
  %50 = sext i32 %49 to i64
  %51 = call %struct._strchunk* @do_item_alloc_chunk(%struct._strchunk* %39, i64 %50)
  %52 = bitcast %struct._strchunk* %51 to i8*
  %53 = load %struct.conn*, %struct.conn** %2, align 8
  %54 = getelementptr inbounds %struct.conn, %struct.conn* %53, i32 0, i32 21
  store i8* %52, i8** %54, align 8
  %55 = load %struct.conn*, %struct.conn** %2, align 8
  %56 = getelementptr inbounds %struct.conn, %struct.conn* %55, i32 0, i32 21
  %57 = load i8*, i8** %56, align 8
  %58 = icmp ne i8* %57, null
  br i1 %58, label %60, label %59

59:                                               ; preds = %38
  store i32 -2, i32* %3, align 4
  br label %223

60:                                               ; preds = %38
  br label %9, !llvm.loop !5

61:                                               ; preds = %31
  br label %62

62:                                               ; preds = %61, %14
  %63 = load %struct._strchunk*, %struct._strchunk** %5, align 8
  %64 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %63, i32 0, i32 3
  %65 = load i32, i32* %64, align 8
  %66 = load %struct._strchunk*, %struct._strchunk** %5, align 8
  %67 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %66, i32 0, i32 4
  %68 = load i32, i32* %67, align 4
  %69 = sub nsw i32 %65, %68
  store i32 %69, i32* %6, align 4
  %70 = load %struct.conn*, %struct.conn** %2, align 8
  %71 = getelementptr inbounds %struct.conn, %struct.conn* %70, i32 0, i32 18
  %72 = load i32, i32* %71, align 4
  %73 = icmp sgt i32 %72, 0
  br i1 %73, label %74, label %153

74:                                               ; preds = %62
  store i32 0, i32* %3, align 4
  %75 = load %struct.conn*, %struct.conn** %2, align 8
  %76 = getelementptr inbounds %struct.conn, %struct.conn* %75, i32 0, i32 18
  %77 = load i32, i32* %76, align 4
  %78 = load %struct.conn*, %struct.conn** %2, align 8
  %79 = getelementptr inbounds %struct.conn, %struct.conn* %78, i32 0, i32 22
  %80 = load i32, i32* %79, align 8
  %81 = icmp sgt i32 %77, %80
  br i1 %81, label %82, label %86

82:                                               ; preds = %74
  %83 = load %struct.conn*, %struct.conn** %2, align 8
  %84 = getelementptr inbounds %struct.conn, %struct.conn* %83, i32 0, i32 22
  %85 = load i32, i32* %84, align 8
  br label %90

86:                                               ; preds = %74
  %87 = load %struct.conn*, %struct.conn** %2, align 8
  %88 = getelementptr inbounds %struct.conn, %struct.conn* %87, i32 0, i32 18
  %89 = load i32, i32* %88, align 4
  br label %90

90:                                               ; preds = %86, %82
  %91 = phi i32 [ %85, %82 ], [ %89, %86 ]
  store i32 %91, i32* %7, align 4
  %92 = load i32, i32* %7, align 4
  %93 = load i32, i32* %6, align 4
  %94 = icmp sgt i32 %92, %93
  br i1 %94, label %95, label %97

95:                                               ; preds = %90
  %96 = load i32, i32* %6, align 4
  br label %99

97:                                               ; preds = %90
  %98 = load i32, i32* %7, align 4
  br label %99

99:                                               ; preds = %97, %95
  %100 = phi i32 [ %96, %95 ], [ %98, %97 ]
  store i32 %100, i32* %7, align 4
  %101 = load %struct.conn*, %struct.conn** %2, align 8
  %102 = getelementptr inbounds %struct.conn, %struct.conn* %101, i32 0, i32 21
  %103 = load i8*, i8** %102, align 8
  %104 = load %struct.conn*, %struct.conn** %2, align 8
  %105 = getelementptr inbounds %struct.conn, %struct.conn* %104, i32 0, i32 16
  %106 = load i8*, i8** %105, align 8
  %107 = icmp ne i8* %103, %106
  br i1 %107, label %108, label %122

108:                                              ; preds = %99
  %109 = load %struct._strchunk*, %struct._strchunk** %5, align 8
  %110 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %109, i32 0, i32 10
  %111 = getelementptr inbounds [0 x i8], [0 x i8]* %110, i64 0, i64 0
  %112 = load %struct._strchunk*, %struct._strchunk** %5, align 8
  %113 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %112, i32 0, i32 4
  %114 = load i32, i32* %113, align 4
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds i8, i8* %111, i64 %115
  %117 = load %struct.conn*, %struct.conn** %2, align 8
  %118 = getelementptr inbounds %struct.conn, %struct.conn* %117, i32 0, i32 16
  %119 = load i8*, i8** %118, align 8
  %120 = load i32, i32* %7, align 4
  %121 = sext i32 %120 to i64
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %116, i8* align 1 %119, i64 %121, i1 false)
  br label %122

122:                                              ; preds = %108, %99
  %123 = load i32, i32* %7, align 4
  %124 = load i32, i32* %3, align 4
  %125 = add nsw i32 %124, %123
  store i32 %125, i32* %3, align 4
  %126 = load i32, i32* %7, align 4
  %127 = load %struct.conn*, %struct.conn** %2, align 8
  %128 = getelementptr inbounds %struct.conn, %struct.conn* %127, i32 0, i32 22
  %129 = load i32, i32* %128, align 8
  %130 = sub nsw i32 %129, %126
  store i32 %130, i32* %128, align 8
  %131 = load i32, i32* %7, align 4
  %132 = load %struct.conn*, %struct.conn** %2, align 8
  %133 = getelementptr inbounds %struct.conn, %struct.conn* %132, i32 0, i32 16
  %134 = load i8*, i8** %133, align 8
  %135 = sext i32 %131 to i64
  %136 = getelementptr inbounds i8, i8* %134, i64 %135
  store i8* %136, i8** %133, align 8
  %137 = load i32, i32* %7, align 4
  %138 = load %struct.conn*, %struct.conn** %2, align 8
  %139 = getelementptr inbounds %struct.conn, %struct.conn* %138, i32 0, i32 18
  %140 = load i32, i32* %139, align 4
  %141 = sub nsw i32 %140, %137
  store i32 %141, i32* %139, align 4
  %142 = load i32, i32* %7, align 4
  %143 = load %struct._strchunk*, %struct._strchunk** %5, align 8
  %144 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %143, i32 0, i32 4
  %145 = load i32, i32* %144, align 4
  %146 = add nsw i32 %145, %142
  store i32 %146, i32* %144, align 4
  %147 = load %struct.conn*, %struct.conn** %2, align 8
  %148 = getelementptr inbounds %struct.conn, %struct.conn* %147, i32 0, i32 22
  %149 = load i32, i32* %148, align 8
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %151, label %152

151:                                              ; preds = %122
  br label %223

152:                                              ; preds = %122
  br label %222

153:                                              ; preds = %62
  %154 = load %struct.conn*, %struct.conn** %2, align 8
  %155 = getelementptr inbounds %struct.conn, %struct.conn* %154, i32 0, i32 44
  %156 = load i64 (%struct.conn*, i8*, i64)*, i64 (%struct.conn*, i8*, i64)** %155, align 8
  %157 = load %struct.conn*, %struct.conn** %2, align 8
  %158 = load %struct._strchunk*, %struct._strchunk** %5, align 8
  %159 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %158, i32 0, i32 10
  %160 = getelementptr inbounds [0 x i8], [0 x i8]* %159, i64 0, i64 0
  %161 = load %struct._strchunk*, %struct._strchunk** %5, align 8
  %162 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %161, i32 0, i32 4
  %163 = load i32, i32* %162, align 4
  %164 = sext i32 %163 to i64
  %165 = getelementptr inbounds i8, i8* %160, i64 %164
  %166 = load i32, i32* %6, align 4
  %167 = load %struct.conn*, %struct.conn** %2, align 8
  %168 = getelementptr inbounds %struct.conn, %struct.conn* %167, i32 0, i32 22
  %169 = load i32, i32* %168, align 8
  %170 = icmp sgt i32 %166, %169
  br i1 %170, label %171, label %175

171:                                              ; preds = %153
  %172 = load %struct.conn*, %struct.conn** %2, align 8
  %173 = getelementptr inbounds %struct.conn, %struct.conn* %172, i32 0, i32 22
  %174 = load i32, i32* %173, align 8
  br label %177

175:                                              ; preds = %153
  %176 = load i32, i32* %6, align 4
  br label %177

177:                                              ; preds = %175, %171
  %178 = phi i32 [ %174, %171 ], [ %176, %175 ]
  %179 = sext i32 %178 to i64
  %180 = call i64 %156(%struct.conn* %157, i8* %165, i64 %179)
  %181 = trunc i64 %180 to i32
  store i32 %181, i32* %4, align 4
  %182 = load i32, i32* %4, align 4
  %183 = icmp sgt i32 %182, 0
  br i1 %183, label %184, label %219

184:                                              ; preds = %177
  %185 = load %struct.conn*, %struct.conn** %2, align 8
  %186 = getelementptr inbounds %struct.conn, %struct.conn* %185, i32 0, i32 42
  %187 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %186, align 8
  %188 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %187, i32 0, i32 4
  %189 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %188, i32 0, i32 0
  %190 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %189) #14
  %191 = load i32, i32* %4, align 4
  %192 = sext i32 %191 to i64
  %193 = load %struct.conn*, %struct.conn** %2, align 8
  %194 = getelementptr inbounds %struct.conn, %struct.conn* %193, i32 0, i32 42
  %195 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %194, align 8
  %196 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %195, i32 0, i32 4
  %197 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %196, i32 0, i32 12
  %198 = load i64, i64* %197, align 8
  %199 = add i64 %198, %192
  store i64 %199, i64* %197, align 8
  %200 = load %struct.conn*, %struct.conn** %2, align 8
  %201 = getelementptr inbounds %struct.conn, %struct.conn* %200, i32 0, i32 42
  %202 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %201, align 8
  %203 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %202, i32 0, i32 4
  %204 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %203, i32 0, i32 0
  %205 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %204) #14
  %206 = load i32, i32* %4, align 4
  %207 = load %struct._strchunk*, %struct._strchunk** %5, align 8
  %208 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %207, i32 0, i32 4
  %209 = load i32, i32* %208, align 4
  %210 = add nsw i32 %209, %206
  store i32 %210, i32* %208, align 4
  %211 = load i32, i32* %4, align 4
  %212 = load i32, i32* %3, align 4
  %213 = add nsw i32 %212, %211
  store i32 %213, i32* %3, align 4
  %214 = load i32, i32* %4, align 4
  %215 = load %struct.conn*, %struct.conn** %2, align 8
  %216 = getelementptr inbounds %struct.conn, %struct.conn* %215, i32 0, i32 22
  %217 = load i32, i32* %216, align 8
  %218 = sub nsw i32 %217, %214
  store i32 %218, i32* %216, align 8
  br label %221

219:                                              ; preds = %177
  %220 = load i32, i32* %4, align 4
  store i32 %220, i32* %3, align 4
  br label %223

221:                                              ; preds = %184
  br label %222

222:                                              ; preds = %221, %152
  br label %9, !llvm.loop !5

223:                                              ; preds = %219, %151, %59, %9
  %224 = load %struct.conn*, %struct.conn** %2, align 8
  %225 = getelementptr inbounds %struct.conn, %struct.conn* %224, i32 0, i32 22
  %226 = load i32, i32* %225, align 8
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %228, label %262

228:                                              ; preds = %223
  %229 = load %struct.conn*, %struct.conn** %2, align 8
  %230 = getelementptr inbounds %struct.conn, %struct.conn* %229, i32 0, i32 28
  %231 = load i32, i32* %230, align 4
  %232 = icmp eq i32 %231, 4
  br i1 %232, label %233, label %262

233:                                              ; preds = %228
  %234 = load i32, i32* %3, align 4
  %235 = icmp sge i32 %234, 0
  br i1 %235, label %236, label %262

236:                                              ; preds = %233
  %237 = load %struct.conn*, %struct.conn** %2, align 8
  %238 = getelementptr inbounds %struct.conn, %struct.conn* %237, i32 0, i32 21
  %239 = load i8*, i8** %238, align 8
  %240 = bitcast i8* %239 to %struct._strchunk*
  store %struct._strchunk* %240, %struct._strchunk** %8, align 8
  %241 = load %struct._strchunk*, %struct._strchunk** %8, align 8
  %242 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %241, i32 0, i32 3
  %243 = load i32, i32* %242, align 8
  %244 = load %struct._strchunk*, %struct._strchunk** %8, align 8
  %245 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %244, i32 0, i32 4
  %246 = load i32, i32* %245, align 4
  %247 = sub nsw i32 %243, %246
  %248 = icmp slt i32 %247, 2
  br i1 %248, label %249, label %261

249:                                              ; preds = %236
  %250 = load %struct._strchunk*, %struct._strchunk** %8, align 8
  %251 = call %struct._strchunk* @do_item_alloc_chunk(%struct._strchunk* %250, i64 2)
  %252 = bitcast %struct._strchunk* %251 to i8*
  %253 = load %struct.conn*, %struct.conn** %2, align 8
  %254 = getelementptr inbounds %struct.conn, %struct.conn* %253, i32 0, i32 21
  store i8* %252, i8** %254, align 8
  %255 = load %struct.conn*, %struct.conn** %2, align 8
  %256 = getelementptr inbounds %struct.conn, %struct.conn* %255, i32 0, i32 21
  %257 = load i8*, i8** %256, align 8
  %258 = icmp ne i8* %257, null
  br i1 %258, label %260, label %259

259:                                              ; preds = %249
  store i32 -2, i32* %3, align 4
  br label %260

260:                                              ; preds = %259, %249
  br label %261

261:                                              ; preds = %260, %236
  br label %262

262:                                              ; preds = %261, %233, %228, %223
  %263 = load i32, i32* %3, align 4
  ret i32 %263
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @out_of_memory(%struct.conn* %0, i8* %1) #0 {
  %3 = alloca %struct.conn*, align 8
  %4 = alloca i8*, align 8
  store %struct.conn* %0, %struct.conn** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load %struct.conn*, %struct.conn** %3, align 8
  %6 = getelementptr inbounds %struct.conn, %struct.conn* %5, i32 0, i32 28
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 4
  br i1 %8, label %9, label %19

9:                                                ; preds = %2
  %10 = load i8*, i8** %4, align 8
  %11 = call i32 @strncmp(i8* %10, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @out_of_memory.error_prefix, i64 0, i64 0), i64 13) #16
  %12 = icmp ne i32 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %9
  %14 = load i8*, i8** %4, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 13
  store i8* %15, i8** %4, align 8
  br label %16

16:                                               ; preds = %13, %9
  %17 = load %struct.conn*, %struct.conn** %3, align 8
  %18 = load i8*, i8** %4, align 8
  call void @write_bin_error(%struct.conn* %17, i32 130, i8* %18, i32 0)
  br label %22

19:                                               ; preds = %2
  %20 = load %struct.conn*, %struct.conn** %3, align 8
  %21 = load i8*, i8** %4, align 8
  call void @out_string(%struct.conn* %20, i8* %21)
  br label %22

22:                                               ; preds = %19, %16
  ret void
}

; Function Attrs: nounwind
declare dso_local i8* @strerror(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.io_queue_cb_s* @thread_io_queue_get(%struct.LIBEVENT_THREAD* %0, i32 %1) #0 {
  %3 = alloca %struct.io_queue_cb_s*, align 8
  %4 = alloca %struct.LIBEVENT_THREAD*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.io_queue_cb_s*, align 8
  store %struct.LIBEVENT_THREAD* %0, %struct.LIBEVENT_THREAD** %4, align 8
  store i32 %1, i32* %5, align 4
  %7 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %4, align 8
  %8 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %7, i32 0, i32 5
  %9 = getelementptr inbounds [3 x %struct.io_queue_cb_s], [3 x %struct.io_queue_cb_s]* %8, i64 0, i64 0
  store %struct.io_queue_cb_s* %9, %struct.io_queue_cb_s** %6, align 8
  br label %10

10:                                               ; preds = %23, %2
  %11 = load %struct.io_queue_cb_s*, %struct.io_queue_cb_s** %6, align 8
  %12 = getelementptr inbounds %struct.io_queue_cb_s, %struct.io_queue_cb_s* %11, i32 0, i32 5
  %13 = load i32, i32* %12, align 8
  %14 = icmp ne i32 %13, 0
  br i1 %14, label %15, label %26

15:                                               ; preds = %10
  %16 = load %struct.io_queue_cb_s*, %struct.io_queue_cb_s** %6, align 8
  %17 = getelementptr inbounds %struct.io_queue_cb_s, %struct.io_queue_cb_s* %16, i32 0, i32 5
  %18 = load i32, i32* %17, align 8
  %19 = load i32, i32* %5, align 4
  %20 = icmp eq i32 %18, %19
  br i1 %20, label %21, label %23

21:                                               ; preds = %15
  %22 = load %struct.io_queue_cb_s*, %struct.io_queue_cb_s** %6, align 8
  store %struct.io_queue_cb_s* %22, %struct.io_queue_cb_s** %3, align 8
  br label %27

23:                                               ; preds = %15
  %24 = load %struct.io_queue_cb_s*, %struct.io_queue_cb_s** %6, align 8
  %25 = getelementptr inbounds %struct.io_queue_cb_s, %struct.io_queue_cb_s* %24, i32 1
  store %struct.io_queue_cb_s* %25, %struct.io_queue_cb_s** %6, align 8
  br label %10, !llvm.loop !6

26:                                               ; preds = %10
  store %struct.io_queue_cb_s* null, %struct.io_queue_cb_s** %3, align 8
  br label %27

27:                                               ; preds = %26, %21
  %28 = load %struct.io_queue_cb_s*, %struct.io_queue_cb_s** %3, align 8
  ret %struct.io_queue_cb_s* %28
}

declare dso_local i32 @event_del(%struct.event*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @transmit(%struct.conn* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.conn*, align 8
  %4 = alloca [1024 x %struct.iovec], align 16
  %5 = alloca %struct.msghdr, align 8
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  store %struct.conn* %0, %struct.conn** %3, align 8
  store i32 0, i32* %6, align 4
  %8 = bitcast %struct.msghdr* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 56, i1 false)
  %9 = getelementptr inbounds [1024 x %struct.iovec], [1024 x %struct.iovec]* %4, i64 0, i64 0
  %10 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %5, i32 0, i32 2
  store %struct.iovec* %9, %struct.iovec** %10, align 8
  %11 = load %struct.conn*, %struct.conn** %3, align 8
  %12 = getelementptr inbounds [1024 x %struct.iovec], [1024 x %struct.iovec]* %4, i64 0, i64 0
  %13 = load i32, i32* %6, align 4
  %14 = call i32 @_transmit_pre(%struct.conn* %11, %struct.iovec* %12, i32 %13, i1 zeroext false)
  store i32 %14, i32* %6, align 4
  %15 = load i32, i32* %6, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %1
  %18 = load %struct.conn*, %struct.conn** %3, align 8
  call void @_transmit_post(%struct.conn* %18, i64 0)
  store i32 0, i32* %2, align 4
  br label %88

19:                                               ; preds = %1
  %20 = load i32, i32* %6, align 4
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %5, i32 0, i32 3
  store i64 %21, i64* %22, align 8
  %23 = load %struct.conn*, %struct.conn** %3, align 8
  %24 = getelementptr inbounds %struct.conn, %struct.conn* %23, i32 0, i32 45
  %25 = load i64 (%struct.conn*, %struct.msghdr*, i32)*, i64 (%struct.conn*, %struct.msghdr*, i32)** %24, align 8
  %26 = load %struct.conn*, %struct.conn** %3, align 8
  %27 = call i64 %25(%struct.conn* %26, %struct.msghdr* %5, i32 0)
  store i64 %27, i64* %7, align 8
  %28 = load i64, i64* %7, align 8
  %29 = icmp sge i64 %28, 0
  br i1 %29, label %30, label %59

30:                                               ; preds = %19
  %31 = load %struct.conn*, %struct.conn** %3, align 8
  %32 = getelementptr inbounds %struct.conn, %struct.conn* %31, i32 0, i32 42
  %33 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %32, align 8
  %34 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %33, i32 0, i32 4
  %35 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %34, i32 0, i32 0
  %36 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %35) #14
  %37 = load i64, i64* %7, align 8
  %38 = load %struct.conn*, %struct.conn** %3, align 8
  %39 = getelementptr inbounds %struct.conn, %struct.conn* %38, i32 0, i32 42
  %40 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %39, align 8
  %41 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %40, i32 0, i32 4
  %42 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %41, i32 0, i32 13
  %43 = load i64, i64* %42, align 8
  %44 = add i64 %43, %37
  store i64 %44, i64* %42, align 8
  %45 = load %struct.conn*, %struct.conn** %3, align 8
  %46 = getelementptr inbounds %struct.conn, %struct.conn* %45, i32 0, i32 42
  %47 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %46, align 8
  %48 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %47, i32 0, i32 4
  %49 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %48, i32 0, i32 0
  %50 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %49) #14
  %51 = load %struct.conn*, %struct.conn** %3, align 8
  %52 = load i64, i64* %7, align 8
  call void @_transmit_post(%struct.conn* %51, i64 %52)
  %53 = load %struct.conn*, %struct.conn** %3, align 8
  %54 = getelementptr inbounds %struct.conn, %struct.conn* %53, i32 0, i32 20
  %55 = load %struct._mc_resp*, %struct._mc_resp** %54, align 8
  %56 = icmp ne %struct._mc_resp* %55, null
  br i1 %56, label %57, label %58

57:                                               ; preds = %30
  store i32 1, i32* %2, align 4
  br label %88

58:                                               ; preds = %30
  store i32 0, i32* %2, align 4
  br label %88

59:                                               ; preds = %19
  %60 = load i64, i64* %7, align 8
  %61 = icmp eq i64 %60, -1
  br i1 %61, label %62, label %82

62:                                               ; preds = %59
  %63 = call i32* @__errno_location() #15
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, 11
  br i1 %65, label %70, label %66

66:                                               ; preds = %62
  %67 = call i32* @__errno_location() #15
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %68, 11
  br i1 %69, label %70, label %82

70:                                               ; preds = %66, %62
  %71 = load %struct.conn*, %struct.conn** %3, align 8
  %72 = call zeroext i1 @update_event(%struct.conn* %71, i32 20)
  br i1 %72, label %81, label %73

73:                                               ; preds = %70
  %74 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %75 = icmp sgt i32 %74, 0
  br i1 %75, label %76, label %79

76:                                               ; preds = %73
  %77 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %78 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %77, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.395, i64 0, i64 0))
  br label %79

79:                                               ; preds = %76, %73
  %80 = load %struct.conn*, %struct.conn** %3, align 8
  call void @conn_set_state(%struct.conn* %80, i32 8)
  store i32 3, i32* %2, align 4
  br label %88

81:                                               ; preds = %70
  store i32 2, i32* %2, align 4
  br label %88

82:                                               ; preds = %66, %59
  %83 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %84 = icmp sgt i32 %83, 0
  br i1 %84, label %85, label %86

85:                                               ; preds = %82
  call void @perror(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.403, i64 0, i64 0))
  br label %86

86:                                               ; preds = %85, %82
  %87 = load %struct.conn*, %struct.conn** %3, align 8
  call void @conn_set_state(%struct.conn* %87, i32 8)
  store i32 3, i32* %2, align 4
  br label %88

88:                                               ; preds = %86, %81, %79, %58, %57, %17
  %89 = load i32, i32* %2, align 4
  ret i32 %89
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @transmit_udp(%struct.conn* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.conn*, align 8
  %4 = alloca [1024 x %struct.iovec], align 16
  %5 = alloca %struct.msghdr, align 8
  %6 = alloca %struct._mc_resp*, align 8
  %7 = alloca i32, align 4
  %8 = alloca [8 x i8], align 1
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i64, align 8
  store %struct.conn* %0, %struct.conn** %3, align 8
  store i32 0, i32* %7, align 4
  %12 = load %struct.conn*, %struct.conn** %3, align 8
  %13 = getelementptr inbounds %struct.conn, %struct.conn* %12, i32 0, i32 20
  %14 = load %struct._mc_resp*, %struct._mc_resp** %13, align 8
  store %struct._mc_resp* %14, %struct._mc_resp** %6, align 8
  %15 = load %struct._mc_resp*, %struct._mc_resp** %6, align 8
  %16 = icmp ne %struct._mc_resp* %15, null
  br i1 %16, label %18, label %17

17:                                               ; preds = %1
  store i32 0, i32* %2, align 4
  br label %161

18:                                               ; preds = %1
  %19 = load %struct._mc_resp*, %struct._mc_resp** %6, align 8
  %20 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %19, i32 0, i32 11
  %21 = load i8, i8* %20, align 2
  %22 = trunc i8 %21 to i1
  br i1 %22, label %23, label %27

23:                                               ; preds = %18
  %24 = load %struct.conn*, %struct.conn** %3, align 8
  %25 = load %struct._mc_resp*, %struct._mc_resp** %6, align 8
  %26 = call %struct._mc_resp* @resp_finish(%struct.conn* %24, %struct._mc_resp* %25)
  store %struct._mc_resp* %26, %struct._mc_resp** %6, align 8
  store i32 1, i32* %2, align 4
  br label %161

27:                                               ; preds = %18
  %28 = bitcast %struct.msghdr* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 56, i1 false)
  %29 = getelementptr inbounds [1024 x %struct.iovec], [1024 x %struct.iovec]* %4, i64 0, i64 0
  %30 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %5, i32 0, i32 2
  store %struct.iovec* %29, %struct.iovec** %30, align 8
  %31 = load %struct._mc_resp*, %struct._mc_resp** %6, align 8
  %32 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %31, i32 0, i32 16
  %33 = bitcast %struct.sockaddr_in6* %32 to i8*
  %34 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %5, i32 0, i32 0
  store i8* %33, i8** %34, align 8
  %35 = load %struct._mc_resp*, %struct._mc_resp** %6, align 8
  %36 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %35, i32 0, i32 17
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %5, i32 0, i32 1
  store i32 %37, i32* %38, align 8
  %39 = getelementptr inbounds [8 x i8], [8 x i8]* %8, i64 0, i64 0
  %40 = getelementptr inbounds [1024 x %struct.iovec], [1024 x %struct.iovec]* %4, i64 0, i64 0
  %41 = getelementptr inbounds %struct.iovec, %struct.iovec* %40, i32 0, i32 0
  store i8* %39, i8** %41, align 16
  %42 = getelementptr inbounds [1024 x %struct.iovec], [1024 x %struct.iovec]* %4, i64 0, i64 0
  %43 = getelementptr inbounds %struct.iovec, %struct.iovec* %42, i32 0, i32 1
  store i64 8, i64* %43, align 8
  %44 = getelementptr inbounds [8 x i8], [8 x i8]* %8, i64 0, i64 0
  %45 = load %struct._mc_resp*, %struct._mc_resp** %6, align 8
  call void @build_udp_header(i8* %44, %struct._mc_resp* %45)
  %46 = load i32, i32* %7, align 4
  %47 = add nsw i32 %46, 1
  store i32 %47, i32* %7, align 4
  %48 = load %struct.conn*, %struct.conn** %3, align 8
  %49 = getelementptr inbounds [1024 x %struct.iovec], [1024 x %struct.iovec]* %4, i64 0, i64 0
  %50 = load i32, i32* %7, align 4
  %51 = call i32 @_transmit_pre(%struct.conn* %48, %struct.iovec* %49, i32 %50, i1 zeroext true)
  store i32 %51, i32* %7, align 4
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 4
  store i32 0, i32* %9, align 4
  br label %52

52:                                               ; preds = %87, %27
  %53 = load i32, i32* %9, align 4
  %54 = load i32, i32* %7, align 4
  %55 = icmp slt i32 %53, %54
  br i1 %55, label %56, label %90

56:                                               ; preds = %52
  %57 = load i32, i32* %10, align 4
  %58 = sext i32 %57 to i64
  %59 = load i32, i32* %9, align 4
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds [1024 x %struct.iovec], [1024 x %struct.iovec]* %4, i64 0, i64 %60
  %62 = getelementptr inbounds %struct.iovec, %struct.iovec* %61, i32 0, i32 1
  %63 = load i64, i64* %62, align 8
  %64 = add i64 %58, %63
  %65 = icmp uge i64 %64, 1400
  br i1 %65, label %66, label %76

66:                                               ; preds = %56
  %67 = load i32, i32* %10, align 4
  %68 = sub nsw i32 1400, %67
  %69 = sext i32 %68 to i64
  %70 = load i32, i32* %9, align 4
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds [1024 x %struct.iovec], [1024 x %struct.iovec]* %4, i64 0, i64 %71
  %73 = getelementptr inbounds %struct.iovec, %struct.iovec* %72, i32 0, i32 1
  store i64 %69, i64* %73, align 8
  %74 = load i32, i32* %9, align 4
  %75 = add nsw i32 %74, 1
  store i32 %75, i32* %9, align 4
  br label %90

76:                                               ; preds = %56
  %77 = load i32, i32* %9, align 4
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds [1024 x %struct.iovec], [1024 x %struct.iovec]* %4, i64 0, i64 %78
  %80 = getelementptr inbounds %struct.iovec, %struct.iovec* %79, i32 0, i32 1
  %81 = load i64, i64* %80, align 8
  %82 = load i32, i32* %10, align 4
  %83 = sext i32 %82 to i64
  %84 = add i64 %83, %81
  %85 = trunc i64 %84 to i32
  store i32 %85, i32* %10, align 4
  br label %86

86:                                               ; preds = %76
  br label %87

87:                                               ; preds = %86
  %88 = load i32, i32* %9, align 4
  %89 = add nsw i32 %88, 1
  store i32 %89, i32* %9, align 4
  br label %52, !llvm.loop !7

90:                                               ; preds = %66, %52
  %91 = load i32, i32* %9, align 4
  store i32 %91, i32* %7, align 4
  %92 = load i32, i32* %7, align 4
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %5, i32 0, i32 3
  store i64 %93, i64* %94, align 8
  %95 = load %struct.conn*, %struct.conn** %3, align 8
  %96 = getelementptr inbounds %struct.conn, %struct.conn* %95, i32 0, i32 1
  %97 = load i32, i32* %96, align 8
  %98 = call i64 @sendmsg(i32 %97, %struct.msghdr* %5, i32 0)
  store i64 %98, i64* %11, align 8
  %99 = load i64, i64* %11, align 8
  %100 = icmp sge i64 %99, 0
  br i1 %100, label %101, label %132

101:                                              ; preds = %90
  %102 = load %struct.conn*, %struct.conn** %3, align 8
  %103 = getelementptr inbounds %struct.conn, %struct.conn* %102, i32 0, i32 42
  %104 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %103, align 8
  %105 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %104, i32 0, i32 4
  %106 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %105, i32 0, i32 0
  %107 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %106) #14
  %108 = load i64, i64* %11, align 8
  %109 = load %struct.conn*, %struct.conn** %3, align 8
  %110 = getelementptr inbounds %struct.conn, %struct.conn* %109, i32 0, i32 42
  %111 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %110, align 8
  %112 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %111, i32 0, i32 4
  %113 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %112, i32 0, i32 13
  %114 = load i64, i64* %113, align 8
  %115 = add i64 %114, %108
  store i64 %115, i64* %113, align 8
  %116 = load %struct.conn*, %struct.conn** %3, align 8
  %117 = getelementptr inbounds %struct.conn, %struct.conn* %116, i32 0, i32 42
  %118 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %117, align 8
  %119 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %118, i32 0, i32 4
  %120 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %119, i32 0, i32 0
  %121 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %120) #14
  %122 = load i64, i64* %11, align 8
  %123 = sub nsw i64 %122, 8
  store i64 %123, i64* %11, align 8
  %124 = load %struct.conn*, %struct.conn** %3, align 8
  %125 = load i64, i64* %11, align 8
  call void @_transmit_post(%struct.conn* %124, i64 %125)
  %126 = load %struct.conn*, %struct.conn** %3, align 8
  %127 = getelementptr inbounds %struct.conn, %struct.conn* %126, i32 0, i32 20
  %128 = load %struct._mc_resp*, %struct._mc_resp** %127, align 8
  %129 = icmp ne %struct._mc_resp* %128, null
  br i1 %129, label %130, label %131

130:                                              ; preds = %101
  store i32 1, i32* %2, align 4
  br label %161

131:                                              ; preds = %101
  store i32 0, i32* %2, align 4
  br label %161

132:                                              ; preds = %90
  %133 = load i64, i64* %11, align 8
  %134 = icmp eq i64 %133, -1
  br i1 %134, label %135, label %155

135:                                              ; preds = %132
  %136 = call i32* @__errno_location() #15
  %137 = load i32, i32* %136, align 4
  %138 = icmp eq i32 %137, 11
  br i1 %138, label %143, label %139

139:                                              ; preds = %135
  %140 = call i32* @__errno_location() #15
  %141 = load i32, i32* %140, align 4
  %142 = icmp eq i32 %141, 11
  br i1 %142, label %143, label %155

143:                                              ; preds = %139, %135
  %144 = load %struct.conn*, %struct.conn** %3, align 8
  %145 = call zeroext i1 @update_event(%struct.conn* %144, i32 20)
  br i1 %145, label %154, label %146

146:                                              ; preds = %143
  %147 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %148 = icmp sgt i32 %147, 0
  br i1 %148, label %149, label %152

149:                                              ; preds = %146
  %150 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %151 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %150, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.395, i64 0, i64 0))
  br label %152

152:                                              ; preds = %149, %146
  %153 = load %struct.conn*, %struct.conn** %3, align 8
  call void @conn_set_state(%struct.conn* %153, i32 8)
  store i32 3, i32* %2, align 4
  br label %161

154:                                              ; preds = %143
  store i32 2, i32* %2, align 4
  br label %161

155:                                              ; preds = %139, %132
  %156 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %157 = icmp sgt i32 %156, 0
  br i1 %157, label %158, label %159

158:                                              ; preds = %155
  call void @perror(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.403, i64 0, i64 0))
  br label %159

159:                                              ; preds = %158, %155
  %160 = load %struct.conn*, %struct.conn** %3, align 8
  call void @conn_set_state(%struct.conn* %160, i32 3)
  store i32 3, i32* %2, align 4
  br label %161

161:                                              ; preds = %159, %154, %152, %131, %130, %23, %17
  %162 = load i32, i32* %2, align 4
  ret i32 %162
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @conn_release_items(%struct.conn* %0) #0 {
  %2 = alloca %struct.conn*, align 8
  %3 = alloca %struct._mc_resp*, align 8
  store %struct.conn* %0, %struct.conn** %2, align 8
  %4 = load %struct.conn*, %struct.conn** %2, align 8
  %5 = getelementptr inbounds %struct.conn, %struct.conn* %4, i32 0, i32 23
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ne i8* %6, null
  br i1 %7, label %8, label %27

8:                                                ; preds = %1
  %9 = load %struct.conn*, %struct.conn** %2, align 8
  %10 = getelementptr inbounds %struct.conn, %struct.conn* %9, i32 0, i32 8
  %11 = load i8, i8* %10, align 2
  %12 = trunc i8 %11 to i1
  br i1 %12, label %13, label %19

13:                                               ; preds = %8
  %14 = load %struct.conn*, %struct.conn** %2, align 8
  %15 = getelementptr inbounds %struct.conn, %struct.conn* %14, i32 0, i32 23
  %16 = load i8*, i8** %15, align 8
  call void @free(i8* %16) #14
  %17 = load %struct.conn*, %struct.conn** %2, align 8
  %18 = getelementptr inbounds %struct.conn, %struct.conn* %17, i32 0, i32 8
  store i8 0, i8* %18, align 2
  br label %24

19:                                               ; preds = %8
  %20 = load %struct.conn*, %struct.conn** %2, align 8
  %21 = getelementptr inbounds %struct.conn, %struct.conn* %20, i32 0, i32 23
  %22 = load i8*, i8** %21, align 8
  %23 = bitcast i8* %22 to %struct._stritem*
  call void @item_remove(%struct._stritem* %23)
  br label %24

24:                                               ; preds = %19, %13
  %25 = load %struct.conn*, %struct.conn** %2, align 8
  %26 = getelementptr inbounds %struct.conn, %struct.conn* %25, i32 0, i32 23
  store i8* null, i8** %26, align 8
  br label %27

27:                                               ; preds = %24, %1
  %28 = load %struct.conn*, %struct.conn** %2, align 8
  %29 = getelementptr inbounds %struct.conn, %struct.conn* %28, i32 0, i32 20
  %30 = load %struct._mc_resp*, %struct._mc_resp** %29, align 8
  %31 = icmp ne %struct._mc_resp* %30, null
  br i1 %31, label %32, label %66

32:                                               ; preds = %27
  %33 = load %struct.conn*, %struct.conn** %2, align 8
  %34 = getelementptr inbounds %struct.conn, %struct.conn* %33, i32 0, i32 20
  %35 = load %struct._mc_resp*, %struct._mc_resp** %34, align 8
  store %struct._mc_resp* %35, %struct._mc_resp** %3, align 8
  br label %36

36:                                               ; preds = %60, %32
  %37 = load %struct._mc_resp*, %struct._mc_resp** %3, align 8
  %38 = icmp ne %struct._mc_resp* %37, null
  br i1 %38, label %39, label %64

39:                                               ; preds = %36
  %40 = load %struct._mc_resp*, %struct._mc_resp** %3, align 8
  %41 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %40, i32 0, i32 12
  %42 = load i8, i8* %41, align 1
  %43 = trunc i8 %42 to i1
  br i1 %43, label %44, label %60

44:                                               ; preds = %39
  %45 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %46 = load %struct.conn*, %struct.conn** %2, align 8
  %47 = getelementptr inbounds %struct.conn, %struct.conn* %46, i32 0, i32 1
  %48 = load i32, i32* %47, align 8
  %49 = load %struct.conn*, %struct.conn** %2, align 8
  %50 = getelementptr inbounds %struct.conn, %struct.conn* %49, i32 0, i32 28
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 4
  %53 = zext i1 %52 to i64
  %54 = select i1 %52, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14, i64 0, i64 0)
  %55 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %45, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.12, i64 0, i64 0), i32 %48, i8* %54)
  %56 = load %struct.conn*, %struct.conn** %2, align 8
  %57 = getelementptr inbounds %struct.conn, %struct.conn* %56, i32 0, i32 20
  store %struct._mc_resp* null, %struct._mc_resp** %57, align 8
  %58 = load %struct.conn*, %struct.conn** %2, align 8
  %59 = getelementptr inbounds %struct.conn, %struct.conn* %58, i32 0, i32 19
  store %struct._mc_resp* null, %struct._mc_resp** %59, align 8
  br label %64

60:                                               ; preds = %39
  %61 = load %struct.conn*, %struct.conn** %2, align 8
  %62 = load %struct._mc_resp*, %struct._mc_resp** %3, align 8
  %63 = call %struct._mc_resp* @resp_finish(%struct.conn* %61, %struct._mc_resp* %62)
  store %struct._mc_resp* %63, %struct._mc_resp** %3, align 8
  br label %36, !llvm.loop !8

64:                                               ; preds = %44, %36
  %65 = load %struct.conn*, %struct.conn** %2, align 8
  call void @conn_io_queue_reset(%struct.conn* %65)
  br label %66

66:                                               ; preds = %64, %27
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @conn_cleanup(%struct.conn* %0) #0 {
  %2 = alloca %struct.conn*, align 8
  store %struct.conn* %0, %struct.conn** %2, align 8
  %3 = load %struct.conn*, %struct.conn** %2, align 8
  call void @conn_release_items(%struct.conn* %3)
  %4 = load %struct.conn*, %struct.conn** %2, align 8
  %5 = getelementptr inbounds %struct.conn, %struct.conn* %4, i32 0, i32 0
  %6 = load i8**, i8*** %5, align 8
  %7 = icmp ne i8** %6, null
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = load %struct.conn*, %struct.conn** %2, align 8
  %10 = getelementptr inbounds %struct.conn, %struct.conn* %9, i32 0, i32 0
  store i8** null, i8*** %10, align 8
  br label %11

11:                                               ; preds = %8, %1
  %12 = load %struct.conn*, %struct.conn** %2, align 8
  %13 = getelementptr inbounds %struct.conn, %struct.conn* %12, i32 0, i32 29
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 2
  br i1 %15, label %16, label %18

16:                                               ; preds = %11
  %17 = load %struct.conn*, %struct.conn** %2, align 8
  call void @conn_set_state(%struct.conn* %17, i32 3)
  br label %18

18:                                               ; preds = %16, %11
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @conn_close(%struct.conn* %0) #0 {
  %2 = alloca %struct.conn*, align 8
  %3 = alloca %struct._logger*, align 8
  store %struct.conn* %0, %struct.conn** %2, align 8
  %4 = load %struct.conn*, %struct.conn** %2, align 8
  %5 = getelementptr inbounds %struct.conn, %struct.conn* %4, i32 0, i32 42
  %6 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %5, align 8
  %7 = icmp ne %struct.LIBEVENT_THREAD* %6, null
  br i1 %7, label %8, label %51

8:                                                ; preds = %1
  br label %9

9:                                                ; preds = %8
  %10 = load %struct.conn*, %struct.conn** %2, align 8
  %11 = getelementptr inbounds %struct.conn, %struct.conn* %10, i32 0, i32 42
  %12 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %11, align 8
  %13 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %12, i32 0, i32 11
  %14 = load %struct._logger*, %struct._logger** %13, align 8
  store %struct._logger* %14, %struct._logger** %3, align 8
  %15 = load %struct.conn*, %struct.conn** %2, align 8
  %16 = getelementptr inbounds %struct.conn, %struct.conn* %15, i32 0, i32 42
  %17 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %16, align 8
  %18 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %17, i32 0, i32 11
  %19 = load %struct._logger*, %struct._logger** %18, align 8
  %20 = icmp eq %struct._logger* %19, null
  br i1 %20, label %21, label %25

21:                                               ; preds = %9
  %22 = load i32, i32* @logger_key, align 4
  %23 = call i8* @pthread_getspecific(i32 %22) #14
  %24 = bitcast i8* %23 to %struct._logger*
  store %struct._logger* %24, %struct._logger** %3, align 8
  br label %25

25:                                               ; preds = %21, %9
  %26 = load %struct._logger*, %struct._logger** %3, align 8
  %27 = getelementptr inbounds %struct._logger, %struct._logger* %26, i32 0, i32 8
  %28 = load i16, i16* %27, align 4
  %29 = zext i16 %28 to i32
  %30 = and i32 %29, 32
  %31 = icmp ne i32 %30, 0
  br i1 %31, label %32, label %49

32:                                               ; preds = %25
  %33 = load %struct._logger*, %struct._logger** %3, align 8
  %34 = load %struct.conn*, %struct.conn** %2, align 8
  %35 = getelementptr inbounds %struct.conn, %struct.conn* %34, i32 0, i32 32
  %36 = load %struct.conn*, %struct.conn** %2, align 8
  %37 = getelementptr inbounds %struct.conn, %struct.conn* %36, i32 0, i32 33
  %38 = load i32, i32* %37, align 8
  %39 = load %struct.conn*, %struct.conn** %2, align 8
  %40 = getelementptr inbounds %struct.conn, %struct.conn* %39, i32 0, i32 29
  %41 = load i32, i32* %40, align 8
  %42 = load %struct.conn*, %struct.conn** %2, align 8
  %43 = getelementptr inbounds %struct.conn, %struct.conn* %42, i32 0, i32 30
  %44 = load i32, i32* %43, align 4
  %45 = load %struct.conn*, %struct.conn** %2, align 8
  %46 = getelementptr inbounds %struct.conn, %struct.conn* %45, i32 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = call i32 (%struct._logger*, i32, i8*, ...) @logger_log(%struct._logger* %33, i32 7, i8* null, %struct.sockaddr_in6* %35, i32 %38, i32 %41, i32 %44, i32 %47)
  br label %49

49:                                               ; preds = %32, %25
  br label %50

50:                                               ; preds = %49
  br label %51

51:                                               ; preds = %50, %1
  %52 = load %struct.conn*, %struct.conn** %2, align 8
  %53 = getelementptr inbounds %struct.conn, %struct.conn* %52, i32 0, i32 12
  %54 = call i32 @event_del(%struct.event* %53)
  %55 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %56 = icmp sgt i32 %55, 1
  br i1 %56, label %57, label %63

57:                                               ; preds = %51
  %58 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %59 = load %struct.conn*, %struct.conn** %2, align 8
  %60 = getelementptr inbounds %struct.conn, %struct.conn* %59, i32 0, i32 1
  %61 = load i32, i32* %60, align 8
  %62 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %58, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.360, i64 0, i64 0), i32 %61)
  br label %63

63:                                               ; preds = %57, %51
  %64 = load %struct.conn*, %struct.conn** %2, align 8
  call void @conn_cleanup(%struct.conn* %64)
  %65 = load %struct.conn*, %struct.conn** %2, align 8
  %66 = getelementptr inbounds %struct.conn, %struct.conn* %65, i32 0, i32 42
  %67 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %66, align 8
  %68 = icmp ne %struct.LIBEVENT_THREAD* %67, null
  br i1 %68, label %69, label %73

69:                                               ; preds = %63
  %70 = load %struct.conn*, %struct.conn** %2, align 8
  %71 = getelementptr inbounds %struct.conn, %struct.conn* %70, i32 0, i32 18
  store i32 0, i32* %71, align 4
  %72 = load %struct.conn*, %struct.conn** %2, align 8
  call void @rbuf_release(%struct.conn* %72)
  br label %73

73:                                               ; preds = %69, %63
  %74 = load %struct.conn*, %struct.conn** %2, align 8
  call void @conn_set_state(%struct.conn* %74, i32 10)
  %75 = load %struct.conn*, %struct.conn** %2, align 8
  %76 = getelementptr inbounds %struct.conn, %struct.conn* %75, i32 0, i32 1
  %77 = load i32, i32* %76, align 8
  %78 = call i32 @close(i32 %77)
  %79 = load %struct.conn*, %struct.conn** %2, align 8
  %80 = getelementptr inbounds %struct.conn, %struct.conn* %79, i32 0, i32 30
  store i32 0, i32* %80, align 4
  %81 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @conn_lock) #14
  store volatile i8 1, i8* @allow_new_conns, align 1
  %82 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @conn_lock) #14
  call void @STATS_LOCK()
  %83 = load i64, i64* getelementptr inbounds (%struct.stats_state, %struct.stats_state* @stats_state, i32 0, i32 2), align 8
  %84 = add i64 %83, -1
  store i64 %84, i64* getelementptr inbounds (%struct.stats_state, %struct.stats_state* @stats_state, i32 0, i32 2), align 8
  call void @STATS_UNLOCK()
  ret void
}

; Function Attrs: noreturn nounwind
declare dso_local void @abort() #7

; Function Attrs: noinline nounwind optnone uwtable
define internal void @conn_io_queue_complete(%struct.conn* %0) #0 {
  %2 = alloca %struct.conn*, align 8
  %3 = alloca %struct.io_queue_s*, align 8
  %4 = alloca %struct.io_queue_cb_s*, align 8
  store %struct.conn* %0, %struct.conn** %2, align 8
  %5 = load %struct.conn*, %struct.conn** %2, align 8
  %6 = getelementptr inbounds %struct.conn, %struct.conn* %5, i32 0, i32 26
  %7 = getelementptr inbounds [3 x %struct.io_queue_s], [3 x %struct.io_queue_s]* %6, i64 0, i64 0
  store %struct.io_queue_s* %7, %struct.io_queue_s** %3, align 8
  %8 = load %struct.conn*, %struct.conn** %2, align 8
  %9 = getelementptr inbounds %struct.conn, %struct.conn* %8, i32 0, i32 42
  %10 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %9, align 8
  %11 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %10, i32 0, i32 5
  %12 = getelementptr inbounds [3 x %struct.io_queue_cb_s], [3 x %struct.io_queue_cb_s]* %11, i64 0, i64 0
  store %struct.io_queue_cb_s* %12, %struct.io_queue_cb_s** %4, align 8
  br label %13

13:                                               ; preds = %28, %1
  %14 = load %struct.io_queue_s*, %struct.io_queue_s** %3, align 8
  %15 = getelementptr inbounds %struct.io_queue_s, %struct.io_queue_s* %14, i32 0, i32 3
  %16 = load i32, i32* %15, align 4
  %17 = icmp ne i32 %16, 0
  br i1 %17, label %18, label %33

18:                                               ; preds = %13
  %19 = load %struct.io_queue_s*, %struct.io_queue_s** %3, align 8
  %20 = getelementptr inbounds %struct.io_queue_s, %struct.io_queue_s* %19, i32 0, i32 1
  %21 = load i8*, i8** %20, align 8
  %22 = icmp ne i8* %21, null
  br i1 %22, label %23, label %28

23:                                               ; preds = %18
  %24 = load %struct.io_queue_cb_s*, %struct.io_queue_cb_s** %4, align 8
  %25 = getelementptr inbounds %struct.io_queue_cb_s, %struct.io_queue_cb_s* %24, i32 0, i32 2
  %26 = load void (%struct.io_queue_s*)*, void (%struct.io_queue_s*)** %25, align 8
  %27 = load %struct.io_queue_s*, %struct.io_queue_s** %3, align 8
  call void %26(%struct.io_queue_s* %27)
  br label %28

28:                                               ; preds = %23, %18
  %29 = load %struct.io_queue_cb_s*, %struct.io_queue_cb_s** %4, align 8
  %30 = getelementptr inbounds %struct.io_queue_cb_s, %struct.io_queue_cb_s* %29, i32 1
  store %struct.io_queue_cb_s* %30, %struct.io_queue_cb_s** %4, align 8
  %31 = load %struct.io_queue_s*, %struct.io_queue_s** %3, align 8
  %32 = getelementptr inbounds %struct.io_queue_s, %struct.io_queue_s* %31, i32 1
  store %struct.io_queue_s* %32, %struct.io_queue_s** %3, align 8
  br label %13, !llvm.loop !9

33:                                               ; preds = %13
  ret void
}

; Function Attrs: nounwind
declare dso_local i8* @pthread_getspecific(i32) #2

; Function Attrs: nounwind
declare dso_local void @free(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct._mc_resp* @resp_finish(%struct.conn* %0, %struct._mc_resp* %1) #0 {
  %3 = alloca %struct.conn*, align 8
  %4 = alloca %struct._mc_resp*, align 8
  %5 = alloca %struct._mc_resp*, align 8
  %6 = alloca %struct.io_queue_cb_s*, align 8
  store %struct.conn* %0, %struct.conn** %3, align 8
  store %struct._mc_resp* %1, %struct._mc_resp** %4, align 8
  %7 = load %struct._mc_resp*, %struct._mc_resp** %4, align 8
  %8 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %7, i32 0, i32 1
  %9 = load %struct._mc_resp*, %struct._mc_resp** %8, align 8
  store %struct._mc_resp* %9, %struct._mc_resp** %5, align 8
  %10 = load %struct._mc_resp*, %struct._mc_resp** %4, align 8
  %11 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %10, i32 0, i32 6
  %12 = load %struct._stritem*, %struct._stritem** %11, align 8
  %13 = icmp ne %struct._stritem* %12, null
  br i1 %13, label %14, label %20

14:                                               ; preds = %2
  %15 = load %struct._mc_resp*, %struct._mc_resp** %4, align 8
  %16 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %15, i32 0, i32 6
  %17 = load %struct._stritem*, %struct._stritem** %16, align 8
  call void @item_remove(%struct._stritem* %17)
  %18 = load %struct._mc_resp*, %struct._mc_resp** %4, align 8
  %19 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %18, i32 0, i32 6
  store %struct._stritem* null, %struct._stritem** %19, align 8
  br label %20

20:                                               ; preds = %14, %2
  %21 = load %struct._mc_resp*, %struct._mc_resp** %4, align 8
  %22 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %21, i32 0, i32 4
  %23 = load i8*, i8** %22, align 8
  %24 = icmp ne i8* %23, null
  br i1 %24, label %25, label %29

25:                                               ; preds = %20
  %26 = load %struct._mc_resp*, %struct._mc_resp** %4, align 8
  %27 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %26, i32 0, i32 4
  %28 = load i8*, i8** %27, align 8
  call void @free(i8* %28) #14
  br label %29

29:                                               ; preds = %25, %20
  %30 = load %struct._mc_resp*, %struct._mc_resp** %4, align 8
  %31 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %30, i32 0, i32 5
  %32 = load %struct._io_pending_t*, %struct._io_pending_t** %31, align 8
  %33 = icmp ne %struct._io_pending_t* %32, null
  br i1 %33, label %34, label %61

34:                                               ; preds = %29
  %35 = load %struct.conn*, %struct.conn** %3, align 8
  %36 = getelementptr inbounds %struct.conn, %struct.conn* %35, i32 0, i32 42
  %37 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %36, align 8
  %38 = load %struct._mc_resp*, %struct._mc_resp** %4, align 8
  %39 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %38, i32 0, i32 5
  %40 = load %struct._io_pending_t*, %struct._io_pending_t** %39, align 8
  %41 = getelementptr inbounds %struct._io_pending_t, %struct._io_pending_t* %40, i32 0, i32 0
  %42 = load i32, i32* %41, align 8
  %43 = call %struct.io_queue_cb_s* @thread_io_queue_get(%struct.LIBEVENT_THREAD* %37, i32 %42)
  store %struct.io_queue_cb_s* %43, %struct.io_queue_cb_s** %6, align 8
  %44 = load %struct.io_queue_cb_s*, %struct.io_queue_cb_s** %6, align 8
  %45 = getelementptr inbounds %struct.io_queue_cb_s, %struct.io_queue_cb_s* %44, i32 0, i32 4
  %46 = load void (%struct._io_pending_t*)*, void (%struct._io_pending_t*)** %45, align 8
  %47 = load %struct._mc_resp*, %struct._mc_resp** %4, align 8
  %48 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %47, i32 0, i32 5
  %49 = load %struct._io_pending_t*, %struct._io_pending_t** %48, align 8
  call void %46(%struct._io_pending_t* %49)
  %50 = load %struct.conn*, %struct.conn** %3, align 8
  %51 = getelementptr inbounds %struct.conn, %struct.conn* %50, i32 0, i32 42
  %52 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %51, align 8
  %53 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %52, i32 0, i32 9
  %54 = load %struct.cache_t*, %struct.cache_t** %53, align 8
  %55 = load %struct._mc_resp*, %struct._mc_resp** %4, align 8
  %56 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %55, i32 0, i32 5
  %57 = load %struct._io_pending_t*, %struct._io_pending_t** %56, align 8
  %58 = bitcast %struct._io_pending_t* %57 to i8*
  call void @do_cache_free(%struct.cache_t* %54, i8* %58)
  %59 = load %struct._mc_resp*, %struct._mc_resp** %4, align 8
  %60 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %59, i32 0, i32 5
  store %struct._io_pending_t* null, %struct._io_pending_t** %60, align 8
  br label %61

61:                                               ; preds = %34, %29
  %62 = load %struct.conn*, %struct.conn** %3, align 8
  %63 = getelementptr inbounds %struct.conn, %struct.conn* %62, i32 0, i32 20
  %64 = load %struct._mc_resp*, %struct._mc_resp** %63, align 8
  %65 = load %struct._mc_resp*, %struct._mc_resp** %4, align 8
  %66 = icmp eq %struct._mc_resp* %64, %65
  br i1 %66, label %67, label %71

67:                                               ; preds = %61
  %68 = load %struct._mc_resp*, %struct._mc_resp** %5, align 8
  %69 = load %struct.conn*, %struct.conn** %3, align 8
  %70 = getelementptr inbounds %struct.conn, %struct.conn* %69, i32 0, i32 20
  store %struct._mc_resp* %68, %struct._mc_resp** %70, align 8
  br label %71

71:                                               ; preds = %67, %61
  %72 = load %struct.conn*, %struct.conn** %3, align 8
  %73 = getelementptr inbounds %struct.conn, %struct.conn* %72, i32 0, i32 19
  %74 = load %struct._mc_resp*, %struct._mc_resp** %73, align 8
  %75 = load %struct._mc_resp*, %struct._mc_resp** %4, align 8
  %76 = icmp eq %struct._mc_resp* %74, %75
  br i1 %76, label %77, label %80

77:                                               ; preds = %71
  %78 = load %struct.conn*, %struct.conn** %3, align 8
  %79 = getelementptr inbounds %struct.conn, %struct.conn* %78, i32 0, i32 19
  store %struct._mc_resp* null, %struct._mc_resp** %79, align 8
  br label %80

80:                                               ; preds = %77, %71
  %81 = load %struct.conn*, %struct.conn** %3, align 8
  %82 = load %struct._mc_resp*, %struct._mc_resp** %4, align 8
  call void @resp_free(%struct.conn* %81, %struct._mc_resp* %82)
  %83 = load %struct.conn*, %struct.conn** %3, align 8
  %84 = getelementptr inbounds %struct.conn, %struct.conn* %83, i32 0, i32 42
  %85 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %84, align 8
  %86 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %85, i32 0, i32 4
  %87 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %86, i32 0, i32 0
  %88 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %87) #14
  %89 = load %struct.conn*, %struct.conn** %3, align 8
  %90 = getelementptr inbounds %struct.conn, %struct.conn* %89, i32 0, i32 42
  %91 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %90, align 8
  %92 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %91, i32 0, i32 4
  %93 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %92, i32 0, i32 20
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, -1
  store i64 %95, i64* %93, align 8
  %96 = load %struct.conn*, %struct.conn** %3, align 8
  %97 = getelementptr inbounds %struct.conn, %struct.conn* %96, i32 0, i32 42
  %98 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %97, align 8
  %99 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %98, i32 0, i32 4
  %100 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %99, i32 0, i32 0
  %101 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %100) #14
  %102 = load %struct._mc_resp*, %struct._mc_resp** %5, align 8
  ret %struct._mc_resp* %102
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @conn_io_queue_reset(%struct.conn* %0) #0 {
  %2 = alloca %struct.conn*, align 8
  %3 = alloca %struct.io_queue_s*, align 8
  store %struct.conn* %0, %struct.conn** %2, align 8
  %4 = load %struct.conn*, %struct.conn** %2, align 8
  %5 = getelementptr inbounds %struct.conn, %struct.conn* %4, i32 0, i32 26
  %6 = getelementptr inbounds [3 x %struct.io_queue_s], [3 x %struct.io_queue_s]* %5, i64 0, i64 0
  store %struct.io_queue_s* %6, %struct.io_queue_s** %3, align 8
  br label %7

7:                                                ; preds = %15, %1
  %8 = load %struct.io_queue_s*, %struct.io_queue_s** %3, align 8
  %9 = getelementptr inbounds %struct.io_queue_s, %struct.io_queue_s* %8, i32 0, i32 3
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %12, label %18

12:                                               ; preds = %7
  %13 = load %struct.io_queue_s*, %struct.io_queue_s** %3, align 8
  %14 = getelementptr inbounds %struct.io_queue_s, %struct.io_queue_s* %13, i32 0, i32 1
  store i8* null, i8** %14, align 8
  br label %15

15:                                               ; preds = %12
  %16 = load %struct.io_queue_s*, %struct.io_queue_s** %3, align 8
  %17 = getelementptr inbounds %struct.io_queue_s, %struct.io_queue_s* %16, i32 1
  store %struct.io_queue_s* %17, %struct.io_queue_s** %3, align 8
  br label %7, !llvm.loop !10

18:                                               ; preds = %7
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @resp_free(%struct.conn* %0, %struct._mc_resp* %1) #0 {
  %3 = alloca %struct.conn*, align 8
  %4 = alloca %struct._mc_resp*, align 8
  %5 = alloca %struct.LIBEVENT_THREAD*, align 8
  %6 = alloca %struct._mc_resp_bundle*, align 8
  %7 = alloca %struct._mc_resp_bundle**, align 8
  %8 = alloca %struct._mc_resp_bundle**, align 8
  store %struct.conn* %0, %struct.conn** %3, align 8
  store %struct._mc_resp* %1, %struct._mc_resp** %4, align 8
  %9 = load %struct.conn*, %struct.conn** %3, align 8
  %10 = getelementptr inbounds %struct.conn, %struct.conn* %9, i32 0, i32 42
  %11 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %10, align 8
  store %struct.LIBEVENT_THREAD* %11, %struct.LIBEVENT_THREAD** %5, align 8
  %12 = load %struct._mc_resp*, %struct._mc_resp** %4, align 8
  %13 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %12, i32 0, i32 0
  %14 = load %struct._mc_resp_bundle*, %struct._mc_resp_bundle** %13, align 8
  store %struct._mc_resp_bundle* %14, %struct._mc_resp_bundle** %6, align 8
  %15 = load %struct._mc_resp*, %struct._mc_resp** %4, align 8
  %16 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %15, i32 0, i32 12
  store i8 1, i8* %16, align 1
  %17 = load %struct._mc_resp_bundle*, %struct._mc_resp_bundle** %6, align 8
  %18 = getelementptr inbounds %struct._mc_resp_bundle, %struct._mc_resp_bundle* %17, i32 0, i32 0
  %19 = load i8, i8* %18, align 8
  %20 = add i8 %19, -1
  store i8 %20, i8* %18, align 8
  %21 = load %struct._mc_resp_bundle*, %struct._mc_resp_bundle** %6, align 8
  %22 = getelementptr inbounds %struct._mc_resp_bundle, %struct._mc_resp_bundle* %21, i32 0, i32 0
  %23 = load i8, i8* %22, align 8
  %24 = zext i8 %23 to i32
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %104

26:                                               ; preds = %2
  %27 = load %struct._mc_resp_bundle*, %struct._mc_resp_bundle** %6, align 8
  %28 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %5, align 8
  %29 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %28, i32 0, i32 8
  %30 = load %struct._mc_resp_bundle*, %struct._mc_resp_bundle** %29, align 8
  %31 = icmp eq %struct._mc_resp_bundle* %27, %30
  br i1 %31, label %32, label %40

32:                                               ; preds = %26
  %33 = load %struct._mc_resp_bundle*, %struct._mc_resp_bundle** %6, align 8
  %34 = getelementptr inbounds %struct._mc_resp_bundle, %struct._mc_resp_bundle* %33, i32 0, i32 2
  %35 = load %struct._mc_resp_bundle*, %struct._mc_resp_bundle** %34, align 8
  %36 = icmp eq %struct._mc_resp_bundle* %35, null
  br i1 %36, label %37, label %40

37:                                               ; preds = %32
  %38 = load %struct._mc_resp_bundle*, %struct._mc_resp_bundle** %6, align 8
  %39 = getelementptr inbounds %struct._mc_resp_bundle, %struct._mc_resp_bundle* %38, i32 0, i32 1
  store i8 0, i8* %39, align 1
  br label %103

40:                                               ; preds = %32, %26
  %41 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %5, align 8
  %42 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %41, i32 0, i32 8
  store %struct._mc_resp_bundle** %42, %struct._mc_resp_bundle*** %7, align 8
  %43 = load %struct._mc_resp_bundle**, %struct._mc_resp_bundle*** %7, align 8
  %44 = load %struct._mc_resp_bundle*, %struct._mc_resp_bundle** %43, align 8
  %45 = load %struct._mc_resp_bundle*, %struct._mc_resp_bundle** %6, align 8
  %46 = icmp eq %struct._mc_resp_bundle* %44, %45
  br i1 %46, label %47, label %52

47:                                               ; preds = %40
  %48 = load %struct._mc_resp_bundle*, %struct._mc_resp_bundle** %6, align 8
  %49 = getelementptr inbounds %struct._mc_resp_bundle, %struct._mc_resp_bundle* %48, i32 0, i32 2
  %50 = load %struct._mc_resp_bundle*, %struct._mc_resp_bundle** %49, align 8
  %51 = load %struct._mc_resp_bundle**, %struct._mc_resp_bundle*** %7, align 8
  store %struct._mc_resp_bundle* %50, %struct._mc_resp_bundle** %51, align 8
  br label %52

52:                                               ; preds = %47, %40
  %53 = load %struct._mc_resp_bundle*, %struct._mc_resp_bundle** %6, align 8
  %54 = getelementptr inbounds %struct._mc_resp_bundle, %struct._mc_resp_bundle* %53, i32 0, i32 2
  %55 = load %struct._mc_resp_bundle*, %struct._mc_resp_bundle** %54, align 8
  %56 = icmp ne %struct._mc_resp_bundle* %55, null
  br i1 %56, label %57, label %65

57:                                               ; preds = %52
  %58 = load %struct._mc_resp_bundle*, %struct._mc_resp_bundle** %6, align 8
  %59 = getelementptr inbounds %struct._mc_resp_bundle, %struct._mc_resp_bundle* %58, i32 0, i32 3
  %60 = load %struct._mc_resp_bundle*, %struct._mc_resp_bundle** %59, align 8
  %61 = load %struct._mc_resp_bundle*, %struct._mc_resp_bundle** %6, align 8
  %62 = getelementptr inbounds %struct._mc_resp_bundle, %struct._mc_resp_bundle* %61, i32 0, i32 2
  %63 = load %struct._mc_resp_bundle*, %struct._mc_resp_bundle** %62, align 8
  %64 = getelementptr inbounds %struct._mc_resp_bundle, %struct._mc_resp_bundle* %63, i32 0, i32 3
  store %struct._mc_resp_bundle* %60, %struct._mc_resp_bundle** %64, align 8
  br label %65

65:                                               ; preds = %57, %52
  %66 = load %struct._mc_resp_bundle*, %struct._mc_resp_bundle** %6, align 8
  %67 = getelementptr inbounds %struct._mc_resp_bundle, %struct._mc_resp_bundle* %66, i32 0, i32 3
  %68 = load %struct._mc_resp_bundle*, %struct._mc_resp_bundle** %67, align 8
  %69 = icmp ne %struct._mc_resp_bundle* %68, null
  br i1 %69, label %70, label %78

70:                                               ; preds = %65
  %71 = load %struct._mc_resp_bundle*, %struct._mc_resp_bundle** %6, align 8
  %72 = getelementptr inbounds %struct._mc_resp_bundle, %struct._mc_resp_bundle* %71, i32 0, i32 2
  %73 = load %struct._mc_resp_bundle*, %struct._mc_resp_bundle** %72, align 8
  %74 = load %struct._mc_resp_bundle*, %struct._mc_resp_bundle** %6, align 8
  %75 = getelementptr inbounds %struct._mc_resp_bundle, %struct._mc_resp_bundle* %74, i32 0, i32 3
  %76 = load %struct._mc_resp_bundle*, %struct._mc_resp_bundle** %75, align 8
  %77 = getelementptr inbounds %struct._mc_resp_bundle, %struct._mc_resp_bundle* %76, i32 0, i32 2
  store %struct._mc_resp_bundle* %73, %struct._mc_resp_bundle** %77, align 8
  br label %78

78:                                               ; preds = %70, %65
  %79 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %5, align 8
  %80 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %79, i32 0, i32 7
  %81 = load %struct.cache_t*, %struct.cache_t** %80, align 8
  %82 = load %struct._mc_resp_bundle*, %struct._mc_resp_bundle** %6, align 8
  %83 = bitcast %struct._mc_resp_bundle* %82 to i8*
  call void @do_cache_free(%struct.cache_t* %81, i8* %83)
  %84 = load %struct.conn*, %struct.conn** %3, align 8
  %85 = getelementptr inbounds %struct.conn, %struct.conn* %84, i32 0, i32 42
  %86 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %85, align 8
  %87 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %86, i32 0, i32 4
  %88 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %87, i32 0, i32 0
  %89 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %88) #14
  %90 = load %struct.conn*, %struct.conn** %3, align 8
  %91 = getelementptr inbounds %struct.conn, %struct.conn* %90, i32 0, i32 42
  %92 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %91, align 8
  %93 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %92, i32 0, i32 4
  %94 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %93, i32 0, i32 21
  %95 = load i64, i64* %94, align 8
  %96 = sub i64 %95, 16384
  store i64 %96, i64* %94, align 8
  %97 = load %struct.conn*, %struct.conn** %3, align 8
  %98 = getelementptr inbounds %struct.conn, %struct.conn* %97, i32 0, i32 42
  %99 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %98, align 8
  %100 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %99, i32 0, i32 4
  %101 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %100, i32 0, i32 0
  %102 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %101) #14
  br label %103

103:                                              ; preds = %78, %37
  br label %144

104:                                              ; preds = %2
  %105 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %5, align 8
  %106 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %105, i32 0, i32 8
  store %struct._mc_resp_bundle** %106, %struct._mc_resp_bundle*** %8, align 8
  %107 = load %struct._mc_resp_bundle*, %struct._mc_resp_bundle** %6, align 8
  %108 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %5, align 8
  %109 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %108, i32 0, i32 8
  %110 = load %struct._mc_resp_bundle*, %struct._mc_resp_bundle** %109, align 8
  %111 = icmp eq %struct._mc_resp_bundle* %107, %110
  br i1 %111, label %122, label %112

112:                                              ; preds = %104
  %113 = load %struct._mc_resp_bundle*, %struct._mc_resp_bundle** %6, align 8
  %114 = getelementptr inbounds %struct._mc_resp_bundle, %struct._mc_resp_bundle* %113, i32 0, i32 3
  %115 = load %struct._mc_resp_bundle*, %struct._mc_resp_bundle** %114, align 8
  %116 = icmp ne %struct._mc_resp_bundle* %115, null
  br i1 %116, label %122, label %117

117:                                              ; preds = %112
  %118 = load %struct._mc_resp_bundle*, %struct._mc_resp_bundle** %6, align 8
  %119 = getelementptr inbounds %struct._mc_resp_bundle, %struct._mc_resp_bundle* %118, i32 0, i32 2
  %120 = load %struct._mc_resp_bundle*, %struct._mc_resp_bundle** %119, align 8
  %121 = icmp ne %struct._mc_resp_bundle* %120, null
  br i1 %121, label %122, label %123

122:                                              ; preds = %117, %112, %104
  br label %143

123:                                              ; preds = %117
  %124 = load %struct._mc_resp_bundle*, %struct._mc_resp_bundle** %6, align 8
  %125 = getelementptr inbounds %struct._mc_resp_bundle, %struct._mc_resp_bundle* %124, i32 0, i32 3
  store %struct._mc_resp_bundle* null, %struct._mc_resp_bundle** %125, align 8
  %126 = load %struct._mc_resp_bundle**, %struct._mc_resp_bundle*** %8, align 8
  %127 = load %struct._mc_resp_bundle*, %struct._mc_resp_bundle** %126, align 8
  %128 = load %struct._mc_resp_bundle*, %struct._mc_resp_bundle** %6, align 8
  %129 = getelementptr inbounds %struct._mc_resp_bundle, %struct._mc_resp_bundle* %128, i32 0, i32 2
  store %struct._mc_resp_bundle* %127, %struct._mc_resp_bundle** %129, align 8
  %130 = load %struct._mc_resp_bundle*, %struct._mc_resp_bundle** %6, align 8
  %131 = getelementptr inbounds %struct._mc_resp_bundle, %struct._mc_resp_bundle* %130, i32 0, i32 2
  %132 = load %struct._mc_resp_bundle*, %struct._mc_resp_bundle** %131, align 8
  %133 = icmp ne %struct._mc_resp_bundle* %132, null
  br i1 %133, label %134, label %140

134:                                              ; preds = %123
  %135 = load %struct._mc_resp_bundle*, %struct._mc_resp_bundle** %6, align 8
  %136 = load %struct._mc_resp_bundle*, %struct._mc_resp_bundle** %6, align 8
  %137 = getelementptr inbounds %struct._mc_resp_bundle, %struct._mc_resp_bundle* %136, i32 0, i32 2
  %138 = load %struct._mc_resp_bundle*, %struct._mc_resp_bundle** %137, align 8
  %139 = getelementptr inbounds %struct._mc_resp_bundle, %struct._mc_resp_bundle* %138, i32 0, i32 3
  store %struct._mc_resp_bundle* %135, %struct._mc_resp_bundle** %139, align 8
  br label %140

140:                                              ; preds = %134, %123
  %141 = load %struct._mc_resp_bundle*, %struct._mc_resp_bundle** %6, align 8
  %142 = load %struct._mc_resp_bundle**, %struct._mc_resp_bundle*** %8, align 8
  store %struct._mc_resp_bundle* %141, %struct._mc_resp_bundle** %142, align 8
  br label %143

143:                                              ; preds = %140, %122
  br label %144

144:                                              ; preds = %143, %103
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @build_udp_header(i8* %0, %struct._mc_resp* %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct._mc_resp*, align 8
  %5 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  store %struct._mc_resp* %1, %struct._mc_resp** %4, align 8
  %6 = load %struct._mc_resp*, %struct._mc_resp** %4, align 8
  %7 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %6, i32 0, i32 15
  %8 = load i16, i16* %7, align 4
  %9 = icmp ne i16 %8, 0
  br i1 %9, label %32, label %10

10:                                               ; preds = %2
  %11 = load %struct._mc_resp*, %struct._mc_resp** %4, align 8
  %12 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %11, i32 0, i32 3
  %13 = load i32, i32* %12, align 4
  %14 = sdiv i32 %13, 1392
  store i32 %14, i32* %5, align 4
  %15 = load %struct._mc_resp*, %struct._mc_resp** %4, align 8
  %16 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %15, i32 0, i32 3
  %17 = load i32, i32* %16, align 4
  %18 = srem i32 %17, 1392
  %19 = icmp ne i32 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %10
  %21 = load i32, i32* %5, align 4
  %22 = add i32 %21, 1
  store i32 %22, i32* %5, align 4
  br label %23

23:                                               ; preds = %20, %10
  %24 = load i32, i32* %5, align 4
  %25 = icmp ugt i32 %24, 65535
  br i1 %25, label %26, label %27

26:                                               ; preds = %23
  store i32 65535, i32* %5, align 4
  br label %27

27:                                               ; preds = %26, %23
  %28 = load i32, i32* %5, align 4
  %29 = trunc i32 %28 to i16
  %30 = load %struct._mc_resp*, %struct._mc_resp** %4, align 8
  %31 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %30, i32 0, i32 15
  store i16 %29, i16* %31, align 4
  br label %32

32:                                               ; preds = %27, %2
  %33 = load %struct._mc_resp*, %struct._mc_resp** %4, align 8
  %34 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %33, i32 0, i32 13
  %35 = load i16, i16* %34, align 8
  %36 = zext i16 %35 to i32
  %37 = sdiv i32 %36, 256
  %38 = trunc i32 %37 to i8
  %39 = load i8*, i8** %3, align 8
  %40 = getelementptr inbounds i8, i8* %39, i32 1
  store i8* %40, i8** %3, align 8
  store i8 %38, i8* %39, align 1
  %41 = load %struct._mc_resp*, %struct._mc_resp** %4, align 8
  %42 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %41, i32 0, i32 13
  %43 = load i16, i16* %42, align 8
  %44 = zext i16 %43 to i32
  %45 = srem i32 %44, 256
  %46 = trunc i32 %45 to i8
  %47 = load i8*, i8** %3, align 8
  %48 = getelementptr inbounds i8, i8* %47, i32 1
  store i8* %48, i8** %3, align 8
  store i8 %46, i8* %47, align 1
  %49 = load %struct._mc_resp*, %struct._mc_resp** %4, align 8
  %50 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %49, i32 0, i32 14
  %51 = load i16, i16* %50, align 2
  %52 = zext i16 %51 to i32
  %53 = sdiv i32 %52, 256
  %54 = trunc i32 %53 to i8
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i32 1
  store i8* %56, i8** %3, align 8
  store i8 %54, i8* %55, align 1
  %57 = load %struct._mc_resp*, %struct._mc_resp** %4, align 8
  %58 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %57, i32 0, i32 14
  %59 = load i16, i16* %58, align 2
  %60 = zext i16 %59 to i32
  %61 = srem i32 %60, 256
  %62 = trunc i32 %61 to i8
  %63 = load i8*, i8** %3, align 8
  %64 = getelementptr inbounds i8, i8* %63, i32 1
  store i8* %64, i8** %3, align 8
  store i8 %62, i8* %63, align 1
  %65 = load %struct._mc_resp*, %struct._mc_resp** %4, align 8
  %66 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %65, i32 0, i32 15
  %67 = load i16, i16* %66, align 4
  %68 = zext i16 %67 to i32
  %69 = sdiv i32 %68, 256
  %70 = trunc i32 %69 to i8
  %71 = load i8*, i8** %3, align 8
  %72 = getelementptr inbounds i8, i8* %71, i32 1
  store i8* %72, i8** %3, align 8
  store i8 %70, i8* %71, align 1
  %73 = load %struct._mc_resp*, %struct._mc_resp** %4, align 8
  %74 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %73, i32 0, i32 15
  %75 = load i16, i16* %74, align 4
  %76 = zext i16 %75 to i32
  %77 = srem i32 %76, 256
  %78 = trunc i32 %77 to i8
  %79 = load i8*, i8** %3, align 8
  %80 = getelementptr inbounds i8, i8* %79, i32 1
  store i8* %80, i8** %3, align 8
  store i8 %78, i8* %79, align 1
  %81 = load i8*, i8** %3, align 8
  %82 = getelementptr inbounds i8, i8* %81, i32 1
  store i8* %82, i8** %3, align 8
  store i8 0, i8* %81, align 1
  %83 = load i8*, i8** %3, align 8
  %84 = getelementptr inbounds i8, i8* %83, i32 1
  store i8* %84, i8** %3, align 8
  store i8 0, i8* %83, align 1
  %85 = load %struct._mc_resp*, %struct._mc_resp** %4, align 8
  %86 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %85, i32 0, i32 14
  %87 = load i16, i16* %86, align 2
  %88 = add i16 %87, 1
  store i16 %88, i16* %86, align 2
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @_transmit_pre(%struct.conn* %0, %struct.iovec* %1, i32 %2, i1 zeroext %3) #0 {
  %5 = alloca %struct.conn*, align 8
  %6 = alloca %struct.iovec*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8, align 1
  %9 = alloca %struct._mc_resp*, align 8
  %10 = alloca %struct._strchunk*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store %struct.conn* %0, %struct.conn** %5, align 8
  store %struct.iovec* %1, %struct.iovec** %6, align 8
  store i32 %2, i32* %7, align 4
  %15 = zext i1 %3 to i8
  store i8 %15, i8* %8, align 1
  %16 = load %struct.conn*, %struct.conn** %5, align 8
  %17 = getelementptr inbounds %struct.conn, %struct.conn* %16, i32 0, i32 20
  %18 = load %struct._mc_resp*, %struct._mc_resp** %17, align 8
  store %struct._mc_resp* %18, %struct._mc_resp** %9, align 8
  br label %19

19:                                               ; preds = %301, %37, %4
  %20 = load %struct._mc_resp*, %struct._mc_resp** %9, align 8
  %21 = icmp ne %struct._mc_resp* %20, null
  br i1 %21, label %22, label %30

22:                                               ; preds = %19
  %23 = load i32, i32* %7, align 4
  %24 = load %struct._mc_resp*, %struct._mc_resp** %9, align 8
  %25 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %24, i32 0, i32 9
  %26 = load i8, i8* %25, align 4
  %27 = zext i8 %26 to i32
  %28 = add nsw i32 %23, %27
  %29 = icmp slt i32 %28, 1023
  br label %30

30:                                               ; preds = %22, %19
  %31 = phi i1 [ false, %19 ], [ %29, %22 ]
  br i1 %31, label %32, label %302

32:                                               ; preds = %30
  %33 = load %struct._mc_resp*, %struct._mc_resp** %9, align 8
  %34 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %33, i32 0, i32 11
  %35 = load i8, i8* %34, align 2
  %36 = trunc i8 %35 to i1
  br i1 %36, label %37, label %41

37:                                               ; preds = %32
  %38 = load %struct._mc_resp*, %struct._mc_resp** %9, align 8
  %39 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %38, i32 0, i32 1
  %40 = load %struct._mc_resp*, %struct._mc_resp** %39, align 8
  store %struct._mc_resp* %40, %struct._mc_resp** %9, align 8
  br label %19, !llvm.loop !11

41:                                               ; preds = %32
  %42 = load %struct._mc_resp*, %struct._mc_resp** %9, align 8
  %43 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %42, i32 0, i32 10
  %44 = load i8, i8* %43, align 1
  %45 = icmp ne i8 %44, 0
  br i1 %45, label %46, label %273

46:                                               ; preds = %41
  %47 = load %struct._mc_resp*, %struct._mc_resp** %9, align 8
  %48 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %47, i32 0, i32 7
  %49 = load %struct._mc_resp*, %struct._mc_resp** %9, align 8
  %50 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %49, i32 0, i32 10
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i64
  %53 = getelementptr inbounds [4 x %struct.iovec], [4 x %struct.iovec]* %48, i64 0, i64 %52
  %54 = getelementptr inbounds %struct.iovec, %struct.iovec* %53, i32 0, i32 0
  %55 = load i8*, i8** %54, align 8
  %56 = bitcast i8* %55 to %struct._stritem*
  %57 = getelementptr inbounds %struct._stritem, %struct._stritem* %56, i32 0, i32 10
  %58 = bitcast [0 x %union.anon.10]* %57 to i8*
  %59 = load %struct._mc_resp*, %struct._mc_resp** %9, align 8
  %60 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %59, i32 0, i32 7
  %61 = load %struct._mc_resp*, %struct._mc_resp** %9, align 8
  %62 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %61, i32 0, i32 10
  %63 = load i8, i8* %62, align 1
  %64 = zext i8 %63 to i64
  %65 = getelementptr inbounds [4 x %struct.iovec], [4 x %struct.iovec]* %60, i64 0, i64 %64
  %66 = getelementptr inbounds %struct.iovec, %struct.iovec* %65, i32 0, i32 0
  %67 = load i8*, i8** %66, align 8
  %68 = bitcast i8* %67 to %struct._stritem*
  %69 = getelementptr inbounds %struct._stritem, %struct._stritem* %68, i32 0, i32 9
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i32
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds i8, i8* %58, i64 %72
  %74 = getelementptr inbounds i8, i8* %73, i64 1
  %75 = load %struct._mc_resp*, %struct._mc_resp** %9, align 8
  %76 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %75, i32 0, i32 7
  %77 = load %struct._mc_resp*, %struct._mc_resp** %9, align 8
  %78 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %77, i32 0, i32 10
  %79 = load i8, i8* %78, align 1
  %80 = zext i8 %79 to i64
  %81 = getelementptr inbounds [4 x %struct.iovec], [4 x %struct.iovec]* %76, i64 0, i64 %80
  %82 = getelementptr inbounds %struct.iovec, %struct.iovec* %81, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  %84 = bitcast i8* %83 to %struct._stritem*
  %85 = getelementptr inbounds %struct._stritem, %struct._stritem* %84, i32 0, i32 7
  %86 = load i16, i16* %85, align 2
  %87 = zext i16 %86 to i32
  %88 = and i32 %87, 256
  %89 = icmp ne i32 %88, 0
  %90 = zext i1 %89 to i64
  %91 = select i1 %89, i64 4, i64 0
  %92 = getelementptr inbounds i8, i8* %74, i64 %91
  %93 = load %struct._mc_resp*, %struct._mc_resp** %9, align 8
  %94 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %93, i32 0, i32 7
  %95 = load %struct._mc_resp*, %struct._mc_resp** %9, align 8
  %96 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %95, i32 0, i32 10
  %97 = load i8, i8* %96, align 1
  %98 = zext i8 %97 to i64
  %99 = getelementptr inbounds [4 x %struct.iovec], [4 x %struct.iovec]* %94, i64 0, i64 %98
  %100 = getelementptr inbounds %struct.iovec, %struct.iovec* %99, i32 0, i32 0
  %101 = load i8*, i8** %100, align 8
  %102 = bitcast i8* %101 to %struct._stritem*
  %103 = getelementptr inbounds %struct._stritem, %struct._stritem* %102, i32 0, i32 7
  %104 = load i16, i16* %103, align 2
  %105 = zext i16 %104 to i32
  %106 = and i32 %105, 2
  %107 = icmp ne i32 %106, 0
  %108 = zext i1 %107 to i64
  %109 = select i1 %107, i64 8, i64 0
  %110 = getelementptr inbounds i8, i8* %92, i64 %109
  %111 = bitcast i8* %110 to %struct._strchunk*
  store %struct._strchunk* %111, %struct._strchunk** %10, align 8
  store i32 0, i32* %11, align 4
  br label %112

112:                                              ; preds = %269, %46
  %113 = load i32, i32* %11, align 4
  %114 = load %struct._mc_resp*, %struct._mc_resp** %9, align 8
  %115 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %114, i32 0, i32 9
  %116 = load i8, i8* %115, align 4
  %117 = zext i8 %116 to i32
  %118 = icmp slt i32 %113, %117
  br i1 %118, label %119, label %272

119:                                              ; preds = %112
  %120 = load i32, i32* %11, align 4
  %121 = load %struct._mc_resp*, %struct._mc_resp** %9, align 8
  %122 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %121, i32 0, i32 10
  %123 = load i8, i8* %122, align 1
  %124 = zext i8 %123 to i32
  %125 = icmp eq i32 %120, %124
  br i1 %125, label %126, label %237

126:                                              ; preds = %119
  %127 = load %struct._mc_resp*, %struct._mc_resp** %9, align 8
  %128 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %127, i32 0, i32 8
  %129 = load i32, i32* %128, align 8
  %130 = sext i32 %129 to i64
  %131 = load %struct._mc_resp*, %struct._mc_resp** %9, align 8
  %132 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %131, i32 0, i32 7
  %133 = load i32, i32* %11, align 4
  %134 = sext i32 %133 to i64
  %135 = getelementptr inbounds [4 x %struct.iovec], [4 x %struct.iovec]* %132, i64 0, i64 %134
  %136 = getelementptr inbounds %struct.iovec, %struct.iovec* %135, i32 0, i32 1
  %137 = load i64, i64* %136, align 8
  %138 = sub i64 %130, %137
  %139 = trunc i64 %138 to i32
  store i32 %139, i32* %12, align 4
  %140 = load %struct._mc_resp*, %struct._mc_resp** %9, align 8
  %141 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %140, i32 0, i32 7
  %142 = load i32, i32* %11, align 4
  %143 = sext i32 %142 to i64
  %144 = getelementptr inbounds [4 x %struct.iovec], [4 x %struct.iovec]* %141, i64 0, i64 %143
  %145 = getelementptr inbounds %struct.iovec, %struct.iovec* %144, i32 0, i32 1
  %146 = load i64, i64* %145, align 8
  %147 = trunc i64 %146 to i32
  store i32 %147, i32* %13, align 4
  br label %148

148:                                              ; preds = %216, %174, %164, %126
  %149 = load %struct._strchunk*, %struct._strchunk** %10, align 8
  %150 = icmp ne %struct._strchunk* %149, null
  br i1 %150, label %151, label %157

151:                                              ; preds = %148
  %152 = load i32, i32* %13, align 4
  %153 = icmp sgt i32 %152, 0
  br i1 %153, label %154, label %157

154:                                              ; preds = %151
  %155 = load i32, i32* %7, align 4
  %156 = icmp slt i32 %155, 1023
  br label %157

157:                                              ; preds = %154, %151, %148
  %158 = phi i1 [ false, %151 ], [ false, %148 ], [ %156, %154 ]
  br i1 %158, label %159, label %236

159:                                              ; preds = %157
  store i32 0, i32* %14, align 4
  %160 = load %struct._strchunk*, %struct._strchunk** %10, align 8
  %161 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %160, i32 0, i32 4
  %162 = load i32, i32* %161, align 4
  %163 = icmp ne i32 %162, 0
  br i1 %163, label %168, label %164

164:                                              ; preds = %159
  %165 = load %struct._strchunk*, %struct._strchunk** %10, align 8
  %166 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %165, i32 0, i32 0
  %167 = load %struct._strchunk*, %struct._strchunk** %166, align 8
  store %struct._strchunk* %167, %struct._strchunk** %10, align 8
  br label %148, !llvm.loop !12

168:                                              ; preds = %159
  %169 = load i32, i32* %12, align 4
  %170 = load %struct._strchunk*, %struct._strchunk** %10, align 8
  %171 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %170, i32 0, i32 4
  %172 = load i32, i32* %171, align 4
  %173 = icmp sge i32 %169, %172
  br i1 %173, label %174, label %183

174:                                              ; preds = %168
  %175 = load %struct._strchunk*, %struct._strchunk** %10, align 8
  %176 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %175, i32 0, i32 4
  %177 = load i32, i32* %176, align 4
  %178 = load i32, i32* %12, align 4
  %179 = sub nsw i32 %178, %177
  store i32 %179, i32* %12, align 4
  %180 = load %struct._strchunk*, %struct._strchunk** %10, align 8
  %181 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %180, i32 0, i32 0
  %182 = load %struct._strchunk*, %struct._strchunk** %181, align 8
  store %struct._strchunk* %182, %struct._strchunk** %10, align 8
  br label %148, !llvm.loop !12

183:                                              ; preds = %168
  %184 = load i32, i32* %12, align 4
  %185 = icmp ne i32 %184, 0
  br i1 %185, label %186, label %188

186:                                              ; preds = %183
  %187 = load i32, i32* %12, align 4
  store i32 %187, i32* %14, align 4
  store i32 0, i32* %12, align 4
  br label %188

188:                                              ; preds = %186, %183
  br label %189

189:                                              ; preds = %188
  %190 = load %struct._strchunk*, %struct._strchunk** %10, align 8
  %191 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %190, i32 0, i32 10
  %192 = getelementptr inbounds [0 x i8], [0 x i8]* %191, i64 0, i64 0
  %193 = load i32, i32* %14, align 4
  %194 = sext i32 %193 to i64
  %195 = getelementptr inbounds i8, i8* %192, i64 %194
  %196 = load %struct.iovec*, %struct.iovec** %6, align 8
  %197 = load i32, i32* %7, align 4
  %198 = sext i32 %197 to i64
  %199 = getelementptr inbounds %struct.iovec, %struct.iovec* %196, i64 %198
  %200 = getelementptr inbounds %struct.iovec, %struct.iovec* %199, i32 0, i32 0
  store i8* %195, i8** %200, align 8
  %201 = load %struct._strchunk*, %struct._strchunk** %10, align 8
  %202 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %201, i32 0, i32 4
  %203 = load i32, i32* %202, align 4
  %204 = load i32, i32* %14, align 4
  %205 = sub nsw i32 %203, %204
  %206 = load i32, i32* %13, align 4
  %207 = icmp sgt i32 %205, %206
  br i1 %207, label %208, label %210

208:                                              ; preds = %189
  %209 = load i32, i32* %13, align 4
  br label %216

210:                                              ; preds = %189
  %211 = load %struct._strchunk*, %struct._strchunk** %10, align 8
  %212 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %211, i32 0, i32 4
  %213 = load i32, i32* %212, align 4
  %214 = load i32, i32* %14, align 4
  %215 = sub nsw i32 %213, %214
  br label %216

216:                                              ; preds = %210, %208
  %217 = phi i32 [ %209, %208 ], [ %215, %210 ]
  %218 = sext i32 %217 to i64
  %219 = load %struct.iovec*, %struct.iovec** %6, align 8
  %220 = load i32, i32* %7, align 4
  %221 = sext i32 %220 to i64
  %222 = getelementptr inbounds %struct.iovec, %struct.iovec* %219, i64 %221
  %223 = getelementptr inbounds %struct.iovec, %struct.iovec* %222, i32 0, i32 1
  store i64 %218, i64* %223, align 8
  %224 = load i32, i32* %7, align 4
  %225 = add nsw i32 %224, 1
  store i32 %225, i32* %7, align 4
  %226 = load %struct._strchunk*, %struct._strchunk** %10, align 8
  %227 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %226, i32 0, i32 4
  %228 = load i32, i32* %227, align 4
  %229 = load i32, i32* %14, align 4
  %230 = sub nsw i32 %228, %229
  %231 = load i32, i32* %13, align 4
  %232 = sub nsw i32 %231, %230
  store i32 %232, i32* %13, align 4
  %233 = load %struct._strchunk*, %struct._strchunk** %10, align 8
  %234 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %233, i32 0, i32 0
  %235 = load %struct._strchunk*, %struct._strchunk** %234, align 8
  store %struct._strchunk* %235, %struct._strchunk** %10, align 8
  br label %148, !llvm.loop !12

236:                                              ; preds = %157
  br label %264

237:                                              ; preds = %119
  %238 = load %struct._mc_resp*, %struct._mc_resp** %9, align 8
  %239 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %238, i32 0, i32 7
  %240 = load i32, i32* %11, align 4
  %241 = sext i32 %240 to i64
  %242 = getelementptr inbounds [4 x %struct.iovec], [4 x %struct.iovec]* %239, i64 0, i64 %241
  %243 = getelementptr inbounds %struct.iovec, %struct.iovec* %242, i32 0, i32 0
  %244 = load i8*, i8** %243, align 8
  %245 = load %struct.iovec*, %struct.iovec** %6, align 8
  %246 = load i32, i32* %7, align 4
  %247 = sext i32 %246 to i64
  %248 = getelementptr inbounds %struct.iovec, %struct.iovec* %245, i64 %247
  %249 = getelementptr inbounds %struct.iovec, %struct.iovec* %248, i32 0, i32 0
  store i8* %244, i8** %249, align 8
  %250 = load %struct._mc_resp*, %struct._mc_resp** %9, align 8
  %251 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %250, i32 0, i32 7
  %252 = load i32, i32* %11, align 4
  %253 = sext i32 %252 to i64
  %254 = getelementptr inbounds [4 x %struct.iovec], [4 x %struct.iovec]* %251, i64 0, i64 %253
  %255 = getelementptr inbounds %struct.iovec, %struct.iovec* %254, i32 0, i32 1
  %256 = load i64, i64* %255, align 8
  %257 = load %struct.iovec*, %struct.iovec** %6, align 8
  %258 = load i32, i32* %7, align 4
  %259 = sext i32 %258 to i64
  %260 = getelementptr inbounds %struct.iovec, %struct.iovec* %257, i64 %259
  %261 = getelementptr inbounds %struct.iovec, %struct.iovec* %260, i32 0, i32 1
  store i64 %256, i64* %261, align 8
  %262 = load i32, i32* %7, align 4
  %263 = add nsw i32 %262, 1
  store i32 %263, i32* %7, align 4
  br label %264

264:                                              ; preds = %237, %236
  %265 = load i32, i32* %7, align 4
  %266 = icmp sge i32 %265, 1023
  br i1 %266, label %267, label %268

267:                                              ; preds = %264
  br label %272

268:                                              ; preds = %264
  br label %269

269:                                              ; preds = %268
  %270 = load i32, i32* %11, align 4
  %271 = add nsw i32 %270, 1
  store i32 %271, i32* %11, align 4
  br label %112, !llvm.loop !13

272:                                              ; preds = %267, %112
  br label %294

273:                                              ; preds = %41
  %274 = load %struct.iovec*, %struct.iovec** %6, align 8
  %275 = load i32, i32* %7, align 4
  %276 = sext i32 %275 to i64
  %277 = getelementptr inbounds %struct.iovec, %struct.iovec* %274, i64 %276
  %278 = bitcast %struct.iovec* %277 to i8*
  %279 = load %struct._mc_resp*, %struct._mc_resp** %9, align 8
  %280 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %279, i32 0, i32 7
  %281 = getelementptr inbounds [4 x %struct.iovec], [4 x %struct.iovec]* %280, i64 0, i64 0
  %282 = bitcast %struct.iovec* %281 to i8*
  %283 = load %struct._mc_resp*, %struct._mc_resp** %9, align 8
  %284 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %283, i32 0, i32 9
  %285 = load i8, i8* %284, align 4
  %286 = zext i8 %285 to i64
  %287 = mul i64 16, %286
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %278, i8* align 8 %282, i64 %287, i1 false)
  %288 = load %struct._mc_resp*, %struct._mc_resp** %9, align 8
  %289 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %288, i32 0, i32 9
  %290 = load i8, i8* %289, align 4
  %291 = zext i8 %290 to i32
  %292 = load i32, i32* %7, align 4
  %293 = add nsw i32 %292, %291
  store i32 %293, i32* %7, align 4
  br label %294

294:                                              ; preds = %273, %272
  %295 = load %struct._mc_resp*, %struct._mc_resp** %9, align 8
  %296 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %295, i32 0, i32 1
  %297 = load %struct._mc_resp*, %struct._mc_resp** %296, align 8
  store %struct._mc_resp* %297, %struct._mc_resp** %9, align 8
  %298 = load i8, i8* %8, align 1
  %299 = trunc i8 %298 to i1
  br i1 %299, label %300, label %301

300:                                              ; preds = %294
  br label %302

301:                                              ; preds = %294
  br label %19, !llvm.loop !11

302:                                              ; preds = %300, %30
  %303 = load i32, i32* %7, align 4
  ret i32 %303
}

declare dso_local i64 @sendmsg(i32, %struct.msghdr*, i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @_transmit_post(%struct.conn* %0, i64 %1) #0 {
  %3 = alloca %struct.conn*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %struct._mc_resp*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.iovec*, align 8
  store %struct.conn* %0, %struct.conn** %3, align 8
  store i64 %1, i64* %4, align 8
  %8 = load %struct.conn*, %struct.conn** %3, align 8
  %9 = getelementptr inbounds %struct.conn, %struct.conn* %8, i32 0, i32 20
  %10 = load %struct._mc_resp*, %struct._mc_resp** %9, align 8
  store %struct._mc_resp* %10, %struct._mc_resp** %5, align 8
  br label %11

11:                                               ; preds = %123, %30, %19, %2
  %12 = load %struct._mc_resp*, %struct._mc_resp** %5, align 8
  %13 = icmp ne %struct._mc_resp* %12, null
  br i1 %13, label %14, label %124

14:                                               ; preds = %11
  %15 = load %struct._mc_resp*, %struct._mc_resp** %5, align 8
  %16 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %15, i32 0, i32 11
  %17 = load i8, i8* %16, align 2
  %18 = trunc i8 %17 to i1
  br i1 %18, label %19, label %23

19:                                               ; preds = %14
  %20 = load %struct.conn*, %struct.conn** %3, align 8
  %21 = load %struct._mc_resp*, %struct._mc_resp** %5, align 8
  %22 = call %struct._mc_resp* @resp_finish(%struct.conn* %20, %struct._mc_resp* %21)
  store %struct._mc_resp* %22, %struct._mc_resp** %5, align 8
  br label %11, !llvm.loop !14

23:                                               ; preds = %14
  %24 = load i64, i64* %4, align 8
  %25 = load %struct._mc_resp*, %struct._mc_resp** %5, align 8
  %26 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %25, i32 0, i32 3
  %27 = load i32, i32* %26, align 4
  %28 = sext i32 %27 to i64
  %29 = icmp sge i64 %24, %28
  br i1 %29, label %30, label %40

30:                                               ; preds = %23
  %31 = load %struct._mc_resp*, %struct._mc_resp** %5, align 8
  %32 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %31, i32 0, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = sext i32 %33 to i64
  %35 = load i64, i64* %4, align 8
  %36 = sub nsw i64 %35, %34
  store i64 %36, i64* %4, align 8
  %37 = load %struct.conn*, %struct.conn** %3, align 8
  %38 = load %struct._mc_resp*, %struct._mc_resp** %5, align 8
  %39 = call %struct._mc_resp* @resp_finish(%struct.conn* %37, %struct._mc_resp* %38)
  store %struct._mc_resp* %39, %struct._mc_resp** %5, align 8
  br label %11, !llvm.loop !14

40:                                               ; preds = %23
  store i32 0, i32* %6, align 4
  br label %41

41:                                               ; preds = %110, %40
  %42 = load i32, i32* %6, align 4
  %43 = load %struct._mc_resp*, %struct._mc_resp** %5, align 8
  %44 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %43, i32 0, i32 9
  %45 = load i8, i8* %44, align 4
  %46 = zext i8 %45 to i32
  %47 = icmp slt i32 %42, %46
  br i1 %47, label %48, label %113

48:                                               ; preds = %41
  %49 = load %struct._mc_resp*, %struct._mc_resp** %5, align 8
  %50 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %49, i32 0, i32 7
  %51 = load i32, i32* %6, align 4
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds [4 x %struct.iovec], [4 x %struct.iovec]* %50, i64 0, i64 %52
  store %struct.iovec* %53, %struct.iovec** %7, align 8
  %54 = load i64, i64* %4, align 8
  %55 = load %struct.iovec*, %struct.iovec** %7, align 8
  %56 = getelementptr inbounds %struct.iovec, %struct.iovec* %55, i32 0, i32 1
  %57 = load i64, i64* %56, align 8
  %58 = icmp uge i64 %54, %57
  br i1 %58, label %59, label %76

59:                                               ; preds = %48
  %60 = load %struct.iovec*, %struct.iovec** %7, align 8
  %61 = getelementptr inbounds %struct.iovec, %struct.iovec* %60, i32 0, i32 1
  %62 = load i64, i64* %61, align 8
  %63 = load %struct._mc_resp*, %struct._mc_resp** %5, align 8
  %64 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %63, i32 0, i32 3
  %65 = load i32, i32* %64, align 4
  %66 = sext i32 %65 to i64
  %67 = sub i64 %66, %62
  %68 = trunc i64 %67 to i32
  store i32 %68, i32* %64, align 4
  %69 = load %struct.iovec*, %struct.iovec** %7, align 8
  %70 = getelementptr inbounds %struct.iovec, %struct.iovec* %69, i32 0, i32 1
  %71 = load i64, i64* %70, align 8
  %72 = load i64, i64* %4, align 8
  %73 = sub i64 %72, %71
  store i64 %73, i64* %4, align 8
  %74 = load %struct.iovec*, %struct.iovec** %7, align 8
  %75 = getelementptr inbounds %struct.iovec, %struct.iovec* %74, i32 0, i32 1
  store i64 0, i64* %75, align 8
  br label %109

76:                                               ; preds = %48
  %77 = load %struct._mc_resp*, %struct._mc_resp** %5, align 8
  %78 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %77, i32 0, i32 10
  %79 = load i8, i8* %78, align 1
  %80 = icmp ne i8 %79, 0
  br i1 %80, label %81, label %88

81:                                               ; preds = %76
  %82 = load i32, i32* %6, align 4
  %83 = load %struct._mc_resp*, %struct._mc_resp** %5, align 8
  %84 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %83, i32 0, i32 10
  %85 = load i8, i8* %84, align 1
  %86 = zext i8 %85 to i32
  %87 = icmp ne i32 %82, %86
  br i1 %87, label %88, label %96

88:                                               ; preds = %81, %76
  %89 = load %struct.iovec*, %struct.iovec** %7, align 8
  %90 = getelementptr inbounds %struct.iovec, %struct.iovec* %89, i32 0, i32 0
  %91 = load i8*, i8** %90, align 8
  %92 = load i64, i64* %4, align 8
  %93 = getelementptr inbounds i8, i8* %91, i64 %92
  %94 = load %struct.iovec*, %struct.iovec** %7, align 8
  %95 = getelementptr inbounds %struct.iovec, %struct.iovec* %94, i32 0, i32 0
  store i8* %93, i8** %95, align 8
  br label %96

96:                                               ; preds = %88, %81
  %97 = load i64, i64* %4, align 8
  %98 = load %struct.iovec*, %struct.iovec** %7, align 8
  %99 = getelementptr inbounds %struct.iovec, %struct.iovec* %98, i32 0, i32 1
  %100 = load i64, i64* %99, align 8
  %101 = sub i64 %100, %97
  store i64 %101, i64* %99, align 8
  %102 = load i64, i64* %4, align 8
  %103 = load %struct._mc_resp*, %struct._mc_resp** %5, align 8
  %104 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %103, i32 0, i32 3
  %105 = load i32, i32* %104, align 4
  %106 = sext i32 %105 to i64
  %107 = sub nsw i64 %106, %102
  %108 = trunc i64 %107 to i32
  store i32 %108, i32* %104, align 4
  store i64 0, i64* %4, align 8
  br label %113

109:                                              ; preds = %59
  br label %110

110:                                              ; preds = %109
  %111 = load i32, i32* %6, align 4
  %112 = add nsw i32 %111, 1
  store i32 %112, i32* %6, align 4
  br label %41, !llvm.loop !15

113:                                              ; preds = %96, %41
  %114 = load %struct._mc_resp*, %struct._mc_resp** %5, align 8
  %115 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %114, i32 0, i32 3
  %116 = load i32, i32* %115, align 4
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %122

118:                                              ; preds = %113
  %119 = load %struct.conn*, %struct.conn** %3, align 8
  %120 = load %struct._mc_resp*, %struct._mc_resp** %5, align 8
  %121 = call %struct._mc_resp* @resp_finish(%struct.conn* %119, %struct._mc_resp* %120)
  store %struct._mc_resp* %121, %struct._mc_resp** %5, align 8
  br label %123

122:                                              ; preds = %113
  br label %124

123:                                              ; preds = %118
  br label %11, !llvm.loop !14

124:                                              ; preds = %122, %11
  ret void
}

; Function Attrs: nounwind readonly willreturn
declare dso_local i32 @strncmp(i8*, i8*, i64) #6

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @out_string(%struct.conn* %0, i8* %1) #0 {
  %3 = alloca %struct.conn*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %struct._mc_resp*, align 8
  store %struct.conn* %0, %struct.conn** %3, align 8
  store i8* %1, i8** %4, align 8
  %7 = load %struct.conn*, %struct.conn** %3, align 8
  %8 = getelementptr inbounds %struct.conn, %struct.conn* %7, i32 0, i32 19
  %9 = load %struct._mc_resp*, %struct._mc_resp** %8, align 8
  store %struct._mc_resp* %9, %struct._mc_resp** %6, align 8
  %10 = load %struct._mc_resp*, %struct._mc_resp** %6, align 8
  call void @resp_reset(%struct._mc_resp* %10)
  %11 = load %struct.conn*, %struct.conn** %3, align 8
  %12 = getelementptr inbounds %struct.conn, %struct.conn* %11, i32 0, i32 34
  %13 = load i8, i8* %12, align 4
  %14 = trunc i8 %13 to i1
  br i1 %14, label %15, label %29

15:                                               ; preds = %2
  %16 = load %struct._mc_resp*, %struct._mc_resp** %6, align 8
  %17 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %16, i32 0, i32 11
  store i8 1, i8* %17, align 2
  %18 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %19 = icmp sgt i32 %18, 1
  br i1 %19, label %20, label %27

20:                                               ; preds = %15
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %22 = load %struct.conn*, %struct.conn** %3, align 8
  %23 = getelementptr inbounds %struct.conn, %struct.conn* %22, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = load i8*, i8** %4, align 8
  %26 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %21, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.16, i64 0, i64 0), i32 %24, i8* %25)
  br label %27

27:                                               ; preds = %20, %15
  %28 = load %struct.conn*, %struct.conn** %3, align 8
  call void @conn_set_state(%struct.conn* %28, i32 1)
  br label %67

29:                                               ; preds = %2
  %30 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %31 = icmp sgt i32 %30, 1
  br i1 %31, label %32, label %39

32:                                               ; preds = %29
  %33 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %34 = load %struct.conn*, %struct.conn** %3, align 8
  %35 = getelementptr inbounds %struct.conn, %struct.conn* %34, i32 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = load i8*, i8** %4, align 8
  %38 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %33, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17, i64 0, i64 0), i32 %36, i8* %37)
  br label %39

39:                                               ; preds = %32, %29
  %40 = load i8*, i8** %4, align 8
  %41 = call i64 @strlen(i8* %40) #16
  store i64 %41, i64* %5, align 8
  %42 = load i64, i64* %5, align 8
  %43 = add i64 %42, 2
  %44 = icmp ugt i64 %43, 1024
  br i1 %44, label %45, label %48

45:                                               ; preds = %39
  store i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.18, i64 0, i64 0), i8** %4, align 8
  %46 = load i8*, i8** %4, align 8
  %47 = call i64 @strlen(i8* %46) #16
  store i64 %47, i64* %5, align 8
  br label %48

48:                                               ; preds = %45, %39
  %49 = load %struct._mc_resp*, %struct._mc_resp** %6, align 8
  %50 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %49, i32 0, i32 18
  %51 = getelementptr inbounds [1024 x i8], [1024 x i8]* %50, i64 0, i64 0
  %52 = load i8*, i8** %4, align 8
  %53 = load i64, i64* %5, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %51, i8* align 1 %52, i64 %53, i1 false)
  %54 = load %struct._mc_resp*, %struct._mc_resp** %6, align 8
  %55 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %54, i32 0, i32 18
  %56 = getelementptr inbounds [1024 x i8], [1024 x i8]* %55, i64 0, i64 0
  %57 = load i64, i64* %5, align 8
  %58 = getelementptr inbounds i8, i8* %56, i64 %57
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %58, i8* align 1 getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19, i64 0, i64 0), i64 2, i1 false)
  %59 = load %struct._mc_resp*, %struct._mc_resp** %6, align 8
  %60 = load %struct._mc_resp*, %struct._mc_resp** %6, align 8
  %61 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %60, i32 0, i32 18
  %62 = getelementptr inbounds [1024 x i8], [1024 x i8]* %61, i64 0, i64 0
  %63 = load i64, i64* %5, align 8
  %64 = add i64 %63, 2
  %65 = trunc i64 %64 to i32
  call void @resp_add_iov(%struct._mc_resp* %59, i8* %62, i32 %65)
  %66 = load %struct.conn*, %struct.conn** %3, align 8
  call void @conn_set_state(%struct.conn* %66, i32 1)
  br label %67

67:                                               ; preds = %48, %27
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @resp_reset(%struct._mc_resp* %0) #0 {
  %2 = alloca %struct._mc_resp*, align 8
  store %struct._mc_resp* %0, %struct._mc_resp** %2, align 8
  %3 = load %struct._mc_resp*, %struct._mc_resp** %2, align 8
  %4 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %3, i32 0, i32 6
  %5 = load %struct._stritem*, %struct._stritem** %4, align 8
  %6 = icmp ne %struct._stritem* %5, null
  br i1 %6, label %7, label %13

7:                                                ; preds = %1
  %8 = load %struct._mc_resp*, %struct._mc_resp** %2, align 8
  %9 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %8, i32 0, i32 6
  %10 = load %struct._stritem*, %struct._stritem** %9, align 8
  call void @item_remove(%struct._stritem* %10)
  %11 = load %struct._mc_resp*, %struct._mc_resp** %2, align 8
  %12 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %11, i32 0, i32 6
  store %struct._stritem* null, %struct._stritem** %12, align 8
  br label %13

13:                                               ; preds = %7, %1
  %14 = load %struct._mc_resp*, %struct._mc_resp** %2, align 8
  %15 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %14, i32 0, i32 4
  %16 = load i8*, i8** %15, align 8
  %17 = icmp ne i8* %16, null
  br i1 %17, label %18, label %24

18:                                               ; preds = %13
  %19 = load %struct._mc_resp*, %struct._mc_resp** %2, align 8
  %20 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %19, i32 0, i32 4
  %21 = load i8*, i8** %20, align 8
  call void @free(i8* %21) #14
  %22 = load %struct._mc_resp*, %struct._mc_resp** %2, align 8
  %23 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %22, i32 0, i32 4
  store i8* null, i8** %23, align 8
  br label %24

24:                                               ; preds = %18, %13
  %25 = load %struct._mc_resp*, %struct._mc_resp** %2, align 8
  %26 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %25, i32 0, i32 2
  store i32 0, i32* %26, align 8
  %27 = load %struct._mc_resp*, %struct._mc_resp** %2, align 8
  %28 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %27, i32 0, i32 3
  store i32 0, i32* %28, align 4
  %29 = load %struct._mc_resp*, %struct._mc_resp** %2, align 8
  %30 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %29, i32 0, i32 9
  store i8 0, i8* %30, align 4
  %31 = load %struct._mc_resp*, %struct._mc_resp** %2, align 8
  %32 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %31, i32 0, i32 10
  store i8 0, i8* %32, align 1
  %33 = load %struct._mc_resp*, %struct._mc_resp** %2, align 8
  %34 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %33, i32 0, i32 8
  store i32 0, i32* %34, align 8
  %35 = load %struct._mc_resp*, %struct._mc_resp** %2, align 8
  %36 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %35, i32 0, i32 11
  store i8 0, i8* %36, align 2
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @resp_add_iov(%struct._mc_resp* %0, i8* %1, i32 %2) #0 {
  %4 = alloca %struct._mc_resp*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store %struct._mc_resp* %0, %struct._mc_resp** %4, align 8
  store i8* %1, i8** %5, align 8
  store i32 %2, i32* %6, align 4
  %8 = load %struct._mc_resp*, %struct._mc_resp** %4, align 8
  %9 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %8, i32 0, i32 9
  %10 = load i8, i8* %9, align 4
  %11 = zext i8 %10 to i32
  store i32 %11, i32* %7, align 4
  %12 = load i8*, i8** %5, align 8
  %13 = load %struct._mc_resp*, %struct._mc_resp** %4, align 8
  %14 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %13, i32 0, i32 7
  %15 = load i32, i32* %7, align 4
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds [4 x %struct.iovec], [4 x %struct.iovec]* %14, i64 0, i64 %16
  %18 = getelementptr inbounds %struct.iovec, %struct.iovec* %17, i32 0, i32 0
  store i8* %12, i8** %18, align 8
  %19 = load i32, i32* %6, align 4
  %20 = sext i32 %19 to i64
  %21 = load %struct._mc_resp*, %struct._mc_resp** %4, align 8
  %22 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %21, i32 0, i32 7
  %23 = load i32, i32* %7, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds [4 x %struct.iovec], [4 x %struct.iovec]* %22, i64 0, i64 %24
  %26 = getelementptr inbounds %struct.iovec, %struct.iovec* %25, i32 0, i32 1
  store i64 %20, i64* %26, align 8
  %27 = load %struct._mc_resp*, %struct._mc_resp** %4, align 8
  %28 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %27, i32 0, i32 9
  %29 = load i8, i8* %28, align 4
  %30 = add i8 %29, 1
  store i8 %30, i8* %28, align 4
  %31 = load i32, i32* %6, align 4
  %32 = load %struct._mc_resp*, %struct._mc_resp** %4, align 8
  %33 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %32, i32 0, i32 3
  %34 = load i32, i32* %33, align 4
  %35 = add nsw i32 %34, %31
  store i32 %35, i32* %33, align 4
  ret void
}

declare dso_local i64 @recvfrom(i32, i8*, i64, i32, %struct.sockaddr*, i32*) #3

; Function Attrs: nounwind
declare dso_local i8* @realloc(i8*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @event_handler(i32 %0, i16 signext %1, i8* %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i16, align 2
  %6 = alloca i8*, align 8
  %7 = alloca %struct.conn*, align 8
  store i32 %0, i32* %4, align 4
  store i16 %1, i16* %5, align 2
  store i8* %2, i8** %6, align 8
  %8 = load i8*, i8** %6, align 8
  %9 = bitcast i8* %8 to %struct.conn*
  store %struct.conn* %9, %struct.conn** %7, align 8
  %10 = load i16, i16* %5, align 2
  %11 = load %struct.conn*, %struct.conn** %7, align 8
  %12 = getelementptr inbounds %struct.conn, %struct.conn* %11, i32 0, i32 14
  store i16 %10, i16* %12, align 2
  %13 = load i32, i32* %4, align 4
  %14 = load %struct.conn*, %struct.conn** %7, align 8
  %15 = getelementptr inbounds %struct.conn, %struct.conn* %14, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = icmp ne i32 %13, %16
  br i1 %17, label %18, label %26

18:                                               ; preds = %3
  %19 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %20 = icmp sgt i32 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %18
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %23 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %22, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.404, i64 0, i64 0))
  br label %24

24:                                               ; preds = %21, %18
  %25 = load %struct.conn*, %struct.conn** %7, align 8
  call void @conn_close(%struct.conn* %25)
  br label %28

26:                                               ; preds = %3
  %27 = load %struct.conn*, %struct.conn** %7, align 8
  call void @drive_machine(%struct.conn* %27)
  br label %28

28:                                               ; preds = %26, %24
  ret void
}

declare dso_local void @event_set(%struct.event*, i32, i16 signext, void (i32, i16, i8*)*, i8*) #3

declare dso_local i32 @event_base_set(%struct.event_base*, %struct.event*) #3

declare dso_local i32 @event_add(%struct.event*, %struct.timeval*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @state_text(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca [13 x i8*], align 16
  store i32 %0, i32* %2, align 4
  %4 = bitcast [13 x i8*]* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %4, i8* align 16 bitcast ([13 x i8*]* @__const.state_text.statenames to i8*), i64 104, i1 false)
  %5 = load i32, i32* %2, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds [13 x i8*], [13 x i8*]* %3, i64 0, i64 %6
  %8 = load i8*, i8** %7, align 8
  ret i8* %8
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @conn_worker_readd(%struct.conn* %0) #0 {
  %2 = alloca %struct.conn*, align 8
  store %struct.conn* %0, %struct.conn** %2, align 8
  %3 = load %struct.conn*, %struct.conn** %2, align 8
  %4 = getelementptr inbounds %struct.conn, %struct.conn* %3, i32 0, i32 9
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 12
  br i1 %6, label %7, label %18

7:                                                ; preds = %1
  %8 = load %struct.conn*, %struct.conn** %2, align 8
  %9 = getelementptr inbounds %struct.conn, %struct.conn* %8, i32 0, i32 25
  %10 = load i32, i32* %9, align 4
  %11 = add nsw i32 %10, -1
  store i32 %11, i32* %9, align 4
  %12 = load %struct.conn*, %struct.conn** %2, align 8
  %13 = getelementptr inbounds %struct.conn, %struct.conn* %12, i32 0, i32 25
  %14 = load i32, i32* %13, align 4
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %16, label %17

16:                                               ; preds = %7
  br label %61

17:                                               ; preds = %7
  br label %18

18:                                               ; preds = %17, %1
  %19 = load %struct.conn*, %struct.conn** %2, align 8
  %20 = getelementptr inbounds %struct.conn, %struct.conn* %19, i32 0, i32 13
  store i16 18, i16* %20, align 8
  %21 = load %struct.conn*, %struct.conn** %2, align 8
  %22 = getelementptr inbounds %struct.conn, %struct.conn* %21, i32 0, i32 12
  %23 = load %struct.conn*, %struct.conn** %2, align 8
  %24 = getelementptr inbounds %struct.conn, %struct.conn* %23, i32 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = load %struct.conn*, %struct.conn** %2, align 8
  %27 = getelementptr inbounds %struct.conn, %struct.conn* %26, i32 0, i32 13
  %28 = load i16, i16* %27, align 8
  %29 = load %struct.conn*, %struct.conn** %2, align 8
  %30 = bitcast %struct.conn* %29 to i8*
  call void @event_set(%struct.event* %22, i32 %25, i16 signext %28, void (i32, i16, i8*)* @event_handler, i8* %30)
  %31 = load %struct.conn*, %struct.conn** %2, align 8
  %32 = getelementptr inbounds %struct.conn, %struct.conn* %31, i32 0, i32 42
  %33 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %32, align 8
  %34 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %33, i32 0, i32 1
  %35 = load %struct.event_base*, %struct.event_base** %34, align 8
  %36 = load %struct.conn*, %struct.conn** %2, align 8
  %37 = getelementptr inbounds %struct.conn, %struct.conn* %36, i32 0, i32 12
  %38 = call i32 @event_base_set(%struct.event_base* %35, %struct.event* %37)
  %39 = load %struct.conn*, %struct.conn** %2, align 8
  %40 = getelementptr inbounds %struct.conn, %struct.conn* %39, i32 0, i32 12
  %41 = call i32 @event_add(%struct.event* %40, %struct.timeval* null)
  %42 = icmp eq i32 %41, -1
  br i1 %42, label %43, label %44

43:                                               ; preds = %18
  call void @perror(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0))
  br label %44

44:                                               ; preds = %43, %18
  %45 = load %struct.conn*, %struct.conn** %2, align 8
  %46 = getelementptr inbounds %struct.conn, %struct.conn* %45, i32 0, i32 9
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, 8
  br i1 %48, label %49, label %51

49:                                               ; preds = %44
  %50 = load %struct.conn*, %struct.conn** %2, align 8
  call void @drive_machine(%struct.conn* %50)
  br label %61

51:                                               ; preds = %44
  %52 = load %struct.conn*, %struct.conn** %2, align 8
  %53 = getelementptr inbounds %struct.conn, %struct.conn* %52, i32 0, i32 9
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 12
  br i1 %55, label %56, label %58

56:                                               ; preds = %51
  %57 = load %struct.conn*, %struct.conn** %2, align 8
  call void @drive_machine(%struct.conn* %57)
  br label %60

58:                                               ; preds = %51
  %59 = load %struct.conn*, %struct.conn** %2, align 8
  call void @conn_set_state(%struct.conn* %59, i32 1)
  br label %60

60:                                               ; preds = %58, %56
  br label %61

61:                                               ; preds = %16, %49, %60
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @thread_io_queue_add(%struct.LIBEVENT_THREAD* %0, i32 %1, i8* %2, void (%struct.io_queue_s*)* %3, void (%struct.io_queue_s*)* %4, void (%struct._io_pending_t*)* %5, void (%struct._io_pending_t*)* %6) #0 {
  %8 = alloca %struct.LIBEVENT_THREAD*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca void (%struct.io_queue_s*)*, align 8
  %12 = alloca void (%struct.io_queue_s*)*, align 8
  %13 = alloca void (%struct._io_pending_t*)*, align 8
  %14 = alloca void (%struct._io_pending_t*)*, align 8
  %15 = alloca %struct.io_queue_cb_s*, align 8
  store %struct.LIBEVENT_THREAD* %0, %struct.LIBEVENT_THREAD** %8, align 8
  store i32 %1, i32* %9, align 4
  store i8* %2, i8** %10, align 8
  store void (%struct.io_queue_s*)* %3, void (%struct.io_queue_s*)** %11, align 8
  store void (%struct.io_queue_s*)* %4, void (%struct.io_queue_s*)** %12, align 8
  store void (%struct._io_pending_t*)* %5, void (%struct._io_pending_t*)** %13, align 8
  store void (%struct._io_pending_t*)* %6, void (%struct._io_pending_t*)** %14, align 8
  %16 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %8, align 8
  %17 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %16, i32 0, i32 5
  %18 = getelementptr inbounds [3 x %struct.io_queue_cb_s], [3 x %struct.io_queue_cb_s]* %17, i64 0, i64 0
  store %struct.io_queue_cb_s* %18, %struct.io_queue_cb_s** %15, align 8
  br label %19

19:                                               ; preds = %24, %7
  %20 = load %struct.io_queue_cb_s*, %struct.io_queue_cb_s** %15, align 8
  %21 = getelementptr inbounds %struct.io_queue_cb_s, %struct.io_queue_cb_s* %20, i32 0, i32 5
  %22 = load i32, i32* %21, align 8
  %23 = icmp ne i32 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = load %struct.io_queue_cb_s*, %struct.io_queue_cb_s** %15, align 8
  %26 = getelementptr inbounds %struct.io_queue_cb_s, %struct.io_queue_cb_s* %25, i32 1
  store %struct.io_queue_cb_s* %26, %struct.io_queue_cb_s** %15, align 8
  br label %19, !llvm.loop !16

27:                                               ; preds = %19
  %28 = load i32, i32* %9, align 4
  %29 = load %struct.io_queue_cb_s*, %struct.io_queue_cb_s** %15, align 8
  %30 = getelementptr inbounds %struct.io_queue_cb_s, %struct.io_queue_cb_s* %29, i32 0, i32 5
  store i32 %28, i32* %30, align 8
  %31 = load i8*, i8** %10, align 8
  %32 = load %struct.io_queue_cb_s*, %struct.io_queue_cb_s** %15, align 8
  %33 = getelementptr inbounds %struct.io_queue_cb_s, %struct.io_queue_cb_s* %32, i32 0, i32 0
  store i8* %31, i8** %33, align 8
  %34 = load void (%struct.io_queue_s*)*, void (%struct.io_queue_s*)** %11, align 8
  %35 = load %struct.io_queue_cb_s*, %struct.io_queue_cb_s** %15, align 8
  %36 = getelementptr inbounds %struct.io_queue_cb_s, %struct.io_queue_cb_s* %35, i32 0, i32 1
  store void (%struct.io_queue_s*)* %34, void (%struct.io_queue_s*)** %36, align 8
  %37 = load void (%struct.io_queue_s*)*, void (%struct.io_queue_s*)** %12, align 8
  %38 = load %struct.io_queue_cb_s*, %struct.io_queue_cb_s** %15, align 8
  %39 = getelementptr inbounds %struct.io_queue_cb_s, %struct.io_queue_cb_s* %38, i32 0, i32 2
  store void (%struct.io_queue_s*)* %37, void (%struct.io_queue_s*)** %39, align 8
  %40 = load void (%struct._io_pending_t*)*, void (%struct._io_pending_t*)** %14, align 8
  %41 = load %struct.io_queue_cb_s*, %struct.io_queue_cb_s** %15, align 8
  %42 = getelementptr inbounds %struct.io_queue_cb_s, %struct.io_queue_cb_s* %41, i32 0, i32 4
  store void (%struct._io_pending_t*)* %40, void (%struct._io_pending_t*)** %42, align 8
  %43 = load void (%struct._io_pending_t*)*, void (%struct._io_pending_t*)** %13, align 8
  %44 = load %struct.io_queue_cb_s*, %struct.io_queue_cb_s** %15, align 8
  %45 = getelementptr inbounds %struct.io_queue_cb_s, %struct.io_queue_cb_s* %44, i32 0, i32 3
  store void (%struct._io_pending_t*)* %43, void (%struct._io_pending_t*)** %45, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @conn_io_queue_setup(%struct.conn* %0) #0 {
  %2 = alloca %struct.conn*, align 8
  %3 = alloca %struct.io_queue_cb_s*, align 8
  %4 = alloca %struct.io_queue_s*, align 8
  store %struct.conn* %0, %struct.conn** %2, align 8
  %5 = load %struct.conn*, %struct.conn** %2, align 8
  %6 = getelementptr inbounds %struct.conn, %struct.conn* %5, i32 0, i32 42
  %7 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %6, align 8
  %8 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %7, i32 0, i32 5
  %9 = getelementptr inbounds [3 x %struct.io_queue_cb_s], [3 x %struct.io_queue_cb_s]* %8, i64 0, i64 0
  store %struct.io_queue_cb_s* %9, %struct.io_queue_cb_s** %3, align 8
  %10 = load %struct.conn*, %struct.conn** %2, align 8
  %11 = getelementptr inbounds %struct.conn, %struct.conn* %10, i32 0, i32 26
  %12 = getelementptr inbounds [3 x %struct.io_queue_s], [3 x %struct.io_queue_s]* %11, i64 0, i64 0
  store %struct.io_queue_s* %12, %struct.io_queue_s** %4, align 8
  br label %13

13:                                               ; preds = %18, %1
  %14 = load %struct.io_queue_cb_s*, %struct.io_queue_cb_s** %3, align 8
  %15 = getelementptr inbounds %struct.io_queue_cb_s, %struct.io_queue_cb_s* %14, i32 0, i32 5
  %16 = load i32, i32* %15, align 8
  %17 = icmp ne i32 %16, 0
  br i1 %17, label %18, label %37

18:                                               ; preds = %13
  %19 = load %struct.io_queue_cb_s*, %struct.io_queue_cb_s** %3, align 8
  %20 = getelementptr inbounds %struct.io_queue_cb_s, %struct.io_queue_cb_s* %19, i32 0, i32 5
  %21 = load i32, i32* %20, align 8
  %22 = load %struct.io_queue_s*, %struct.io_queue_s** %4, align 8
  %23 = getelementptr inbounds %struct.io_queue_s, %struct.io_queue_s* %22, i32 0, i32 3
  store i32 %21, i32* %23, align 4
  %24 = load %struct.io_queue_cb_s*, %struct.io_queue_cb_s** %3, align 8
  %25 = getelementptr inbounds %struct.io_queue_cb_s, %struct.io_queue_cb_s* %24, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = load %struct.io_queue_s*, %struct.io_queue_s** %4, align 8
  %28 = getelementptr inbounds %struct.io_queue_s, %struct.io_queue_s* %27, i32 0, i32 0
  store i8* %26, i8** %28, align 8
  %29 = load %struct.io_queue_s*, %struct.io_queue_s** %4, align 8
  %30 = getelementptr inbounds %struct.io_queue_s, %struct.io_queue_s* %29, i32 0, i32 1
  store i8* null, i8** %30, align 8
  %31 = load %struct.io_queue_s*, %struct.io_queue_s** %4, align 8
  %32 = getelementptr inbounds %struct.io_queue_s, %struct.io_queue_s* %31, i32 0, i32 2
  store i32 0, i32* %32, align 8
  %33 = load %struct.io_queue_cb_s*, %struct.io_queue_cb_s** %3, align 8
  %34 = getelementptr inbounds %struct.io_queue_cb_s, %struct.io_queue_cb_s* %33, i32 1
  store %struct.io_queue_cb_s* %34, %struct.io_queue_cb_s** %3, align 8
  %35 = load %struct.io_queue_s*, %struct.io_queue_s** %4, align 8
  %36 = getelementptr inbounds %struct.io_queue_s, %struct.io_queue_s* %35, i32 1
  store %struct.io_queue_s* %36, %struct.io_queue_s** %4, align 8
  br label %13, !llvm.loop !17

37:                                               ; preds = %13
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.io_queue_s* @conn_io_queue_get(%struct.conn* %0, i32 %1) #0 {
  %3 = alloca %struct.io_queue_s*, align 8
  %4 = alloca %struct.conn*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.io_queue_s*, align 8
  store %struct.conn* %0, %struct.conn** %4, align 8
  store i32 %1, i32* %5, align 4
  %7 = load %struct.conn*, %struct.conn** %4, align 8
  %8 = getelementptr inbounds %struct.conn, %struct.conn* %7, i32 0, i32 26
  %9 = getelementptr inbounds [3 x %struct.io_queue_s], [3 x %struct.io_queue_s]* %8, i64 0, i64 0
  store %struct.io_queue_s* %9, %struct.io_queue_s** %6, align 8
  br label %10

10:                                               ; preds = %23, %2
  %11 = load %struct.io_queue_s*, %struct.io_queue_s** %6, align 8
  %12 = getelementptr inbounds %struct.io_queue_s, %struct.io_queue_s* %11, i32 0, i32 3
  %13 = load i32, i32* %12, align 4
  %14 = icmp ne i32 %13, 0
  br i1 %14, label %15, label %26

15:                                               ; preds = %10
  %16 = load %struct.io_queue_s*, %struct.io_queue_s** %6, align 8
  %17 = getelementptr inbounds %struct.io_queue_s, %struct.io_queue_s* %16, i32 0, i32 3
  %18 = load i32, i32* %17, align 4
  %19 = load i32, i32* %5, align 4
  %20 = icmp eq i32 %18, %19
  br i1 %20, label %21, label %23

21:                                               ; preds = %15
  %22 = load %struct.io_queue_s*, %struct.io_queue_s** %6, align 8
  store %struct.io_queue_s* %22, %struct.io_queue_s** %3, align 8
  br label %27

23:                                               ; preds = %15
  %24 = load %struct.io_queue_s*, %struct.io_queue_s** %6, align 8
  %25 = getelementptr inbounds %struct.io_queue_s, %struct.io_queue_s* %24, i32 1
  store %struct.io_queue_s* %25, %struct.io_queue_s** %6, align 8
  br label %10, !llvm.loop !18

26:                                               ; preds = %10
  store %struct.io_queue_s* null, %struct.io_queue_s** %3, align 8
  br label %27

27:                                               ; preds = %26, %21
  %28 = load %struct.io_queue_s*, %struct.io_queue_s** %3, align 8
  ret %struct.io_queue_s* %28
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @conn_io_queue_return(%struct._io_pending_t* %0) #0 {
  %2 = alloca %struct._io_pending_t*, align 8
  %3 = alloca %struct.io_queue_cb_s*, align 8
  store %struct._io_pending_t* %0, %struct._io_pending_t** %2, align 8
  %4 = load %struct._io_pending_t*, %struct._io_pending_t** %2, align 8
  %5 = getelementptr inbounds %struct._io_pending_t, %struct._io_pending_t* %4, i32 0, i32 1
  %6 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %5, align 8
  %7 = load %struct._io_pending_t*, %struct._io_pending_t** %2, align 8
  %8 = getelementptr inbounds %struct._io_pending_t, %struct._io_pending_t* %7, i32 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = call %struct.io_queue_cb_s* @thread_io_queue_get(%struct.LIBEVENT_THREAD* %6, i32 %9)
  store %struct.io_queue_cb_s* %10, %struct.io_queue_cb_s** %3, align 8
  %11 = load %struct.io_queue_cb_s*, %struct.io_queue_cb_s** %3, align 8
  %12 = getelementptr inbounds %struct.io_queue_cb_s, %struct.io_queue_cb_s* %11, i32 0, i32 3
  %13 = load void (%struct._io_pending_t*)*, void (%struct._io_pending_t*)** %12, align 8
  %14 = load %struct._io_pending_t*, %struct._io_pending_t** %2, align 8
  call void %13(%struct._io_pending_t* %14)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.conn* @conn_new(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, %struct.event_base* %5, i8* %6) #0 {
  %8 = alloca %struct.conn*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %struct.event_base*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca %struct.conn*, align 8
  %17 = alloca %union.__SOCKADDR_ARG, align 8
  %18 = alloca %struct._logger*, align 8
  store i32 %0, i32* %9, align 4
  store i32 %1, i32* %10, align 4
  store i32 %2, i32* %11, align 4
  store i32 %3, i32* %12, align 4
  store i32 %4, i32* %13, align 4
  store %struct.event_base* %5, %struct.event_base** %14, align 8
  store i8* %6, i8** %15, align 8
  %19 = load %struct.conn**, %struct.conn*** @conns, align 8
  %20 = load i32, i32* %9, align 4
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds %struct.conn*, %struct.conn** %19, i64 %21
  %23 = load %struct.conn*, %struct.conn** %22, align 8
  store %struct.conn* %23, %struct.conn** %16, align 8
  %24 = load %struct.conn*, %struct.conn** %16, align 8
  %25 = icmp eq %struct.conn* null, %24
  br i1 %25, label %26, label %86

26:                                               ; preds = %7
  %27 = call noalias i8* @calloc(i64 1, i64 488) #14
  %28 = bitcast i8* %27 to %struct.conn*
  store %struct.conn* %28, %struct.conn** %16, align 8
  %29 = icmp ne %struct.conn* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %26
  call void @STATS_LOCK()
  %31 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 3), align 8
  %32 = add i64 %31, 1
  store i64 %32, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 3), align 8
  call void @STATS_UNLOCK()
  %33 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %34 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %33, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0))
  store %struct.conn* null, %struct.conn** %8, align 8
  br label %319

35:                                               ; preds = %26
  %36 = load %struct.conn*, %struct.conn** %16, align 8
  %37 = getelementptr inbounds %struct.conn, %struct.conn* %36, i32 0, i32 44
  store i64 (%struct.conn*, i8*, i64)* null, i64 (%struct.conn*, i8*, i64)** %37, align 8
  %38 = load %struct.conn*, %struct.conn** %16, align 8
  %39 = getelementptr inbounds %struct.conn, %struct.conn* %38, i32 0, i32 45
  store i64 (%struct.conn*, %struct.msghdr*, i32)* null, i64 (%struct.conn*, %struct.msghdr*, i32)** %39, align 8
  %40 = load %struct.conn*, %struct.conn** %16, align 8
  %41 = getelementptr inbounds %struct.conn, %struct.conn* %40, i32 0, i32 46
  store i64 (%struct.conn*, i8*, i64)* null, i64 (%struct.conn*, i8*, i64)** %41, align 8
  %42 = load %struct.conn*, %struct.conn** %16, align 8
  %43 = getelementptr inbounds %struct.conn, %struct.conn* %42, i32 0, i32 15
  store i8* null, i8** %43, align 8
  %44 = load i32, i32* %12, align 4
  %45 = load %struct.conn*, %struct.conn** %16, align 8
  %46 = getelementptr inbounds %struct.conn, %struct.conn* %45, i32 0, i32 17
  store i32 %44, i32* %46, align 8
  %47 = load %struct.conn*, %struct.conn** %16, align 8
  %48 = getelementptr inbounds %struct.conn, %struct.conn* %47, i32 0, i32 17
  %49 = load i32, i32* %48, align 8
  %50 = icmp ne i32 %49, 0
  br i1 %50, label %51, label %59

51:                                               ; preds = %35
  %52 = load %struct.conn*, %struct.conn** %16, align 8
  %53 = getelementptr inbounds %struct.conn, %struct.conn* %52, i32 0, i32 17
  %54 = load i32, i32* %53, align 8
  %55 = sext i32 %54 to i64
  %56 = call noalias i8* @malloc(i64 %55) #14
  %57 = load %struct.conn*, %struct.conn** %16, align 8
  %58 = getelementptr inbounds %struct.conn, %struct.conn* %57, i32 0, i32 15
  store i8* %56, i8** %58, align 8
  br label %59

59:                                               ; preds = %51, %35
  %60 = load %struct.conn*, %struct.conn** %16, align 8
  %61 = getelementptr inbounds %struct.conn, %struct.conn* %60, i32 0, i32 17
  %62 = load i32, i32* %61, align 8
  %63 = icmp ne i32 %62, 0
  br i1 %63, label %64, label %75

64:                                               ; preds = %59
  %65 = load %struct.conn*, %struct.conn** %16, align 8
  %66 = getelementptr inbounds %struct.conn, %struct.conn* %65, i32 0, i32 15
  %67 = load i8*, i8** %66, align 8
  %68 = icmp eq i8* %67, null
  br i1 %68, label %69, label %75

69:                                               ; preds = %64
  %70 = load %struct.conn*, %struct.conn** %16, align 8
  call void @conn_free(%struct.conn* %70)
  call void @STATS_LOCK()
  %71 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 3), align 8
  %72 = add i64 %71, 1
  store i64 %72, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 3), align 8
  call void @STATS_UNLOCK()
  %73 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %74 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %73, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.4, i64 0, i64 0))
  store %struct.conn* null, %struct.conn** %8, align 8
  br label %319

75:                                               ; preds = %64, %59
  call void @STATS_LOCK()
  %76 = load i32, i32* getelementptr inbounds (%struct.stats_state, %struct.stats_state* @stats_state, i32 0, i32 4), align 8
  %77 = add i32 %76, 1
  store i32 %77, i32* getelementptr inbounds (%struct.stats_state, %struct.stats_state* @stats_state, i32 0, i32 4), align 8
  call void @STATS_UNLOCK()
  %78 = load i32, i32* %9, align 4
  %79 = load %struct.conn*, %struct.conn** %16, align 8
  %80 = getelementptr inbounds %struct.conn, %struct.conn* %79, i32 0, i32 1
  store i32 %78, i32* %80, align 8
  %81 = load %struct.conn*, %struct.conn** %16, align 8
  %82 = load %struct.conn**, %struct.conn*** @conns, align 8
  %83 = load i32, i32* %9, align 4
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds %struct.conn*, %struct.conn** %82, i64 %84
  store %struct.conn* %81, %struct.conn** %85, align 8
  br label %86

86:                                               ; preds = %75, %7
  %87 = load i32, i32* %13, align 4
  %88 = load %struct.conn*, %struct.conn** %16, align 8
  %89 = getelementptr inbounds %struct.conn, %struct.conn* %88, i32 0, i32 29
  store i32 %87, i32* %89, align 8
  %90 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 20), align 4
  %91 = load %struct.conn*, %struct.conn** %16, align 8
  %92 = getelementptr inbounds %struct.conn, %struct.conn* %91, i32 0, i32 28
  store i32 %90, i32* %92, align 4
  %93 = load i8*, i8** getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 9), align 8
  %94 = icmp ne i8* %93, null
  br i1 %94, label %98, label %95

95:                                               ; preds = %86
  %96 = load %struct.conn*, %struct.conn** %16, align 8
  %97 = getelementptr inbounds %struct.conn, %struct.conn* %96, i32 0, i32 33
  store i32 28, i32* %97, align 8
  br label %101

98:                                               ; preds = %86
  %99 = load %struct.conn*, %struct.conn** %16, align 8
  %100 = getelementptr inbounds %struct.conn, %struct.conn* %99, i32 0, i32 33
  store i32 0, i32* %100, align 8
  br label %101

101:                                              ; preds = %98, %95
  %102 = load i32, i32* %13, align 4
  %103 = icmp eq i32 %102, 1
  br i1 %103, label %104, label %124

104:                                              ; preds = %101
  %105 = load i32, i32* %10, align 4
  %106 = icmp eq i32 %105, 1
  br i1 %106, label %107, label %124

107:                                              ; preds = %104
  %108 = load i32, i32* %9, align 4
  %109 = bitcast %union.__SOCKADDR_ARG* %17 to %struct.sockaddr**
  %110 = load %struct.conn*, %struct.conn** %16, align 8
  %111 = getelementptr inbounds %struct.conn, %struct.conn* %110, i32 0, i32 32
  %112 = bitcast %struct.sockaddr_in6* %111 to %struct.sockaddr*
  store %struct.sockaddr* %112, %struct.sockaddr** %109, align 8
  %113 = load %struct.conn*, %struct.conn** %16, align 8
  %114 = getelementptr inbounds %struct.conn, %struct.conn* %113, i32 0, i32 33
  %115 = getelementptr inbounds %union.__SOCKADDR_ARG, %union.__SOCKADDR_ARG* %17, i32 0, i32 0
  %116 = load %struct.sockaddr*, %struct.sockaddr** %115, align 8
  %117 = call i32 @getpeername(i32 %108, %struct.sockaddr* %116, i32* %114) #14
  %118 = icmp ne i32 %117, 0
  br i1 %118, label %119, label %123

119:                                              ; preds = %107
  call void @perror(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i64 0, i64 0))
  %120 = load %struct.conn*, %struct.conn** %16, align 8
  %121 = getelementptr inbounds %struct.conn, %struct.conn* %120, i32 0, i32 32
  %122 = bitcast %struct.sockaddr_in6* %121 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %122, i8 0, i64 28, i1 false)
  br label %123

123:                                              ; preds = %119, %107
  br label %124

124:                                              ; preds = %123, %104, %101
  %125 = load i32, i32* %10, align 4
  %126 = icmp eq i32 %125, 1
  br i1 %126, label %127, label %152

127:                                              ; preds = %124
  br label %128

128:                                              ; preds = %127
  store %struct._logger* null, %struct._logger** %18, align 8
  %129 = load i32, i32* @logger_key, align 4
  %130 = call i8* @pthread_getspecific(i32 %129) #14
  %131 = bitcast i8* %130 to %struct._logger*
  store %struct._logger* %131, %struct._logger** %18, align 8
  %132 = load %struct._logger*, %struct._logger** %18, align 8
  %133 = getelementptr inbounds %struct._logger, %struct._logger* %132, i32 0, i32 8
  %134 = load i16, i16* %133, align 4
  %135 = zext i16 %134 to i32
  %136 = and i32 %135, 32
  %137 = icmp ne i32 %136, 0
  br i1 %137, label %138, label %150

138:                                              ; preds = %128
  %139 = load %struct._logger*, %struct._logger** %18, align 8
  %140 = load %struct.conn*, %struct.conn** %16, align 8
  %141 = getelementptr inbounds %struct.conn, %struct.conn* %140, i32 0, i32 32
  %142 = load %struct.conn*, %struct.conn** %16, align 8
  %143 = getelementptr inbounds %struct.conn, %struct.conn* %142, i32 0, i32 33
  %144 = load i32, i32* %143, align 8
  %145 = load %struct.conn*, %struct.conn** %16, align 8
  %146 = getelementptr inbounds %struct.conn, %struct.conn* %145, i32 0, i32 29
  %147 = load i32, i32* %146, align 8
  %148 = load i32, i32* %9, align 4
  %149 = call i32 (%struct._logger*, i32, i8*, ...) @logger_log(%struct._logger* %139, i32 6, i8* null, %struct.sockaddr_in6* %141, i32 %144, i32 %147, i32 0, i32 %148)
  br label %150

150:                                              ; preds = %138, %128
  br label %151

151:                                              ; preds = %150
  br label %152

152:                                              ; preds = %151, %124
  %153 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %154 = icmp sgt i32 %153, 1
  br i1 %154, label %155, label %212

155:                                              ; preds = %152
  %156 = load i32, i32* %10, align 4
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %158, label %166

158:                                              ; preds = %155
  %159 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %160 = load i32, i32* %9, align 4
  %161 = load %struct.conn*, %struct.conn** %16, align 8
  %162 = getelementptr inbounds %struct.conn, %struct.conn* %161, i32 0, i32 28
  %163 = load i32, i32* %162, align 4
  %164 = call i8* @prot_text(i32 %163)
  %165 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %159, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6, i64 0, i64 0), i32 %160, i8* %164)
  br label %211

166:                                              ; preds = %155
  %167 = load i32, i32* %13, align 4
  %168 = icmp eq i32 %167, 2
  br i1 %168, label %169, label %173

169:                                              ; preds = %166
  %170 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %171 = load i32, i32* %9, align 4
  %172 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %170, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.7, i64 0, i64 0), i32 %171)
  br label %210

173:                                              ; preds = %166
  %174 = load %struct.conn*, %struct.conn** %16, align 8
  %175 = getelementptr inbounds %struct.conn, %struct.conn* %174, i32 0, i32 28
  %176 = load i32, i32* %175, align 4
  %177 = icmp eq i32 %176, 5
  br i1 %177, label %178, label %182

178:                                              ; preds = %173
  %179 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %180 = load i32, i32* %9, align 4
  %181 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %179, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.8, i64 0, i64 0), i32 %180)
  br label %209

182:                                              ; preds = %173
  %183 = load %struct.conn*, %struct.conn** %16, align 8
  %184 = getelementptr inbounds %struct.conn, %struct.conn* %183, i32 0, i32 28
  %185 = load i32, i32* %184, align 4
  %186 = icmp eq i32 %185, 3
  br i1 %186, label %187, label %191

187:                                              ; preds = %182
  %188 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %189 = load i32, i32* %9, align 4
  %190 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %188, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.9, i64 0, i64 0), i32 %189)
  br label %208

191:                                              ; preds = %182
  %192 = load %struct.conn*, %struct.conn** %16, align 8
  %193 = getelementptr inbounds %struct.conn, %struct.conn* %192, i32 0, i32 28
  %194 = load i32, i32* %193, align 4
  %195 = icmp eq i32 %194, 4
  br i1 %195, label %196, label %200

196:                                              ; preds = %191
  %197 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %198 = load i32, i32* %9, align 4
  %199 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %197, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.10, i64 0, i64 0), i32 %198)
  br label %207

200:                                              ; preds = %191
  %201 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %202 = load i32, i32* %9, align 4
  %203 = load %struct.conn*, %struct.conn** %16, align 8
  %204 = getelementptr inbounds %struct.conn, %struct.conn* %203, i32 0, i32 28
  %205 = load i32, i32* %204, align 4
  %206 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %201, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.11, i64 0, i64 0), i32 %202, i32 %205)
  br label %207

207:                                              ; preds = %200, %196
  br label %208

208:                                              ; preds = %207, %187
  br label %209

209:                                              ; preds = %208, %178
  br label %210

210:                                              ; preds = %209, %169
  br label %211

211:                                              ; preds = %210, %158
  br label %212

212:                                              ; preds = %211, %152
  %213 = load i32, i32* %10, align 4
  %214 = load %struct.conn*, %struct.conn** %16, align 8
  %215 = getelementptr inbounds %struct.conn, %struct.conn* %214, i32 0, i32 9
  store i32 %213, i32* %215, align 4
  %216 = load %struct.conn*, %struct.conn** %16, align 8
  %217 = getelementptr inbounds %struct.conn, %struct.conn* %216, i32 0, i32 22
  store i32 0, i32* %217, align 8
  %218 = load %struct.conn*, %struct.conn** %16, align 8
  %219 = getelementptr inbounds %struct.conn, %struct.conn* %218, i32 0, i32 38
  store i16 -1, i16* %219, align 8
  %220 = load %struct.conn*, %struct.conn** %16, align 8
  %221 = getelementptr inbounds %struct.conn, %struct.conn* %220, i32 0, i32 18
  store i32 0, i32* %221, align 4
  %222 = load %struct.conn*, %struct.conn** %16, align 8
  %223 = getelementptr inbounds %struct.conn, %struct.conn* %222, i32 0, i32 15
  %224 = load i8*, i8** %223, align 8
  %225 = load %struct.conn*, %struct.conn** %16, align 8
  %226 = getelementptr inbounds %struct.conn, %struct.conn* %225, i32 0, i32 16
  store i8* %224, i8** %226, align 8
  %227 = load %struct.conn*, %struct.conn** %16, align 8
  %228 = getelementptr inbounds %struct.conn, %struct.conn* %227, i32 0, i32 21
  store i8* null, i8** %228, align 8
  %229 = load %struct.conn*, %struct.conn** %16, align 8
  %230 = getelementptr inbounds %struct.conn, %struct.conn* %229, i32 0, i32 7
  store i8 0, i8* %230, align 1
  %231 = load %struct.conn*, %struct.conn** %16, align 8
  %232 = getelementptr inbounds %struct.conn, %struct.conn* %231, i32 0, i32 8
  store i8 0, i8* %232, align 2
  %233 = load %struct.conn*, %struct.conn** %16, align 8
  %234 = getelementptr inbounds %struct.conn, %struct.conn* %233, i32 0, i32 2
  store i8 0, i8* %234, align 4
  %235 = load %struct.conn*, %struct.conn** %16, align 8
  %236 = getelementptr inbounds %struct.conn, %struct.conn* %235, i32 0, i32 4
  store i8 0, i8* %236, align 2
  %237 = load %struct.conn*, %struct.conn** %16, align 8
  %238 = getelementptr inbounds %struct.conn, %struct.conn* %237, i32 0, i32 5
  store i8 0, i8* %238, align 1
  %239 = load %struct.conn*, %struct.conn** %16, align 8
  %240 = getelementptr inbounds %struct.conn, %struct.conn* %239, i32 0, i32 6
  store i8 0, i8* %240, align 8
  %241 = load volatile i32, i32* @current_time, align 4
  %242 = load %struct.conn*, %struct.conn** %16, align 8
  %243 = getelementptr inbounds %struct.conn, %struct.conn* %242, i32 0, i32 11
  store i32 %241, i32* %243, align 4
  %244 = load %struct.conn*, %struct.conn** %16, align 8
  %245 = getelementptr inbounds %struct.conn, %struct.conn* %244, i32 0, i32 26
  %246 = getelementptr inbounds [3 x %struct.io_queue_s], [3 x %struct.io_queue_s]* %245, i64 0, i64 0
  %247 = bitcast %struct.io_queue_s* %246 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %247, i8 0, i64 72, i1 false)
  %248 = load %struct.conn*, %struct.conn** %16, align 8
  %249 = getelementptr inbounds %struct.conn, %struct.conn* %248, i32 0, i32 25
  store i32 0, i32* %249, align 4
  %250 = load %struct.conn*, %struct.conn** %16, align 8
  %251 = getelementptr inbounds %struct.conn, %struct.conn* %250, i32 0, i32 23
  store i8* null, i8** %251, align 8
  %252 = load %struct.conn*, %struct.conn** %16, align 8
  %253 = getelementptr inbounds %struct.conn, %struct.conn* %252, i32 0, i32 34
  store i8 0, i8* %253, align 4
  %254 = load %struct.conn*, %struct.conn** %16, align 8
  %255 = getelementptr inbounds %struct.conn, %struct.conn* %254, i32 0, i32 44
  store i64 (%struct.conn*, i8*, i64)* @tcp_read, i64 (%struct.conn*, i8*, i64)** %255, align 8
  %256 = load %struct.conn*, %struct.conn** %16, align 8
  %257 = getelementptr inbounds %struct.conn, %struct.conn* %256, i32 0, i32 45
  store i64 (%struct.conn*, %struct.msghdr*, i32)* @tcp_sendmsg, i64 (%struct.conn*, %struct.msghdr*, i32)** %257, align 8
  %258 = load %struct.conn*, %struct.conn** %16, align 8
  %259 = getelementptr inbounds %struct.conn, %struct.conn* %258, i32 0, i32 46
  store i64 (%struct.conn*, i8*, i64)* @tcp_write, i64 (%struct.conn*, i8*, i64)** %259, align 8
  %260 = load i32, i32* %13, align 4
  %261 = icmp eq i32 %260, 2
  br i1 %261, label %262, label %265

262:                                              ; preds = %212
  %263 = load %struct.conn*, %struct.conn** %16, align 8
  %264 = getelementptr inbounds %struct.conn, %struct.conn* %263, i32 0, i32 43
  store i32 (%struct.conn*)* @try_read_command_udp, i32 (%struct.conn*)** %264, align 8
  br label %292

265:                                              ; preds = %212
  %266 = load %struct.conn*, %struct.conn** %16, align 8
  %267 = getelementptr inbounds %struct.conn, %struct.conn* %266, i32 0, i32 28
  %268 = load i32, i32* %267, align 4
  switch i32 %268, label %291 [
    i32 3, label %269
    i32 4, label %283
    i32 5, label %288
  ]

269:                                              ; preds = %265
  %270 = load i8*, i8** getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 10), align 8
  %271 = icmp eq i8* %270, null
  br i1 %271, label %272, label %277

272:                                              ; preds = %269
  %273 = load %struct.conn*, %struct.conn** %16, align 8
  %274 = getelementptr inbounds %struct.conn, %struct.conn* %273, i32 0, i32 3
  store i8 1, i8* %274, align 1
  %275 = load %struct.conn*, %struct.conn** %16, align 8
  %276 = getelementptr inbounds %struct.conn, %struct.conn* %275, i32 0, i32 43
  store i32 (%struct.conn*)* @try_read_command_ascii, i32 (%struct.conn*)** %276, align 8
  br label %282

277:                                              ; preds = %269
  %278 = load %struct.conn*, %struct.conn** %16, align 8
  %279 = getelementptr inbounds %struct.conn, %struct.conn* %278, i32 0, i32 3
  store i8 0, i8* %279, align 1
  %280 = load %struct.conn*, %struct.conn** %16, align 8
  %281 = getelementptr inbounds %struct.conn, %struct.conn* %280, i32 0, i32 43
  store i32 (%struct.conn*)* @try_read_command_asciiauth, i32 (%struct.conn*)** %281, align 8
  br label %282

282:                                              ; preds = %277, %272
  br label %291

283:                                              ; preds = %265
  %284 = load %struct.conn*, %struct.conn** %16, align 8
  %285 = getelementptr inbounds %struct.conn, %struct.conn* %284, i32 0, i32 3
  store i8 0, i8* %285, align 1
  %286 = load %struct.conn*, %struct.conn** %16, align 8
  %287 = getelementptr inbounds %struct.conn, %struct.conn* %286, i32 0, i32 43
  store i32 (%struct.conn*)* @try_read_command_binary, i32 (%struct.conn*)** %287, align 8
  br label %291

288:                                              ; preds = %265
  %289 = load %struct.conn*, %struct.conn** %16, align 8
  %290 = getelementptr inbounds %struct.conn, %struct.conn* %289, i32 0, i32 43
  store i32 (%struct.conn*)* @try_read_command_negotiate, i32 (%struct.conn*)** %290, align 8
  br label %291

291:                                              ; preds = %265, %288, %283, %282
  br label %292

292:                                              ; preds = %291, %262
  %293 = load %struct.conn*, %struct.conn** %16, align 8
  %294 = getelementptr inbounds %struct.conn, %struct.conn* %293, i32 0, i32 12
  %295 = load i32, i32* %9, align 4
  %296 = load i32, i32* %11, align 4
  %297 = trunc i32 %296 to i16
  %298 = load %struct.conn*, %struct.conn** %16, align 8
  %299 = bitcast %struct.conn* %298 to i8*
  call void @event_set(%struct.event* %294, i32 %295, i16 signext %297, void (i32, i16, i8*)* @event_handler, i8* %299)
  %300 = load %struct.event_base*, %struct.event_base** %14, align 8
  %301 = load %struct.conn*, %struct.conn** %16, align 8
  %302 = getelementptr inbounds %struct.conn, %struct.conn* %301, i32 0, i32 12
  %303 = call i32 @event_base_set(%struct.event_base* %300, %struct.event* %302)
  %304 = load i32, i32* %11, align 4
  %305 = trunc i32 %304 to i16
  %306 = load %struct.conn*, %struct.conn** %16, align 8
  %307 = getelementptr inbounds %struct.conn, %struct.conn* %306, i32 0, i32 13
  store i16 %305, i16* %307, align 8
  %308 = load %struct.conn*, %struct.conn** %16, align 8
  %309 = getelementptr inbounds %struct.conn, %struct.conn* %308, i32 0, i32 12
  %310 = call i32 @event_add(%struct.event* %309, %struct.timeval* null)
  %311 = icmp eq i32 %310, -1
  br i1 %311, label %312, label %313

312:                                              ; preds = %292
  call void @perror(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0))
  store %struct.conn* null, %struct.conn** %8, align 8
  br label %319

313:                                              ; preds = %292
  call void @STATS_LOCK()
  %314 = load i64, i64* getelementptr inbounds (%struct.stats_state, %struct.stats_state* @stats_state, i32 0, i32 2), align 8
  %315 = add i64 %314, 1
  store i64 %315, i64* getelementptr inbounds (%struct.stats_state, %struct.stats_state* @stats_state, i32 0, i32 2), align 8
  %316 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 1), align 8
  %317 = add i64 %316, 1
  store i64 %317, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 1), align 8
  call void @STATS_UNLOCK()
  %318 = load %struct.conn*, %struct.conn** %16, align 8
  store %struct.conn* %318, %struct.conn** %8, align 8
  br label %319

319:                                              ; preds = %313, %312, %69, %30
  %320 = load %struct.conn*, %struct.conn** %8, align 8
  ret %struct.conn* %320
}

; Function Attrs: nounwind
declare dso_local noalias i8* @calloc(i64, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @conn_free(%struct.conn* %0) #0 {
  %2 = alloca %struct.conn*, align 8
  store %struct.conn* %0, %struct.conn** %2, align 8
  %3 = load %struct.conn*, %struct.conn** %2, align 8
  %4 = icmp ne %struct.conn* %3, null
  br i1 %4, label %5, label %23

5:                                                ; preds = %1
  %6 = load %struct.conn**, %struct.conn*** @conns, align 8
  %7 = load %struct.conn*, %struct.conn** %2, align 8
  %8 = getelementptr inbounds %struct.conn, %struct.conn* %7, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds %struct.conn*, %struct.conn** %6, i64 %10
  store %struct.conn* null, %struct.conn** %11, align 8
  %12 = load %struct.conn*, %struct.conn** %2, align 8
  %13 = getelementptr inbounds %struct.conn, %struct.conn* %12, i32 0, i32 15
  %14 = load i8*, i8** %13, align 8
  %15 = icmp ne i8* %14, null
  br i1 %15, label %16, label %20

16:                                               ; preds = %5
  %17 = load %struct.conn*, %struct.conn** %2, align 8
  %18 = getelementptr inbounds %struct.conn, %struct.conn* %17, i32 0, i32 15
  %19 = load i8*, i8** %18, align 8
  call void @free(i8* %19) #14
  br label %20

20:                                               ; preds = %16, %5
  %21 = load %struct.conn*, %struct.conn** %2, align 8
  %22 = bitcast %struct.conn* %21 to i8*
  call void @free(i8* %22) #14
  br label %23

23:                                               ; preds = %20, %1
  ret void
}

; Function Attrs: nounwind
declare dso_local i32 @getpeername(i32, %struct.sockaddr*, i32*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @prot_text(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  store i32 %0, i32* %2, align 4
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.358, i64 0, i64 0), i8** %3, align 8
  %4 = load i32, i32* %2, align 4
  switch i32 %4, label %8 [
    i32 3, label %5
    i32 4, label %6
    i32 5, label %7
  ]

5:                                                ; preds = %1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14, i64 0, i64 0), i8** %3, align 8
  br label %8

6:                                                ; preds = %1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.13, i64 0, i64 0), i8** %3, align 8
  br label %8

7:                                                ; preds = %1
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.359, i64 0, i64 0), i8** %3, align 8
  br label %8

8:                                                ; preds = %1, %7, %6, %5
  %9 = load i8*, i8** %3, align 8
  ret i8* %9
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @tcp_read(%struct.conn* %0, i8* %1, i64 %2) #0 {
  %4 = alloca %struct.conn*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  store %struct.conn* %0, %struct.conn** %4, align 8
  store i8* %1, i8** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %struct.conn*, %struct.conn** %4, align 8
  %8 = getelementptr inbounds %struct.conn, %struct.conn* %7, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = load i8*, i8** %5, align 8
  %11 = load i64, i64* %6, align 8
  %12 = call i64 @read(i32 %9, i8* %10, i64 %11)
  ret i64 %12
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @tcp_sendmsg(%struct.conn* %0, %struct.msghdr* %1, i32 %2) #0 {
  %4 = alloca %struct.conn*, align 8
  %5 = alloca %struct.msghdr*, align 8
  %6 = alloca i32, align 4
  store %struct.conn* %0, %struct.conn** %4, align 8
  store %struct.msghdr* %1, %struct.msghdr** %5, align 8
  store i32 %2, i32* %6, align 4
  %7 = load %struct.conn*, %struct.conn** %4, align 8
  %8 = getelementptr inbounds %struct.conn, %struct.conn* %7, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = load %struct.msghdr*, %struct.msghdr** %5, align 8
  %11 = load i32, i32* %6, align 4
  %12 = call i64 @sendmsg(i32 %9, %struct.msghdr* %10, i32 %11)
  ret i64 %12
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @tcp_write(%struct.conn* %0, i8* %1, i64 %2) #0 {
  %4 = alloca %struct.conn*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  store %struct.conn* %0, %struct.conn** %4, align 8
  store i8* %1, i8** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %struct.conn*, %struct.conn** %4, align 8
  %8 = getelementptr inbounds %struct.conn, %struct.conn* %7, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = load i8*, i8** %5, align 8
  %11 = load i64, i64* %6, align 8
  %12 = call i64 @write(i32 %9, i8* %10, i64 %11)
  ret i64 %12
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @try_read_command_udp(%struct.conn* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.conn*, align 8
  store %struct.conn* %0, %struct.conn** %3, align 8
  %4 = load %struct.conn*, %struct.conn** %3, align 8
  %5 = getelementptr inbounds %struct.conn, %struct.conn* %4, i32 0, i32 15
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds i8, i8* %6, i64 0
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i32
  %10 = icmp eq i32 %9, 128
  br i1 %10, label %11, label %16

11:                                               ; preds = %1
  %12 = load %struct.conn*, %struct.conn** %3, align 8
  %13 = getelementptr inbounds %struct.conn, %struct.conn* %12, i32 0, i32 28
  store i32 4, i32* %13, align 4
  %14 = load %struct.conn*, %struct.conn** %3, align 8
  %15 = call i32 @try_read_command_binary(%struct.conn* %14)
  store i32 %15, i32* %2, align 4
  br label %21

16:                                               ; preds = %1
  %17 = load %struct.conn*, %struct.conn** %3, align 8
  %18 = getelementptr inbounds %struct.conn, %struct.conn* %17, i32 0, i32 28
  store i32 3, i32* %18, align 4
  %19 = load %struct.conn*, %struct.conn** %3, align 8
  %20 = call i32 @try_read_command_ascii(%struct.conn* %19)
  store i32 %20, i32* %2, align 4
  br label %21

21:                                               ; preds = %16, %11
  %22 = load i32, i32* %2, align 4
  ret i32 %22
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @try_read_command_negotiate(%struct.conn* %0) #0 {
  %2 = alloca %struct.conn*, align 8
  store %struct.conn* %0, %struct.conn** %2, align 8
  %3 = load %struct.conn*, %struct.conn** %2, align 8
  %4 = getelementptr inbounds %struct.conn, %struct.conn* %3, i32 0, i32 15
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds i8, i8* %5, i64 0
  %7 = load i8, i8* %6, align 1
  %8 = zext i8 %7 to i32
  %9 = icmp eq i32 %8, 128
  br i1 %9, label %10, label %15

10:                                               ; preds = %1
  %11 = load %struct.conn*, %struct.conn** %2, align 8
  %12 = getelementptr inbounds %struct.conn, %struct.conn* %11, i32 0, i32 28
  store i32 4, i32* %12, align 4
  %13 = load %struct.conn*, %struct.conn** %2, align 8
  %14 = getelementptr inbounds %struct.conn, %struct.conn* %13, i32 0, i32 43
  store i32 (%struct.conn*)* @try_read_command_binary, i32 (%struct.conn*)** %14, align 8
  br label %20

15:                                               ; preds = %1
  %16 = load %struct.conn*, %struct.conn** %2, align 8
  %17 = getelementptr inbounds %struct.conn, %struct.conn* %16, i32 0, i32 28
  store i32 3, i32* %17, align 4
  %18 = load %struct.conn*, %struct.conn** %2, align 8
  %19 = getelementptr inbounds %struct.conn, %struct.conn* %18, i32 0, i32 43
  store i32 (%struct.conn*)* @try_read_command_ascii, i32 (%struct.conn*)** %19, align 8
  br label %20

20:                                               ; preds = %15, %10
  %21 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %22 = icmp sgt i32 %21, 1
  br i1 %22, label %23, label %33

23:                                               ; preds = %20
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %25 = load %struct.conn*, %struct.conn** %2, align 8
  %26 = getelementptr inbounds %struct.conn, %struct.conn* %25, i32 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = load %struct.conn*, %struct.conn** %2, align 8
  %29 = getelementptr inbounds %struct.conn, %struct.conn* %28, i32 0, i32 28
  %30 = load i32, i32* %29, align 4
  %31 = call i8* @prot_text(i32 %30)
  %32 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %24, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.389, i64 0, i64 0), i32 %27, i8* %31)
  br label %33

33:                                               ; preds = %23, %20
  %34 = load %struct.conn*, %struct.conn** %2, align 8
  %35 = getelementptr inbounds %struct.conn, %struct.conn* %34, i32 0, i32 43
  %36 = load i32 (%struct.conn*)*, i32 (%struct.conn*)** %35, align 8
  %37 = load %struct.conn*, %struct.conn** %2, align 8
  %38 = call i32 %36(%struct.conn* %37)
  ret i32 %38
}

declare dso_local i64 @read(i32, i8*, i64) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @conn_close_all() #0 {
  %1 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  br label %2

2:                                                ; preds = %29, %0
  %3 = load i32, i32* %1, align 4
  %4 = load i32, i32* @max_fds, align 4
  %5 = icmp slt i32 %3, %4
  br i1 %5, label %6, label %32

6:                                                ; preds = %2
  %7 = load %struct.conn**, %struct.conn*** @conns, align 8
  %8 = load i32, i32* %1, align 4
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds %struct.conn*, %struct.conn** %7, i64 %9
  %11 = load %struct.conn*, %struct.conn** %10, align 8
  %12 = icmp ne %struct.conn* %11, null
  br i1 %12, label %13, label %28

13:                                               ; preds = %6
  %14 = load %struct.conn**, %struct.conn*** @conns, align 8
  %15 = load i32, i32* %1, align 4
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds %struct.conn*, %struct.conn** %14, i64 %16
  %18 = load %struct.conn*, %struct.conn** %17, align 8
  %19 = getelementptr inbounds %struct.conn, %struct.conn* %18, i32 0, i32 9
  %20 = load i32, i32* %19, align 4
  %21 = icmp ne i32 %20, 10
  br i1 %21, label %22, label %28

22:                                               ; preds = %13
  %23 = load %struct.conn**, %struct.conn*** @conns, align 8
  %24 = load i32, i32* %1, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds %struct.conn*, %struct.conn** %23, i64 %25
  %27 = load %struct.conn*, %struct.conn** %26, align 8
  call void @conn_close(%struct.conn* %27)
  br label %28

28:                                               ; preds = %22, %13, %6
  br label %29

29:                                               ; preds = %28
  %30 = load i32, i32* %1, align 4
  %31 = add nsw i32 %30, 1
  store i32 %31, i32* %1, align 4
  br label %2, !llvm.loop !19

32:                                               ; preds = %2
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @resp_add_chunked_iov(%struct._mc_resp* %0, i8* %1, i32 %2) #0 {
  %4 = alloca %struct._mc_resp*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  store %struct._mc_resp* %0, %struct._mc_resp** %4, align 8
  store i8* %1, i8** %5, align 8
  store i32 %2, i32* %6, align 4
  %7 = load %struct._mc_resp*, %struct._mc_resp** %4, align 8
  %8 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %7, i32 0, i32 9
  %9 = load i8, i8* %8, align 4
  %10 = load %struct._mc_resp*, %struct._mc_resp** %4, align 8
  %11 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %10, i32 0, i32 10
  store i8 %9, i8* %11, align 1
  %12 = load i32, i32* %6, align 4
  %13 = load %struct._mc_resp*, %struct._mc_resp** %4, align 8
  %14 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %13, i32 0, i32 8
  store i32 %12, i32* %14, align 8
  %15 = load %struct._mc_resp*, %struct._mc_resp** %4, align 8
  %16 = load i8*, i8** %5, align 8
  %17 = load i32, i32* %6, align 4
  call void @resp_add_iov(%struct._mc_resp* %15, i8* %16, i32 %17)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @resp_start(%struct.conn* %0) #0 {
  %2 = alloca i1, align 1
  %3 = alloca %struct.conn*, align 8
  %4 = alloca %struct._mc_resp*, align 8
  store %struct.conn* %0, %struct.conn** %3, align 8
  %5 = load %struct.conn*, %struct.conn** %3, align 8
  %6 = call %struct._mc_resp* @resp_allocate(%struct.conn* %5)
  store %struct._mc_resp* %6, %struct._mc_resp** %4, align 8
  %7 = load %struct._mc_resp*, %struct._mc_resp** %4, align 8
  %8 = icmp ne %struct._mc_resp* %7, null
  br i1 %8, label %29, label %9

9:                                                ; preds = %1
  %10 = load %struct.conn*, %struct.conn** %3, align 8
  %11 = getelementptr inbounds %struct.conn, %struct.conn* %10, i32 0, i32 42
  %12 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %11, align 8
  %13 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %12, i32 0, i32 4
  %14 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %13, i32 0, i32 0
  %15 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %14) #14
  %16 = load %struct.conn*, %struct.conn** %3, align 8
  %17 = getelementptr inbounds %struct.conn, %struct.conn* %16, i32 0, i32 42
  %18 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %17, align 8
  %19 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %18, i32 0, i32 4
  %20 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %19, i32 0, i32 19
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %20, align 8
  %23 = load %struct.conn*, %struct.conn** %3, align 8
  %24 = getelementptr inbounds %struct.conn, %struct.conn* %23, i32 0, i32 42
  %25 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %24, align 8
  %26 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %25, i32 0, i32 4
  %27 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %26, i32 0, i32 0
  %28 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %27) #14
  store i1 false, i1* %2, align 1
  br label %108

29:                                               ; preds = %1
  %30 = load %struct.conn*, %struct.conn** %3, align 8
  %31 = getelementptr inbounds %struct.conn, %struct.conn* %30, i32 0, i32 42
  %32 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %31, align 8
  %33 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %32, i32 0, i32 4
  %34 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %33, i32 0, i32 0
  %35 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %34) #14
  %36 = load %struct.conn*, %struct.conn** %3, align 8
  %37 = getelementptr inbounds %struct.conn, %struct.conn* %36, i32 0, i32 42
  %38 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %37, align 8
  %39 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %38, i32 0, i32 4
  %40 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %39, i32 0, i32 20
  %41 = load i64, i64* %40, align 8
  %42 = add i64 %41, 1
  store i64 %42, i64* %40, align 8
  %43 = load %struct.conn*, %struct.conn** %3, align 8
  %44 = getelementptr inbounds %struct.conn, %struct.conn* %43, i32 0, i32 42
  %45 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %44, align 8
  %46 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %45, i32 0, i32 4
  %47 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %46, i32 0, i32 0
  %48 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %47) #14
  %49 = load %struct._mc_resp*, %struct._mc_resp** %4, align 8
  %50 = bitcast %struct._mc_resp* %49 to i8*
  %51 = getelementptr inbounds i8, i8* %50, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %51, i8 0, i64 1176, i1 false)
  %52 = load %struct.conn*, %struct.conn** %3, align 8
  %53 = getelementptr inbounds %struct.conn, %struct.conn* %52, i32 0, i32 20
  %54 = load %struct._mc_resp*, %struct._mc_resp** %53, align 8
  %55 = icmp ne %struct._mc_resp* %54, null
  br i1 %55, label %60, label %56

56:                                               ; preds = %29
  %57 = load %struct._mc_resp*, %struct._mc_resp** %4, align 8
  %58 = load %struct.conn*, %struct.conn** %3, align 8
  %59 = getelementptr inbounds %struct.conn, %struct.conn* %58, i32 0, i32 20
  store %struct._mc_resp* %57, %struct._mc_resp** %59, align 8
  br label %60

60:                                               ; preds = %56, %29
  %61 = load %struct.conn*, %struct.conn** %3, align 8
  %62 = getelementptr inbounds %struct.conn, %struct.conn* %61, i32 0, i32 19
  %63 = load %struct._mc_resp*, %struct._mc_resp** %62, align 8
  %64 = icmp ne %struct._mc_resp* %63, null
  br i1 %64, label %69, label %65

65:                                               ; preds = %60
  %66 = load %struct._mc_resp*, %struct._mc_resp** %4, align 8
  %67 = load %struct.conn*, %struct.conn** %3, align 8
  %68 = getelementptr inbounds %struct.conn, %struct.conn* %67, i32 0, i32 19
  store %struct._mc_resp* %66, %struct._mc_resp** %68, align 8
  br label %78

69:                                               ; preds = %60
  %70 = load %struct._mc_resp*, %struct._mc_resp** %4, align 8
  %71 = load %struct.conn*, %struct.conn** %3, align 8
  %72 = getelementptr inbounds %struct.conn, %struct.conn* %71, i32 0, i32 19
  %73 = load %struct._mc_resp*, %struct._mc_resp** %72, align 8
  %74 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %73, i32 0, i32 1
  store %struct._mc_resp* %70, %struct._mc_resp** %74, align 8
  %75 = load %struct._mc_resp*, %struct._mc_resp** %4, align 8
  %76 = load %struct.conn*, %struct.conn** %3, align 8
  %77 = getelementptr inbounds %struct.conn, %struct.conn* %76, i32 0, i32 19
  store %struct._mc_resp* %75, %struct._mc_resp** %77, align 8
  br label %78

78:                                               ; preds = %69, %65
  %79 = load %struct.conn*, %struct.conn** %3, align 8
  %80 = getelementptr inbounds %struct.conn, %struct.conn* %79, i32 0, i32 29
  %81 = load i32, i32* %80, align 8
  %82 = icmp eq i32 %81, 2
  br i1 %82, label %83, label %107

83:                                               ; preds = %78
  %84 = load %struct.conn*, %struct.conn** %3, align 8
  %85 = getelementptr inbounds %struct.conn, %struct.conn* %84, i32 0, i32 31
  %86 = load i32, i32* %85, align 8
  %87 = trunc i32 %86 to i16
  %88 = load %struct.conn*, %struct.conn** %3, align 8
  %89 = getelementptr inbounds %struct.conn, %struct.conn* %88, i32 0, i32 19
  %90 = load %struct._mc_resp*, %struct._mc_resp** %89, align 8
  %91 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %90, i32 0, i32 13
  store i16 %87, i16* %91, align 8
  %92 = load %struct.conn*, %struct.conn** %3, align 8
  %93 = getelementptr inbounds %struct.conn, %struct.conn* %92, i32 0, i32 19
  %94 = load %struct._mc_resp*, %struct._mc_resp** %93, align 8
  %95 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %94, i32 0, i32 16
  %96 = load %struct.conn*, %struct.conn** %3, align 8
  %97 = getelementptr inbounds %struct.conn, %struct.conn* %96, i32 0, i32 32
  %98 = bitcast %struct.sockaddr_in6* %95 to i8*
  %99 = bitcast %struct.sockaddr_in6* %97 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %98, i8* align 4 %99, i64 28, i1 false)
  %100 = load %struct.conn*, %struct.conn** %3, align 8
  %101 = getelementptr inbounds %struct.conn, %struct.conn* %100, i32 0, i32 33
  %102 = load i32, i32* %101, align 8
  %103 = load %struct.conn*, %struct.conn** %3, align 8
  %104 = getelementptr inbounds %struct.conn, %struct.conn* %103, i32 0, i32 19
  %105 = load %struct._mc_resp*, %struct._mc_resp** %104, align 8
  %106 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %105, i32 0, i32 17
  store i32 %102, i32* %106, align 4
  br label %107

107:                                              ; preds = %83, %78
  store i1 true, i1* %2, align 1
  br label %108

108:                                              ; preds = %107, %9
  %109 = load i1, i1* %2, align 1
  ret i1 %109
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct._mc_resp* @resp_allocate(%struct.conn* %0) #0 {
  %2 = alloca %struct._mc_resp*, align 8
  %3 = alloca %struct.conn*, align 8
  %4 = alloca %struct.LIBEVENT_THREAD*, align 8
  %5 = alloca %struct._mc_resp*, align 8
  %6 = alloca %struct._mc_resp_bundle*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store %struct.conn* %0, %struct.conn** %3, align 8
  %10 = load %struct.conn*, %struct.conn** %3, align 8
  %11 = getelementptr inbounds %struct.conn, %struct.conn* %10, i32 0, i32 42
  %12 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %11, align 8
  store %struct.LIBEVENT_THREAD* %12, %struct.LIBEVENT_THREAD** %4, align 8
  store %struct._mc_resp* null, %struct._mc_resp** %5, align 8
  %13 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %4, align 8
  %14 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %13, i32 0, i32 8
  %15 = load %struct._mc_resp_bundle*, %struct._mc_resp_bundle** %14, align 8
  store %struct._mc_resp_bundle* %15, %struct._mc_resp_bundle** %6, align 8
  %16 = load %struct._mc_resp_bundle*, %struct._mc_resp_bundle** %6, align 8
  %17 = icmp ne %struct._mc_resp_bundle* %16, null
  br i1 %17, label %18, label %91

18:                                               ; preds = %1
  store i32 0, i32* %7, align 4
  br label %19

19:                                               ; preds = %53, %18
  %20 = load i32, i32* %7, align 4
  %21 = sext i32 %20 to i64
  %22 = icmp ult i64 %21, 13
  br i1 %22, label %23, label %56

23:                                               ; preds = %19
  %24 = load i32, i32* %7, align 4
  %25 = load %struct._mc_resp_bundle*, %struct._mc_resp_bundle** %6, align 8
  %26 = getelementptr inbounds %struct._mc_resp_bundle, %struct._mc_resp_bundle* %25, i32 0, i32 1
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i32
  %29 = add nsw i32 %24, %28
  %30 = sext i32 %29 to i64
  %31 = urem i64 %30, 13
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %8, align 4
  %33 = load %struct._mc_resp_bundle*, %struct._mc_resp_bundle** %6, align 8
  %34 = getelementptr inbounds %struct._mc_resp_bundle, %struct._mc_resp_bundle* %33, i32 0, i32 4
  %35 = load i32, i32* %8, align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds [0 x %struct._mc_resp], [0 x %struct._mc_resp]* %34, i64 0, i64 %36
  %38 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %37, i32 0, i32 12
  %39 = load i8, i8* %38, align 1
  %40 = trunc i8 %39 to i1
  br i1 %40, label %41, label %52

41:                                               ; preds = %23
  %42 = load %struct._mc_resp_bundle*, %struct._mc_resp_bundle** %6, align 8
  %43 = getelementptr inbounds %struct._mc_resp_bundle, %struct._mc_resp_bundle* %42, i32 0, i32 4
  %44 = load i32, i32* %8, align 4
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds [0 x %struct._mc_resp], [0 x %struct._mc_resp]* %43, i64 0, i64 %45
  store %struct._mc_resp* %46, %struct._mc_resp** %5, align 8
  %47 = load i32, i32* %8, align 4
  %48 = add nsw i32 %47, 1
  %49 = trunc i32 %48 to i8
  %50 = load %struct._mc_resp_bundle*, %struct._mc_resp_bundle** %6, align 8
  %51 = getelementptr inbounds %struct._mc_resp_bundle, %struct._mc_resp_bundle* %50, i32 0, i32 1
  store i8 %49, i8* %51, align 1
  br label %56

52:                                               ; preds = %23
  br label %53

53:                                               ; preds = %52
  %54 = load i32, i32* %7, align 4
  %55 = add nsw i32 %54, 1
  store i32 %55, i32* %7, align 4
  br label %19, !llvm.loop !20

56:                                               ; preds = %41, %19
  %57 = load %struct._mc_resp*, %struct._mc_resp** %5, align 8
  %58 = icmp ne %struct._mc_resp* %57, null
  br i1 %58, label %59, label %90

59:                                               ; preds = %56
  %60 = load %struct._mc_resp_bundle*, %struct._mc_resp_bundle** %6, align 8
  %61 = getelementptr inbounds %struct._mc_resp_bundle, %struct._mc_resp_bundle* %60, i32 0, i32 0
  %62 = load i8, i8* %61, align 8
  %63 = add i8 %62, 1
  store i8 %63, i8* %61, align 8
  %64 = load %struct._mc_resp*, %struct._mc_resp** %5, align 8
  %65 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %64, i32 0, i32 12
  store i8 0, i8* %65, align 1
  %66 = load %struct._mc_resp_bundle*, %struct._mc_resp_bundle** %6, align 8
  %67 = getelementptr inbounds %struct._mc_resp_bundle, %struct._mc_resp_bundle* %66, i32 0, i32 0
  %68 = load i8, i8* %67, align 8
  %69 = zext i8 %68 to i64
  %70 = icmp eq i64 %69, 13
  br i1 %70, label %71, label %89

71:                                               ; preds = %59
  %72 = load %struct._mc_resp_bundle*, %struct._mc_resp_bundle** %6, align 8
  %73 = getelementptr inbounds %struct._mc_resp_bundle, %struct._mc_resp_bundle* %72, i32 0, i32 2
  %74 = load %struct._mc_resp_bundle*, %struct._mc_resp_bundle** %73, align 8
  %75 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %4, align 8
  %76 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %75, i32 0, i32 8
  store %struct._mc_resp_bundle* %74, %struct._mc_resp_bundle** %76, align 8
  %77 = load %struct._mc_resp_bundle*, %struct._mc_resp_bundle** %6, align 8
  %78 = getelementptr inbounds %struct._mc_resp_bundle, %struct._mc_resp_bundle* %77, i32 0, i32 2
  %79 = load %struct._mc_resp_bundle*, %struct._mc_resp_bundle** %78, align 8
  %80 = icmp ne %struct._mc_resp_bundle* %79, null
  br i1 %80, label %81, label %88

81:                                               ; preds = %71
  %82 = load %struct._mc_resp_bundle*, %struct._mc_resp_bundle** %6, align 8
  %83 = getelementptr inbounds %struct._mc_resp_bundle, %struct._mc_resp_bundle* %82, i32 0, i32 2
  %84 = load %struct._mc_resp_bundle*, %struct._mc_resp_bundle** %83, align 8
  %85 = getelementptr inbounds %struct._mc_resp_bundle, %struct._mc_resp_bundle* %84, i32 0, i32 3
  store %struct._mc_resp_bundle* null, %struct._mc_resp_bundle** %85, align 8
  %86 = load %struct._mc_resp_bundle*, %struct._mc_resp_bundle** %6, align 8
  %87 = getelementptr inbounds %struct._mc_resp_bundle, %struct._mc_resp_bundle* %86, i32 0, i32 2
  store %struct._mc_resp_bundle* null, %struct._mc_resp_bundle** %87, align 8
  br label %88

88:                                               ; preds = %81, %71
  br label %89

89:                                               ; preds = %88, %59
  br label %90

90:                                               ; preds = %89, %56
  br label %91

91:                                               ; preds = %90, %1
  %92 = load %struct._mc_resp*, %struct._mc_resp** %5, align 8
  %93 = icmp eq %struct._mc_resp* %92, null
  br i1 %93, label %94, label %162

94:                                               ; preds = %91
  %95 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %4, align 8
  %96 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %95, i32 0, i32 7
  %97 = load %struct.cache_t*, %struct.cache_t** %96, align 8
  %98 = call i8* @do_cache_alloc(%struct.cache_t* %97)
  %99 = bitcast i8* %98 to %struct._mc_resp_bundle*
  store %struct._mc_resp_bundle* %99, %struct._mc_resp_bundle** %6, align 8
  %100 = load %struct._mc_resp_bundle*, %struct._mc_resp_bundle** %6, align 8
  %101 = icmp ne %struct._mc_resp_bundle* %100, null
  br i1 %101, label %102, label %160

102:                                              ; preds = %94
  %103 = load %struct.conn*, %struct.conn** %3, align 8
  %104 = getelementptr inbounds %struct.conn, %struct.conn* %103, i32 0, i32 42
  %105 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %104, align 8
  %106 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %105, i32 0, i32 4
  %107 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %106, i32 0, i32 0
  %108 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %107) #14
  %109 = load %struct.conn*, %struct.conn** %3, align 8
  %110 = getelementptr inbounds %struct.conn, %struct.conn* %109, i32 0, i32 42
  %111 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %110, align 8
  %112 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %111, i32 0, i32 4
  %113 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %112, i32 0, i32 21
  %114 = load i64, i64* %113, align 8
  %115 = add i64 %114, 16384
  store i64 %115, i64* %113, align 8
  %116 = load %struct.conn*, %struct.conn** %3, align 8
  %117 = getelementptr inbounds %struct.conn, %struct.conn* %116, i32 0, i32 42
  %118 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %117, align 8
  %119 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %118, i32 0, i32 4
  %120 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %119, i32 0, i32 0
  %121 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %120) #14
  %122 = load %struct._mc_resp_bundle*, %struct._mc_resp_bundle** %6, align 8
  %123 = getelementptr inbounds %struct._mc_resp_bundle, %struct._mc_resp_bundle* %122, i32 0, i32 1
  store i8 1, i8* %123, align 1
  %124 = load %struct._mc_resp_bundle*, %struct._mc_resp_bundle** %6, align 8
  %125 = getelementptr inbounds %struct._mc_resp_bundle, %struct._mc_resp_bundle* %124, i32 0, i32 0
  store i8 1, i8* %125, align 8
  store i32 0, i32* %9, align 4
  br label %126

126:                                              ; preds = %144, %102
  %127 = load i32, i32* %9, align 4
  %128 = sext i32 %127 to i64
  %129 = icmp ult i64 %128, 13
  br i1 %129, label %130, label %147

130:                                              ; preds = %126
  %131 = load %struct._mc_resp_bundle*, %struct._mc_resp_bundle** %6, align 8
  %132 = load %struct._mc_resp_bundle*, %struct._mc_resp_bundle** %6, align 8
  %133 = getelementptr inbounds %struct._mc_resp_bundle, %struct._mc_resp_bundle* %132, i32 0, i32 4
  %134 = load i32, i32* %9, align 4
  %135 = sext i32 %134 to i64
  %136 = getelementptr inbounds [0 x %struct._mc_resp], [0 x %struct._mc_resp]* %133, i64 0, i64 %135
  %137 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %136, i32 0, i32 0
  store %struct._mc_resp_bundle* %131, %struct._mc_resp_bundle** %137, align 8
  %138 = load %struct._mc_resp_bundle*, %struct._mc_resp_bundle** %6, align 8
  %139 = getelementptr inbounds %struct._mc_resp_bundle, %struct._mc_resp_bundle* %138, i32 0, i32 4
  %140 = load i32, i32* %9, align 4
  %141 = sext i32 %140 to i64
  %142 = getelementptr inbounds [0 x %struct._mc_resp], [0 x %struct._mc_resp]* %139, i64 0, i64 %141
  %143 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %142, i32 0, i32 12
  store i8 1, i8* %143, align 1
  br label %144

144:                                              ; preds = %130
  %145 = load i32, i32* %9, align 4
  %146 = add nsw i32 %145, 1
  store i32 %146, i32* %9, align 4
  br label %126, !llvm.loop !21

147:                                              ; preds = %126
  %148 = load %struct._mc_resp_bundle*, %struct._mc_resp_bundle** %6, align 8
  %149 = getelementptr inbounds %struct._mc_resp_bundle, %struct._mc_resp_bundle* %148, i32 0, i32 2
  store %struct._mc_resp_bundle* null, %struct._mc_resp_bundle** %149, align 8
  %150 = load %struct._mc_resp_bundle*, %struct._mc_resp_bundle** %6, align 8
  %151 = getelementptr inbounds %struct._mc_resp_bundle, %struct._mc_resp_bundle* %150, i32 0, i32 3
  store %struct._mc_resp_bundle* null, %struct._mc_resp_bundle** %151, align 8
  %152 = load %struct._mc_resp_bundle*, %struct._mc_resp_bundle** %6, align 8
  %153 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %4, align 8
  %154 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %153, i32 0, i32 8
  store %struct._mc_resp_bundle* %152, %struct._mc_resp_bundle** %154, align 8
  %155 = load %struct._mc_resp_bundle*, %struct._mc_resp_bundle** %6, align 8
  %156 = getelementptr inbounds %struct._mc_resp_bundle, %struct._mc_resp_bundle* %155, i32 0, i32 4
  %157 = getelementptr inbounds [0 x %struct._mc_resp], [0 x %struct._mc_resp]* %156, i64 0, i64 0
  store %struct._mc_resp* %157, %struct._mc_resp** %5, align 8
  %158 = load %struct._mc_resp*, %struct._mc_resp** %5, align 8
  %159 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %158, i32 0, i32 12
  store i8 0, i8* %159, align 1
  br label %161

160:                                              ; preds = %94
  store %struct._mc_resp* null, %struct._mc_resp** %2, align 8
  br label %164

161:                                              ; preds = %147
  br label %162

162:                                              ; preds = %161, %91
  %163 = load %struct._mc_resp*, %struct._mc_resp** %5, align 8
  store %struct._mc_resp* %163, %struct._mc_resp** %2, align 8
  br label %164

164:                                              ; preds = %162, %160
  %165 = load %struct._mc_resp*, %struct._mc_resp** %2, align 8
  ret %struct._mc_resp* %165
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @resp_has_stack(%struct.conn* %0) #0 {
  %2 = alloca %struct.conn*, align 8
  store %struct.conn* %0, %struct.conn** %2, align 8
  %3 = load %struct.conn*, %struct.conn** %2, align 8
  %4 = getelementptr inbounds %struct.conn, %struct.conn* %3, i32 0, i32 20
  %5 = load %struct._mc_resp*, %struct._mc_resp** %4, align 8
  %6 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %5, i32 0, i32 1
  %7 = load %struct._mc_resp*, %struct._mc_resp** %6, align 8
  %8 = icmp ne %struct._mc_resp* %7, null
  %9 = zext i1 %8 to i64
  %10 = select i1 %8, i32 1, i32 0
  %11 = icmp ne i32 %10, 0
  ret i1 %11
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @out_errstring(%struct.conn* %0, i8* %1) #0 {
  %3 = alloca %struct.conn*, align 8
  %4 = alloca i8*, align 8
  store %struct.conn* %0, %struct.conn** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load %struct.conn*, %struct.conn** %3, align 8
  %6 = getelementptr inbounds %struct.conn, %struct.conn* %5, i32 0, i32 34
  store i8 0, i8* %6, align 4
  %7 = load %struct.conn*, %struct.conn** %3, align 8
  %8 = load i8*, i8** %4, align 8
  call void @out_string(%struct.conn* %7, i8* %8)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @append_stats(i8* %0, i16 zeroext %1, i8* %2, i32 %3, i8* %4) #0 {
  %6 = alloca i8*, align 8
  %7 = alloca i16, align 2
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca %struct.conn*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  store i8* %0, i8** %6, align 8
  store i16 %1, i16* %7, align 2
  store i8* %2, i8** %8, align 8
  store i32 %3, i32* %9, align 4
  store i8* %4, i8** %10, align 8
  %14 = load i16, i16* %7, align 2
  %15 = zext i16 %14 to i32
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %21

17:                                               ; preds = %5
  %18 = load i32, i32* %9, align 4
  %19 = icmp ugt i32 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %17
  br label %62

21:                                               ; preds = %17, %5
  %22 = load i8*, i8** %10, align 8
  %23 = bitcast i8* %22 to %struct.conn*
  store %struct.conn* %23, %struct.conn** %11, align 8
  %24 = load %struct.conn*, %struct.conn** %11, align 8
  %25 = getelementptr inbounds %struct.conn, %struct.conn* %24, i32 0, i32 28
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 4
  br i1 %27, label %28, label %45

28:                                               ; preds = %21
  %29 = load i32, i32* %9, align 4
  %30 = load i16, i16* %7, align 2
  %31 = zext i16 %30 to i32
  %32 = add i32 %29, %31
  %33 = zext i32 %32 to i64
  %34 = add i64 %33, 24
  store i64 %34, i64* %12, align 8
  %35 = load %struct.conn*, %struct.conn** %11, align 8
  %36 = load i64, i64* %12, align 8
  %37 = call zeroext i1 @grow_stats_buf(%struct.conn* %35, i64 %36)
  br i1 %37, label %39, label %38

38:                                               ; preds = %28
  br label %62

39:                                               ; preds = %28
  %40 = load i8*, i8** %6, align 8
  %41 = load i16, i16* %7, align 2
  %42 = load i8*, i8** %8, align 8
  %43 = load i32, i32* %9, align 4
  %44 = load %struct.conn*, %struct.conn** %11, align 8
  call void @append_bin_stats(i8* %40, i16 zeroext %41, i8* %42, i32 %43, %struct.conn* %44)
  br label %62

45:                                               ; preds = %21
  %46 = load i32, i32* %9, align 4
  %47 = load i16, i16* %7, align 2
  %48 = zext i16 %47 to i32
  %49 = add i32 %46, %48
  %50 = add i32 %49, 10
  %51 = zext i32 %50 to i64
  store i64 %51, i64* %13, align 8
  %52 = load %struct.conn*, %struct.conn** %11, align 8
  %53 = load i64, i64* %13, align 8
  %54 = call zeroext i1 @grow_stats_buf(%struct.conn* %52, i64 %53)
  br i1 %54, label %56, label %55

55:                                               ; preds = %45
  br label %62

56:                                               ; preds = %45
  %57 = load i8*, i8** %6, align 8
  %58 = load i16, i16* %7, align 2
  %59 = load i8*, i8** %8, align 8
  %60 = load i32, i32* %9, align 4
  %61 = load %struct.conn*, %struct.conn** %11, align 8
  call void @append_ascii_stats(i8* %57, i16 zeroext %58, i8* %59, i32 %60, %struct.conn* %61)
  br label %62

62:                                               ; preds = %20, %38, %55, %56, %39
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @grow_stats_buf(%struct.conn* %0, i64 %1) #0 {
  %3 = alloca %struct.conn*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8, align 1
  %8 = alloca i8*, align 8
  store %struct.conn* %0, %struct.conn** %3, align 8
  store i64 %1, i64* %4, align 8
  %9 = load %struct.conn*, %struct.conn** %3, align 8
  %10 = getelementptr inbounds %struct.conn, %struct.conn* %9, i32 0, i32 35
  %11 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %10, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  store i64 %12, i64* %5, align 8
  %13 = load i64, i64* %5, align 8
  %14 = load %struct.conn*, %struct.conn** %3, align 8
  %15 = getelementptr inbounds %struct.conn, %struct.conn* %14, i32 0, i32 35
  %16 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %15, i32 0, i32 2
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %13, %17
  store i64 %18, i64* %6, align 8
  store i8 1, i8* %7, align 1
  %19 = load %struct.conn*, %struct.conn** %3, align 8
  %20 = getelementptr inbounds %struct.conn, %struct.conn* %19, i32 0, i32 35
  %21 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %20, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %24, label %31

24:                                               ; preds = %2
  store i64 1024, i64* %5, align 8
  %25 = load %struct.conn*, %struct.conn** %3, align 8
  %26 = getelementptr inbounds %struct.conn, %struct.conn* %25, i32 0, i32 35
  %27 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %26, i32 0, i32 2
  store i64 0, i64* %27, align 8
  %28 = load %struct.conn*, %struct.conn** %3, align 8
  %29 = getelementptr inbounds %struct.conn, %struct.conn* %28, i32 0, i32 35
  %30 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %29, i32 0, i32 1
  store i64 0, i64* %30, align 8
  store i64 0, i64* %6, align 8
  br label %31

31:                                               ; preds = %24, %2
  br label %32

32:                                               ; preds = %36, %31
  %33 = load i64, i64* %4, align 8
  %34 = load i64, i64* %6, align 8
  %35 = icmp ugt i64 %33, %34
  br i1 %35, label %36, label %45

36:                                               ; preds = %32
  %37 = load i64, i64* %5, align 8
  %38 = shl i64 %37, 1
  store i64 %38, i64* %5, align 8
  %39 = load i64, i64* %5, align 8
  %40 = load %struct.conn*, %struct.conn** %3, align 8
  %41 = getelementptr inbounds %struct.conn, %struct.conn* %40, i32 0, i32 35
  %42 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %41, i32 0, i32 2
  %43 = load i64, i64* %42, align 8
  %44 = sub i64 %39, %43
  store i64 %44, i64* %6, align 8
  br label %32, !llvm.loop !22

45:                                               ; preds = %32
  %46 = load i64, i64* %5, align 8
  %47 = load %struct.conn*, %struct.conn** %3, align 8
  %48 = getelementptr inbounds %struct.conn, %struct.conn* %47, i32 0, i32 35
  %49 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %48, i32 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = icmp ne i64 %46, %50
  br i1 %51, label %52, label %74

52:                                               ; preds = %45
  %53 = load %struct.conn*, %struct.conn** %3, align 8
  %54 = getelementptr inbounds %struct.conn, %struct.conn* %53, i32 0, i32 35
  %55 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %54, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8
  %57 = load i64, i64* %5, align 8
  %58 = call i8* @realloc(i8* %56, i64 %57) #14
  store i8* %58, i8** %8, align 8
  %59 = load i8*, i8** %8, align 8
  %60 = icmp ne i8* %59, null
  br i1 %60, label %61, label %70

61:                                               ; preds = %52
  %62 = load i8*, i8** %8, align 8
  %63 = load %struct.conn*, %struct.conn** %3, align 8
  %64 = getelementptr inbounds %struct.conn, %struct.conn* %63, i32 0, i32 35
  %65 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %64, i32 0, i32 0
  store i8* %62, i8** %65, align 8
  %66 = load i64, i64* %5, align 8
  %67 = load %struct.conn*, %struct.conn** %3, align 8
  %68 = getelementptr inbounds %struct.conn, %struct.conn* %67, i32 0, i32 35
  %69 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %68, i32 0, i32 1
  store i64 %66, i64* %69, align 8
  br label %73

70:                                               ; preds = %52
  call void @STATS_LOCK()
  %71 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 3), align 8
  %72 = add i64 %71, 1
  store i64 %72, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 3), align 8
  call void @STATS_UNLOCK()
  store i8 0, i8* %7, align 1
  br label %73

73:                                               ; preds = %70, %61
  br label %74

74:                                               ; preds = %73, %45
  %75 = load i8, i8* %7, align 1
  %76 = trunc i8 %75 to i1
  ret i1 %76
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @append_bin_stats(i8* %0, i16 zeroext %1, i8* %2, i32 %3, %struct.conn* %4) #0 {
  %6 = alloca i8*, align 8
  %7 = alloca i16, align 2
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca %struct.conn*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca %union.protocol_binary_request_header, align 8
  store i8* %0, i8** %6, align 8
  store i16 %1, i16* %7, align 2
  store i8* %2, i8** %8, align 8
  store i32 %3, i32* %9, align 4
  store %struct.conn* %4, %struct.conn** %10, align 8
  %14 = load %struct.conn*, %struct.conn** %10, align 8
  %15 = getelementptr inbounds %struct.conn, %struct.conn* %14, i32 0, i32 35
  %16 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %15, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = load %struct.conn*, %struct.conn** %10, align 8
  %19 = getelementptr inbounds %struct.conn, %struct.conn* %18, i32 0, i32 35
  %20 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %19, i32 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds i8, i8* %17, i64 %21
  store i8* %22, i8** %11, align 8
  %23 = load i16, i16* %7, align 2
  %24 = zext i16 %23 to i32
  %25 = load i32, i32* %9, align 4
  %26 = add i32 %24, %25
  store i32 %26, i32* %12, align 4
  %27 = bitcast %union.protocol_binary_request_header* %13 to %struct.anon.13*
  %28 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %27, i32 0, i32 0
  store i8 -127, i8* %28, align 8
  %29 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %27, i32 0, i32 1
  store i8 16, i8* %29, align 1
  %30 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %27, i32 0, i32 2
  %31 = load i16, i16* %7, align 2
  %32 = call zeroext i16 @htons(i16 zeroext %31) #15
  store i16 %32, i16* %30, align 2
  %33 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %27, i32 0, i32 3
  store i8 0, i8* %33, align 4
  %34 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %27, i32 0, i32 4
  store i8 0, i8* %34, align 1
  %35 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %27, i32 0, i32 5
  store i16 0, i16* %35, align 2
  %36 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %27, i32 0, i32 6
  %37 = load i32, i32* %12, align 4
  %38 = call i32 @htonl(i32 %37) #15
  store i32 %38, i32* %36, align 8
  %39 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %27, i32 0, i32 7
  %40 = load %struct.conn*, %struct.conn** %10, align 8
  %41 = getelementptr inbounds %struct.conn, %struct.conn* %40, i32 0, i32 39
  %42 = load i32, i32* %41, align 4
  store i32 %42, i32* %39, align 4
  %43 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %27, i32 0, i32 8
  store i64 0, i64* %43, align 8
  %44 = load i8*, i8** %11, align 8
  %45 = bitcast %union.protocol_binary_request_header* %13 to [24 x i8]*
  %46 = getelementptr inbounds [24 x i8], [24 x i8]* %45, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %44, i8* align 8 %46, i64 24, i1 false)
  %47 = load i8*, i8** %11, align 8
  %48 = getelementptr inbounds i8, i8* %47, i64 24
  store i8* %48, i8** %11, align 8
  %49 = load i16, i16* %7, align 2
  %50 = zext i16 %49 to i32
  %51 = icmp sgt i32 %50, 0
  br i1 %51, label %52, label %70

52:                                               ; preds = %5
  %53 = load i8*, i8** %11, align 8
  %54 = load i8*, i8** %6, align 8
  %55 = load i16, i16* %7, align 2
  %56 = zext i16 %55 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %53, i8* align 1 %54, i64 %56, i1 false)
  %57 = load i16, i16* %7, align 2
  %58 = zext i16 %57 to i32
  %59 = load i8*, i8** %11, align 8
  %60 = sext i32 %58 to i64
  %61 = getelementptr inbounds i8, i8* %59, i64 %60
  store i8* %61, i8** %11, align 8
  %62 = load i32, i32* %9, align 4
  %63 = icmp ugt i32 %62, 0
  br i1 %63, label %64, label %69

64:                                               ; preds = %52
  %65 = load i8*, i8** %11, align 8
  %66 = load i8*, i8** %8, align 8
  %67 = load i32, i32* %9, align 4
  %68 = zext i32 %67 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %65, i8* align 1 %66, i64 %68, i1 false)
  br label %69

69:                                               ; preds = %64, %52
  br label %70

70:                                               ; preds = %69, %5
  %71 = load i32, i32* %12, align 4
  %72 = zext i32 %71 to i64
  %73 = add i64 24, %72
  %74 = load %struct.conn*, %struct.conn** %10, align 8
  %75 = getelementptr inbounds %struct.conn, %struct.conn* %74, i32 0, i32 35
  %76 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %75, i32 0, i32 2
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, %73
  store i64 %78, i64* %76, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @append_ascii_stats(i8* %0, i16 zeroext %1, i8* %2, i32 %3, %struct.conn* %4) #0 {
  %6 = alloca i8*, align 8
  %7 = alloca i16, align 2
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca %struct.conn*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store i8* %0, i8** %6, align 8
  store i16 %1, i16* %7, align 2
  store i8* %2, i8** %8, align 8
  store i32 %3, i32* %9, align 4
  store %struct.conn* %4, %struct.conn** %10, align 8
  %15 = load %struct.conn*, %struct.conn** %10, align 8
  %16 = getelementptr inbounds %struct.conn, %struct.conn* %15, i32 0, i32 35
  %17 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %16, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = load %struct.conn*, %struct.conn** %10, align 8
  %20 = getelementptr inbounds %struct.conn, %struct.conn* %19, i32 0, i32 35
  %21 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %20, i32 0, i32 2
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds i8, i8* %18, i64 %22
  store i8* %23, i8** %11, align 8
  store i32 0, i32* %12, align 4
  %24 = load %struct.conn*, %struct.conn** %10, align 8
  %25 = getelementptr inbounds %struct.conn, %struct.conn* %24, i32 0, i32 35
  %26 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %25, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = load %struct.conn*, %struct.conn** %10, align 8
  %29 = getelementptr inbounds %struct.conn, %struct.conn* %28, i32 0, i32 35
  %30 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %29, i32 0, i32 2
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %27, %31
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %13, align 4
  %34 = load i32, i32* %13, align 4
  %35 = sub nsw i32 %34, 1
  store i32 %35, i32* %14, align 4
  %36 = load i16, i16* %7, align 2
  %37 = zext i16 %36 to i32
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %47

39:                                               ; preds = %5
  %40 = load i32, i32* %9, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %47

42:                                               ; preds = %39
  %43 = load i8*, i8** %11, align 8
  %44 = load i32, i32* %14, align 4
  %45 = sext i32 %44 to i64
  %46 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %43, i64 %45, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.374, i64 0, i64 0)) #14
  store i32 %46, i32* %12, align 4
  br label %64

47:                                               ; preds = %39, %5
  %48 = load i32, i32* %9, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %56

50:                                               ; preds = %47
  %51 = load i8*, i8** %11, align 8
  %52 = load i32, i32* %14, align 4
  %53 = sext i32 %52 to i64
  %54 = load i8*, i8** %6, align 8
  %55 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %51, i64 %53, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.375, i64 0, i64 0), i8* %54) #14
  store i32 %55, i32* %12, align 4
  br label %63

56:                                               ; preds = %47
  %57 = load i8*, i8** %11, align 8
  %58 = load i32, i32* %14, align 4
  %59 = sext i32 %58 to i64
  %60 = load i8*, i8** %6, align 8
  %61 = load i8*, i8** %8, align 8
  %62 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %57, i64 %59, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.376, i64 0, i64 0), i8* %60, i8* %61) #14
  store i32 %62, i32* %12, align 4
  br label %63

63:                                               ; preds = %56, %50
  br label %64

64:                                               ; preds = %63, %42
  %65 = load i32, i32* %12, align 4
  %66 = zext i32 %65 to i64
  %67 = load %struct.conn*, %struct.conn** %10, align 8
  %68 = getelementptr inbounds %struct.conn, %struct.conn* %67, i32 0, i32 35
  %69 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %68, i32 0, i32 2
  %70 = load i64, i64* %69, align 8
  %71 = add i64 %70, %66
  store i64 %71, i64* %69, align 8
  ret void
}

; Function Attrs: nounwind
declare dso_local i32 @snprintf(i8*, i64, i8*, ...) #2

; Function Attrs: nounwind readnone willreturn
declare dso_local zeroext i16 @htons(i16 zeroext) #5

; Function Attrs: nounwind readnone willreturn
declare dso_local i32 @htonl(i32) #5

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @do_store_item(%struct._stritem* %0, i32 %1, %struct.conn* %2, i32 %3) #0 {
  %5 = alloca %struct._stritem*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.conn*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca %struct._stritem*, align 8
  %11 = alloca i32, align 4
  %12 = alloca %struct._stritem*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i8, align 1
  %16 = alloca i64, align 8
  %17 = alloca i64, align 8
  %18 = alloca %struct._logger*, align 8
  store %struct._stritem* %0, %struct._stritem** %5, align 8
  store i32 %1, i32* %6, align 4
  store %struct.conn* %2, %struct.conn** %7, align 8
  store i32 %3, i32* %8, align 4
  %19 = load %struct._stritem*, %struct._stritem** %5, align 8
  %20 = getelementptr inbounds %struct._stritem, %struct._stritem* %19, i32 0, i32 10
  %21 = bitcast [0 x %union.anon.10]* %20 to i8*
  %22 = load %struct._stritem*, %struct._stritem** %5, align 8
  %23 = getelementptr inbounds %struct._stritem, %struct._stritem* %22, i32 0, i32 7
  %24 = load i16, i16* %23, align 2
  %25 = zext i16 %24 to i32
  %26 = and i32 %25, 2
  %27 = icmp ne i32 %26, 0
  %28 = zext i1 %27 to i64
  %29 = select i1 %27, i64 8, i64 0
  %30 = getelementptr inbounds i8, i8* %21, i64 %29
  store i8* %30, i8** %9, align 8
  %31 = load i8*, i8** %9, align 8
  %32 = load %struct._stritem*, %struct._stritem** %5, align 8
  %33 = getelementptr inbounds %struct._stritem, %struct._stritem* %32, i32 0, i32 9
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i64
  %36 = load i32, i32* %8, align 4
  %37 = load %struct.conn*, %struct.conn** %7, align 8
  %38 = call %struct._stritem* @do_item_get(i8* %31, i64 %35, i32 %36, %struct.conn* %37, i1 zeroext false)
  store %struct._stritem* %38, %struct._stritem** %10, align 8
  store i32 0, i32* %11, align 4
  store %struct._stritem* null, %struct._stritem** %12, align 8
  store i32 0, i32* %14, align 4
  store i8 0, i8* %15, align 1
  %39 = load %struct._stritem*, %struct._stritem** %10, align 8
  %40 = icmp ne %struct._stritem* %39, null
  br i1 %40, label %41, label %352

41:                                               ; preds = %4
  %42 = load %struct._stritem*, %struct._stritem** %5, align 8
  %43 = getelementptr inbounds %struct._stritem, %struct._stritem* %42, i32 0, i32 7
  %44 = load i16, i16* %43, align 2
  %45 = zext i16 %44 to i32
  %46 = and i32 %45, 2
  %47 = icmp ne i32 %46, 0
  br i1 %47, label %48, label %54

48:                                               ; preds = %41
  %49 = load %struct._stritem*, %struct._stritem** %5, align 8
  %50 = getelementptr inbounds %struct._stritem, %struct._stritem* %49, i32 0, i32 10
  %51 = getelementptr inbounds [0 x %union.anon.10], [0 x %union.anon.10]* %50, i64 0, i64 0
  %52 = bitcast %union.anon.10* %51 to i64*
  %53 = load i64, i64* %52, align 8
  br label %55

54:                                               ; preds = %41
  br label %55

55:                                               ; preds = %54, %48
  %56 = phi i64 [ %53, %48 ], [ 0, %54 ]
  store i64 %56, i64* %16, align 8
  %57 = load %struct._stritem*, %struct._stritem** %10, align 8
  %58 = getelementptr inbounds %struct._stritem, %struct._stritem* %57, i32 0, i32 7
  %59 = load i16, i16* %58, align 2
  %60 = zext i16 %59 to i32
  %61 = and i32 %60, 2
  %62 = icmp ne i32 %61, 0
  br i1 %62, label %63, label %69

63:                                               ; preds = %55
  %64 = load %struct._stritem*, %struct._stritem** %10, align 8
  %65 = getelementptr inbounds %struct._stritem, %struct._stritem* %64, i32 0, i32 10
  %66 = getelementptr inbounds [0 x %union.anon.10], [0 x %union.anon.10]* %65, i64 0, i64 0
  %67 = bitcast %union.anon.10* %66 to i64*
  %68 = load i64, i64* %67, align 8
  br label %70

69:                                               ; preds = %55
  br label %70

70:                                               ; preds = %69, %63
  %71 = phi i64 [ %68, %63 ], [ 0, %69 ]
  store i64 %71, i64* %17, align 8
  %72 = load i64, i64* %16, align 8
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %70
  store i32 0, i32* %14, align 4
  br label %93

75:                                               ; preds = %70
  %76 = load i64, i64* %16, align 8
  %77 = load i64, i64* %17, align 8
  %78 = icmp eq i64 %76, %77
  br i1 %78, label %79, label %80

79:                                               ; preds = %75
  store i32 1, i32* %14, align 4
  br label %92

80:                                               ; preds = %75
  %81 = load %struct.conn*, %struct.conn** %7, align 8
  %82 = getelementptr inbounds %struct.conn, %struct.conn* %81, i32 0, i32 4
  %83 = load i8, i8* %82, align 2
  %84 = trunc i8 %83 to i1
  br i1 %84, label %85, label %90

85:                                               ; preds = %80
  %86 = load i64, i64* %16, align 8
  %87 = load i64, i64* %17, align 8
  %88 = icmp ult i64 %86, %87
  br i1 %88, label %89, label %90

89:                                               ; preds = %85
  store i32 3, i32* %14, align 4
  br label %91

90:                                               ; preds = %85, %80
  store i32 2, i32* %14, align 4
  br label %91

91:                                               ; preds = %90, %89
  br label %92

92:                                               ; preds = %91, %79
  br label %93

93:                                               ; preds = %92, %74
  %94 = load i32, i32* %6, align 4
  switch i32 %94, label %329 [
    i32 1, label %95
    i32 6, label %97
    i32 4, label %250
    i32 5, label %250
    i32 3, label %328
    i32 2, label %328
  ]

95:                                               ; preds = %93
  %96 = load %struct._stritem*, %struct._stritem** %10, align 8
  call void @do_item_update(%struct._stritem* %96)
  br label %329

97:                                               ; preds = %93
  %98 = load i32, i32* %14, align 4
  %99 = icmp eq i32 %98, 1
  br i1 %99, label %100, label %128

100:                                              ; preds = %97
  %101 = load %struct.conn*, %struct.conn** %7, align 8
  %102 = getelementptr inbounds %struct.conn, %struct.conn* %101, i32 0, i32 42
  %103 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %102, align 8
  %104 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %103, i32 0, i32 4
  %105 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %104, i32 0, i32 0
  %106 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %105) #14
  %107 = load %struct.conn*, %struct.conn** %7, align 8
  %108 = getelementptr inbounds %struct.conn, %struct.conn* %107, i32 0, i32 42
  %109 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %108, align 8
  %110 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %109, i32 0, i32 4
  %111 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %110, i32 0, i32 31
  %112 = load %struct._stritem*, %struct._stritem** %10, align 8
  %113 = getelementptr inbounds %struct._stritem, %struct._stritem* %112, i32 0, i32 8
  %114 = load i8, i8* %113, align 8
  %115 = zext i8 %114 to i32
  %116 = and i32 %115, -193
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds [64 x %struct.slab_stats], [64 x %struct.slab_stats]* %111, i64 0, i64 %117
  %119 = getelementptr inbounds %struct.slab_stats, %struct.slab_stats* %118, i32 0, i32 4
  %120 = load i64, i64* %119, align 8
  %121 = add i64 %120, 1
  store i64 %121, i64* %119, align 8
  %122 = load %struct.conn*, %struct.conn** %7, align 8
  %123 = getelementptr inbounds %struct.conn, %struct.conn* %122, i32 0, i32 42
  %124 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %123, align 8
  %125 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %124, i32 0, i32 4
  %126 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %125, i32 0, i32 0
  %127 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %126) #14
  store i8 1, i8* %15, align 1
  br label %249

128:                                              ; preds = %97
  %129 = load i32, i32* %14, align 4
  %130 = icmp eq i32 %129, 3
  br i1 %130, label %131, label %184

131:                                              ; preds = %128
  %132 = load %struct._stritem*, %struct._stritem** %10, align 8
  %133 = getelementptr inbounds %struct._stritem, %struct._stritem* %132, i32 0, i32 4
  %134 = load i32, i32* %133, align 4
  %135 = load %struct._stritem*, %struct._stritem** %5, align 8
  %136 = getelementptr inbounds %struct._stritem, %struct._stritem* %135, i32 0, i32 4
  store i32 %134, i32* %136, align 4
  %137 = load %struct._stritem*, %struct._stritem** %5, align 8
  %138 = getelementptr inbounds %struct._stritem, %struct._stritem* %137, i32 0, i32 7
  %139 = load i16, i16* %138, align 2
  %140 = zext i16 %139 to i32
  %141 = or i32 %140, 2048
  %142 = trunc i32 %141 to i16
  store i16 %142, i16* %138, align 2
  %143 = load %struct._stritem*, %struct._stritem** %10, align 8
  %144 = getelementptr inbounds %struct._stritem, %struct._stritem* %143, i32 0, i32 7
  %145 = load i16, i16* %144, align 2
  %146 = zext i16 %145 to i32
  %147 = and i32 %146, 512
  %148 = icmp ne i32 %147, 0
  br i1 %148, label %149, label %156

149:                                              ; preds = %131
  %150 = load %struct._stritem*, %struct._stritem** %5, align 8
  %151 = getelementptr inbounds %struct._stritem, %struct._stritem* %150, i32 0, i32 7
  %152 = load i16, i16* %151, align 2
  %153 = zext i16 %152 to i32
  %154 = or i32 %153, 512
  %155 = trunc i32 %154 to i16
  store i16 %155, i16* %151, align 2
  br label %156

156:                                              ; preds = %149, %131
  %157 = load %struct.conn*, %struct.conn** %7, align 8
  %158 = getelementptr inbounds %struct.conn, %struct.conn* %157, i32 0, i32 42
  %159 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %158, align 8
  %160 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %159, i32 0, i32 4
  %161 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %160, i32 0, i32 0
  %162 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %161) #14
  %163 = load %struct.conn*, %struct.conn** %7, align 8
  %164 = getelementptr inbounds %struct.conn, %struct.conn* %163, i32 0, i32 42
  %165 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %164, align 8
  %166 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %165, i32 0, i32 4
  %167 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %166, i32 0, i32 31
  %168 = load %struct._stritem*, %struct._stritem** %10, align 8
  %169 = getelementptr inbounds %struct._stritem, %struct._stritem* %168, i32 0, i32 8
  %170 = load i8, i8* %169, align 8
  %171 = zext i8 %170 to i32
  %172 = and i32 %171, -193
  %173 = sext i32 %172 to i64
  %174 = getelementptr inbounds [64 x %struct.slab_stats], [64 x %struct.slab_stats]* %167, i64 0, i64 %173
  %175 = getelementptr inbounds %struct.slab_stats, %struct.slab_stats* %174, i32 0, i32 4
  %176 = load i64, i64* %175, align 8
  %177 = add i64 %176, 1
  store i64 %177, i64* %175, align 8
  %178 = load %struct.conn*, %struct.conn** %7, align 8
  %179 = getelementptr inbounds %struct.conn, %struct.conn* %178, i32 0, i32 42
  %180 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %179, align 8
  %181 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %180, i32 0, i32 4
  %182 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %181, i32 0, i32 0
  %183 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %182) #14
  store i8 1, i8* %15, align 1
  br label %248

184:                                              ; preds = %128
  %185 = load %struct.conn*, %struct.conn** %7, align 8
  %186 = getelementptr inbounds %struct.conn, %struct.conn* %185, i32 0, i32 42
  %187 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %186, align 8
  %188 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %187, i32 0, i32 4
  %189 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %188, i32 0, i32 0
  %190 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %189) #14
  %191 = load %struct.conn*, %struct.conn** %7, align 8
  %192 = getelementptr inbounds %struct.conn, %struct.conn* %191, i32 0, i32 42
  %193 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %192, align 8
  %194 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %193, i32 0, i32 4
  %195 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %194, i32 0, i32 31
  %196 = load %struct._stritem*, %struct._stritem** %10, align 8
  %197 = getelementptr inbounds %struct._stritem, %struct._stritem* %196, i32 0, i32 8
  %198 = load i8, i8* %197, align 8
  %199 = zext i8 %198 to i32
  %200 = and i32 %199, -193
  %201 = sext i32 %200 to i64
  %202 = getelementptr inbounds [64 x %struct.slab_stats], [64 x %struct.slab_stats]* %195, i64 0, i64 %201
  %203 = getelementptr inbounds %struct.slab_stats, %struct.slab_stats* %202, i32 0, i32 5
  %204 = load i64, i64* %203, align 8
  %205 = add i64 %204, 1
  store i64 %205, i64* %203, align 8
  %206 = load %struct.conn*, %struct.conn** %7, align 8
  %207 = getelementptr inbounds %struct.conn, %struct.conn* %206, i32 0, i32 42
  %208 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %207, align 8
  %209 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %208, i32 0, i32 4
  %210 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %209, i32 0, i32 0
  %211 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %210) #14
  %212 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %213 = icmp sgt i32 %212, 1
  br i1 %213, label %214, label %247

214:                                              ; preds = %184
  %215 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %216 = load %struct._stritem*, %struct._stritem** %10, align 8
  %217 = getelementptr inbounds %struct._stritem, %struct._stritem* %216, i32 0, i32 7
  %218 = load i16, i16* %217, align 2
  %219 = zext i16 %218 to i32
  %220 = and i32 %219, 2
  %221 = icmp ne i32 %220, 0
  br i1 %221, label %222, label %228

222:                                              ; preds = %214
  %223 = load %struct._stritem*, %struct._stritem** %10, align 8
  %224 = getelementptr inbounds %struct._stritem, %struct._stritem* %223, i32 0, i32 10
  %225 = getelementptr inbounds [0 x %union.anon.10], [0 x %union.anon.10]* %224, i64 0, i64 0
  %226 = bitcast %union.anon.10* %225 to i64*
  %227 = load i64, i64* %226, align 8
  br label %229

228:                                              ; preds = %214
  br label %229

229:                                              ; preds = %228, %222
  %230 = phi i64 [ %227, %222 ], [ 0, %228 ]
  %231 = load %struct._stritem*, %struct._stritem** %5, align 8
  %232 = getelementptr inbounds %struct._stritem, %struct._stritem* %231, i32 0, i32 7
  %233 = load i16, i16* %232, align 2
  %234 = zext i16 %233 to i32
  %235 = and i32 %234, 2
  %236 = icmp ne i32 %235, 0
  br i1 %236, label %237, label %243

237:                                              ; preds = %229
  %238 = load %struct._stritem*, %struct._stritem** %5, align 8
  %239 = getelementptr inbounds %struct._stritem, %struct._stritem* %238, i32 0, i32 10
  %240 = getelementptr inbounds [0 x %union.anon.10], [0 x %union.anon.10]* %239, i64 0, i64 0
  %241 = bitcast %union.anon.10* %240 to i64*
  %242 = load i64, i64* %241, align 8
  br label %244

243:                                              ; preds = %229
  br label %244

244:                                              ; preds = %243, %237
  %245 = phi i64 [ %242, %237 ], [ 0, %243 ]
  %246 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %215, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.20, i64 0, i64 0), i64 %230, i64 %245)
  br label %247

247:                                              ; preds = %244, %184
  store i32 2, i32* %11, align 4
  br label %248

248:                                              ; preds = %247, %156
  br label %249

249:                                              ; preds = %248, %100
  br label %329

250:                                              ; preds = %93, %93
  %251 = load i32, i32* %14, align 4
  %252 = icmp ne i32 %251, 0
  br i1 %252, label %253, label %257

253:                                              ; preds = %250
  %254 = load i32, i32* %14, align 4
  %255 = icmp ne i32 %254, 1
  br i1 %255, label %256, label %257

256:                                              ; preds = %253
  store i32 2, i32* %11, align 4
  br label %329

257:                                              ; preds = %253, %250
  %258 = load %struct._stritem*, %struct._stritem** %10, align 8
  %259 = getelementptr inbounds %struct._stritem, %struct._stritem* %258, i32 0, i32 7
  %260 = load i16, i16* %259, align 2
  %261 = zext i16 %260 to i32
  %262 = and i32 %261, 128
  %263 = icmp ne i32 %262, 0
  br i1 %263, label %264, label %265

264:                                              ; preds = %257
  br label %329

265:                                              ; preds = %257
  %266 = load %struct._stritem*, %struct._stritem** %10, align 8
  %267 = getelementptr inbounds %struct._stritem, %struct._stritem* %266, i32 0, i32 7
  %268 = load i16, i16* %267, align 2
  %269 = zext i16 %268 to i32
  %270 = and i32 %269, 256
  %271 = icmp ne i32 %270, 0
  br i1 %271, label %272, label %294

272:                                              ; preds = %265
  %273 = load %struct._stritem*, %struct._stritem** %10, align 8
  %274 = getelementptr inbounds %struct._stritem, %struct._stritem* %273, i32 0, i32 10
  %275 = bitcast [0 x %union.anon.10]* %274 to i8*
  %276 = load %struct._stritem*, %struct._stritem** %10, align 8
  %277 = getelementptr inbounds %struct._stritem, %struct._stritem* %276, i32 0, i32 9
  %278 = load i8, i8* %277, align 1
  %279 = zext i8 %278 to i32
  %280 = sext i32 %279 to i64
  %281 = getelementptr inbounds i8, i8* %275, i64 %280
  %282 = getelementptr inbounds i8, i8* %281, i64 1
  %283 = load %struct._stritem*, %struct._stritem** %10, align 8
  %284 = getelementptr inbounds %struct._stritem, %struct._stritem* %283, i32 0, i32 7
  %285 = load i16, i16* %284, align 2
  %286 = zext i16 %285 to i32
  %287 = and i32 %286, 2
  %288 = icmp ne i32 %287, 0
  %289 = zext i1 %288 to i64
  %290 = select i1 %288, i64 8, i64 0
  %291 = getelementptr inbounds i8, i8* %282, i64 %290
  %292 = bitcast i8* %291 to i32*
  %293 = load i32, i32* %292, align 4
  store i32 %293, i32* %13, align 4
  br label %295

294:                                              ; preds = %265
  store i32 0, i32* %13, align 4
  br label %295

295:                                              ; preds = %294, %272
  %296 = load i8*, i8** %9, align 8
  %297 = load %struct._stritem*, %struct._stritem** %5, align 8
  %298 = getelementptr inbounds %struct._stritem, %struct._stritem* %297, i32 0, i32 9
  %299 = load i8, i8* %298, align 1
  %300 = zext i8 %299 to i64
  %301 = load i32, i32* %13, align 4
  %302 = load %struct._stritem*, %struct._stritem** %10, align 8
  %303 = getelementptr inbounds %struct._stritem, %struct._stritem* %302, i32 0, i32 4
  %304 = load i32, i32* %303, align 4
  %305 = load %struct._stritem*, %struct._stritem** %5, align 8
  %306 = getelementptr inbounds %struct._stritem, %struct._stritem* %305, i32 0, i32 5
  %307 = load i32, i32* %306, align 8
  %308 = load %struct._stritem*, %struct._stritem** %10, align 8
  %309 = getelementptr inbounds %struct._stritem, %struct._stritem* %308, i32 0, i32 5
  %310 = load i32, i32* %309, align 8
  %311 = add nsw i32 %307, %310
  %312 = sub nsw i32 %311, 2
  %313 = call %struct._stritem* @do_item_alloc(i8* %296, i64 %300, i32 %301, i32 %304, i32 %312)
  store %struct._stritem* %313, %struct._stritem** %12, align 8
  %314 = load %struct._stritem*, %struct._stritem** %12, align 8
  %315 = icmp eq %struct._stritem* %314, null
  br i1 %315, label %316, label %317

316:                                              ; preds = %295
  br label %329

317:                                              ; preds = %295
  %318 = load i32, i32* %6, align 4
  %319 = load %struct._stritem*, %struct._stritem** %10, align 8
  %320 = load %struct._stritem*, %struct._stritem** %12, align 8
  %321 = load %struct._stritem*, %struct._stritem** %5, align 8
  %322 = call i32 @_store_item_copy_data(i32 %318, %struct._stritem* %319, %struct._stritem* %320, %struct._stritem* %321)
  %323 = icmp eq i32 %322, -1
  br i1 %323, label %324, label %325

324:                                              ; preds = %317
  br label %329

325:                                              ; preds = %317
  %326 = load %struct._stritem*, %struct._stritem** %12, align 8
  store %struct._stritem* %326, %struct._stritem** %5, align 8
  store i8 1, i8* %15, align 1
  br label %327

327:                                              ; preds = %325
  br label %329

328:                                              ; preds = %93, %93
  store i8 1, i8* %15, align 1
  br label %329

329:                                              ; preds = %93, %328, %327, %324, %316, %264, %256, %249, %95
  %330 = load i8, i8* %15, align 1
  %331 = trunc i8 %330 to i1
  br i1 %331, label %332, label %345

332:                                              ; preds = %329
  br label %333

333:                                              ; preds = %332
  %334 = load %struct.conn*, %struct.conn** %7, align 8
  %335 = getelementptr inbounds %struct.conn, %struct.conn* %334, i32 0, i32 42
  %336 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %335, align 8
  %337 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %336, i32 0, i32 10
  %338 = load i8*, i8** %337, align 8
  %339 = load %struct._stritem*, %struct._stritem** %10, align 8
  call void @storage_delete(i8* %338, %struct._stritem* %339)
  br label %340

340:                                              ; preds = %333
  %341 = load %struct._stritem*, %struct._stritem** %10, align 8
  %342 = load %struct._stritem*, %struct._stritem** %5, align 8
  %343 = load i32, i32* %8, align 4
  %344 = call i32 @item_replace(%struct._stritem* %341, %struct._stritem* %342, i32 %343)
  store i32 1, i32* %11, align 4
  br label %345

345:                                              ; preds = %340, %329
  %346 = load %struct._stritem*, %struct._stritem** %10, align 8
  call void @do_item_remove(%struct._stritem* %346)
  %347 = load %struct._stritem*, %struct._stritem** %12, align 8
  %348 = icmp ne %struct._stritem* %347, null
  br i1 %348, label %349, label %351

349:                                              ; preds = %345
  %350 = load %struct._stritem*, %struct._stritem** %12, align 8
  call void @do_item_remove(%struct._stritem* %350)
  br label %351

351:                                              ; preds = %349, %345
  br label %402

352:                                              ; preds = %4
  %353 = load %struct._stritem*, %struct._stritem** %5, align 8
  %354 = getelementptr inbounds %struct._stritem, %struct._stritem* %353, i32 0, i32 7
  %355 = load i16, i16* %354, align 2
  %356 = zext i16 %355 to i32
  %357 = and i32 %356, 2
  %358 = icmp ne i32 %357, 0
  br i1 %358, label %359, label %365

359:                                              ; preds = %352
  %360 = load %struct._stritem*, %struct._stritem** %5, align 8
  %361 = getelementptr inbounds %struct._stritem, %struct._stritem* %360, i32 0, i32 10
  %362 = getelementptr inbounds [0 x %union.anon.10], [0 x %union.anon.10]* %361, i64 0, i64 0
  %363 = bitcast %union.anon.10* %362 to i64*
  %364 = load i64, i64* %363, align 8
  br label %366

365:                                              ; preds = %352
  br label %366

366:                                              ; preds = %365, %359
  %367 = phi i64 [ %364, %359 ], [ 0, %365 ]
  %368 = icmp ne i64 %367, 0
  br i1 %368, label %369, label %370

369:                                              ; preds = %366
  store i32 4, i32* %14, align 4
  br label %370

370:                                              ; preds = %369, %366
  %371 = load i32, i32* %6, align 4
  switch i32 %371, label %394 [
    i32 1, label %372
    i32 2, label %372
    i32 6, label %373
    i32 3, label %393
    i32 4, label %393
    i32 5, label %393
  ]

372:                                              ; preds = %370, %370
  store i8 1, i8* %15, align 1
  br label %394

373:                                              ; preds = %370
  store i32 3, i32* %11, align 4
  %374 = load %struct.conn*, %struct.conn** %7, align 8
  %375 = getelementptr inbounds %struct.conn, %struct.conn* %374, i32 0, i32 42
  %376 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %375, align 8
  %377 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %376, i32 0, i32 4
  %378 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %377, i32 0, i32 0
  %379 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %378) #14
  %380 = load %struct.conn*, %struct.conn** %7, align 8
  %381 = getelementptr inbounds %struct.conn, %struct.conn* %380, i32 0, i32 42
  %382 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %381, align 8
  %383 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %382, i32 0, i32 4
  %384 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %383, i32 0, i32 10
  %385 = load i64, i64* %384, align 8
  %386 = add i64 %385, 1
  store i64 %386, i64* %384, align 8
  %387 = load %struct.conn*, %struct.conn** %7, align 8
  %388 = getelementptr inbounds %struct.conn, %struct.conn* %387, i32 0, i32 42
  %389 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %388, align 8
  %390 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %389, i32 0, i32 4
  %391 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %390, i32 0, i32 0
  %392 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %391) #14
  br label %394

393:                                              ; preds = %370, %370, %370
  br label %394

394:                                              ; preds = %370, %393, %373, %372
  %395 = load i8, i8* %15, align 1
  %396 = trunc i8 %395 to i1
  br i1 %396, label %397, label %401

397:                                              ; preds = %394
  %398 = load %struct._stritem*, %struct._stritem** %5, align 8
  %399 = load i32, i32* %8, align 4
  %400 = call i32 @do_item_link(%struct._stritem* %398, i32 %399)
  store i32 1, i32* %11, align 4
  br label %401

401:                                              ; preds = %397, %394
  br label %402

402:                                              ; preds = %401, %351
  %403 = load i32, i32* %11, align 4
  %404 = icmp eq i32 %403, 1
  br i1 %404, label %405, label %423

405:                                              ; preds = %402
  %406 = load %struct._stritem*, %struct._stritem** %5, align 8
  %407 = getelementptr inbounds %struct._stritem, %struct._stritem* %406, i32 0, i32 7
  %408 = load i16, i16* %407, align 2
  %409 = zext i16 %408 to i32
  %410 = and i32 %409, 2
  %411 = icmp ne i32 %410, 0
  br i1 %411, label %412, label %418

412:                                              ; preds = %405
  %413 = load %struct._stritem*, %struct._stritem** %5, align 8
  %414 = getelementptr inbounds %struct._stritem, %struct._stritem* %413, i32 0, i32 10
  %415 = getelementptr inbounds [0 x %union.anon.10], [0 x %union.anon.10]* %414, i64 0, i64 0
  %416 = bitcast %union.anon.10* %415 to i64*
  %417 = load i64, i64* %416, align 8
  br label %419

418:                                              ; preds = %405
  br label %419

419:                                              ; preds = %418, %412
  %420 = phi i64 [ %417, %412 ], [ 0, %418 ]
  %421 = load %struct.conn*, %struct.conn** %7, align 8
  %422 = getelementptr inbounds %struct.conn, %struct.conn* %421, i32 0, i32 37
  store i64 %420, i64* %422, align 8
  br label %423

423:                                              ; preds = %419, %402
  br label %424

424:                                              ; preds = %423
  %425 = load %struct.conn*, %struct.conn** %7, align 8
  %426 = getelementptr inbounds %struct.conn, %struct.conn* %425, i32 0, i32 42
  %427 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %426, align 8
  %428 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %427, i32 0, i32 11
  %429 = load %struct._logger*, %struct._logger** %428, align 8
  store %struct._logger* %429, %struct._logger** %18, align 8
  %430 = load %struct.conn*, %struct.conn** %7, align 8
  %431 = getelementptr inbounds %struct.conn, %struct.conn* %430, i32 0, i32 42
  %432 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %431, align 8
  %433 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %432, i32 0, i32 11
  %434 = load %struct._logger*, %struct._logger** %433, align 8
  %435 = icmp eq %struct._logger* %434, null
  br i1 %435, label %436, label %440

436:                                              ; preds = %424
  %437 = load i32, i32* @logger_key, align 4
  %438 = call i8* @pthread_getspecific(i32 %437) #14
  %439 = bitcast i8* %438 to %struct._logger*
  store %struct._logger* %439, %struct._logger** %18, align 8
  br label %440

440:                                              ; preds = %436, %424
  %441 = load %struct._logger*, %struct._logger** %18, align 8
  %442 = getelementptr inbounds %struct._logger, %struct._logger* %441, i32 0, i32 8
  %443 = load i16, i16* %442, align 4
  %444 = zext i16 %443 to i32
  %445 = and i32 %444, 8
  %446 = icmp ne i32 %445, 0
  br i1 %446, label %447, label %482

447:                                              ; preds = %440
  %448 = load %struct._logger*, %struct._logger** %18, align 8
  %449 = load i32, i32* %11, align 4
  %450 = load i32, i32* %6, align 4
  %451 = load %struct._stritem*, %struct._stritem** %5, align 8
  %452 = getelementptr inbounds %struct._stritem, %struct._stritem* %451, i32 0, i32 10
  %453 = bitcast [0 x %union.anon.10]* %452 to i8*
  %454 = load %struct._stritem*, %struct._stritem** %5, align 8
  %455 = getelementptr inbounds %struct._stritem, %struct._stritem* %454, i32 0, i32 7
  %456 = load i16, i16* %455, align 2
  %457 = zext i16 %456 to i32
  %458 = and i32 %457, 2
  %459 = icmp ne i32 %458, 0
  %460 = zext i1 %459 to i64
  %461 = select i1 %459, i64 8, i64 0
  %462 = getelementptr inbounds i8, i8* %453, i64 %461
  %463 = load %struct._stritem*, %struct._stritem** %5, align 8
  %464 = getelementptr inbounds %struct._stritem, %struct._stritem* %463, i32 0, i32 9
  %465 = load i8, i8* %464, align 1
  %466 = zext i8 %465 to i32
  %467 = load %struct._stritem*, %struct._stritem** %5, align 8
  %468 = getelementptr inbounds %struct._stritem, %struct._stritem* %467, i32 0, i32 5
  %469 = load i32, i32* %468, align 8
  %470 = load %struct._stritem*, %struct._stritem** %5, align 8
  %471 = getelementptr inbounds %struct._stritem, %struct._stritem* %470, i32 0, i32 4
  %472 = load i32, i32* %471, align 4
  %473 = load %struct._stritem*, %struct._stritem** %5, align 8
  %474 = getelementptr inbounds %struct._stritem, %struct._stritem* %473, i32 0, i32 8
  %475 = load i8, i8* %474, align 8
  %476 = zext i8 %475 to i32
  %477 = and i32 %476, -193
  %478 = load %struct.conn*, %struct.conn** %7, align 8
  %479 = getelementptr inbounds %struct.conn, %struct.conn* %478, i32 0, i32 1
  %480 = load i32, i32* %479, align 8
  %481 = call i32 (%struct._logger*, i32, i8*, ...) @logger_log(%struct._logger* %448, i32 3, i8* null, i32 %449, i32 %450, i8* %462, i32 %466, i32 %469, i32 %472, i32 %477, i32 %480)
  br label %482

482:                                              ; preds = %447, %440
  br label %483

483:                                              ; preds = %482
  %484 = load i32, i32* %11, align 4
  ret i32 %484
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @_store_item_copy_data(i32 %0, %struct._stritem* %1, %struct._stritem* %2, %struct._stritem* %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct._stritem*, align 8
  %8 = alloca %struct._stritem*, align 8
  %9 = alloca %struct._stritem*, align 8
  store i32 %0, i32* %6, align 4
  store %struct._stritem* %1, %struct._stritem** %7, align 8
  store %struct._stritem* %2, %struct._stritem** %8, align 8
  store %struct._stritem* %3, %struct._stritem** %9, align 8
  %10 = load i32, i32* %6, align 4
  %11 = icmp eq i32 %10, 4
  br i1 %11, label %12, label %166

12:                                               ; preds = %4
  %13 = load %struct._stritem*, %struct._stritem** %8, align 8
  %14 = getelementptr inbounds %struct._stritem, %struct._stritem* %13, i32 0, i32 7
  %15 = load i16, i16* %14, align 2
  %16 = zext i16 %15 to i32
  %17 = and i32 %16, 32
  %18 = icmp ne i32 %17, 0
  br i1 %18, label %19, label %38

19:                                               ; preds = %12
  %20 = load %struct._stritem*, %struct._stritem** %8, align 8
  %21 = load %struct._stritem*, %struct._stritem** %7, align 8
  %22 = load %struct._stritem*, %struct._stritem** %7, align 8
  %23 = getelementptr inbounds %struct._stritem, %struct._stritem* %22, i32 0, i32 5
  %24 = load i32, i32* %23, align 8
  %25 = sub nsw i32 %24, 2
  %26 = call i32 @_store_item_copy_chunks(%struct._stritem* %20, %struct._stritem* %21, i32 %25)
  %27 = icmp eq i32 %26, -1
  br i1 %27, label %36, label %28

28:                                               ; preds = %19
  %29 = load %struct._stritem*, %struct._stritem** %8, align 8
  %30 = load %struct._stritem*, %struct._stritem** %9, align 8
  %31 = load %struct._stritem*, %struct._stritem** %9, align 8
  %32 = getelementptr inbounds %struct._stritem, %struct._stritem* %31, i32 0, i32 5
  %33 = load i32, i32* %32, align 8
  %34 = call i32 @_store_item_copy_chunks(%struct._stritem* %29, %struct._stritem* %30, i32 %33)
  %35 = icmp eq i32 %34, -1
  br i1 %35, label %36, label %37

36:                                               ; preds = %28, %19
  store i32 -1, i32* %5, align 4
  br label %321

37:                                               ; preds = %28
  br label %165

38:                                               ; preds = %12
  %39 = load %struct._stritem*, %struct._stritem** %8, align 8
  %40 = getelementptr inbounds %struct._stritem, %struct._stritem* %39, i32 0, i32 10
  %41 = bitcast [0 x %union.anon.10]* %40 to i8*
  %42 = load %struct._stritem*, %struct._stritem** %8, align 8
  %43 = getelementptr inbounds %struct._stritem, %struct._stritem* %42, i32 0, i32 9
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i32
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds i8, i8* %41, i64 %46
  %48 = getelementptr inbounds i8, i8* %47, i64 1
  %49 = load %struct._stritem*, %struct._stritem** %8, align 8
  %50 = getelementptr inbounds %struct._stritem, %struct._stritem* %49, i32 0, i32 7
  %51 = load i16, i16* %50, align 2
  %52 = zext i16 %51 to i32
  %53 = and i32 %52, 256
  %54 = icmp ne i32 %53, 0
  %55 = zext i1 %54 to i64
  %56 = select i1 %54, i64 4, i64 0
  %57 = getelementptr inbounds i8, i8* %48, i64 %56
  %58 = load %struct._stritem*, %struct._stritem** %8, align 8
  %59 = getelementptr inbounds %struct._stritem, %struct._stritem* %58, i32 0, i32 7
  %60 = load i16, i16* %59, align 2
  %61 = zext i16 %60 to i32
  %62 = and i32 %61, 2
  %63 = icmp ne i32 %62, 0
  %64 = zext i1 %63 to i64
  %65 = select i1 %63, i64 8, i64 0
  %66 = getelementptr inbounds i8, i8* %57, i64 %65
  %67 = load %struct._stritem*, %struct._stritem** %7, align 8
  %68 = getelementptr inbounds %struct._stritem, %struct._stritem* %67, i32 0, i32 10
  %69 = bitcast [0 x %union.anon.10]* %68 to i8*
  %70 = load %struct._stritem*, %struct._stritem** %7, align 8
  %71 = getelementptr inbounds %struct._stritem, %struct._stritem* %70, i32 0, i32 9
  %72 = load i8, i8* %71, align 1
  %73 = zext i8 %72 to i32
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i8, i8* %69, i64 %74
  %76 = getelementptr inbounds i8, i8* %75, i64 1
  %77 = load %struct._stritem*, %struct._stritem** %7, align 8
  %78 = getelementptr inbounds %struct._stritem, %struct._stritem* %77, i32 0, i32 7
  %79 = load i16, i16* %78, align 2
  %80 = zext i16 %79 to i32
  %81 = and i32 %80, 256
  %82 = icmp ne i32 %81, 0
  %83 = zext i1 %82 to i64
  %84 = select i1 %82, i64 4, i64 0
  %85 = getelementptr inbounds i8, i8* %76, i64 %84
  %86 = load %struct._stritem*, %struct._stritem** %7, align 8
  %87 = getelementptr inbounds %struct._stritem, %struct._stritem* %86, i32 0, i32 7
  %88 = load i16, i16* %87, align 2
  %89 = zext i16 %88 to i32
  %90 = and i32 %89, 2
  %91 = icmp ne i32 %90, 0
  %92 = zext i1 %91 to i64
  %93 = select i1 %91, i64 8, i64 0
  %94 = getelementptr inbounds i8, i8* %85, i64 %93
  %95 = load %struct._stritem*, %struct._stritem** %7, align 8
  %96 = getelementptr inbounds %struct._stritem, %struct._stritem* %95, i32 0, i32 5
  %97 = load i32, i32* %96, align 8
  %98 = sext i32 %97 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %66, i8* align 1 %94, i64 %98, i1 false)
  %99 = load %struct._stritem*, %struct._stritem** %8, align 8
  %100 = getelementptr inbounds %struct._stritem, %struct._stritem* %99, i32 0, i32 10
  %101 = bitcast [0 x %union.anon.10]* %100 to i8*
  %102 = load %struct._stritem*, %struct._stritem** %8, align 8
  %103 = getelementptr inbounds %struct._stritem, %struct._stritem* %102, i32 0, i32 9
  %104 = load i8, i8* %103, align 1
  %105 = zext i8 %104 to i32
  %106 = sext i32 %105 to i64
  %107 = getelementptr inbounds i8, i8* %101, i64 %106
  %108 = getelementptr inbounds i8, i8* %107, i64 1
  %109 = load %struct._stritem*, %struct._stritem** %8, align 8
  %110 = getelementptr inbounds %struct._stritem, %struct._stritem* %109, i32 0, i32 7
  %111 = load i16, i16* %110, align 2
  %112 = zext i16 %111 to i32
  %113 = and i32 %112, 256
  %114 = icmp ne i32 %113, 0
  %115 = zext i1 %114 to i64
  %116 = select i1 %114, i64 4, i64 0
  %117 = getelementptr inbounds i8, i8* %108, i64 %116
  %118 = load %struct._stritem*, %struct._stritem** %8, align 8
  %119 = getelementptr inbounds %struct._stritem, %struct._stritem* %118, i32 0, i32 7
  %120 = load i16, i16* %119, align 2
  %121 = zext i16 %120 to i32
  %122 = and i32 %121, 2
  %123 = icmp ne i32 %122, 0
  %124 = zext i1 %123 to i64
  %125 = select i1 %123, i64 8, i64 0
  %126 = getelementptr inbounds i8, i8* %117, i64 %125
  %127 = load %struct._stritem*, %struct._stritem** %7, align 8
  %128 = getelementptr inbounds %struct._stritem, %struct._stritem* %127, i32 0, i32 5
  %129 = load i32, i32* %128, align 8
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds i8, i8* %126, i64 %130
  %132 = getelementptr inbounds i8, i8* %131, i64 -2
  %133 = load %struct._stritem*, %struct._stritem** %9, align 8
  %134 = getelementptr inbounds %struct._stritem, %struct._stritem* %133, i32 0, i32 10
  %135 = bitcast [0 x %union.anon.10]* %134 to i8*
  %136 = load %struct._stritem*, %struct._stritem** %9, align 8
  %137 = getelementptr inbounds %struct._stritem, %struct._stritem* %136, i32 0, i32 9
  %138 = load i8, i8* %137, align 1
  %139 = zext i8 %138 to i32
  %140 = sext i32 %139 to i64
  %141 = getelementptr inbounds i8, i8* %135, i64 %140
  %142 = getelementptr inbounds i8, i8* %141, i64 1
  %143 = load %struct._stritem*, %struct._stritem** %9, align 8
  %144 = getelementptr inbounds %struct._stritem, %struct._stritem* %143, i32 0, i32 7
  %145 = load i16, i16* %144, align 2
  %146 = zext i16 %145 to i32
  %147 = and i32 %146, 256
  %148 = icmp ne i32 %147, 0
  %149 = zext i1 %148 to i64
  %150 = select i1 %148, i64 4, i64 0
  %151 = getelementptr inbounds i8, i8* %142, i64 %150
  %152 = load %struct._stritem*, %struct._stritem** %9, align 8
  %153 = getelementptr inbounds %struct._stritem, %struct._stritem* %152, i32 0, i32 7
  %154 = load i16, i16* %153, align 2
  %155 = zext i16 %154 to i32
  %156 = and i32 %155, 2
  %157 = icmp ne i32 %156, 0
  %158 = zext i1 %157 to i64
  %159 = select i1 %157, i64 8, i64 0
  %160 = getelementptr inbounds i8, i8* %151, i64 %159
  %161 = load %struct._stritem*, %struct._stritem** %9, align 8
  %162 = getelementptr inbounds %struct._stritem, %struct._stritem* %161, i32 0, i32 5
  %163 = load i32, i32* %162, align 8
  %164 = sext i32 %163 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %132, i8* align 1 %160, i64 %164, i1 false)
  br label %165

165:                                              ; preds = %38, %37
  br label %320

166:                                              ; preds = %4
  %167 = load %struct._stritem*, %struct._stritem** %8, align 8
  %168 = getelementptr inbounds %struct._stritem, %struct._stritem* %167, i32 0, i32 7
  %169 = load i16, i16* %168, align 2
  %170 = zext i16 %169 to i32
  %171 = and i32 %170, 32
  %172 = icmp ne i32 %171, 0
  br i1 %172, label %173, label %192

173:                                              ; preds = %166
  %174 = load %struct._stritem*, %struct._stritem** %8, align 8
  %175 = load %struct._stritem*, %struct._stritem** %9, align 8
  %176 = load %struct._stritem*, %struct._stritem** %9, align 8
  %177 = getelementptr inbounds %struct._stritem, %struct._stritem* %176, i32 0, i32 5
  %178 = load i32, i32* %177, align 8
  %179 = sub nsw i32 %178, 2
  %180 = call i32 @_store_item_copy_chunks(%struct._stritem* %174, %struct._stritem* %175, i32 %179)
  %181 = icmp eq i32 %180, -1
  br i1 %181, label %190, label %182

182:                                              ; preds = %173
  %183 = load %struct._stritem*, %struct._stritem** %8, align 8
  %184 = load %struct._stritem*, %struct._stritem** %7, align 8
  %185 = load %struct._stritem*, %struct._stritem** %7, align 8
  %186 = getelementptr inbounds %struct._stritem, %struct._stritem* %185, i32 0, i32 5
  %187 = load i32, i32* %186, align 8
  %188 = call i32 @_store_item_copy_chunks(%struct._stritem* %183, %struct._stritem* %184, i32 %187)
  %189 = icmp eq i32 %188, -1
  br i1 %189, label %190, label %191

190:                                              ; preds = %182, %173
  store i32 -1, i32* %5, align 4
  br label %321

191:                                              ; preds = %182
  br label %319

192:                                              ; preds = %166
  %193 = load %struct._stritem*, %struct._stritem** %8, align 8
  %194 = getelementptr inbounds %struct._stritem, %struct._stritem* %193, i32 0, i32 10
  %195 = bitcast [0 x %union.anon.10]* %194 to i8*
  %196 = load %struct._stritem*, %struct._stritem** %8, align 8
  %197 = getelementptr inbounds %struct._stritem, %struct._stritem* %196, i32 0, i32 9
  %198 = load i8, i8* %197, align 1
  %199 = zext i8 %198 to i32
  %200 = sext i32 %199 to i64
  %201 = getelementptr inbounds i8, i8* %195, i64 %200
  %202 = getelementptr inbounds i8, i8* %201, i64 1
  %203 = load %struct._stritem*, %struct._stritem** %8, align 8
  %204 = getelementptr inbounds %struct._stritem, %struct._stritem* %203, i32 0, i32 7
  %205 = load i16, i16* %204, align 2
  %206 = zext i16 %205 to i32
  %207 = and i32 %206, 256
  %208 = icmp ne i32 %207, 0
  %209 = zext i1 %208 to i64
  %210 = select i1 %208, i64 4, i64 0
  %211 = getelementptr inbounds i8, i8* %202, i64 %210
  %212 = load %struct._stritem*, %struct._stritem** %8, align 8
  %213 = getelementptr inbounds %struct._stritem, %struct._stritem* %212, i32 0, i32 7
  %214 = load i16, i16* %213, align 2
  %215 = zext i16 %214 to i32
  %216 = and i32 %215, 2
  %217 = icmp ne i32 %216, 0
  %218 = zext i1 %217 to i64
  %219 = select i1 %217, i64 8, i64 0
  %220 = getelementptr inbounds i8, i8* %211, i64 %219
  %221 = load %struct._stritem*, %struct._stritem** %9, align 8
  %222 = getelementptr inbounds %struct._stritem, %struct._stritem* %221, i32 0, i32 10
  %223 = bitcast [0 x %union.anon.10]* %222 to i8*
  %224 = load %struct._stritem*, %struct._stritem** %9, align 8
  %225 = getelementptr inbounds %struct._stritem, %struct._stritem* %224, i32 0, i32 9
  %226 = load i8, i8* %225, align 1
  %227 = zext i8 %226 to i32
  %228 = sext i32 %227 to i64
  %229 = getelementptr inbounds i8, i8* %223, i64 %228
  %230 = getelementptr inbounds i8, i8* %229, i64 1
  %231 = load %struct._stritem*, %struct._stritem** %9, align 8
  %232 = getelementptr inbounds %struct._stritem, %struct._stritem* %231, i32 0, i32 7
  %233 = load i16, i16* %232, align 2
  %234 = zext i16 %233 to i32
  %235 = and i32 %234, 256
  %236 = icmp ne i32 %235, 0
  %237 = zext i1 %236 to i64
  %238 = select i1 %236, i64 4, i64 0
  %239 = getelementptr inbounds i8, i8* %230, i64 %238
  %240 = load %struct._stritem*, %struct._stritem** %9, align 8
  %241 = getelementptr inbounds %struct._stritem, %struct._stritem* %240, i32 0, i32 7
  %242 = load i16, i16* %241, align 2
  %243 = zext i16 %242 to i32
  %244 = and i32 %243, 2
  %245 = icmp ne i32 %244, 0
  %246 = zext i1 %245 to i64
  %247 = select i1 %245, i64 8, i64 0
  %248 = getelementptr inbounds i8, i8* %239, i64 %247
  %249 = load %struct._stritem*, %struct._stritem** %9, align 8
  %250 = getelementptr inbounds %struct._stritem, %struct._stritem* %249, i32 0, i32 5
  %251 = load i32, i32* %250, align 8
  %252 = sext i32 %251 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %220, i8* align 1 %248, i64 %252, i1 false)
  %253 = load %struct._stritem*, %struct._stritem** %8, align 8
  %254 = getelementptr inbounds %struct._stritem, %struct._stritem* %253, i32 0, i32 10
  %255 = bitcast [0 x %union.anon.10]* %254 to i8*
  %256 = load %struct._stritem*, %struct._stritem** %8, align 8
  %257 = getelementptr inbounds %struct._stritem, %struct._stritem* %256, i32 0, i32 9
  %258 = load i8, i8* %257, align 1
  %259 = zext i8 %258 to i32
  %260 = sext i32 %259 to i64
  %261 = getelementptr inbounds i8, i8* %255, i64 %260
  %262 = getelementptr inbounds i8, i8* %261, i64 1
  %263 = load %struct._stritem*, %struct._stritem** %8, align 8
  %264 = getelementptr inbounds %struct._stritem, %struct._stritem* %263, i32 0, i32 7
  %265 = load i16, i16* %264, align 2
  %266 = zext i16 %265 to i32
  %267 = and i32 %266, 256
  %268 = icmp ne i32 %267, 0
  %269 = zext i1 %268 to i64
  %270 = select i1 %268, i64 4, i64 0
  %271 = getelementptr inbounds i8, i8* %262, i64 %270
  %272 = load %struct._stritem*, %struct._stritem** %8, align 8
  %273 = getelementptr inbounds %struct._stritem, %struct._stritem* %272, i32 0, i32 7
  %274 = load i16, i16* %273, align 2
  %275 = zext i16 %274 to i32
  %276 = and i32 %275, 2
  %277 = icmp ne i32 %276, 0
  %278 = zext i1 %277 to i64
  %279 = select i1 %277, i64 8, i64 0
  %280 = getelementptr inbounds i8, i8* %271, i64 %279
  %281 = load %struct._stritem*, %struct._stritem** %9, align 8
  %282 = getelementptr inbounds %struct._stritem, %struct._stritem* %281, i32 0, i32 5
  %283 = load i32, i32* %282, align 8
  %284 = sext i32 %283 to i64
  %285 = getelementptr inbounds i8, i8* %280, i64 %284
  %286 = getelementptr inbounds i8, i8* %285, i64 -2
  %287 = load %struct._stritem*, %struct._stritem** %7, align 8
  %288 = getelementptr inbounds %struct._stritem, %struct._stritem* %287, i32 0, i32 10
  %289 = bitcast [0 x %union.anon.10]* %288 to i8*
  %290 = load %struct._stritem*, %struct._stritem** %7, align 8
  %291 = getelementptr inbounds %struct._stritem, %struct._stritem* %290, i32 0, i32 9
  %292 = load i8, i8* %291, align 1
  %293 = zext i8 %292 to i32
  %294 = sext i32 %293 to i64
  %295 = getelementptr inbounds i8, i8* %289, i64 %294
  %296 = getelementptr inbounds i8, i8* %295, i64 1
  %297 = load %struct._stritem*, %struct._stritem** %7, align 8
  %298 = getelementptr inbounds %struct._stritem, %struct._stritem* %297, i32 0, i32 7
  %299 = load i16, i16* %298, align 2
  %300 = zext i16 %299 to i32
  %301 = and i32 %300, 256
  %302 = icmp ne i32 %301, 0
  %303 = zext i1 %302 to i64
  %304 = select i1 %302, i64 4, i64 0
  %305 = getelementptr inbounds i8, i8* %296, i64 %304
  %306 = load %struct._stritem*, %struct._stritem** %7, align 8
  %307 = getelementptr inbounds %struct._stritem, %struct._stritem* %306, i32 0, i32 7
  %308 = load i16, i16* %307, align 2
  %309 = zext i16 %308 to i32
  %310 = and i32 %309, 2
  %311 = icmp ne i32 %310, 0
  %312 = zext i1 %311 to i64
  %313 = select i1 %311, i64 8, i64 0
  %314 = getelementptr inbounds i8, i8* %305, i64 %313
  %315 = load %struct._stritem*, %struct._stritem** %7, align 8
  %316 = getelementptr inbounds %struct._stritem, %struct._stritem* %315, i32 0, i32 5
  %317 = load i32, i32* %316, align 8
  %318 = sext i32 %317 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %286, i8* align 1 %314, i64 %318, i1 false)
  br label %319

319:                                              ; preds = %192, %191
  br label %320

320:                                              ; preds = %319, %165
  store i32 0, i32* %5, align 4
  br label %321

321:                                              ; preds = %320, %190, %36
  %322 = load i32, i32* %5, align 4
  ret i32 %322
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @_store_item_copy_chunks(%struct._stritem* %0, %struct._stritem* %1, i32 %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca %struct._stritem*, align 8
  %6 = alloca %struct._stritem*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %struct._strchunk*, align 8
  %9 = alloca i32, align 4
  %10 = alloca %struct._strchunk*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %struct._strchunk*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca %struct._strchunk*, align 8
  store %struct._stritem* %0, %struct._stritem** %5, align 8
  store %struct._stritem* %1, %struct._stritem** %6, align 8
  store i32 %2, i32* %7, align 4
  %17 = load %struct._stritem*, %struct._stritem** %5, align 8
  %18 = getelementptr inbounds %struct._stritem, %struct._stritem* %17, i32 0, i32 10
  %19 = bitcast [0 x %union.anon.10]* %18 to i8*
  %20 = load %struct._stritem*, %struct._stritem** %5, align 8
  %21 = getelementptr inbounds %struct._stritem, %struct._stritem* %20, i32 0, i32 9
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i32
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds i8, i8* %19, i64 %24
  %26 = getelementptr inbounds i8, i8* %25, i64 1
  %27 = load %struct._stritem*, %struct._stritem** %5, align 8
  %28 = getelementptr inbounds %struct._stritem, %struct._stritem* %27, i32 0, i32 7
  %29 = load i16, i16* %28, align 2
  %30 = zext i16 %29 to i32
  %31 = and i32 %30, 256
  %32 = icmp ne i32 %31, 0
  %33 = zext i1 %32 to i64
  %34 = select i1 %32, i64 4, i64 0
  %35 = getelementptr inbounds i8, i8* %26, i64 %34
  %36 = load %struct._stritem*, %struct._stritem** %5, align 8
  %37 = getelementptr inbounds %struct._stritem, %struct._stritem* %36, i32 0, i32 7
  %38 = load i16, i16* %37, align 2
  %39 = zext i16 %38 to i32
  %40 = and i32 %39, 2
  %41 = icmp ne i32 %40, 0
  %42 = zext i1 %41 to i64
  %43 = select i1 %41, i64 8, i64 0
  %44 = getelementptr inbounds i8, i8* %35, i64 %43
  %45 = bitcast i8* %44 to %struct._strchunk*
  store %struct._strchunk* %45, %struct._strchunk** %8, align 8
  br label %46

46:                                               ; preds = %64, %3
  %47 = load %struct._strchunk*, %struct._strchunk** %8, align 8
  %48 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %47, i32 0, i32 3
  %49 = load i32, i32* %48, align 8
  %50 = load %struct._strchunk*, %struct._strchunk** %8, align 8
  %51 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %50, i32 0, i32 4
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %49, %52
  br i1 %53, label %54, label %65

54:                                               ; preds = %46
  %55 = load %struct._strchunk*, %struct._strchunk** %8, align 8
  %56 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %55, i32 0, i32 0
  %57 = load %struct._strchunk*, %struct._strchunk** %56, align 8
  %58 = icmp ne %struct._strchunk* %57, null
  br i1 %58, label %59, label %63

59:                                               ; preds = %54
  %60 = load %struct._strchunk*, %struct._strchunk** %8, align 8
  %61 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %60, i32 0, i32 0
  %62 = load %struct._strchunk*, %struct._strchunk** %61, align 8
  store %struct._strchunk* %62, %struct._strchunk** %8, align 8
  br label %64

63:                                               ; preds = %54
  br label %65

64:                                               ; preds = %59
  br label %46, !llvm.loop !23

65:                                               ; preds = %63, %46
  %66 = load %struct._stritem*, %struct._stritem** %6, align 8
  %67 = getelementptr inbounds %struct._stritem, %struct._stritem* %66, i32 0, i32 7
  %68 = load i16, i16* %67, align 2
  %69 = zext i16 %68 to i32
  %70 = and i32 %69, 32
  %71 = icmp ne i32 %70, 0
  br i1 %71, label %72, label %207

72:                                               ; preds = %65
  %73 = load i32, i32* %7, align 4
  store i32 %73, i32* %9, align 4
  %74 = load %struct._stritem*, %struct._stritem** %6, align 8
  %75 = getelementptr inbounds %struct._stritem, %struct._stritem* %74, i32 0, i32 10
  %76 = bitcast [0 x %union.anon.10]* %75 to i8*
  %77 = load %struct._stritem*, %struct._stritem** %6, align 8
  %78 = getelementptr inbounds %struct._stritem, %struct._stritem* %77, i32 0, i32 9
  %79 = load i8, i8* %78, align 1
  %80 = zext i8 %79 to i32
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds i8, i8* %76, i64 %81
  %83 = getelementptr inbounds i8, i8* %82, i64 1
  %84 = load %struct._stritem*, %struct._stritem** %6, align 8
  %85 = getelementptr inbounds %struct._stritem, %struct._stritem* %84, i32 0, i32 7
  %86 = load i16, i16* %85, align 2
  %87 = zext i16 %86 to i32
  %88 = and i32 %87, 256
  %89 = icmp ne i32 %88, 0
  %90 = zext i1 %89 to i64
  %91 = select i1 %89, i64 4, i64 0
  %92 = getelementptr inbounds i8, i8* %83, i64 %91
  %93 = load %struct._stritem*, %struct._stritem** %6, align 8
  %94 = getelementptr inbounds %struct._stritem, %struct._stritem* %93, i32 0, i32 7
  %95 = load i16, i16* %94, align 2
  %96 = zext i16 %95 to i32
  %97 = and i32 %96, 2
  %98 = icmp ne i32 %97, 0
  %99 = zext i1 %98 to i64
  %100 = select i1 %98, i64 8, i64 0
  %101 = getelementptr inbounds i8, i8* %92, i64 %100
  %102 = bitcast i8* %101 to %struct._strchunk*
  store %struct._strchunk* %102, %struct._strchunk** %10, align 8
  store i32 0, i32* %11, align 4
  br label %103

103:                                              ; preds = %205, %72
  %104 = load %struct._strchunk*, %struct._strchunk** %10, align 8
  %105 = icmp ne %struct._strchunk* %104, null
  br i1 %105, label %106, label %112

106:                                              ; preds = %103
  %107 = load %struct._strchunk*, %struct._strchunk** %8, align 8
  %108 = icmp ne %struct._strchunk* %107, null
  br i1 %108, label %109, label %112

109:                                              ; preds = %106
  %110 = load i32, i32* %9, align 4
  %111 = icmp ne i32 %110, 0
  br label %112

112:                                              ; preds = %109, %106, %103
  %113 = phi i1 [ false, %106 ], [ false, %103 ], [ %111, %109 ]
  br i1 %113, label %114, label %206

114:                                              ; preds = %112
  %115 = load %struct._strchunk*, %struct._strchunk** %8, align 8
  %116 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %115, i32 0, i32 3
  %117 = load i32, i32* %116, align 8
  %118 = load %struct._strchunk*, %struct._strchunk** %8, align 8
  %119 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %118, i32 0, i32 4
  %120 = load i32, i32* %119, align 4
  %121 = sub nsw i32 %117, %120
  %122 = load %struct._strchunk*, %struct._strchunk** %10, align 8
  %123 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %122, i32 0, i32 4
  %124 = load i32, i32* %123, align 4
  %125 = load i32, i32* %11, align 4
  %126 = sub nsw i32 %124, %125
  %127 = icmp slt i32 %121, %126
  br i1 %127, label %128, label %136

128:                                              ; preds = %114
  %129 = load %struct._strchunk*, %struct._strchunk** %8, align 8
  %130 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %129, i32 0, i32 3
  %131 = load i32, i32* %130, align 8
  %132 = load %struct._strchunk*, %struct._strchunk** %8, align 8
  %133 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %132, i32 0, i32 4
  %134 = load i32, i32* %133, align 4
  %135 = sub nsw i32 %131, %134
  br label %142

136:                                              ; preds = %114
  %137 = load %struct._strchunk*, %struct._strchunk** %10, align 8
  %138 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %137, i32 0, i32 4
  %139 = load i32, i32* %138, align 4
  %140 = load i32, i32* %11, align 4
  %141 = sub nsw i32 %139, %140
  br label %142

142:                                              ; preds = %136, %128
  %143 = phi i32 [ %135, %128 ], [ %141, %136 ]
  store i32 %143, i32* %12, align 4
  %144 = load i32, i32* %9, align 4
  %145 = load i32, i32* %12, align 4
  %146 = icmp slt i32 %144, %145
  br i1 %146, label %147, label %149

147:                                              ; preds = %142
  %148 = load i32, i32* %9, align 4
  store i32 %148, i32* %12, align 4
  br label %149

149:                                              ; preds = %147, %142
  %150 = load %struct._strchunk*, %struct._strchunk** %8, align 8
  %151 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %150, i32 0, i32 10
  %152 = getelementptr inbounds [0 x i8], [0 x i8]* %151, i64 0, i64 0
  %153 = load %struct._strchunk*, %struct._strchunk** %8, align 8
  %154 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %153, i32 0, i32 4
  %155 = load i32, i32* %154, align 4
  %156 = sext i32 %155 to i64
  %157 = getelementptr inbounds i8, i8* %152, i64 %156
  %158 = load %struct._strchunk*, %struct._strchunk** %10, align 8
  %159 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %158, i32 0, i32 10
  %160 = getelementptr inbounds [0 x i8], [0 x i8]* %159, i64 0, i64 0
  %161 = load i32, i32* %11, align 4
  %162 = sext i32 %161 to i64
  %163 = getelementptr inbounds i8, i8* %160, i64 %162
  %164 = load i32, i32* %12, align 4
  %165 = sext i32 %164 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %157, i8* align 1 %163, i64 %165, i1 false)
  %166 = load i32, i32* %12, align 4
  %167 = load %struct._strchunk*, %struct._strchunk** %8, align 8
  %168 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %167, i32 0, i32 4
  %169 = load i32, i32* %168, align 4
  %170 = add nsw i32 %169, %166
  store i32 %170, i32* %168, align 4
  %171 = load i32, i32* %12, align 4
  %172 = load i32, i32* %11, align 4
  %173 = add nsw i32 %172, %171
  store i32 %173, i32* %11, align 4
  %174 = load i32, i32* %12, align 4
  %175 = load i32, i32* %9, align 4
  %176 = sub nsw i32 %175, %174
  store i32 %176, i32* %9, align 4
  %177 = load %struct._strchunk*, %struct._strchunk** %8, align 8
  %178 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %177, i32 0, i32 3
  %179 = load i32, i32* %178, align 8
  %180 = load %struct._strchunk*, %struct._strchunk** %8, align 8
  %181 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %180, i32 0, i32 4
  %182 = load i32, i32* %181, align 4
  %183 = icmp eq i32 %179, %182
  br i1 %183, label %184, label %195

184:                                              ; preds = %149
  %185 = load %struct._strchunk*, %struct._strchunk** %8, align 8
  %186 = load i32, i32* %9, align 4
  %187 = sext i32 %186 to i64
  %188 = call %struct._strchunk* @do_item_alloc_chunk(%struct._strchunk* %185, i64 %187)
  store %struct._strchunk* %188, %struct._strchunk** %13, align 8
  %189 = load %struct._strchunk*, %struct._strchunk** %13, align 8
  %190 = icmp ne %struct._strchunk* %189, null
  br i1 %190, label %191, label %193

191:                                              ; preds = %184
  %192 = load %struct._strchunk*, %struct._strchunk** %13, align 8
  store %struct._strchunk* %192, %struct._strchunk** %8, align 8
  br label %194

193:                                              ; preds = %184
  store i32 -1, i32* %4, align 4
  br label %315

194:                                              ; preds = %191
  br label %195

195:                                              ; preds = %194, %149
  %196 = load i32, i32* %11, align 4
  %197 = load %struct._strchunk*, %struct._strchunk** %10, align 8
  %198 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %197, i32 0, i32 4
  %199 = load i32, i32* %198, align 4
  %200 = icmp eq i32 %196, %199
  br i1 %200, label %201, label %205

201:                                              ; preds = %195
  store i32 0, i32* %11, align 4
  %202 = load %struct._strchunk*, %struct._strchunk** %10, align 8
  %203 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %202, i32 0, i32 0
  %204 = load %struct._strchunk*, %struct._strchunk** %203, align 8
  store %struct._strchunk* %204, %struct._strchunk** %10, align 8
  br label %205

205:                                              ; preds = %201, %195
  br label %103, !llvm.loop !24

206:                                              ; preds = %112
  br label %314

207:                                              ; preds = %65
  store i32 0, i32* %14, align 4
  br label %208

208:                                              ; preds = %312, %207
  %209 = load i32, i32* %7, align 4
  %210 = load i32, i32* %14, align 4
  %211 = icmp sgt i32 %209, %210
  br i1 %211, label %212, label %215

212:                                              ; preds = %208
  %213 = load %struct._strchunk*, %struct._strchunk** %8, align 8
  %214 = icmp ne %struct._strchunk* %213, null
  br label %215

215:                                              ; preds = %212, %208
  %216 = phi i1 [ false, %208 ], [ %214, %212 ]
  br i1 %216, label %217, label %313

217:                                              ; preds = %215
  %218 = load %struct._strchunk*, %struct._strchunk** %8, align 8
  %219 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %218, i32 0, i32 3
  %220 = load i32, i32* %219, align 8
  %221 = load %struct._strchunk*, %struct._strchunk** %8, align 8
  %222 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %221, i32 0, i32 4
  %223 = load i32, i32* %222, align 4
  %224 = sub nsw i32 %220, %223
  %225 = load i32, i32* %7, align 4
  %226 = load i32, i32* %14, align 4
  %227 = sub nsw i32 %225, %226
  %228 = icmp slt i32 %224, %227
  br i1 %228, label %229, label %237

229:                                              ; preds = %217
  %230 = load %struct._strchunk*, %struct._strchunk** %8, align 8
  %231 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %230, i32 0, i32 3
  %232 = load i32, i32* %231, align 8
  %233 = load %struct._strchunk*, %struct._strchunk** %8, align 8
  %234 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %233, i32 0, i32 4
  %235 = load i32, i32* %234, align 4
  %236 = sub nsw i32 %232, %235
  br label %241

237:                                              ; preds = %217
  %238 = load i32, i32* %7, align 4
  %239 = load i32, i32* %14, align 4
  %240 = sub nsw i32 %238, %239
  br label %241

241:                                              ; preds = %237, %229
  %242 = phi i32 [ %236, %229 ], [ %240, %237 ]
  store i32 %242, i32* %15, align 4
  %243 = load %struct._strchunk*, %struct._strchunk** %8, align 8
  %244 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %243, i32 0, i32 10
  %245 = getelementptr inbounds [0 x i8], [0 x i8]* %244, i64 0, i64 0
  %246 = load %struct._strchunk*, %struct._strchunk** %8, align 8
  %247 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %246, i32 0, i32 4
  %248 = load i32, i32* %247, align 4
  %249 = sext i32 %248 to i64
  %250 = getelementptr inbounds i8, i8* %245, i64 %249
  %251 = load %struct._stritem*, %struct._stritem** %6, align 8
  %252 = getelementptr inbounds %struct._stritem, %struct._stritem* %251, i32 0, i32 10
  %253 = bitcast [0 x %union.anon.10]* %252 to i8*
  %254 = load %struct._stritem*, %struct._stritem** %6, align 8
  %255 = getelementptr inbounds %struct._stritem, %struct._stritem* %254, i32 0, i32 9
  %256 = load i8, i8* %255, align 1
  %257 = zext i8 %256 to i32
  %258 = sext i32 %257 to i64
  %259 = getelementptr inbounds i8, i8* %253, i64 %258
  %260 = getelementptr inbounds i8, i8* %259, i64 1
  %261 = load %struct._stritem*, %struct._stritem** %6, align 8
  %262 = getelementptr inbounds %struct._stritem, %struct._stritem* %261, i32 0, i32 7
  %263 = load i16, i16* %262, align 2
  %264 = zext i16 %263 to i32
  %265 = and i32 %264, 256
  %266 = icmp ne i32 %265, 0
  %267 = zext i1 %266 to i64
  %268 = select i1 %266, i64 4, i64 0
  %269 = getelementptr inbounds i8, i8* %260, i64 %268
  %270 = load %struct._stritem*, %struct._stritem** %6, align 8
  %271 = getelementptr inbounds %struct._stritem, %struct._stritem* %270, i32 0, i32 7
  %272 = load i16, i16* %271, align 2
  %273 = zext i16 %272 to i32
  %274 = and i32 %273, 2
  %275 = icmp ne i32 %274, 0
  %276 = zext i1 %275 to i64
  %277 = select i1 %275, i64 8, i64 0
  %278 = getelementptr inbounds i8, i8* %269, i64 %277
  %279 = load i32, i32* %14, align 4
  %280 = sext i32 %279 to i64
  %281 = getelementptr inbounds i8, i8* %278, i64 %280
  %282 = load i32, i32* %15, align 4
  %283 = sext i32 %282 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %250, i8* align 1 %281, i64 %283, i1 false)
  %284 = load i32, i32* %15, align 4
  %285 = load i32, i32* %14, align 4
  %286 = add nsw i32 %285, %284
  store i32 %286, i32* %14, align 4
  %287 = load i32, i32* %15, align 4
  %288 = load %struct._strchunk*, %struct._strchunk** %8, align 8
  %289 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %288, i32 0, i32 4
  %290 = load i32, i32* %289, align 4
  %291 = add nsw i32 %290, %287
  store i32 %291, i32* %289, align 4
  %292 = load %struct._strchunk*, %struct._strchunk** %8, align 8
  %293 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %292, i32 0, i32 3
  %294 = load i32, i32* %293, align 8
  %295 = load %struct._strchunk*, %struct._strchunk** %8, align 8
  %296 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %295, i32 0, i32 4
  %297 = load i32, i32* %296, align 4
  %298 = icmp eq i32 %294, %297
  br i1 %298, label %299, label %312

299:                                              ; preds = %241
  %300 = load %struct._strchunk*, %struct._strchunk** %8, align 8
  %301 = load i32, i32* %7, align 4
  %302 = load i32, i32* %14, align 4
  %303 = sub nsw i32 %301, %302
  %304 = sext i32 %303 to i64
  %305 = call %struct._strchunk* @do_item_alloc_chunk(%struct._strchunk* %300, i64 %304)
  store %struct._strchunk* %305, %struct._strchunk** %16, align 8
  %306 = load %struct._strchunk*, %struct._strchunk** %16, align 8
  %307 = icmp ne %struct._strchunk* %306, null
  br i1 %307, label %308, label %310

308:                                              ; preds = %299
  %309 = load %struct._strchunk*, %struct._strchunk** %16, align 8
  store %struct._strchunk* %309, %struct._strchunk** %8, align 8
  br label %311

310:                                              ; preds = %299
  store i32 -1, i32* %4, align 4
  br label %315

311:                                              ; preds = %308
  br label %312

312:                                              ; preds = %311, %241
  br label %208, !llvm.loop !25

313:                                              ; preds = %215
  br label %314

314:                                              ; preds = %313, %206
  store i32 0, i32* %4, align 4
  br label %315

315:                                              ; preds = %314, %310, %193
  %316 = load i32, i32* %4, align 4
  ret i32 %316
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @write_and_free(%struct.conn* %0, i8* %1, i32 %2) #0 {
  %4 = alloca %struct.conn*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct._mc_resp*, align 8
  store %struct.conn* %0, %struct.conn** %4, align 8
  store i8* %1, i8** %5, align 8
  store i32 %2, i32* %6, align 4
  %8 = load i8*, i8** %5, align 8
  %9 = icmp ne i8* %8, null
  br i1 %9, label %10, label %21

10:                                               ; preds = %3
  %11 = load %struct.conn*, %struct.conn** %4, align 8
  %12 = getelementptr inbounds %struct.conn, %struct.conn* %11, i32 0, i32 19
  %13 = load %struct._mc_resp*, %struct._mc_resp** %12, align 8
  store %struct._mc_resp* %13, %struct._mc_resp** %7, align 8
  %14 = load i8*, i8** %5, align 8
  %15 = load %struct._mc_resp*, %struct._mc_resp** %7, align 8
  %16 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %15, i32 0, i32 4
  store i8* %14, i8** %16, align 8
  %17 = load %struct._mc_resp*, %struct._mc_resp** %7, align 8
  %18 = load i8*, i8** %5, align 8
  %19 = load i32, i32* %6, align 4
  call void @resp_add_iov(%struct._mc_resp* %17, i8* %18, i32 %19)
  %20 = load %struct.conn*, %struct.conn** %4, align 8
  call void @conn_set_state(%struct.conn* %20, i32 1)
  br label %23

21:                                               ; preds = %3
  %22 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_of_memory(%struct.conn* %22, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.21, i64 0, i64 0))
  br label %23

23:                                               ; preds = %21, %10
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @append_stat(i8* %0, void (i8*, i16, i8*, i32, i8*)* %1, %struct.conn* %2, i8* %3, ...) #0 {
  %5 = alloca i8*, align 8
  %6 = alloca void (i8*, i16, i8*, i32, i8*)*, align 8
  %7 = alloca %struct.conn*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca [128 x i8], align 16
  %10 = alloca i32, align 4
  %11 = alloca [1 x %struct.__va_list_tag], align 16
  store i8* %0, i8** %5, align 8
  store void (i8*, i16, i8*, i32, i8*)* %1, void (i8*, i16, i8*, i32, i8*)** %6, align 8
  store %struct.conn* %2, %struct.conn** %7, align 8
  store i8* %3, i8** %8, align 8
  %12 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %11, i64 0, i64 0
  %13 = bitcast %struct.__va_list_tag* %12 to i8*
  call void @llvm.va_start(i8* %13)
  %14 = getelementptr inbounds [128 x i8], [128 x i8]* %9, i64 0, i64 0
  %15 = load i8*, i8** %8, align 8
  %16 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %11, i64 0, i64 0
  %17 = call i32 @vsnprintf(i8* %14, i64 127, i8* %15, %struct.__va_list_tag* %16) #14
  store i32 %17, i32* %10, align 4
  %18 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %11, i64 0, i64 0
  %19 = bitcast %struct.__va_list_tag* %18 to i8*
  call void @llvm.va_end(i8* %19)
  %20 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %6, align 8
  %21 = load i8*, i8** %5, align 8
  %22 = load i8*, i8** %5, align 8
  %23 = call i64 @strlen(i8* %22) #16
  %24 = trunc i64 %23 to i16
  %25 = getelementptr inbounds [128 x i8], [128 x i8]* %9, i64 0, i64 0
  %26 = load i32, i32* %10, align 4
  %27 = load %struct.conn*, %struct.conn** %7, align 8
  %28 = bitcast %struct.conn* %27 to i8*
  call void %20(i8* %21, i16 zeroext %24, i8* %25, i32 %26, i8* %28)
  ret void
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #8

; Function Attrs: nounwind
declare dso_local i32 @vsnprintf(i8*, i64, i8*, %struct.__va_list_tag*) #2

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @server_stats(void (i8*, i16, i8*, i32, i8*)* %0, %struct.conn* %1) #0 {
  %3 = alloca void (i8*, i16, i8*, i32, i8*)*, align 8
  %4 = alloca %struct.conn*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.thread_stats, align 8
  %8 = alloca %struct.slab_stats, align 8
  %9 = alloca %struct.rusage, align 8
  store void (i8*, i16, i8*, i32, i8*)* %0, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  store %struct.conn* %1, %struct.conn** %4, align 8
  %10 = call i32 @getpid() #14
  store i32 %10, i32* %5, align 4
  %11 = load volatile i32, i32* @current_time, align 4
  store i32 %11, i32* %6, align 4
  call void @threadlocal_stats_aggregate(%struct.thread_stats* %7)
  call void @slab_stats_aggregate(%struct.thread_stats* %7, %struct.slab_stats* %8)
  %12 = call i32 @getrusage(i32 0, %struct.rusage* %9) #14
  call void @STATS_LOCK()
  %13 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %14 = load %struct.conn*, %struct.conn** %4, align 8
  %15 = load i32, i32* %5, align 4
  %16 = sext i32 %15 to i64
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.22, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %13, %struct.conn* %14, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.23, i64 0, i64 0), i64 %16)
  %17 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %18 = load %struct.conn*, %struct.conn** %4, align 8
  %19 = load i32, i32* %6, align 4
  %20 = sub i32 %19, 60
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.24, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %17, %struct.conn* %18, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), i32 %20)
  %21 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %22 = load %struct.conn*, %struct.conn** %4, align 8
  %23 = load i32, i32* %6, align 4
  %24 = zext i32 %23 to i64
  %25 = load i64, i64* @process_started, align 8
  %26 = add nsw i64 %24, %25
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %21, %struct.conn* %22, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.27, i64 0, i64 0), i64 %26)
  %27 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %28 = load %struct.conn*, %struct.conn** %4, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.28, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %27, %struct.conn* %28, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.29, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0))
  %29 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %30 = load %struct.conn*, %struct.conn** %4, align 8
  %31 = call i8* @event_get_version()
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.31, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %29, %struct.conn* %30, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.29, i64 0, i64 0), i8* %31)
  %32 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %33 = load %struct.conn*, %struct.conn** %4, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.32, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %32, %struct.conn* %33, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33, i64 0, i64 0), i32 64)
  %34 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %35 = load %struct.conn*, %struct.conn** %4, align 8
  %36 = getelementptr inbounds %struct.rusage, %struct.rusage* %9, i32 0, i32 0
  %37 = getelementptr inbounds %struct.timeval, %struct.timeval* %36, i32 0, i32 0
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds %struct.rusage, %struct.rusage* %9, i32 0, i32 0
  %40 = getelementptr inbounds %struct.timeval, %struct.timeval* %39, i32 0, i32 1
  %41 = load i64, i64* %40, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.34, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %34, %struct.conn* %35, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.35, i64 0, i64 0), i64 %38, i64 %41)
  %42 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %43 = load %struct.conn*, %struct.conn** %4, align 8
  %44 = getelementptr inbounds %struct.rusage, %struct.rusage* %9, i32 0, i32 1
  %45 = getelementptr inbounds %struct.timeval, %struct.timeval* %44, i32 0, i32 0
  %46 = load i64, i64* %45, align 8
  %47 = getelementptr inbounds %struct.rusage, %struct.rusage* %9, i32 0, i32 1
  %48 = getelementptr inbounds %struct.timeval, %struct.timeval* %47, i32 0, i32 1
  %49 = load i64, i64* %48, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.36, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %42, %struct.conn* %43, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.35, i64 0, i64 0), i64 %46, i64 %49)
  %50 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %51 = load %struct.conn*, %struct.conn** %4, align 8
  %52 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 1), align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.37, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %50, %struct.conn* %51, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33, i64 0, i64 0), i32 %52)
  %53 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %54 = load %struct.conn*, %struct.conn** %4, align 8
  %55 = load i64, i64* getelementptr inbounds (%struct.stats_state, %struct.stats_state* @stats_state, i32 0, i32 2), align 8
  %56 = sub i64 %55, 1
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.38, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %53, %struct.conn* %54, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %56)
  %57 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %58 = load %struct.conn*, %struct.conn** %4, align 8
  %59 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 1), align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.40, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %57, %struct.conn* %58, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %59)
  %60 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 27), align 1
  %61 = trunc i8 %60 to i1
  br i1 %61, label %62, label %66

62:                                               ; preds = %2
  %63 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %64 = load %struct.conn*, %struct.conn** %4, align 8
  %65 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 2), align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.41, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %63, %struct.conn* %64, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %65)
  br label %66

66:                                               ; preds = %62, %2
  %67 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %68 = load %struct.conn*, %struct.conn** %4, align 8
  %69 = load i32, i32* getelementptr inbounds (%struct.stats_state, %struct.stats_state* @stats_state, i32 0, i32 4), align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.42, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %67, %struct.conn* %68, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), i32 %69)
  %70 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %71 = load %struct.conn*, %struct.conn** %4, align 8
  %72 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %7, i32 0, i32 19
  %73 = load i64, i64* %72, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.43, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %70, %struct.conn* %71, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %73)
  %74 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %75 = load %struct.conn*, %struct.conn** %4, align 8
  %76 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %7, i32 0, i32 20
  %77 = load i64, i64* %76, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.44, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %74, %struct.conn* %75, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %77)
  %78 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %79 = load %struct.conn*, %struct.conn** %4, align 8
  %80 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %7, i32 0, i32 21
  %81 = load i64, i64* %80, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.45, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %78, %struct.conn* %79, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %81)
  %82 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %83 = load %struct.conn*, %struct.conn** %4, align 8
  %84 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %7, i32 0, i32 33
  %85 = load i64, i64* %84, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.46, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %82, %struct.conn* %83, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %85)
  %86 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %87 = load %struct.conn*, %struct.conn** %4, align 8
  %88 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %7, i32 0, i32 34
  %89 = load i64, i64* %88, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.47, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %86, %struct.conn* %87, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %89)
  %90 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %91 = load %struct.conn*, %struct.conn** %4, align 8
  %92 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %7, i32 0, i32 35
  %93 = load i64, i64* %92, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.48, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %90, %struct.conn* %91, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %93)
  %94 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %95 = load %struct.conn*, %struct.conn** %4, align 8
  %96 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %7, i32 0, i32 22
  %97 = load i64, i64* %96, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.49, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %94, %struct.conn* %95, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %97)
  %98 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %99 = load %struct.conn*, %struct.conn** %4, align 8
  %100 = load i32, i32* getelementptr inbounds (%struct.stats_state, %struct.stats_state* @stats_state, i32 0, i32 5), align 4
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.50, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %98, %struct.conn* %99, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), i32 %100)
  %101 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %102 = load %struct.conn*, %struct.conn** %4, align 8
  %103 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %7, i32 0, i32 1
  %104 = load i64, i64* %103, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.51, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %101, %struct.conn* %102, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %104)
  %105 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %106 = load %struct.conn*, %struct.conn** %4, align 8
  %107 = getelementptr inbounds %struct.slab_stats, %struct.slab_stats* %8, i32 0, i32 0
  %108 = load i64, i64* %107, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.52, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %105, %struct.conn* %106, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %108)
  %109 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %110 = load %struct.conn*, %struct.conn** %4, align 8
  %111 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %7, i32 0, i32 14
  %112 = load i64, i64* %111, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.53, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %109, %struct.conn* %110, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %112)
  %113 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %114 = load %struct.conn*, %struct.conn** %4, align 8
  %115 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %7, i32 0, i32 5
  %116 = load i64, i64* %115, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.54, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %113, %struct.conn* %114, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %116)
  %117 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %118 = load %struct.conn*, %struct.conn** %4, align 8
  %119 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %7, i32 0, i32 11
  %120 = load i64, i64* %119, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.55, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %117, %struct.conn* %118, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %120)
  %121 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %122 = load %struct.conn*, %struct.conn** %4, align 8
  %123 = getelementptr inbounds %struct.slab_stats, %struct.slab_stats* %8, i32 0, i32 1
  %124 = load i64, i64* %123, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.56, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %121, %struct.conn* %122, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %124)
  %125 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %126 = load %struct.conn*, %struct.conn** %4, align 8
  %127 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %7, i32 0, i32 2
  %128 = load i64, i64* %127, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.57, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %125, %struct.conn* %126, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %128)
  %129 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %130 = load %struct.conn*, %struct.conn** %4, align 8
  %131 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %7, i32 0, i32 3
  %132 = load i64, i64* %131, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.58, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %129, %struct.conn* %130, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %132)
  %133 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %134 = load %struct.conn*, %struct.conn** %4, align 8
  %135 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %7, i32 0, i32 4
  %136 = load i64, i64* %135, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.59, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %133, %struct.conn* %134, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %136)
  %137 = load %struct.conn*, %struct.conn** %4, align 8
  %138 = getelementptr inbounds %struct.conn, %struct.conn* %137, i32 0, i32 42
  %139 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %138, align 8
  %140 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %139, i32 0, i32 10
  %141 = load i8*, i8** %140, align 8
  %142 = icmp ne i8* %141, null
  br i1 %142, label %143, label %168

143:                                              ; preds = %66
  %144 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %145 = load %struct.conn*, %struct.conn** %4, align 8
  %146 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %7, i32 0, i32 25
  %147 = load i64, i64* %146, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.60, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %144, %struct.conn* %145, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %147)
  %148 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %149 = load %struct.conn*, %struct.conn** %4, align 8
  %150 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %7, i32 0, i32 26
  %151 = load i64, i64* %150, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.61, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %148, %struct.conn* %149, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %151)
  %152 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %153 = load %struct.conn*, %struct.conn** %4, align 8
  %154 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %7, i32 0, i32 27
  %155 = load i64, i64* %154, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.62, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %152, %struct.conn* %153, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %155)
  %156 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %157 = load %struct.conn*, %struct.conn** %4, align 8
  %158 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %7, i32 0, i32 28
  %159 = load i64, i64* %158, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.63, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %156, %struct.conn* %157, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %159)
  %160 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %161 = load %struct.conn*, %struct.conn** %4, align 8
  %162 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %7, i32 0, i32 29
  %163 = load i64, i64* %162, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.64, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %160, %struct.conn* %161, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %163)
  %164 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %165 = load %struct.conn*, %struct.conn** %4, align 8
  %166 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %7, i32 0, i32 30
  %167 = load i64, i64* %166, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.65, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %164, %struct.conn* %165, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %167)
  br label %168

168:                                              ; preds = %143, %66
  %169 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %170 = load %struct.conn*, %struct.conn** %4, align 8
  %171 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %7, i32 0, i32 7
  %172 = load i64, i64* %171, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.66, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %169, %struct.conn* %170, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %172)
  %173 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %174 = load %struct.conn*, %struct.conn** %4, align 8
  %175 = getelementptr inbounds %struct.slab_stats, %struct.slab_stats* %8, i32 0, i32 3
  %176 = load i64, i64* %175, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.67, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %173, %struct.conn* %174, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %176)
  %177 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %178 = load %struct.conn*, %struct.conn** %4, align 8
  %179 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %7, i32 0, i32 8
  %180 = load i64, i64* %179, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.68, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %177, %struct.conn* %178, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %180)
  %181 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %182 = load %struct.conn*, %struct.conn** %4, align 8
  %183 = getelementptr inbounds %struct.slab_stats, %struct.slab_stats* %8, i32 0, i32 6
  %184 = load i64, i64* %183, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.69, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %181, %struct.conn* %182, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %184)
  %185 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %186 = load %struct.conn*, %struct.conn** %4, align 8
  %187 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %7, i32 0, i32 9
  %188 = load i64, i64* %187, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.70, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %185, %struct.conn* %186, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %188)
  %189 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %190 = load %struct.conn*, %struct.conn** %4, align 8
  %191 = getelementptr inbounds %struct.slab_stats, %struct.slab_stats* %8, i32 0, i32 7
  %192 = load i64, i64* %191, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.71, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %189, %struct.conn* %190, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %192)
  %193 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %194 = load %struct.conn*, %struct.conn** %4, align 8
  %195 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %7, i32 0, i32 10
  %196 = load i64, i64* %195, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.72, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %193, %struct.conn* %194, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %196)
  %197 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %198 = load %struct.conn*, %struct.conn** %4, align 8
  %199 = getelementptr inbounds %struct.slab_stats, %struct.slab_stats* %8, i32 0, i32 4
  %200 = load i64, i64* %199, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.73, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %197, %struct.conn* %198, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %200)
  %201 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %202 = load %struct.conn*, %struct.conn** %4, align 8
  %203 = getelementptr inbounds %struct.slab_stats, %struct.slab_stats* %8, i32 0, i32 5
  %204 = load i64, i64* %203, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.74, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %201, %struct.conn* %202, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %204)
  %205 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %206 = load %struct.conn*, %struct.conn** %4, align 8
  %207 = getelementptr inbounds %struct.slab_stats, %struct.slab_stats* %8, i32 0, i32 2
  %208 = load i64, i64* %207, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.75, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %205, %struct.conn* %206, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %208)
  %209 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %210 = load %struct.conn*, %struct.conn** %4, align 8
  %211 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %7, i32 0, i32 6
  %212 = load i64, i64* %211, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.76, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %209, %struct.conn* %210, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %212)
  %213 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %214 = load %struct.conn*, %struct.conn** %4, align 8
  %215 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %7, i32 0, i32 23
  %216 = load i64, i64* %215, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.77, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %213, %struct.conn* %214, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %216)
  %217 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %218 = load %struct.conn*, %struct.conn** %4, align 8
  %219 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %7, i32 0, i32 24
  %220 = load i64, i64* %219, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.78, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %217, %struct.conn* %218, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %220)
  %221 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %222 = load %struct.conn*, %struct.conn** %4, align 8
  %223 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %7, i32 0, i32 16
  %224 = load i64, i64* %223, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.79, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %221, %struct.conn* %222, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %224)
  %225 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %226 = load %struct.conn*, %struct.conn** %4, align 8
  %227 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %7, i32 0, i32 17
  %228 = load i64, i64* %227, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.80, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %225, %struct.conn* %226, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %228)
  %229 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 50), align 4
  %230 = icmp ne i32 %229, 0
  br i1 %230, label %231, label %236

231:                                              ; preds = %168
  %232 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %233 = load %struct.conn*, %struct.conn** %4, align 8
  %234 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %7, i32 0, i32 18
  %235 = load i64, i64* %234, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.81, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %232, %struct.conn* %233, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %235)
  br label %236

236:                                              ; preds = %231, %168
  %237 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %238 = load %struct.conn*, %struct.conn** %4, align 8
  %239 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %7, i32 0, i32 12
  %240 = load i64, i64* %239, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.82, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %237, %struct.conn* %238, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %240)
  %241 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %242 = load %struct.conn*, %struct.conn** %4, align 8
  %243 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %7, i32 0, i32 13
  %244 = load i64, i64* %243, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.83, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %241, %struct.conn* %242, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %244)
  %245 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %246 = load %struct.conn*, %struct.conn** %4, align 8
  %247 = load i64, i64* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 0), align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.84, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %245, %struct.conn* %246, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %247)
  %248 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %249 = load %struct.conn*, %struct.conn** %4, align 8
  %250 = load i8, i8* getelementptr inbounds (%struct.stats_state, %struct.stats_state* @stats_state, i32 0, i32 9), align 1
  %251 = trunc i8 %250 to i1
  %252 = zext i1 %251 to i32
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.85, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %248, %struct.conn* %249, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), i32 %252)
  %253 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %254 = load %struct.conn*, %struct.conn** %4, align 8
  %255 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 4), align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.86, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %253, %struct.conn* %254, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %255)
  %256 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %257 = load %struct.conn*, %struct.conn** %4, align 8
  %258 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 14), align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.87, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %256, %struct.conn* %257, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %258)
  %259 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %260 = load %struct.conn*, %struct.conn** %4, align 8
  %261 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 14), align 4
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.88, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %259, %struct.conn* %260, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33, i64 0, i64 0), i32 %261)
  %262 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %263 = load %struct.conn*, %struct.conn** %4, align 8
  %264 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %7, i32 0, i32 15
  %265 = load i64, i64* %264, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.89, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %262, %struct.conn* %263, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %265)
  %266 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %267 = load %struct.conn*, %struct.conn** %4, align 8
  %268 = load i32, i32* getelementptr inbounds (%struct.stats_state, %struct.stats_state* @stats_state, i32 0, i32 6), align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.90, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %266, %struct.conn* %267, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), i32 %268)
  %269 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %270 = load %struct.conn*, %struct.conn** %4, align 8
  %271 = load i64, i64* getelementptr inbounds (%struct.stats_state, %struct.stats_state* @stats_state, i32 0, i32 3), align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.91, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %269, %struct.conn* %270, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %271)
  %272 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %273 = load %struct.conn*, %struct.conn** %4, align 8
  %274 = load i8, i8* getelementptr inbounds (%struct.stats_state, %struct.stats_state* @stats_state, i32 0, i32 8), align 8
  %275 = trunc i8 %274 to i1
  %276 = zext i1 %275 to i32
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.92, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %272, %struct.conn* %273, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), i32 %276)
  %277 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 31), align 1
  %278 = trunc i8 %277 to i1
  br i1 %278, label %279, label %306

279:                                              ; preds = %236
  %280 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %281 = load %struct.conn*, %struct.conn** %4, align 8
  %282 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 6), align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.93, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %280, %struct.conn* %281, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %282)
  %283 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %284 = load %struct.conn*, %struct.conn** %4, align 8
  %285 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 9), align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.94, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %283, %struct.conn* %284, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %285)
  %286 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %287 = load %struct.conn*, %struct.conn** %4, align 8
  %288 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 7), align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.95, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %286, %struct.conn* %287, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %288)
  %289 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %290 = load %struct.conn*, %struct.conn** %4, align 8
  %291 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 8), align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.96, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %289, %struct.conn* %290, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %291)
  %292 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %293 = load %struct.conn*, %struct.conn** %4, align 8
  %294 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 10), align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.97, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %292, %struct.conn* %293, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %294)
  %295 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %296 = load %struct.conn*, %struct.conn** %4, align 8
  %297 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 11), align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.98, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %295, %struct.conn* %296, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %297)
  %298 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %299 = load %struct.conn*, %struct.conn** %4, align 8
  %300 = load i8, i8* getelementptr inbounds (%struct.stats_state, %struct.stats_state* @stats_state, i32 0, i32 10), align 2
  %301 = trunc i8 %300 to i1
  %302 = zext i1 %301 to i32
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.99, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %298, %struct.conn* %299, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), i32 %302)
  %303 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %304 = load %struct.conn*, %struct.conn** %4, align 8
  %305 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 5), align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.100, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %303, %struct.conn* %304, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %305)
  br label %306

306:                                              ; preds = %279, %236
  %307 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 28), align 2
  %308 = trunc i8 %307 to i1
  br i1 %308, label %309, label %318

309:                                              ; preds = %306
  %310 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %311 = load %struct.conn*, %struct.conn** %4, align 8
  %312 = load i8, i8* getelementptr inbounds (%struct.stats_state, %struct.stats_state* @stats_state, i32 0, i32 11), align 1
  %313 = trunc i8 %312 to i1
  %314 = zext i1 %313 to i32
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.101, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %310, %struct.conn* %311, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), i32 %314)
  %315 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %316 = load %struct.conn*, %struct.conn** %4, align 8
  %317 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 12), align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.102, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %315, %struct.conn* %316, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), i64 %317)
  br label %318

318:                                              ; preds = %309, %306
  %319 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 29), align 1
  %320 = trunc i8 %319 to i1
  br i1 %320, label %321, label %325

321:                                              ; preds = %318
  %322 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %323 = load %struct.conn*, %struct.conn** %4, align 8
  %324 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 13), align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.103, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %322, %struct.conn* %323, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %324)
  br label %325

325:                                              ; preds = %321, %318
  %326 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %327 = load %struct.conn*, %struct.conn** %4, align 8
  %328 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 3), align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.104, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %326, %struct.conn* %327, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %328)
  %329 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %330 = load %struct.conn*, %struct.conn** %4, align 8
  %331 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 15), align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.105, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %329, %struct.conn* %330, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %331)
  %332 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %333 = load %struct.conn*, %struct.conn** %4, align 8
  %334 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 16), align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.106, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %332, %struct.conn* %333, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %334)
  %335 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %336 = load %struct.conn*, %struct.conn** %4, align 8
  %337 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 17), align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.107, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %335, %struct.conn* %336, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %337)
  %338 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %339 = load %struct.conn*, %struct.conn** %4, align 8
  %340 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 18), align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.108, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %338, %struct.conn* %339, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %340)
  %341 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %342 = load %struct.conn*, %struct.conn** %4, align 8
  %343 = load i32, i32* getelementptr inbounds (%struct.stats_state, %struct.stats_state* @stats_state, i32 0, i32 7), align 4
  %344 = zext i32 %343 to i64
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.109, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %341, %struct.conn* %342, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %344)
  call void @STATS_UNLOCK()
  %345 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %346 = load %struct.conn*, %struct.conn** %4, align 8
  call void @storage_stats(void (i8*, i16, i8*, i32, i8*)* %345, %struct.conn* %346)
  %347 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %348 = load %struct.conn*, %struct.conn** %4, align 8
  %349 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 23), align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.110, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %347, %struct.conn* %348, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %349)
  %350 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %351 = load %struct.conn*, %struct.conn** %4, align 8
  %352 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 24), align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.111, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %350, %struct.conn* %351, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %352)
  ret void
}

; Function Attrs: nounwind
declare dso_local i32 @getpid() #2

; Function Attrs: nounwind
declare dso_local i32 @getrusage(i32, %struct.rusage*) #2

declare dso_local i8* @event_get_version() #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @process_stat_settings(void (i8*, i16, i8*, i32, i8*)* %0, i8* %1) #0 {
  %3 = alloca void (i8*, i16, i8*, i32, i8*)*, align 8
  %4 = alloca i8*, align 8
  store void (i8*, i16, i8*, i32, i8*)* %0, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %6 = load i8*, i8** %4, align 8
  %7 = bitcast i8* %6 to %struct.conn*
  %8 = load i64, i64* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 0), align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.112, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %5, %struct.conn* %7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %8)
  %9 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %10 = load i8*, i8** %4, align 8
  %11 = bitcast i8* %10 to %struct.conn*
  %12 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 1), align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.113, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %9, %struct.conn* %11, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33, i64 0, i64 0), i32 %12)
  %13 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %14 = load i8*, i8** %4, align 8
  %15 = bitcast i8* %14 to %struct.conn*
  %16 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 2), align 4
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.114, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %13, %struct.conn* %15, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33, i64 0, i64 0), i32 %16)
  %17 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %18 = load i8*, i8** %4, align 8
  %19 = bitcast i8* %18 to %struct.conn*
  %20 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 3), align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.115, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %17, %struct.conn* %19, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33, i64 0, i64 0), i32 %20)
  %21 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %22 = load i8*, i8** %4, align 8
  %23 = bitcast i8* %22 to %struct.conn*
  %24 = load i8*, i8** getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 4), align 8
  %25 = icmp ne i8* %24, null
  br i1 %25, label %26, label %28

26:                                               ; preds = %2
  %27 = load i8*, i8** getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 4), align 8
  br label %29

28:                                               ; preds = %2
  br label %29

29:                                               ; preds = %28, %26
  %30 = phi i8* [ %27, %26 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.117, i64 0, i64 0), %28 ]
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.116, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %21, %struct.conn* %23, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.29, i64 0, i64 0), i8* %30)
  %31 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %32 = load i8*, i8** %4, align 8
  %33 = bitcast i8* %32 to %struct.conn*
  %34 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.118, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %31, %struct.conn* %33, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33, i64 0, i64 0), i32 %34)
  %35 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %36 = load i8*, i8** %4, align 8
  %37 = bitcast i8* %36 to %struct.conn*
  %38 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 6), align 4
  %39 = zext i32 %38 to i64
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.119, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %35, %struct.conn* %37, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.23, i64 0, i64 0), i64 %39)
  %40 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %41 = load i8*, i8** %4, align 8
  %42 = bitcast i8* %41 to %struct.conn*
  %43 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 8), align 8
  %44 = icmp ne i32 %43, 0
  %45 = zext i1 %44 to i64
  %46 = select i1 %44, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.121, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.122, i64 0, i64 0)
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.120, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %40, %struct.conn* %42, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.29, i64 0, i64 0), i8* %46)
  %47 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %48 = load i8*, i8** %4, align 8
  %49 = bitcast i8* %48 to %struct.conn*
  %50 = load i8*, i8** getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 9), align 8
  %51 = icmp ne i8* %50, null
  br i1 %51, label %52, label %54

52:                                               ; preds = %29
  %53 = load i8*, i8** getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 9), align 8
  br label %55

54:                                               ; preds = %29
  br label %55

55:                                               ; preds = %54, %52
  %56 = phi i8* [ %53, %52 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.117, i64 0, i64 0), %54 ]
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.123, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %47, %struct.conn* %49, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.29, i64 0, i64 0), i8* %56)
  %57 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %58 = load i8*, i8** %4, align 8
  %59 = bitcast i8* %58 to %struct.conn*
  %60 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 11), align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.124, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %57, %struct.conn* %59, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.125, i64 0, i64 0), i32 %60)
  %61 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %62 = load i8*, i8** %4, align 8
  %63 = bitcast i8* %62 to %struct.conn*
  %64 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 36), align 8
  %65 = trunc i8 %64 to i1
  %66 = zext i1 %65 to i64
  %67 = select i1 %65, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.127, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.128, i64 0, i64 0)
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.126, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %61, %struct.conn* %63, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.29, i64 0, i64 0), i8* %67)
  %68 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %69 = load i8*, i8** %4, align 8
  %70 = bitcast i8* %69 to %struct.conn*
  %71 = load double, double* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 12), align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.129, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %68, %struct.conn* %70, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.130, i64 0, i64 0), double %71)
  %72 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %73 = load i8*, i8** %4, align 8
  %74 = bitcast i8* %73 to %struct.conn*
  %75 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 13), align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.131, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %72, %struct.conn* %74, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33, i64 0, i64 0), i32 %75)
  %76 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %77 = load i8*, i8** %4, align 8
  %78 = bitcast i8* %77 to %struct.conn*
  %79 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 14), align 4
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.132, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %76, %struct.conn* %78, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33, i64 0, i64 0), i32 %79)
  %80 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %81 = load i8*, i8** %4, align 8
  %82 = bitcast i8* %81 to %struct.conn*
  %83 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 15), align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.133, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %80, %struct.conn* %82, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33, i64 0, i64 0), i32 %83)
  %84 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %85 = load i8*, i8** %4, align 8
  %86 = bitcast i8* %85 to %struct.conn*
  %87 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 16), align 4
  %88 = sext i8 %87 to i32
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.134, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %84, %struct.conn* %86, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.135, i64 0, i64 0), i32 %88)
  %89 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %90 = load i8*, i8** %4, align 8
  %91 = bitcast i8* %90 to %struct.conn*
  %92 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 17), align 8
  %93 = icmp ne i32 %92, 0
  %94 = zext i1 %93 to i64
  %95 = select i1 %93, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.127, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.128, i64 0, i64 0)
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.136, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %89, %struct.conn* %91, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.29, i64 0, i64 0), i8* %95)
  %96 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %97 = load i8*, i8** %4, align 8
  %98 = bitcast i8* %97 to %struct.conn*
  %99 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 18), align 4
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.137, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %96, %struct.conn* %98, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33, i64 0, i64 0), i32 %99)
  %100 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %101 = load i8*, i8** %4, align 8
  %102 = bitcast i8* %101 to %struct.conn*
  %103 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 19), align 8
  %104 = trunc i8 %103 to i1
  %105 = zext i1 %104 to i64
  %106 = select i1 %104, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.127, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.128, i64 0, i64 0)
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.138, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %100, %struct.conn* %102, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.29, i64 0, i64 0), i8* %106)
  %107 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %108 = load i8*, i8** %4, align 8
  %109 = bitcast i8* %108 to %struct.conn*
  %110 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 21), align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.139, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %107, %struct.conn* %109, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33, i64 0, i64 0), i32 %110)
  %111 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %112 = load i8*, i8** %4, align 8
  %113 = bitcast i8* %112 to %struct.conn*
  %114 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 20), align 4
  %115 = call i8* @prot_text(i32 %114)
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.140, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %111, %struct.conn* %113, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.29, i64 0, i64 0), i8* %115)
  %116 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %117 = load i8*, i8** %4, align 8
  %118 = bitcast i8* %117 to %struct.conn*
  %119 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 26), align 4
  %120 = trunc i8 %119 to i1
  %121 = zext i1 %120 to i64
  %122 = select i1 %120, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.127, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.128, i64 0, i64 0)
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.141, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %116, %struct.conn* %118, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.29, i64 0, i64 0), i8* %122)
  %123 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %124 = load i8*, i8** %4, align 8
  %125 = bitcast i8* %124 to %struct.conn*
  %126 = load i8*, i8** getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 10), align 8
  %127 = icmp ne i8* %126, null
  br i1 %127, label %128, label %130

128:                                              ; preds = %55
  %129 = load i8*, i8** getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 10), align 8
  br label %131

130:                                              ; preds = %55
  br label %131

131:                                              ; preds = %130, %128
  %132 = phi i8* [ %129, %128 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.128, i64 0, i64 0), %130 ]
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.142, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %123, %struct.conn* %125, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.29, i64 0, i64 0), i8* %132)
  %133 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %134 = load i8*, i8** %4, align 8
  %135 = bitcast i8* %134 to %struct.conn*
  %136 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 22), align 4
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.143, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %133, %struct.conn* %135, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33, i64 0, i64 0), i32 %136)
  %137 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %138 = load i8*, i8** %4, align 8
  %139 = bitcast i8* %138 to %struct.conn*
  %140 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 27), align 1
  %141 = trunc i8 %140 to i1
  %142 = zext i1 %141 to i64
  %143 = select i1 %141, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.127, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.128, i64 0, i64 0)
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.144, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %137, %struct.conn* %139, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.29, i64 0, i64 0), i8* %143)
  %144 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %145 = load i8*, i8** %4, align 8
  %146 = bitcast i8* %145 to %struct.conn*
  %147 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 35), align 4
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.145, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %144, %struct.conn* %146, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33, i64 0, i64 0), i32 %147)
  %148 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %149 = load i8*, i8** %4, align 8
  %150 = bitcast i8* %149 to %struct.conn*
  %151 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 31), align 1
  %152 = trunc i8 %151 to i1
  %153 = zext i1 %152 to i64
  %154 = select i1 %152, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.127, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.128, i64 0, i64 0)
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.146, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %148, %struct.conn* %150, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.29, i64 0, i64 0), i8* %154)
  %155 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %156 = load i8*, i8** %4, align 8
  %157 = bitcast i8* %156 to %struct.conn*
  %158 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 32), align 4
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.147, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %155, %struct.conn* %157, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33, i64 0, i64 0), i32 %158)
  %159 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %160 = load i8*, i8** %4, align 8
  %161 = bitcast i8* %160 to %struct.conn*
  %162 = load double, double* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 33), align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.148, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %159, %struct.conn* %161, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.130, i64 0, i64 0), double %162)
  %163 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %164 = load i8*, i8** %4, align 8
  %165 = bitcast i8* %164 to %struct.conn*
  %166 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 34), align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.149, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %163, %struct.conn* %165, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), i32 %166)
  %167 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %168 = load i8*, i8** %4, align 8
  %169 = bitcast i8* %168 to %struct.conn*
  %170 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 23), align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.150, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %167, %struct.conn* %169, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33, i64 0, i64 0), i32 %170)
  %171 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %172 = load i8*, i8** %4, align 8
  %173 = bitcast i8* %172 to %struct.conn*
  %174 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 28), align 2
  %175 = trunc i8 %174 to i1
  %176 = zext i1 %175 to i64
  %177 = select i1 %175, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.127, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.128, i64 0, i64 0)
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.151, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %171, %struct.conn* %173, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.29, i64 0, i64 0), i8* %177)
  %178 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %179 = load i8*, i8** %4, align 8
  %180 = bitcast i8* %179 to %struct.conn*
  %181 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 41), align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.152, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %178, %struct.conn* %180, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33, i64 0, i64 0), i32 %181)
  %182 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %183 = load i8*, i8** %4, align 8
  %184 = bitcast i8* %183 to %struct.conn*
  %185 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 42), align 4
  %186 = zext i32 %185 to i64
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.153, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %182, %struct.conn* %184, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.23, i64 0, i64 0), i64 %186)
  %187 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %188 = load i8*, i8** %4, align 8
  %189 = bitcast i8* %188 to %struct.conn*
  %190 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 37), align 4
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.154, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %187, %struct.conn* %189, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33, i64 0, i64 0), i32 %190)
  %191 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %192 = load i8*, i8** %4, align 8
  %193 = bitcast i8* %192 to %struct.conn*
  %194 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 38), align 8
  %195 = trunc i8 %194 to i1
  %196 = zext i1 %195 to i64
  %197 = select i1 %195, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.127, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.128, i64 0, i64 0)
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.155, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %191, %struct.conn* %193, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.29, i64 0, i64 0), i8* %197)
  %198 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %199 = load i8*, i8** %4, align 8
  %200 = bitcast i8* %199 to %struct.conn*
  %201 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 39), align 1
  %202 = trunc i8 %201 to i1
  %203 = zext i1 %202 to i64
  %204 = select i1 %202, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.127, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.128, i64 0, i64 0)
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.156, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %198, %struct.conn* %200, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.29, i64 0, i64 0), i8* %204)
  %205 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %206 = load i8*, i8** %4, align 8
  %207 = bitcast i8* %206 to %struct.conn*
  %208 = load i8*, i8** getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 40), align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.157, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %205, %struct.conn* %207, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.29, i64 0, i64 0), i8* %208)
  %209 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %210 = load i8*, i8** %4, align 8
  %211 = bitcast i8* %210 to %struct.conn*
  %212 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 29), align 1
  %213 = trunc i8 %212 to i1
  %214 = zext i1 %213 to i64
  %215 = select i1 %213, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.127, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.128, i64 0, i64 0)
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.158, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %209, %struct.conn* %211, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.29, i64 0, i64 0), i8* %215)
  %216 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %217 = load i8*, i8** %4, align 8
  %218 = bitcast i8* %217 to %struct.conn*
  %219 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 30), align 8
  %220 = trunc i8 %219 to i1
  %221 = zext i1 %220 to i64
  %222 = select i1 %220, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.127, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.128, i64 0, i64 0)
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.159, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %216, %struct.conn* %218, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.29, i64 0, i64 0), i8* %222)
  %223 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %224 = load i8*, i8** %4, align 8
  %225 = bitcast i8* %224 to %struct.conn*
  %226 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 43), align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.160, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %223, %struct.conn* %225, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33, i64 0, i64 0), i32 %226)
  %227 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %228 = load i8*, i8** %4, align 8
  %229 = bitcast i8* %228 to %struct.conn*
  %230 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 44), align 4
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.161, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %227, %struct.conn* %229, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33, i64 0, i64 0), i32 %230)
  %231 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %232 = load i8*, i8** %4, align 8
  %233 = bitcast i8* %232 to %struct.conn*
  %234 = load double, double* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 45), align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.162, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %231, %struct.conn* %233, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.130, i64 0, i64 0), double %234)
  %235 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %236 = load i8*, i8** %4, align 8
  %237 = bitcast i8* %236 to %struct.conn*
  %238 = load double, double* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 46), align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.163, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %235, %struct.conn* %237, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.130, i64 0, i64 0), double %238)
  %239 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %240 = load i8*, i8** %4, align 8
  %241 = bitcast i8* %240 to %struct.conn*
  %242 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 48), align 4
  %243 = trunc i8 %242 to i1
  %244 = zext i1 %243 to i64
  %245 = select i1 %243, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.127, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.128, i64 0, i64 0)
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.164, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %239, %struct.conn* %241, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.29, i64 0, i64 0), i8* %245)
  %246 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %247 = load i8*, i8** %4, align 8
  %248 = bitcast i8* %247 to %struct.conn*
  %249 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 49), align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.165, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %246, %struct.conn* %248, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), i32 %249)
  %250 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %251 = load i8*, i8** %4, align 8
  %252 = bitcast i8* %251 to %struct.conn*
  %253 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 50), align 4
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.166, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %250, %struct.conn* %252, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33, i64 0, i64 0), i32 %253)
  %254 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %255 = load i8*, i8** %4, align 8
  %256 = bitcast i8* %255 to %struct.conn*
  %257 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 51), align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.167, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %254, %struct.conn* %256, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), i32 %257)
  %258 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %259 = load i8*, i8** %4, align 8
  %260 = bitcast i8* %259 to %struct.conn*
  %261 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 52), align 4
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.168, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %258, %struct.conn* %260, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), i32 %261)
  %262 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %263 = load i8*, i8** %4, align 8
  %264 = bitcast i8* %263 to %struct.conn*
  %265 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 53), align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.169, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %262, %struct.conn* %264, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), i32 %265)
  %266 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %267 = load i8*, i8** %4, align 8
  %268 = bitcast i8* %267 to %struct.conn*
  %269 = call zeroext i1 @item_stats_sizes_status()
  %270 = zext i1 %269 to i64
  %271 = select i1 %269, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.127, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.128, i64 0, i64 0)
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.170, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %266, %struct.conn* %268, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.29, i64 0, i64 0), i8* %271)
  %272 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %273 = load i8*, i8** %4, align 8
  %274 = bitcast i8* %273 to %struct.conn*
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.171, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %272, %struct.conn* %274, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.29, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.128, i64 0, i64 0))
  %275 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %276 = load i8*, i8** %4, align 8
  %277 = bitcast i8* %276 to %struct.conn*
  %278 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 60), align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.172, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %275, %struct.conn* %277, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), i32 %278)
  %279 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %280 = load i8*, i8** %4, align 8
  %281 = bitcast i8* %280 to %struct.conn*
  %282 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 61), align 4
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.173, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %279, %struct.conn* %281, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), i32 %282)
  %283 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %284 = load i8*, i8** %4, align 8
  %285 = bitcast i8* %284 to %struct.conn*
  %286 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 62), align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.174, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %283, %struct.conn* %285, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), i32 %286)
  %287 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %288 = load i8*, i8** %4, align 8
  %289 = bitcast i8* %288 to %struct.conn*
  %290 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 63), align 4
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.175, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %287, %struct.conn* %289, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), i32 %290)
  %291 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %292 = load i8*, i8** %4, align 8
  %293 = bitcast i8* %292 to %struct.conn*
  %294 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 64), align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.176, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %291, %struct.conn* %293, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), i32 %294)
  %295 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %296 = load i8*, i8** %4, align 8
  %297 = bitcast i8* %296 to %struct.conn*
  %298 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 65), align 4
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.177, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %295, %struct.conn* %297, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), i32 %298)
  %299 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %300 = load i8*, i8** %4, align 8
  %301 = bitcast i8* %300 to %struct.conn*
  %302 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 66), align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.178, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %299, %struct.conn* %301, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), i32 %302)
  %303 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %304 = load i8*, i8** %4, align 8
  %305 = bitcast i8* %304 to %struct.conn*
  %306 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 67), align 4
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.179, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %303, %struct.conn* %305, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), i32 %306)
  %307 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %308 = load i8*, i8** %4, align 8
  %309 = bitcast i8* %308 to %struct.conn*
  %310 = load double, double* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 68), align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.180, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %307, %struct.conn* %309, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.130, i64 0, i64 0), double %310)
  %311 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %312 = load i8*, i8** %4, align 8
  %313 = bitcast i8* %312 to %struct.conn*
  %314 = load double, double* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 69), align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.181, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %311, %struct.conn* %313, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.182, i64 0, i64 0), double %314)
  %315 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %316 = load i8*, i8** %4, align 8
  %317 = bitcast i8* %316 to %struct.conn*
  %318 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 70), align 8
  %319 = trunc i8 %318 to i1
  %320 = zext i1 %319 to i64
  %321 = select i1 %319, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.127, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.128, i64 0, i64 0)
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.183, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %315, %struct.conn* %317, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.29, i64 0, i64 0), i8* %321)
  %322 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %323 = load i8*, i8** %4, align 8
  %324 = bitcast i8* %323 to %struct.conn*
  %325 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 72), align 4
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.184, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %322, %struct.conn* %324, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.29, i64 0, i64 0), i32 %325)
  %326 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %327 = load i8*, i8** %4, align 8
  %328 = bitcast i8* %327 to %struct.conn*
  %329 = load i8*, i8** getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 73), align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.185, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %326, %struct.conn* %328, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.29, i64 0, i64 0), i8* %329)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @get_stats(i8* %0, i32 %1, void (i8*, i16, i8*, i32, i8*)* %2, i8* %3) #0 {
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca void (i8*, i16, i8*, i32, i8*)*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8, align 1
  store i8* %0, i8** %5, align 8
  store i32 %1, i32* %6, align 4
  store void (i8*, i16, i8*, i32, i8*)* %2, void (i8*, i16, i8*, i32, i8*)** %7, align 8
  store i8* %3, i8** %8, align 8
  store i8 1, i8* %9, align 1
  %10 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %7, align 8
  %11 = icmp ne void (i8*, i16, i8*, i32, i8*)* %10, null
  br i1 %11, label %12, label %81

12:                                               ; preds = %4
  %13 = load i8*, i8** %5, align 8
  %14 = icmp ne i8* %13, null
  br i1 %14, label %34, label %15

15:                                               ; preds = %12
  call void @STATS_LOCK()
  %16 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %7, align 8
  %17 = load i8*, i8** %8, align 8
  %18 = bitcast i8* %17 to %struct.conn*
  %19 = load i64, i64* getelementptr inbounds (%struct.stats_state, %struct.stats_state* @stats_state, i32 0, i32 1), align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.186, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %16, %struct.conn* %18, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %19)
  %20 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %7, align 8
  %21 = load i8*, i8** %8, align 8
  %22 = bitcast i8* %21 to %struct.conn*
  %23 = load i64, i64* getelementptr inbounds (%struct.stats_state, %struct.stats_state* @stats_state, i32 0, i32 0), align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.187, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %20, %struct.conn* %22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %23)
  %24 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %7, align 8
  %25 = load i8*, i8** %8, align 8
  %26 = bitcast i8* %25 to %struct.conn*
  %27 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 0), align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.188, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %24, %struct.conn* %26, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %27)
  call void @STATS_UNLOCK()
  %28 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %7, align 8
  %29 = load i8*, i8** %8, align 8
  %30 = bitcast i8* %29 to %struct.conn*
  %31 = call i32 @global_page_pool_size(i8* null)
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.189, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %28, %struct.conn* %30, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), i32 %31)
  %32 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %7, align 8
  %33 = load i8*, i8** %8, align 8
  call void @item_stats_totals(void (i8*, i16, i8*, i32, i8*)* %32, i8* %33)
  br label %80

34:                                               ; preds = %12
  %35 = load i32, i32* %6, align 4
  %36 = load i8*, i8** %5, align 8
  %37 = call i32 @nz_strcmp(i32 %35, i8* %36, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.190, i64 0, i64 0))
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %42

39:                                               ; preds = %34
  %40 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %7, align 8
  %41 = load i8*, i8** %8, align 8
  call void @item_stats(void (i8*, i16, i8*, i32, i8*)* %40, i8* %41)
  br label %79

42:                                               ; preds = %34
  %43 = load i32, i32* %6, align 4
  %44 = load i8*, i8** %5, align 8
  %45 = call i32 @nz_strcmp(i32 %43, i8* %44, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.191, i64 0, i64 0))
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %50

47:                                               ; preds = %42
  %48 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %7, align 8
  %49 = load i8*, i8** %8, align 8
  call void @slabs_stats(void (i8*, i16, i8*, i32, i8*)* %48, i8* %49)
  br label %78

50:                                               ; preds = %42
  %51 = load i32, i32* %6, align 4
  %52 = load i8*, i8** %5, align 8
  %53 = call i32 @nz_strcmp(i32 %51, i8* %52, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.192, i64 0, i64 0))
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %50
  %56 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %7, align 8
  %57 = load i8*, i8** %8, align 8
  call void @item_stats_sizes(void (i8*, i16, i8*, i32, i8*)* %56, i8* %57)
  br label %77

58:                                               ; preds = %50
  %59 = load i32, i32* %6, align 4
  %60 = load i8*, i8** %5, align 8
  %61 = call i32 @nz_strcmp(i32 %59, i8* %60, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.193, i64 0, i64 0))
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %66

63:                                               ; preds = %58
  %64 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %7, align 8
  %65 = load i8*, i8** %8, align 8
  call void @item_stats_sizes_enable(void (i8*, i16, i8*, i32, i8*)* %64, i8* %65)
  br label %76

66:                                               ; preds = %58
  %67 = load i32, i32* %6, align 4
  %68 = load i8*, i8** %5, align 8
  %69 = call i32 @nz_strcmp(i32 %67, i8* %68, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.194, i64 0, i64 0))
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %74

71:                                               ; preds = %66
  %72 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %7, align 8
  %73 = load i8*, i8** %8, align 8
  call void @item_stats_sizes_disable(void (i8*, i16, i8*, i32, i8*)* %72, i8* %73)
  br label %75

74:                                               ; preds = %66
  store i8 0, i8* %9, align 1
  br label %75

75:                                               ; preds = %74, %71
  br label %76

76:                                               ; preds = %75, %63
  br label %77

77:                                               ; preds = %76, %55
  br label %78

78:                                               ; preds = %77, %47
  br label %79

79:                                               ; preds = %78, %39
  br label %80

80:                                               ; preds = %79, %15
  br label %82

81:                                               ; preds = %4
  store i8 0, i8* %9, align 1
  br label %82

82:                                               ; preds = %81, %80
  %83 = load i8, i8* %9, align 1
  %84 = trunc i8 %83 to i1
  ret i1 %84
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @nz_strcmp(i32 %0, i8* %1, i8* %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  store i8* %1, i8** %5, align 8
  store i8* %2, i8** %6, align 8
  %8 = load i8*, i8** %6, align 8
  %9 = call i64 @strlen(i8* %8) #16
  %10 = trunc i64 %9 to i32
  store i32 %10, i32* %7, align 4
  %11 = load i32, i32* %7, align 4
  %12 = load i32, i32* %4, align 4
  %13 = icmp eq i32 %11, %12
  br i1 %13, label %14, label %21

14:                                               ; preds = %3
  %15 = load i8*, i8** %5, align 8
  %16 = load i8*, i8** %6, align 8
  %17 = load i32, i32* %7, align 4
  %18 = sext i32 %17 to i64
  %19 = call i32 @strncmp(i8* %15, i8* %16, i64 %18) #16
  %20 = icmp eq i32 %19, 0
  br label %21

21:                                               ; preds = %14, %3
  %22 = phi i1 [ false, %3 ], [ %20, %14 ]
  %23 = zext i1 %22 to i64
  %24 = select i1 %22, i32 0, i32 -1
  ret i32 %24
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @process_stats_conns(void (i8*, i16, i8*, i32, i8*)* %0, i8* %1) #0 {
  %3 = alloca void (i8*, i16, i8*, i32, i8*)*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca [128 x i8], align 16
  %7 = alloca [128 x i8], align 16
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  store void (i8*, i16, i8*, i32, i8*)* %0, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  store i8* %1, i8** %4, align 8
  store i64 12, i64* %8, align 8
  %14 = load i64, i64* %8, align 8
  %15 = add i64 4096, %14
  %16 = call i8* @llvm.stacksave()
  store i8* %16, i8** %9, align 8
  %17 = alloca i8, i64 %15, align 16
  store i64 %15, i64* %10, align 8
  %18 = load i64, i64* %8, align 8
  %19 = add i64 4096, %18
  %20 = alloca i8, i64 %19, align 16
  store i64 %19, i64* %11, align 8
  store i32 0, i32* %12, align 4
  store i32 0, i32* %13, align 4
  store i32 0, i32* %5, align 4
  br label %21

21:                                               ; preds = %164, %2
  %22 = load i32, i32* %5, align 4
  %23 = load i32, i32* @max_fds, align 4
  %24 = icmp slt i32 %22, %23
  br i1 %24, label %25, label %167

25:                                               ; preds = %21
  %26 = load %struct.conn**, %struct.conn*** @conns, align 8
  %27 = load i32, i32* %5, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds %struct.conn*, %struct.conn** %26, i64 %28
  %30 = load %struct.conn*, %struct.conn** %29, align 8
  %31 = icmp ne %struct.conn* %30, null
  br i1 %31, label %32, label %163

32:                                               ; preds = %25
  %33 = load %struct.conn**, %struct.conn*** @conns, align 8
  %34 = load i32, i32* %5, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds %struct.conn*, %struct.conn** %33, i64 %35
  %37 = load %struct.conn*, %struct.conn** %36, align 8
  %38 = getelementptr inbounds %struct.conn, %struct.conn* %37, i32 0, i32 29
  %39 = load i32, i32* %38, align 8
  %40 = icmp eq i32 %39, 2
  br i1 %40, label %41, label %54

41:                                               ; preds = %32
  %42 = getelementptr inbounds [128 x i8], [128 x i8]* %6, i64 0, i64 0
  %43 = load i32, i32* %5, align 4
  %44 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %42, i64 128, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.195, i64 0, i64 0), i32 %43, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.196, i64 0, i64 0)) #14
  store i32 %44, i32* %12, align 4
  %45 = getelementptr inbounds [128 x i8], [128 x i8]* %7, i64 0, i64 0
  %46 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %45, i64 128, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.29, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.196, i64 0, i64 0)) #14
  store i32 %46, i32* %13, align 4
  %47 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %48 = getelementptr inbounds [128 x i8], [128 x i8]* %6, i64 0, i64 0
  %49 = load i32, i32* %12, align 4
  %50 = trunc i32 %49 to i16
  %51 = getelementptr inbounds [128 x i8], [128 x i8]* %7, i64 0, i64 0
  %52 = load i32, i32* %13, align 4
  %53 = load i8*, i8** %4, align 8
  call void %47(i8* %48, i16 zeroext %50, i8* %51, i32 %52, i8* %53)
  br label %54

54:                                               ; preds = %41, %32
  %55 = load %struct.conn**, %struct.conn*** @conns, align 8
  %56 = load i32, i32* %5, align 4
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds %struct.conn*, %struct.conn** %55, i64 %57
  %59 = load %struct.conn*, %struct.conn** %58, align 8
  %60 = getelementptr inbounds %struct.conn, %struct.conn* %59, i32 0, i32 9
  %61 = load i32, i32* %60, align 4
  %62 = icmp ne i32 %61, 10
  br i1 %62, label %63, label %162

63:                                               ; preds = %54
  %64 = load %struct.conn**, %struct.conn*** @conns, align 8
  %65 = load i32, i32* %5, align 4
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds %struct.conn*, %struct.conn** %64, i64 %66
  %68 = load %struct.conn*, %struct.conn** %67, align 8
  call void @conn_to_str(%struct.conn* %68, i8* %17, i8* %20)
  %69 = getelementptr inbounds [128 x i8], [128 x i8]* %6, i64 0, i64 0
  %70 = load i32, i32* %5, align 4
  %71 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %69, i64 128, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.195, i64 0, i64 0), i32 %70, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.197, i64 0, i64 0)) #14
  store i32 %71, i32* %12, align 4
  %72 = getelementptr inbounds [128 x i8], [128 x i8]* %7, i64 0, i64 0
  %73 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %72, i64 128, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.29, i64 0, i64 0), i8* %17) #14
  store i32 %73, i32* %13, align 4
  %74 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %75 = getelementptr inbounds [128 x i8], [128 x i8]* %6, i64 0, i64 0
  %76 = load i32, i32* %12, align 4
  %77 = trunc i32 %76 to i16
  %78 = getelementptr inbounds [128 x i8], [128 x i8]* %7, i64 0, i64 0
  %79 = load i32, i32* %13, align 4
  %80 = load i8*, i8** %4, align 8
  call void %74(i8* %75, i16 zeroext %77, i8* %78, i32 %79, i8* %80)
  %81 = load %struct.conn**, %struct.conn*** @conns, align 8
  %82 = load i32, i32* %5, align 4
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds %struct.conn*, %struct.conn** %81, i64 %83
  %85 = load %struct.conn*, %struct.conn** %84, align 8
  %86 = getelementptr inbounds %struct.conn, %struct.conn* %85, i32 0, i32 9
  %87 = load i32, i32* %86, align 4
  %88 = icmp ne i32 %87, 0
  br i1 %88, label %89, label %120

89:                                               ; preds = %63
  %90 = load %struct.conn**, %struct.conn*** @conns, align 8
  %91 = load i32, i32* %5, align 4
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds %struct.conn*, %struct.conn** %90, i64 %92
  %94 = load %struct.conn*, %struct.conn** %93, align 8
  %95 = getelementptr inbounds %struct.conn, %struct.conn* %94, i32 0, i32 29
  %96 = load i32, i32* %95, align 8
  %97 = icmp eq i32 %96, 2
  br i1 %97, label %98, label %107

98:                                               ; preds = %89
  %99 = load %struct.conn**, %struct.conn*** @conns, align 8
  %100 = load i32, i32* %5, align 4
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds %struct.conn*, %struct.conn** %99, i64 %101
  %103 = load %struct.conn*, %struct.conn** %102, align 8
  %104 = getelementptr inbounds %struct.conn, %struct.conn* %103, i32 0, i32 9
  %105 = load i32, i32* %104, align 4
  %106 = icmp eq i32 %105, 3
  br i1 %106, label %120, label %107

107:                                              ; preds = %98, %89
  %108 = getelementptr inbounds [128 x i8], [128 x i8]* %6, i64 0, i64 0
  %109 = load i32, i32* %5, align 4
  %110 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %108, i64 128, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.195, i64 0, i64 0), i32 %109, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.198, i64 0, i64 0)) #14
  store i32 %110, i32* %12, align 4
  %111 = getelementptr inbounds [128 x i8], [128 x i8]* %7, i64 0, i64 0
  %112 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %111, i64 128, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.29, i64 0, i64 0), i8* %20) #14
  store i32 %112, i32* %13, align 4
  %113 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %114 = getelementptr inbounds [128 x i8], [128 x i8]* %6, i64 0, i64 0
  %115 = load i32, i32* %12, align 4
  %116 = trunc i32 %115 to i16
  %117 = getelementptr inbounds [128 x i8], [128 x i8]* %7, i64 0, i64 0
  %118 = load i32, i32* %13, align 4
  %119 = load i8*, i8** %4, align 8
  call void %113(i8* %114, i16 zeroext %116, i8* %117, i32 %118, i8* %119)
  br label %120

120:                                              ; preds = %107, %98, %63
  %121 = getelementptr inbounds [128 x i8], [128 x i8]* %6, i64 0, i64 0
  %122 = load i32, i32* %5, align 4
  %123 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %121, i64 128, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.195, i64 0, i64 0), i32 %122, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.199, i64 0, i64 0)) #14
  store i32 %123, i32* %12, align 4
  %124 = getelementptr inbounds [128 x i8], [128 x i8]* %7, i64 0, i64 0
  %125 = load %struct.conn**, %struct.conn*** @conns, align 8
  %126 = load i32, i32* %5, align 4
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds %struct.conn*, %struct.conn** %125, i64 %127
  %129 = load %struct.conn*, %struct.conn** %128, align 8
  %130 = getelementptr inbounds %struct.conn, %struct.conn* %129, i32 0, i32 9
  %131 = load i32, i32* %130, align 4
  %132 = call i8* @state_text(i32 %131)
  %133 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %124, i64 128, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.29, i64 0, i64 0), i8* %132) #14
  store i32 %133, i32* %13, align 4
  %134 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %135 = getelementptr inbounds [128 x i8], [128 x i8]* %6, i64 0, i64 0
  %136 = load i32, i32* %12, align 4
  %137 = trunc i32 %136 to i16
  %138 = getelementptr inbounds [128 x i8], [128 x i8]* %7, i64 0, i64 0
  %139 = load i32, i32* %13, align 4
  %140 = load i8*, i8** %4, align 8
  call void %134(i8* %135, i16 zeroext %137, i8* %138, i32 %139, i8* %140)
  %141 = getelementptr inbounds [128 x i8], [128 x i8]* %6, i64 0, i64 0
  %142 = load i32, i32* %5, align 4
  %143 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %141, i64 128, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.195, i64 0, i64 0), i32 %142, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.200, i64 0, i64 0)) #14
  store i32 %143, i32* %12, align 4
  %144 = getelementptr inbounds [128 x i8], [128 x i8]* %7, i64 0, i64 0
  %145 = load volatile i32, i32* @current_time, align 4
  %146 = load %struct.conn**, %struct.conn*** @conns, align 8
  %147 = load i32, i32* %5, align 4
  %148 = sext i32 %147 to i64
  %149 = getelementptr inbounds %struct.conn*, %struct.conn** %146, i64 %148
  %150 = load %struct.conn*, %struct.conn** %149, align 8
  %151 = getelementptr inbounds %struct.conn, %struct.conn* %150, i32 0, i32 11
  %152 = load i32, i32* %151, align 4
  %153 = sub i32 %145, %152
  %154 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %144, i64 128, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33, i64 0, i64 0), i32 %153) #14
  store i32 %154, i32* %13, align 4
  %155 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %156 = getelementptr inbounds [128 x i8], [128 x i8]* %6, i64 0, i64 0
  %157 = load i32, i32* %12, align 4
  %158 = trunc i32 %157 to i16
  %159 = getelementptr inbounds [128 x i8], [128 x i8]* %7, i64 0, i64 0
  %160 = load i32, i32* %13, align 4
  %161 = load i8*, i8** %4, align 8
  call void %155(i8* %156, i16 zeroext %158, i8* %159, i32 %160, i8* %161)
  br label %162

162:                                              ; preds = %120, %54
  br label %163

163:                                              ; preds = %162, %25
  br label %164

164:                                              ; preds = %163
  %165 = load i32, i32* %5, align 4
  %166 = add nsw i32 %165, 1
  store i32 %166, i32* %5, align 4
  br label %21, !llvm.loop !26

167:                                              ; preds = %21
  %168 = load i8*, i8** %9, align 8
  call void @llvm.stackrestore(i8* %168)
  ret void
}

; Function Attrs: nofree nosync nounwind willreturn
declare i8* @llvm.stacksave() #8

; Function Attrs: noinline nounwind optnone uwtable
define internal void @conn_to_str(%struct.conn* %0, i8* %1, i8* %2) #0 {
  %4 = alloca %struct.conn*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca %struct.sockaddr_in6, align 4
  %8 = alloca %struct.sockaddr*, align 8
  %9 = alloca i32, align 4
  %10 = alloca %union.__SOCKADDR_ARG, align 8
  %11 = alloca %struct.sockaddr_storage, align 8
  %12 = alloca i32, align 4
  %13 = alloca %union.__SOCKADDR_ARG, align 8
  store %struct.conn* %0, %struct.conn** %4, align 8
  store i8* %1, i8** %5, align 8
  store i8* %2, i8** %6, align 8
  %14 = load %struct.conn*, %struct.conn** %4, align 8
  %15 = icmp ne %struct.conn* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %3
  %17 = load i8*, i8** %5, align 8
  %18 = call i8* @strcpy(i8* %17, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.377, i64 0, i64 0)) #14
  br label %98

19:                                               ; preds = %3
  %20 = load %struct.conn*, %struct.conn** %4, align 8
  %21 = getelementptr inbounds %struct.conn, %struct.conn* %20, i32 0, i32 9
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 10
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = load i8*, i8** %5, align 8
  %26 = call i8* @strcpy(i8* %25, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.378, i64 0, i64 0)) #14
  br label %97

27:                                               ; preds = %19
  %28 = load %struct.conn*, %struct.conn** %4, align 8
  %29 = getelementptr inbounds %struct.conn, %struct.conn* %28, i32 0, i32 32
  %30 = bitcast %struct.sockaddr_in6* %29 to i8*
  %31 = bitcast i8* %30 to %struct.sockaddr*
  store %struct.sockaddr* %31, %struct.sockaddr** %8, align 8
  %32 = load %struct.conn*, %struct.conn** %4, align 8
  %33 = getelementptr inbounds %struct.conn, %struct.conn* %32, i32 0, i32 9
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %46, label %36

36:                                               ; preds = %27
  %37 = load %struct.conn*, %struct.conn** %4, align 8
  %38 = getelementptr inbounds %struct.conn, %struct.conn* %37, i32 0, i32 29
  %39 = load i32, i32* %38, align 8
  %40 = icmp eq i32 %39, 2
  br i1 %40, label %41, label %59

41:                                               ; preds = %36
  %42 = load %struct.conn*, %struct.conn** %4, align 8
  %43 = getelementptr inbounds %struct.conn, %struct.conn* %42, i32 0, i32 9
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 3
  br i1 %45, label %46, label %59

46:                                               ; preds = %41, %27
  store i32 28, i32* %9, align 4
  %47 = load %struct.conn*, %struct.conn** %4, align 8
  %48 = getelementptr inbounds %struct.conn, %struct.conn* %47, i32 0, i32 1
  %49 = load i32, i32* %48, align 8
  %50 = bitcast %union.__SOCKADDR_ARG* %10 to %struct.sockaddr**
  %51 = bitcast %struct.sockaddr_in6* %7 to %struct.sockaddr*
  store %struct.sockaddr* %51, %struct.sockaddr** %50, align 8
  %52 = getelementptr inbounds %union.__SOCKADDR_ARG, %union.__SOCKADDR_ARG* %10, i32 0, i32 0
  %53 = load %struct.sockaddr*, %struct.sockaddr** %52, align 8
  %54 = call i32 @getsockname(i32 %49, %struct.sockaddr* %53, i32* %9) #14
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %46
  %57 = bitcast %struct.sockaddr_in6* %7 to %struct.sockaddr*
  store %struct.sockaddr* %57, %struct.sockaddr** %8, align 8
  br label %58

58:                                               ; preds = %56, %46
  br label %59

59:                                               ; preds = %58, %41, %36
  %60 = load %struct.conn*, %struct.conn** %4, align 8
  %61 = load %struct.sockaddr*, %struct.sockaddr** %8, align 8
  %62 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %61, i32 0, i32 0
  %63 = load i16, i16* %62, align 2
  %64 = zext i16 %63 to i32
  %65 = load i8*, i8** %5, align 8
  %66 = load %struct.sockaddr*, %struct.sockaddr** %8, align 8
  call void @get_conn_text(%struct.conn* %60, i32 %64, i8* %65, %struct.sockaddr* %66)
  %67 = load %struct.conn*, %struct.conn** %4, align 8
  %68 = getelementptr inbounds %struct.conn, %struct.conn* %67, i32 0, i32 9
  %69 = load i32, i32* %68, align 4
  %70 = icmp ne i32 %69, 0
  br i1 %70, label %71, label %96

71:                                               ; preds = %59
  %72 = load %struct.conn*, %struct.conn** %4, align 8
  %73 = getelementptr inbounds %struct.conn, %struct.conn* %72, i32 0, i32 29
  %74 = load i32, i32* %73, align 8
  %75 = icmp eq i32 %74, 2
  br i1 %75, label %76, label %81

76:                                               ; preds = %71
  %77 = load %struct.conn*, %struct.conn** %4, align 8
  %78 = getelementptr inbounds %struct.conn, %struct.conn* %77, i32 0, i32 9
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 3
  br i1 %80, label %96, label %81

81:                                               ; preds = %76, %71
  store i32 128, i32* %12, align 4
  %82 = load %struct.conn*, %struct.conn** %4, align 8
  %83 = getelementptr inbounds %struct.conn, %struct.conn* %82, i32 0, i32 1
  %84 = load i32, i32* %83, align 8
  %85 = bitcast %union.__SOCKADDR_ARG* %13 to %struct.sockaddr**
  %86 = bitcast %struct.sockaddr_storage* %11 to %struct.sockaddr*
  store %struct.sockaddr* %86, %struct.sockaddr** %85, align 8
  %87 = getelementptr inbounds %union.__SOCKADDR_ARG, %union.__SOCKADDR_ARG* %13, i32 0, i32 0
  %88 = load %struct.sockaddr*, %struct.sockaddr** %87, align 8
  %89 = call i32 @getsockname(i32 %84, %struct.sockaddr* %88, i32* %12) #14
  %90 = load %struct.conn*, %struct.conn** %4, align 8
  %91 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %11, i32 0, i32 0
  %92 = load i16, i16* %91, align 8
  %93 = zext i16 %92 to i32
  %94 = load i8*, i8** %6, align 8
  %95 = bitcast %struct.sockaddr_storage* %11 to %struct.sockaddr*
  call void @get_conn_text(%struct.conn* %90, i32 %93, i8* %94, %struct.sockaddr* %95)
  br label %96

96:                                               ; preds = %81, %76, %59
  br label %97

97:                                               ; preds = %96, %24
  br label %98

98:                                               ; preds = %97, %16
  ret void
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.stackrestore(i8*) #8

; Function Attrs: nounwind
declare dso_local i8* @strcpy(i8*, i8*) #2

; Function Attrs: nounwind
declare dso_local i32 @getsockname(i32, %struct.sockaddr*, i32*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @get_conn_text(%struct.conn* %0, i32 %1, i8* %2, %struct.sockaddr* %3) #0 {
  %5 = alloca %struct.conn*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca %struct.sockaddr*, align 8
  %9 = alloca [4096 x i8], align 16
  %10 = alloca i8*, align 8
  %11 = alloca i16, align 2
  %12 = alloca i64, align 8
  store %struct.conn* %0, %struct.conn** %5, align 8
  store i32 %1, i32* %6, align 4
  store i8* %2, i8** %7, align 8
  store %struct.sockaddr* %3, %struct.sockaddr** %8, align 8
  %13 = getelementptr inbounds [4096 x i8], [4096 x i8]* %9, i64 0, i64 0
  store i8 0, i8* %13, align 16
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.379, i64 0, i64 0), i8** %10, align 8
  store i16 0, i16* %11, align 2
  %14 = load i32, i32* %6, align 4
  switch i32 %14, label %75 [
    i32 2, label %15
    i32 10, label %34
    i32 1, label %61
  ]

15:                                               ; preds = %4
  %16 = load i32, i32* %6, align 4
  %17 = load %struct.sockaddr*, %struct.sockaddr** %8, align 8
  %18 = bitcast %struct.sockaddr* %17 to %struct.sockaddr_in*
  %19 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %18, i32 0, i32 2
  %20 = bitcast %struct.in_addr* %19 to i8*
  %21 = getelementptr inbounds [4096 x i8], [4096 x i8]* %9, i64 0, i64 0
  %22 = call i8* @inet_ntop(i32 %16, i8* %20, i8* %21, i32 4095) #14
  %23 = load %struct.sockaddr*, %struct.sockaddr** %8, align 8
  %24 = bitcast %struct.sockaddr* %23 to %struct.sockaddr_in*
  %25 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %24, i32 0, i32 1
  %26 = load i16, i16* %25, align 2
  %27 = call zeroext i16 @ntohs(i16 zeroext %26) #15
  store i16 %27, i16* %11, align 2
  %28 = load %struct.conn*, %struct.conn** %5, align 8
  %29 = getelementptr inbounds %struct.conn, %struct.conn* %28, i32 0, i32 29
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, 2
  %32 = zext i1 %31 to i64
  %33 = select i1 %31, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.380, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.381, i64 0, i64 0)
  store i8* %33, i8** %10, align 8
  br label %75

34:                                               ; preds = %4
  %35 = getelementptr inbounds [4096 x i8], [4096 x i8]* %9, i64 0, i64 0
  store i8 91, i8* %35, align 16
  %36 = getelementptr inbounds [4096 x i8], [4096 x i8]* %9, i64 0, i64 1
  store i8 0, i8* %36, align 1
  %37 = load i32, i32* %6, align 4
  %38 = load %struct.sockaddr*, %struct.sockaddr** %8, align 8
  %39 = bitcast %struct.sockaddr* %38 to %struct.sockaddr_in6*
  %40 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %39, i32 0, i32 3
  %41 = bitcast %struct.in6_addr* %40 to i8*
  %42 = getelementptr inbounds [4096 x i8], [4096 x i8]* %9, i64 0, i64 0
  %43 = getelementptr inbounds i8, i8* %42, i64 1
  %44 = call i8* @inet_ntop(i32 %37, i8* %41, i8* %43, i32 4094) #14
  %45 = icmp ne i8* %44, null
  br i1 %45, label %46, label %49

46:                                               ; preds = %34
  %47 = getelementptr inbounds [4096 x i8], [4096 x i8]* %9, i64 0, i64 0
  %48 = call i8* @strcat(i8* %47, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.382, i64 0, i64 0)) #14
  br label %49

49:                                               ; preds = %46, %34
  %50 = load %struct.sockaddr*, %struct.sockaddr** %8, align 8
  %51 = bitcast %struct.sockaddr* %50 to %struct.sockaddr_in6*
  %52 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %51, i32 0, i32 1
  %53 = load i16, i16* %52, align 2
  %54 = call zeroext i16 @ntohs(i16 zeroext %53) #15
  store i16 %54, i16* %11, align 2
  %55 = load %struct.conn*, %struct.conn** %5, align 8
  %56 = getelementptr inbounds %struct.conn, %struct.conn* %55, i32 0, i32 29
  %57 = load i32, i32* %56, align 8
  %58 = icmp eq i32 %57, 2
  %59 = zext i1 %58 to i64
  %60 = select i1 %58, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.383, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.384, i64 0, i64 0)
  store i8* %60, i8** %10, align 8
  br label %75

61:                                               ; preds = %4
  store i64 0, i64* %12, align 8
  store i64 108, i64* %12, align 8
  %62 = load i64, i64* %12, align 8
  %63 = icmp ule i64 4096, %62
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  store i64 4095, i64* %12, align 8
  br label %65

65:                                               ; preds = %64, %61
  %66 = getelementptr inbounds [4096 x i8], [4096 x i8]* %9, i64 0, i64 0
  %67 = load %struct.sockaddr*, %struct.sockaddr** %8, align 8
  %68 = bitcast %struct.sockaddr* %67 to %struct.sockaddr_un*
  %69 = getelementptr inbounds %struct.sockaddr_un, %struct.sockaddr_un* %68, i32 0, i32 1
  %70 = getelementptr inbounds [108 x i8], [108 x i8]* %69, i64 0, i64 0
  %71 = load i64, i64* %12, align 8
  %72 = call i8* @strncpy(i8* %66, i8* %70, i64 %71) #14
  %73 = load i64, i64* %12, align 8
  %74 = getelementptr inbounds [4096 x i8], [4096 x i8]* %9, i64 0, i64 %73
  store i8 0, i8* %74, align 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.385, i64 0, i64 0), i8** %10, align 8
  br label %75

75:                                               ; preds = %4, %65, %49, %15
  %76 = getelementptr inbounds [4096 x i8], [4096 x i8]* %9, i64 0, i64 0
  %77 = call i64 @strlen(i8* %76) #16
  %78 = icmp ult i64 %77, 2
  br i1 %78, label %79, label %83

79:                                               ; preds = %75
  %80 = getelementptr inbounds [4096 x i8], [4096 x i8]* %9, i64 0, i64 0
  %81 = load i32, i32* %6, align 4
  %82 = call i32 (i8*, i8*, ...) @sprintf(i8* %80, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.386, i64 0, i64 0), i32 %81) #14
  br label %83

83:                                               ; preds = %79, %75
  %84 = load i16, i16* %11, align 2
  %85 = icmp ne i16 %84, 0
  br i1 %85, label %86, label %93

86:                                               ; preds = %83
  %87 = load i8*, i8** %7, align 8
  %88 = load i8*, i8** %10, align 8
  %89 = getelementptr inbounds [4096 x i8], [4096 x i8]* %9, i64 0, i64 0
  %90 = load i16, i16* %11, align 2
  %91 = zext i16 %90 to i32
  %92 = call i32 (i8*, i8*, ...) @sprintf(i8* %87, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.387, i64 0, i64 0), i8* %88, i8* %89, i32 %91) #14
  br label %98

93:                                               ; preds = %83
  %94 = load i8*, i8** %7, align 8
  %95 = load i8*, i8** %10, align 8
  %96 = getelementptr inbounds [4096 x i8], [4096 x i8]* %9, i64 0, i64 0
  %97 = call i32 (i8*, i8*, ...) @sprintf(i8* %94, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.388, i64 0, i64 0), i8* %95, i8* %96) #14
  br label %98

98:                                               ; preds = %93, %86
  ret void
}

; Function Attrs: nounwind
declare dso_local i8* @inet_ntop(i32, i8*, i8*, i32) #2

; Function Attrs: nounwind readnone willreturn
declare dso_local zeroext i16 @ntohs(i16 zeroext) #5

; Function Attrs: nounwind
declare dso_local i8* @strcat(i8*, i8*) #2

; Function Attrs: nounwind
declare dso_local i8* @strncpy(i8*, i8*, i64) #2

; Function Attrs: nounwind
declare dso_local i32 @sprintf(i8*, i8*, ...) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct._stritem* @limited_get(i8* %0, i64 %1, %struct.conn* %2, i32 %3, i1 zeroext %4, i1 zeroext %5, i8* %6) #0 {
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca %struct.conn*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i8, align 1
  %13 = alloca i8, align 1
  %14 = alloca i8*, align 8
  %15 = alloca %struct._stritem*, align 8
  store i8* %0, i8** %8, align 8
  store i64 %1, i64* %9, align 8
  store %struct.conn* %2, %struct.conn** %10, align 8
  store i32 %3, i32* %11, align 4
  %16 = zext i1 %4 to i8
  store i8 %16, i8* %12, align 1
  %17 = zext i1 %5 to i8
  store i8 %17, i8* %13, align 1
  store i8* %6, i8** %14, align 8
  %18 = load i8, i8* %12, align 1
  %19 = trunc i8 %18 to i1
  br i1 %19, label %20, label %26

20:                                               ; preds = %7
  %21 = load i8*, i8** %8, align 8
  %22 = load i64, i64* %9, align 8
  %23 = load i32, i32* %11, align 4
  %24 = load %struct.conn*, %struct.conn** %10, align 8
  %25 = call %struct._stritem* @item_touch(i8* %21, i64 %22, i32 %23, %struct.conn* %24)
  store %struct._stritem* %25, %struct._stritem** %15, align 8
  br label %33

26:                                               ; preds = %7
  %27 = load i8*, i8** %8, align 8
  %28 = load i64, i64* %9, align 8
  %29 = load %struct.conn*, %struct.conn** %10, align 8
  %30 = load i8, i8* %13, align 1
  %31 = trunc i8 %30 to i1
  %32 = call %struct._stritem* @item_get(i8* %27, i64 %28, %struct.conn* %29, i1 zeroext %31)
  store %struct._stritem* %32, %struct._stritem** %15, align 8
  br label %33

33:                                               ; preds = %26, %20
  %34 = load %struct._stritem*, %struct._stritem** %15, align 8
  %35 = icmp ne %struct._stritem* %34, null
  br i1 %35, label %36, label %45

36:                                               ; preds = %33
  %37 = load %struct._stritem*, %struct._stritem** %15, align 8
  %38 = getelementptr inbounds %struct._stritem, %struct._stritem* %37, i32 0, i32 6
  %39 = load i16, i16* %38, align 4
  %40 = zext i16 %39 to i32
  %41 = icmp sgt i32 %40, 60000
  br i1 %41, label %42, label %45

42:                                               ; preds = %36
  %43 = load %struct._stritem*, %struct._stritem** %15, align 8
  call void @item_remove(%struct._stritem* %43)
  store %struct._stritem* null, %struct._stritem** %15, align 8
  %44 = load i8*, i8** %14, align 8
  store i8 1, i8* %44, align 1
  br label %47

45:                                               ; preds = %36, %33
  %46 = load i8*, i8** %14, align 8
  store i8 0, i8* %46, align 1
  br label %47

47:                                               ; preds = %45, %42
  %48 = load %struct._stritem*, %struct._stritem** %15, align 8
  ret %struct._stritem* %48
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct._stritem* @limited_get_locked(i8* %0, i64 %1, %struct.conn* %2, i1 zeroext %3, i32* %4, i8* %5) #0 {
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca %struct.conn*, align 8
  %10 = alloca i8, align 1
  %11 = alloca i32*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca %struct._stritem*, align 8
  store i8* %0, i8** %7, align 8
  store i64 %1, i64* %8, align 8
  store %struct.conn* %2, %struct.conn** %9, align 8
  %14 = zext i1 %3 to i8
  store i8 %14, i8* %10, align 1
  store i32* %4, i32** %11, align 8
  store i8* %5, i8** %12, align 8
  %15 = load i8*, i8** %7, align 8
  %16 = load i64, i64* %8, align 8
  %17 = load %struct.conn*, %struct.conn** %9, align 8
  %18 = load i8, i8* %10, align 1
  %19 = trunc i8 %18 to i1
  %20 = load i32*, i32** %11, align 8
  %21 = call %struct._stritem* @item_get_locked(i8* %15, i64 %16, %struct.conn* %17, i1 zeroext %19, i32* %20)
  store %struct._stritem* %21, %struct._stritem** %13, align 8
  %22 = load %struct._stritem*, %struct._stritem** %13, align 8
  %23 = icmp ne %struct._stritem* %22, null
  br i1 %23, label %24, label %35

24:                                               ; preds = %6
  %25 = load %struct._stritem*, %struct._stritem** %13, align 8
  %26 = getelementptr inbounds %struct._stritem, %struct._stritem* %25, i32 0, i32 6
  %27 = load i16, i16* %26, align 4
  %28 = zext i16 %27 to i32
  %29 = icmp sgt i32 %28, 60000
  br i1 %29, label %30, label %35

30:                                               ; preds = %24
  %31 = load %struct._stritem*, %struct._stritem** %13, align 8
  call void @do_item_remove(%struct._stritem* %31)
  store %struct._stritem* null, %struct._stritem** %13, align 8
  %32 = load i32*, i32** %11, align 8
  %33 = load i32, i32* %32, align 4
  call void @item_unlock(i32 %33)
  %34 = load i8*, i8** %12, align 8
  store i8 1, i8* %34, align 1
  br label %37

35:                                               ; preds = %24, %6
  %36 = load i8*, i8** %12, align 8
  store i8 0, i8* %36, align 1
  br label %37

37:                                               ; preds = %35, %30
  %38 = load %struct._stritem*, %struct._stritem** %13, align 8
  ret %struct._stritem* %38
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @do_add_delta(%struct.conn* %0, i8* %1, i64 %2, i1 zeroext %3, i64 %4, i8* %5, i64* %6, i32 %7, %struct._stritem** %8) #0 {
  %10 = alloca i32, align 4
  %11 = alloca %struct.conn*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i8, align 1
  %15 = alloca i64, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i64*, align 8
  %18 = alloca i32, align 4
  %19 = alloca %struct._stritem**, align 8
  %20 = alloca i8*, align 8
  %21 = alloca i64, align 8
  %22 = alloca i32, align 4
  %23 = alloca %struct._stritem*, align 8
  %24 = alloca %struct._stritem*, align 8
  %25 = alloca i32, align 4
  store %struct.conn* %0, %struct.conn** %11, align 8
  store i8* %1, i8** %12, align 8
  store i64 %2, i64* %13, align 8
  %26 = zext i1 %3 to i8
  store i8 %26, i8* %14, align 1
  store i64 %4, i64* %15, align 8
  store i8* %5, i8** %16, align 8
  store i64* %6, i64** %17, align 8
  store i32 %7, i32* %18, align 4
  store %struct._stritem** %8, %struct._stritem*** %19, align 8
  %27 = load i8*, i8** %12, align 8
  %28 = load i64, i64* %13, align 8
  %29 = load i32, i32* %18, align 4
  %30 = load %struct.conn*, %struct.conn** %11, align 8
  %31 = call %struct._stritem* @do_item_get(i8* %27, i64 %28, i32 %29, %struct.conn* %30, i1 zeroext false)
  store %struct._stritem* %31, %struct._stritem** %23, align 8
  %32 = load %struct._stritem*, %struct._stritem** %23, align 8
  %33 = icmp ne %struct._stritem* %32, null
  br i1 %33, label %35, label %34

34:                                               ; preds = %9
  store i32 3, i32* %10, align 4
  br label %495

35:                                               ; preds = %9
  %36 = load %struct._stritem*, %struct._stritem** %23, align 8
  %37 = getelementptr inbounds %struct._stritem, %struct._stritem* %36, i32 0, i32 5
  %38 = load i32, i32* %37, align 8
  %39 = icmp sle i32 %38, 2
  br i1 %39, label %47, label %40

40:                                               ; preds = %35
  %41 = load %struct._stritem*, %struct._stritem** %23, align 8
  %42 = getelementptr inbounds %struct._stritem, %struct._stritem* %41, i32 0, i32 7
  %43 = load i16, i16* %42, align 2
  %44 = zext i16 %43 to i32
  %45 = and i32 %44, 160
  %46 = icmp ne i32 %45, 0
  br i1 %46, label %47, label %49

47:                                               ; preds = %40, %35
  %48 = load %struct._stritem*, %struct._stritem** %23, align 8
  call void @do_item_remove(%struct._stritem* %48)
  store i32 1, i32* %10, align 4
  br label %495

49:                                               ; preds = %40
  %50 = load i64*, i64** %17, align 8
  %51 = icmp ne i64* %50, null
  br i1 %51, label %52, label %77

52:                                               ; preds = %49
  %53 = load i64*, i64** %17, align 8
  %54 = load i64, i64* %53, align 8
  %55 = icmp ne i64 %54, 0
  br i1 %55, label %56, label %77

56:                                               ; preds = %52
  %57 = load %struct._stritem*, %struct._stritem** %23, align 8
  %58 = getelementptr inbounds %struct._stritem, %struct._stritem* %57, i32 0, i32 7
  %59 = load i16, i16* %58, align 2
  %60 = zext i16 %59 to i32
  %61 = and i32 %60, 2
  %62 = icmp ne i32 %61, 0
  br i1 %62, label %63, label %69

63:                                               ; preds = %56
  %64 = load %struct._stritem*, %struct._stritem** %23, align 8
  %65 = getelementptr inbounds %struct._stritem, %struct._stritem* %64, i32 0, i32 10
  %66 = getelementptr inbounds [0 x %union.anon.10], [0 x %union.anon.10]* %65, i64 0, i64 0
  %67 = bitcast %union.anon.10* %66 to i64*
  %68 = load i64, i64* %67, align 8
  br label %70

69:                                               ; preds = %56
  br label %70

70:                                               ; preds = %69, %63
  %71 = phi i64 [ %68, %63 ], [ 0, %69 ]
  %72 = load i64*, i64** %17, align 8
  %73 = load i64, i64* %72, align 8
  %74 = icmp ne i64 %71, %73
  br i1 %74, label %75, label %77

75:                                               ; preds = %70
  %76 = load %struct._stritem*, %struct._stritem** %23, align 8
  call void @do_item_remove(%struct._stritem* %76)
  store i32 4, i32* %10, align 4
  br label %495

77:                                               ; preds = %70, %52, %49
  %78 = load %struct._stritem*, %struct._stritem** %23, align 8
  %79 = getelementptr inbounds %struct._stritem, %struct._stritem* %78, i32 0, i32 10
  %80 = bitcast [0 x %union.anon.10]* %79 to i8*
  %81 = load %struct._stritem*, %struct._stritem** %23, align 8
  %82 = getelementptr inbounds %struct._stritem, %struct._stritem* %81, i32 0, i32 9
  %83 = load i8, i8* %82, align 1
  %84 = zext i8 %83 to i32
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds i8, i8* %80, i64 %85
  %87 = getelementptr inbounds i8, i8* %86, i64 1
  %88 = load %struct._stritem*, %struct._stritem** %23, align 8
  %89 = getelementptr inbounds %struct._stritem, %struct._stritem* %88, i32 0, i32 7
  %90 = load i16, i16* %89, align 2
  %91 = zext i16 %90 to i32
  %92 = and i32 %91, 256
  %93 = icmp ne i32 %92, 0
  %94 = zext i1 %93 to i64
  %95 = select i1 %93, i64 4, i64 0
  %96 = getelementptr inbounds i8, i8* %87, i64 %95
  %97 = load %struct._stritem*, %struct._stritem** %23, align 8
  %98 = getelementptr inbounds %struct._stritem, %struct._stritem* %97, i32 0, i32 7
  %99 = load i16, i16* %98, align 2
  %100 = zext i16 %99 to i32
  %101 = and i32 %100, 2
  %102 = icmp ne i32 %101, 0
  %103 = zext i1 %102 to i64
  %104 = select i1 %102, i64 8, i64 0
  %105 = getelementptr inbounds i8, i8* %96, i64 %104
  store i8* %105, i8** %20, align 8
  %106 = load i8*, i8** %20, align 8
  %107 = call zeroext i1 @safe_strtoull(i8* %106, i64* %21)
  br i1 %107, label %110, label %108

108:                                              ; preds = %77
  %109 = load %struct._stritem*, %struct._stritem** %23, align 8
  call void @do_item_remove(%struct._stritem* %109)
  store i32 1, i32* %10, align 4
  br label %495

110:                                              ; preds = %77
  %111 = load i8, i8* %14, align 1
  %112 = trunc i8 %111 to i1
  br i1 %112, label %113, label %117

113:                                              ; preds = %110
  %114 = load i64, i64* %15, align 8
  %115 = load i64, i64* %21, align 8
  %116 = add i64 %115, %114
  store i64 %116, i64* %21, align 8
  br label %127

117:                                              ; preds = %110
  %118 = load i64, i64* %15, align 8
  %119 = load i64, i64* %21, align 8
  %120 = icmp ugt i64 %118, %119
  br i1 %120, label %121, label %122

121:                                              ; preds = %117
  store i64 0, i64* %21, align 8
  br label %126

122:                                              ; preds = %117
  %123 = load i64, i64* %15, align 8
  %124 = load i64, i64* %21, align 8
  %125 = sub i64 %124, %123
  store i64 %125, i64* %21, align 8
  br label %126

126:                                              ; preds = %122, %121
  br label %127

127:                                              ; preds = %126, %113
  %128 = load %struct.conn*, %struct.conn** %11, align 8
  %129 = getelementptr inbounds %struct.conn, %struct.conn* %128, i32 0, i32 42
  %130 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %129, align 8
  %131 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %130, i32 0, i32 4
  %132 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %131, i32 0, i32 0
  %133 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %132) #14
  %134 = load i8, i8* %14, align 1
  %135 = trunc i8 %134 to i1
  br i1 %135, label %136, label %152

136:                                              ; preds = %127
  %137 = load %struct.conn*, %struct.conn** %11, align 8
  %138 = getelementptr inbounds %struct.conn, %struct.conn* %137, i32 0, i32 42
  %139 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %138, align 8
  %140 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %139, i32 0, i32 4
  %141 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %140, i32 0, i32 31
  %142 = load %struct._stritem*, %struct._stritem** %23, align 8
  %143 = getelementptr inbounds %struct._stritem, %struct._stritem* %142, i32 0, i32 8
  %144 = load i8, i8* %143, align 8
  %145 = zext i8 %144 to i32
  %146 = and i32 %145, -193
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds [64 x %struct.slab_stats], [64 x %struct.slab_stats]* %141, i64 0, i64 %147
  %149 = getelementptr inbounds %struct.slab_stats, %struct.slab_stats* %148, i32 0, i32 6
  %150 = load i64, i64* %149, align 8
  %151 = add i64 %150, 1
  store i64 %151, i64* %149, align 8
  br label %168

152:                                              ; preds = %127
  %153 = load %struct.conn*, %struct.conn** %11, align 8
  %154 = getelementptr inbounds %struct.conn, %struct.conn* %153, i32 0, i32 42
  %155 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %154, align 8
  %156 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %155, i32 0, i32 4
  %157 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %156, i32 0, i32 31
  %158 = load %struct._stritem*, %struct._stritem** %23, align 8
  %159 = getelementptr inbounds %struct._stritem, %struct._stritem* %158, i32 0, i32 8
  %160 = load i8, i8* %159, align 8
  %161 = zext i8 %160 to i32
  %162 = and i32 %161, -193
  %163 = sext i32 %162 to i64
  %164 = getelementptr inbounds [64 x %struct.slab_stats], [64 x %struct.slab_stats]* %157, i64 0, i64 %163
  %165 = getelementptr inbounds %struct.slab_stats, %struct.slab_stats* %164, i32 0, i32 7
  %166 = load i64, i64* %165, align 8
  %167 = add i64 %166, 1
  store i64 %167, i64* %165, align 8
  br label %168

168:                                              ; preds = %152, %136
  %169 = load %struct.conn*, %struct.conn** %11, align 8
  %170 = getelementptr inbounds %struct.conn, %struct.conn* %169, i32 0, i32 42
  %171 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %170, align 8
  %172 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %171, i32 0, i32 4
  %173 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %172, i32 0, i32 0
  %174 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %173) #14
  %175 = load i64, i64* %21, align 8
  %176 = load i8*, i8** %16, align 8
  %177 = call i8* @itoa_u64(i64 %175, i8* %176)
  %178 = load i8*, i8** %16, align 8
  %179 = call i64 @strlen(i8* %178) #16
  %180 = trunc i64 %179 to i32
  store i32 %180, i32* %22, align 4
  %181 = load i32, i32* %22, align 4
  %182 = add nsw i32 %181, 2
  %183 = load %struct._stritem*, %struct._stritem** %23, align 8
  %184 = getelementptr inbounds %struct._stritem, %struct._stritem* %183, i32 0, i32 5
  %185 = load i32, i32* %184, align 8
  %186 = icmp sle i32 %182, %185
  br i1 %186, label %187, label %285

187:                                              ; preds = %168
  %188 = load %struct._stritem*, %struct._stritem** %23, align 8
  %189 = getelementptr inbounds %struct._stritem, %struct._stritem* %188, i32 0, i32 6
  %190 = load i16, i16* %189, align 4
  %191 = zext i16 %190 to i32
  %192 = icmp eq i32 %191, 2
  br i1 %192, label %193, label %285

193:                                              ; preds = %187
  %194 = load %struct._stritem*, %struct._stritem** %23, align 8
  call void @item_stats_sizes_remove(%struct._stritem* %194)
  %195 = load %struct._stritem*, %struct._stritem** %23, align 8
  %196 = getelementptr inbounds %struct._stritem, %struct._stritem* %195, i32 0, i32 7
  %197 = load i16, i16* %196, align 2
  %198 = zext i16 %197 to i32
  %199 = and i32 %198, 2
  %200 = icmp ne i32 %199, 0
  br i1 %200, label %201, label %213

201:                                              ; preds = %193
  %202 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 19), align 8
  %203 = trunc i8 %202 to i1
  br i1 %203, label %204, label %206

204:                                              ; preds = %201
  %205 = call i64 @get_cas_id()
  br label %207

206:                                              ; preds = %201
  br label %207

207:                                              ; preds = %206, %204
  %208 = phi i64 [ %205, %204 ], [ 0, %206 ]
  %209 = load %struct._stritem*, %struct._stritem** %23, align 8
  %210 = getelementptr inbounds %struct._stritem, %struct._stritem* %209, i32 0, i32 10
  %211 = getelementptr inbounds [0 x %union.anon.10], [0 x %union.anon.10]* %210, i64 0, i64 0
  %212 = bitcast %union.anon.10* %211 to i64*
  store i64 %208, i64* %212, align 8
  br label %213

213:                                              ; preds = %207, %193
  %214 = load %struct._stritem*, %struct._stritem** %23, align 8
  call void @item_stats_sizes_add(%struct._stritem* %214)
  %215 = load %struct._stritem*, %struct._stritem** %23, align 8
  %216 = getelementptr inbounds %struct._stritem, %struct._stritem* %215, i32 0, i32 10
  %217 = bitcast [0 x %union.anon.10]* %216 to i8*
  %218 = load %struct._stritem*, %struct._stritem** %23, align 8
  %219 = getelementptr inbounds %struct._stritem, %struct._stritem* %218, i32 0, i32 9
  %220 = load i8, i8* %219, align 1
  %221 = zext i8 %220 to i32
  %222 = sext i32 %221 to i64
  %223 = getelementptr inbounds i8, i8* %217, i64 %222
  %224 = getelementptr inbounds i8, i8* %223, i64 1
  %225 = load %struct._stritem*, %struct._stritem** %23, align 8
  %226 = getelementptr inbounds %struct._stritem, %struct._stritem* %225, i32 0, i32 7
  %227 = load i16, i16* %226, align 2
  %228 = zext i16 %227 to i32
  %229 = and i32 %228, 256
  %230 = icmp ne i32 %229, 0
  %231 = zext i1 %230 to i64
  %232 = select i1 %230, i64 4, i64 0
  %233 = getelementptr inbounds i8, i8* %224, i64 %232
  %234 = load %struct._stritem*, %struct._stritem** %23, align 8
  %235 = getelementptr inbounds %struct._stritem, %struct._stritem* %234, i32 0, i32 7
  %236 = load i16, i16* %235, align 2
  %237 = zext i16 %236 to i32
  %238 = and i32 %237, 2
  %239 = icmp ne i32 %238, 0
  %240 = zext i1 %239 to i64
  %241 = select i1 %239, i64 8, i64 0
  %242 = getelementptr inbounds i8, i8* %233, i64 %241
  %243 = load i8*, i8** %16, align 8
  %244 = load i32, i32* %22, align 4
  %245 = sext i32 %244 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %242, i8* align 1 %243, i64 %245, i1 false)
  %246 = load %struct._stritem*, %struct._stritem** %23, align 8
  %247 = getelementptr inbounds %struct._stritem, %struct._stritem* %246, i32 0, i32 10
  %248 = bitcast [0 x %union.anon.10]* %247 to i8*
  %249 = load %struct._stritem*, %struct._stritem** %23, align 8
  %250 = getelementptr inbounds %struct._stritem, %struct._stritem* %249, i32 0, i32 9
  %251 = load i8, i8* %250, align 1
  %252 = zext i8 %251 to i32
  %253 = sext i32 %252 to i64
  %254 = getelementptr inbounds i8, i8* %248, i64 %253
  %255 = getelementptr inbounds i8, i8* %254, i64 1
  %256 = load %struct._stritem*, %struct._stritem** %23, align 8
  %257 = getelementptr inbounds %struct._stritem, %struct._stritem* %256, i32 0, i32 7
  %258 = load i16, i16* %257, align 2
  %259 = zext i16 %258 to i32
  %260 = and i32 %259, 256
  %261 = icmp ne i32 %260, 0
  %262 = zext i1 %261 to i64
  %263 = select i1 %261, i64 4, i64 0
  %264 = getelementptr inbounds i8, i8* %255, i64 %263
  %265 = load %struct._stritem*, %struct._stritem** %23, align 8
  %266 = getelementptr inbounds %struct._stritem, %struct._stritem* %265, i32 0, i32 7
  %267 = load i16, i16* %266, align 2
  %268 = zext i16 %267 to i32
  %269 = and i32 %268, 2
  %270 = icmp ne i32 %269, 0
  %271 = zext i1 %270 to i64
  %272 = select i1 %270, i64 8, i64 0
  %273 = getelementptr inbounds i8, i8* %264, i64 %272
  %274 = load i32, i32* %22, align 4
  %275 = sext i32 %274 to i64
  %276 = getelementptr inbounds i8, i8* %273, i64 %275
  %277 = load %struct._stritem*, %struct._stritem** %23, align 8
  %278 = getelementptr inbounds %struct._stritem, %struct._stritem* %277, i32 0, i32 5
  %279 = load i32, i32* %278, align 8
  %280 = load i32, i32* %22, align 4
  %281 = sub nsw i32 %279, %280
  %282 = sub nsw i32 %281, 2
  %283 = sext i32 %282 to i64
  call void @llvm.memset.p0i8.i64(i8* align 1 %276, i8 32, i64 %283, i1 false)
  %284 = load %struct._stritem*, %struct._stritem** %23, align 8
  call void @do_item_update(%struct._stritem* %284)
  br label %466

285:                                              ; preds = %187, %168
  %286 = load %struct._stritem*, %struct._stritem** %23, align 8
  %287 = getelementptr inbounds %struct._stritem, %struct._stritem* %286, i32 0, i32 6
  %288 = load i16, i16* %287, align 4
  %289 = zext i16 %288 to i32
  %290 = icmp sgt i32 %289, 1
  br i1 %290, label %291, label %450

291:                                              ; preds = %285
  %292 = load %struct._stritem*, %struct._stritem** %23, align 8
  %293 = getelementptr inbounds %struct._stritem, %struct._stritem* %292, i32 0, i32 7
  %294 = load i16, i16* %293, align 2
  %295 = zext i16 %294 to i32
  %296 = and i32 %295, 256
  %297 = icmp ne i32 %296, 0
  br i1 %297, label %298, label %320

298:                                              ; preds = %291
  %299 = load %struct._stritem*, %struct._stritem** %23, align 8
  %300 = getelementptr inbounds %struct._stritem, %struct._stritem* %299, i32 0, i32 10
  %301 = bitcast [0 x %union.anon.10]* %300 to i8*
  %302 = load %struct._stritem*, %struct._stritem** %23, align 8
  %303 = getelementptr inbounds %struct._stritem, %struct._stritem* %302, i32 0, i32 9
  %304 = load i8, i8* %303, align 1
  %305 = zext i8 %304 to i32
  %306 = sext i32 %305 to i64
  %307 = getelementptr inbounds i8, i8* %301, i64 %306
  %308 = getelementptr inbounds i8, i8* %307, i64 1
  %309 = load %struct._stritem*, %struct._stritem** %23, align 8
  %310 = getelementptr inbounds %struct._stritem, %struct._stritem* %309, i32 0, i32 7
  %311 = load i16, i16* %310, align 2
  %312 = zext i16 %311 to i32
  %313 = and i32 %312, 2
  %314 = icmp ne i32 %313, 0
  %315 = zext i1 %314 to i64
  %316 = select i1 %314, i64 8, i64 0
  %317 = getelementptr inbounds i8, i8* %308, i64 %316
  %318 = bitcast i8* %317 to i32*
  %319 = load i32, i32* %318, align 4
  store i32 %319, i32* %25, align 4
  br label %321

320:                                              ; preds = %291
  store i32 0, i32* %25, align 4
  br label %321

321:                                              ; preds = %320, %298
  %322 = load %struct._stritem*, %struct._stritem** %23, align 8
  %323 = getelementptr inbounds %struct._stritem, %struct._stritem* %322, i32 0, i32 10
  %324 = bitcast [0 x %union.anon.10]* %323 to i8*
  %325 = load %struct._stritem*, %struct._stritem** %23, align 8
  %326 = getelementptr inbounds %struct._stritem, %struct._stritem* %325, i32 0, i32 7
  %327 = load i16, i16* %326, align 2
  %328 = zext i16 %327 to i32
  %329 = and i32 %328, 2
  %330 = icmp ne i32 %329, 0
  %331 = zext i1 %330 to i64
  %332 = select i1 %330, i64 8, i64 0
  %333 = getelementptr inbounds i8, i8* %324, i64 %332
  %334 = load %struct._stritem*, %struct._stritem** %23, align 8
  %335 = getelementptr inbounds %struct._stritem, %struct._stritem* %334, i32 0, i32 9
  %336 = load i8, i8* %335, align 1
  %337 = zext i8 %336 to i64
  %338 = load i32, i32* %25, align 4
  %339 = load %struct._stritem*, %struct._stritem** %23, align 8
  %340 = getelementptr inbounds %struct._stritem, %struct._stritem* %339, i32 0, i32 4
  %341 = load i32, i32* %340, align 4
  %342 = load i32, i32* %22, align 4
  %343 = add nsw i32 %342, 2
  %344 = call %struct._stritem* @do_item_alloc(i8* %333, i64 %337, i32 %338, i32 %341, i32 %343)
  store %struct._stritem* %344, %struct._stritem** %24, align 8
  %345 = load %struct._stritem*, %struct._stritem** %24, align 8
  %346 = icmp eq %struct._stritem* %345, null
  br i1 %346, label %347, label %349

347:                                              ; preds = %321
  %348 = load %struct._stritem*, %struct._stritem** %23, align 8
  call void @do_item_remove(%struct._stritem* %348)
  store i32 2, i32* %10, align 4
  br label %495

349:                                              ; preds = %321
  %350 = load %struct._stritem*, %struct._stritem** %24, align 8
  %351 = getelementptr inbounds %struct._stritem, %struct._stritem* %350, i32 0, i32 10
  %352 = bitcast [0 x %union.anon.10]* %351 to i8*
  %353 = load %struct._stritem*, %struct._stritem** %24, align 8
  %354 = getelementptr inbounds %struct._stritem, %struct._stritem* %353, i32 0, i32 9
  %355 = load i8, i8* %354, align 1
  %356 = zext i8 %355 to i32
  %357 = sext i32 %356 to i64
  %358 = getelementptr inbounds i8, i8* %352, i64 %357
  %359 = getelementptr inbounds i8, i8* %358, i64 1
  %360 = load %struct._stritem*, %struct._stritem** %24, align 8
  %361 = getelementptr inbounds %struct._stritem, %struct._stritem* %360, i32 0, i32 7
  %362 = load i16, i16* %361, align 2
  %363 = zext i16 %362 to i32
  %364 = and i32 %363, 256
  %365 = icmp ne i32 %364, 0
  %366 = zext i1 %365 to i64
  %367 = select i1 %365, i64 4, i64 0
  %368 = getelementptr inbounds i8, i8* %359, i64 %367
  %369 = load %struct._stritem*, %struct._stritem** %24, align 8
  %370 = getelementptr inbounds %struct._stritem, %struct._stritem* %369, i32 0, i32 7
  %371 = load i16, i16* %370, align 2
  %372 = zext i16 %371 to i32
  %373 = and i32 %372, 2
  %374 = icmp ne i32 %373, 0
  %375 = zext i1 %374 to i64
  %376 = select i1 %374, i64 8, i64 0
  %377 = getelementptr inbounds i8, i8* %368, i64 %376
  %378 = load i8*, i8** %16, align 8
  %379 = load i32, i32* %22, align 4
  %380 = sext i32 %379 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %377, i8* align 1 %378, i64 %380, i1 false)
  %381 = load %struct._stritem*, %struct._stritem** %24, align 8
  %382 = getelementptr inbounds %struct._stritem, %struct._stritem* %381, i32 0, i32 10
  %383 = bitcast [0 x %union.anon.10]* %382 to i8*
  %384 = load %struct._stritem*, %struct._stritem** %24, align 8
  %385 = getelementptr inbounds %struct._stritem, %struct._stritem* %384, i32 0, i32 9
  %386 = load i8, i8* %385, align 1
  %387 = zext i8 %386 to i32
  %388 = sext i32 %387 to i64
  %389 = getelementptr inbounds i8, i8* %383, i64 %388
  %390 = getelementptr inbounds i8, i8* %389, i64 1
  %391 = load %struct._stritem*, %struct._stritem** %24, align 8
  %392 = getelementptr inbounds %struct._stritem, %struct._stritem* %391, i32 0, i32 7
  %393 = load i16, i16* %392, align 2
  %394 = zext i16 %393 to i32
  %395 = and i32 %394, 256
  %396 = icmp ne i32 %395, 0
  %397 = zext i1 %396 to i64
  %398 = select i1 %396, i64 4, i64 0
  %399 = getelementptr inbounds i8, i8* %390, i64 %398
  %400 = load %struct._stritem*, %struct._stritem** %24, align 8
  %401 = getelementptr inbounds %struct._stritem, %struct._stritem* %400, i32 0, i32 7
  %402 = load i16, i16* %401, align 2
  %403 = zext i16 %402 to i32
  %404 = and i32 %403, 2
  %405 = icmp ne i32 %404, 0
  %406 = zext i1 %405 to i64
  %407 = select i1 %405, i64 8, i64 0
  %408 = getelementptr inbounds i8, i8* %399, i64 %407
  %409 = load i32, i32* %22, align 4
  %410 = sext i32 %409 to i64
  %411 = getelementptr inbounds i8, i8* %408, i64 %410
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %411, i8* align 1 getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19, i64 0, i64 0), i64 2, i1 false)
  %412 = load %struct._stritem*, %struct._stritem** %23, align 8
  %413 = load %struct._stritem*, %struct._stritem** %24, align 8
  %414 = load i32, i32* %18, align 4
  %415 = call i32 @item_replace(%struct._stritem* %412, %struct._stritem* %413, i32 %414)
  %416 = load %struct._stritem*, %struct._stritem** %23, align 8
  %417 = getelementptr inbounds %struct._stritem, %struct._stritem* %416, i32 0, i32 7
  %418 = load i16, i16* %417, align 2
  %419 = zext i16 %418 to i32
  %420 = and i32 %419, 2
  %421 = icmp ne i32 %420, 0
  br i1 %421, label %422, label %448

422:                                              ; preds = %349
  %423 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 19), align 8
  %424 = trunc i8 %423 to i1
  br i1 %424, label %425, label %441

425:                                              ; preds = %422
  %426 = load %struct._stritem*, %struct._stritem** %24, align 8
  %427 = getelementptr inbounds %struct._stritem, %struct._stritem* %426, i32 0, i32 7
  %428 = load i16, i16* %427, align 2
  %429 = zext i16 %428 to i32
  %430 = and i32 %429, 2
  %431 = icmp ne i32 %430, 0
  br i1 %431, label %432, label %438

432:                                              ; preds = %425
  %433 = load %struct._stritem*, %struct._stritem** %24, align 8
  %434 = getelementptr inbounds %struct._stritem, %struct._stritem* %433, i32 0, i32 10
  %435 = getelementptr inbounds [0 x %union.anon.10], [0 x %union.anon.10]* %434, i64 0, i64 0
  %436 = bitcast %union.anon.10* %435 to i64*
  %437 = load i64, i64* %436, align 8
  br label %439

438:                                              ; preds = %425
  br label %439

439:                                              ; preds = %438, %432
  %440 = phi i64 [ %437, %432 ], [ 0, %438 ]
  br label %442

441:                                              ; preds = %422
  br label %442

442:                                              ; preds = %441, %439
  %443 = phi i64 [ %440, %439 ], [ 0, %441 ]
  %444 = load %struct._stritem*, %struct._stritem** %23, align 8
  %445 = getelementptr inbounds %struct._stritem, %struct._stritem* %444, i32 0, i32 10
  %446 = getelementptr inbounds [0 x %union.anon.10], [0 x %union.anon.10]* %445, i64 0, i64 0
  %447 = bitcast %union.anon.10* %446 to i64*
  store i64 %443, i64* %447, align 8
  br label %448

448:                                              ; preds = %442, %349
  %449 = load %struct._stritem*, %struct._stritem** %24, align 8
  call void @do_item_remove(%struct._stritem* %449)
  br label %465

450:                                              ; preds = %285
  %451 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %452 = icmp ne i32 %451, 0
  br i1 %452, label %453, label %456

453:                                              ; preds = %450
  %454 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %455 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %454, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.201, i64 0, i64 0))
  br label %456

456:                                              ; preds = %453, %450
  %457 = load %struct._stritem*, %struct._stritem** %23, align 8
  %458 = getelementptr inbounds %struct._stritem, %struct._stritem* %457, i32 0, i32 6
  %459 = load i16, i16* %458, align 4
  %460 = zext i16 %459 to i32
  %461 = icmp eq i32 %460, 1
  br i1 %461, label %462, label %464

462:                                              ; preds = %456
  %463 = load %struct._stritem*, %struct._stritem** %23, align 8
  call void @do_item_remove(%struct._stritem* %463)
  br label %464

464:                                              ; preds = %462, %456
  store i32 3, i32* %10, align 4
  br label %495

465:                                              ; preds = %448
  br label %466

466:                                              ; preds = %465, %213
  %467 = load i64*, i64** %17, align 8
  %468 = icmp ne i64* %467, null
  br i1 %468, label %469, label %486

469:                                              ; preds = %466
  %470 = load %struct._stritem*, %struct._stritem** %23, align 8
  %471 = getelementptr inbounds %struct._stritem, %struct._stritem* %470, i32 0, i32 7
  %472 = load i16, i16* %471, align 2
  %473 = zext i16 %472 to i32
  %474 = and i32 %473, 2
  %475 = icmp ne i32 %474, 0
  br i1 %475, label %476, label %482

476:                                              ; preds = %469
  %477 = load %struct._stritem*, %struct._stritem** %23, align 8
  %478 = getelementptr inbounds %struct._stritem, %struct._stritem* %477, i32 0, i32 10
  %479 = getelementptr inbounds [0 x %union.anon.10], [0 x %union.anon.10]* %478, i64 0, i64 0
  %480 = bitcast %union.anon.10* %479 to i64*
  %481 = load i64, i64* %480, align 8
  br label %483

482:                                              ; preds = %469
  br label %483

483:                                              ; preds = %482, %476
  %484 = phi i64 [ %481, %476 ], [ 0, %482 ]
  %485 = load i64*, i64** %17, align 8
  store i64 %484, i64* %485, align 8
  br label %486

486:                                              ; preds = %483, %466
  %487 = load %struct._stritem**, %struct._stritem*** %19, align 8
  %488 = icmp ne %struct._stritem** %487, null
  br i1 %488, label %489, label %492

489:                                              ; preds = %486
  %490 = load %struct._stritem*, %struct._stritem** %23, align 8
  %491 = load %struct._stritem**, %struct._stritem*** %19, align 8
  store %struct._stritem* %490, %struct._stritem** %491, align 8
  br label %494

492:                                              ; preds = %486
  %493 = load %struct._stritem*, %struct._stritem** %23, align 8
  call void @do_item_remove(%struct._stritem* %493)
  br label %494

494:                                              ; preds = %492, %489
  store i32 0, i32* %10, align 4
  br label %495

495:                                              ; preds = %494, %464, %347, %108, %75, %47, %34
  %496 = load i32, i32* %10, align 4
  ret i32 %496
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @do_accept_new_conns(i1 zeroext %0) #0 {
  %2 = alloca i8, align 1
  %3 = alloca %struct.conn*, align 8
  %4 = alloca %struct.timeval, align 8
  %5 = alloca i64, align 8
  %6 = zext i1 %0 to i8
  store i8 %6, i8* %2, align 1
  %7 = load %struct.conn*, %struct.conn** @listen_conn, align 8
  store %struct.conn* %7, %struct.conn** %3, align 8
  br label %8

8:                                                ; preds = %36, %1
  %9 = load %struct.conn*, %struct.conn** %3, align 8
  %10 = icmp ne %struct.conn* %9, null
  br i1 %10, label %11, label %40

11:                                               ; preds = %8
  %12 = load i8, i8* %2, align 1
  %13 = trunc i8 %12 to i1
  br i1 %13, label %14, label %25

14:                                               ; preds = %11
  %15 = load %struct.conn*, %struct.conn** %3, align 8
  %16 = call zeroext i1 @update_event(%struct.conn* %15, i32 18)
  %17 = load %struct.conn*, %struct.conn** %3, align 8
  %18 = getelementptr inbounds %struct.conn, %struct.conn* %17, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 21), align 8
  %21 = call i32 @listen(i32 %19, i32 %20) #14
  %22 = icmp ne i32 %21, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %14
  call void @perror(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.202, i64 0, i64 0))
  br label %24

24:                                               ; preds = %23, %14
  br label %35

25:                                               ; preds = %11
  %26 = load %struct.conn*, %struct.conn** %3, align 8
  %27 = call zeroext i1 @update_event(%struct.conn* %26, i32 0)
  %28 = load %struct.conn*, %struct.conn** %3, align 8
  %29 = getelementptr inbounds %struct.conn, %struct.conn* %28, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = call i32 @listen(i32 %30, i32 0) #14
  %32 = icmp ne i32 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %25
  call void @perror(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.202, i64 0, i64 0))
  br label %34

34:                                               ; preds = %33, %25
  br label %35

35:                                               ; preds = %34, %24
  br label %36

36:                                               ; preds = %35
  %37 = load %struct.conn*, %struct.conn** %3, align 8
  %38 = getelementptr inbounds %struct.conn, %struct.conn* %37, i32 0, i32 41
  %39 = load %struct.conn*, %struct.conn** %38, align 8
  store %struct.conn* %39, %struct.conn** %3, align 8
  br label %8, !llvm.loop !27

40:                                               ; preds = %8
  %41 = load i8, i8* %2, align 1
  %42 = trunc i8 %41 to i1
  br i1 %42, label %43, label %58

43:                                               ; preds = %40
  %44 = call i32 @gettimeofday(%struct.timeval* %4, %struct.timezone* null) #14
  call void @STATS_LOCK()
  %45 = getelementptr inbounds %struct.timeval, %struct.timeval* %4, i32 0, i32 0
  %46 = load i64, i64* %45, align 8
  %47 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 22, i32 0), align 8
  %48 = sub nsw i64 %46, %47
  %49 = mul nsw i64 %48, 1000000
  %50 = getelementptr inbounds %struct.timeval, %struct.timeval* %4, i32 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 22, i32 1), align 8
  %53 = sub nsw i64 %51, %52
  %54 = add nsw i64 %49, %53
  store i64 %54, i64* %5, align 8
  %55 = load i64, i64* %5, align 8
  %56 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 14), align 8
  %57 = add i64 %56, %55
  store i64 %57, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 14), align 8
  store i8 1, i8* getelementptr inbounds (%struct.stats_state, %struct.stats_state* @stats_state, i32 0, i32 9), align 1
  call void @STATS_UNLOCK()
  br label %62

58:                                               ; preds = %40
  call void @STATS_LOCK()
  store i8 0, i8* getelementptr inbounds (%struct.stats_state, %struct.stats_state* @stats_state, i32 0, i32 9), align 1
  %59 = call i32 @gettimeofday(%struct.timeval* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 22), %struct.timezone* null) #14
  %60 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 4), align 8
  %61 = add i64 %60, 1
  store i64 %61, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 4), align 8
  call void @STATS_UNLOCK()
  store volatile i8 0, i8* @allow_new_conns, align 1
  call void @maxconns_handler(i32 -42, i16 signext 0, i8* null)
  br label %62

62:                                               ; preds = %58, %43
  ret void
}

; Function Attrs: nounwind
declare dso_local i32 @listen(i32, i32) #2

; Function Attrs: nounwind
declare dso_local i32 @gettimeofday(%struct.timeval*, %struct.timezone*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @maxconns_handler(i32 %0, i16 signext %1, i8* %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i16, align 2
  %6 = alloca i8*, align 8
  %7 = alloca %struct.timeval, align 8
  store i32 %0, i32* %4, align 4
  store i16 %1, i16* %5, align 2
  store i8* %2, i8** %6, align 8
  %8 = bitcast %struct.timeval* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 bitcast (%struct.timeval* @__const.maxconns_handler.t to i8*), i64 16, i1 false)
  %9 = load i32, i32* %4, align 4
  %10 = icmp eq i32 %9, -42
  br i1 %10, label %16, label %11

11:                                               ; preds = %3
  %12 = load volatile i8, i8* @allow_new_conns, align 1
  %13 = trunc i8 %12 to i1
  %14 = zext i1 %13 to i32
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %20

16:                                               ; preds = %11, %3
  call void @event_set(%struct.event* @maxconnsevent, i32 -1, i16 signext 0, void (i32, i16, i8*)* @maxconns_handler, i8* null)
  %17 = load %struct.event_base*, %struct.event_base** @main_base, align 8
  %18 = call i32 @event_base_set(%struct.event_base* %17, %struct.event* @maxconnsevent)
  %19 = call i32 @event_add(%struct.event* @maxconnsevent, %struct.timeval* %7)
  br label %22

20:                                               ; preds = %11
  %21 = call i32 @event_del(%struct.event* @maxconnsevent)
  call void @accept_new_conns(i1 zeroext true)
  br label %22

22:                                               ; preds = %20, %16
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca %struct.passwd*, align 8
  %14 = alloca %struct.timeval, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i8, align 1
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i8, align 1
  %20 = alloca i8, align 1
  %21 = alloca i8, align 1
  %22 = alloca i8, align 1
  %23 = alloca i8, align 1
  %24 = alloca i8, align 1
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca [64 x i32], align 16
  %28 = alloca i8, align 1
  %29 = alloca i8*, align 8
  %30 = alloca i8, align 1
  %31 = alloca %struct._mc_meta_data*, align 8
  %32 = alloca i8*, align 8
  %33 = alloca i8*, align 8
  %34 = alloca i8*, align 8
  %35 = alloca [40 x i8*], align 16
  %36 = alloca i8*, align 8
  %37 = alloca i8*, align 8
  %38 = alloca i8, align 1
  %39 = alloca i8*, align 8
  %40 = alloca [37 x %struct.option], align 16
  %41 = alloca i32, align 4
  %42 = alloca i64, align 8
  %43 = alloca i8*, align 8
  %44 = alloca i8*, align 8
  %45 = alloca i8*, align 8
  %46 = alloca i8*, align 8
  %47 = alloca %struct.timeval, align 8
  %48 = alloca i8, align 1
  %49 = alloca i32, align 4
  %50 = alloca %struct.event_config*, align 8
  %51 = alloca i8, align 1
  %52 = alloca i8*, align 8
  %53 = alloca i8, align 1
  %54 = alloca i64, align 8
  %55 = alloca %struct.timeval, align 8
  %56 = alloca i8*, align 8
  %57 = alloca i8*, align 8
  %58 = alloca i64, align 8
  %59 = alloca %struct._IO_FILE*, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i8 0, i8* %7, align 1
  store i8 0, i8* %8, align 1
  store i8 0, i8* %9, align 1
  store i32 0, i32* %10, align 4
  store i8* null, i8** %11, align 8
  store i8* null, i8** %12, align 8
  store i8 0, i8* %16, align 1
  store i32 0, i32* %17, align 4
  store i32 0, i32* %18, align 4
  store i8 0, i8* %19, align 1
  store i8 0, i8* %20, align 1
  store i8 0, i8* %21, align 1
  store i8 1, i8* %22, align 1
  store i8 1, i8* %23, align 1
  store i8 1, i8* %24, align 1
  store i32 1, i32* %25, align 4
  store i8 0, i8* %28, align 1
  store i8* null, i8** %29, align 8
  store i8 0, i8* %30, align 1
  %60 = call noalias i8* @malloc(i64 48) #14
  %61 = bitcast i8* %60 to %struct._mc_meta_data*
  store %struct._mc_meta_data* %61, %struct._mc_meta_data** %31, align 8
  %62 = load %struct._mc_meta_data*, %struct._mc_meta_data** %31, align 8
  %63 = getelementptr inbounds %struct._mc_meta_data, %struct._mc_meta_data* %62, i32 0, i32 2
  store i8* null, i8** %63, align 8
  %64 = bitcast [40 x i8*]* %35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %64, i8* align 16 bitcast ([40 x i8*]* @__const.main.subopts_tokens to i8*), i64 320, i1 false)
  %65 = call zeroext i1 @sanitycheck()
  br i1 %65, label %69, label %66

66:                                               ; preds = %2
  %67 = load %struct._mc_meta_data*, %struct._mc_meta_data** %31, align 8
  %68 = bitcast %struct._mc_meta_data* %67 to i8*
  call void @free(i8* %68) #14
  store i32 71, i32* %3, align 4
  br label %1391

69:                                               ; preds = %2
  %70 = call void (i32)* @signal(i32 2, void (i32)* @sig_handler) #14
  %71 = call void (i32)* @signal(i32 15, void (i32)* @sig_handler) #14
  %72 = call void (i32)* @signal(i32 1, void (i32)* @sighup_handler) #14
  %73 = call void (i32)* @signal(i32 10, void (i32)* @sig_usrhandler) #14
  call void @settings_init()
  %74 = load i32, i32* %25, align 4
  %75 = icmp eq i32 %74, 1
  call void @verify_default(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.157, i64 0, i64 0), i1 zeroext %75)
  store i8* null, i8** %36, align 8
  %76 = call i8* @storage_init_config(%struct.settings* @settings)
  store i8* %76, i8** %37, align 8
  store i8 0, i8* %38, align 1
  %77 = load i8*, i8** %37, align 8
  %78 = icmp eq i8* %77, null
  br i1 %78, label %79, label %82

79:                                               ; preds = %69
  %80 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %81 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %80, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.221, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %1391

82:                                               ; preds = %69
  %83 = call i32 @init_lru_maintainer()
  %84 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  call void @setbuf(%struct._IO_FILE* %84, i8* null) #14
  store i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.222, i64 0, i64 0), i8** %39, align 8
  %85 = bitcast [37 x %struct.option]* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %85, i8* align 16 bitcast ([37 x %struct.option]* @__const.main.longopts to i8*), i64 1184, i1 false)
  br label %86

86:                                               ; preds = %702, %82
  %87 = load i32, i32* %4, align 4
  %88 = load i8**, i8*** %5, align 8
  %89 = load i8*, i8** %39, align 8
  %90 = getelementptr inbounds [37 x %struct.option], [37 x %struct.option]* %40, i64 0, i64 0
  %91 = call i32 @getopt_long(i32 %87, i8** %88, i8* %89, %struct.option* %90, i32* %41) #14
  store i32 %91, i32* %6, align 4
  %92 = icmp ne i32 -1, %91
  br i1 %92, label %93, label %703

93:                                               ; preds = %86
  %94 = load i32, i32* %6, align 4
  switch i32 %94, label %698 [
    i32 65, label %95
    i32 90, label %96
    i32 97, label %99
    i32 85, label %103
    i32 112, label %106
    i32 115, label %109
    i32 109, label %111
    i32 77, label %117
    i32 99, label %118
    i32 104, label %127
    i32 105, label %128
    i32 86, label %129
    i32 107, label %131
    i32 118, label %132
    i32 108, label %135
    i32 100, label %170
    i32 114, label %171
    i32 82, label %172
    i32 117, label %181
    i32 80, label %183
    i32 101, label %185
    i32 102, label %187
    i32 110, label %200
    i32 116, label %209
    i32 68, label %224
    i32 76, label %239
    i32 67, label %247
    i32 98, label %248
    i32 66, label %251
    i32 73, label %273
    i32 83, label %333
    i32 70, label %336
    i32 88, label %337
    i32 87, label %338
    i32 89, label %339
    i32 78, label %342
    i32 111, label %351
  ]

95:                                               ; preds = %93
  store i8 1, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 36), align 8
  br label %702

96:                                               ; preds = %93
  %97 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %98 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %97, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.256, i64 0, i64 0))
  call void @exit(i32 64) #17
  unreachable

99:                                               ; preds = %93
  %100 = load i8*, i8** @optarg, align 8
  %101 = call i64 @strtol(i8* %100, i8** null, i32 8) #14
  %102 = trunc i64 %101 to i32
  store i32 %102, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 11), align 8
  br label %702

103:                                              ; preds = %93
  %104 = load i8*, i8** @optarg, align 8
  %105 = call i32 @atoi(i8* %104) #16
  store i32 %105, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 3), align 8
  store i8 1, i8* %21, align 1
  br label %702

106:                                              ; preds = %93
  %107 = load i8*, i8** @optarg, align 8
  %108 = call i32 @atoi(i8* %107) #16
  store i32 %108, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 2), align 4
  store i8 1, i8* %20, align 1
  br label %702

109:                                              ; preds = %93
  %110 = load i8*, i8** @optarg, align 8
  store i8* %110, i8** getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 9), align 8
  br label %702

111:                                              ; preds = %93
  %112 = load i8*, i8** @optarg, align 8
  %113 = call i32 @atoi(i8* %112) #16
  %114 = sext i32 %113 to i64
  %115 = mul i64 %114, 1024
  %116 = mul i64 %115, 1024
  store i64 %116, i64* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 0), align 8
  br label %702

117:                                              ; preds = %93
  store i32 0, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 8), align 8
  br label %702

118:                                              ; preds = %93
  %119 = load i8*, i8** @optarg, align 8
  %120 = call i32 @atoi(i8* %119) #16
  store i32 %120, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 1), align 8
  %121 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 1), align 8
  %122 = icmp sle i32 %121, 0
  br i1 %122, label %123, label %126

123:                                              ; preds = %118
  %124 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %125 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %124, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.257, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %1391

126:                                              ; preds = %118
  br label %702

127:                                              ; preds = %93
  call void @usage()
  call void @exit(i32 0) #17
  unreachable

128:                                              ; preds = %93
  call void @usage_license()
  call void @exit(i32 0) #17
  unreachable

129:                                              ; preds = %93
  %130 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.258, i64 0, i64 0))
  call void @exit(i32 0) #17
  unreachable

131:                                              ; preds = %93
  store i8 1, i8* %7, align 1
  br label %702

132:                                              ; preds = %93
  %133 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %134 = add nsw i32 %133, 1
  store i32 %134, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  br label %702

135:                                              ; preds = %93
  %136 = load i8*, i8** getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 4), align 8
  %137 = icmp ne i8* %136, null
  br i1 %137, label %138, label %166

138:                                              ; preds = %135
  %139 = load i8*, i8** getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 4), align 8
  %140 = load i8*, i8** @optarg, align 8
  %141 = call i8* @strstr(i8* %139, i8* %140) #16
  %142 = icmp ne i8* %141, null
  br i1 %142, label %143, label %144

143:                                              ; preds = %138
  br label %702

144:                                              ; preds = %138
  %145 = load i8*, i8** getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 4), align 8
  %146 = call i64 @strlen(i8* %145) #16
  %147 = load i8*, i8** @optarg, align 8
  %148 = call i64 @strlen(i8* %147) #16
  %149 = add i64 %146, %148
  %150 = add i64 %149, 2
  store i64 %150, i64* %42, align 8
  %151 = load i64, i64* %42, align 8
  %152 = call noalias i8* @malloc(i64 %151) #14
  store i8* %152, i8** %43, align 8
  %153 = load i8*, i8** %43, align 8
  %154 = icmp eq i8* %153, null
  br i1 %154, label %155, label %158

155:                                              ; preds = %144
  %156 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %157 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %156, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.259, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %1391

158:                                              ; preds = %144
  %159 = load i8*, i8** %43, align 8
  %160 = load i64, i64* %42, align 8
  %161 = load i8*, i8** getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 4), align 8
  %162 = load i8*, i8** @optarg, align 8
  %163 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %159, i64 %160, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.260, i64 0, i64 0), i8* %161, i8* %162) #14
  %164 = load i8*, i8** getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 4), align 8
  call void @free(i8* %164) #14
  %165 = load i8*, i8** %43, align 8
  store i8* %165, i8** getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 4), align 8
  br label %169

166:                                              ; preds = %135
  %167 = load i8*, i8** @optarg, align 8
  %168 = call noalias i8* @strdup(i8* %167) #14
  store i8* %168, i8** getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 4), align 8
  br label %169

169:                                              ; preds = %166, %158
  br label %702

170:                                              ; preds = %93
  store i8 1, i8* %8, align 1
  br label %702

171:                                              ; preds = %93
  store i32 1, i32* %10, align 4
  br label %702

172:                                              ; preds = %93
  %173 = load i8*, i8** @optarg, align 8
  %174 = call i32 @atoi(i8* %173) #16
  store i32 %174, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 18), align 4
  %175 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 18), align 4
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %177, label %180

177:                                              ; preds = %172
  %178 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %179 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %178, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.261, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %1391

180:                                              ; preds = %172
  br label %702

181:                                              ; preds = %93
  %182 = load i8*, i8** @optarg, align 8
  store i8* %182, i8** %11, align 8
  br label %702

183:                                              ; preds = %93
  %184 = load i8*, i8** @optarg, align 8
  store i8* %184, i8** %12, align 8
  br label %702

185:                                              ; preds = %93
  %186 = load i8*, i8** @optarg, align 8
  store i8* %186, i8** getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 73), align 8
  br label %702

187:                                              ; preds = %93
  %188 = load i8*, i8** @optarg, align 8
  %189 = call double @atof(i8* %188) #16
  store double %189, double* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 12), align 8
  %190 = load double, double* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 12), align 8
  %191 = fcmp ole double %190, 1.000000e+00
  br i1 %191, label %192, label %195

192:                                              ; preds = %187
  %193 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %194 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %193, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.262, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %1391

195:                                              ; preds = %187
  %196 = load i8*, i8** @optarg, align 8
  %197 = call noalias i8* @strdup(i8* %196) #14
  %198 = load %struct._mc_meta_data*, %struct._mc_meta_data** %31, align 8
  %199 = getelementptr inbounds %struct._mc_meta_data, %struct._mc_meta_data* %198, i32 0, i32 2
  store i8* %197, i8** %199, align 8
  br label %702

200:                                              ; preds = %93
  %201 = load i8*, i8** @optarg, align 8
  %202 = call i32 @atoi(i8* %201) #16
  store i32 %202, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 13), align 8
  %203 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 13), align 8
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %205, label %208

205:                                              ; preds = %200
  %206 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %207 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %206, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.263, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %1391

208:                                              ; preds = %200
  br label %702

209:                                              ; preds = %93
  %210 = load i8*, i8** @optarg, align 8
  %211 = call i32 @atoi(i8* %210) #16
  store i32 %211, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 14), align 4
  %212 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 14), align 4
  %213 = icmp sle i32 %212, 0
  br i1 %213, label %214, label %217

214:                                              ; preds = %209
  %215 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %216 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %215, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.264, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %1391

217:                                              ; preds = %209
  %218 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 14), align 4
  %219 = icmp sgt i32 %218, 64
  br i1 %219, label %220, label %223

220:                                              ; preds = %217
  %221 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %222 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %221, i8* getelementptr inbounds ([133 x i8], [133 x i8]* @.str.265, i64 0, i64 0))
  br label %223

223:                                              ; preds = %220, %217
  br label %702

224:                                              ; preds = %93
  %225 = load i8*, i8** @optarg, align 8
  %226 = icmp ne i8* %225, null
  br i1 %226, label %227, label %232

227:                                              ; preds = %224
  %228 = load i8*, i8** @optarg, align 8
  %229 = getelementptr inbounds i8, i8* %228, i64 0
  %230 = load i8, i8* %229, align 1
  %231 = icmp ne i8 %230, 0
  br i1 %231, label %235, label %232

232:                                              ; preds = %227, %224
  %233 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %234 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %233, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.266, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %1391

235:                                              ; preds = %227
  %236 = load i8*, i8** @optarg, align 8
  %237 = getelementptr inbounds i8, i8* %236, i64 0
  %238 = load i8, i8* %237, align 1
  store i8 %238, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 16), align 4
  store i32 1, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 17), align 8
  br label %702

239:                                              ; preds = %93
  %240 = call i32 @enable_large_pages()
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %242, label %243

242:                                              ; preds = %239
  store i8 1, i8* %9, align 1
  br label %246

243:                                              ; preds = %239
  %244 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %245 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %244, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.267, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %1391

246:                                              ; preds = %242
  br label %702

247:                                              ; preds = %93
  store i8 0, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 19), align 8
  br label %702

248:                                              ; preds = %93
  %249 = load i8*, i8** @optarg, align 8
  %250 = call i32 @atoi(i8* %249) #16
  store i32 %250, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 21), align 8
  br label %702

251:                                              ; preds = %93
  store i8 1, i8* %19, align 1
  %252 = load i8*, i8** @optarg, align 8
  %253 = call i32 @strcmp(i8* %252, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.268, i64 0, i64 0)) #16
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %255, label %256

255:                                              ; preds = %251
  store i32 5, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 20), align 4
  br label %272

256:                                              ; preds = %251
  %257 = load i8*, i8** @optarg, align 8
  %258 = call i32 @strcmp(i8* %257, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.13, i64 0, i64 0)) #16
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %260, label %261

260:                                              ; preds = %256
  store i32 4, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 20), align 4
  br label %271

261:                                              ; preds = %256
  %262 = load i8*, i8** @optarg, align 8
  %263 = call i32 @strcmp(i8* %262, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14, i64 0, i64 0)) #16
  %264 = icmp eq i32 %263, 0
  br i1 %264, label %265, label %266

265:                                              ; preds = %261
  store i32 3, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 20), align 4
  br label %270

266:                                              ; preds = %261
  %267 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %268 = load i8*, i8** @optarg, align 8
  %269 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %267, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.269, i64 0, i64 0), i8* %268)
  call void @exit(i32 64) #17
  unreachable

270:                                              ; preds = %265
  br label %271

271:                                              ; preds = %270, %260
  br label %272

272:                                              ; preds = %271, %255
  br label %702

273:                                              ; preds = %93
  %274 = load i8*, i8** @optarg, align 8
  %275 = call noalias i8* @strdup(i8* %274) #14
  store i8* %275, i8** %15, align 8
  %276 = load i8*, i8** %15, align 8
  %277 = load i8*, i8** %15, align 8
  %278 = call i64 @strlen(i8* %277) #16
  %279 = sub i64 %278, 1
  %280 = getelementptr inbounds i8, i8* %276, i64 %279
  %281 = load i8, i8* %280, align 1
  store i8 %281, i8* %16, align 1
  %282 = load i8, i8* %16, align 1
  %283 = sext i8 %282 to i32
  %284 = icmp eq i32 %283, 107
  br i1 %284, label %297, label %285

285:                                              ; preds = %273
  %286 = load i8, i8* %16, align 1
  %287 = sext i8 %286 to i32
  %288 = icmp eq i32 %287, 109
  br i1 %288, label %297, label %289

289:                                              ; preds = %285
  %290 = load i8, i8* %16, align 1
  %291 = sext i8 %290 to i32
  %292 = icmp eq i32 %291, 75
  br i1 %292, label %297, label %293

293:                                              ; preds = %289
  %294 = load i8, i8* %16, align 1
  %295 = sext i8 %294 to i32
  %296 = icmp eq i32 %295, 77
  br i1 %296, label %297, label %328

297:                                              ; preds = %293, %289, %285, %273
  %298 = load i8*, i8** %15, align 8
  %299 = load i8*, i8** %15, align 8
  %300 = call i64 @strlen(i8* %299) #16
  %301 = sub i64 %300, 1
  %302 = getelementptr inbounds i8, i8* %298, i64 %301
  store i8 0, i8* %302, align 1
  %303 = load i8*, i8** %15, align 8
  %304 = call i32 @atoi(i8* %303) #16
  store i32 %304, i32* %17, align 4
  %305 = load i8, i8* %16, align 1
  %306 = sext i8 %305 to i32
  %307 = icmp eq i32 %306, 107
  br i1 %307, label %312, label %308

308:                                              ; preds = %297
  %309 = load i8, i8* %16, align 1
  %310 = sext i8 %309 to i32
  %311 = icmp eq i32 %310, 75
  br i1 %311, label %312, label %315

312:                                              ; preds = %308, %297
  %313 = load i32, i32* %17, align 4
  %314 = mul nsw i32 %313, 1024
  store i32 %314, i32* %17, align 4
  br label %315

315:                                              ; preds = %312, %308
  %316 = load i8, i8* %16, align 1
  %317 = sext i8 %316 to i32
  %318 = icmp eq i32 %317, 109
  br i1 %318, label %323, label %319

319:                                              ; preds = %315
  %320 = load i8, i8* %16, align 1
  %321 = sext i8 %320 to i32
  %322 = icmp eq i32 %321, 77
  br i1 %322, label %323, label %326

323:                                              ; preds = %319, %315
  %324 = load i32, i32* %17, align 4
  %325 = mul nsw i32 %324, 1048576
  store i32 %325, i32* %17, align 4
  br label %326

326:                                              ; preds = %323, %319
  %327 = load i32, i32* %17, align 4
  store i32 %327, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 22), align 4
  br label %331

328:                                              ; preds = %293
  %329 = load i8*, i8** %15, align 8
  %330 = call i32 @atoi(i8* %329) #16
  store i32 %330, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 22), align 4
  br label %331

331:                                              ; preds = %328, %326
  %332 = load i8*, i8** %15, align 8
  call void @free(i8* %332) #14
  br label %702

333:                                              ; preds = %93
  %334 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %335 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %334, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.270, i64 0, i64 0))
  call void @exit(i32 64) #17
  unreachable

336:                                              ; preds = %93
  store i8 0, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 38), align 8
  br label %702

337:                                              ; preds = %93
  store i8 0, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 39), align 1
  br label %702

338:                                              ; preds = %93
  store i8 0, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 55), align 1
  br label %702

339:                                              ; preds = %93
  %340 = load i8*, i8** @optarg, align 8
  %341 = call noalias i8* @strdup(i8* %340) #14
  store i8* %341, i8** getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 10), align 8
  br label %702

342:                                              ; preds = %93
  %343 = load i8*, i8** @optarg, align 8
  %344 = call i32 @atoi(i8* %343) #16
  store i32 %344, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 72), align 4
  %345 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 72), align 4
  %346 = icmp sle i32 %345, 0
  br i1 %346, label %347, label %350

347:                                              ; preds = %342
  %348 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %349 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %348, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.271, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %1391

350:                                              ; preds = %342
  br label %702

351:                                              ; preds = %93
  %352 = load i8*, i8** @optarg, align 8
  %353 = call noalias i8* @strdup(i8* %352) #14
  store i8* %353, i8** %32, align 8
  store i8* %353, i8** %33, align 8
  br label %354

354:                                              ; preds = %695, %351
  %355 = load i8*, i8** %32, align 8
  %356 = load i8, i8* %355, align 1
  %357 = sext i8 %356 to i32
  %358 = icmp ne i32 %357, 0
  br i1 %358, label %359, label %696

359:                                              ; preds = %354
  store i8* null, i8** %44, align 8
  %360 = load i8*, i8** %32, align 8
  %361 = call noalias i8* @strdup(i8* %360) #14
  store i8* %361, i8** %44, align 8
  store i8* %361, i8** %45, align 8
  %362 = getelementptr inbounds [40 x i8*], [40 x i8*]* %35, i64 0, i64 0
  %363 = call i32 @getsubopt(i8** %32, i8** %362, i8** %34) #14
  switch i32 %363, label %684 [
    i32 0, label %364
    i32 1, label %365
    i32 2, label %389
    i32 3, label %390
    i32 4, label %391
    i32 5, label %407
    i32 6, label %425
    i32 7, label %440
    i32 8, label %455
    i32 9, label %482
    i32 10, label %483
    i32 11, label %501
    i32 12, label %515
    i32 13, label %516
    i32 14, label %534
    i32 15, label %552
    i32 16, label %567
    i32 17, label %582
    i32 18, label %591
    i32 19, label %600
    i32 20, label %615
    i32 21, label %630
    i32 22, label %633
    i32 23, label %646
    i32 24, label %647
    i32 31, label %648
    i32 27, label %649
    i32 28, label %651
    i32 29, label %652
    i32 30, label %653
    i32 32, label %654
    i32 33, label %655
    i32 38, label %656
    i32 25, label %657
    i32 26, label %658
    i32 34, label %664
    i32 35, label %665
    i32 36, label %666
    i32 37, label %669
  ]

364:                                              ; preds = %359
  store i8 1, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 27), align 1
  br label %690

365:                                              ; preds = %359
  %366 = load i8*, i8** %34, align 8
  %367 = icmp eq i8* %366, null
  br i1 %367, label %368, label %371

368:                                              ; preds = %365
  %369 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %370 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %369, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.272, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %1391

371:                                              ; preds = %365
  %372 = load i8*, i8** %34, align 8
  %373 = call i32 @atoi(i8* %372) #16
  store i32 %373, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 35), align 4
  %374 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 35), align 4
  %375 = icmp slt i32 %374, 12
  br i1 %375, label %376, label %380

376:                                              ; preds = %371
  %377 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %378 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 35), align 4
  %379 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %377, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.273, i64 0, i64 0), i32 %378)
  store i32 1, i32* %3, align 4
  br label %1391

380:                                              ; preds = %371
  %381 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 35), align 4
  %382 = icmp sgt i32 %381, 32
  br i1 %382, label %383, label %387

383:                                              ; preds = %380
  %384 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %385 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 35), align 4
  %386 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %384, i8* getelementptr inbounds ([120 x i8], [120 x i8]* @.str.274, i64 0, i64 0), i32 %385)
  store i32 1, i32* %3, align 4
  br label %1391

387:                                              ; preds = %380
  br label %388

388:                                              ; preds = %387
  br label %690

389:                                              ; preds = %359
  store i8 0, i8* %24, align 1
  br label %690

390:                                              ; preds = %359
  store i8 1, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 31), align 1
  br label %690

391:                                              ; preds = %359
  %392 = load i8*, i8** %34, align 8
  %393 = icmp eq i8* %392, null
  br i1 %393, label %394, label %395

394:                                              ; preds = %391
  store i32 1, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 32), align 4
  br label %690

395:                                              ; preds = %391
  %396 = load i8*, i8** %34, align 8
  %397 = call i32 @atoi(i8* %396) #16
  store i32 %397, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 32), align 4
  %398 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 32), align 4
  %399 = icmp slt i32 %398, 0
  br i1 %399, label %403, label %400

400:                                              ; preds = %395
  %401 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 32), align 4
  %402 = icmp sgt i32 %401, 2
  br i1 %402, label %403, label %406

403:                                              ; preds = %400, %395
  %404 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %405 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %404, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.275, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %1391

406:                                              ; preds = %400
  br label %690

407:                                              ; preds = %359
  %408 = load i8*, i8** %34, align 8
  %409 = icmp eq i8* %408, null
  br i1 %409, label %410, label %413

410:                                              ; preds = %407
  %411 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %412 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %411, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.276, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %1391

413:                                              ; preds = %407
  %414 = load i8*, i8** %34, align 8
  %415 = call double @atof(i8* %414) #16
  store double %415, double* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 33), align 8
  %416 = load double, double* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 33), align 8
  %417 = fcmp ole double %416, 0.000000e+00
  br i1 %417, label %421, label %418

418:                                              ; preds = %413
  %419 = load double, double* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 33), align 8
  %420 = fcmp ogt double %419, 1.000000e+00
  br i1 %420, label %421, label %424

421:                                              ; preds = %418, %413
  %422 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %423 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %422, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.277, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %1391

424:                                              ; preds = %418
  br label %690

425:                                              ; preds = %359
  %426 = load i8*, i8** %34, align 8
  %427 = icmp eq i8* %426, null
  br i1 %427, label %428, label %431

428:                                              ; preds = %425
  %429 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %430 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %429, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.278, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %1391

431:                                              ; preds = %425
  %432 = load i8*, i8** %34, align 8
  %433 = call i32 @atoi(i8* %432) #16
  store i32 %433, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 34), align 8
  %434 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 34), align 8
  %435 = icmp ult i32 %434, 3
  br i1 %435, label %436, label %439

436:                                              ; preds = %431
  %437 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %438 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %437, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.279, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %1391

439:                                              ; preds = %431
  br label %690

440:                                              ; preds = %359
  %441 = load i8*, i8** %34, align 8
  %442 = icmp eq i8* %441, null
  br i1 %442, label %443, label %446

443:                                              ; preds = %440
  %444 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %445 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %444, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.280, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %1391

446:                                              ; preds = %440
  %447 = load i8*, i8** %34, align 8
  %448 = call i32 @atoi(i8* %447) #16
  store i32 %448, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 37), align 4
  %449 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 37), align 4
  %450 = icmp slt i32 %449, 10
  br i1 %450, label %451, label %454

451:                                              ; preds = %446
  %452 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %453 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %452, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.281, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %1391

454:                                              ; preds = %446
  br label %690

455:                                              ; preds = %359
  %456 = load i8*, i8** %34, align 8
  %457 = icmp eq i8* %456, null
  br i1 %457, label %458, label %461

458:                                              ; preds = %455
  %459 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %460 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %459, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.282, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %1391

461:                                              ; preds = %455
  %462 = load i8*, i8** %34, align 8
  %463 = call i32 @strcmp(i8* %462, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.283, i64 0, i64 0)) #16
  %464 = icmp eq i32 %463, 0
  br i1 %464, label %465, label %466

465:                                              ; preds = %461
  store i32 0, i32* %25, align 4
  br label %481

466:                                              ; preds = %461
  %467 = load i8*, i8** %34, align 8
  %468 = call i32 @strcmp(i8* %467, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.284, i64 0, i64 0)) #16
  %469 = icmp eq i32 %468, 0
  br i1 %469, label %470, label %471

470:                                              ; preds = %466
  store i32 1, i32* %25, align 4
  br label %480

471:                                              ; preds = %466
  %472 = load i8*, i8** %34, align 8
  %473 = call i32 @strcmp(i8* %472, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.285, i64 0, i64 0)) #16
  %474 = icmp eq i32 %473, 0
  br i1 %474, label %475, label %476

475:                                              ; preds = %471
  store i32 2, i32* %25, align 4
  br label %479

476:                                              ; preds = %471
  %477 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %478 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %477, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.286, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %1391

479:                                              ; preds = %475
  br label %480

480:                                              ; preds = %479, %470
  br label %481

481:                                              ; preds = %480, %465
  br label %690

482:                                              ; preds = %359
  store i8 1, i8* %23, align 1
  br label %690

483:                                              ; preds = %359
  %484 = load i8*, i8** %34, align 8
  %485 = icmp eq i8* %484, null
  br i1 %485, label %486, label %489

486:                                              ; preds = %483
  %487 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %488 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %487, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.287, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %1391

489:                                              ; preds = %483
  %490 = load i8*, i8** %34, align 8
  %491 = call i32 @atoi(i8* %490) #16
  store i32 %491, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 41), align 8
  %492 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 41), align 8
  %493 = icmp sgt i32 %492, 1000000
  br i1 %493, label %497, label %494

494:                                              ; preds = %489
  %495 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 41), align 8
  %496 = icmp slt i32 %495, 0
  br i1 %496, label %497, label %500

497:                                              ; preds = %494, %489
  %498 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %499 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %498, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.288, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %1391

500:                                              ; preds = %494
  br label %690

501:                                              ; preds = %359
  %502 = load i8*, i8** %34, align 8
  %503 = icmp eq i8* %502, null
  br i1 %503, label %504, label %507

504:                                              ; preds = %501
  %505 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %506 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %505, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.289, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %1391

507:                                              ; preds = %501
  %508 = load i8*, i8** %34, align 8
  %509 = call zeroext i1 @safe_strtoul(i8* %508, i32* %26)
  br i1 %509, label %513, label %510

510:                                              ; preds = %507
  %511 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %512 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %511, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.290, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %1391

513:                                              ; preds = %507
  %514 = load i32, i32* %26, align 4
  store i32 %514, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 42), align 4
  br label %690

515:                                              ; preds = %359
  store i8 1, i8* %22, align 1
  store i8 1, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 30), align 8
  br label %690

516:                                              ; preds = %359
  %517 = load i8*, i8** %34, align 8
  %518 = icmp eq i8* %517, null
  br i1 %518, label %519, label %522

519:                                              ; preds = %516
  %520 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %521 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %520, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.291, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %1391

522:                                              ; preds = %516
  %523 = load i8*, i8** %34, align 8
  %524 = call i32 @atoi(i8* %523) #16
  store i32 %524, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 43), align 8
  %525 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 43), align 8
  %526 = icmp slt i32 %525, 1
  br i1 %526, label %530, label %527

527:                                              ; preds = %522
  %528 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 43), align 8
  %529 = icmp sge i32 %528, 80
  br i1 %529, label %530, label %533

530:                                              ; preds = %527, %522
  %531 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %532 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %531, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.292, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %1391

533:                                              ; preds = %527
  br label %690

534:                                              ; preds = %359
  %535 = load i8*, i8** %34, align 8
  %536 = icmp eq i8* %535, null
  br i1 %536, label %537, label %540

537:                                              ; preds = %534
  %538 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %539 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %538, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.293, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %1391

540:                                              ; preds = %534
  %541 = load i8*, i8** %34, align 8
  %542 = call i32 @atoi(i8* %541) #16
  store i32 %542, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 44), align 4
  %543 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 44), align 4
  %544 = icmp slt i32 %543, 1
  br i1 %544, label %548, label %545

545:                                              ; preds = %540
  %546 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 44), align 4
  %547 = icmp sge i32 %546, 80
  br i1 %547, label %548, label %551

548:                                              ; preds = %545, %540
  %549 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %550 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %549, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.294, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %1391

551:                                              ; preds = %545
  br label %690

552:                                              ; preds = %359
  %553 = load i8*, i8** %34, align 8
  %554 = icmp eq i8* %553, null
  br i1 %554, label %555, label %558

555:                                              ; preds = %552
  %556 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %557 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %556, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.295, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %1391

558:                                              ; preds = %552
  %559 = load i8*, i8** %34, align 8
  %560 = call double @atof(i8* %559) #16
  store double %560, double* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 45), align 8
  %561 = load double, double* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 45), align 8
  %562 = fcmp ole double %561, 0.000000e+00
  br i1 %562, label %563, label %566

563:                                              ; preds = %558
  %564 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %565 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %564, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.296, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %1391

566:                                              ; preds = %558
  br label %690

567:                                              ; preds = %359
  %568 = load i8*, i8** %34, align 8
  %569 = icmp eq i8* %568, null
  br i1 %569, label %570, label %573

570:                                              ; preds = %567
  %571 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %572 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %571, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.297, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %1391

573:                                              ; preds = %567
  %574 = load i8*, i8** %34, align 8
  %575 = call double @atof(i8* %574) #16
  store double %575, double* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 46), align 8
  %576 = load double, double* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 46), align 8
  %577 = fcmp ole double %576, 0.000000e+00
  br i1 %577, label %578, label %581

578:                                              ; preds = %573
  %579 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %580 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %579, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.298, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %1391

581:                                              ; preds = %573
  br label %690

582:                                              ; preds = %359
  %583 = load i8*, i8** %34, align 8
  %584 = icmp eq i8* %583, null
  br i1 %584, label %585, label %588

585:                                              ; preds = %582
  %586 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %587 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %586, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.299, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %1391

588:                                              ; preds = %582
  store i8 1, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 48), align 4
  %589 = load i8*, i8** %34, align 8
  %590 = call i32 @atoi(i8* %589) #16
  store i32 %590, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 49), align 8
  br label %690

591:                                              ; preds = %359
  %592 = load i8*, i8** %34, align 8
  %593 = icmp eq i8* %592, null
  br i1 %593, label %594, label %597

594:                                              ; preds = %591
  %595 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %596 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %595, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.300, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %1391

597:                                              ; preds = %591
  %598 = load i8*, i8** %34, align 8
  %599 = call i32 @atoi(i8* %598) #16
  store i32 %599, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 50), align 4
  br label %690

600:                                              ; preds = %359
  %601 = load i8*, i8** %34, align 8
  %602 = icmp eq i8* %601, null
  br i1 %602, label %603, label %606

603:                                              ; preds = %600
  %604 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %605 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %604, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.301, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %1391

606:                                              ; preds = %600
  %607 = load i8*, i8** %34, align 8
  %608 = call zeroext i1 @safe_strtoul(i8* %607, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 51))
  br i1 %608, label %612, label %609

609:                                              ; preds = %606
  %610 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %611 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %610, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.302, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %1391

612:                                              ; preds = %606
  %613 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 51), align 8
  %614 = mul i32 %613, 1024
  store i32 %614, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 51), align 8
  br label %690

615:                                              ; preds = %359
  %616 = load i8*, i8** %34, align 8
  %617 = icmp eq i8* %616, null
  br i1 %617, label %618, label %621

618:                                              ; preds = %615
  %619 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %620 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %619, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.303, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %1391

621:                                              ; preds = %615
  %622 = load i8*, i8** %34, align 8
  %623 = call zeroext i1 @safe_strtoul(i8* %622, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 52))
  br i1 %623, label %627, label %624

624:                                              ; preds = %621
  %625 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %626 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %625, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.304, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %1391

627:                                              ; preds = %621
  %628 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 52), align 4
  %629 = mul i32 %628, 1024
  store i32 %629, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 52), align 4
  br label %630

630:                                              ; preds = %359, %627
  %631 = load i8*, i8** %34, align 8
  %632 = call noalias i8* @strdup(i8* %631) #14
  store i8* %632, i8** %29, align 8
  br label %690

633:                                              ; preds = %359
  %634 = load i8*, i8** %34, align 8
  %635 = icmp eq i8* %634, null
  br i1 %635, label %636, label %639

636:                                              ; preds = %633
  %637 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %638 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %637, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.305, i64 0, i64 0))
  br label %639

639:                                              ; preds = %636, %633
  %640 = load i8*, i8** %34, align 8
  %641 = call zeroext i1 @safe_strtol(i8* %640, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 23))
  br i1 %641, label %645, label %642

642:                                              ; preds = %639
  %643 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %644 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %643, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.306, i64 0, i64 0))
  br label %645

645:                                              ; preds = %642, %639
  store i8 1, i8* %30, align 1
  br label %690

646:                                              ; preds = %359
  call void @item_stats_sizes_init()
  br label %690

647:                                              ; preds = %359
  br label %690

648:                                              ; preds = %359
  br label %690

649:                                              ; preds = %359
  %650 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 24), align 4
  store i32 %650, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 23), align 8
  br label %690

651:                                              ; preds = %359
  store i8 0, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 31), align 1
  br label %690

652:                                              ; preds = %359
  store i32 0, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 32), align 4
  br label %690

653:                                              ; preds = %359
  store i8 0, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 27), align 1
  br label %690

654:                                              ; preds = %359
  store i8 0, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 28), align 2
  store i8 0, i8* %23, align 1
  br label %690

655:                                              ; preds = %359
  store i8 0, i8* %22, align 1
  store i8 0, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 30), align 8
  br label %690

656:                                              ; preds = %359
  store i8 1, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 57), align 1
  br label %690

657:                                              ; preds = %359
  br label %690

658:                                              ; preds = %359
  %659 = load i8, i8* %30, align 1
  %660 = trunc i8 %659 to i1
  br i1 %660, label %663, label %661

661:                                              ; preds = %658
  %662 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 24), align 4
  store i32 %662, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 23), align 8
  br label %663

663:                                              ; preds = %661, %658
  store i8 0, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 31), align 1
  store i32 0, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 32), align 4
  store i8 0, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 27), align 1
  store i8 0, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 30), align 8
  store i32 0, i32* %25, align 4
  store i8 0, i8* %23, align 1
  store i8 0, i8* %22, align 1
  br label %690

664:                                              ; preds = %359
  store i8 0, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 54), align 4
  br label %690

665:                                              ; preds = %359
  store i8 1, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 54), align 4
  br label %690

666:                                              ; preds = %359
  %667 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %668 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %667, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.307, i64 0, i64 0))
  br label %690

669:                                              ; preds = %359
  %670 = load i8*, i8** %34, align 8
  %671 = icmp eq i8* %670, null
  br i1 %671, label %672, label %675

672:                                              ; preds = %669
  %673 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %674 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %673, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.308, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %1391

675:                                              ; preds = %669
  %676 = load i8*, i8** %34, align 8
  %677 = call zeroext i1 @safe_strtoul(i8* %676, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 53))
  br i1 %677, label %681, label %678

678:                                              ; preds = %675
  %679 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %680 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %679, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.309, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %1391

681:                                              ; preds = %675
  %682 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 53), align 8
  %683 = mul i32 %682, 1048576
  store i32 %683, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 53), align 8
  br label %690

684:                                              ; preds = %359
  %685 = load i8*, i8** %37, align 8
  %686 = call i32 @storage_read_config(i8* %685, i8** %45)
  %687 = icmp ne i32 %686, 0
  br i1 %687, label %688, label %689

688:                                              ; preds = %684
  store i32 1, i32* %3, align 4
  br label %1391

689:                                              ; preds = %684
  br label %690

690:                                              ; preds = %689, %681, %666, %665, %664, %663, %657, %656, %655, %654, %653, %652, %651, %649, %648, %647, %646, %645, %630, %612, %597, %588, %581, %566, %551, %533, %515, %513, %500, %482, %481, %454, %439, %424, %406, %394, %390, %389, %388, %364
  %691 = load i8*, i8** %44, align 8
  %692 = icmp ne i8* %691, null
  br i1 %692, label %693, label %695

693:                                              ; preds = %690
  %694 = load i8*, i8** %44, align 8
  call void @free(i8* %694) #14
  br label %695

695:                                              ; preds = %693, %690
  br label %354, !llvm.loop !28

696:                                              ; preds = %354
  %697 = load i8*, i8** %33, align 8
  call void @free(i8* %697) #14
  br label %702

698:                                              ; preds = %93
  %699 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %700 = load i32, i32* %6, align 4
  %701 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %699, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.310, i64 0, i64 0), i32 %700)
  store i32 1, i32* %3, align 4
  br label %1391

702:                                              ; preds = %696, %350, %339, %338, %337, %336, %331, %272, %248, %247, %246, %235, %223, %208, %195, %185, %183, %181, %180, %171, %170, %169, %143, %132, %131, %126, %117, %111, %109, %106, %103, %99, %95
  br label %86, !llvm.loop !29

703:                                              ; preds = %86
  %704 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 72), align 4
  %705 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 14), align 4
  %706 = icmp sgt i32 %704, %705
  br i1 %706, label %707, label %712

707:                                              ; preds = %703
  %708 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %709 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 72), align 4
  %710 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 14), align 4
  %711 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %708, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.311, i64 0, i64 0), i32 %709, i32 %710)
  call void @exit(i32 64) #17
  unreachable

712:                                              ; preds = %703
  %713 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 22), align 4
  %714 = icmp slt i32 %713, 1024
  br i1 %714, label %715, label %718

715:                                              ; preds = %712
  %716 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %717 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %716, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.312, i64 0, i64 0))
  call void @exit(i32 64) #17
  unreachable

718:                                              ; preds = %712
  %719 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 22), align 4
  %720 = sext i32 %719 to i64
  %721 = load i64, i64* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 0), align 8
  %722 = udiv i64 %721, 2
  %723 = icmp ugt i64 %720, %722
  br i1 %723, label %724, label %727

724:                                              ; preds = %718
  %725 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %726 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %725, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.313, i64 0, i64 0))
  call void @exit(i32 64) #17
  unreachable

727:                                              ; preds = %718
  %728 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 22), align 4
  %729 = icmp sgt i32 %728, 1073741824
  br i1 %729, label %730, label %733

730:                                              ; preds = %727
  %731 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %732 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %731, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.314, i64 0, i64 0))
  call void @exit(i32 64) #17
  unreachable

733:                                              ; preds = %727
  %734 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 22), align 4
  %735 = icmp sgt i32 %734, 1048576
  br i1 %735, label %736, label %743

736:                                              ; preds = %733
  %737 = load i8, i8* %30, align 1
  %738 = trunc i8 %737 to i1
  br i1 %738, label %742, label %739

739:                                              ; preds = %736
  %740 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 24), align 4
  %741 = sdiv i32 %740, 2
  store i32 %741, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 23), align 8
  br label %742

742:                                              ; preds = %739, %736
  br label %743

743:                                              ; preds = %742, %733
  %744 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 23), align 8
  %745 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 22), align 4
  %746 = icmp sgt i32 %744, %745
  br i1 %746, label %747, label %752

747:                                              ; preds = %743
  %748 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %749 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 23), align 8
  %750 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 22), align 4
  %751 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %748, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.315, i64 0, i64 0), i32 %749, i32 %750)
  call void @exit(i32 64) #17
  unreachable

752:                                              ; preds = %743
  %753 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 22), align 4
  %754 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 23), align 8
  %755 = srem i32 %753, %754
  %756 = icmp ne i32 %755, 0
  br i1 %756, label %757, label %762

757:                                              ; preds = %752
  %758 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %759 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 22), align 4
  %760 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 23), align 8
  %761 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %758, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.316, i64 0, i64 0), i32 %759, i32 %760)
  call void @exit(i32 64) #17
  unreachable

762:                                              ; preds = %752
  %763 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 24), align 4
  %764 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 23), align 8
  %765 = srem i32 %763, %764
  %766 = icmp ne i32 %765, 0
  br i1 %766, label %767, label %772

767:                                              ; preds = %762
  %768 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %769 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 23), align 8
  %770 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 24), align 4
  %771 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %768, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.317, i64 0, i64 0), i32 %769, i32 %770)
  call void @exit(i32 64) #17
  unreachable

772:                                              ; preds = %762
  %773 = load i8*, i8** %37, align 8
  %774 = call i32 @storage_check_config(i8* %773)
  switch i32 %774, label %777 [
    i32 0, label %775
    i32 1, label %776
  ]

775:                                              ; preds = %772
  store i8 1, i8* %38, align 1
  br label %777

776:                                              ; preds = %772
  call void @exit(i32 64) #17
  unreachable

777:                                              ; preds = %772, %775
  %778 = load i8*, i8** %29, align 8
  %779 = icmp ne i8* %778, null
  br i1 %779, label %780, label %801

780:                                              ; preds = %777
  %781 = load i8*, i8** %29, align 8
  %782 = call noalias i8* @strdup(i8* %781) #14
  store i8* %782, i8** %46, align 8
  %783 = load i8*, i8** %29, align 8
  %784 = getelementptr inbounds [64 x i32], [64 x i32]* %27, i64 0, i64 0
  %785 = call zeroext i1 @_parse_slab_sizes(i8* %783, i32* %784)
  br i1 %785, label %786, label %799

786:                                              ; preds = %780
  store i8 1, i8* %28, align 1
  %787 = load %struct._mc_meta_data*, %struct._mc_meta_data** %31, align 8
  %788 = getelementptr inbounds %struct._mc_meta_data, %struct._mc_meta_data* %787, i32 0, i32 2
  %789 = load i8*, i8** %788, align 8
  %790 = icmp ne i8* %789, null
  br i1 %790, label %791, label %795

791:                                              ; preds = %786
  %792 = load %struct._mc_meta_data*, %struct._mc_meta_data** %31, align 8
  %793 = getelementptr inbounds %struct._mc_meta_data, %struct._mc_meta_data* %792, i32 0, i32 2
  %794 = load i8*, i8** %793, align 8
  call void @free(i8* %794) #14
  br label %795

795:                                              ; preds = %791, %786
  %796 = load i8*, i8** %46, align 8
  %797 = load %struct._mc_meta_data*, %struct._mc_meta_data** %31, align 8
  %798 = getelementptr inbounds %struct._mc_meta_data, %struct._mc_meta_data* %797, i32 0, i32 2
  store i8* %796, i8** %798, align 8
  br label %800

799:                                              ; preds = %780
  call void @exit(i32 64) #17
  unreachable

800:                                              ; preds = %795
  br label %810

801:                                              ; preds = %777
  %802 = load %struct._mc_meta_data*, %struct._mc_meta_data** %31, align 8
  %803 = getelementptr inbounds %struct._mc_meta_data, %struct._mc_meta_data* %802, i32 0, i32 2
  %804 = load i8*, i8** %803, align 8
  %805 = icmp ne i8* %804, null
  br i1 %805, label %809, label %806

806:                                              ; preds = %801
  %807 = load %struct._mc_meta_data*, %struct._mc_meta_data** %31, align 8
  %808 = getelementptr inbounds %struct._mc_meta_data, %struct._mc_meta_data* %807, i32 0, i32 2
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.318, i64 0, i64 0), i8** %808, align 8
  br label %809

809:                                              ; preds = %806, %801
  br label %810

810:                                              ; preds = %809, %800
  %811 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 43), align 8
  %812 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 44), align 4
  %813 = add nsw i32 %811, %812
  %814 = icmp sgt i32 %813, 80
  br i1 %814, label %815, label %818

815:                                              ; preds = %810
  %816 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %817 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %816, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.319, i64 0, i64 0))
  call void @exit(i32 64) #17
  unreachable

818:                                              ; preds = %810
  %819 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 48), align 4
  %820 = trunc i8 %819 to i1
  br i1 %820, label %821, label %827

821:                                              ; preds = %818
  %822 = load i8, i8* %22, align 1
  %823 = trunc i8 %822 to i1
  br i1 %823, label %827, label %824

824:                                              ; preds = %821
  %825 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %826 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %825, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.320, i64 0, i64 0))
  call void @exit(i32 64) #17
  unreachable

827:                                              ; preds = %821, %818
  %828 = load i32, i32* %25, align 4
  %829 = call i32 @hash_init(i32 %828)
  %830 = icmp ne i32 %829, 0
  br i1 %830, label %831, label %834

831:                                              ; preds = %827
  %832 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %833 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %832, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.321, i64 0, i64 0))
  call void @exit(i32 64) #17
  unreachable

834:                                              ; preds = %827
  %835 = load i8*, i8** getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 4), align 8
  %836 = icmp ne i8* %835, null
  br i1 %836, label %837, label %842

837:                                              ; preds = %834
  %838 = load i8*, i8** getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 4), align 8
  %839 = call i8* @strchr(i8* %838, i32 44) #16
  %840 = icmp ne i8* %839, null
  br i1 %840, label %841, label %842

841:                                              ; preds = %837
  store i32 1, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 15), align 8
  br label %844

842:                                              ; preds = %837, %834
  %843 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 14), align 4
  store i32 %843, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 15), align 8
  br label %844

844:                                              ; preds = %842, %841
  %845 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 26), align 4
  %846 = trunc i8 %845 to i1
  br i1 %846, label %847, label %865

847:                                              ; preds = %844
  %848 = load i8, i8* %19, align 1
  %849 = trunc i8 %848 to i1
  br i1 %849, label %851, label %850

850:                                              ; preds = %847
  store i32 4, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 20), align 4
  br label %858

851:                                              ; preds = %847
  %852 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 20), align 4
  %853 = icmp ne i32 %852, 4
  br i1 %853, label %854, label %857

854:                                              ; preds = %851
  %855 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %856 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %855, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.322, i64 0, i64 0))
  call void @exit(i32 64) #17
  unreachable

857:                                              ; preds = %851
  br label %858

858:                                              ; preds = %857, %850
  %859 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 3), align 8
  %860 = icmp ne i32 %859, 0
  br i1 %860, label %861, label %864

861:                                              ; preds = %858
  %862 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %863 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %862, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.323, i64 0, i64 0))
  call void @exit(i32 64) #17
  unreachable

864:                                              ; preds = %858
  br label %865

865:                                              ; preds = %864, %844
  %866 = load i8*, i8** getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 10), align 8
  %867 = icmp ne i8* %866, null
  br i1 %867, label %868, label %880

868:                                              ; preds = %865
  %869 = load i8, i8* %19, align 1
  %870 = trunc i8 %869 to i1
  br i1 %870, label %872, label %871

871:                                              ; preds = %868
  store i32 3, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 20), align 4
  br label %879

872:                                              ; preds = %868
  %873 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 20), align 4
  %874 = icmp ne i32 %873, 3
  br i1 %874, label %875, label %878

875:                                              ; preds = %872
  %876 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %877 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %876, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.324, i64 0, i64 0))
  call void @exit(i32 64) #17
  unreachable

878:                                              ; preds = %872
  br label %879

879:                                              ; preds = %878, %871
  br label %880

880:                                              ; preds = %879, %865
  %881 = load i8, i8* %21, align 1
  %882 = trunc i8 %881 to i1
  br i1 %882, label %883, label %891

883:                                              ; preds = %880
  %884 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 3), align 8
  %885 = icmp ne i32 %884, 0
  br i1 %885, label %886, label %891

886:                                              ; preds = %883
  %887 = load i8, i8* %20, align 1
  %888 = trunc i8 %887 to i1
  br i1 %888, label %891, label %889

889:                                              ; preds = %886
  %890 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 3), align 8
  store i32 %890, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 2), align 4
  br label %891

891:                                              ; preds = %889, %886, %883, %880
  %892 = load i32, i32* %10, align 4
  %893 = icmp ne i32 %892, 0
  br i1 %893, label %894, label %920

894:                                              ; preds = %891
  %895 = call i32 @getrlimit(i32 4, %struct.timeval* %14) #14
  %896 = icmp eq i32 %895, 0
  br i1 %896, label %897, label %909

897:                                              ; preds = %894
  %898 = getelementptr inbounds %struct.timeval, %struct.timeval* %47, i32 0, i32 1
  store i64 -1, i64* %898, align 8
  %899 = getelementptr inbounds %struct.timeval, %struct.timeval* %47, i32 0, i32 0
  store i64 -1, i64* %899, align 8
  %900 = call i32 @setrlimit(i32 4, %struct.timeval* %47) #14
  %901 = icmp ne i32 %900, 0
  br i1 %901, label %902, label %908

902:                                              ; preds = %897
  %903 = getelementptr inbounds %struct.timeval, %struct.timeval* %14, i32 0, i32 1
  %904 = load i64, i64* %903, align 8
  %905 = getelementptr inbounds %struct.timeval, %struct.timeval* %47, i32 0, i32 1
  store i64 %904, i64* %905, align 8
  %906 = getelementptr inbounds %struct.timeval, %struct.timeval* %47, i32 0, i32 0
  store i64 %904, i64* %906, align 8
  %907 = call i32 @setrlimit(i32 4, %struct.timeval* %47) #14
  br label %908

908:                                              ; preds = %902, %897
  br label %909

909:                                              ; preds = %908, %894
  %910 = call i32 @getrlimit(i32 4, %struct.timeval* %14) #14
  %911 = icmp ne i32 %910, 0
  br i1 %911, label %916, label %912

912:                                              ; preds = %909
  %913 = getelementptr inbounds %struct.timeval, %struct.timeval* %14, i32 0, i32 0
  %914 = load i64, i64* %913, align 8
  %915 = icmp eq i64 %914, 0
  br i1 %915, label %916, label %919

916:                                              ; preds = %912, %909
  %917 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %918 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %917, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.325, i64 0, i64 0))
  call void @exit(i32 71) #17
  unreachable

919:                                              ; preds = %912
  br label %920

920:                                              ; preds = %919, %891
  %921 = call i32 @getrlimit(i32 7, %struct.timeval* %14) #14
  %922 = icmp ne i32 %921, 0
  br i1 %922, label %923, label %926

923:                                              ; preds = %920
  %924 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %925 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %924, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.326, i64 0, i64 0))
  call void @exit(i32 71) #17
  unreachable

926:                                              ; preds = %920
  %927 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 1), align 8
  %928 = sext i32 %927 to i64
  %929 = getelementptr inbounds %struct.timeval, %struct.timeval* %14, i32 0, i32 0
  store i64 %928, i64* %929, align 8
  %930 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 1), align 8
  %931 = sext i32 %930 to i64
  %932 = getelementptr inbounds %struct.timeval, %struct.timeval* %14, i32 0, i32 1
  store i64 %931, i64* %932, align 8
  %933 = call i32 @setrlimit(i32 7, %struct.timeval* %14) #14
  %934 = icmp ne i32 %933, 0
  br i1 %934, label %935, label %938

935:                                              ; preds = %926
  %936 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %937 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %936, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.327, i64 0, i64 0))
  call void @exit(i32 71) #17
  unreachable

938:                                              ; preds = %926
  br label %939

939:                                              ; preds = %938
  %940 = call i32 @getuid() #14
  %941 = icmp eq i32 %940, 0
  br i1 %941, label %945, label %942

942:                                              ; preds = %939
  %943 = call i32 @geteuid() #14
  %944 = icmp eq i32 %943, 0
  br i1 %944, label %945, label %998

945:                                              ; preds = %942, %939
  %946 = load i8*, i8** %11, align 8
  %947 = icmp eq i8* %946, null
  br i1 %947, label %953, label %948

948:                                              ; preds = %945
  %949 = load i8*, i8** %11, align 8
  %950 = load i8, i8* %949, align 1
  %951 = sext i8 %950 to i32
  %952 = icmp eq i32 %951, 0
  br i1 %952, label %953, label %956

953:                                              ; preds = %948, %945
  %954 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %955 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %954, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.328, i64 0, i64 0))
  call void @exit(i32 64) #17
  unreachable

956:                                              ; preds = %948
  %957 = load i8*, i8** %11, align 8
  %958 = call %struct.passwd* @getpwnam(i8* %957)
  store %struct.passwd* %958, %struct.passwd** %13, align 8
  %959 = icmp eq %struct.passwd* %958, null
  br i1 %959, label %960, label %964

960:                                              ; preds = %956
  %961 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %962 = load i8*, i8** %11, align 8
  %963 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %961, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.329, i64 0, i64 0), i8* %962)
  call void @exit(i32 67) #17
  unreachable

964:                                              ; preds = %956
  %965 = call i32 @setgroups(i64 0, i32* null) #14
  %966 = icmp slt i32 %965, 0
  br i1 %966, label %967, label %981

967:                                              ; preds = %964
  %968 = call i32* @__errno_location() #15
  %969 = load i32, i32* %968, align 4
  %970 = icmp ne i32 %969, 1
  %971 = zext i1 %970 to i8
  store i8 %971, i8* %48, align 1
  %972 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %973 = call i32* @__errno_location() #15
  %974 = load i32, i32* %973, align 4
  %975 = call i8* @strerror(i32 %974) #14
  %976 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %972, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.330, i64 0, i64 0), i8* %975)
  %977 = load i8, i8* %48, align 1
  %978 = trunc i8 %977 to i1
  br i1 %978, label %979, label %980

979:                                              ; preds = %967
  call void @exit(i32 71) #17
  unreachable

980:                                              ; preds = %967
  br label %981

981:                                              ; preds = %980, %964
  %982 = load %struct.passwd*, %struct.passwd** %13, align 8
  %983 = getelementptr inbounds %struct.passwd, %struct.passwd* %982, i32 0, i32 3
  %984 = load i32, i32* %983, align 4
  %985 = call i32 @setgid(i32 %984) #14
  %986 = icmp slt i32 %985, 0
  br i1 %986, label %993, label %987

987:                                              ; preds = %981
  %988 = load %struct.passwd*, %struct.passwd** %13, align 8
  %989 = getelementptr inbounds %struct.passwd, %struct.passwd* %988, i32 0, i32 2
  %990 = load i32, i32* %989, align 8
  %991 = call i32 @setuid(i32 %990) #14
  %992 = icmp slt i32 %991, 0
  br i1 %992, label %993, label %997

993:                                              ; preds = %987, %981
  %994 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %995 = load i8*, i8** %11, align 8
  %996 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %994, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.331, i64 0, i64 0), i8* %995)
  call void @exit(i32 71) #17
  unreachable

997:                                              ; preds = %987
  br label %998

998:                                              ; preds = %997, %942
  %999 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 26), align 4
  %1000 = trunc i8 %999 to i1
  br i1 %1000, label %1001, label %1002

1001:                                             ; preds = %998
  br label %1002

1002:                                             ; preds = %1001, %998
  %1003 = load i8, i8* %8, align 1
  %1004 = trunc i8 %1003 to i1
  br i1 %1004, label %1005, label %1018

1005:                                             ; preds = %1002
  %1006 = call void (i32)* @signal(i32 1, void (i32)* inttoptr (i64 1 to void (i32)*)) #14
  %1007 = icmp eq void (i32)* %1006, inttoptr (i64 -1 to void (i32)*)
  br i1 %1007, label %1008, label %1009

1008:                                             ; preds = %1005
  call void @perror(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.332, i64 0, i64 0))
  br label %1009

1009:                                             ; preds = %1008, %1005
  %1010 = load i32, i32* %10, align 4
  %1011 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %1012 = call i32 @daemonize(i32 %1010, i32 %1011)
  %1013 = icmp eq i32 %1012, -1
  br i1 %1013, label %1014, label %1017

1014:                                             ; preds = %1009
  %1015 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %1016 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1015, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.333, i64 0, i64 0))
  call void @exit(i32 1) #17
  unreachable

1017:                                             ; preds = %1009
  br label %1018

1018:                                             ; preds = %1017, %1002
  %1019 = load i8, i8* %7, align 1
  %1020 = trunc i8 %1019 to i1
  br i1 %1020, label %1021, label %1032

1021:                                             ; preds = %1018
  %1022 = call i32 @mlockall(i32 3) #14
  store i32 %1022, i32* %49, align 4
  %1023 = load i32, i32* %49, align 4
  %1024 = icmp ne i32 %1023, 0
  br i1 %1024, label %1025, label %1031

1025:                                             ; preds = %1021
  %1026 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %1027 = call i32* @__errno_location() #15
  %1028 = load i32, i32* %1027, align 4
  %1029 = call i8* @strerror(i32 %1028) #14
  %1030 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1026, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.334, i64 0, i64 0), i8* %1029)
  br label %1031

1031:                                             ; preds = %1025, %1021
  br label %1032

1032:                                             ; preds = %1031, %1018
  %1033 = call %struct.event_config* @event_config_new()
  store %struct.event_config* %1033, %struct.event_config** %50, align 8
  %1034 = load %struct.event_config*, %struct.event_config** %50, align 8
  %1035 = call i32 @event_config_set_flag(%struct.event_config* %1034, i32 1)
  %1036 = load %struct.event_config*, %struct.event_config** %50, align 8
  %1037 = call %struct.event_base* @event_base_new_with_config(%struct.event_config* %1036)
  store %struct.event_base* %1037, %struct.event_base** @main_base, align 8
  %1038 = load %struct.event_config*, %struct.event_config** %50, align 8
  call void @event_config_free(%struct.event_config* %1038)
  %1039 = load i8*, i8** getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 10), align 8
  %1040 = icmp ne i8* %1039, null
  br i1 %1040, label %1041, label %1070

1041:                                             ; preds = %1032
  %1042 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 3), align 8
  %1043 = icmp ne i32 %1042, 0
  br i1 %1043, label %1044, label %1047

1044:                                             ; preds = %1041
  %1045 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %1046 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1045, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.335, i64 0, i64 0))
  call void @exit(i32 64) #17
  unreachable

1047:                                             ; preds = %1041
  %1048 = load i8*, i8** getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 10), align 8
  %1049 = call i32 @authfile_load(i8* %1048)
  switch i32 %1049, label %1069 [
    i32 2, label %1050
    i32 3, label %1055
    i32 1, label %1060
    i32 4, label %1064
    i32 0, label %1068
  ]

1050:                                             ; preds = %1047
  %1051 = load i8*, i8** getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 10), align 8
  %1052 = call i32* @__errno_location() #15
  %1053 = load i32, i32* %1052, align 4
  %1054 = call i8* @strerror(i32 %1053) #14
  call void (i8*, ...) @vperror(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.336, i64 0, i64 0), i8* %1051, i8* %1054)
  call void @exit(i32 1) #17
  unreachable

1055:                                             ; preds = %1047
  %1056 = load i8*, i8** getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 10), align 8
  %1057 = call i32* @__errno_location() #15
  %1058 = load i32, i32* %1057, align 4
  %1059 = call i8* @strerror(i32 %1058) #14
  call void (i8*, ...) @vperror(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.337, i64 0, i64 0), i8* %1056, i8* %1059)
  call void @exit(i32 1) #17
  unreachable

1060:                                             ; preds = %1047
  %1061 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %1062 = load i8*, i8** getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 10), align 8
  %1063 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1061, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.338, i64 0, i64 0), i8* %1062)
  call void @exit(i32 1) #17
  unreachable

1064:                                             ; preds = %1047
  %1065 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %1066 = load i8*, i8** getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 10), align 8
  %1067 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1065, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.339, i64 0, i64 0), i8* %1066)
  call void @exit(i32 1) #17
  unreachable

1068:                                             ; preds = %1047
  br label %1069

1069:                                             ; preds = %1047, %1068
  br label %1070

1070:                                             ; preds = %1069, %1032
  call void @stats_init()
  call void @logger_init()
  call void @conn_init()
  store i8 0, i8* %51, align 1
  store i8* null, i8** %52, align 8
  store i8 0, i8* %53, align 1
  %1071 = load i8*, i8** getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 73), align 8
  %1072 = icmp ne i8* %1071, null
  br i1 %1072, label %1073, label %1083

1073:                                             ; preds = %1070
  store i8 1, i8* %9, align 1
  store i8 1, i8* %53, align 1
  %1074 = load %struct._mc_meta_data*, %struct._mc_meta_data** %31, align 8
  %1075 = bitcast %struct._mc_meta_data* %1074 to i8*
  call void @restart_register(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.340, i64 0, i64 0), i32 (i8*, i8*, i8*)* @_mc_meta_load_cb, i32 (i8*, i8*, i8*)* @_mc_meta_save_cb, i8* %1075)
  %1076 = load i64, i64* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 0), align 8
  %1077 = load i8*, i8** getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 73), align 8
  %1078 = call zeroext i1 @restart_mmap_open(i64 %1076, i8* %1077, i8** %52)
  %1079 = zext i1 %1078 to i8
  store i8 %1079, i8* %51, align 1
  %1080 = load i8*, i8** %52, align 8
  %1081 = load %struct._mc_meta_data*, %struct._mc_meta_data** %31, align 8
  %1082 = getelementptr inbounds %struct._mc_meta_data, %struct._mc_meta_data* %1081, i32 0, i32 0
  store i8* %1080, i8** %1082, align 8
  br label %1083

1083:                                             ; preds = %1073, %1070
  %1084 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 35), align 4
  call void @assoc_init(i32 %1084)
  %1085 = load i8, i8* %38, align 1
  %1086 = trunc i8 %1085 to i1
  br i1 %1086, label %1087, label %1093

1087:                                             ; preds = %1083
  %1088 = load i8, i8* %51, align 1
  %1089 = trunc i8 %1088 to i1
  br i1 %1089, label %1090, label %1093

1090:                                             ; preds = %1087
  %1091 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %1092 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1091, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.341, i64 0, i64 0))
  store i8 0, i8* %51, align 1
  br label %1093

1093:                                             ; preds = %1090, %1087, %1083
  %1094 = load i64, i64* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 0), align 8
  %1095 = load double, double* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 12), align 8
  %1096 = load i8, i8* %9, align 1
  %1097 = trunc i8 %1096 to i1
  %1098 = load i8, i8* %28, align 1
  %1099 = trunc i8 %1098 to i1
  br i1 %1099, label %1100, label %1102

1100:                                             ; preds = %1093
  %1101 = getelementptr inbounds [64 x i32], [64 x i32]* %27, i64 0, i64 0
  br label %1103

1102:                                             ; preds = %1093
  br label %1103

1103:                                             ; preds = %1102, %1100
  %1104 = phi i32* [ %1101, %1100 ], [ null, %1102 ]
  %1105 = load i8*, i8** %52, align 8
  %1106 = load i8, i8* %51, align 1
  %1107 = trunc i8 %1106 to i1
  call void @slabs_init(i64 %1094, double %1095, i1 zeroext %1097, i32* %1104, i8* %1105, i1 zeroext %1107)
  %1108 = load i8, i8* %38, align 1
  %1109 = trunc i8 %1108 to i1
  br i1 %1109, label %1110, label %1118

1110:                                             ; preds = %1103
  %1111 = load i8*, i8** %37, align 8
  %1112 = call i8* @storage_init(i8* %1111)
  store i8* %1112, i8** %36, align 8
  %1113 = load i8*, i8** %36, align 8
  %1114 = icmp eq i8* %1113, null
  br i1 %1114, label %1115, label %1116

1115:                                             ; preds = %1110
  call void @exit(i32 1) #17
  unreachable

1116:                                             ; preds = %1110
  %1117 = load i8*, i8** %36, align 8
  store i8* %1117, i8** @ext_storage, align 8
  store i8 1, i8* %53, align 1
  br label %1118

1118:                                             ; preds = %1116, %1103
  %1119 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 54), align 4
  %1120 = trunc i8 %1119 to i1
  br i1 %1120, label %1121, label %1122

1121:                                             ; preds = %1118
  br label %1122

1122:                                             ; preds = %1121, %1118
  %1123 = load i8, i8* %53, align 1
  %1124 = trunc i8 %1123 to i1
  br i1 %1124, label %1125, label %1126

1125:                                             ; preds = %1122
  call void @slabs_prefill_global()
  br label %1126

1126:                                             ; preds = %1125, %1122
  %1127 = load i8*, i8** getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 73), align 8
  %1128 = icmp ne i8* %1127, null
  br i1 %1128, label %1129, label %1142

1129:                                             ; preds = %1126
  %1130 = load i8, i8* %51, align 1
  %1131 = trunc i8 %1130 to i1
  br i1 %1131, label %1132, label %1142

1132:                                             ; preds = %1129
  %1133 = load %struct._mc_meta_data*, %struct._mc_meta_data** %31, align 8
  %1134 = getelementptr inbounds %struct._mc_meta_data, %struct._mc_meta_data* %1133, i32 0, i32 1
  %1135 = load i64, i64* %1134, align 8
  store i64 %1135, i64* %54, align 8
  %1136 = load %struct._mc_meta_data*, %struct._mc_meta_data** %31, align 8
  %1137 = getelementptr inbounds %struct._mc_meta_data, %struct._mc_meta_data* %1136, i32 0, i32 4
  %1138 = load i64, i64* %1137, align 8
  store i64 %1138, i64* @process_started, align 8
  %1139 = load i64, i64* %54, align 8
  %1140 = inttoptr i64 %1139 to i8*
  %1141 = call i32 @restart_fixup(i8* %1140)
  br label %1142

1142:                                             ; preds = %1132, %1129, %1126
  %1143 = call void (i32)* @signal(i32 13, void (i32)* inttoptr (i64 1 to void (i32)*)) #14
  %1144 = icmp eq void (i32)* %1143, inttoptr (i64 -1 to void (i32)*)
  br i1 %1144, label %1145, label %1146

1145:                                             ; preds = %1142
  call void @perror(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.342, i64 0, i64 0))
  call void @exit(i32 71) #17
  unreachable

1146:                                             ; preds = %1142
  %1147 = load i8*, i8** %36, align 8
  call void @slabs_set_storage(i8* %1147)
  %1148 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 14), align 4
  %1149 = load i8*, i8** %36, align 8
  call void @memcached_thread_init(i32 %1148, i8* %1149)
  %1150 = load i8*, i8** %36, align 8
  %1151 = call i32 @init_lru_crawler(i8* %1150)
  %1152 = load i8, i8* %24, align 1
  %1153 = trunc i8 %1152 to i1
  br i1 %1153, label %1154, label %1158

1154:                                             ; preds = %1146
  %1155 = call i32 @start_assoc_maintenance_thread()
  %1156 = icmp eq i32 %1155, -1
  br i1 %1156, label %1157, label %1158

1157:                                             ; preds = %1154
  call void @exit(i32 1) #17
  unreachable

1158:                                             ; preds = %1154, %1146
  %1159 = load i8, i8* %23, align 1
  %1160 = trunc i8 %1159 to i1
  br i1 %1160, label %1161, label %1167

1161:                                             ; preds = %1158
  %1162 = call i32 @start_item_crawler_thread()
  %1163 = icmp ne i32 %1162, 0
  br i1 %1163, label %1164, label %1167

1164:                                             ; preds = %1161
  %1165 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %1166 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1165, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.343, i64 0, i64 0))
  call void @exit(i32 1) #17
  unreachable

1167:                                             ; preds = %1161, %1158
  %1168 = load i8*, i8** %36, align 8
  %1169 = icmp ne i8* %1168, null
  br i1 %1169, label %1170, label %1177

1170:                                             ; preds = %1167
  %1171 = load i8*, i8** %36, align 8
  %1172 = call i32 @start_storage_compact_thread(i8* %1171)
  %1173 = icmp ne i32 %1172, 0
  br i1 %1173, label %1174, label %1177

1174:                                             ; preds = %1170
  %1175 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %1176 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1175, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.344, i64 0, i64 0))
  call void @exit(i32 1) #17
  unreachable

1177:                                             ; preds = %1170, %1167
  %1178 = load i8*, i8** %36, align 8
  %1179 = icmp ne i8* %1178, null
  br i1 %1179, label %1180, label %1187

1180:                                             ; preds = %1177
  %1181 = load i8*, i8** %36, align 8
  %1182 = call i32 @start_storage_write_thread(i8* %1181)
  %1183 = icmp ne i32 %1182, 0
  br i1 %1183, label %1184, label %1187

1184:                                             ; preds = %1180
  %1185 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %1186 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1185, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.345, i64 0, i64 0))
  call void @exit(i32 1) #17
  unreachable

1187:                                             ; preds = %1180, %1177
  %1188 = load i8, i8* %22, align 1
  %1189 = trunc i8 %1188 to i1
  br i1 %1189, label %1190, label %1199

1190:                                             ; preds = %1187
  %1191 = load i8*, i8** %36, align 8
  %1192 = call i32 @start_lru_maintainer_thread(i8* %1191)
  %1193 = icmp ne i32 %1192, 0
  br i1 %1193, label %1194, label %1199

1194:                                             ; preds = %1190
  %1195 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %1196 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1195, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.346, i64 0, i64 0))
  %1197 = load %struct._mc_meta_data*, %struct._mc_meta_data** %31, align 8
  %1198 = bitcast %struct._mc_meta_data* %1197 to i8*
  call void @free(i8* %1198) #14
  store i32 1, i32* %3, align 4
  br label %1391

1199:                                             ; preds = %1190, %1187
  %1200 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 31), align 1
  %1201 = trunc i8 %1200 to i1
  br i1 %1201, label %1202, label %1206

1202:                                             ; preds = %1199
  %1203 = call i32 @start_slab_maintenance_thread()
  %1204 = icmp eq i32 %1203, -1
  br i1 %1204, label %1205, label %1206

1205:                                             ; preds = %1202
  call void @exit(i32 1) #17
  unreachable

1206:                                             ; preds = %1202, %1199
  %1207 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 50), align 4
  %1208 = icmp ne i32 %1207, 0
  br i1 %1208, label %1209, label %1213

1209:                                             ; preds = %1206
  %1210 = call i32 @start_conn_timeout_thread()
  %1211 = icmp eq i32 %1210, -1
  br i1 %1211, label %1212, label %1213

1212:                                             ; preds = %1209
  call void @exit(i32 1) #17
  unreachable

1213:                                             ; preds = %1209, %1206
  %1214 = call i32 @clock_gettime(i32 1, %struct.timeval* %55) #14
  %1215 = icmp eq i32 %1214, 0
  br i1 %1215, label %1216, label %1236

1216:                                             ; preds = %1213
  store i8 1, i8* @monotonic, align 1
  %1217 = getelementptr inbounds %struct.timeval, %struct.timeval* %55, i32 0, i32 0
  %1218 = load i64, i64* %1217, align 8
  store i64 %1218, i64* @monotonic_start, align 8
  %1219 = load i8, i8* %51, align 1
  %1220 = trunc i8 %1219 to i1
  br i1 %1220, label %1221, label %1232

1221:                                             ; preds = %1216
  %1222 = load %struct._mc_meta_data*, %struct._mc_meta_data** %31, align 8
  %1223 = getelementptr inbounds %struct._mc_meta_data, %struct._mc_meta_data* %1222, i32 0, i32 5
  %1224 = load i32, i32* %1223, align 8
  %1225 = zext i32 %1224 to i64
  %1226 = load %struct._mc_meta_data*, %struct._mc_meta_data** %31, align 8
  %1227 = getelementptr inbounds %struct._mc_meta_data, %struct._mc_meta_data* %1226, i32 0, i32 3
  %1228 = load i64, i64* %1227, align 8
  %1229 = add nsw i64 %1225, %1228
  %1230 = load i64, i64* @monotonic_start, align 8
  %1231 = sub nsw i64 %1230, %1229
  store i64 %1231, i64* @monotonic_start, align 8
  br label %1235

1232:                                             ; preds = %1216
  %1233 = load i64, i64* @monotonic_start, align 8
  %1234 = sub nsw i64 %1233, 62
  store i64 %1234, i64* @monotonic_start, align 8
  br label %1235

1235:                                             ; preds = %1232, %1221
  br label %1236

1236:                                             ; preds = %1235, %1213
  call void @clock_handler(i32 0, i16 signext 0, i8* null)
  %1237 = load i8*, i8** getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 9), align 8
  %1238 = icmp ne i8* %1237, null
  br i1 %1238, label %1239, label %1248

1239:                                             ; preds = %1236
  %1240 = call i32* @__errno_location() #15
  store i32 0, i32* %1240, align 4
  %1241 = load i8*, i8** getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 9), align 8
  %1242 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 11), align 8
  %1243 = call i32 @server_socket_unix(i8* %1241, i32 %1242)
  %1244 = icmp ne i32 %1243, 0
  br i1 %1244, label %1245, label %1247

1245:                                             ; preds = %1239
  %1246 = load i8*, i8** getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 9), align 8
  call void (i8*, ...) @vperror(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.347, i64 0, i64 0), i8* %1246)
  call void @exit(i32 71) #17
  unreachable

1247:                                             ; preds = %1239
  br label %1248

1248:                                             ; preds = %1247, %1236
  %1249 = load i8*, i8** getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 9), align 8
  %1250 = icmp eq i8* %1249, null
  br i1 %1250, label %1251, label %1327

1251:                                             ; preds = %1248
  %1252 = call i8* @getenv(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.348, i64 0, i64 0)) #14
  store i8* %1252, i8** %56, align 8
  store i8* null, i8** %57, align 8
  store %struct._IO_FILE* null, %struct._IO_FILE** %59, align 8
  %1253 = load i8*, i8** %56, align 8
  %1254 = icmp ne i8* %1253, null
  br i1 %1254, label %1255, label %1278

1255:                                             ; preds = %1251
  %1256 = load i8*, i8** %56, align 8
  %1257 = call i64 @strlen(i8* %1256) #16
  %1258 = add i64 %1257, 4
  %1259 = add i64 %1258, 1
  store i64 %1259, i64* %58, align 8
  %1260 = load i64, i64* %58, align 8
  %1261 = call noalias i8* @malloc(i64 %1260) #14
  store i8* %1261, i8** %57, align 8
  %1262 = load i8*, i8** %57, align 8
  %1263 = load i64, i64* %58, align 8
  %1264 = load i8*, i8** %56, align 8
  %1265 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %1262, i64 %1263, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.349, i64 0, i64 0), i8* %1264) #14
  %1266 = load i8*, i8** %57, align 8
  %1267 = call %struct._IO_FILE* @fopen(i8* %1266, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.350, i64 0, i64 0))
  store %struct._IO_FILE* %1267, %struct._IO_FILE** %59, align 8
  %1268 = load %struct._IO_FILE*, %struct._IO_FILE** %59, align 8
  %1269 = icmp eq %struct._IO_FILE* %1268, null
  br i1 %1269, label %1270, label %1277

1270:                                             ; preds = %1255
  %1271 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %1272 = load i8*, i8** %57, align 8
  %1273 = call i32* @__errno_location() #15
  %1274 = load i32, i32* %1273, align 4
  %1275 = call i8* @strerror(i32 %1274) #14
  %1276 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1271, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.351, i64 0, i64 0), i8* %1272, i8* %1275)
  br label %1277

1277:                                             ; preds = %1270, %1255
  br label %1278

1278:                                             ; preds = %1277, %1251
  %1279 = call i32* @__errno_location() #15
  store i32 0, i32* %1279, align 4
  %1280 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 2), align 4
  %1281 = icmp ne i32 %1280, 0
  br i1 %1281, label %1282, label %1295

1282:                                             ; preds = %1278
  %1283 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 2), align 4
  %1284 = load %struct._IO_FILE*, %struct._IO_FILE** %59, align 8
  %1285 = call i32 @server_sockets(i32 %1283, i32 1, %struct._IO_FILE* %1284)
  %1286 = icmp ne i32 %1285, 0
  br i1 %1286, label %1287, label %1295

1287:                                             ; preds = %1282
  %1288 = load i8*, i8** getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 4), align 8
  %1289 = icmp eq i8* %1288, null
  br i1 %1289, label %1290, label %1292

1290:                                             ; preds = %1287
  %1291 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 2), align 4
  call void (i8*, ...) @vperror(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.352, i64 0, i64 0), i32 %1291)
  br label %1294

1292:                                             ; preds = %1287
  %1293 = load i8*, i8** getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 4), align 8
  call void (i8*, ...) @vperror(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.353, i64 0, i64 0), i8* %1293)
  br label %1294

1294:                                             ; preds = %1292, %1290
  call void @exit(i32 71) #17
  unreachable

1295:                                             ; preds = %1282, %1278
  %1296 = call i32* @__errno_location() #15
  store i32 0, i32* %1296, align 4
  %1297 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 3), align 8
  %1298 = icmp ne i32 %1297, 0
  br i1 %1298, label %1299, label %1312

1299:                                             ; preds = %1295
  %1300 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 3), align 8
  %1301 = load %struct._IO_FILE*, %struct._IO_FILE** %59, align 8
  %1302 = call i32 @server_sockets(i32 %1300, i32 2, %struct._IO_FILE* %1301)
  %1303 = icmp ne i32 %1302, 0
  br i1 %1303, label %1304, label %1312

1304:                                             ; preds = %1299
  %1305 = load i8*, i8** getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 4), align 8
  %1306 = icmp eq i8* %1305, null
  br i1 %1306, label %1307, label %1309

1307:                                             ; preds = %1304
  %1308 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 3), align 8
  call void (i8*, ...) @vperror(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.354, i64 0, i64 0), i32 %1308)
  br label %1311

1309:                                             ; preds = %1304
  %1310 = load i8*, i8** getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 4), align 8
  call void (i8*, ...) @vperror(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.353, i64 0, i64 0), i8* %1310)
  br label %1311

1311:                                             ; preds = %1309, %1307
  call void @exit(i32 71) #17
  unreachable

1312:                                             ; preds = %1299, %1295
  %1313 = load %struct._IO_FILE*, %struct._IO_FILE** %59, align 8
  %1314 = icmp ne %struct._IO_FILE* %1313, null
  br i1 %1314, label %1315, label %1321

1315:                                             ; preds = %1312
  %1316 = load %struct._IO_FILE*, %struct._IO_FILE** %59, align 8
  %1317 = call i32 @fclose(%struct._IO_FILE* %1316)
  %1318 = load i8*, i8** %57, align 8
  %1319 = load i8*, i8** %56, align 8
  %1320 = call i32 @rename(i8* %1318, i8* %1319) #14
  br label %1321

1321:                                             ; preds = %1315, %1312
  %1322 = load i8*, i8** %57, align 8
  %1323 = icmp ne i8* %1322, null
  br i1 %1323, label %1324, label %1326

1324:                                             ; preds = %1321
  %1325 = load i8*, i8** %57, align 8
  call void @free(i8* %1325) #14
  br label %1326

1326:                                             ; preds = %1324, %1321
  br label %1327

1327:                                             ; preds = %1326, %1248
  %1328 = call i32 @usleep(i32 1000)
  %1329 = load i64, i64* getelementptr inbounds (%struct.stats_state, %struct.stats_state* @stats_state, i32 0, i32 2), align 8
  %1330 = load i32, i32* getelementptr inbounds (%struct.stats_state, %struct.stats_state* @stats_state, i32 0, i32 5), align 4
  %1331 = zext i32 %1330 to i64
  %1332 = add i64 %1329, %1331
  %1333 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 1), align 8
  %1334 = sub nsw i32 %1333, 1
  %1335 = sext i32 %1334 to i64
  %1336 = icmp uge i64 %1332, %1335
  br i1 %1336, label %1337, label %1340

1337:                                             ; preds = %1327
  %1338 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %1339 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1338, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.355, i64 0, i64 0))
  call void @exit(i32 1) #17
  unreachable

1340:                                             ; preds = %1327
  %1341 = load i8*, i8** %12, align 8
  %1342 = icmp ne i8* %1341, null
  br i1 %1342, label %1343, label %1345

1343:                                             ; preds = %1340
  %1344 = load i8*, i8** %12, align 8
  call void @save_pid(i8* %1344)
  br label %1345

1345:                                             ; preds = %1343, %1340
  %1346 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 54), align 4
  %1347 = trunc i8 %1346 to i1
  br i1 %1347, label %1348, label %1349

1348:                                             ; preds = %1345
  br label %1349

1349:                                             ; preds = %1348, %1345
  call void @uriencode_init()
  br label %1350

1350:                                             ; preds = %1359, %1349
  %1351 = load i32, i32* @stop_main_loop, align 4
  %1352 = icmp ne i32 %1351, 0
  %1353 = xor i1 %1352, true
  br i1 %1353, label %1354, label %1360

1354:                                             ; preds = %1350
  %1355 = load %struct.event_base*, %struct.event_base** @main_base, align 8
  %1356 = call i32 @event_base_loop(%struct.event_base* %1355, i32 1)
  %1357 = icmp ne i32 %1356, 0
  br i1 %1357, label %1358, label %1359

1358:                                             ; preds = %1354
  store i32 1, i32* %18, align 4
  br label %1360

1359:                                             ; preds = %1354
  br label %1350, !llvm.loop !30

1360:                                             ; preds = %1358, %1350
  %1361 = load i32, i32* @stop_main_loop, align 4
  switch i32 %1361, label %1366 [
    i32 1, label %1362
    i32 2, label %1365
  ]

1362:                                             ; preds = %1360
  %1363 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %1364 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1363, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.356, i64 0, i64 0))
  br label %1369

1365:                                             ; preds = %1360
  br label %1369

1366:                                             ; preds = %1360
  %1367 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %1368 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1367, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.357, i64 0, i64 0))
  br label %1369

1369:                                             ; preds = %1366, %1365, %1362
  call void @stop_threads()
  %1370 = load i8*, i8** getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 73), align 8
  %1371 = icmp ne i8* %1370, null
  br i1 %1371, label %1372, label %1376

1372:                                             ; preds = %1369
  %1373 = load i32, i32* @stop_main_loop, align 4
  %1374 = icmp eq i32 %1373, 1
  br i1 %1374, label %1375, label %1376

1375:                                             ; preds = %1372
  call void @restart_mmap_close()
  br label %1376

1376:                                             ; preds = %1375, %1372, %1369
  %1377 = load i8, i8* %8, align 1
  %1378 = trunc i8 %1377 to i1
  br i1 %1378, label %1379, label %1381

1379:                                             ; preds = %1376
  %1380 = load i8*, i8** %12, align 8
  call void @remove_pidfile(i8* %1380)
  br label %1381

1381:                                             ; preds = %1379, %1376
  %1382 = load i8*, i8** getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 4), align 8
  %1383 = icmp ne i8* %1382, null
  br i1 %1383, label %1384, label %1386

1384:                                             ; preds = %1381
  %1385 = load i8*, i8** getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 4), align 8
  call void @free(i8* %1385) #14
  br label %1386

1386:                                             ; preds = %1384, %1381
  %1387 = load %struct.event_base*, %struct.event_base** @main_base, align 8
  call void @event_base_free(%struct.event_base* %1387)
  %1388 = load %struct._mc_meta_data*, %struct._mc_meta_data** %31, align 8
  %1389 = bitcast %struct._mc_meta_data* %1388 to i8*
  call void @free(i8* %1389) #14
  %1390 = load i32, i32* %18, align 4
  store i32 %1390, i32* %3, align 4
  br label %1391

1391:                                             ; preds = %1386, %1194, %698, %688, %678, %672, %624, %618, %609, %603, %594, %585, %578, %570, %563, %555, %548, %537, %530, %519, %510, %504, %497, %486, %476, %458, %451, %443, %436, %428, %421, %410, %403, %383, %376, %368, %347, %243, %232, %214, %205, %192, %177, %155, %123, %79, %66
  %1392 = load i32, i32* %3, align 4
  ret i32 %1392
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @sanitycheck() #0 {
  %1 = alloca i1, align 1
  %2 = alloca i8*, align 8
  %3 = call i8* @event_get_version()
  store i8* %3, i8** %2, align 8
  %4 = load i8*, i8** %2, align 8
  %5 = icmp ne i8* %4, null
  br i1 %5, label %6, label %15

6:                                                ; preds = %0
  %7 = load i8*, i8** %2, align 8
  %8 = call i32 @strncmp(i8* %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.405, i64 0, i64 0), i64 2) #16
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %14

10:                                               ; preds = %6
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %12 = call i8* @event_get_version()
  %13 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.406, i64 0, i64 0), i8* %12)
  store i1 false, i1* %1, align 1
  br label %16

14:                                               ; preds = %6
  br label %15

15:                                               ; preds = %14, %0
  store i1 true, i1* %1, align 1
  br label %16

16:                                               ; preds = %15, %10
  %17 = load i1, i1* %1, align 1
  ret i1 %17
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @sig_handler(i32 %0) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  store i32 2, i32* @stop_main_loop, align 4
  %3 = load i32, i32* %2, align 4
  %4 = call i8* @strsignal(i32 %3) #14
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.407, i64 0, i64 0), i8* %4)
  ret void
}

; Function Attrs: nounwind
declare dso_local void (i32)* @signal(i32, void (i32)*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @sighup_handler(i32 %0) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  store volatile i32 1, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 25), align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @sig_usrhandler(i32 %0) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = call i8* @strsignal(i32 %3) #14
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.408, i64 0, i64 0), i8* %4)
  store i32 1, i32* @stop_main_loop, align 4
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @settings_init() #0 {
  store i8 1, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 19), align 8
  store i32 448, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 11), align 8
  store i32 11211, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 2), align 4
  store i32 0, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 3), align 8
  store i8* null, i8** getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 4), align 8
  store i64 67108864, i64* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 0), align 8
  store i32 1024, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 1), align 8
  store i32 0, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  store i32 0, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 6), align 4
  store i64 0, i64* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 7), align 8
  store i32 1, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 8), align 8
  store i8* null, i8** getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 9), align 8
  store i8* null, i8** getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 10), align 8
  store double 1.250000e+00, double* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 12), align 8
  store i32 48, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 13), align 8
  store i32 4, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 14), align 4
  store i32 0, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 15), align 8
  store i8 58, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 16), align 4
  store i32 0, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 17), align 8
  store i32 20, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 18), align 4
  store i32 1024, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 21), align 8
  store i32 5, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 20), align 4
  store i32 1048576, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 22), align 4
  store i32 1048576, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 24), align 4
  %1 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 24), align 4
  %2 = sdiv i32 %1, 2
  store i32 %2, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 23), align 8
  store i8 0, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 26), align 4
  store i8 1, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 27), align 1
  store i8 0, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 28), align 2
  store i32 100, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 41), align 8
  store i32 0, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 42), align 4
  store i8 0, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 29), align 1
  store i8 1, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 30), align 8
  store i32 20, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 43), align 8
  store i32 40, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 44), align 4
  store double 2.000000e-01, double* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 45), align 8
  store double 2.000000e+00, double* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 46), align 8
  store i8 0, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 48), align 4
  store i32 61, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 49), align 8
  store i32 0, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 50), align 4
  store i32 0, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 35), align 4
  store i8 1, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 31), align 1
  store i32 1, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 32), align 4
  store double 8.000000e-01, double* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 33), align 8
  store i32 30, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 34), align 8
  store i8 0, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 36), align 8
  store i32 0, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 37), align 4
  store i8 1, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 38), align 8
  store i8 1, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 39), align 1
  store i32 1000, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 47), align 8
  store i32 262144, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 51), align 8
  store i32 65536, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 52), align 4
  store i8 0, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 54), align 4
  store i8 1, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 55), align 1
  store i32 0, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 53), align 8
  store i32 0, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 72), align 4
  store i8* null, i8** getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 73), align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @verify_default(i8* %0, i1 zeroext %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8, align 1
  store i8* %0, i8** %3, align 8
  %5 = zext i1 %1 to i8
  store i8 %5, i8* %4, align 1
  %6 = load i8, i8* %4, align 1
  %7 = trunc i8 %6 to i1
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = load i8*, i8** %3, align 8
  %10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.409, i64 0, i64 0), i8* %9)
  call void @exit(i32 1) #17
  unreachable

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind
declare dso_local void @setbuf(%struct._IO_FILE*, i8*) #2

; Function Attrs: nounwind
declare dso_local i32 @getopt_long(i32, i8**, i8*, %struct.option*, i32*) #2

; Function Attrs: noreturn nounwind
declare dso_local void @exit(i32) #7

; Function Attrs: nounwind
declare dso_local i64 @strtol(i8*, i8**, i32) #2

; Function Attrs: nounwind readonly willreturn
declare dso_local i32 @atoi(i8*) #6

; Function Attrs: noinline nounwind optnone uwtable
define internal void @usage() #0 {
  %1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.258, i64 0, i64 0))
  %2 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 2), align 4
  %3 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 3), align 8
  %4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([130 x i8], [130 x i8]* @.str.410, i64 0, i64 0), i32 %2, i32 %3)
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.411, i64 0, i64 0))
  %6 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 11), align 8
  %7 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.412, i64 0, i64 0), i32 %6)
  %8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.413, i64 0, i64 0))
  %9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.414, i64 0, i64 0))
  %10 = load i64, i64* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 0), align 8
  %11 = udiv i64 %10, 1048576
  %12 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 1), align 8
  %13 = load double, double* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 12), align 8
  %14 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 13), align 8
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([1054 x i8], [1054 x i8]* @.str.415, i64 0, i64 0), i64 %11, i32 %12, double %13, i32 %14)
  %16 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 3), align 8
  %17 = icmp eq i32 %16, 0
  call void @verify_default(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.228, i64 0, i64 0), i1 zeroext %17)
  %18 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.416, i64 0, i64 0))
  %19 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 16), align 4
  %20 = sext i8 %19 to i32
  %21 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([366 x i8], [366 x i8]* @.str.417, i64 0, i64 0), i32 %20)
  %22 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 14), align 4
  %23 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.418, i64 0, i64 0), i32 %22)
  %24 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 18), align 4
  %25 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([199 x i8], [199 x i8]* @.str.419, i64 0, i64 0), i32 %24)
  %26 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.420, i64 0, i64 0))
  %27 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 21), align 8
  %28 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.421, i64 0, i64 0), i32 %27)
  %29 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 20), align 4
  %30 = call i8* @prot_text(i32 %29)
  %31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.422, i64 0, i64 0), i8* %30)
  %32 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 22), align 4
  %33 = sdiv i32 %32, 1048576
  %34 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([110 x i8], [110 x i8]* @.str.423, i64 0, i64 0), i32 %33, i32 1, i32 1024)
  %35 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.424, i64 0, i64 0))
  %36 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.425, i64 0, i64 0))
  %37 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.426, i64 0, i64 0))
  %38 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([139 x i8], [139 x i8]* @.str.427, i64 0, i64 0))
  %39 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([220 x i8], [220 x i8]* @.str.428, i64 0, i64 0))
  %40 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 27), align 1
  %41 = trunc i8 %40 to i1
  %42 = call i8* @flag_enabled_disabled(i1 zeroext %41)
  %43 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 35), align 4
  %44 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 41), align 8
  %45 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 42), align 4
  %46 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([1068 x i8], [1068 x i8]* @.str.429, i64 0, i64 0), i8* %42, i32 %43, i32 %44, i32 %45)
  %47 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 53), align 8
  %48 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([224 x i8], [224 x i8]* @.str.430, i64 0, i64 0), i32 %47)
  %49 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 53), align 8
  %50 = icmp eq i32 %49, 0
  call void @verify_default(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.169, i64 0, i64 0), i1 zeroext %50)
  %51 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 43), align 8
  %52 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 44), align 4
  %53 = load double, double* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 45), align 8
  %54 = load double, double* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 46), align 8
  %55 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 49), align 8
  %56 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 50), align 4
  %57 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([749 x i8], [749 x i8]* @.str.431, i64 0, i64 0), i32 %51, i32 %52, double %53, double %54, i32 %55, i32 %56)
  %58 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 23), align 8
  %59 = sdiv i32 %58, 1024
  %60 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 51), align 8
  %61 = udiv i32 %60, 1024
  %62 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 52), align 4
  %63 = udiv i32 %62, 1024
  %64 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([696 x i8], [696 x i8]* @.str.432, i64 0, i64 0), i32 %59, i32 %61, i32 %63)
  %65 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 37), align 4
  %66 = icmp eq i32 %65, 0
  call void @verify_default(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.154, i64 0, i64 0), i1 zeroext %66)
  %67 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 42), align 4
  %68 = icmp eq i32 %67, 0
  call void @verify_default(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.153, i64 0, i64 0), i1 zeroext %68)
  %69 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 50), align 4
  %70 = icmp eq i32 %69, 0
  call void @verify_default(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.166, i64 0, i64 0), i1 zeroext %70)
  %71 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.433, i64 0, i64 0))
  %72 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 59), align 4
  %73 = udiv i32 %72, 1048576
  %74 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 64), align 8
  %75 = udiv i32 %74, 1048576
  %76 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 58), align 8
  %77 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 60), align 8
  %78 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 62), align 8
  %79 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 70), align 8
  %80 = trunc i8 %79 to i1
  %81 = call i8* @flag_enabled_disabled(i1 zeroext %80)
  %82 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 63), align 4
  %83 = load double, double* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 68), align 8
  %84 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 67), align 4
  %85 = load double, double* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 69), align 8
  %86 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([1352 x i8], [1352 x i8]* @.str.434, i64 0, i64 0), i32 %73, i32 %75, i32 %76, i32 %77, i32 %78, i8* %81, i32 %82, double %83, i32 %84, double %85)
  %87 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 61), align 4
  %88 = icmp eq i32 %87, -1
  call void @verify_default(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.173, i64 0, i64 0), i1 zeroext %88)
  %89 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.435, i64 0, i64 0))
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @usage_license() #0 {
  %1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.438, i64 0, i64 0))
  %2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3203 x i8], [3203 x i8]* @.str.439, i64 0, i64 0))
  ret void
}

declare dso_local i32 @printf(i8*, ...) #3

; Function Attrs: nounwind readonly willreturn
declare dso_local i8* @strstr(i8*, i8*) #6

; Function Attrs: nounwind
declare dso_local noalias i8* @strdup(i8*) #2

; Function Attrs: nounwind readonly willreturn
declare dso_local double @atof(i8*) #6

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @enable_large_pages() #0 {
  %1 = alloca i32, align 4
  %2 = alloca [128 x i8], align 16
  %3 = alloca i32, align 4
  %4 = alloca i8**, align 8
  %5 = alloca i64, align 8
  %6 = bitcast [128 x i8]* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %6, i8 0, i64 128, i1 false)
  store i32 -1, i32* %3, align 4
  store i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @enable_large_pages.mm_thp_paths, i64 0, i64 0), i8*** %4, align 8
  br label %7

7:                                                ; preds = %18, %0
  %8 = load i8**, i8*** %4, align 8
  %9 = load i8*, i8** %8, align 8
  %10 = icmp ne i8* %9, null
  br i1 %10, label %11, label %21

11:                                               ; preds = %7
  %12 = load i8**, i8*** %4, align 8
  %13 = load i8*, i8** %12, align 8
  %14 = call i32 (i8*, i32, ...) @open(i8* %13, i32 0)
  store i32 %14, i32* %3, align 4
  %15 = icmp ne i32 %14, -1
  br i1 %15, label %16, label %17

16:                                               ; preds = %11
  br label %21

17:                                               ; preds = %11
  br label %18

18:                                               ; preds = %17
  %19 = load i8**, i8*** %4, align 8
  %20 = getelementptr inbounds i8*, i8** %19, i32 1
  store i8** %20, i8*** %4, align 8
  br label %7, !llvm.loop !31

21:                                               ; preds = %16, %7
  %22 = load i32, i32* %3, align 4
  %23 = icmp eq i32 %22, -1
  br i1 %23, label %24, label %29

24:                                               ; preds = %21
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %26 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %25, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.442, i64 0, i64 0))
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %28 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %27, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.443, i64 0, i64 0))
  store i32 -1, i32* %1, align 4
  br label %54

29:                                               ; preds = %21
  %30 = load i32, i32* %3, align 4
  %31 = getelementptr inbounds [128 x i8], [128 x i8]* %2, i64 0, i64 0
  %32 = call i64 @read(i32 %30, i8* %31, i64 128)
  store i64 %32, i64* %5, align 8
  %33 = load i32, i32* %3, align 4
  %34 = call i32 @close(i32 %33)
  %35 = load i64, i64* %5, align 8
  %36 = icmp sle i64 %35, 0
  br i1 %36, label %37, label %42

37:                                               ; preds = %29
  %38 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %39 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %38, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.444, i64 0, i64 0))
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %41 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %40, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.443, i64 0, i64 0))
  store i32 -1, i32* %1, align 4
  br label %54

42:                                               ; preds = %29
  %43 = load i64, i64* %5, align 8
  %44 = getelementptr inbounds [128 x i8], [128 x i8]* %2, i64 0, i64 %43
  store i8 0, i8* %44, align 1
  %45 = getelementptr inbounds [128 x i8], [128 x i8]* %2, i64 0, i64 0
  %46 = call i8* @strstr(i8* %45, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.445, i64 0, i64 0)) #16
  %47 = icmp ne i8* %46, null
  br i1 %47, label %48, label %53

48:                                               ; preds = %42
  %49 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %50 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %49, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.446, i64 0, i64 0))
  %51 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %52 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %51, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.443, i64 0, i64 0))
  store i32 -1, i32* %1, align 4
  br label %54

53:                                               ; preds = %42
  store i32 0, i32* %1, align 4
  br label %54

54:                                               ; preds = %53, %48, %37, %24
  %55 = load i32, i32* %1, align 4
  ret i32 %55
}

; Function Attrs: nounwind readonly willreturn
declare dso_local i32 @strcmp(i8*, i8*) #6

; Function Attrs: nounwind
declare dso_local i32 @getsubopt(i8**, i8**, i8**) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @_parse_slab_sizes(i8* %0, i32* %1) #0 {
  %3 = alloca i1, align 1
  %4 = alloca i8*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  store i32* %1, i32** %5, align 8
  store i8* null, i8** %6, align 8
  store i32 0, i32* %7, align 4
  store i32 0, i32* %8, align 4
  store i32 0, i32* %9, align 4
  %11 = load i8*, i8** %4, align 8
  %12 = call i64 @strlen(i8* %11) #16
  %13 = icmp ult i64 %12, 1
  br i1 %13, label %14, label %15

14:                                               ; preds = %2
  store i1 false, i1* %3, align 1
  br label %74

15:                                               ; preds = %2
  %16 = load i8*, i8** %4, align 8
  %17 = call i8* @strtok_r(i8* %16, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.447, i64 0, i64 0), i8** %6) #14
  store i8* %17, i8** %10, align 8
  br label %18

18:                                               ; preds = %67, %15
  %19 = load i8*, i8** %10, align 8
  %20 = icmp ne i8* %19, null
  br i1 %20, label %21, label %69

21:                                               ; preds = %18
  %22 = load i8*, i8** %10, align 8
  %23 = call zeroext i1 @safe_strtoul(i8* %22, i32* %7)
  br i1 %23, label %24, label %32

24:                                               ; preds = %21
  %25 = load i32, i32* %7, align 4
  %26 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 13), align 8
  %27 = icmp ult i32 %25, %26
  br i1 %27, label %32, label %28

28:                                               ; preds = %24
  %29 = load i32, i32* %7, align 4
  %30 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 23), align 8
  %31 = icmp ugt i32 %29, %30
  br i1 %31, label %32, label %36

32:                                               ; preds = %28, %24, %21
  %33 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %34 = load i32, i32* %7, align 4
  %35 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %33, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.448, i64 0, i64 0), i32 %34)
  store i1 false, i1* %3, align 1
  br label %74

36:                                               ; preds = %28
  %37 = load i32, i32* %9, align 4
  %38 = load i32, i32* %7, align 4
  %39 = icmp uge i32 %37, %38
  br i1 %39, label %40, label %44

40:                                               ; preds = %36
  %41 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %42 = load i32, i32* %7, align 4
  %43 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %41, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.449, i64 0, i64 0), i32 %42)
  store i1 false, i1* %3, align 1
  br label %74

44:                                               ; preds = %36
  %45 = load i32, i32* %7, align 4
  %46 = load i32, i32* %9, align 4
  %47 = add i32 %46, 8
  %48 = icmp ule i32 %45, %47
  br i1 %48, label %49, label %53

49:                                               ; preds = %44
  %50 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %51 = load i32, i32* %7, align 4
  %52 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %50, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.450, i64 0, i64 0), i32 %51, i32 8)
  store i1 false, i1* %3, align 1
  br label %74

53:                                               ; preds = %44
  %54 = load i32, i32* %7, align 4
  %55 = load i32*, i32** %5, align 8
  %56 = load i32, i32* %8, align 4
  %57 = add nsw i32 %56, 1
  store i32 %57, i32* %8, align 4
  %58 = sext i32 %56 to i64
  %59 = getelementptr inbounds i32, i32* %55, i64 %58
  store i32 %54, i32* %59, align 4
  %60 = load i32, i32* %7, align 4
  store i32 %60, i32* %9, align 4
  %61 = load i32, i32* %8, align 4
  %62 = icmp sge i32 %61, 63
  br i1 %62, label %63, label %66

63:                                               ; preds = %53
  %64 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %65 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %64, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.451, i64 0, i64 0))
  store i1 false, i1* %3, align 1
  br label %74

66:                                               ; preds = %53
  br label %67

67:                                               ; preds = %66
  %68 = call i8* @strtok_r(i8* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.447, i64 0, i64 0), i8** %6) #14
  store i8* %68, i8** %10, align 8
  br label %18, !llvm.loop !32

69:                                               ; preds = %18
  %70 = load i32*, i32** %5, align 8
  %71 = load i32, i32* %8, align 4
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds i32, i32* %70, i64 %72
  store i32 0, i32* %73, align 4
  store i1 true, i1* %3, align 1
  br label %74

74:                                               ; preds = %69, %63, %49, %40, %32, %14
  %75 = load i1, i1* %3, align 1
  ret i1 %75
}

; Function Attrs: nounwind readonly willreturn
declare dso_local i8* @strchr(i8*, i32) #6

; Function Attrs: nounwind
declare dso_local i32 @getrlimit(i32, %struct.timeval*) #2

; Function Attrs: nounwind
declare dso_local i32 @setrlimit(i32, %struct.timeval*) #2

; Function Attrs: nounwind
declare dso_local i32 @getuid() #2

; Function Attrs: nounwind
declare dso_local i32 @geteuid() #2

declare dso_local %struct.passwd* @getpwnam(i8*) #3

; Function Attrs: nounwind
declare dso_local i32 @setgroups(i64, i32*) #2

; Function Attrs: nounwind
declare dso_local i32 @setgid(i32) #2

; Function Attrs: nounwind
declare dso_local i32 @setuid(i32) #2

; Function Attrs: nounwind
declare dso_local i32 @mlockall(i32) #2

declare dso_local %struct.event_config* @event_config_new() #3

declare dso_local i32 @event_config_set_flag(%struct.event_config*, i32) #3

declare dso_local %struct.event_base* @event_base_new_with_config(%struct.event_config*) #3

declare dso_local void @event_config_free(%struct.event_config*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @stats_init() #0 {
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (%struct.stats* @stats to i8*), i8 0, i64 208, i1 false)
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (%struct.stats_state* @stats_state to i8*), i8 0, i64 56, i1 false)
  store i8 1, i8* getelementptr inbounds (%struct.stats_state, %struct.stats_state* @stats_state, i32 0, i32 9), align 1
  %1 = call i64 @time(i64* null) #14
  %2 = sub nsw i64 %1, 60
  %3 = sub nsw i64 %2, 2
  store i64 %3, i64* @process_started, align 8
  %4 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 16), align 4
  call void @stats_prefix_init(i8 signext %4)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @conn_init() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca %struct.timeval, align 8
  %4 = call i32 @dup(i32 1) #14
  store i32 %4, i32* %1, align 4
  %5 = load i32, i32* %1, align 4
  %6 = icmp slt i32 %5, 0
  br i1 %6, label %7, label %8

7:                                                ; preds = %0
  call void @perror(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.452, i64 0, i64 0))
  call void @exit(i32 1) #17
  unreachable

8:                                                ; preds = %0
  store i32 10, i32* %2, align 4
  %9 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 1), align 8
  %10 = load i32, i32* %2, align 4
  %11 = add nsw i32 %9, %10
  %12 = load i32, i32* %1, align 4
  %13 = add nsw i32 %11, %12
  store i32 %13, i32* @max_fds, align 4
  %14 = call i32 @getrlimit(i32 7, %struct.timeval* %3) #14
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %20

16:                                               ; preds = %8
  %17 = getelementptr inbounds %struct.timeval, %struct.timeval* %3, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = trunc i64 %18 to i32
  store i32 %19, i32* @max_fds, align 4
  br label %23

20:                                               ; preds = %8
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %22 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %21, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.453, i64 0, i64 0))
  br label %23

23:                                               ; preds = %20, %16
  %24 = load i32, i32* %1, align 4
  %25 = call i32 @close(i32 %24)
  %26 = load i32, i32* @max_fds, align 4
  %27 = sext i32 %26 to i64
  %28 = call noalias i8* @calloc(i64 %27, i64 8) #14
  %29 = bitcast i8* %28 to %struct.conn**
  store %struct.conn** %29, %struct.conn*** @conns, align 8
  %30 = icmp eq %struct.conn** %29, null
  br i1 %30, label %31, label %34

31:                                               ; preds = %23
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %33 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %32, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.454, i64 0, i64 0))
  call void @exit(i32 1) #17
  unreachable

34:                                               ; preds = %23
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @_mc_meta_load_cb(i8* %0, i8* %1, i8* %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca %struct._mc_meta_data*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca [18 x i8*], align 16
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i64, align 8
  %17 = alloca i64, align 8
  %18 = alloca i8, align 1
  %19 = alloca i8, align 1
  %20 = alloca %struct.timeval, align 8
  store i8* %0, i8** %4, align 8
  store i8* %1, i8** %5, align 8
  store i8* %2, i8** %6, align 8
  %21 = load i8*, i8** %6, align 8
  %22 = bitcast i8* %21 to %struct._mc_meta_data*
  store %struct._mc_meta_data* %22, %struct._mc_meta_data** %7, align 8
  store i32 0, i32* %10, align 4
  %23 = load %struct._mc_meta_data*, %struct._mc_meta_data** %7, align 8
  %24 = getelementptr inbounds %struct._mc_meta_data, %struct._mc_meta_data* %23, i32 0, i32 4
  store i64 0, i64* %24, align 8
  %25 = load %struct._mc_meta_data*, %struct._mc_meta_data** %7, align 8
  %26 = getelementptr inbounds %struct._mc_meta_data, %struct._mc_meta_data* %25, i32 0, i32 3
  store i64 0, i64* %26, align 8
  %27 = load %struct._mc_meta_data*, %struct._mc_meta_data** %7, align 8
  %28 = getelementptr inbounds %struct._mc_meta_data, %struct._mc_meta_data* %27, i32 0, i32 5
  store i32 0, i32* %28, align 8
  store i32 0, i32* %11, align 4
  %29 = bitcast [18 x i8*]* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %29, i8* align 16 bitcast ([18 x i8*]* @__const._mc_meta_load_cb.opts to i8*), i64 144, i1 false)
  br label %30

30:                                               ; preds = %255, %60, %3
  %31 = load i8*, i8** %5, align 8
  %32 = call i32 @restart_get_kv(i8* %31, i8** %8, i8** %9)
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %256

34:                                               ; preds = %30
  store i32 0, i32* %13, align 4
  store i32 0, i32* %14, align 4
  store i32 0, i32* %15, align 4
  store i64 0, i64* %16, align 8
  store i64 0, i64* %17, align 8
  br label %35

35:                                               ; preds = %51, %34
  %36 = load i32, i32* %13, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds [18 x i8*], [18 x i8*]* %12, i64 0, i64 %37
  %39 = load i8*, i8** %38, align 8
  %40 = icmp ne i8* %39, null
  br i1 %40, label %41, label %49

41:                                               ; preds = %35
  %42 = load i8*, i8** %8, align 8
  %43 = load i32, i32* %13, align 4
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds [18 x i8*], [18 x i8*]* %12, i64 0, i64 %44
  %46 = load i8*, i8** %45, align 8
  %47 = call i32 @strcmp(i8* %42, i8* %46) #16
  %48 = icmp ne i32 %47, 0
  br label %49

49:                                               ; preds = %41, %35
  %50 = phi i1 [ false, %35 ], [ %48, %41 ]
  br i1 %50, label %51, label %54

51:                                               ; preds = %49
  %52 = load i32, i32* %13, align 4
  %53 = add nsw i32 %52, 1
  store i32 %53, i32* %13, align 4
  br label %35, !llvm.loop !33

54:                                               ; preds = %49
  %55 = load i32, i32* %13, align 4
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds [18 x i8*], [18 x i8*]* %12, i64 0, i64 %56
  %58 = load i8*, i8** %57, align 8
  %59 = icmp eq i8* %58, null
  br i1 %59, label %60, label %64

60:                                               ; preds = %54
  %61 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %62 = load i8*, i8** %8, align 8
  %63 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %61, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.467, i64 0, i64 0), i8* %62)
  br label %30, !llvm.loop !34

64:                                               ; preds = %54
  %65 = load i32, i32* %11, align 4
  %66 = add nsw i32 %65, 1
  store i32 %66, i32* %11, align 4
  store i8 0, i8* %18, align 1
  store i8 1, i8* %19, align 1
  %67 = load i8*, i8** %9, align 8
  %68 = call i32 @strcmp(i8* %67, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.468, i64 0, i64 0)) #16
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %64
  store i8 0, i8* %18, align 1
  br label %78

71:                                               ; preds = %64
  %72 = load i8*, i8** %9, align 8
  %73 = call i32 @strcmp(i8* %72, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.469, i64 0, i64 0)) #16
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %76

75:                                               ; preds = %71
  store i8 1, i8* %18, align 1
  br label %77

76:                                               ; preds = %71
  store i8 0, i8* %19, align 1
  br label %77

77:                                               ; preds = %76, %75
  br label %78

78:                                               ; preds = %77, %70
  %79 = load i32, i32* %13, align 4
  switch i32 %79, label %243 [
    i32 0, label %80
    i32 1, label %91
    i32 2, label %100
    i32 3, label %109
    i32 4, label %118
    i32 5, label %127
    i32 6, label %136
    i32 7, label %145
    i32 8, label %158
    i32 9, label %171
    i32 10, label %178
    i32 11, label %185
    i32 12, label %192
    i32 15, label %199
    i32 13, label %208
    i32 14, label %217
    i32 16, label %236
  ]

80:                                               ; preds = %78
  %81 = load i8*, i8** %9, align 8
  %82 = load %struct._mc_meta_data*, %struct._mc_meta_data** %7, align 8
  %83 = getelementptr inbounds %struct._mc_meta_data, %struct._mc_meta_data* %82, i32 0, i32 1
  %84 = call zeroext i1 @safe_strtoull_hex(i8* %81, i64* %83)
  br i1 %84, label %90, label %85

85:                                               ; preds = %80
  %86 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %87 = load i8*, i8** %8, align 8
  %88 = load i8*, i8** %9, align 8
  %89 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %86, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.470, i64 0, i64 0), i8* %87, i8* %88)
  store i32 -1, i32* %10, align 4
  br label %90

90:                                               ; preds = %85, %80
  br label %247

91:                                               ; preds = %78
  %92 = load i8*, i8** %9, align 8
  %93 = call zeroext i1 @safe_strtoll(i8* %92, i64* %16)
  br i1 %93, label %94, label %98

94:                                               ; preds = %91
  %95 = load i64, i64* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 0), align 8
  %96 = load i64, i64* %16, align 8
  %97 = icmp ne i64 %95, %96
  br i1 %97, label %98, label %99

98:                                               ; preds = %94, %91
  store i32 -1, i32* %10, align 4
  br label %99

99:                                               ; preds = %98, %94
  br label %247

100:                                              ; preds = %78
  %101 = load i8*, i8** %9, align 8
  %102 = call zeroext i1 @safe_strtol(i8* %101, i32* %14)
  br i1 %102, label %103, label %107

103:                                              ; preds = %100
  %104 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 13), align 8
  %105 = load i32, i32* %14, align 4
  %106 = icmp ne i32 %104, %105
  br i1 %106, label %107, label %108

107:                                              ; preds = %103, %100
  store i32 -1, i32* %10, align 4
  br label %108

108:                                              ; preds = %107, %103
  br label %247

109:                                              ; preds = %78
  %110 = load i8*, i8** %9, align 8
  %111 = call zeroext i1 @safe_strtol(i8* %110, i32* %14)
  br i1 %111, label %112, label %116

112:                                              ; preds = %109
  %113 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 22), align 4
  %114 = load i32, i32* %14, align 4
  %115 = icmp ne i32 %113, %114
  br i1 %115, label %116, label %117

116:                                              ; preds = %112, %109
  store i32 -1, i32* %10, align 4
  br label %117

117:                                              ; preds = %116, %112
  br label %247

118:                                              ; preds = %78
  %119 = load i8*, i8** %9, align 8
  %120 = call zeroext i1 @safe_strtol(i8* %119, i32* %14)
  br i1 %120, label %121, label %125

121:                                              ; preds = %118
  %122 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 23), align 8
  %123 = load i32, i32* %14, align 4
  %124 = icmp ne i32 %122, %123
  br i1 %124, label %125, label %126

125:                                              ; preds = %121, %118
  store i32 -1, i32* %10, align 4
  br label %126

126:                                              ; preds = %125, %121
  br label %247

127:                                              ; preds = %78
  %128 = load i8*, i8** %9, align 8
  %129 = call zeroext i1 @safe_strtol(i8* %128, i32* %14)
  br i1 %129, label %130, label %134

130:                                              ; preds = %127
  %131 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 24), align 4
  %132 = load i32, i32* %14, align 4
  %133 = icmp ne i32 %131, %132
  br i1 %133, label %134, label %135

134:                                              ; preds = %130, %127
  store i32 -1, i32* %10, align 4
  br label %135

135:                                              ; preds = %134, %130
  br label %247

136:                                              ; preds = %78
  %137 = load i8*, i8** %9, align 8
  %138 = load %struct._mc_meta_data*, %struct._mc_meta_data** %7, align 8
  %139 = getelementptr inbounds %struct._mc_meta_data, %struct._mc_meta_data* %138, i32 0, i32 2
  %140 = load i8*, i8** %139, align 8
  %141 = call i32 @strcmp(i8* %137, i8* %140) #16
  %142 = icmp ne i32 %141, 0
  br i1 %142, label %143, label %144

143:                                              ; preds = %136
  store i32 -1, i32* %10, align 4
  br label %144

144:                                              ; preds = %143, %136
  br label %247

145:                                              ; preds = %78
  %146 = load i8, i8* %19, align 1
  %147 = trunc i8 %146 to i1
  br i1 %147, label %148, label %156

148:                                              ; preds = %145
  %149 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 19), align 8
  %150 = trunc i8 %149 to i1
  %151 = zext i1 %150 to i32
  %152 = load i8, i8* %18, align 1
  %153 = trunc i8 %152 to i1
  %154 = zext i1 %153 to i32
  %155 = icmp ne i32 %151, %154
  br i1 %155, label %156, label %157

156:                                              ; preds = %148, %145
  store i32 -1, i32* %10, align 4
  br label %157

157:                                              ; preds = %156, %148
  br label %247

158:                                              ; preds = %78
  %159 = load i8, i8* %19, align 1
  %160 = trunc i8 %159 to i1
  br i1 %160, label %161, label %169

161:                                              ; preds = %158
  %162 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 31), align 1
  %163 = trunc i8 %162 to i1
  %164 = zext i1 %163 to i32
  %165 = load i8, i8* %18, align 1
  %166 = trunc i8 %165 to i1
  %167 = zext i1 %166 to i32
  %168 = icmp ne i32 %164, %167
  br i1 %168, label %169, label %170

169:                                              ; preds = %161, %158
  store i32 -1, i32* %10, align 4
  br label %170

170:                                              ; preds = %169, %161
  br label %247

171:                                              ; preds = %78
  %172 = load i8*, i8** %9, align 8
  %173 = call zeroext i1 @safe_strtoull(i8* %172, i64* %17)
  br i1 %173, label %175, label %174

174:                                              ; preds = %171
  store i32 -1, i32* %10, align 4
  br label %177

175:                                              ; preds = %171
  %176 = load i64, i64* %17, align 8
  call void @set_cas_id(i64 %176)
  br label %177

177:                                              ; preds = %175, %174
  br label %247

178:                                              ; preds = %78
  %179 = load i8*, i8** %9, align 8
  %180 = call zeroext i1 @safe_strtoull(i8* %179, i64* %17)
  br i1 %180, label %182, label %181

181:                                              ; preds = %178
  store i32 -1, i32* %10, align 4
  br label %184

182:                                              ; preds = %178
  %183 = load i64, i64* %17, align 8
  store i64 %183, i64* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 7), align 8
  br label %184

184:                                              ; preds = %182, %181
  br label %247

185:                                              ; preds = %78
  %186 = load i8*, i8** %9, align 8
  %187 = call zeroext i1 @safe_strtoul(i8* %186, i32* %15)
  br i1 %187, label %189, label %188

188:                                              ; preds = %185
  store i32 -1, i32* %10, align 4
  br label %191

189:                                              ; preds = %185
  %190 = load i32, i32* %15, align 4
  store i32 %190, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 6), align 4
  br label %191

191:                                              ; preds = %189, %188
  br label %247

192:                                              ; preds = %78
  %193 = load i8*, i8** %9, align 8
  %194 = call zeroext i1 @safe_strtoull(i8* %193, i64* %17)
  br i1 %194, label %196, label %195

195:                                              ; preds = %192
  store i32 -1, i32* %10, align 4
  br label %198

196:                                              ; preds = %192
  %197 = load i64, i64* %17, align 8
  call void @logger_set_gid(i64 %197)
  br label %198

198:                                              ; preds = %196, %195
  br label %247

199:                                              ; preds = %78
  %200 = load i8*, i8** %9, align 8
  %201 = call zeroext i1 @safe_strtoull(i8* %200, i64* %17)
  br i1 %201, label %203, label %202

202:                                              ; preds = %199
  store i32 -1, i32* %10, align 4
  br label %207

203:                                              ; preds = %199
  %204 = load i64, i64* %17, align 8
  %205 = load %struct._mc_meta_data*, %struct._mc_meta_data** %7, align 8
  %206 = getelementptr inbounds %struct._mc_meta_data, %struct._mc_meta_data* %205, i32 0, i32 4
  store i64 %204, i64* %206, align 8
  br label %207

207:                                              ; preds = %203, %202
  br label %247

208:                                              ; preds = %78
  %209 = load i8*, i8** %9, align 8
  %210 = call zeroext i1 @safe_strtoul(i8* %209, i32* %15)
  br i1 %210, label %212, label %211

211:                                              ; preds = %208
  store i32 -1, i32* %10, align 4
  br label %216

212:                                              ; preds = %208
  %213 = load i32, i32* %15, align 4
  %214 = load %struct._mc_meta_data*, %struct._mc_meta_data** %7, align 8
  %215 = getelementptr inbounds %struct._mc_meta_data, %struct._mc_meta_data* %214, i32 0, i32 5
  store i32 %213, i32* %215, align 8
  br label %216

216:                                              ; preds = %212, %211
  br label %247

217:                                              ; preds = %78
  %218 = load i8*, i8** %9, align 8
  %219 = call zeroext i1 @safe_strtoll(i8* %218, i64* %16)
  br i1 %219, label %221, label %220

220:                                              ; preds = %217
  store i32 -1, i32* %10, align 4
  br label %235

221:                                              ; preds = %217
  %222 = call i32 @gettimeofday(%struct.timeval* %20, %struct.timezone* null) #14
  %223 = getelementptr inbounds %struct.timeval, %struct.timeval* %20, i32 0, i32 0
  %224 = load i64, i64* %223, align 8
  %225 = load i64, i64* %16, align 8
  %226 = sub nsw i64 %224, %225
  %227 = load %struct._mc_meta_data*, %struct._mc_meta_data** %7, align 8
  %228 = getelementptr inbounds %struct._mc_meta_data, %struct._mc_meta_data* %227, i32 0, i32 3
  store i64 %226, i64* %228, align 8
  %229 = load %struct._mc_meta_data*, %struct._mc_meta_data** %7, align 8
  %230 = getelementptr inbounds %struct._mc_meta_data, %struct._mc_meta_data* %229, i32 0, i32 3
  %231 = load i64, i64* %230, align 8
  %232 = icmp sle i64 %231, 0
  br i1 %232, label %233, label %234

233:                                              ; preds = %221
  store i32 -1, i32* %10, align 4
  br label %234

234:                                              ; preds = %233, %221
  br label %235

235:                                              ; preds = %234, %220
  br label %247

236:                                              ; preds = %78
  %237 = load i8*, i8** %9, align 8
  %238 = call zeroext i1 @safe_strtoul(i8* %237, i32* %15)
  br i1 %238, label %240, label %239

239:                                              ; preds = %236
  store i32 -1, i32* %10, align 4
  br label %242

240:                                              ; preds = %236
  %241 = load i32, i32* %15, align 4
  store i32 %241, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 35), align 4
  br label %242

242:                                              ; preds = %240, %239
  br label %247

243:                                              ; preds = %78
  %244 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %245 = load i8*, i8** %8, align 8
  %246 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %244, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.471, i64 0, i64 0), i8* %245)
  br label %247

247:                                              ; preds = %243, %242, %235, %216, %207, %198, %191, %184, %177, %170, %157, %144, %135, %126, %117, %108, %99, %90
  %248 = load i32, i32* %10, align 4
  %249 = icmp ne i32 %248, 0
  br i1 %249, label %250, label %255

250:                                              ; preds = %247
  %251 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %252 = load i8*, i8** %8, align 8
  %253 = load i8*, i8** %9, align 8
  %254 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %251, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.472, i64 0, i64 0), i8* %252, i8* %253)
  br label %256

255:                                              ; preds = %247
  br label %30, !llvm.loop !34

256:                                              ; preds = %250, %30
  %257 = load i32, i32* %11, align 4
  %258 = icmp slt i32 %257, 17
  br i1 %258, label %259, label %262

259:                                              ; preds = %256
  %260 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %261 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %260, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.473, i64 0, i64 0))
  store i32 -1, i32* %10, align 4
  br label %262

262:                                              ; preds = %259, %256
  %263 = load i32, i32* %10, align 4
  ret i32 %263
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @_mc_meta_save_cb(i8* %0, i8* %1, i8* %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca %struct._mc_meta_data*, align 8
  %8 = alloca %struct.timeval, align 8
  store i8* %0, i8** %4, align 8
  store i8* %1, i8** %5, align 8
  store i8* %2, i8** %6, align 8
  %9 = load i8*, i8** %6, align 8
  %10 = bitcast i8* %9 to %struct._mc_meta_data*
  store %struct._mc_meta_data* %10, %struct._mc_meta_data** %7, align 8
  %11 = load i8*, i8** %5, align 8
  %12 = load %struct._mc_meta_data*, %struct._mc_meta_data** %7, align 8
  %13 = getelementptr inbounds %struct._mc_meta_data, %struct._mc_meta_data* %12, i32 0, i32 2
  %14 = load i8*, i8** %13, align 8
  call void (i8*, i8*, i8*, ...) @restart_set_kv(i8* %11, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.458, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.29, i64 0, i64 0), i8* %14)
  %15 = load i8*, i8** %5, align 8
  %16 = load i64, i64* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 0), align 8
  call void (i8*, i8*, i8*, ...) @restart_set_kv(i8* %15, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.112, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %16)
  %17 = load i8*, i8** %5, align 8
  %18 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 13), align 8
  call void (i8*, i8*, i8*, ...) @restart_set_kv(i8* %17, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.131, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33, i64 0, i64 0), i32 %18)
  %19 = load i8*, i8** %5, align 8
  %20 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 22), align 4
  call void (i8*, i8*, i8*, ...) @restart_set_kv(i8* %19, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.143, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33, i64 0, i64 0), i32 %20)
  %21 = load i8*, i8** %5, align 8
  %22 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 23), align 8
  call void (i8*, i8*, i8*, ...) @restart_set_kv(i8* %21, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.456, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33, i64 0, i64 0), i32 %22)
  %23 = load i8*, i8** %5, align 8
  %24 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 24), align 4
  call void (i8*, i8*, i8*, ...) @restart_set_kv(i8* %23, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.457, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33, i64 0, i64 0), i32 %24)
  %25 = load i8*, i8** %5, align 8
  %26 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 19), align 8
  %27 = trunc i8 %26 to i1
  %28 = zext i1 %27 to i64
  %29 = select i1 %27, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.469, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.468, i64 0, i64 0)
  call void (i8*, i8*, i8*, ...) @restart_set_kv(i8* %25, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.459, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.29, i64 0, i64 0), i8* %29)
  %30 = load i8*, i8** %5, align 8
  %31 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 31), align 1
  %32 = trunc i8 %31 to i1
  %33 = zext i1 %32 to i64
  %34 = select i1 %32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.469, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.468, i64 0, i64 0)
  call void (i8*, i8*, i8*, ...) @restart_set_kv(i8* %30, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.146, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.29, i64 0, i64 0), i8* %34)
  %35 = load i8*, i8** %5, align 8
  %36 = load volatile i32, i32* @current_time, align 4
  call void (i8*, i8*, i8*, ...) @restart_set_kv(i8* %35, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.464, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), i32 %36)
  %37 = load i8*, i8** %5, align 8
  %38 = load i64, i64* @process_started, align 8
  call void (i8*, i8*, i8*, ...) @restart_set_kv(i8* %37, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.466, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %38)
  %39 = call i32 @gettimeofday(%struct.timeval* %8, %struct.timezone* null) #14
  %40 = load i8*, i8** %5, align 8
  %41 = getelementptr inbounds %struct.timeval, %struct.timeval* %8, i32 0, i32 0
  %42 = load i64, i64* %41, align 8
  call void (i8*, i8*, i8*, ...) @restart_set_kv(i8* %40, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.465, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.23, i64 0, i64 0), i64 %42)
  %43 = load i8*, i8** %5, align 8
  %44 = call i64 @get_cas_id()
  call void (i8*, i8*, i8*, ...) @restart_set_kv(i8* %43, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.460, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %44)
  %45 = load i8*, i8** %5, align 8
  %46 = load i64, i64* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 7), align 8
  call void (i8*, i8*, i8*, ...) @restart_set_kv(i8* %45, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.461, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %46)
  %47 = load i8*, i8** %5, align 8
  %48 = call i64 @logger_get_gid()
  call void (i8*, i8*, i8*, ...) @restart_set_kv(i8* %47, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.463, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %48)
  %49 = load i8*, i8** %5, align 8
  %50 = load i32, i32* getelementptr inbounds (%struct.stats_state, %struct.stats_state* @stats_state, i32 0, i32 6), align 8
  call void (i8*, i8*, i8*, ...) @restart_set_kv(i8* %49, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.203, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), i32 %50)
  %51 = load i8*, i8** %5, align 8
  %52 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 6), align 4
  call void (i8*, i8*, i8*, ...) @restart_set_kv(i8* %51, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.462, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), i32 %52)
  %53 = load i8*, i8** %5, align 8
  %54 = load %struct._mc_meta_data*, %struct._mc_meta_data** %7, align 8
  %55 = getelementptr inbounds %struct._mc_meta_data, %struct._mc_meta_data* %54, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8
  call void (i8*, i8*, i8*, ...) @restart_set_kv(i8* %53, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.455, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.474, i64 0, i64 0), i8* %56)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @start_conn_timeout_thread() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 50), align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %6

5:                                                ; preds = %0
  store i32 -1, i32* %1, align 4
  br label %15

6:                                                ; preds = %0
  store i32 1, i32* @do_run_conn_timeout_thread, align 4
  %7 = call i32 @pthread_create(i64* @conn_timeout_tid, %union.pthread_attr_t* null, i8* (i8*)* @conn_timeout_thread, i8* null) #14
  store i32 %7, i32* %2, align 4
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %9, label %14

9:                                                ; preds = %6
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %11 = load i32, i32* %2, align 4
  %12 = call i8* @strerror(i32 %11) #14
  %13 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.475, i64 0, i64 0), i8* %12)
  store i32 -1, i32* %1, align 4
  br label %15

14:                                               ; preds = %6
  store i32 0, i32* %1, align 4
  br label %15

15:                                               ; preds = %14, %9, %5
  %16 = load i32, i32* %1, align 4
  ret i32 %16
}

; Function Attrs: nounwind
declare dso_local i32 @clock_gettime(i32, %struct.timeval*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @clock_handler(i32 %0, i16 signext %1, i8* %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i16, align 2
  %6 = alloca i8*, align 8
  %7 = alloca %struct.timeval, align 8
  %8 = alloca %struct.timeval, align 8
  %9 = alloca %struct.timeval, align 8
  store i32 %0, i32* %4, align 4
  store i16 %1, i16* %5, align 2
  store i8* %2, i8** %6, align 8
  %10 = bitcast %struct.timeval* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 bitcast (%struct.timeval* @__const.clock_handler.t to i8*), i64 16, i1 false)
  %11 = load i8, i8* @clock_handler.initialized, align 1
  %12 = trunc i8 %11 to i1
  br i1 %12, label %13, label %15

13:                                               ; preds = %3
  %14 = call i32 @event_del(%struct.event* @clockevent)
  br label %16

15:                                               ; preds = %3
  store i8 1, i8* @clock_handler.initialized, align 1
  br label %16

16:                                               ; preds = %15, %13
  %17 = load i64, i64* getelementptr inbounds (%struct.stats_state, %struct.stats_state* @stats_state, i32 0, i32 0), align 8
  call void @assoc_start_expand(i64 %17)
  %18 = load volatile i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 25), align 8
  %19 = icmp ne i32 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %16
  store volatile i32 0, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 25), align 8
  %21 = load i8*, i8** getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 10), align 8
  %22 = call i32 @authfile_load(i8* %21)
  br label %23

23:                                               ; preds = %20, %16
  call void @event_set(%struct.event* @clockevent, i32 -1, i16 signext 0, void (i32, i16, i8*)* @clock_handler, i8* null)
  %24 = load %struct.event_base*, %struct.event_base** @main_base, align 8
  %25 = call i32 @event_base_set(%struct.event_base* %24, %struct.event* @clockevent)
  %26 = call i32 @event_add(%struct.event* @clockevent, %struct.timeval* %7)
  %27 = load i8, i8* @monotonic, align 1
  %28 = trunc i8 %27 to i1
  br i1 %28, label %29, label %39

29:                                               ; preds = %23
  %30 = call i32 @clock_gettime(i32 1, %struct.timeval* %8) #14
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  br label %46

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct.timeval, %struct.timeval* %8, i32 0, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = load i64, i64* @monotonic_start, align 8
  %37 = sub nsw i64 %35, %36
  %38 = trunc i64 %37 to i32
  store volatile i32 %38, i32* @current_time, align 4
  br label %46

39:                                               ; preds = %23
  %40 = call i32 @gettimeofday(%struct.timeval* %9, %struct.timezone* null) #14
  %41 = getelementptr inbounds %struct.timeval, %struct.timeval* %9, i32 0, i32 0
  %42 = load i64, i64* %41, align 8
  %43 = load i64, i64* @process_started, align 8
  %44 = sub nsw i64 %42, %43
  %45 = trunc i64 %44 to i32
  store volatile i32 %45, i32* @current_time, align 4
  br label %46

46:                                               ; preds = %39, %33, %32
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @server_socket_unix(i8* %0, i32 %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.timezone, align 4
  %8 = alloca %struct.sockaddr_un, align 2
  %9 = alloca %struct.stat, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %union.__SOCKADDR_ARG, align 8
  store i8* %0, i8** %4, align 8
  store i32 %1, i32* %5, align 4
  %13 = bitcast %struct.timezone* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %13, i8 0, i64 8, i1 false)
  store i32 1, i32* %10, align 4
  %14 = load i8*, i8** %4, align 8
  %15 = icmp ne i8* %14, null
  br i1 %15, label %17, label %16

16:                                               ; preds = %2
  store i32 1, i32* %3, align 4
  br label %85

17:                                               ; preds = %2
  %18 = call i32 @new_socket_unix()
  store i32 %18, i32* %6, align 4
  %19 = icmp eq i32 %18, -1
  br i1 %19, label %20, label %21

20:                                               ; preds = %17
  store i32 1, i32* %3, align 4
  br label %85

21:                                               ; preds = %17
  %22 = load i8*, i8** %4, align 8
  %23 = call i32 @lstat(i8* %22, %struct.stat* %9) #14
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %34

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.stat, %struct.stat* %9, i32 0, i32 3
  %27 = load i32, i32* %26, align 8
  %28 = and i32 %27, 61440
  %29 = icmp eq i32 %28, 49152
  br i1 %29, label %30, label %33

30:                                               ; preds = %25
  %31 = load i8*, i8** %4, align 8
  %32 = call i32 @unlink(i8* %31) #14
  br label %33

33:                                               ; preds = %30, %25
  br label %34

34:                                               ; preds = %33, %21
  %35 = load i32, i32* %6, align 4
  %36 = bitcast i32* %10 to i8*
  %37 = call i32 @setsockopt(i32 %35, i32 1, i32 2, i8* %36, i32 4) #14
  %38 = load i32, i32* %6, align 4
  %39 = bitcast i32* %10 to i8*
  %40 = call i32 @setsockopt(i32 %38, i32 1, i32 9, i8* %39, i32 4) #14
  %41 = load i32, i32* %6, align 4
  %42 = bitcast %struct.timezone* %7 to i8*
  %43 = call i32 @setsockopt(i32 %41, i32 1, i32 13, i8* %42, i32 8) #14
  %44 = bitcast %struct.sockaddr_un* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 2 %44, i8 0, i64 110, i1 false)
  %45 = getelementptr inbounds %struct.sockaddr_un, %struct.sockaddr_un* %8, i32 0, i32 0
  store i16 1, i16* %45, align 2
  %46 = getelementptr inbounds %struct.sockaddr_un, %struct.sockaddr_un* %8, i32 0, i32 1
  %47 = getelementptr inbounds [108 x i8], [108 x i8]* %46, i64 0, i64 0
  %48 = load i8*, i8** %4, align 8
  %49 = call i8* @strncpy(i8* %47, i8* %48, i64 107) #14
  %50 = load i32, i32* %5, align 4
  %51 = and i32 %50, 511
  %52 = xor i32 %51, -1
  %53 = call i32 @umask(i32 %52) #14
  store i32 %53, i32* %11, align 4
  %54 = load i32, i32* %6, align 4
  %55 = bitcast %union.__SOCKADDR_ARG* %12 to %struct.sockaddr**
  %56 = bitcast %struct.sockaddr_un* %8 to %struct.sockaddr*
  store %struct.sockaddr* %56, %struct.sockaddr** %55, align 8
  %57 = getelementptr inbounds %union.__SOCKADDR_ARG, %union.__SOCKADDR_ARG* %12, i32 0, i32 0
  %58 = load %struct.sockaddr*, %struct.sockaddr** %57, align 8
  %59 = call i32 @bind(i32 %54, %struct.sockaddr* %58, i32 110) #14
  %60 = icmp eq i32 %59, -1
  br i1 %60, label %61, label %66

61:                                               ; preds = %34
  call void @perror(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.479, i64 0, i64 0))
  %62 = load i32, i32* %6, align 4
  %63 = call i32 @close(i32 %62)
  %64 = load i32, i32* %11, align 4
  %65 = call i32 @umask(i32 %64) #14
  store i32 1, i32* %3, align 4
  br label %85

66:                                               ; preds = %34
  %67 = load i32, i32* %11, align 4
  %68 = call i32 @umask(i32 %67) #14
  %69 = load i32, i32* %6, align 4
  %70 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 21), align 8
  %71 = call i32 @listen(i32 %69, i32 %70) #14
  %72 = icmp eq i32 %71, -1
  br i1 %72, label %73, label %76

73:                                               ; preds = %66
  call void @perror(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.480, i64 0, i64 0))
  %74 = load i32, i32* %6, align 4
  %75 = call i32 @close(i32 %74)
  store i32 1, i32* %3, align 4
  br label %85

76:                                               ; preds = %66
  %77 = load i32, i32* %6, align 4
  %78 = load %struct.event_base*, %struct.event_base** @main_base, align 8
  %79 = call %struct.conn* @conn_new(i32 %77, i32 0, i32 18, i32 1, i32 0, %struct.event_base* %78, i8* null)
  store %struct.conn* %79, %struct.conn** @listen_conn, align 8
  %80 = icmp ne %struct.conn* %79, null
  br i1 %80, label %84, label %81

81:                                               ; preds = %76
  %82 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %83 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %82, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.481, i64 0, i64 0))
  call void @exit(i32 1) #17
  unreachable

84:                                               ; preds = %76
  store i32 0, i32* %3, align 4
  br label %85

85:                                               ; preds = %84, %73, %61, %20, %16
  %86 = load i32, i32* %3, align 4
  ret i32 %86
}

; Function Attrs: nounwind
declare dso_local i8* @getenv(i8*) #2

declare dso_local %struct._IO_FILE* @fopen(i8*, i8*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @server_sockets(i32 %0, i32 %1, %struct._IO_FILE* %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct._IO_FILE*, align 8
  %8 = alloca i8, align 1
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  store i32 %0, i32* %5, align 4
  store i32 %1, i32* %6, align 4
  store %struct._IO_FILE* %2, %struct._IO_FILE** %7, align 8
  store i8 0, i8* %8, align 1
  %18 = load i8*, i8** getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 4), align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %20, label %28

20:                                               ; preds = %3
  %21 = load i8*, i8** getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 4), align 8
  %22 = load i32, i32* %5, align 4
  %23 = load i32, i32* %6, align 4
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %25 = load i8, i8* %8, align 1
  %26 = trunc i8 %25 to i1
  %27 = call i32 @server_socket(i8* %21, i32 %22, i32 %23, %struct._IO_FILE* %24, i1 zeroext %26)
  store i32 %27, i32* %4, align 4
  br label %126

28:                                               ; preds = %3
  store i32 0, i32* %10, align 4
  %29 = load i8*, i8** getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 4), align 8
  %30 = call noalias i8* @strdup(i8* %29) #14
  store i8* %30, i8** %11, align 8
  %31 = load i8*, i8** %11, align 8
  %32 = icmp eq i8* %31, null
  br i1 %32, label %33, label %36

33:                                               ; preds = %28
  %34 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %35 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %34, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.483, i64 0, i64 0))
  store i32 1, i32* %4, align 4
  br label %126

36:                                               ; preds = %28
  store i32 0, i32* %12, align 4
  %37 = load i8*, i8** %11, align 8
  %38 = call i8* @strtok_r(i8* %37, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.484, i64 0, i64 0), i8** %9) #14
  store i8* %38, i8** %13, align 8
  br label %39

39:                                               ; preds = %119, %36
  %40 = load i8*, i8** %13, align 8
  %41 = icmp ne i8* %40, null
  br i1 %41, label %42, label %121

42:                                               ; preds = %39
  %43 = load i32, i32* %5, align 4
  store i32 %43, i32* %14, align 4
  store i8* null, i8** %15, align 8
  %44 = load i8*, i8** %13, align 8
  %45 = load i8, i8* %44, align 1
  %46 = sext i8 %45 to i32
  %47 = icmp eq i32 %46, 91
  br i1 %47, label %48, label %64

48:                                               ; preds = %42
  %49 = load i8*, i8** %13, align 8
  %50 = call i8* @strchr(i8* %49, i32 93) #16
  store i8* %50, i8** %16, align 8
  %51 = load i8*, i8** %16, align 8
  %52 = icmp eq i8* %51, null
  br i1 %52, label %53, label %58

53:                                               ; preds = %48
  %54 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %55 = load i8*, i8** %13, align 8
  %56 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %54, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.485, i64 0, i64 0), i8* %55)
  %57 = load i8*, i8** %11, align 8
  call void @free(i8* %57) #14
  store i32 1, i32* %4, align 4
  br label %126

58:                                               ; preds = %48
  %59 = load i8*, i8** %13, align 8
  %60 = getelementptr inbounds i8, i8* %59, i32 1
  store i8* %60, i8** %13, align 8
  store i8* %60, i8** %15, align 8
  %61 = load i8*, i8** %16, align 8
  store i8 0, i8* %61, align 1
  %62 = load i8*, i8** %16, align 8
  %63 = getelementptr inbounds i8, i8* %62, i32 1
  store i8* %63, i8** %16, align 8
  store i8* %63, i8** %13, align 8
  br label %64

64:                                               ; preds = %58, %42
  %65 = load i8*, i8** %13, align 8
  %66 = call i8* @strchr(i8* %65, i32 58) #16
  store i8* %66, i8** %17, align 8
  %67 = load i8*, i8** %17, align 8
  %68 = icmp ne i8* %67, null
  br i1 %68, label %69, label %90

69:                                               ; preds = %64
  %70 = load i8*, i8** %17, align 8
  %71 = getelementptr inbounds i8, i8* %70, i64 1
  %72 = call i8* @strchr(i8* %71, i32 58) #16
  %73 = icmp eq i8* %72, null
  br i1 %73, label %77, label %74

74:                                               ; preds = %69
  %75 = load i8*, i8** %15, align 8
  %76 = icmp ne i8* %75, null
  br i1 %76, label %77, label %89

77:                                               ; preds = %74, %69
  %78 = load i8*, i8** %17, align 8
  store i8 0, i8* %78, align 1
  %79 = load i8*, i8** %17, align 8
  %80 = getelementptr inbounds i8, i8* %79, i32 1
  store i8* %80, i8** %17, align 8
  %81 = load i8*, i8** %17, align 8
  %82 = call zeroext i1 @safe_strtol(i8* %81, i32* %14)
  br i1 %82, label %88, label %83

83:                                               ; preds = %77
  %84 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %85 = load i8*, i8** %17, align 8
  %86 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %84, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.486, i64 0, i64 0), i8* %85)
  %87 = load i8*, i8** %11, align 8
  call void @free(i8* %87) #14
  store i32 1, i32* %4, align 4
  br label %126

88:                                               ; preds = %77
  br label %89

89:                                               ; preds = %88, %74
  br label %90

90:                                               ; preds = %89, %64
  %91 = load i8*, i8** %15, align 8
  %92 = icmp ne i8* %91, null
  br i1 %92, label %93, label %95

93:                                               ; preds = %90
  %94 = load i8*, i8** %15, align 8
  store i8* %94, i8** %13, align 8
  br label %95

95:                                               ; preds = %93, %90
  %96 = load i8*, i8** %13, align 8
  %97 = call i32 @strcmp(i8* %96, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.487, i64 0, i64 0)) #16
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %100

99:                                               ; preds = %95
  store i8* null, i8** %13, align 8
  br label %100

100:                                              ; preds = %99, %95
  %101 = load i8*, i8** %13, align 8
  %102 = load i32, i32* %14, align 4
  %103 = load i32, i32* %6, align 4
  %104 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %105 = load i8, i8* %8, align 1
  %106 = trunc i8 %105 to i1
  %107 = call i32 @server_socket(i8* %101, i32 %102, i32 %103, %struct._IO_FILE* %104, i1 zeroext %106)
  %108 = load i32, i32* %10, align 4
  %109 = or i32 %108, %107
  store i32 %109, i32* %10, align 4
  %110 = load i32, i32* %10, align 4
  %111 = icmp ne i32 %110, 0
  br i1 %111, label %112, label %118

112:                                              ; preds = %100
  %113 = load i32, i32* %12, align 4
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %118

115:                                              ; preds = %112
  %116 = call i32* @__errno_location() #15
  %117 = load i32, i32* %116, align 4
  store i32 %117, i32* %12, align 4
  br label %118

118:                                              ; preds = %115, %112, %100
  br label %119

119:                                              ; preds = %118
  %120 = call i8* @strtok_r(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.484, i64 0, i64 0), i8** %9) #14
  store i8* %120, i8** %13, align 8
  br label %39, !llvm.loop !35

121:                                              ; preds = %39
  %122 = load i8*, i8** %11, align 8
  call void @free(i8* %122) #14
  %123 = load i32, i32* %12, align 4
  %124 = call i32* @__errno_location() #15
  store i32 %123, i32* %124, align 4
  %125 = load i32, i32* %10, align 4
  store i32 %125, i32* %4, align 4
  br label %126

126:                                              ; preds = %121, %83, %53, %33, %20
  %127 = load i32, i32* %4, align 4
  ret i32 %127
}

declare dso_local i32 @fclose(%struct._IO_FILE*) #3

; Function Attrs: nounwind
declare dso_local i32 @rename(i8*, i8*) #2

declare dso_local i32 @usleep(i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @save_pid(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct._IO_FILE*, align 8
  %4 = alloca [1024 x i8], align 16
  %5 = alloca i32, align 4
  %6 = alloca [1024 x i8], align 16
  store i8* %0, i8** %2, align 8
  %7 = load i8*, i8** %2, align 8
  %8 = call i32 @access(i8* %7, i32 0) #14
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %35

10:                                               ; preds = %1
  %11 = load i8*, i8** %2, align 8
  %12 = call %struct._IO_FILE* @fopen(i8* %11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.499, i64 0, i64 0))
  store %struct._IO_FILE* %12, %struct._IO_FILE** %3, align 8
  %13 = icmp ne %struct._IO_FILE* %12, null
  br i1 %13, label %14, label %34

14:                                               ; preds = %10
  %15 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i64 0, i64 0
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %17 = call i8* @fgets(i8* %15, i32 1024, %struct._IO_FILE* %16)
  %18 = icmp ne i8* %17, null
  br i1 %18, label %19, label %31

19:                                               ; preds = %14
  %20 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i64 0, i64 0
  %21 = call zeroext i1 @safe_strtoul(i8* %20, i32* %5)
  br i1 %21, label %22, label %30

22:                                               ; preds = %19
  %23 = load i32, i32* %5, align 4
  %24 = call i32 @kill(i32 %23, i32 0) #14
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %30

26:                                               ; preds = %22
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %28 = load i32, i32* %5, align 4
  %29 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %27, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.500, i64 0, i64 0), i32 %28)
  br label %30

30:                                               ; preds = %26, %22, %19
  br label %31

31:                                               ; preds = %30, %14
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %33 = call i32 @fclose(%struct._IO_FILE* %32)
  br label %34

34:                                               ; preds = %31, %10
  br label %35

35:                                               ; preds = %34, %1
  %36 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 0
  %37 = load i8*, i8** %2, align 8
  %38 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %36, i64 1024, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.501, i64 0, i64 0), i8* %37) #14
  %39 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 0
  %40 = call %struct._IO_FILE* @fopen(i8* %39, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.502, i64 0, i64 0))
  store %struct._IO_FILE* %40, %struct._IO_FILE** %3, align 8
  %41 = icmp eq %struct._IO_FILE* %40, null
  br i1 %41, label %42, label %44

42:                                               ; preds = %35
  %43 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 0
  call void (i8*, ...) @vperror(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.503, i64 0, i64 0), i8* %43)
  br label %62

44:                                               ; preds = %35
  %45 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %46 = call i32 @getpid() #14
  %47 = sext i32 %46 to i64
  %48 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %45, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.504, i64 0, i64 0), i64 %47)
  %49 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %50 = call i32 @fclose(%struct._IO_FILE* %49)
  %51 = icmp eq i32 %50, -1
  br i1 %51, label %52, label %54

52:                                               ; preds = %44
  %53 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 0
  call void (i8*, ...) @vperror(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.505, i64 0, i64 0), i8* %53)
  br label %54

54:                                               ; preds = %52, %44
  %55 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 0
  %56 = load i8*, i8** %2, align 8
  %57 = call i32 @rename(i8* %55, i8* %56) #14
  %58 = icmp ne i32 %57, 0
  br i1 %58, label %59, label %62

59:                                               ; preds = %54
  %60 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 0
  %61 = load i8*, i8** %2, align 8
  call void (i8*, ...) @vperror(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.506, i64 0, i64 0), i8* %60, i8* %61)
  br label %62

62:                                               ; preds = %42, %59, %54
  ret void
}

declare dso_local i32 @event_base_loop(%struct.event_base*, i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @remove_pidfile(i8* %0) #0 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %5, label %6

5:                                                ; preds = %1
  br label %12

6:                                                ; preds = %1
  %7 = load i8*, i8** %2, align 8
  %8 = call i32 @unlink(i8* %7) #14
  %9 = icmp ne i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  %11 = load i8*, i8** %2, align 8
  call void (i8*, ...) @vperror(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.507, i64 0, i64 0), i8* %11)
  br label %12

12:                                               ; preds = %5, %10, %6
  ret void
}

declare dso_local void @event_base_free(%struct.event_base*) #3

; Function Attrs: nounwind
declare dso_local i32 @unlink(i8*) #2

; Function Attrs: nounwind
declare dso_local i32 @access(i8*, i32) #2

declare dso_local i8* @fgets(i8*, i32, %struct._IO_FILE*) #3

; Function Attrs: nounwind
declare dso_local i32 @kill(i32, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @server_socket(i8* %0, i32 %1, i32 %2, %struct._IO_FILE* %3, i1 zeroext %4) #0 {
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %struct._IO_FILE*, align 8
  %11 = alloca i8, align 1
  %12 = alloca i32, align 4
  %13 = alloca %struct.timezone, align 4
  %14 = alloca %struct.addrinfo*, align 8
  %15 = alloca %struct.addrinfo*, align 8
  %16 = alloca %struct.addrinfo, align 8
  %17 = alloca [32 x i8], align 16
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca %struct.conn*, align 8
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca %union.__SOCKADDR_ARG, align 8
  %25 = alloca %union.anon.29, align 4
  %26 = alloca i32, align 4
  %27 = alloca %union.__SOCKADDR_ARG, align 8
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  store i8* %0, i8** %7, align 8
  store i32 %1, i32* %8, align 4
  store i32 %2, i32* %9, align 4
  store %struct._IO_FILE* %3, %struct._IO_FILE** %10, align 8
  %30 = zext i1 %4 to i8
  store i8 %30, i8* %11, align 1
  %31 = bitcast %struct.timezone* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %31, i8 0, i64 8, i1 false)
  %32 = bitcast %struct.addrinfo* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 48, i1 false)
  %33 = bitcast i8* %32 to %struct.addrinfo*
  %34 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %33, i32 0, i32 0
  store i32 1, i32* %34, align 8
  store i32 0, i32* %19, align 4
  store i32 1, i32* %20, align 4
  %35 = load i32, i32* %9, align 4
  %36 = icmp eq i32 %35, 2
  %37 = zext i1 %36 to i64
  %38 = select i1 %36, i32 2, i32 1
  %39 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %16, i32 0, i32 2
  store i32 %38, i32* %39, align 8
  %40 = load i32, i32* %8, align 4
  %41 = icmp eq i32 %40, -1
  br i1 %41, label %42, label %43

42:                                               ; preds = %5
  store i32 0, i32* %8, align 4
  br label %43

43:                                               ; preds = %42, %5
  %44 = getelementptr inbounds [32 x i8], [32 x i8]* %17, i64 0, i64 0
  %45 = load i32, i32* %8, align 4
  %46 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %44, i64 32, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33, i64 0, i64 0), i32 %45) #14
  %47 = load i8*, i8** %7, align 8
  %48 = getelementptr inbounds [32 x i8], [32 x i8]* %17, i64 0, i64 0
  %49 = call i32 @getaddrinfo(i8* %47, i8* %48, %struct.addrinfo* %16, %struct.addrinfo** %14)
  store i32 %49, i32* %18, align 4
  %50 = load i32, i32* %18, align 4
  %51 = icmp ne i32 %50, 0
  br i1 %51, label %52, label %62

52:                                               ; preds = %43
  %53 = load i32, i32* %18, align 4
  %54 = icmp ne i32 %53, -11
  br i1 %54, label %55, label %60

55:                                               ; preds = %52
  %56 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %57 = load i32, i32* %18, align 4
  %58 = call i8* @gai_strerror(i32 %57) #14
  %59 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %56, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.488, i64 0, i64 0), i8* %58)
  br label %61

60:                                               ; preds = %52
  call void @perror(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.489, i64 0, i64 0))
  br label %61

61:                                               ; preds = %60, %55
  store i32 1, i32* %6, align 4
  br label %286

62:                                               ; preds = %43
  %63 = load %struct.addrinfo*, %struct.addrinfo** %14, align 8
  store %struct.addrinfo* %63, %struct.addrinfo** %15, align 8
  br label %64

64:                                               ; preds = %277, %62
  %65 = load %struct.addrinfo*, %struct.addrinfo** %15, align 8
  %66 = icmp ne %struct.addrinfo* %65, null
  br i1 %66, label %67, label %281

67:                                               ; preds = %64
  %68 = load %struct.addrinfo*, %struct.addrinfo** %15, align 8
  %69 = call i32 @new_socket(%struct.addrinfo* %68)
  store i32 %69, i32* %12, align 4
  %70 = icmp eq i32 %69, -1
  br i1 %70, label %71, label %77

71:                                               ; preds = %67
  %72 = call i32* @__errno_location() #15
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, 24
  br i1 %74, label %75, label %76

75:                                               ; preds = %71
  call void @perror(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.490, i64 0, i64 0))
  call void @exit(i32 71) #17
  unreachable

76:                                               ; preds = %71
  br label %277

77:                                               ; preds = %67
  %78 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 72), align 4
  %79 = icmp ne i32 %78, 0
  br i1 %79, label %80, label %90

80:                                               ; preds = %77
  store i32 4, i32* %22, align 4
  %81 = load i32, i32* %12, align 4
  %82 = bitcast i32* %23 to i8*
  %83 = call i32 @getsockopt(i32 %81, i32 1, i32 56, i8* %82, i32* %22) #14
  store i32 %83, i32* %18, align 4
  %84 = load i32, i32* %18, align 4
  %85 = icmp ne i32 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %80
  %87 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %88 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %87, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.491, i64 0, i64 0))
  call void @exit(i32 1) #17
  unreachable

89:                                               ; preds = %80
  br label %90

90:                                               ; preds = %89, %77
  %91 = load %struct.addrinfo*, %struct.addrinfo** %15, align 8
  %92 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %91, i32 0, i32 1
  %93 = load i32, i32* %92, align 4
  %94 = icmp eq i32 %93, 10
  br i1 %94, label %95, label %105

95:                                               ; preds = %90
  %96 = load i32, i32* %12, align 4
  %97 = bitcast i32* %20 to i8*
  %98 = call i32 @setsockopt(i32 %96, i32 41, i32 26, i8* %97, i32 4) #14
  store i32 %98, i32* %18, align 4
  %99 = load i32, i32* %18, align 4
  %100 = icmp ne i32 %99, 0
  br i1 %100, label %101, label %104

101:                                              ; preds = %95
  call void @perror(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.492, i64 0, i64 0))
  %102 = load i32, i32* %12, align 4
  %103 = call i32 @close(i32 %102)
  br label %277

104:                                              ; preds = %95
  br label %105

105:                                              ; preds = %104, %90
  %106 = load i32, i32* %12, align 4
  %107 = bitcast i32* %20 to i8*
  %108 = call i32 @setsockopt(i32 %106, i32 1, i32 2, i8* %107, i32 4) #14
  %109 = load i32, i32* %9, align 4
  %110 = icmp eq i32 %109, 2
  br i1 %110, label %111, label %113

111:                                              ; preds = %105
  %112 = load i32, i32* %12, align 4
  call void @maximize_sndbuf(i32 %112)
  br label %135

113:                                              ; preds = %105
  %114 = load i32, i32* %12, align 4
  %115 = bitcast i32* %20 to i8*
  %116 = call i32 @setsockopt(i32 %114, i32 1, i32 9, i8* %115, i32 4) #14
  store i32 %116, i32* %18, align 4
  %117 = load i32, i32* %18, align 4
  %118 = icmp ne i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %113
  call void @perror(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.492, i64 0, i64 0))
  br label %120

120:                                              ; preds = %119, %113
  %121 = load i32, i32* %12, align 4
  %122 = bitcast %struct.timezone* %13 to i8*
  %123 = call i32 @setsockopt(i32 %121, i32 1, i32 13, i8* %122, i32 8) #14
  store i32 %123, i32* %18, align 4
  %124 = load i32, i32* %18, align 4
  %125 = icmp ne i32 %124, 0
  br i1 %125, label %126, label %127

126:                                              ; preds = %120
  call void @perror(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.492, i64 0, i64 0))
  br label %127

127:                                              ; preds = %126, %120
  %128 = load i32, i32* %12, align 4
  %129 = bitcast i32* %20 to i8*
  %130 = call i32 @setsockopt(i32 %128, i32 6, i32 1, i8* %129, i32 4) #14
  store i32 %130, i32* %18, align 4
  %131 = load i32, i32* %18, align 4
  %132 = icmp ne i32 %131, 0
  br i1 %132, label %133, label %134

133:                                              ; preds = %127
  call void @perror(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.492, i64 0, i64 0))
  br label %134

134:                                              ; preds = %133, %127
  br label %135

135:                                              ; preds = %134, %111
  %136 = load i32, i32* %12, align 4
  %137 = bitcast %union.__SOCKADDR_ARG* %24 to %struct.sockaddr**
  %138 = load %struct.addrinfo*, %struct.addrinfo** %15, align 8
  %139 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %138, i32 0, i32 5
  %140 = load %struct.sockaddr*, %struct.sockaddr** %139, align 8
  store %struct.sockaddr* %140, %struct.sockaddr** %137, align 8
  %141 = load %struct.addrinfo*, %struct.addrinfo** %15, align 8
  %142 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %141, i32 0, i32 4
  %143 = load i32, i32* %142, align 8
  %144 = getelementptr inbounds %union.__SOCKADDR_ARG, %union.__SOCKADDR_ARG* %24, i32 0, i32 0
  %145 = load %struct.sockaddr*, %struct.sockaddr** %144, align 8
  %146 = call i32 @bind(i32 %136, %struct.sockaddr* %145, i32 %143) #14
  %147 = icmp eq i32 %146, -1
  br i1 %147, label %148, label %159

148:                                              ; preds = %135
  %149 = call i32* @__errno_location() #15
  %150 = load i32, i32* %149, align 4
  %151 = icmp ne i32 %150, 98
  br i1 %151, label %152, label %156

152:                                              ; preds = %148
  call void @perror(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.479, i64 0, i64 0))
  %153 = load i32, i32* %12, align 4
  %154 = call i32 @close(i32 %153)
  %155 = load %struct.addrinfo*, %struct.addrinfo** %14, align 8
  call void @freeaddrinfo(%struct.addrinfo* %155) #14
  store i32 1, i32* %6, align 4
  br label %286

156:                                              ; preds = %148
  %157 = load i32, i32* %12, align 4
  %158 = call i32 @close(i32 %157)
  br label %277

159:                                              ; preds = %135
  %160 = load i32, i32* %19, align 4
  %161 = add nsw i32 %160, 1
  store i32 %161, i32* %19, align 4
  %162 = load i32, i32* %9, align 4
  %163 = icmp eq i32 %162, 2
  br i1 %163, label %173, label %164

164:                                              ; preds = %159
  %165 = load i32, i32* %12, align 4
  %166 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 21), align 8
  %167 = call i32 @listen(i32 %165, i32 %166) #14
  %168 = icmp eq i32 %167, -1
  br i1 %168, label %169, label %173

169:                                              ; preds = %164
  call void @perror(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.480, i64 0, i64 0))
  %170 = load i32, i32* %12, align 4
  %171 = call i32 @close(i32 %170)
  %172 = load %struct.addrinfo*, %struct.addrinfo** %14, align 8
  call void @freeaddrinfo(%struct.addrinfo* %172) #14
  store i32 1, i32* %6, align 4
  br label %286

173:                                              ; preds = %164, %159
  %174 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  %175 = icmp ne %struct._IO_FILE* %174, null
  br i1 %175, label %176, label %234

176:                                              ; preds = %173
  %177 = load %struct.addrinfo*, %struct.addrinfo** %15, align 8
  %178 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %177, i32 0, i32 5
  %179 = load %struct.sockaddr*, %struct.sockaddr** %178, align 8
  %180 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %179, i32 0, i32 0
  %181 = load i16, i16* %180, align 2
  %182 = zext i16 %181 to i32
  %183 = icmp eq i32 %182, 2
  br i1 %183, label %192, label %184

184:                                              ; preds = %176
  %185 = load %struct.addrinfo*, %struct.addrinfo** %15, align 8
  %186 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %185, i32 0, i32 5
  %187 = load %struct.sockaddr*, %struct.sockaddr** %186, align 8
  %188 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %187, i32 0, i32 0
  %189 = load i16, i16* %188, align 2
  %190 = zext i16 %189 to i32
  %191 = icmp eq i32 %190, 10
  br i1 %191, label %192, label %234

192:                                              ; preds = %184, %176
  store i32 28, i32* %26, align 4
  %193 = load i32, i32* %12, align 4
  %194 = bitcast %union.__SOCKADDR_ARG* %27 to %struct.sockaddr**
  %195 = bitcast %union.anon.29* %25 to %struct.sockaddr*
  store %struct.sockaddr* %195, %struct.sockaddr** %194, align 8
  %196 = getelementptr inbounds %union.__SOCKADDR_ARG, %union.__SOCKADDR_ARG* %27, i32 0, i32 0
  %197 = load %struct.sockaddr*, %struct.sockaddr** %196, align 8
  %198 = call i32 @getsockname(i32 %193, %struct.sockaddr* %197, i32* %26) #14
  %199 = icmp eq i32 %198, 0
  br i1 %199, label %200, label %233

200:                                              ; preds = %192
  %201 = load %struct.addrinfo*, %struct.addrinfo** %15, align 8
  %202 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %201, i32 0, i32 5
  %203 = load %struct.sockaddr*, %struct.sockaddr** %202, align 8
  %204 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %203, i32 0, i32 0
  %205 = load i16, i16* %204, align 2
  %206 = zext i16 %205 to i32
  %207 = icmp eq i32 %206, 2
  br i1 %207, label %208, label %220

208:                                              ; preds = %200
  %209 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  %210 = load i32, i32* %9, align 4
  %211 = icmp eq i32 %210, 2
  %212 = zext i1 %211 to i64
  %213 = select i1 %211, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.196, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.494, i64 0, i64 0)
  %214 = bitcast %union.anon.29* %25 to %struct.sockaddr_in*
  %215 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %214, i32 0, i32 1
  %216 = load i16, i16* %215, align 2
  %217 = call zeroext i16 @ntohs(i16 zeroext %216) #15
  %218 = zext i16 %217 to i32
  %219 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %209, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.493, i64 0, i64 0), i8* %213, i32 %218)
  br label %232

220:                                              ; preds = %200
  %221 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  %222 = load i32, i32* %9, align 4
  %223 = icmp eq i32 %222, 2
  %224 = zext i1 %223 to i64
  %225 = select i1 %223, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.196, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.494, i64 0, i64 0)
  %226 = bitcast %union.anon.29* %25 to %struct.sockaddr_in6*
  %227 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %226, i32 0, i32 1
  %228 = load i16, i16* %227, align 2
  %229 = call zeroext i16 @ntohs(i16 zeroext %228) #15
  %230 = zext i16 %229 to i32
  %231 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %221, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.495, i64 0, i64 0), i8* %225, i32 %230)
  br label %232

232:                                              ; preds = %220, %208
  br label %233

233:                                              ; preds = %232, %192
  br label %234

234:                                              ; preds = %233, %184, %173
  br label %235

235:                                              ; preds = %234
  %236 = load i32, i32* %9, align 4
  %237 = icmp eq i32 %236, 2
  br i1 %237, label %238, label %262

238:                                              ; preds = %235
  store i32 0, i32* %28, align 4
  br label %239

239:                                              ; preds = %258, %238
  %240 = load i32, i32* %28, align 4
  %241 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 15), align 8
  %242 = icmp slt i32 %240, %241
  br i1 %242, label %243, label %261

243:                                              ; preds = %239
  %244 = load i32, i32* %28, align 4
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %246, label %248

246:                                              ; preds = %243
  %247 = load i32, i32* %12, align 4
  store i32 %247, i32* %29, align 4
  br label %255

248:                                              ; preds = %243
  %249 = load i32, i32* %12, align 4
  %250 = call i32 @dup(i32 %249) #14
  store i32 %250, i32* %29, align 4
  %251 = load i32, i32* %29, align 4
  %252 = icmp slt i32 %251, 0
  br i1 %252, label %253, label %254

253:                                              ; preds = %248
  call void @perror(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.496, i64 0, i64 0))
  call void @exit(i32 1) #17
  unreachable

254:                                              ; preds = %248
  br label %255

255:                                              ; preds = %254, %246
  %256 = load i32, i32* %29, align 4
  %257 = load i32, i32* %9, align 4
  call void @dispatch_conn_new(i32 %256, i32 3, i32 18, i32 65536, i32 %257, i8* null)
  br label %258

258:                                              ; preds = %255
  %259 = load i32, i32* %28, align 4
  %260 = add nsw i32 %259, 1
  store i32 %260, i32* %28, align 4
  br label %239, !llvm.loop !36

261:                                              ; preds = %239
  br label %276

262:                                              ; preds = %235
  %263 = load i32, i32* %12, align 4
  %264 = load i32, i32* %9, align 4
  %265 = load %struct.event_base*, %struct.event_base** @main_base, align 8
  %266 = call %struct.conn* @conn_new(i32 %263, i32 0, i32 18, i32 1, i32 %264, %struct.event_base* %265, i8* null)
  store %struct.conn* %266, %struct.conn** %21, align 8
  %267 = icmp ne %struct.conn* %266, null
  br i1 %267, label %271, label %268

268:                                              ; preds = %262
  %269 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %270 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %269, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.481, i64 0, i64 0))
  call void @exit(i32 1) #17
  unreachable

271:                                              ; preds = %262
  %272 = load %struct.conn*, %struct.conn** @listen_conn, align 8
  %273 = load %struct.conn*, %struct.conn** %21, align 8
  %274 = getelementptr inbounds %struct.conn, %struct.conn* %273, i32 0, i32 41
  store %struct.conn* %272, %struct.conn** %274, align 8
  %275 = load %struct.conn*, %struct.conn** %21, align 8
  store %struct.conn* %275, %struct.conn** @listen_conn, align 8
  br label %276

276:                                              ; preds = %271, %261
  br label %277

277:                                              ; preds = %276, %156, %101, %76
  %278 = load %struct.addrinfo*, %struct.addrinfo** %15, align 8
  %279 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %278, i32 0, i32 7
  %280 = load %struct.addrinfo*, %struct.addrinfo** %279, align 8
  store %struct.addrinfo* %280, %struct.addrinfo** %15, align 8
  br label %64, !llvm.loop !37

281:                                              ; preds = %64
  %282 = load %struct.addrinfo*, %struct.addrinfo** %14, align 8
  call void @freeaddrinfo(%struct.addrinfo* %282) #14
  %283 = load i32, i32* %19, align 4
  %284 = icmp eq i32 %283, 0
  %285 = zext i1 %284 to i32
  store i32 %285, i32* %6, align 4
  br label %286

286:                                              ; preds = %281, %169, %152, %61
  %287 = load i32, i32* %6, align 4
  ret i32 %287
}

; Function Attrs: nounwind
declare dso_local i8* @strtok_r(i8*, i8*, i8**) #2

declare dso_local i32 @getaddrinfo(i8*, i8*, %struct.addrinfo*, %struct.addrinfo**) #3

; Function Attrs: nounwind
declare dso_local i8* @gai_strerror(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @new_socket(%struct.addrinfo* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.addrinfo*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store %struct.addrinfo* %0, %struct.addrinfo** %3, align 8
  %6 = load %struct.addrinfo*, %struct.addrinfo** %3, align 8
  %7 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %6, i32 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = load %struct.addrinfo*, %struct.addrinfo** %3, align 8
  %10 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %9, i32 0, i32 2
  %11 = load i32, i32* %10, align 8
  %12 = load %struct.addrinfo*, %struct.addrinfo** %3, align 8
  %13 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %12, i32 0, i32 3
  %14 = load i32, i32* %13, align 4
  %15 = call i32 @socket(i32 %8, i32 %11, i32 %14) #14
  store i32 %15, i32* %4, align 4
  %16 = icmp eq i32 %15, -1
  br i1 %16, label %17, label %18

17:                                               ; preds = %1
  store i32 -1, i32* %2, align 4
  br label %33

18:                                               ; preds = %1
  %19 = load i32, i32* %4, align 4
  %20 = call i32 (i32, i32, ...) @fcntl(i32 %19, i32 3, i32 0)
  store i32 %20, i32* %5, align 4
  %21 = icmp slt i32 %20, 0
  br i1 %21, label %28, label %22

22:                                               ; preds = %18
  %23 = load i32, i32* %4, align 4
  %24 = load i32, i32* %5, align 4
  %25 = or i32 %24, 2048
  %26 = call i32 (i32, i32, ...) @fcntl(i32 %23, i32 4, i32 %25)
  %27 = icmp slt i32 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %22, %18
  call void @perror(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.393, i64 0, i64 0))
  %29 = load i32, i32* %4, align 4
  %30 = call i32 @close(i32 %29)
  store i32 -1, i32* %2, align 4
  br label %33

31:                                               ; preds = %22
  %32 = load i32, i32* %4, align 4
  store i32 %32, i32* %2, align 4
  br label %33

33:                                               ; preds = %31, %28, %17
  %34 = load i32, i32* %2, align 4
  ret i32 %34
}

; Function Attrs: nounwind
declare dso_local i32 @getsockopt(i32, i32, i32, i8*, i32*) #2

; Function Attrs: nounwind
declare dso_local i32 @setsockopt(i32, i32, i32, i8*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @maximize_sndbuf(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  store i32 4, i32* %3, align 4
  store i32 0, i32* %4, align 4
  %9 = load i32, i32* %2, align 4
  %10 = bitcast i32* %8 to i8*
  %11 = call i32 @getsockopt(i32 %9, i32 1, i32 7, i8* %10, i32* %3) #14
  %12 = icmp ne i32 %11, 0
  br i1 %12, label %13, label %18

13:                                               ; preds = %1
  %14 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %15 = icmp sgt i32 %14, 0
  br i1 %15, label %16, label %17

16:                                               ; preds = %13
  call void @perror(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.497, i64 0, i64 0))
  br label %17

17:                                               ; preds = %16, %13
  br label %51

18:                                               ; preds = %1
  %19 = load i32, i32* %8, align 4
  store i32 %19, i32* %5, align 4
  store i32 268435456, i32* %6, align 4
  br label %20

20:                                               ; preds = %41, %18
  %21 = load i32, i32* %5, align 4
  %22 = load i32, i32* %6, align 4
  %23 = icmp sle i32 %21, %22
  br i1 %23, label %24, label %42

24:                                               ; preds = %20
  %25 = load i32, i32* %5, align 4
  %26 = load i32, i32* %6, align 4
  %27 = add nsw i32 %25, %26
  %28 = udiv i32 %27, 2
  store i32 %28, i32* %7, align 4
  %29 = load i32, i32* %2, align 4
  %30 = bitcast i32* %7 to i8*
  %31 = load i32, i32* %3, align 4
  %32 = call i32 @setsockopt(i32 %29, i32 1, i32 7, i8* %30, i32 %31) #14
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %38

34:                                               ; preds = %24
  %35 = load i32, i32* %7, align 4
  store i32 %35, i32* %4, align 4
  %36 = load i32, i32* %7, align 4
  %37 = add nsw i32 %36, 1
  store i32 %37, i32* %5, align 4
  br label %41

38:                                               ; preds = %24
  %39 = load i32, i32* %7, align 4
  %40 = sub nsw i32 %39, 1
  store i32 %40, i32* %6, align 4
  br label %41

41:                                               ; preds = %38, %34
  br label %20, !llvm.loop !38

42:                                               ; preds = %20
  %43 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %44 = icmp sgt i32 %43, 1
  br i1 %44, label %45, label %51

45:                                               ; preds = %42
  %46 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %47 = load i32, i32* %2, align 4
  %48 = load i32, i32* %8, align 4
  %49 = load i32, i32* %4, align 4
  %50 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %46, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.498, i64 0, i64 0), i32 %47, i32 %48, i32 %49)
  br label %51

51:                                               ; preds = %17, %45, %42
  ret void
}

; Function Attrs: nounwind
declare dso_local i32 @bind(i32, %struct.sockaddr*, i32) #2

; Function Attrs: nounwind
declare dso_local void @freeaddrinfo(%struct.addrinfo*) #2

; Function Attrs: nounwind
declare dso_local i32 @dup(i32) #2

; Function Attrs: nounwind
declare dso_local i32 @socket(i32, i32, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @new_socket_unix() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = call i32 @socket(i32 1, i32 1, i32 0) #14
  store i32 %4, i32* %2, align 4
  %5 = icmp eq i32 %4, -1
  br i1 %5, label %6, label %7

6:                                                ; preds = %0
  call void @perror(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.482, i64 0, i64 0))
  store i32 -1, i32* %1, align 4
  br label %22

7:                                                ; preds = %0
  %8 = load i32, i32* %2, align 4
  %9 = call i32 (i32, i32, ...) @fcntl(i32 %8, i32 3, i32 0)
  store i32 %9, i32* %3, align 4
  %10 = icmp slt i32 %9, 0
  br i1 %10, label %17, label %11

11:                                               ; preds = %7
  %12 = load i32, i32* %2, align 4
  %13 = load i32, i32* %3, align 4
  %14 = or i32 %13, 2048
  %15 = call i32 (i32, i32, ...) @fcntl(i32 %12, i32 4, i32 %14)
  %16 = icmp slt i32 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %11, %7
  call void @perror(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.393, i64 0, i64 0))
  %18 = load i32, i32* %2, align 4
  %19 = call i32 @close(i32 %18)
  store i32 -1, i32* %1, align 4
  br label %22

20:                                               ; preds = %11
  %21 = load i32, i32* %2, align 4
  store i32 %21, i32* %1, align 4
  br label %22

22:                                               ; preds = %20, %17, %6
  %23 = load i32, i32* %1, align 4
  ret i32 %23
}

; Function Attrs: nounwind
declare dso_local i32 @lstat(i8*, %struct.stat*) #2

; Function Attrs: nounwind
declare dso_local i32 @umask(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @conn_timeout_thread(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  %4 = alloca %struct.conn*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct.timeval, align 8
  %10 = alloca %struct.timeval, align 8
  store i8* %0, i8** %2, align 8
  %11 = load i32, i32* @max_fds, align 4
  %12 = sdiv i32 %11, 100
  store i32 %12, i32* %7, align 4
  %13 = load i32, i32* %7, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %16

15:                                               ; preds = %1
  store i32 100, i32* %7, align 4
  br label %16

16:                                               ; preds = %15, %1
  %17 = load i32, i32* %7, align 4
  %18 = sdiv i32 1000000, %17
  store i32 %18, i32* %8, align 4
  %19 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @conn_timeout_lock) #14
  br label %20

20:                                               ; preds = %121, %16
  %21 = load i32, i32* @do_run_conn_timeout_thread, align 4
  %22 = icmp ne i32 %21, 0
  br i1 %22, label %23, label %131

23:                                               ; preds = %20
  %24 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %25 = icmp sgt i32 %24, 2
  br i1 %25, label %26, label %29

26:                                               ; preds = %23
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %28 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %27, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.476, i64 0, i64 0))
  br label %29

29:                                               ; preds = %26, %23
  %30 = load volatile i32, i32* @current_time, align 4
  store i32 %30, i32* %5, align 4
  store i32 0, i32* %3, align 4
  br label %31

31:                                               ; preds = %101, %29
  %32 = load i32, i32* %3, align 4
  %33 = load i32, i32* @max_fds, align 4
  %34 = icmp slt i32 %32, %33
  br i1 %34, label %35, label %104

35:                                               ; preds = %31
  %36 = load i32, i32* %3, align 4
  %37 = srem i32 %36, 100
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %49

39:                                               ; preds = %35
  %40 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %41 = icmp sgt i32 %40, 2
  br i1 %41, label %42, label %46

42:                                               ; preds = %39
  %43 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %44 = load i32, i32* %8, align 4
  %45 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %43, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.477, i64 0, i64 0), i32 %44)
  br label %46

46:                                               ; preds = %42, %39
  %47 = load i32, i32* %8, align 4
  %48 = call i32 @usleep(i32 %47)
  br label %49

49:                                               ; preds = %46, %35
  %50 = load %struct.conn**, %struct.conn*** @conns, align 8
  %51 = load i32, i32* %3, align 4
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds %struct.conn*, %struct.conn** %50, i64 %52
  %54 = load %struct.conn*, %struct.conn** %53, align 8
  %55 = icmp ne %struct.conn* %54, null
  br i1 %55, label %57, label %56

56:                                               ; preds = %49
  br label %101

57:                                               ; preds = %49
  %58 = load %struct.conn**, %struct.conn*** @conns, align 8
  %59 = load i32, i32* %3, align 4
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds %struct.conn*, %struct.conn** %58, i64 %60
  %62 = load %struct.conn*, %struct.conn** %61, align 8
  store %struct.conn* %62, %struct.conn** %4, align 8
  %63 = load %struct.conn*, %struct.conn** %4, align 8
  %64 = getelementptr inbounds %struct.conn, %struct.conn* %63, i32 0, i32 29
  %65 = load i32, i32* %64, align 8
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %68, label %67

67:                                               ; preds = %57
  br label %101

68:                                               ; preds = %57
  %69 = load %struct.conn*, %struct.conn** %4, align 8
  %70 = getelementptr inbounds %struct.conn, %struct.conn* %69, i32 0, i32 9
  %71 = load i32, i32* %70, align 4
  %72 = icmp ne i32 %71, 1
  br i1 %72, label %73, label %79

73:                                               ; preds = %68
  %74 = load %struct.conn*, %struct.conn** %4, align 8
  %75 = getelementptr inbounds %struct.conn, %struct.conn* %74, i32 0, i32 9
  %76 = load i32, i32* %75, align 4
  %77 = icmp ne i32 %76, 3
  br i1 %77, label %78, label %79

78:                                               ; preds = %73
  br label %101

79:                                               ; preds = %73, %68
  %80 = load volatile i32, i32* @current_time, align 4
  %81 = load %struct.conn*, %struct.conn** %4, align 8
  %82 = getelementptr inbounds %struct.conn, %struct.conn* %81, i32 0, i32 11
  %83 = load i32, i32* %82, align 4
  %84 = sub i32 %80, %83
  %85 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 50), align 4
  %86 = icmp ugt i32 %84, %85
  br i1 %86, label %87, label %89

87:                                               ; preds = %79
  %88 = load %struct.conn*, %struct.conn** %4, align 8
  call void @timeout_conn(%struct.conn* %88)
  br label %100

89:                                               ; preds = %79
  %90 = load %struct.conn*, %struct.conn** %4, align 8
  %91 = getelementptr inbounds %struct.conn, %struct.conn* %90, i32 0, i32 11
  %92 = load i32, i32* %91, align 4
  %93 = load i32, i32* %5, align 4
  %94 = icmp ult i32 %92, %93
  br i1 %94, label %95, label %99

95:                                               ; preds = %89
  %96 = load %struct.conn*, %struct.conn** %4, align 8
  %97 = getelementptr inbounds %struct.conn, %struct.conn* %96, i32 0, i32 11
  %98 = load i32, i32* %97, align 4
  store i32 %98, i32* %5, align 4
  br label %99

99:                                               ; preds = %95, %89
  br label %100

100:                                              ; preds = %99, %87
  br label %101

101:                                              ; preds = %100, %78, %67, %56
  %102 = load i32, i32* %3, align 4
  %103 = add nsw i32 %102, 1
  store i32 %103, i32* %3, align 4
  br label %31, !llvm.loop !39

104:                                              ; preds = %31
  %105 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 50), align 4
  %106 = load volatile i32, i32* @current_time, align 4
  %107 = load i32, i32* %5, align 4
  %108 = sub i32 %106, %107
  %109 = sub i32 %105, %108
  %110 = add i32 %109, 1
  store i32 %110, i32* %6, align 4
  %111 = load i32, i32* %6, align 4
  %112 = icmp sle i32 %111, 0
  br i1 %112, label %113, label %114

113:                                              ; preds = %104
  store i32 1, i32* %6, align 4
  br label %114

114:                                              ; preds = %113, %104
  %115 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %116 = icmp sgt i32 %115, 2
  br i1 %116, label %117, label %121

117:                                              ; preds = %114
  %118 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %119 = load i32, i32* %6, align 4
  %120 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %118, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.478, i64 0, i64 0), i32 %119)
  br label %121

121:                                              ; preds = %117, %114
  %122 = call i32 @gettimeofday(%struct.timeval* %9, %struct.timezone* null) #14
  %123 = getelementptr inbounds %struct.timeval, %struct.timeval* %9, i32 0, i32 0
  %124 = load i64, i64* %123, align 8
  %125 = load i32, i32* %6, align 4
  %126 = sext i32 %125 to i64
  %127 = add nsw i64 %124, %126
  %128 = getelementptr inbounds %struct.timeval, %struct.timeval* %10, i32 0, i32 0
  store i64 %127, i64* %128, align 8
  %129 = getelementptr inbounds %struct.timeval, %struct.timeval* %10, i32 0, i32 1
  store i64 0, i64* %129, align 8
  %130 = call i32 @pthread_cond_timedwait(%union.pthread_cond_t* @conn_timeout_cond, %union.pthread_mutex_t* @conn_timeout_lock, %struct.timeval* %10)
  br label %20, !llvm.loop !40

131:                                              ; preds = %20
  %132 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @conn_timeout_lock) #14
  ret i8* null
}

; Function Attrs: nounwind
declare dso_local i32 @pthread_create(i64*, %union.pthread_attr_t*, i8* (i8*)*, i8*) #2

declare dso_local i32 @pthread_cond_timedwait(%union.pthread_cond_t*, %union.pthread_mutex_t*, %struct.timeval*) #3

; Function Attrs: nounwind
declare dso_local i64 @time(i64*) #2

declare dso_local i32 @open(i8*, i32, ...) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @flag_enabled_disabled(i1 zeroext %0) #0 {
  %2 = alloca i8, align 1
  %3 = zext i1 %0 to i8
  store i8 %3, i8* %2, align 1
  %4 = load i8, i8* %2, align 1
  %5 = trunc i8 %4 to i1
  %6 = zext i1 %5 to i64
  %7 = select i1 %5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.436, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.437, i64 0, i64 0)
  ret i8* %7
}

; Function Attrs: nounwind
declare dso_local i8* @strsignal(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @hash_init(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %8 [
    i32 0, label %5
    i32 1, label %6
    i32 2, label %7
  ]

5:                                                ; preds = %1
  store i32 (i8*, i64)* @jenkins_hash, i32 (i8*, i64)** @hash, align 8
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.508, i64 0, i64 0), i8** getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 40), align 8
  br label %9

6:                                                ; preds = %1
  store i32 (i8*, i64)* @MurmurHash3_x86_32, i32 (i8*, i64)** @hash, align 8
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.509, i64 0, i64 0), i8** getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 40), align 8
  br label %9

7:                                                ; preds = %1
  store i32 (i8*, i64)* @XXH3_hash, i32 (i8*, i64)** @hash, align 8
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.510, i64 0, i64 0), i8** getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 40), align 8
  br label %9

8:                                                ; preds = %1
  store i32 -1, i32* %2, align 4
  br label %10

9:                                                ; preds = %7, %6, %5
  store i32 0, i32* %2, align 4
  br label %10

10:                                               ; preds = %9, %8
  %11 = load i32, i32* %2, align 4
  ret i32 %11
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @XXH3_hash(i8* %0, i64 %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  store i8* %0, i8** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load i8*, i8** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call i64 @XXH_INLINE_XXH3_64bits(i8* %5, i64 %6)
  %8 = trunc i64 %7 to i32
  ret i32 %8
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @XXH_INLINE_XXH3_64bits(i8* %0, i64 %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  store i8* %0, i8** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load i8*, i8** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call i64 @XXH3_64bits_internal(i8* %5, i64 %6, i64 0, i8* getelementptr inbounds ([192 x i8], [192 x i8]* @XXH3_kSecret, i64 0, i64 0), i64 192, i64 (i8*, i64, i64, i8*, i64)* @XXH3_hashLong_64b_default)
  ret i64 %7
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @XXH3_hashLong_64b_default(i8* noalias %0, i64 %1, i64 %2, i8* noalias %3, i64 %4) #0 {
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i64, align 8
  store i8* %0, i8** %6, align 8
  store i64 %1, i64* %7, align 8
  store i64 %2, i64* %8, align 8
  store i8* %3, i8** %9, align 8
  store i64 %4, i64* %10, align 8
  %11 = load i64, i64* %8, align 8
  %12 = load i8*, i8** %9, align 8
  %13 = load i64, i64* %10, align 8
  %14 = load i8*, i8** %6, align 8
  %15 = load i64, i64* %7, align 8
  %16 = call i64 @XXH3_hashLong_64b_internal(i8* %14, i64 %15, i8* getelementptr inbounds ([192 x i8], [192 x i8]* @XXH3_kSecret, i64 0, i64 0), i64 192, void (i8*, i8*, i8*)* @XXH3_accumulate_512_sse2, void (i8*, i8*)* @XXH3_scrambleAcc_sse2)
  ret i64 %16
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @XXH3_64bits_internal(i8* noalias %0, i64 %1, i64 %2, i8* noalias %3, i64 %4, i64 (i8*, i64, i64, i8*, i64)* %5) #0 {
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64 (i8*, i64, i64, i8*, i64)*, align 8
  store i8* %0, i8** %8, align 8
  store i64 %1, i64* %9, align 8
  store i64 %2, i64* %10, align 8
  store i8* %3, i8** %11, align 8
  store i64 %4, i64* %12, align 8
  store i64 (i8*, i64, i64, i8*, i64)* %5, i64 (i8*, i64, i64, i8*, i64)** %13, align 8
  %14 = load i64, i64* %9, align 8
  %15 = icmp ule i64 %14, 16
  br i1 %15, label %16, label %22

16:                                               ; preds = %6
  %17 = load i8*, i8** %8, align 8
  %18 = load i64, i64* %9, align 8
  %19 = load i8*, i8** %11, align 8
  %20 = load i64, i64* %10, align 8
  %21 = call i64 @XXH3_len_0to16_64b(i8* %17, i64 %18, i8* %19, i64 %20)
  store i64 %21, i64* %7, align 8
  br label %50

22:                                               ; preds = %6
  %23 = load i64, i64* %9, align 8
  %24 = icmp ule i64 %23, 128
  br i1 %24, label %25, label %32

25:                                               ; preds = %22
  %26 = load i8*, i8** %8, align 8
  %27 = load i64, i64* %9, align 8
  %28 = load i8*, i8** %11, align 8
  %29 = load i64, i64* %12, align 8
  %30 = load i64, i64* %10, align 8
  %31 = call i64 @XXH3_len_17to128_64b(i8* %26, i64 %27, i8* %28, i64 %29, i64 %30)
  store i64 %31, i64* %7, align 8
  br label %50

32:                                               ; preds = %22
  %33 = load i64, i64* %9, align 8
  %34 = icmp ule i64 %33, 240
  br i1 %34, label %35, label %42

35:                                               ; preds = %32
  %36 = load i8*, i8** %8, align 8
  %37 = load i64, i64* %9, align 8
  %38 = load i8*, i8** %11, align 8
  %39 = load i64, i64* %12, align 8
  %40 = load i64, i64* %10, align 8
  %41 = call i64 @XXH3_len_129to240_64b(i8* %36, i64 %37, i8* %38, i64 %39, i64 %40)
  store i64 %41, i64* %7, align 8
  br label %50

42:                                               ; preds = %32
  %43 = load i64 (i8*, i64, i64, i8*, i64)*, i64 (i8*, i64, i64, i8*, i64)** %13, align 8
  %44 = load i8*, i8** %8, align 8
  %45 = load i64, i64* %9, align 8
  %46 = load i64, i64* %10, align 8
  %47 = load i8*, i8** %11, align 8
  %48 = load i64, i64* %12, align 8
  %49 = call i64 %43(i8* %44, i64 %45, i64 %46, i8* %47, i64 %48)
  store i64 %49, i64* %7, align 8
  br label %50

50:                                               ; preds = %42, %35, %25, %16
  %51 = load i64, i64* %7, align 8
  ret i64 %51
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @XXH3_len_0to16_64b(i8* %0, i64 %1, i8* %2, i64 %3) #0 {
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  store i8* %0, i8** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  store i64 %3, i64* %9, align 8
  %10 = load i64, i64* %7, align 8
  %11 = icmp ugt i64 %10, 8
  %12 = zext i1 %11 to i32
  %13 = sext i32 %12 to i64
  %14 = icmp ne i64 %13, 0
  br i1 %14, label %15, label %21

15:                                               ; preds = %4
  %16 = load i8*, i8** %6, align 8
  %17 = load i64, i64* %7, align 8
  %18 = load i8*, i8** %8, align 8
  %19 = load i64, i64* %9, align 8
  %20 = call i64 @XXH3_len_9to16_64b(i8* %16, i64 %17, i8* %18, i64 %19)
  store i64 %20, i64* %5, align 8
  br label %53

21:                                               ; preds = %4
  %22 = load i64, i64* %7, align 8
  %23 = icmp uge i64 %22, 4
  %24 = zext i1 %23 to i32
  %25 = sext i32 %24 to i64
  %26 = icmp ne i64 %25, 0
  br i1 %26, label %27, label %33

27:                                               ; preds = %21
  %28 = load i8*, i8** %6, align 8
  %29 = load i64, i64* %7, align 8
  %30 = load i8*, i8** %8, align 8
  %31 = load i64, i64* %9, align 8
  %32 = call i64 @XXH3_len_4to8_64b(i8* %28, i64 %29, i8* %30, i64 %31)
  store i64 %32, i64* %5, align 8
  br label %53

33:                                               ; preds = %21
  %34 = load i64, i64* %7, align 8
  %35 = icmp ne i64 %34, 0
  br i1 %35, label %36, label %42

36:                                               ; preds = %33
  %37 = load i8*, i8** %6, align 8
  %38 = load i64, i64* %7, align 8
  %39 = load i8*, i8** %8, align 8
  %40 = load i64, i64* %9, align 8
  %41 = call i64 @XXH3_len_1to3_64b(i8* %37, i64 %38, i8* %39, i64 %40)
  store i64 %41, i64* %5, align 8
  br label %53

42:                                               ; preds = %33
  %43 = load i64, i64* %9, align 8
  %44 = load i8*, i8** %8, align 8
  %45 = getelementptr inbounds i8, i8* %44, i64 56
  %46 = call i64 @XXH_readLE64(i8* %45)
  %47 = load i8*, i8** %8, align 8
  %48 = getelementptr inbounds i8, i8* %47, i64 64
  %49 = call i64 @XXH_readLE64(i8* %48)
  %50 = xor i64 %46, %49
  %51 = xor i64 %43, %50
  %52 = call i64 @XXH64_avalanche(i64 %51)
  store i64 %52, i64* %5, align 8
  br label %53

53:                                               ; preds = %42, %36, %27, %15
  %54 = load i64, i64* %5, align 8
  ret i64 %54
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @XXH3_len_17to128_64b(i8* noalias %0, i64 %1, i8* noalias %2, i64 %3, i64 %4) #0 {
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  store i8* %0, i8** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  store i64 %3, i64* %9, align 8
  store i64 %4, i64* %10, align 8
  %12 = load i64, i64* %9, align 8
  %13 = load i64, i64* %7, align 8
  %14 = mul i64 %13, -7046029288634856825
  store i64 %14, i64* %11, align 8
  %15 = load i64, i64* %7, align 8
  %16 = icmp ugt i64 %15, 32
  br i1 %16, label %17, label %80

17:                                               ; preds = %5
  %18 = load i64, i64* %7, align 8
  %19 = icmp ugt i64 %18, 64
  br i1 %19, label %20, label %61

20:                                               ; preds = %17
  %21 = load i64, i64* %7, align 8
  %22 = icmp ugt i64 %21, 96
  br i1 %22, label %23, label %42

23:                                               ; preds = %20
  %24 = load i8*, i8** %6, align 8
  %25 = getelementptr inbounds i8, i8* %24, i64 48
  %26 = load i8*, i8** %8, align 8
  %27 = getelementptr inbounds i8, i8* %26, i64 96
  %28 = load i64, i64* %10, align 8
  %29 = call i64 @XXH3_mix16B(i8* %25, i8* %27, i64 %28)
  %30 = load i64, i64* %11, align 8
  %31 = add i64 %30, %29
  store i64 %31, i64* %11, align 8
  %32 = load i8*, i8** %6, align 8
  %33 = load i64, i64* %7, align 8
  %34 = getelementptr inbounds i8, i8* %32, i64 %33
  %35 = getelementptr inbounds i8, i8* %34, i64 -64
  %36 = load i8*, i8** %8, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 112
  %38 = load i64, i64* %10, align 8
  %39 = call i64 @XXH3_mix16B(i8* %35, i8* %37, i64 %38)
  %40 = load i64, i64* %11, align 8
  %41 = add i64 %40, %39
  store i64 %41, i64* %11, align 8
  br label %42

42:                                               ; preds = %23, %20
  %43 = load i8*, i8** %6, align 8
  %44 = getelementptr inbounds i8, i8* %43, i64 32
  %45 = load i8*, i8** %8, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 64
  %47 = load i64, i64* %10, align 8
  %48 = call i64 @XXH3_mix16B(i8* %44, i8* %46, i64 %47)
  %49 = load i64, i64* %11, align 8
  %50 = add i64 %49, %48
  store i64 %50, i64* %11, align 8
  %51 = load i8*, i8** %6, align 8
  %52 = load i64, i64* %7, align 8
  %53 = getelementptr inbounds i8, i8* %51, i64 %52
  %54 = getelementptr inbounds i8, i8* %53, i64 -48
  %55 = load i8*, i8** %8, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 80
  %57 = load i64, i64* %10, align 8
  %58 = call i64 @XXH3_mix16B(i8* %54, i8* %56, i64 %57)
  %59 = load i64, i64* %11, align 8
  %60 = add i64 %59, %58
  store i64 %60, i64* %11, align 8
  br label %61

61:                                               ; preds = %42, %17
  %62 = load i8*, i8** %6, align 8
  %63 = getelementptr inbounds i8, i8* %62, i64 16
  %64 = load i8*, i8** %8, align 8
  %65 = getelementptr inbounds i8, i8* %64, i64 32
  %66 = load i64, i64* %10, align 8
  %67 = call i64 @XXH3_mix16B(i8* %63, i8* %65, i64 %66)
  %68 = load i64, i64* %11, align 8
  %69 = add i64 %68, %67
  store i64 %69, i64* %11, align 8
  %70 = load i8*, i8** %6, align 8
  %71 = load i64, i64* %7, align 8
  %72 = getelementptr inbounds i8, i8* %70, i64 %71
  %73 = getelementptr inbounds i8, i8* %72, i64 -32
  %74 = load i8*, i8** %8, align 8
  %75 = getelementptr inbounds i8, i8* %74, i64 48
  %76 = load i64, i64* %10, align 8
  %77 = call i64 @XXH3_mix16B(i8* %73, i8* %75, i64 %76)
  %78 = load i64, i64* %11, align 8
  %79 = add i64 %78, %77
  store i64 %79, i64* %11, align 8
  br label %80

80:                                               ; preds = %61, %5
  %81 = load i8*, i8** %6, align 8
  %82 = getelementptr inbounds i8, i8* %81, i64 0
  %83 = load i8*, i8** %8, align 8
  %84 = getelementptr inbounds i8, i8* %83, i64 0
  %85 = load i64, i64* %10, align 8
  %86 = call i64 @XXH3_mix16B(i8* %82, i8* %84, i64 %85)
  %87 = load i64, i64* %11, align 8
  %88 = add i64 %87, %86
  store i64 %88, i64* %11, align 8
  %89 = load i8*, i8** %6, align 8
  %90 = load i64, i64* %7, align 8
  %91 = getelementptr inbounds i8, i8* %89, i64 %90
  %92 = getelementptr inbounds i8, i8* %91, i64 -16
  %93 = load i8*, i8** %8, align 8
  %94 = getelementptr inbounds i8, i8* %93, i64 16
  %95 = load i64, i64* %10, align 8
  %96 = call i64 @XXH3_mix16B(i8* %92, i8* %94, i64 %95)
  %97 = load i64, i64* %11, align 8
  %98 = add i64 %97, %96
  store i64 %98, i64* %11, align 8
  %99 = load i64, i64* %11, align 8
  %100 = call i64 @XXH3_avalanche(i64 %99)
  ret i64 %100
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @XXH3_len_129to240_64b(i8* noalias %0, i64 %1, i8* noalias %2, i64 %3, i64 %4) #0 {
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  store i8* %0, i8** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  store i64 %3, i64* %9, align 8
  store i64 %4, i64* %10, align 8
  %14 = load i64, i64* %9, align 8
  %15 = load i64, i64* %7, align 8
  %16 = mul i64 %15, -7046029288634856825
  store i64 %16, i64* %11, align 8
  %17 = load i64, i64* %7, align 8
  %18 = trunc i64 %17 to i32
  %19 = sdiv i32 %18, 16
  store i32 %19, i32* %12, align 4
  store i32 0, i32* %13, align 4
  br label %20

20:                                               ; preds = %38, %5
  %21 = load i32, i32* %13, align 4
  %22 = icmp slt i32 %21, 8
  br i1 %22, label %23, label %41

23:                                               ; preds = %20
  %24 = load i8*, i8** %6, align 8
  %25 = load i32, i32* %13, align 4
  %26 = mul nsw i32 16, %25
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds i8, i8* %24, i64 %27
  %29 = load i8*, i8** %8, align 8
  %30 = load i32, i32* %13, align 4
  %31 = mul nsw i32 16, %30
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds i8, i8* %29, i64 %32
  %34 = load i64, i64* %10, align 8
  %35 = call i64 @XXH3_mix16B(i8* %28, i8* %33, i64 %34)
  %36 = load i64, i64* %11, align 8
  %37 = add i64 %36, %35
  store i64 %37, i64* %11, align 8
  br label %38

38:                                               ; preds = %23
  %39 = load i32, i32* %13, align 4
  %40 = add nsw i32 %39, 1
  store i32 %40, i32* %13, align 4
  br label %20, !llvm.loop !41

41:                                               ; preds = %20
  %42 = load i64, i64* %11, align 8
  %43 = call i64 @XXH3_avalanche(i64 %42)
  store i64 %43, i64* %11, align 8
  store i32 8, i32* %13, align 4
  br label %44

44:                                               ; preds = %65, %41
  %45 = load i32, i32* %13, align 4
  %46 = load i32, i32* %12, align 4
  %47 = icmp slt i32 %45, %46
  br i1 %47, label %48, label %68

48:                                               ; preds = %44
  %49 = load i8*, i8** %6, align 8
  %50 = load i32, i32* %13, align 4
  %51 = mul nsw i32 16, %50
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds i8, i8* %49, i64 %52
  %54 = load i8*, i8** %8, align 8
  %55 = load i32, i32* %13, align 4
  %56 = sub nsw i32 %55, 8
  %57 = mul nsw i32 16, %56
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds i8, i8* %54, i64 %58
  %60 = getelementptr inbounds i8, i8* %59, i64 3
  %61 = load i64, i64* %10, align 8
  %62 = call i64 @XXH3_mix16B(i8* %53, i8* %60, i64 %61)
  %63 = load i64, i64* %11, align 8
  %64 = add i64 %63, %62
  store i64 %64, i64* %11, align 8
  br label %65

65:                                               ; preds = %48
  %66 = load i32, i32* %13, align 4
  %67 = add nsw i32 %66, 1
  store i32 %67, i32* %13, align 4
  br label %44, !llvm.loop !42

68:                                               ; preds = %44
  %69 = load i8*, i8** %6, align 8
  %70 = load i64, i64* %7, align 8
  %71 = getelementptr inbounds i8, i8* %69, i64 %70
  %72 = getelementptr inbounds i8, i8* %71, i64 -16
  %73 = load i8*, i8** %8, align 8
  %74 = getelementptr inbounds i8, i8* %73, i64 136
  %75 = getelementptr inbounds i8, i8* %74, i64 -17
  %76 = load i64, i64* %10, align 8
  %77 = call i64 @XXH3_mix16B(i8* %72, i8* %75, i64 %76)
  %78 = load i64, i64* %11, align 8
  %79 = add i64 %78, %77
  store i64 %79, i64* %11, align 8
  %80 = load i64, i64* %11, align 8
  %81 = call i64 @XXH3_avalanche(i64 %80)
  ret i64 %81
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @XXH3_mix16B(i8* noalias %0, i8* noalias %1, i64 %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  store i8* %0, i8** %4, align 8
  store i8* %1, i8** %5, align 8
  store i64 %2, i64* %6, align 8
  %9 = load i8*, i8** %4, align 8
  %10 = call i64 @XXH_readLE64(i8* %9)
  store i64 %10, i64* %7, align 8
  %11 = load i8*, i8** %4, align 8
  %12 = getelementptr inbounds i8, i8* %11, i64 8
  %13 = call i64 @XXH_readLE64(i8* %12)
  store i64 %13, i64* %8, align 8
  %14 = load i64, i64* %7, align 8
  %15 = load i8*, i8** %5, align 8
  %16 = call i64 @XXH_readLE64(i8* %15)
  %17 = load i64, i64* %6, align 8
  %18 = add i64 %16, %17
  %19 = xor i64 %14, %18
  %20 = load i64, i64* %8, align 8
  %21 = load i8*, i8** %5, align 8
  %22 = getelementptr inbounds i8, i8* %21, i64 8
  %23 = call i64 @XXH_readLE64(i8* %22)
  %24 = load i64, i64* %6, align 8
  %25 = sub i64 %23, %24
  %26 = xor i64 %20, %25
  %27 = call i64 @XXH3_mul128_fold64(i64 %19, i64 %26)
  ret i64 %27
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @XXH3_avalanche(i64 %0) #0 {
  %2 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  %3 = load i64, i64* %2, align 8
  %4 = call i64 @XXH_xorshift64(i64 %3, i32 37)
  store i64 %4, i64* %2, align 8
  %5 = load i64, i64* %2, align 8
  %6 = mul i64 %5, 1609587791953885689
  store i64 %6, i64* %2, align 8
  %7 = load i64, i64* %2, align 8
  %8 = call i64 @XXH_xorshift64(i64 %7, i32 32)
  store i64 %8, i64* %2, align 8
  %9 = load i64, i64* %2, align 8
  ret i64 %9
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @XXH_xorshift64(i64 %0, i32 %1) #0 {
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  store i64 %0, i64* %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load i64, i64* %3, align 8
  %6 = load i64, i64* %3, align 8
  %7 = load i32, i32* %4, align 4
  %8 = zext i32 %7 to i64
  %9 = lshr i64 %6, %8
  %10 = xor i64 %5, %9
  ret i64 %10
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @XXH_readLE64(i8* %0) #0 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  %4 = call i64 @XXH_read64(i8* %3)
  ret i64 %4
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @XXH3_mul128_fold64(i64 %0, i64 %1) #0 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca %struct.timeval, align 8
  store i64 %0, i64* %3, align 8
  store i64 %1, i64* %4, align 8
  %6 = load i64, i64* %3, align 8
  %7 = load i64, i64* %4, align 8
  %8 = call { i64, i64 } @XXH_mult64to128(i64 %6, i64 %7)
  %9 = bitcast %struct.timeval* %5 to { i64, i64 }*
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0
  %11 = extractvalue { i64, i64 } %8, 0
  store i64 %11, i64* %10, align 8
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1
  %13 = extractvalue { i64, i64 } %8, 1
  store i64 %13, i64* %12, align 8
  %14 = getelementptr inbounds %struct.timeval, %struct.timeval* %5, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %struct.timeval, %struct.timeval* %5, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = xor i64 %15, %17
  ret i64 %18
}

; Function Attrs: noinline nounwind optnone uwtable
define internal { i64, i64 } @XXH_mult64to128(i64 %0, i64 %1) #0 {
  %3 = alloca %struct.timeval, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i128, align 16
  store i64 %0, i64* %4, align 8
  store i64 %1, i64* %5, align 8
  %7 = load i64, i64* %4, align 8
  %8 = zext i64 %7 to i128
  %9 = load i64, i64* %5, align 8
  %10 = zext i64 %9 to i128
  %11 = mul i128 %8, %10
  store i128 %11, i128* %6, align 16
  %12 = load i128, i128* %6, align 16
  %13 = trunc i128 %12 to i64
  %14 = getelementptr inbounds %struct.timeval, %struct.timeval* %3, i32 0, i32 0
  store i64 %13, i64* %14, align 8
  %15 = load i128, i128* %6, align 16
  %16 = lshr i128 %15, 64
  %17 = trunc i128 %16 to i64
  %18 = getelementptr inbounds %struct.timeval, %struct.timeval* %3, i32 0, i32 1
  store i64 %17, i64* %18, align 8
  %19 = bitcast %struct.timeval* %3 to { i64, i64 }*
  %20 = load { i64, i64 }, { i64, i64 }* %19, align 8
  ret { i64, i64 } %20
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @XXH_read64(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i64, align 8
  store i8* %0, i8** %2, align 8
  %4 = bitcast i64* %3 to i8*
  %5 = load i8*, i8** %2, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 1 %5, i64 8, i1 false)
  %6 = load i64, i64* %3, align 8
  ret i64 %6
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @XXH3_len_9to16_64b(i8* %0, i64 %1, i8* %2, i64 %3) #0 {
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  store i8* %0, i8** %5, align 8
  store i64 %1, i64* %6, align 8
  store i8* %2, i8** %7, align 8
  store i64 %3, i64* %8, align 8
  %14 = load i8*, i8** %7, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 24
  %16 = call i64 @XXH_readLE64(i8* %15)
  %17 = load i8*, i8** %7, align 8
  %18 = getelementptr inbounds i8, i8* %17, i64 32
  %19 = call i64 @XXH_readLE64(i8* %18)
  %20 = xor i64 %16, %19
  %21 = load i64, i64* %8, align 8
  %22 = add i64 %20, %21
  store i64 %22, i64* %9, align 8
  %23 = load i8*, i8** %7, align 8
  %24 = getelementptr inbounds i8, i8* %23, i64 40
  %25 = call i64 @XXH_readLE64(i8* %24)
  %26 = load i8*, i8** %7, align 8
  %27 = getelementptr inbounds i8, i8* %26, i64 48
  %28 = call i64 @XXH_readLE64(i8* %27)
  %29 = xor i64 %25, %28
  %30 = load i64, i64* %8, align 8
  %31 = sub i64 %29, %30
  store i64 %31, i64* %10, align 8
  %32 = load i8*, i8** %5, align 8
  %33 = call i64 @XXH_readLE64(i8* %32)
  %34 = load i64, i64* %9, align 8
  %35 = xor i64 %33, %34
  store i64 %35, i64* %11, align 8
  %36 = load i8*, i8** %5, align 8
  %37 = load i64, i64* %6, align 8
  %38 = getelementptr inbounds i8, i8* %36, i64 %37
  %39 = getelementptr inbounds i8, i8* %38, i64 -8
  %40 = call i64 @XXH_readLE64(i8* %39)
  %41 = load i64, i64* %10, align 8
  %42 = xor i64 %40, %41
  store i64 %42, i64* %12, align 8
  %43 = load i64, i64* %6, align 8
  %44 = load i64, i64* %11, align 8
  %45 = call i64 @XXH_swap64(i64 %44)
  %46 = add i64 %43, %45
  %47 = load i64, i64* %12, align 8
  %48 = add i64 %46, %47
  %49 = load i64, i64* %11, align 8
  %50 = load i64, i64* %12, align 8
  %51 = call i64 @XXH3_mul128_fold64(i64 %49, i64 %50)
  %52 = add i64 %48, %51
  store i64 %52, i64* %13, align 8
  %53 = load i64, i64* %13, align 8
  %54 = call i64 @XXH3_avalanche(i64 %53)
  ret i64 %54
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @XXH3_len_4to8_64b(i8* %0, i64 %1, i8* %2, i64 %3) #0 {
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  store i8* %0, i8** %5, align 8
  store i64 %1, i64* %6, align 8
  store i8* %2, i8** %7, align 8
  store i64 %3, i64* %8, align 8
  %14 = load i64, i64* %8, align 8
  %15 = trunc i64 %14 to i32
  %16 = call i32 @XXH_swap32(i32 %15)
  %17 = zext i32 %16 to i64
  %18 = shl i64 %17, 32
  %19 = load i64, i64* %8, align 8
  %20 = xor i64 %19, %18
  store i64 %20, i64* %8, align 8
  %21 = load i8*, i8** %5, align 8
  %22 = call i32 @XXH_readLE32(i8* %21)
  store i32 %22, i32* %9, align 4
  %23 = load i8*, i8** %5, align 8
  %24 = load i64, i64* %6, align 8
  %25 = getelementptr inbounds i8, i8* %23, i64 %24
  %26 = getelementptr inbounds i8, i8* %25, i64 -4
  %27 = call i32 @XXH_readLE32(i8* %26)
  store i32 %27, i32* %10, align 4
  %28 = load i8*, i8** %7, align 8
  %29 = getelementptr inbounds i8, i8* %28, i64 8
  %30 = call i64 @XXH_readLE64(i8* %29)
  %31 = load i8*, i8** %7, align 8
  %32 = getelementptr inbounds i8, i8* %31, i64 16
  %33 = call i64 @XXH_readLE64(i8* %32)
  %34 = xor i64 %30, %33
  %35 = load i64, i64* %8, align 8
  %36 = sub i64 %34, %35
  store i64 %36, i64* %11, align 8
  %37 = load i32, i32* %10, align 4
  %38 = zext i32 %37 to i64
  %39 = load i32, i32* %9, align 4
  %40 = zext i32 %39 to i64
  %41 = shl i64 %40, 32
  %42 = add i64 %38, %41
  store i64 %42, i64* %12, align 8
  %43 = load i64, i64* %12, align 8
  %44 = load i64, i64* %11, align 8
  %45 = xor i64 %43, %44
  store i64 %45, i64* %13, align 8
  %46 = load i64, i64* %13, align 8
  %47 = load i64, i64* %6, align 8
  %48 = call i64 @XXH3_rrmxmx(i64 %46, i64 %47)
  ret i64 %48
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @XXH3_len_1to3_64b(i8* %0, i64 %1, i8* %2, i64 %3) #0 {
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %12 = alloca i32, align 4
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  store i8* %0, i8** %5, align 8
  store i64 %1, i64* %6, align 8
  store i8* %2, i8** %7, align 8
  store i64 %3, i64* %8, align 8
  %15 = load i8*, i8** %5, align 8
  %16 = getelementptr inbounds i8, i8* %15, i64 0
  %17 = load i8, i8* %16, align 1
  store i8 %17, i8* %9, align 1
  %18 = load i8*, i8** %5, align 8
  %19 = load i64, i64* %6, align 8
  %20 = lshr i64 %19, 1
  %21 = getelementptr inbounds i8, i8* %18, i64 %20
  %22 = load i8, i8* %21, align 1
  store i8 %22, i8* %10, align 1
  %23 = load i8*, i8** %5, align 8
  %24 = load i64, i64* %6, align 8
  %25 = sub i64 %24, 1
  %26 = getelementptr inbounds i8, i8* %23, i64 %25
  %27 = load i8, i8* %26, align 1
  store i8 %27, i8* %11, align 1
  %28 = load i8, i8* %9, align 1
  %29 = zext i8 %28 to i32
  %30 = shl i32 %29, 16
  %31 = load i8, i8* %10, align 1
  %32 = zext i8 %31 to i32
  %33 = shl i32 %32, 24
  %34 = or i32 %30, %33
  %35 = load i8, i8* %11, align 1
  %36 = zext i8 %35 to i32
  %37 = shl i32 %36, 0
  %38 = or i32 %34, %37
  %39 = load i64, i64* %6, align 8
  %40 = trunc i64 %39 to i32
  %41 = shl i32 %40, 8
  %42 = or i32 %38, %41
  store i32 %42, i32* %12, align 4
  %43 = load i8*, i8** %7, align 8
  %44 = call i32 @XXH_readLE32(i8* %43)
  %45 = load i8*, i8** %7, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 4
  %47 = call i32 @XXH_readLE32(i8* %46)
  %48 = xor i32 %44, %47
  %49 = zext i32 %48 to i64
  %50 = load i64, i64* %8, align 8
  %51 = add i64 %49, %50
  store i64 %51, i64* %13, align 8
  %52 = load i32, i32* %12, align 4
  %53 = zext i32 %52 to i64
  %54 = load i64, i64* %13, align 8
  %55 = xor i64 %53, %54
  store i64 %55, i64* %14, align 8
  %56 = load i64, i64* %14, align 8
  %57 = call i64 @XXH64_avalanche(i64 %56)
  ret i64 %57
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @XXH64_avalanche(i64 %0) #0 {
  %2 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  %3 = load i64, i64* %2, align 8
  %4 = lshr i64 %3, 33
  %5 = load i64, i64* %2, align 8
  %6 = xor i64 %5, %4
  store i64 %6, i64* %2, align 8
  %7 = load i64, i64* %2, align 8
  %8 = mul i64 %7, -4417276706812531889
  store i64 %8, i64* %2, align 8
  %9 = load i64, i64* %2, align 8
  %10 = lshr i64 %9, 29
  %11 = load i64, i64* %2, align 8
  %12 = xor i64 %11, %10
  store i64 %12, i64* %2, align 8
  %13 = load i64, i64* %2, align 8
  %14 = mul i64 %13, 1609587929392839161
  store i64 %14, i64* %2, align 8
  %15 = load i64, i64* %2, align 8
  %16 = lshr i64 %15, 32
  %17 = load i64, i64* %2, align 8
  %18 = xor i64 %17, %16
  store i64 %18, i64* %2, align 8
  %19 = load i64, i64* %2, align 8
  ret i64 %19
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @XXH_readLE32(i8* %0) #0 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  %4 = call i32 @XXH_read32(i8* %3)
  ret i32 %4
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @XXH_read32(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  %4 = bitcast i32* %3 to i8*
  %5 = load i8*, i8** %2, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 1 %5, i64 4, i1 false)
  %6 = load i32, i32* %3, align 4
  ret i32 %6
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @XXH_swap32(i32 %0) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = shl i32 %3, 24
  %5 = and i32 %4, -16777216
  %6 = load i32, i32* %2, align 4
  %7 = shl i32 %6, 8
  %8 = and i32 %7, 16711680
  %9 = or i32 %5, %8
  %10 = load i32, i32* %2, align 4
  %11 = lshr i32 %10, 8
  %12 = and i32 %11, 65280
  %13 = or i32 %9, %12
  %14 = load i32, i32* %2, align 4
  %15 = lshr i32 %14, 24
  %16 = and i32 %15, 255
  %17 = or i32 %13, %16
  ret i32 %17
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @XXH3_rrmxmx(i64 %0, i64 %1) #0 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  store i64 %0, i64* %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load i64, i64* %3, align 8
  %6 = call i64 @llvm.fshl.i64(i64 %5, i64 %5, i64 49)
  %7 = load i64, i64* %3, align 8
  %8 = call i64 @llvm.fshl.i64(i64 %7, i64 %7, i64 24)
  %9 = xor i64 %6, %8
  %10 = load i64, i64* %3, align 8
  %11 = xor i64 %10, %9
  store i64 %11, i64* %3, align 8
  %12 = load i64, i64* %3, align 8
  %13 = mul i64 %12, -6939452855193903323
  store i64 %13, i64* %3, align 8
  %14 = load i64, i64* %3, align 8
  %15 = lshr i64 %14, 35
  %16 = load i64, i64* %4, align 8
  %17 = add i64 %15, %16
  %18 = load i64, i64* %3, align 8
  %19 = xor i64 %18, %17
  store i64 %19, i64* %3, align 8
  %20 = load i64, i64* %3, align 8
  %21 = mul i64 %20, -6939452855193903323
  store i64 %21, i64* %3, align 8
  %22 = load i64, i64* %3, align 8
  %23 = call i64 @XXH_xorshift64(i64 %22, i32 28)
  ret i64 %23
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.fshl.i64(i64, i64, i64) #9

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @XXH_swap64(i64 %0) #0 {
  %2 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  %3 = load i64, i64* %2, align 8
  %4 = shl i64 %3, 56
  %5 = and i64 %4, -72057594037927936
  %6 = load i64, i64* %2, align 8
  %7 = shl i64 %6, 40
  %8 = and i64 %7, 71776119061217280
  %9 = or i64 %5, %8
  %10 = load i64, i64* %2, align 8
  %11 = shl i64 %10, 24
  %12 = and i64 %11, 280375465082880
  %13 = or i64 %9, %12
  %14 = load i64, i64* %2, align 8
  %15 = shl i64 %14, 8
  %16 = and i64 %15, 1095216660480
  %17 = or i64 %13, %16
  %18 = load i64, i64* %2, align 8
  %19 = lshr i64 %18, 8
  %20 = and i64 %19, 4278190080
  %21 = or i64 %17, %20
  %22 = load i64, i64* %2, align 8
  %23 = lshr i64 %22, 24
  %24 = and i64 %23, 16711680
  %25 = or i64 %21, %24
  %26 = load i64, i64* %2, align 8
  %27 = lshr i64 %26, 40
  %28 = and i64 %27, 65280
  %29 = or i64 %25, %28
  %30 = load i64, i64* %2, align 8
  %31 = lshr i64 %30, 56
  %32 = and i64 %31, 255
  %33 = or i64 %29, %32
  ret i64 %33
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @XXH3_accumulate_512_sse2(i8* noalias %0, i8* noalias %1, i8* noalias %2) #10 {
  %4 = alloca <2 x i64>*, align 8
  %5 = alloca <2 x i64>, align 16
  %6 = alloca <2 x i64>, align 16
  %7 = alloca <2 x i64>, align 16
  %8 = alloca <2 x i64>, align 16
  %9 = alloca <2 x i64>, align 16
  %10 = alloca <2 x i64>, align 16
  %11 = alloca <2 x i64>, align 16
  %12 = alloca <2 x i64>, align 16
  %13 = alloca <2 x i64>*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca <2 x i64>*, align 16
  %18 = alloca <2 x i64>*, align 8
  %19 = alloca <2 x i64>*, align 8
  %20 = alloca i64, align 8
  %21 = alloca <2 x i64>, align 16
  %22 = alloca <2 x i64>, align 16
  %23 = alloca <2 x i64>, align 16
  %24 = alloca <2 x i64>, align 16
  %25 = alloca <2 x i64>, align 16
  %26 = alloca <2 x i64>, align 16
  %27 = alloca <2 x i64>, align 16
  store i8* %0, i8** %14, align 8
  store i8* %1, i8** %15, align 8
  store i8* %2, i8** %16, align 8
  %28 = load i8*, i8** %14, align 8
  %29 = bitcast i8* %28 to <2 x i64>*
  store <2 x i64>* %29, <2 x i64>** %17, align 16
  %30 = load i8*, i8** %15, align 8
  %31 = bitcast i8* %30 to <2 x i64>*
  store <2 x i64>* %31, <2 x i64>** %18, align 8
  %32 = load i8*, i8** %16, align 8
  %33 = bitcast i8* %32 to <2 x i64>*
  store <2 x i64>* %33, <2 x i64>** %19, align 8
  store i64 0, i64* %20, align 8
  br label %34

34:                                               ; preds = %90, %3
  %35 = load i64, i64* %20, align 8
  %36 = icmp ult i64 %35, 4
  br i1 %36, label %37, label %93

37:                                               ; preds = %34
  %38 = load <2 x i64>*, <2 x i64>** %18, align 8
  %39 = load i64, i64* %20, align 8
  %40 = getelementptr inbounds <2 x i64>, <2 x i64>* %38, i64 %39
  store <2 x i64>* %40, <2 x i64>** %13, align 8
  %41 = load <2 x i64>*, <2 x i64>** %13, align 8
  %42 = bitcast <2 x i64>* %41 to %struct.__loadu_si128*
  %43 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %42, i32 0, i32 0
  %44 = load <2 x i64>, <2 x i64>* %43, align 1
  store <2 x i64> %44, <2 x i64>* %21, align 16
  %45 = load <2 x i64>*, <2 x i64>** %19, align 8
  %46 = load i64, i64* %20, align 8
  %47 = getelementptr inbounds <2 x i64>, <2 x i64>* %45, i64 %46
  store <2 x i64>* %47, <2 x i64>** %4, align 8
  %48 = load <2 x i64>*, <2 x i64>** %4, align 8
  %49 = bitcast <2 x i64>* %48 to %struct.__loadu_si128*
  %50 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %49, i32 0, i32 0
  %51 = load <2 x i64>, <2 x i64>* %50, align 1
  store <2 x i64> %51, <2 x i64>* %22, align 16
  %52 = load <2 x i64>, <2 x i64>* %21, align 16
  %53 = load <2 x i64>, <2 x i64>* %22, align 16
  store <2 x i64> %52, <2 x i64>* %5, align 16
  store <2 x i64> %53, <2 x i64>* %6, align 16
  %54 = load <2 x i64>, <2 x i64>* %5, align 16
  %55 = load <2 x i64>, <2 x i64>* %6, align 16
  %56 = xor <2 x i64> %54, %55
  store <2 x i64> %56, <2 x i64>* %23, align 16
  %57 = load <2 x i64>, <2 x i64>* %23, align 16
  %58 = bitcast <2 x i64> %57 to <4 x i32>
  %59 = shufflevector <4 x i32> %58, <4 x i32> poison, <4 x i32> <i32 1, i32 0, i32 3, i32 0>
  %60 = bitcast <4 x i32> %59 to <2 x i64>
  store <2 x i64> %60, <2 x i64>* %24, align 16
  %61 = load <2 x i64>, <2 x i64>* %23, align 16
  %62 = load <2 x i64>, <2 x i64>* %24, align 16
  store <2 x i64> %61, <2 x i64>* %7, align 16
  store <2 x i64> %62, <2 x i64>* %8, align 16
  %63 = load <2 x i64>, <2 x i64>* %7, align 16
  %64 = bitcast <2 x i64> %63 to <4 x i32>
  %65 = load <2 x i64>, <2 x i64>* %8, align 16
  %66 = bitcast <2 x i64> %65 to <4 x i32>
  %67 = and <2 x i64> %63, <i64 4294967295, i64 4294967295>
  %68 = and <2 x i64> %65, <i64 4294967295, i64 4294967295>
  %69 = mul <2 x i64> %67, %68
  store <2 x i64> %69, <2 x i64>* %25, align 16
  %70 = load <2 x i64>, <2 x i64>* %21, align 16
  %71 = bitcast <2 x i64> %70 to <4 x i32>
  %72 = shufflevector <4 x i32> %71, <4 x i32> poison, <4 x i32> <i32 2, i32 3, i32 0, i32 1>
  %73 = bitcast <4 x i32> %72 to <2 x i64>
  store <2 x i64> %73, <2 x i64>* %26, align 16
  %74 = load <2 x i64>*, <2 x i64>** %17, align 16
  %75 = load i64, i64* %20, align 8
  %76 = getelementptr inbounds <2 x i64>, <2 x i64>* %74, i64 %75
  %77 = load <2 x i64>, <2 x i64>* %76, align 16
  %78 = load <2 x i64>, <2 x i64>* %26, align 16
  store <2 x i64> %77, <2 x i64>* %9, align 16
  store <2 x i64> %78, <2 x i64>* %10, align 16
  %79 = load <2 x i64>, <2 x i64>* %9, align 16
  %80 = load <2 x i64>, <2 x i64>* %10, align 16
  %81 = add <2 x i64> %79, %80
  store <2 x i64> %81, <2 x i64>* %27, align 16
  %82 = load <2 x i64>, <2 x i64>* %25, align 16
  %83 = load <2 x i64>, <2 x i64>* %27, align 16
  store <2 x i64> %82, <2 x i64>* %11, align 16
  store <2 x i64> %83, <2 x i64>* %12, align 16
  %84 = load <2 x i64>, <2 x i64>* %11, align 16
  %85 = load <2 x i64>, <2 x i64>* %12, align 16
  %86 = add <2 x i64> %84, %85
  %87 = load <2 x i64>*, <2 x i64>** %17, align 16
  %88 = load i64, i64* %20, align 8
  %89 = getelementptr inbounds <2 x i64>, <2 x i64>* %87, i64 %88
  store <2 x i64> %86, <2 x i64>* %89, align 16
  br label %90

90:                                               ; preds = %37
  %91 = load i64, i64* %20, align 8
  %92 = add i64 %91, 1
  store i64 %92, i64* %20, align 8
  br label %34, !llvm.loop !43

93:                                               ; preds = %34
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @XXH3_scrambleAcc_sse2(i8* noalias %0, i8* noalias %1) #10 {
  %3 = alloca <2 x i64>, align 16
  %4 = alloca i32, align 4
  %5 = alloca <2 x i64>, align 16
  %6 = alloca <2 x i64>, align 16
  %7 = alloca <2 x i64>*, align 8
  %8 = alloca <2 x i64>, align 16
  %9 = alloca <2 x i64>, align 16
  %10 = alloca <2 x i64>, align 16
  %11 = alloca <2 x i64>, align 16
  %12 = alloca <2 x i64>, align 16
  %13 = alloca <2 x i64>, align 16
  %14 = alloca <2 x i64>, align 16
  %15 = alloca i32, align 4
  %16 = alloca <2 x i64>, align 16
  %17 = alloca <2 x i64>, align 16
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca <4 x i32>, align 16
  %23 = alloca i32, align 4
  %24 = alloca i8*, align 8
  %25 = alloca i8*, align 8
  %26 = alloca <2 x i64>*, align 16
  %27 = alloca <2 x i64>*, align 8
  %28 = alloca <2 x i64>, align 16
  %29 = alloca i64, align 8
  %30 = alloca <2 x i64>, align 16
  %31 = alloca <2 x i64>, align 16
  %32 = alloca <2 x i64>, align 16
  %33 = alloca <2 x i64>, align 16
  %34 = alloca <2 x i64>, align 16
  %35 = alloca <2 x i64>, align 16
  %36 = alloca <2 x i64>, align 16
  %37 = alloca <2 x i64>, align 16
  store i8* %0, i8** %24, align 8
  store i8* %1, i8** %25, align 8
  %38 = load i8*, i8** %24, align 8
  %39 = bitcast i8* %38 to <2 x i64>*
  store <2 x i64>* %39, <2 x i64>** %26, align 16
  %40 = load i8*, i8** %25, align 8
  %41 = bitcast i8* %40 to <2 x i64>*
  store <2 x i64>* %41, <2 x i64>** %27, align 8
  store i32 -1640531535, i32* %23, align 4
  %42 = load i32, i32* %23, align 4
  %43 = load i32, i32* %23, align 4
  %44 = load i32, i32* %23, align 4
  %45 = load i32, i32* %23, align 4
  store i32 %42, i32* %18, align 4
  store i32 %43, i32* %19, align 4
  store i32 %44, i32* %20, align 4
  store i32 %45, i32* %21, align 4
  %46 = load i32, i32* %21, align 4
  %47 = insertelement <4 x i32> undef, i32 %46, i32 0
  %48 = load i32, i32* %20, align 4
  %49 = insertelement <4 x i32> %47, i32 %48, i32 1
  %50 = load i32, i32* %19, align 4
  %51 = insertelement <4 x i32> %49, i32 %50, i32 2
  %52 = load i32, i32* %18, align 4
  %53 = insertelement <4 x i32> %51, i32 %52, i32 3
  store <4 x i32> %53, <4 x i32>* %22, align 16
  %54 = load <4 x i32>, <4 x i32>* %22, align 16
  %55 = bitcast <4 x i32> %54 to <2 x i64>
  store <2 x i64> %55, <2 x i64>* %28, align 16
  store i64 0, i64* %29, align 8
  br label %56

56:                                               ; preds = %118, %2
  %57 = load i64, i64* %29, align 8
  %58 = icmp ult i64 %57, 4
  br i1 %58, label %59, label %121

59:                                               ; preds = %56
  %60 = load <2 x i64>*, <2 x i64>** %26, align 16
  %61 = load i64, i64* %29, align 8
  %62 = getelementptr inbounds <2 x i64>, <2 x i64>* %60, i64 %61
  %63 = load <2 x i64>, <2 x i64>* %62, align 16
  store <2 x i64> %63, <2 x i64>* %30, align 16
  %64 = load <2 x i64>, <2 x i64>* %30, align 16
  store <2 x i64> %64, <2 x i64>* %3, align 16
  store i32 47, i32* %4, align 4
  %65 = load <2 x i64>, <2 x i64>* %3, align 16
  %66 = load i32, i32* %4, align 4
  %67 = call <2 x i64> @llvm.x86.sse2.psrli.q(<2 x i64> %65, i32 %66) #14
  store <2 x i64> %67, <2 x i64>* %31, align 16
  %68 = load <2 x i64>, <2 x i64>* %30, align 16
  %69 = load <2 x i64>, <2 x i64>* %31, align 16
  store <2 x i64> %68, <2 x i64>* %5, align 16
  store <2 x i64> %69, <2 x i64>* %6, align 16
  %70 = load <2 x i64>, <2 x i64>* %5, align 16
  %71 = load <2 x i64>, <2 x i64>* %6, align 16
  %72 = xor <2 x i64> %70, %71
  store <2 x i64> %72, <2 x i64>* %32, align 16
  %73 = load <2 x i64>*, <2 x i64>** %27, align 8
  %74 = load i64, i64* %29, align 8
  %75 = getelementptr inbounds <2 x i64>, <2 x i64>* %73, i64 %74
  store <2 x i64>* %75, <2 x i64>** %7, align 8
  %76 = load <2 x i64>*, <2 x i64>** %7, align 8
  %77 = bitcast <2 x i64>* %76 to %struct.__loadu_si128*
  %78 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %77, i32 0, i32 0
  %79 = load <2 x i64>, <2 x i64>* %78, align 1
  store <2 x i64> %79, <2 x i64>* %33, align 16
  %80 = load <2 x i64>, <2 x i64>* %32, align 16
  %81 = load <2 x i64>, <2 x i64>* %33, align 16
  store <2 x i64> %80, <2 x i64>* %8, align 16
  store <2 x i64> %81, <2 x i64>* %9, align 16
  %82 = load <2 x i64>, <2 x i64>* %8, align 16
  %83 = load <2 x i64>, <2 x i64>* %9, align 16
  %84 = xor <2 x i64> %82, %83
  store <2 x i64> %84, <2 x i64>* %34, align 16
  %85 = load <2 x i64>, <2 x i64>* %34, align 16
  %86 = bitcast <2 x i64> %85 to <4 x i32>
  %87 = shufflevector <4 x i32> %86, <4 x i32> poison, <4 x i32> <i32 1, i32 0, i32 3, i32 0>
  %88 = bitcast <4 x i32> %87 to <2 x i64>
  store <2 x i64> %88, <2 x i64>* %35, align 16
  %89 = load <2 x i64>, <2 x i64>* %34, align 16
  %90 = load <2 x i64>, <2 x i64>* %28, align 16
  store <2 x i64> %89, <2 x i64>* %10, align 16
  store <2 x i64> %90, <2 x i64>* %11, align 16
  %91 = load <2 x i64>, <2 x i64>* %10, align 16
  %92 = bitcast <2 x i64> %91 to <4 x i32>
  %93 = load <2 x i64>, <2 x i64>* %11, align 16
  %94 = bitcast <2 x i64> %93 to <4 x i32>
  %95 = and <2 x i64> %91, <i64 4294967295, i64 4294967295>
  %96 = and <2 x i64> %93, <i64 4294967295, i64 4294967295>
  %97 = mul <2 x i64> %95, %96
  store <2 x i64> %97, <2 x i64>* %36, align 16
  %98 = load <2 x i64>, <2 x i64>* %35, align 16
  %99 = load <2 x i64>, <2 x i64>* %28, align 16
  store <2 x i64> %98, <2 x i64>* %12, align 16
  store <2 x i64> %99, <2 x i64>* %13, align 16
  %100 = load <2 x i64>, <2 x i64>* %12, align 16
  %101 = bitcast <2 x i64> %100 to <4 x i32>
  %102 = load <2 x i64>, <2 x i64>* %13, align 16
  %103 = bitcast <2 x i64> %102 to <4 x i32>
  %104 = and <2 x i64> %100, <i64 4294967295, i64 4294967295>
  %105 = and <2 x i64> %102, <i64 4294967295, i64 4294967295>
  %106 = mul <2 x i64> %104, %105
  store <2 x i64> %106, <2 x i64>* %37, align 16
  %107 = load <2 x i64>, <2 x i64>* %36, align 16
  %108 = load <2 x i64>, <2 x i64>* %37, align 16
  store <2 x i64> %108, <2 x i64>* %14, align 16
  store i32 32, i32* %15, align 4
  %109 = load <2 x i64>, <2 x i64>* %14, align 16
  %110 = load i32, i32* %15, align 4
  %111 = call <2 x i64> @llvm.x86.sse2.pslli.q(<2 x i64> %109, i32 %110) #14
  store <2 x i64> %107, <2 x i64>* %16, align 16
  store <2 x i64> %111, <2 x i64>* %17, align 16
  %112 = load <2 x i64>, <2 x i64>* %16, align 16
  %113 = load <2 x i64>, <2 x i64>* %17, align 16
  %114 = add <2 x i64> %112, %113
  %115 = load <2 x i64>*, <2 x i64>** %26, align 16
  %116 = load i64, i64* %29, align 8
  %117 = getelementptr inbounds <2 x i64>, <2 x i64>* %115, i64 %116
  store <2 x i64> %114, <2 x i64>* %117, align 16
  br label %118

118:                                              ; preds = %59
  %119 = load i64, i64* %29, align 8
  %120 = add i64 %119, 1
  store i64 %120, i64* %29, align 8
  br label %56, !llvm.loop !44

121:                                              ; preds = %56
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @XXH3_hashLong_64b_internal(i8* noalias %0, i64 %1, i8* noalias %2, i64 %3, void (i8*, i8*, i8*)* %4, void (i8*, i8*)* %5) #0 {
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i64, align 8
  %11 = alloca void (i8*, i8*, i8*)*, align 8
  %12 = alloca void (i8*, i8*)*, align 8
  %13 = alloca [8 x i64], align 16
  store i8* %0, i8** %7, align 8
  store i64 %1, i64* %8, align 8
  store i8* %2, i8** %9, align 8
  store i64 %3, i64* %10, align 8
  store void (i8*, i8*, i8*)* %4, void (i8*, i8*, i8*)** %11, align 8
  store void (i8*, i8*)* %5, void (i8*, i8*)** %12, align 8
  %14 = bitcast [8 x i64]* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %14, i8* align 16 bitcast ([8 x i64]* @__const.XXH3_hashLong_64b_internal.acc to i8*), i64 64, i1 false)
  %15 = getelementptr inbounds [8 x i64], [8 x i64]* %13, i64 0, i64 0
  %16 = load i8*, i8** %7, align 8
  %17 = load i64, i64* %8, align 8
  %18 = load i8*, i8** %9, align 8
  %19 = load i64, i64* %10, align 8
  %20 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %11, align 8
  %21 = load void (i8*, i8*)*, void (i8*, i8*)** %12, align 8
  call void @XXH3_hashLong_internal_loop(i64* %15, i8* %16, i64 %17, i8* %18, i64 %19, void (i8*, i8*, i8*)* %20, void (i8*, i8*)* %21)
  br label %22

22:                                               ; preds = %6
  br label %23

23:                                               ; preds = %22
  %24 = getelementptr inbounds [8 x i64], [8 x i64]* %13, i64 0, i64 0
  %25 = load i8*, i8** %9, align 8
  %26 = getelementptr inbounds i8, i8* %25, i64 11
  %27 = load i64, i64* %8, align 8
  %28 = mul i64 %27, -7046029288634856825
  %29 = call i64 @XXH3_mergeAccs(i64* %24, i8* %26, i64 %28)
  ret i64 %29
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @XXH3_hashLong_internal_loop(i64* noalias %0, i8* noalias %1, i64 %2, i8* noalias %3, i64 %4, void (i8*, i8*, i8*)* %5, void (i8*, i8*)* %6) #0 {
  %8 = alloca i64*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca void (i8*, i8*, i8*)*, align 8
  %14 = alloca void (i8*, i8*)*, align 8
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  %17 = alloca i64, align 8
  %18 = alloca i64, align 8
  %19 = alloca i64, align 8
  %20 = alloca i8*, align 8
  store i64* %0, i64** %8, align 8
  store i8* %1, i8** %9, align 8
  store i64 %2, i64* %10, align 8
  store i8* %3, i8** %11, align 8
  store i64 %4, i64* %12, align 8
  store void (i8*, i8*, i8*)* %5, void (i8*, i8*, i8*)** %13, align 8
  store void (i8*, i8*)* %6, void (i8*, i8*)** %14, align 8
  %21 = load i64, i64* %12, align 8
  %22 = sub i64 %21, 64
  %23 = udiv i64 %22, 8
  store i64 %23, i64* %15, align 8
  %24 = load i64, i64* %15, align 8
  %25 = mul i64 64, %24
  store i64 %25, i64* %16, align 8
  %26 = load i64, i64* %10, align 8
  %27 = sub i64 %26, 1
  %28 = load i64, i64* %16, align 8
  %29 = udiv i64 %27, %28
  store i64 %29, i64* %17, align 8
  store i64 0, i64* %18, align 8
  br label %30

30:                                               ; preds = %51, %7
  %31 = load i64, i64* %18, align 8
  %32 = load i64, i64* %17, align 8
  %33 = icmp ult i64 %31, %32
  br i1 %33, label %34, label %54

34:                                               ; preds = %30
  %35 = load i64*, i64** %8, align 8
  %36 = load i8*, i8** %9, align 8
  %37 = load i64, i64* %18, align 8
  %38 = load i64, i64* %16, align 8
  %39 = mul i64 %37, %38
  %40 = getelementptr inbounds i8, i8* %36, i64 %39
  %41 = load i8*, i8** %11, align 8
  %42 = load i64, i64* %15, align 8
  %43 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %13, align 8
  call void @XXH3_accumulate(i64* %35, i8* %40, i8* %41, i64 %42, void (i8*, i8*, i8*)* %43)
  %44 = load void (i8*, i8*)*, void (i8*, i8*)** %14, align 8
  %45 = load i64*, i64** %8, align 8
  %46 = bitcast i64* %45 to i8*
  %47 = load i8*, i8** %11, align 8
  %48 = load i64, i64* %12, align 8
  %49 = getelementptr inbounds i8, i8* %47, i64 %48
  %50 = getelementptr inbounds i8, i8* %49, i64 -64
  call void %44(i8* %46, i8* %50)
  br label %51

51:                                               ; preds = %34
  %52 = load i64, i64* %18, align 8
  %53 = add i64 %52, 1
  store i64 %53, i64* %18, align 8
  br label %30, !llvm.loop !45

54:                                               ; preds = %30
  %55 = load i64, i64* %10, align 8
  %56 = sub i64 %55, 1
  %57 = load i64, i64* %16, align 8
  %58 = load i64, i64* %17, align 8
  %59 = mul i64 %57, %58
  %60 = sub i64 %56, %59
  %61 = udiv i64 %60, 64
  store i64 %61, i64* %19, align 8
  %62 = load i64*, i64** %8, align 8
  %63 = load i8*, i8** %9, align 8
  %64 = load i64, i64* %17, align 8
  %65 = load i64, i64* %16, align 8
  %66 = mul i64 %64, %65
  %67 = getelementptr inbounds i8, i8* %63, i64 %66
  %68 = load i8*, i8** %11, align 8
  %69 = load i64, i64* %19, align 8
  %70 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %13, align 8
  call void @XXH3_accumulate(i64* %62, i8* %67, i8* %68, i64 %69, void (i8*, i8*, i8*)* %70)
  %71 = load i8*, i8** %9, align 8
  %72 = load i64, i64* %10, align 8
  %73 = getelementptr inbounds i8, i8* %71, i64 %72
  %74 = getelementptr inbounds i8, i8* %73, i64 -64
  store i8* %74, i8** %20, align 8
  %75 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %13, align 8
  %76 = load i64*, i64** %8, align 8
  %77 = bitcast i64* %76 to i8*
  %78 = load i8*, i8** %20, align 8
  %79 = load i8*, i8** %11, align 8
  %80 = load i64, i64* %12, align 8
  %81 = getelementptr inbounds i8, i8* %79, i64 %80
  %82 = getelementptr inbounds i8, i8* %81, i64 -64
  %83 = getelementptr inbounds i8, i8* %82, i64 -7
  call void %75(i8* %77, i8* %78, i8* %83)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @XXH3_mergeAccs(i64* noalias %0, i8* noalias %1, i64 %2) #0 {
  %4 = alloca i64*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  store i64* %0, i64** %4, align 8
  store i8* %1, i8** %5, align 8
  store i64 %2, i64* %6, align 8
  %9 = load i64, i64* %6, align 8
  store i64 %9, i64* %7, align 8
  store i64 0, i64* %8, align 8
  store i64 0, i64* %8, align 8
  br label %10

10:                                               ; preds = %25, %3
  %11 = load i64, i64* %8, align 8
  %12 = icmp ult i64 %11, 4
  br i1 %12, label %13, label %28

13:                                               ; preds = %10
  %14 = load i64*, i64** %4, align 8
  %15 = load i64, i64* %8, align 8
  %16 = mul i64 2, %15
  %17 = getelementptr inbounds i64, i64* %14, i64 %16
  %18 = load i8*, i8** %5, align 8
  %19 = load i64, i64* %8, align 8
  %20 = mul i64 16, %19
  %21 = getelementptr inbounds i8, i8* %18, i64 %20
  %22 = call i64 @XXH3_mix2Accs(i64* %17, i8* %21)
  %23 = load i64, i64* %7, align 8
  %24 = add i64 %23, %22
  store i64 %24, i64* %7, align 8
  br label %25

25:                                               ; preds = %13
  %26 = load i64, i64* %8, align 8
  %27 = add i64 %26, 1
  store i64 %27, i64* %8, align 8
  br label %10, !llvm.loop !46

28:                                               ; preds = %10
  %29 = load i64, i64* %7, align 8
  %30 = call i64 @XXH3_avalanche(i64 %29)
  ret i64 %30
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @XXH3_mix2Accs(i64* noalias %0, i8* noalias %1) #0 {
  %3 = alloca i64*, align 8
  %4 = alloca i8*, align 8
  store i64* %0, i64** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load i64*, i64** %3, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 0
  %7 = load i64, i64* %6, align 8
  %8 = load i8*, i8** %4, align 8
  %9 = call i64 @XXH_readLE64(i8* %8)
  %10 = xor i64 %7, %9
  %11 = load i64*, i64** %3, align 8
  %12 = getelementptr inbounds i64, i64* %11, i64 1
  %13 = load i64, i64* %12, align 8
  %14 = load i8*, i8** %4, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 8
  %16 = call i64 @XXH_readLE64(i8* %15)
  %17 = xor i64 %13, %16
  %18 = call i64 @XXH3_mul128_fold64(i64 %10, i64 %17)
  ret i64 %18
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @XXH3_accumulate(i64* noalias %0, i8* noalias %1, i8* noalias %2, i64 %3, void (i8*, i8*, i8*)* %4) #0 {
  %6 = alloca i64*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca void (i8*, i8*, i8*)*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i8*, align 8
  store i64* %0, i64** %6, align 8
  store i8* %1, i8** %7, align 8
  store i8* %2, i8** %8, align 8
  store i64 %3, i64* %9, align 8
  store void (i8*, i8*, i8*)* %4, void (i8*, i8*, i8*)** %10, align 8
  store i64 0, i64* %11, align 8
  br label %13

13:                                               ; preds = %32, %5
  %14 = load i64, i64* %11, align 8
  %15 = load i64, i64* %9, align 8
  %16 = icmp ult i64 %14, %15
  br i1 %16, label %17, label %35

17:                                               ; preds = %13
  %18 = load i8*, i8** %7, align 8
  %19 = load i64, i64* %11, align 8
  %20 = mul i64 %19, 64
  %21 = getelementptr inbounds i8, i8* %18, i64 %20
  store i8* %21, i8** %12, align 8
  %22 = load i8*, i8** %12, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 320
  call void @llvm.prefetch.p0i8(i8* %23, i32 0, i32 3, i32 1)
  %24 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 8
  %25 = load i64*, i64** %6, align 8
  %26 = bitcast i64* %25 to i8*
  %27 = load i8*, i8** %12, align 8
  %28 = load i8*, i8** %8, align 8
  %29 = load i64, i64* %11, align 8
  %30 = mul i64 %29, 8
  %31 = getelementptr inbounds i8, i8* %28, i64 %30
  call void %24(i8* %26, i8* %27, i8* %31)
  br label %32

32:                                               ; preds = %17
  %33 = load i64, i64* %11, align 8
  %34 = add i64 %33, 1
  store i64 %34, i64* %11, align 8
  br label %13, !llvm.loop !47

35:                                               ; preds = %13
  ret void
}

; Function Attrs: inaccessiblemem_or_argmemonly nofree nosync nounwind willreturn
declare void @llvm.prefetch.p0i8(i8* nocapture readonly, i32 immarg, i32 immarg, i32) #11

; Function Attrs: nounwind readnone
declare <2 x i64> @llvm.x86.sse2.psrli.q(<2 x i64>, i32) #12

; Function Attrs: nounwind readnone
declare <2 x i64> @llvm.x86.sse2.pslli.q(<2 x i64>, i32) #12

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @jenkins_hash(i8* %0, i64 %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %union.anon.2, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i16*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  store i64 %1, i64* %5, align 8
  %14 = load i64, i64* %5, align 8
  %15 = trunc i64 %14 to i32
  %16 = add i32 -559038737, %15
  %17 = add i32 %16, 0
  store i32 %17, i32* %8, align 4
  store i32 %17, i32* %7, align 4
  store i32 %17, i32* %6, align 4
  %18 = load i8*, i8** %4, align 8
  %19 = bitcast %union.anon.2* %9 to i8**
  store i8* %18, i8** %19, align 8
  %20 = bitcast %union.anon.2* %9 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = and i64 %21, 3
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %24, label %274

24:                                               ; preds = %2
  %25 = load i8*, i8** %4, align 8
  %26 = bitcast i8* %25 to i32*
  store i32* %26, i32** %10, align 8
  br label %27

27:                                               ; preds = %30, %24
  %28 = load i64, i64* %5, align 8
  %29 = icmp ugt i64 %28, 12
  br i1 %29, label %30, label %128

30:                                               ; preds = %27
  %31 = load i32*, i32** %10, align 8
  %32 = getelementptr inbounds i32, i32* %31, i64 0
  %33 = load i32, i32* %32, align 4
  %34 = load i32, i32* %6, align 4
  %35 = add i32 %34, %33
  store i32 %35, i32* %6, align 4
  %36 = load i32*, i32** %10, align 8
  %37 = getelementptr inbounds i32, i32* %36, i64 1
  %38 = load i32, i32* %37, align 4
  %39 = load i32, i32* %7, align 4
  %40 = add i32 %39, %38
  store i32 %40, i32* %7, align 4
  %41 = load i32*, i32** %10, align 8
  %42 = getelementptr inbounds i32, i32* %41, i64 2
  %43 = load i32, i32* %42, align 4
  %44 = load i32, i32* %8, align 4
  %45 = add i32 %44, %43
  store i32 %45, i32* %8, align 4
  %46 = load i32, i32* %8, align 4
  %47 = load i32, i32* %6, align 4
  %48 = sub i32 %47, %46
  store i32 %48, i32* %6, align 4
  %49 = load i32, i32* %8, align 4
  %50 = shl i32 %49, 4
  %51 = load i32, i32* %8, align 4
  %52 = lshr i32 %51, 28
  %53 = xor i32 %50, %52
  %54 = load i32, i32* %6, align 4
  %55 = xor i32 %54, %53
  store i32 %55, i32* %6, align 4
  %56 = load i32, i32* %7, align 4
  %57 = load i32, i32* %8, align 4
  %58 = add i32 %57, %56
  store i32 %58, i32* %8, align 4
  %59 = load i32, i32* %6, align 4
  %60 = load i32, i32* %7, align 4
  %61 = sub i32 %60, %59
  store i32 %61, i32* %7, align 4
  %62 = load i32, i32* %6, align 4
  %63 = shl i32 %62, 6
  %64 = load i32, i32* %6, align 4
  %65 = lshr i32 %64, 26
  %66 = xor i32 %63, %65
  %67 = load i32, i32* %7, align 4
  %68 = xor i32 %67, %66
  store i32 %68, i32* %7, align 4
  %69 = load i32, i32* %8, align 4
  %70 = load i32, i32* %6, align 4
  %71 = add i32 %70, %69
  store i32 %71, i32* %6, align 4
  %72 = load i32, i32* %7, align 4
  %73 = load i32, i32* %8, align 4
  %74 = sub i32 %73, %72
  store i32 %74, i32* %8, align 4
  %75 = load i32, i32* %7, align 4
  %76 = shl i32 %75, 8
  %77 = load i32, i32* %7, align 4
  %78 = lshr i32 %77, 24
  %79 = xor i32 %76, %78
  %80 = load i32, i32* %8, align 4
  %81 = xor i32 %80, %79
  store i32 %81, i32* %8, align 4
  %82 = load i32, i32* %6, align 4
  %83 = load i32, i32* %7, align 4
  %84 = add i32 %83, %82
  store i32 %84, i32* %7, align 4
  %85 = load i32, i32* %8, align 4
  %86 = load i32, i32* %6, align 4
  %87 = sub i32 %86, %85
  store i32 %87, i32* %6, align 4
  %88 = load i32, i32* %8, align 4
  %89 = shl i32 %88, 16
  %90 = load i32, i32* %8, align 4
  %91 = lshr i32 %90, 16
  %92 = xor i32 %89, %91
  %93 = load i32, i32* %6, align 4
  %94 = xor i32 %93, %92
  store i32 %94, i32* %6, align 4
  %95 = load i32, i32* %7, align 4
  %96 = load i32, i32* %8, align 4
  %97 = add i32 %96, %95
  store i32 %97, i32* %8, align 4
  %98 = load i32, i32* %6, align 4
  %99 = load i32, i32* %7, align 4
  %100 = sub i32 %99, %98
  store i32 %100, i32* %7, align 4
  %101 = load i32, i32* %6, align 4
  %102 = shl i32 %101, 19
  %103 = load i32, i32* %6, align 4
  %104 = lshr i32 %103, 13
  %105 = xor i32 %102, %104
  %106 = load i32, i32* %7, align 4
  %107 = xor i32 %106, %105
  store i32 %107, i32* %7, align 4
  %108 = load i32, i32* %8, align 4
  %109 = load i32, i32* %6, align 4
  %110 = add i32 %109, %108
  store i32 %110, i32* %6, align 4
  %111 = load i32, i32* %7, align 4
  %112 = load i32, i32* %8, align 4
  %113 = sub i32 %112, %111
  store i32 %113, i32* %8, align 4
  %114 = load i32, i32* %7, align 4
  %115 = shl i32 %114, 4
  %116 = load i32, i32* %7, align 4
  %117 = lshr i32 %116, 28
  %118 = xor i32 %115, %117
  %119 = load i32, i32* %8, align 4
  %120 = xor i32 %119, %118
  store i32 %120, i32* %8, align 4
  %121 = load i32, i32* %6, align 4
  %122 = load i32, i32* %7, align 4
  %123 = add i32 %122, %121
  store i32 %123, i32* %7, align 4
  %124 = load i64, i64* %5, align 8
  %125 = sub i64 %124, 12
  store i64 %125, i64* %5, align 8
  %126 = load i32*, i32** %10, align 8
  %127 = getelementptr inbounds i32, i32* %126, i64 3
  store i32* %127, i32** %10, align 8
  br label %27, !llvm.loop !48

128:                                              ; preds = %27
  %129 = load i64, i64* %5, align 8
  switch i64 %129, label %273 [
    i64 12, label %130
    i64 11, label %146
    i64 10, label %163
    i64 9, label %180
    i64 8, label %197
    i64 7, label %208
    i64 6, label %220
    i64 5, label %232
    i64 4, label %244
    i64 3, label %250
    i64 2, label %257
    i64 1, label %264
    i64 0, label %271
  ]

130:                                              ; preds = %128
  %131 = load i32*, i32** %10, align 8
  %132 = getelementptr inbounds i32, i32* %131, i64 2
  %133 = load i32, i32* %132, align 4
  %134 = load i32, i32* %8, align 4
  %135 = add i32 %134, %133
  store i32 %135, i32* %8, align 4
  %136 = load i32*, i32** %10, align 8
  %137 = getelementptr inbounds i32, i32* %136, i64 1
  %138 = load i32, i32* %137, align 4
  %139 = load i32, i32* %7, align 4
  %140 = add i32 %139, %138
  store i32 %140, i32* %7, align 4
  %141 = load i32*, i32** %10, align 8
  %142 = getelementptr inbounds i32, i32* %141, i64 0
  %143 = load i32, i32* %142, align 4
  %144 = load i32, i32* %6, align 4
  %145 = add i32 %144, %143
  store i32 %145, i32* %6, align 4
  br label %273

146:                                              ; preds = %128
  %147 = load i32*, i32** %10, align 8
  %148 = getelementptr inbounds i32, i32* %147, i64 2
  %149 = load i32, i32* %148, align 4
  %150 = and i32 %149, 16777215
  %151 = load i32, i32* %8, align 4
  %152 = add i32 %151, %150
  store i32 %152, i32* %8, align 4
  %153 = load i32*, i32** %10, align 8
  %154 = getelementptr inbounds i32, i32* %153, i64 1
  %155 = load i32, i32* %154, align 4
  %156 = load i32, i32* %7, align 4
  %157 = add i32 %156, %155
  store i32 %157, i32* %7, align 4
  %158 = load i32*, i32** %10, align 8
  %159 = getelementptr inbounds i32, i32* %158, i64 0
  %160 = load i32, i32* %159, align 4
  %161 = load i32, i32* %6, align 4
  %162 = add i32 %161, %160
  store i32 %162, i32* %6, align 4
  br label %273

163:                                              ; preds = %128
  %164 = load i32*, i32** %10, align 8
  %165 = getelementptr inbounds i32, i32* %164, i64 2
  %166 = load i32, i32* %165, align 4
  %167 = and i32 %166, 65535
  %168 = load i32, i32* %8, align 4
  %169 = add i32 %168, %167
  store i32 %169, i32* %8, align 4
  %170 = load i32*, i32** %10, align 8
  %171 = getelementptr inbounds i32, i32* %170, i64 1
  %172 = load i32, i32* %171, align 4
  %173 = load i32, i32* %7, align 4
  %174 = add i32 %173, %172
  store i32 %174, i32* %7, align 4
  %175 = load i32*, i32** %10, align 8
  %176 = getelementptr inbounds i32, i32* %175, i64 0
  %177 = load i32, i32* %176, align 4
  %178 = load i32, i32* %6, align 4
  %179 = add i32 %178, %177
  store i32 %179, i32* %6, align 4
  br label %273

180:                                              ; preds = %128
  %181 = load i32*, i32** %10, align 8
  %182 = getelementptr inbounds i32, i32* %181, i64 2
  %183 = load i32, i32* %182, align 4
  %184 = and i32 %183, 255
  %185 = load i32, i32* %8, align 4
  %186 = add i32 %185, %184
  store i32 %186, i32* %8, align 4
  %187 = load i32*, i32** %10, align 8
  %188 = getelementptr inbounds i32, i32* %187, i64 1
  %189 = load i32, i32* %188, align 4
  %190 = load i32, i32* %7, align 4
  %191 = add i32 %190, %189
  store i32 %191, i32* %7, align 4
  %192 = load i32*, i32** %10, align 8
  %193 = getelementptr inbounds i32, i32* %192, i64 0
  %194 = load i32, i32* %193, align 4
  %195 = load i32, i32* %6, align 4
  %196 = add i32 %195, %194
  store i32 %196, i32* %6, align 4
  br label %273

197:                                              ; preds = %128
  %198 = load i32*, i32** %10, align 8
  %199 = getelementptr inbounds i32, i32* %198, i64 1
  %200 = load i32, i32* %199, align 4
  %201 = load i32, i32* %7, align 4
  %202 = add i32 %201, %200
  store i32 %202, i32* %7, align 4
  %203 = load i32*, i32** %10, align 8
  %204 = getelementptr inbounds i32, i32* %203, i64 0
  %205 = load i32, i32* %204, align 4
  %206 = load i32, i32* %6, align 4
  %207 = add i32 %206, %205
  store i32 %207, i32* %6, align 4
  br label %273

208:                                              ; preds = %128
  %209 = load i32*, i32** %10, align 8
  %210 = getelementptr inbounds i32, i32* %209, i64 1
  %211 = load i32, i32* %210, align 4
  %212 = and i32 %211, 16777215
  %213 = load i32, i32* %7, align 4
  %214 = add i32 %213, %212
  store i32 %214, i32* %7, align 4
  %215 = load i32*, i32** %10, align 8
  %216 = getelementptr inbounds i32, i32* %215, i64 0
  %217 = load i32, i32* %216, align 4
  %218 = load i32, i32* %6, align 4
  %219 = add i32 %218, %217
  store i32 %219, i32* %6, align 4
  br label %273

220:                                              ; preds = %128
  %221 = load i32*, i32** %10, align 8
  %222 = getelementptr inbounds i32, i32* %221, i64 1
  %223 = load i32, i32* %222, align 4
  %224 = and i32 %223, 65535
  %225 = load i32, i32* %7, align 4
  %226 = add i32 %225, %224
  store i32 %226, i32* %7, align 4
  %227 = load i32*, i32** %10, align 8
  %228 = getelementptr inbounds i32, i32* %227, i64 0
  %229 = load i32, i32* %228, align 4
  %230 = load i32, i32* %6, align 4
  %231 = add i32 %230, %229
  store i32 %231, i32* %6, align 4
  br label %273

232:                                              ; preds = %128
  %233 = load i32*, i32** %10, align 8
  %234 = getelementptr inbounds i32, i32* %233, i64 1
  %235 = load i32, i32* %234, align 4
  %236 = and i32 %235, 255
  %237 = load i32, i32* %7, align 4
  %238 = add i32 %237, %236
  store i32 %238, i32* %7, align 4
  %239 = load i32*, i32** %10, align 8
  %240 = getelementptr inbounds i32, i32* %239, i64 0
  %241 = load i32, i32* %240, align 4
  %242 = load i32, i32* %6, align 4
  %243 = add i32 %242, %241
  store i32 %243, i32* %6, align 4
  br label %273

244:                                              ; preds = %128
  %245 = load i32*, i32** %10, align 8
  %246 = getelementptr inbounds i32, i32* %245, i64 0
  %247 = load i32, i32* %246, align 4
  %248 = load i32, i32* %6, align 4
  %249 = add i32 %248, %247
  store i32 %249, i32* %6, align 4
  br label %273

250:                                              ; preds = %128
  %251 = load i32*, i32** %10, align 8
  %252 = getelementptr inbounds i32, i32* %251, i64 0
  %253 = load i32, i32* %252, align 4
  %254 = and i32 %253, 16777215
  %255 = load i32, i32* %6, align 4
  %256 = add i32 %255, %254
  store i32 %256, i32* %6, align 4
  br label %273

257:                                              ; preds = %128
  %258 = load i32*, i32** %10, align 8
  %259 = getelementptr inbounds i32, i32* %258, i64 0
  %260 = load i32, i32* %259, align 4
  %261 = and i32 %260, 65535
  %262 = load i32, i32* %6, align 4
  %263 = add i32 %262, %261
  store i32 %263, i32* %6, align 4
  br label %273

264:                                              ; preds = %128
  %265 = load i32*, i32** %10, align 8
  %266 = getelementptr inbounds i32, i32* %265, i64 0
  %267 = load i32, i32* %266, align 4
  %268 = and i32 %267, 255
  %269 = load i32, i32* %6, align 4
  %270 = add i32 %269, %268
  store i32 %270, i32* %6, align 4
  br label %273

271:                                              ; preds = %128
  %272 = load i32, i32* %8, align 4
  store i32 %272, i32* %3, align 4
  br label %928

273:                                              ; preds = %128, %264, %257, %250, %244, %232, %220, %208, %197, %180, %163, %146, %130
  br label %856

274:                                              ; preds = %2
  %275 = bitcast %union.anon.2* %9 to i64*
  %276 = load i64, i64* %275, align 8
  %277 = and i64 %276, 1
  %278 = icmp eq i64 %277, 0
  br i1 %278, label %279, label %588

279:                                              ; preds = %274
  %280 = load i8*, i8** %4, align 8
  %281 = bitcast i8* %280 to i16*
  store i16* %281, i16** %11, align 8
  br label %282

282:                                              ; preds = %285, %279
  %283 = load i64, i64* %5, align 8
  %284 = icmp ugt i64 %283, 12
  br i1 %284, label %285, label %404

285:                                              ; preds = %282
  %286 = load i16*, i16** %11, align 8
  %287 = getelementptr inbounds i16, i16* %286, i64 0
  %288 = load i16, i16* %287, align 2
  %289 = zext i16 %288 to i32
  %290 = load i16*, i16** %11, align 8
  %291 = getelementptr inbounds i16, i16* %290, i64 1
  %292 = load i16, i16* %291, align 2
  %293 = zext i16 %292 to i32
  %294 = shl i32 %293, 16
  %295 = add i32 %289, %294
  %296 = load i32, i32* %6, align 4
  %297 = add i32 %296, %295
  store i32 %297, i32* %6, align 4
  %298 = load i16*, i16** %11, align 8
  %299 = getelementptr inbounds i16, i16* %298, i64 2
  %300 = load i16, i16* %299, align 2
  %301 = zext i16 %300 to i32
  %302 = load i16*, i16** %11, align 8
  %303 = getelementptr inbounds i16, i16* %302, i64 3
  %304 = load i16, i16* %303, align 2
  %305 = zext i16 %304 to i32
  %306 = shl i32 %305, 16
  %307 = add i32 %301, %306
  %308 = load i32, i32* %7, align 4
  %309 = add i32 %308, %307
  store i32 %309, i32* %7, align 4
  %310 = load i16*, i16** %11, align 8
  %311 = getelementptr inbounds i16, i16* %310, i64 4
  %312 = load i16, i16* %311, align 2
  %313 = zext i16 %312 to i32
  %314 = load i16*, i16** %11, align 8
  %315 = getelementptr inbounds i16, i16* %314, i64 5
  %316 = load i16, i16* %315, align 2
  %317 = zext i16 %316 to i32
  %318 = shl i32 %317, 16
  %319 = add i32 %313, %318
  %320 = load i32, i32* %8, align 4
  %321 = add i32 %320, %319
  store i32 %321, i32* %8, align 4
  %322 = load i32, i32* %8, align 4
  %323 = load i32, i32* %6, align 4
  %324 = sub i32 %323, %322
  store i32 %324, i32* %6, align 4
  %325 = load i32, i32* %8, align 4
  %326 = shl i32 %325, 4
  %327 = load i32, i32* %8, align 4
  %328 = lshr i32 %327, 28
  %329 = xor i32 %326, %328
  %330 = load i32, i32* %6, align 4
  %331 = xor i32 %330, %329
  store i32 %331, i32* %6, align 4
  %332 = load i32, i32* %7, align 4
  %333 = load i32, i32* %8, align 4
  %334 = add i32 %333, %332
  store i32 %334, i32* %8, align 4
  %335 = load i32, i32* %6, align 4
  %336 = load i32, i32* %7, align 4
  %337 = sub i32 %336, %335
  store i32 %337, i32* %7, align 4
  %338 = load i32, i32* %6, align 4
  %339 = shl i32 %338, 6
  %340 = load i32, i32* %6, align 4
  %341 = lshr i32 %340, 26
  %342 = xor i32 %339, %341
  %343 = load i32, i32* %7, align 4
  %344 = xor i32 %343, %342
  store i32 %344, i32* %7, align 4
  %345 = load i32, i32* %8, align 4
  %346 = load i32, i32* %6, align 4
  %347 = add i32 %346, %345
  store i32 %347, i32* %6, align 4
  %348 = load i32, i32* %7, align 4
  %349 = load i32, i32* %8, align 4
  %350 = sub i32 %349, %348
  store i32 %350, i32* %8, align 4
  %351 = load i32, i32* %7, align 4
  %352 = shl i32 %351, 8
  %353 = load i32, i32* %7, align 4
  %354 = lshr i32 %353, 24
  %355 = xor i32 %352, %354
  %356 = load i32, i32* %8, align 4
  %357 = xor i32 %356, %355
  store i32 %357, i32* %8, align 4
  %358 = load i32, i32* %6, align 4
  %359 = load i32, i32* %7, align 4
  %360 = add i32 %359, %358
  store i32 %360, i32* %7, align 4
  %361 = load i32, i32* %8, align 4
  %362 = load i32, i32* %6, align 4
  %363 = sub i32 %362, %361
  store i32 %363, i32* %6, align 4
  %364 = load i32, i32* %8, align 4
  %365 = shl i32 %364, 16
  %366 = load i32, i32* %8, align 4
  %367 = lshr i32 %366, 16
  %368 = xor i32 %365, %367
  %369 = load i32, i32* %6, align 4
  %370 = xor i32 %369, %368
  store i32 %370, i32* %6, align 4
  %371 = load i32, i32* %7, align 4
  %372 = load i32, i32* %8, align 4
  %373 = add i32 %372, %371
  store i32 %373, i32* %8, align 4
  %374 = load i32, i32* %6, align 4
  %375 = load i32, i32* %7, align 4
  %376 = sub i32 %375, %374
  store i32 %376, i32* %7, align 4
  %377 = load i32, i32* %6, align 4
  %378 = shl i32 %377, 19
  %379 = load i32, i32* %6, align 4
  %380 = lshr i32 %379, 13
  %381 = xor i32 %378, %380
  %382 = load i32, i32* %7, align 4
  %383 = xor i32 %382, %381
  store i32 %383, i32* %7, align 4
  %384 = load i32, i32* %8, align 4
  %385 = load i32, i32* %6, align 4
  %386 = add i32 %385, %384
  store i32 %386, i32* %6, align 4
  %387 = load i32, i32* %7, align 4
  %388 = load i32, i32* %8, align 4
  %389 = sub i32 %388, %387
  store i32 %389, i32* %8, align 4
  %390 = load i32, i32* %7, align 4
  %391 = shl i32 %390, 4
  %392 = load i32, i32* %7, align 4
  %393 = lshr i32 %392, 28
  %394 = xor i32 %391, %393
  %395 = load i32, i32* %8, align 4
  %396 = xor i32 %395, %394
  store i32 %396, i32* %8, align 4
  %397 = load i32, i32* %6, align 4
  %398 = load i32, i32* %7, align 4
  %399 = add i32 %398, %397
  store i32 %399, i32* %7, align 4
  %400 = load i64, i64* %5, align 8
  %401 = sub i64 %400, 12
  store i64 %401, i64* %5, align 8
  %402 = load i16*, i16** %11, align 8
  %403 = getelementptr inbounds i16, i16* %402, i64 6
  store i16* %403, i16** %11, align 8
  br label %282, !llvm.loop !49

404:                                              ; preds = %282
  %405 = load i16*, i16** %11, align 8
  %406 = bitcast i16* %405 to i8*
  store i8* %406, i8** %12, align 8
  %407 = load i64, i64* %5, align 8
  switch i64 %407, label %587 [
    i64 12, label %408
    i64 11, label %445
    i64 10, label %453
    i64 9, label %484
    i64 8, label %491
    i64 7, label %516
    i64 6, label %524
    i64 5, label %543
    i64 4, label %550
    i64 3, label %563
    i64 2, label %571
    i64 1, label %578
    i64 0, label %585
  ]

408:                                              ; preds = %404
  %409 = load i16*, i16** %11, align 8
  %410 = getelementptr inbounds i16, i16* %409, i64 4
  %411 = load i16, i16* %410, align 2
  %412 = zext i16 %411 to i32
  %413 = load i16*, i16** %11, align 8
  %414 = getelementptr inbounds i16, i16* %413, i64 5
  %415 = load i16, i16* %414, align 2
  %416 = zext i16 %415 to i32
  %417 = shl i32 %416, 16
  %418 = add i32 %412, %417
  %419 = load i32, i32* %8, align 4
  %420 = add i32 %419, %418
  store i32 %420, i32* %8, align 4
  %421 = load i16*, i16** %11, align 8
  %422 = getelementptr inbounds i16, i16* %421, i64 2
  %423 = load i16, i16* %422, align 2
  %424 = zext i16 %423 to i32
  %425 = load i16*, i16** %11, align 8
  %426 = getelementptr inbounds i16, i16* %425, i64 3
  %427 = load i16, i16* %426, align 2
  %428 = zext i16 %427 to i32
  %429 = shl i32 %428, 16
  %430 = add i32 %424, %429
  %431 = load i32, i32* %7, align 4
  %432 = add i32 %431, %430
  store i32 %432, i32* %7, align 4
  %433 = load i16*, i16** %11, align 8
  %434 = getelementptr inbounds i16, i16* %433, i64 0
  %435 = load i16, i16* %434, align 2
  %436 = zext i16 %435 to i32
  %437 = load i16*, i16** %11, align 8
  %438 = getelementptr inbounds i16, i16* %437, i64 1
  %439 = load i16, i16* %438, align 2
  %440 = zext i16 %439 to i32
  %441 = shl i32 %440, 16
  %442 = add i32 %436, %441
  %443 = load i32, i32* %6, align 4
  %444 = add i32 %443, %442
  store i32 %444, i32* %6, align 4
  br label %587

445:                                              ; preds = %404
  %446 = load i8*, i8** %12, align 8
  %447 = getelementptr inbounds i8, i8* %446, i64 10
  %448 = load i8, i8* %447, align 1
  %449 = zext i8 %448 to i32
  %450 = shl i32 %449, 16
  %451 = load i32, i32* %8, align 4
  %452 = add i32 %451, %450
  store i32 %452, i32* %8, align 4
  br label %453

453:                                              ; preds = %404, %445
  %454 = load i16*, i16** %11, align 8
  %455 = getelementptr inbounds i16, i16* %454, i64 4
  %456 = load i16, i16* %455, align 2
  %457 = zext i16 %456 to i32
  %458 = load i32, i32* %8, align 4
  %459 = add i32 %458, %457
  store i32 %459, i32* %8, align 4
  %460 = load i16*, i16** %11, align 8
  %461 = getelementptr inbounds i16, i16* %460, i64 2
  %462 = load i16, i16* %461, align 2
  %463 = zext i16 %462 to i32
  %464 = load i16*, i16** %11, align 8
  %465 = getelementptr inbounds i16, i16* %464, i64 3
  %466 = load i16, i16* %465, align 2
  %467 = zext i16 %466 to i32
  %468 = shl i32 %467, 16
  %469 = add i32 %463, %468
  %470 = load i32, i32* %7, align 4
  %471 = add i32 %470, %469
  store i32 %471, i32* %7, align 4
  %472 = load i16*, i16** %11, align 8
  %473 = getelementptr inbounds i16, i16* %472, i64 0
  %474 = load i16, i16* %473, align 2
  %475 = zext i16 %474 to i32
  %476 = load i16*, i16** %11, align 8
  %477 = getelementptr inbounds i16, i16* %476, i64 1
  %478 = load i16, i16* %477, align 2
  %479 = zext i16 %478 to i32
  %480 = shl i32 %479, 16
  %481 = add i32 %475, %480
  %482 = load i32, i32* %6, align 4
  %483 = add i32 %482, %481
  store i32 %483, i32* %6, align 4
  br label %587

484:                                              ; preds = %404
  %485 = load i8*, i8** %12, align 8
  %486 = getelementptr inbounds i8, i8* %485, i64 8
  %487 = load i8, i8* %486, align 1
  %488 = zext i8 %487 to i32
  %489 = load i32, i32* %8, align 4
  %490 = add i32 %489, %488
  store i32 %490, i32* %8, align 4
  br label %491

491:                                              ; preds = %404, %484
  %492 = load i16*, i16** %11, align 8
  %493 = getelementptr inbounds i16, i16* %492, i64 2
  %494 = load i16, i16* %493, align 2
  %495 = zext i16 %494 to i32
  %496 = load i16*, i16** %11, align 8
  %497 = getelementptr inbounds i16, i16* %496, i64 3
  %498 = load i16, i16* %497, align 2
  %499 = zext i16 %498 to i32
  %500 = shl i32 %499, 16
  %501 = add i32 %495, %500
  %502 = load i32, i32* %7, align 4
  %503 = add i32 %502, %501
  store i32 %503, i32* %7, align 4
  %504 = load i16*, i16** %11, align 8
  %505 = getelementptr inbounds i16, i16* %504, i64 0
  %506 = load i16, i16* %505, align 2
  %507 = zext i16 %506 to i32
  %508 = load i16*, i16** %11, align 8
  %509 = getelementptr inbounds i16, i16* %508, i64 1
  %510 = load i16, i16* %509, align 2
  %511 = zext i16 %510 to i32
  %512 = shl i32 %511, 16
  %513 = add i32 %507, %512
  %514 = load i32, i32* %6, align 4
  %515 = add i32 %514, %513
  store i32 %515, i32* %6, align 4
  br label %587

516:                                              ; preds = %404
  %517 = load i8*, i8** %12, align 8
  %518 = getelementptr inbounds i8, i8* %517, i64 6
  %519 = load i8, i8* %518, align 1
  %520 = zext i8 %519 to i32
  %521 = shl i32 %520, 16
  %522 = load i32, i32* %7, align 4
  %523 = add i32 %522, %521
  store i32 %523, i32* %7, align 4
  br label %524

524:                                              ; preds = %404, %516
  %525 = load i16*, i16** %11, align 8
  %526 = getelementptr inbounds i16, i16* %525, i64 2
  %527 = load i16, i16* %526, align 2
  %528 = zext i16 %527 to i32
  %529 = load i32, i32* %7, align 4
  %530 = add i32 %529, %528
  store i32 %530, i32* %7, align 4
  %531 = load i16*, i16** %11, align 8
  %532 = getelementptr inbounds i16, i16* %531, i64 0
  %533 = load i16, i16* %532, align 2
  %534 = zext i16 %533 to i32
  %535 = load i16*, i16** %11, align 8
  %536 = getelementptr inbounds i16, i16* %535, i64 1
  %537 = load i16, i16* %536, align 2
  %538 = zext i16 %537 to i32
  %539 = shl i32 %538, 16
  %540 = add i32 %534, %539
  %541 = load i32, i32* %6, align 4
  %542 = add i32 %541, %540
  store i32 %542, i32* %6, align 4
  br label %587

543:                                              ; preds = %404
  %544 = load i8*, i8** %12, align 8
  %545 = getelementptr inbounds i8, i8* %544, i64 4
  %546 = load i8, i8* %545, align 1
  %547 = zext i8 %546 to i32
  %548 = load i32, i32* %7, align 4
  %549 = add i32 %548, %547
  store i32 %549, i32* %7, align 4
  br label %550

550:                                              ; preds = %404, %543
  %551 = load i16*, i16** %11, align 8
  %552 = getelementptr inbounds i16, i16* %551, i64 0
  %553 = load i16, i16* %552, align 2
  %554 = zext i16 %553 to i32
  %555 = load i16*, i16** %11, align 8
  %556 = getelementptr inbounds i16, i16* %555, i64 1
  %557 = load i16, i16* %556, align 2
  %558 = zext i16 %557 to i32
  %559 = shl i32 %558, 16
  %560 = add i32 %554, %559
  %561 = load i32, i32* %6, align 4
  %562 = add i32 %561, %560
  store i32 %562, i32* %6, align 4
  br label %587

563:                                              ; preds = %404
  %564 = load i8*, i8** %12, align 8
  %565 = getelementptr inbounds i8, i8* %564, i64 2
  %566 = load i8, i8* %565, align 1
  %567 = zext i8 %566 to i32
  %568 = shl i32 %567, 16
  %569 = load i32, i32* %6, align 4
  %570 = add i32 %569, %568
  store i32 %570, i32* %6, align 4
  br label %571

571:                                              ; preds = %404, %563
  %572 = load i16*, i16** %11, align 8
  %573 = getelementptr inbounds i16, i16* %572, i64 0
  %574 = load i16, i16* %573, align 2
  %575 = zext i16 %574 to i32
  %576 = load i32, i32* %6, align 4
  %577 = add i32 %576, %575
  store i32 %577, i32* %6, align 4
  br label %587

578:                                              ; preds = %404
  %579 = load i8*, i8** %12, align 8
  %580 = getelementptr inbounds i8, i8* %579, i64 0
  %581 = load i8, i8* %580, align 1
  %582 = zext i8 %581 to i32
  %583 = load i32, i32* %6, align 4
  %584 = add i32 %583, %582
  store i32 %584, i32* %6, align 4
  br label %587

585:                                              ; preds = %404
  %586 = load i32, i32* %8, align 4
  store i32 %586, i32* %3, align 4
  br label %928

587:                                              ; preds = %404, %578, %571, %550, %524, %491, %453, %408
  br label %855

588:                                              ; preds = %274
  %589 = load i8*, i8** %4, align 8
  store i8* %589, i8** %13, align 8
  br label %590

590:                                              ; preds = %593, %588
  %591 = load i64, i64* %5, align 8
  %592 = icmp ugt i64 %591, 12
  br i1 %592, label %593, label %757

593:                                              ; preds = %590
  %594 = load i8*, i8** %13, align 8
  %595 = getelementptr inbounds i8, i8* %594, i64 0
  %596 = load i8, i8* %595, align 1
  %597 = zext i8 %596 to i32
  %598 = load i32, i32* %6, align 4
  %599 = add i32 %598, %597
  store i32 %599, i32* %6, align 4
  %600 = load i8*, i8** %13, align 8
  %601 = getelementptr inbounds i8, i8* %600, i64 1
  %602 = load i8, i8* %601, align 1
  %603 = zext i8 %602 to i32
  %604 = shl i32 %603, 8
  %605 = load i32, i32* %6, align 4
  %606 = add i32 %605, %604
  store i32 %606, i32* %6, align 4
  %607 = load i8*, i8** %13, align 8
  %608 = getelementptr inbounds i8, i8* %607, i64 2
  %609 = load i8, i8* %608, align 1
  %610 = zext i8 %609 to i32
  %611 = shl i32 %610, 16
  %612 = load i32, i32* %6, align 4
  %613 = add i32 %612, %611
  store i32 %613, i32* %6, align 4
  %614 = load i8*, i8** %13, align 8
  %615 = getelementptr inbounds i8, i8* %614, i64 3
  %616 = load i8, i8* %615, align 1
  %617 = zext i8 %616 to i32
  %618 = shl i32 %617, 24
  %619 = load i32, i32* %6, align 4
  %620 = add i32 %619, %618
  store i32 %620, i32* %6, align 4
  %621 = load i8*, i8** %13, align 8
  %622 = getelementptr inbounds i8, i8* %621, i64 4
  %623 = load i8, i8* %622, align 1
  %624 = zext i8 %623 to i32
  %625 = load i32, i32* %7, align 4
  %626 = add i32 %625, %624
  store i32 %626, i32* %7, align 4
  %627 = load i8*, i8** %13, align 8
  %628 = getelementptr inbounds i8, i8* %627, i64 5
  %629 = load i8, i8* %628, align 1
  %630 = zext i8 %629 to i32
  %631 = shl i32 %630, 8
  %632 = load i32, i32* %7, align 4
  %633 = add i32 %632, %631
  store i32 %633, i32* %7, align 4
  %634 = load i8*, i8** %13, align 8
  %635 = getelementptr inbounds i8, i8* %634, i64 6
  %636 = load i8, i8* %635, align 1
  %637 = zext i8 %636 to i32
  %638 = shl i32 %637, 16
  %639 = load i32, i32* %7, align 4
  %640 = add i32 %639, %638
  store i32 %640, i32* %7, align 4
  %641 = load i8*, i8** %13, align 8
  %642 = getelementptr inbounds i8, i8* %641, i64 7
  %643 = load i8, i8* %642, align 1
  %644 = zext i8 %643 to i32
  %645 = shl i32 %644, 24
  %646 = load i32, i32* %7, align 4
  %647 = add i32 %646, %645
  store i32 %647, i32* %7, align 4
  %648 = load i8*, i8** %13, align 8
  %649 = getelementptr inbounds i8, i8* %648, i64 8
  %650 = load i8, i8* %649, align 1
  %651 = zext i8 %650 to i32
  %652 = load i32, i32* %8, align 4
  %653 = add i32 %652, %651
  store i32 %653, i32* %8, align 4
  %654 = load i8*, i8** %13, align 8
  %655 = getelementptr inbounds i8, i8* %654, i64 9
  %656 = load i8, i8* %655, align 1
  %657 = zext i8 %656 to i32
  %658 = shl i32 %657, 8
  %659 = load i32, i32* %8, align 4
  %660 = add i32 %659, %658
  store i32 %660, i32* %8, align 4
  %661 = load i8*, i8** %13, align 8
  %662 = getelementptr inbounds i8, i8* %661, i64 10
  %663 = load i8, i8* %662, align 1
  %664 = zext i8 %663 to i32
  %665 = shl i32 %664, 16
  %666 = load i32, i32* %8, align 4
  %667 = add i32 %666, %665
  store i32 %667, i32* %8, align 4
  %668 = load i8*, i8** %13, align 8
  %669 = getelementptr inbounds i8, i8* %668, i64 11
  %670 = load i8, i8* %669, align 1
  %671 = zext i8 %670 to i32
  %672 = shl i32 %671, 24
  %673 = load i32, i32* %8, align 4
  %674 = add i32 %673, %672
  store i32 %674, i32* %8, align 4
  %675 = load i32, i32* %8, align 4
  %676 = load i32, i32* %6, align 4
  %677 = sub i32 %676, %675
  store i32 %677, i32* %6, align 4
  %678 = load i32, i32* %8, align 4
  %679 = shl i32 %678, 4
  %680 = load i32, i32* %8, align 4
  %681 = lshr i32 %680, 28
  %682 = xor i32 %679, %681
  %683 = load i32, i32* %6, align 4
  %684 = xor i32 %683, %682
  store i32 %684, i32* %6, align 4
  %685 = load i32, i32* %7, align 4
  %686 = load i32, i32* %8, align 4
  %687 = add i32 %686, %685
  store i32 %687, i32* %8, align 4
  %688 = load i32, i32* %6, align 4
  %689 = load i32, i32* %7, align 4
  %690 = sub i32 %689, %688
  store i32 %690, i32* %7, align 4
  %691 = load i32, i32* %6, align 4
  %692 = shl i32 %691, 6
  %693 = load i32, i32* %6, align 4
  %694 = lshr i32 %693, 26
  %695 = xor i32 %692, %694
  %696 = load i32, i32* %7, align 4
  %697 = xor i32 %696, %695
  store i32 %697, i32* %7, align 4
  %698 = load i32, i32* %8, align 4
  %699 = load i32, i32* %6, align 4
  %700 = add i32 %699, %698
  store i32 %700, i32* %6, align 4
  %701 = load i32, i32* %7, align 4
  %702 = load i32, i32* %8, align 4
  %703 = sub i32 %702, %701
  store i32 %703, i32* %8, align 4
  %704 = load i32, i32* %7, align 4
  %705 = shl i32 %704, 8
  %706 = load i32, i32* %7, align 4
  %707 = lshr i32 %706, 24
  %708 = xor i32 %705, %707
  %709 = load i32, i32* %8, align 4
  %710 = xor i32 %709, %708
  store i32 %710, i32* %8, align 4
  %711 = load i32, i32* %6, align 4
  %712 = load i32, i32* %7, align 4
  %713 = add i32 %712, %711
  store i32 %713, i32* %7, align 4
  %714 = load i32, i32* %8, align 4
  %715 = load i32, i32* %6, align 4
  %716 = sub i32 %715, %714
  store i32 %716, i32* %6, align 4
  %717 = load i32, i32* %8, align 4
  %718 = shl i32 %717, 16
  %719 = load i32, i32* %8, align 4
  %720 = lshr i32 %719, 16
  %721 = xor i32 %718, %720
  %722 = load i32, i32* %6, align 4
  %723 = xor i32 %722, %721
  store i32 %723, i32* %6, align 4
  %724 = load i32, i32* %7, align 4
  %725 = load i32, i32* %8, align 4
  %726 = add i32 %725, %724
  store i32 %726, i32* %8, align 4
  %727 = load i32, i32* %6, align 4
  %728 = load i32, i32* %7, align 4
  %729 = sub i32 %728, %727
  store i32 %729, i32* %7, align 4
  %730 = load i32, i32* %6, align 4
  %731 = shl i32 %730, 19
  %732 = load i32, i32* %6, align 4
  %733 = lshr i32 %732, 13
  %734 = xor i32 %731, %733
  %735 = load i32, i32* %7, align 4
  %736 = xor i32 %735, %734
  store i32 %736, i32* %7, align 4
  %737 = load i32, i32* %8, align 4
  %738 = load i32, i32* %6, align 4
  %739 = add i32 %738, %737
  store i32 %739, i32* %6, align 4
  %740 = load i32, i32* %7, align 4
  %741 = load i32, i32* %8, align 4
  %742 = sub i32 %741, %740
  store i32 %742, i32* %8, align 4
  %743 = load i32, i32* %7, align 4
  %744 = shl i32 %743, 4
  %745 = load i32, i32* %7, align 4
  %746 = lshr i32 %745, 28
  %747 = xor i32 %744, %746
  %748 = load i32, i32* %8, align 4
  %749 = xor i32 %748, %747
  store i32 %749, i32* %8, align 4
  %750 = load i32, i32* %6, align 4
  %751 = load i32, i32* %7, align 4
  %752 = add i32 %751, %750
  store i32 %752, i32* %7, align 4
  %753 = load i64, i64* %5, align 8
  %754 = sub i64 %753, 12
  store i64 %754, i64* %5, align 8
  %755 = load i8*, i8** %13, align 8
  %756 = getelementptr inbounds i8, i8* %755, i64 12
  store i8* %756, i8** %13, align 8
  br label %590, !llvm.loop !50

757:                                              ; preds = %590
  %758 = load i64, i64* %5, align 8
  switch i64 %758, label %854 [
    i64 12, label %759
    i64 11, label %767
    i64 10, label %775
    i64 9, label %783
    i64 8, label %790
    i64 7, label %798
    i64 6, label %806
    i64 5, label %814
    i64 4, label %821
    i64 3, label %829
    i64 2, label %837
    i64 1, label %845
    i64 0, label %852
  ]

759:                                              ; preds = %757
  %760 = load i8*, i8** %13, align 8
  %761 = getelementptr inbounds i8, i8* %760, i64 11
  %762 = load i8, i8* %761, align 1
  %763 = zext i8 %762 to i32
  %764 = shl i32 %763, 24
  %765 = load i32, i32* %8, align 4
  %766 = add i32 %765, %764
  store i32 %766, i32* %8, align 4
  br label %767

767:                                              ; preds = %757, %759
  %768 = load i8*, i8** %13, align 8
  %769 = getelementptr inbounds i8, i8* %768, i64 10
  %770 = load i8, i8* %769, align 1
  %771 = zext i8 %770 to i32
  %772 = shl i32 %771, 16
  %773 = load i32, i32* %8, align 4
  %774 = add i32 %773, %772
  store i32 %774, i32* %8, align 4
  br label %775

775:                                              ; preds = %757, %767
  %776 = load i8*, i8** %13, align 8
  %777 = getelementptr inbounds i8, i8* %776, i64 9
  %778 = load i8, i8* %777, align 1
  %779 = zext i8 %778 to i32
  %780 = shl i32 %779, 8
  %781 = load i32, i32* %8, align 4
  %782 = add i32 %781, %780
  store i32 %782, i32* %8, align 4
  br label %783

783:                                              ; preds = %757, %775
  %784 = load i8*, i8** %13, align 8
  %785 = getelementptr inbounds i8, i8* %784, i64 8
  %786 = load i8, i8* %785, align 1
  %787 = zext i8 %786 to i32
  %788 = load i32, i32* %8, align 4
  %789 = add i32 %788, %787
  store i32 %789, i32* %8, align 4
  br label %790

790:                                              ; preds = %757, %783
  %791 = load i8*, i8** %13, align 8
  %792 = getelementptr inbounds i8, i8* %791, i64 7
  %793 = load i8, i8* %792, align 1
  %794 = zext i8 %793 to i32
  %795 = shl i32 %794, 24
  %796 = load i32, i32* %7, align 4
  %797 = add i32 %796, %795
  store i32 %797, i32* %7, align 4
  br label %798

798:                                              ; preds = %757, %790
  %799 = load i8*, i8** %13, align 8
  %800 = getelementptr inbounds i8, i8* %799, i64 6
  %801 = load i8, i8* %800, align 1
  %802 = zext i8 %801 to i32
  %803 = shl i32 %802, 16
  %804 = load i32, i32* %7, align 4
  %805 = add i32 %804, %803
  store i32 %805, i32* %7, align 4
  br label %806

806:                                              ; preds = %757, %798
  %807 = load i8*, i8** %13, align 8
  %808 = getelementptr inbounds i8, i8* %807, i64 5
  %809 = load i8, i8* %808, align 1
  %810 = zext i8 %809 to i32
  %811 = shl i32 %810, 8
  %812 = load i32, i32* %7, align 4
  %813 = add i32 %812, %811
  store i32 %813, i32* %7, align 4
  br label %814

814:                                              ; preds = %757, %806
  %815 = load i8*, i8** %13, align 8
  %816 = getelementptr inbounds i8, i8* %815, i64 4
  %817 = load i8, i8* %816, align 1
  %818 = zext i8 %817 to i32
  %819 = load i32, i32* %7, align 4
  %820 = add i32 %819, %818
  store i32 %820, i32* %7, align 4
  br label %821

821:                                              ; preds = %757, %814
  %822 = load i8*, i8** %13, align 8
  %823 = getelementptr inbounds i8, i8* %822, i64 3
  %824 = load i8, i8* %823, align 1
  %825 = zext i8 %824 to i32
  %826 = shl i32 %825, 24
  %827 = load i32, i32* %6, align 4
  %828 = add i32 %827, %826
  store i32 %828, i32* %6, align 4
  br label %829

829:                                              ; preds = %757, %821
  %830 = load i8*, i8** %13, align 8
  %831 = getelementptr inbounds i8, i8* %830, i64 2
  %832 = load i8, i8* %831, align 1
  %833 = zext i8 %832 to i32
  %834 = shl i32 %833, 16
  %835 = load i32, i32* %6, align 4
  %836 = add i32 %835, %834
  store i32 %836, i32* %6, align 4
  br label %837

837:                                              ; preds = %757, %829
  %838 = load i8*, i8** %13, align 8
  %839 = getelementptr inbounds i8, i8* %838, i64 1
  %840 = load i8, i8* %839, align 1
  %841 = zext i8 %840 to i32
  %842 = shl i32 %841, 8
  %843 = load i32, i32* %6, align 4
  %844 = add i32 %843, %842
  store i32 %844, i32* %6, align 4
  br label %845

845:                                              ; preds = %757, %837
  %846 = load i8*, i8** %13, align 8
  %847 = getelementptr inbounds i8, i8* %846, i64 0
  %848 = load i8, i8* %847, align 1
  %849 = zext i8 %848 to i32
  %850 = load i32, i32* %6, align 4
  %851 = add i32 %850, %849
  store i32 %851, i32* %6, align 4
  br label %854

852:                                              ; preds = %757
  %853 = load i32, i32* %8, align 4
  store i32 %853, i32* %3, align 4
  br label %928

854:                                              ; preds = %757, %845
  br label %855

855:                                              ; preds = %854, %587
  br label %856

856:                                              ; preds = %855, %273
  %857 = load i32, i32* %7, align 4
  %858 = load i32, i32* %8, align 4
  %859 = xor i32 %858, %857
  store i32 %859, i32* %8, align 4
  %860 = load i32, i32* %7, align 4
  %861 = shl i32 %860, 14
  %862 = load i32, i32* %7, align 4
  %863 = lshr i32 %862, 18
  %864 = xor i32 %861, %863
  %865 = load i32, i32* %8, align 4
  %866 = sub i32 %865, %864
  store i32 %866, i32* %8, align 4
  %867 = load i32, i32* %8, align 4
  %868 = load i32, i32* %6, align 4
  %869 = xor i32 %868, %867
  store i32 %869, i32* %6, align 4
  %870 = load i32, i32* %8, align 4
  %871 = shl i32 %870, 11
  %872 = load i32, i32* %8, align 4
  %873 = lshr i32 %872, 21
  %874 = xor i32 %871, %873
  %875 = load i32, i32* %6, align 4
  %876 = sub i32 %875, %874
  store i32 %876, i32* %6, align 4
  %877 = load i32, i32* %6, align 4
  %878 = load i32, i32* %7, align 4
  %879 = xor i32 %878, %877
  store i32 %879, i32* %7, align 4
  %880 = load i32, i32* %6, align 4
  %881 = shl i32 %880, 25
  %882 = load i32, i32* %6, align 4
  %883 = lshr i32 %882, 7
  %884 = xor i32 %881, %883
  %885 = load i32, i32* %7, align 4
  %886 = sub i32 %885, %884
  store i32 %886, i32* %7, align 4
  %887 = load i32, i32* %7, align 4
  %888 = load i32, i32* %8, align 4
  %889 = xor i32 %888, %887
  store i32 %889, i32* %8, align 4
  %890 = load i32, i32* %7, align 4
  %891 = shl i32 %890, 16
  %892 = load i32, i32* %7, align 4
  %893 = lshr i32 %892, 16
  %894 = xor i32 %891, %893
  %895 = load i32, i32* %8, align 4
  %896 = sub i32 %895, %894
  store i32 %896, i32* %8, align 4
  %897 = load i32, i32* %8, align 4
  %898 = load i32, i32* %6, align 4
  %899 = xor i32 %898, %897
  store i32 %899, i32* %6, align 4
  %900 = load i32, i32* %8, align 4
  %901 = shl i32 %900, 4
  %902 = load i32, i32* %8, align 4
  %903 = lshr i32 %902, 28
  %904 = xor i32 %901, %903
  %905 = load i32, i32* %6, align 4
  %906 = sub i32 %905, %904
  store i32 %906, i32* %6, align 4
  %907 = load i32, i32* %6, align 4
  %908 = load i32, i32* %7, align 4
  %909 = xor i32 %908, %907
  store i32 %909, i32* %7, align 4
  %910 = load i32, i32* %6, align 4
  %911 = shl i32 %910, 14
  %912 = load i32, i32* %6, align 4
  %913 = lshr i32 %912, 18
  %914 = xor i32 %911, %913
  %915 = load i32, i32* %7, align 4
  %916 = sub i32 %915, %914
  store i32 %916, i32* %7, align 4
  %917 = load i32, i32* %7, align 4
  %918 = load i32, i32* %8, align 4
  %919 = xor i32 %918, %917
  store i32 %919, i32* %8, align 4
  %920 = load i32, i32* %7, align 4
  %921 = shl i32 %920, 24
  %922 = load i32, i32* %7, align 4
  %923 = lshr i32 %922, 8
  %924 = xor i32 %921, %923
  %925 = load i32, i32* %8, align 4
  %926 = sub i32 %925, %924
  store i32 %926, i32* %8, align 4
  %927 = load i32, i32* %8, align 4
  store i32 %927, i32* %3, align 4
  br label %928

928:                                              ; preds = %856, %852, %585, %271
  %929 = load i32, i32* %3, align 4
  ret i32 %929
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @MurmurHash3_x86_32(i8* %0, i64 %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i8*, align 8
  %17 = alloca i32, align 4
  store i8* %0, i8** %6, align 8
  store i64 %1, i64* %7, align 8
  %18 = load i8*, i8** %6, align 8
  store i8* %18, i8** %8, align 8
  %19 = load i64, i64* %7, align 8
  %20 = udiv i64 %19, 4
  %21 = trunc i64 %20 to i32
  store i32 %21, i32* %9, align 4
  store i32 0, i32* %10, align 4
  store i32 -862048943, i32* %11, align 4
  store i32 461845907, i32* %12, align 4
  %22 = load i8*, i8** %8, align 8
  %23 = load i32, i32* %9, align 4
  %24 = mul nsw i32 %23, 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %22, i64 %25
  %27 = bitcast i8* %26 to i32*
  store i32* %27, i32** %13, align 8
  %28 = load i32, i32* %9, align 4
  %29 = sub nsw i32 0, %28
  store i32 %29, i32* %14, align 4
  br label %30

30:                                               ; preds = %57, %2
  %31 = load i32, i32* %14, align 4
  %32 = icmp ne i32 %31, 0
  br i1 %32, label %33, label %60

33:                                               ; preds = %30
  %34 = load i32*, i32** %13, align 8
  %35 = load i32, i32* %14, align 4
  store i32* %34, i32** %4, align 8
  store i32 %35, i32* %5, align 4
  %36 = load i32*, i32** %4, align 8
  %37 = load i32, i32* %5, align 4
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds i32, i32* %36, i64 %38
  %40 = load i32, i32* %39, align 4
  store i32 %40, i32* %15, align 4
  %41 = load i32, i32* %11, align 4
  %42 = load i32, i32* %15, align 4
  %43 = mul i32 %42, %41
  store i32 %43, i32* %15, align 4
  %44 = load i32, i32* %15, align 4
  %45 = call i32 @rotl32(i32 %44, i8 signext 15)
  store i32 %45, i32* %15, align 4
  %46 = load i32, i32* %12, align 4
  %47 = load i32, i32* %15, align 4
  %48 = mul i32 %47, %46
  store i32 %48, i32* %15, align 4
  %49 = load i32, i32* %15, align 4
  %50 = load i32, i32* %10, align 4
  %51 = xor i32 %50, %49
  store i32 %51, i32* %10, align 4
  %52 = load i32, i32* %10, align 4
  %53 = call i32 @rotl32(i32 %52, i8 signext 13)
  store i32 %53, i32* %10, align 4
  %54 = load i32, i32* %10, align 4
  %55 = mul i32 %54, 5
  %56 = add i32 %55, -430675100
  store i32 %56, i32* %10, align 4
  br label %57

57:                                               ; preds = %33
  %58 = load i32, i32* %14, align 4
  %59 = add nsw i32 %58, 1
  store i32 %59, i32* %14, align 4
  br label %30, !llvm.loop !51

60:                                               ; preds = %30
  %61 = load i8*, i8** %8, align 8
  %62 = load i32, i32* %9, align 4
  %63 = mul nsw i32 %62, 4
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds i8, i8* %61, i64 %64
  store i8* %65, i8** %16, align 8
  store i32 0, i32* %17, align 4
  %66 = load i64, i64* %7, align 8
  %67 = and i64 %66, 3
  switch i64 %67, label %102 [
    i64 3, label %68
    i64 2, label %76
    i64 1, label %84
  ]

68:                                               ; preds = %60
  %69 = load i8*, i8** %16, align 8
  %70 = getelementptr inbounds i8, i8* %69, i64 2
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i32
  %73 = shl i32 %72, 16
  %74 = load i32, i32* %17, align 4
  %75 = xor i32 %74, %73
  store i32 %75, i32* %17, align 4
  br label %76

76:                                               ; preds = %60, %68
  %77 = load i8*, i8** %16, align 8
  %78 = getelementptr inbounds i8, i8* %77, i64 1
  %79 = load i8, i8* %78, align 1
  %80 = zext i8 %79 to i32
  %81 = shl i32 %80, 8
  %82 = load i32, i32* %17, align 4
  %83 = xor i32 %82, %81
  store i32 %83, i32* %17, align 4
  br label %84

84:                                               ; preds = %60, %76
  %85 = load i8*, i8** %16, align 8
  %86 = getelementptr inbounds i8, i8* %85, i64 0
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i32
  %89 = load i32, i32* %17, align 4
  %90 = xor i32 %89, %88
  store i32 %90, i32* %17, align 4
  %91 = load i32, i32* %11, align 4
  %92 = load i32, i32* %17, align 4
  %93 = mul i32 %92, %91
  store i32 %93, i32* %17, align 4
  %94 = load i32, i32* %17, align 4
  %95 = call i32 @rotl32(i32 %94, i8 signext 15)
  store i32 %95, i32* %17, align 4
  %96 = load i32, i32* %12, align 4
  %97 = load i32, i32* %17, align 4
  %98 = mul i32 %97, %96
  store i32 %98, i32* %17, align 4
  %99 = load i32, i32* %17, align 4
  %100 = load i32, i32* %10, align 4
  %101 = xor i32 %100, %99
  store i32 %101, i32* %10, align 4
  br label %102

102:                                              ; preds = %84, %60
  %103 = load i64, i64* %7, align 8
  %104 = load i32, i32* %10, align 4
  %105 = zext i32 %104 to i64
  %106 = xor i64 %105, %103
  %107 = trunc i64 %106 to i32
  store i32 %107, i32* %10, align 4
  %108 = load i32, i32* %10, align 4
  store i32 %108, i32* %3, align 4
  %109 = load i32, i32* %3, align 4
  %110 = lshr i32 %109, 16
  %111 = load i32, i32* %3, align 4
  %112 = xor i32 %111, %110
  store i32 %112, i32* %3, align 4
  %113 = load i32, i32* %3, align 4
  %114 = mul i32 %113, -2048144789
  store i32 %114, i32* %3, align 4
  %115 = load i32, i32* %3, align 4
  %116 = lshr i32 %115, 13
  %117 = load i32, i32* %3, align 4
  %118 = xor i32 %117, %116
  store i32 %118, i32* %3, align 4
  %119 = load i32, i32* %3, align 4
  %120 = mul i32 %119, -1028477387
  store i32 %120, i32* %3, align 4
  %121 = load i32, i32* %3, align 4
  %122 = lshr i32 %121, 16
  %123 = load i32, i32* %3, align 4
  %124 = xor i32 %123, %122
  store i32 %124, i32* %3, align 4
  %125 = load i32, i32* %3, align 4
  store i32 %125, i32* %10, align 4
  %126 = load i32, i32* %10, align 4
  ret i32 %126
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rotl32(i32 %0, i8 signext %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8, align 1
  store i32 %0, i32* %3, align 4
  store i8 %1, i8* %4, align 1
  %5 = load i32, i32* %3, align 4
  %6 = load i8, i8* %4, align 1
  %7 = sext i8 %6 to i32
  %8 = shl i32 %5, %7
  %9 = load i32, i32* %3, align 4
  %10 = load i8, i8* %4, align 1
  %11 = sext i8 %10 to i32
  %12 = sub nsw i32 32, %11
  %13 = lshr i32 %9, %12
  %14 = or i32 %8, %13
  ret i32 %14
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @slabs_set_storage(i8* %0) #0 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  store i8* %3, i8** @storage, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @slabs_clsid(i64 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  store i64 %0, i64* %3, align 8
  store i32 1, i32* %4, align 4
  %5 = load i64, i64* %3, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = load i64, i64* %3, align 8
  %9 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 22), align 4
  %10 = sext i32 %9 to i64
  %11 = icmp ugt i64 %8, %10
  br i1 %11, label %12, label %13

12:                                               ; preds = %7, %1
  store i32 0, i32* %2, align 4
  br label %33

13:                                               ; preds = %7
  br label %14

14:                                               ; preds = %30, %13
  %15 = load i64, i64* %3, align 8
  %16 = load i32, i32* %4, align 4
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds [64 x %struct.slabclass_t], [64 x %struct.slabclass_t]* @slabclass, i64 0, i64 %17
  %19 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %18, i32 0, i32 0
  %20 = load i32, i32* %19, align 8
  %21 = zext i32 %20 to i64
  %22 = icmp ugt i64 %15, %21
  br i1 %22, label %23, label %31

23:                                               ; preds = %14
  %24 = load i32, i32* %4, align 4
  %25 = add nsw i32 %24, 1
  store i32 %25, i32* %4, align 4
  %26 = load i32, i32* @power_largest, align 4
  %27 = icmp eq i32 %24, %26
  br i1 %27, label %28, label %30

28:                                               ; preds = %23
  %29 = load i32, i32* @power_largest, align 4
  store i32 %29, i32* %2, align 4
  br label %33

30:                                               ; preds = %23
  br label %14, !llvm.loop !52

31:                                               ; preds = %14
  %32 = load i32, i32* %4, align 4
  store i32 %32, i32* %2, align 4
  br label %33

33:                                               ; preds = %31, %28, %12
  %34 = load i32, i32* %2, align 4
  ret i32 %34
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @slabs_size(i32 %0) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = sext i32 %3 to i64
  %5 = getelementptr inbounds [64 x %struct.slabclass_t], [64 x %struct.slabclass_t]* @slabclass, i64 0, i64 %4
  %6 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %5, i32 0, i32 0
  %7 = load i32, i32* %6, align 8
  ret i32 %7
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @slabs_fixup(i8* %0, i32 %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.slabclass_t*, align 8
  %7 = alloca %struct._stritem*, align 8
  %8 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  store i32 %1, i32* %5, align 4
  %9 = load i8*, i8** %4, align 8
  %10 = bitcast i8* %9 to %struct._stritem*
  store %struct._stritem* %10, %struct._stritem** %7, align 8
  %11 = load %struct._stritem*, %struct._stritem** %7, align 8
  %12 = getelementptr inbounds %struct._stritem, %struct._stritem* %11, i32 0, i32 8
  %13 = load i8, i8* %12, align 8
  %14 = zext i8 %13 to i32
  %15 = and i32 %14, -193
  store i32 %15, i32* %8, align 4
  %16 = load i32, i32* %8, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %2
  store %struct.slabclass_t* getelementptr inbounds ([64 x %struct.slabclass_t], [64 x %struct.slabclass_t]* @slabclass, i64 0, i64 0), %struct.slabclass_t** %6, align 8
  %19 = call i32 @grow_slab_list(i32 0)
  %20 = load i8*, i8** %4, align 8
  %21 = load %struct.slabclass_t*, %struct.slabclass_t** %6, align 8
  %22 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %21, i32 0, i32 5
  %23 = load i8**, i8*** %22, align 8
  %24 = load %struct.slabclass_t*, %struct.slabclass_t** %6, align 8
  %25 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %24, i32 0, i32 4
  %26 = load i32, i32* %25, align 4
  %27 = add i32 %26, 1
  store i32 %27, i32* %25, align 4
  %28 = zext i32 %26 to i64
  %29 = getelementptr inbounds i8*, i8** %23, i64 %28
  store i8* %20, i8** %29, align 8
  store i32 -1, i32* %3, align 4
  br label %87

30:                                               ; preds = %2
  %31 = load i32, i32* %8, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds [64 x %struct.slabclass_t], [64 x %struct.slabclass_t]* @slabclass, i64 0, i64 %32
  store %struct.slabclass_t* %33, %struct.slabclass_t** %6, align 8
  %34 = load i32, i32* %5, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %49

36:                                               ; preds = %30
  %37 = load i32, i32* %8, align 4
  %38 = call i32 @grow_slab_list(i32 %37)
  %39 = load i8*, i8** %4, align 8
  %40 = load %struct.slabclass_t*, %struct.slabclass_t** %6, align 8
  %41 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %40, i32 0, i32 5
  %42 = load i8**, i8*** %41, align 8
  %43 = load %struct.slabclass_t*, %struct.slabclass_t** %6, align 8
  %44 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %43, i32 0, i32 4
  %45 = load i32, i32* %44, align 4
  %46 = add i32 %45, 1
  store i32 %46, i32* %44, align 4
  %47 = zext i32 %45 to i64
  %48 = getelementptr inbounds i8*, i8** %42, i64 %47
  store i8* %39, i8** %48, align 8
  br label %49

49:                                               ; preds = %36, %30
  %50 = load %struct._stritem*, %struct._stritem** %7, align 8
  %51 = getelementptr inbounds %struct._stritem, %struct._stritem* %50, i32 0, i32 7
  %52 = load i16, i16* %51, align 2
  %53 = zext i16 %52 to i32
  %54 = icmp eq i32 %53, 4
  br i1 %54, label %55, label %83

55:                                               ; preds = %49
  %56 = load %struct._stritem*, %struct._stritem** %7, align 8
  %57 = getelementptr inbounds %struct._stritem, %struct._stritem* %56, i32 0, i32 1
  store %struct._stritem* null, %struct._stritem** %57, align 8
  %58 = load %struct.slabclass_t*, %struct.slabclass_t** %6, align 8
  %59 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %58, i32 0, i32 2
  %60 = load i8*, i8** %59, align 8
  %61 = bitcast i8* %60 to %struct._stritem*
  %62 = load %struct._stritem*, %struct._stritem** %7, align 8
  %63 = getelementptr inbounds %struct._stritem, %struct._stritem* %62, i32 0, i32 0
  store %struct._stritem* %61, %struct._stritem** %63, align 8
  %64 = load %struct._stritem*, %struct._stritem** %7, align 8
  %65 = getelementptr inbounds %struct._stritem, %struct._stritem* %64, i32 0, i32 0
  %66 = load %struct._stritem*, %struct._stritem** %65, align 8
  %67 = icmp ne %struct._stritem* %66, null
  br i1 %67, label %68, label %74

68:                                               ; preds = %55
  %69 = load %struct._stritem*, %struct._stritem** %7, align 8
  %70 = load %struct._stritem*, %struct._stritem** %7, align 8
  %71 = getelementptr inbounds %struct._stritem, %struct._stritem* %70, i32 0, i32 0
  %72 = load %struct._stritem*, %struct._stritem** %71, align 8
  %73 = getelementptr inbounds %struct._stritem, %struct._stritem* %72, i32 0, i32 1
  store %struct._stritem* %69, %struct._stritem** %73, align 8
  br label %74

74:                                               ; preds = %68, %55
  %75 = load %struct._stritem*, %struct._stritem** %7, align 8
  %76 = bitcast %struct._stritem* %75 to i8*
  %77 = load %struct.slabclass_t*, %struct.slabclass_t** %6, align 8
  %78 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %77, i32 0, i32 2
  store i8* %76, i8** %78, align 8
  %79 = load %struct.slabclass_t*, %struct.slabclass_t** %6, align 8
  %80 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %79, i32 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 1
  store i32 %82, i32* %80, align 8
  br label %83

83:                                               ; preds = %74, %49
  %84 = load %struct.slabclass_t*, %struct.slabclass_t** %6, align 8
  %85 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %84, i32 0, i32 0
  %86 = load i32, i32* %85, align 8
  store i32 %86, i32* %3, align 4
  br label %87

87:                                               ; preds = %83, %18
  %88 = load i32, i32* %3, align 4
  ret i32 %88
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @grow_slab_list(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.slabclass_t*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  store i32 %0, i32* %3, align 4
  %7 = load i32, i32* %3, align 4
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds [64 x %struct.slabclass_t], [64 x %struct.slabclass_t]* @slabclass, i64 0, i64 %8
  store %struct.slabclass_t* %9, %struct.slabclass_t** %4, align 8
  %10 = load %struct.slabclass_t*, %struct.slabclass_t** %4, align 8
  %11 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %10, i32 0, i32 4
  %12 = load i32, i32* %11, align 4
  %13 = load %struct.slabclass_t*, %struct.slabclass_t** %4, align 8
  %14 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %13, i32 0, i32 6
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %12, %15
  br i1 %16, label %17, label %50

17:                                               ; preds = %1
  %18 = load %struct.slabclass_t*, %struct.slabclass_t** %4, align 8
  %19 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %18, i32 0, i32 6
  %20 = load i32, i32* %19, align 8
  %21 = icmp ne i32 %20, 0
  br i1 %21, label %22, label %27

22:                                               ; preds = %17
  %23 = load %struct.slabclass_t*, %struct.slabclass_t** %4, align 8
  %24 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %23, i32 0, i32 6
  %25 = load i32, i32* %24, align 8
  %26 = mul i32 %25, 2
  br label %28

27:                                               ; preds = %17
  br label %28

28:                                               ; preds = %27, %22
  %29 = phi i32 [ %26, %22 ], [ 16, %27 ]
  %30 = zext i32 %29 to i64
  store i64 %30, i64* %5, align 8
  %31 = load %struct.slabclass_t*, %struct.slabclass_t** %4, align 8
  %32 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %31, i32 0, i32 5
  %33 = load i8**, i8*** %32, align 8
  %34 = bitcast i8** %33 to i8*
  %35 = load i64, i64* %5, align 8
  %36 = mul i64 %35, 8
  %37 = call i8* @realloc(i8* %34, i64 %36) #14
  store i8* %37, i8** %6, align 8
  %38 = load i8*, i8** %6, align 8
  %39 = icmp eq i8* %38, null
  br i1 %39, label %40, label %41

40:                                               ; preds = %28
  store i32 0, i32* %2, align 4
  br label %51

41:                                               ; preds = %28
  %42 = load i64, i64* %5, align 8
  %43 = trunc i64 %42 to i32
  %44 = load %struct.slabclass_t*, %struct.slabclass_t** %4, align 8
  %45 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %44, i32 0, i32 6
  store i32 %43, i32* %45, align 8
  %46 = load i8*, i8** %6, align 8
  %47 = bitcast i8* %46 to i8**
  %48 = load %struct.slabclass_t*, %struct.slabclass_t** %4, align 8
  %49 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %48, i32 0, i32 5
  store i8** %47, i8*** %49, align 8
  br label %50

50:                                               ; preds = %41, %1
  store i32 1, i32* %2, align 4
  br label %51

51:                                               ; preds = %50, %40
  %52 = load i32, i32* %2, align 4
  ret i32 %52
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @slabs_init(i64 %0, double %1, i1 zeroext %2, i32* %3, i8* %4, i1 zeroext %5) #0 {
  %7 = alloca i64, align 8
  %8 = alloca double, align 8
  %9 = alloca i8, align 1
  %10 = alloca i32*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8, align 1
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i8, align 1
  %16 = alloca i8*, align 8
  %17 = alloca i64, align 8
  store i64 %0, i64* %7, align 8
  store double %1, double* %8, align 8
  %18 = zext i1 %2 to i8
  store i8 %18, i8* %9, align 1
  store i32* %3, i32** %10, align 8
  store i8* %4, i8** %11, align 8
  %19 = zext i1 %5 to i8
  store i8 %19, i8* %12, align 1
  store i32 0, i32* %13, align 4
  %20 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 13), align 8
  %21 = sext i32 %20 to i64
  %22 = add i64 48, %21
  %23 = trunc i64 %22 to i32
  store i32 %23, i32* %14, align 4
  store i8 0, i8* %15, align 1
  %24 = load i64, i64* %7, align 8
  store i64 %24, i64* @mem_limit, align 8
  %25 = load i8, i8* %9, align 1
  %26 = trunc i8 %25 to i1
  br i1 %26, label %27, label %42

27:                                               ; preds = %6
  %28 = load i8*, i8** %11, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %30, label %42

30:                                               ; preds = %27
  %31 = load i64, i64* @mem_limit, align 8
  %32 = call i8* @alloc_large_chunk(i64 %31)
  store i8* %32, i8** @mem_base, align 8
  %33 = load i8*, i8** @mem_base, align 8
  %34 = icmp ne i8* %33, null
  br i1 %34, label %35, label %38

35:                                               ; preds = %30
  store i8 1, i8* %15, align 1
  %36 = load i8*, i8** @mem_base, align 8
  store i8* %36, i8** @mem_current, align 8
  %37 = load i64, i64* @mem_limit, align 8
  store i64 %37, i64* @mem_avail, align 8
  br label %41

38:                                               ; preds = %30
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %40 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %39, i8* getelementptr inbounds ([98 x i8], [98 x i8]* @.str.519, i64 0, i64 0))
  br label %41

41:                                               ; preds = %38, %35
  br label %61

42:                                               ; preds = %27, %6
  %43 = load i8, i8* %9, align 1
  %44 = trunc i8 %43 to i1
  br i1 %44, label %45, label %60

45:                                               ; preds = %42
  %46 = load i8*, i8** %11, align 8
  %47 = icmp ne i8* %46, null
  br i1 %47, label %48, label %60

48:                                               ; preds = %45
  store i8 1, i8* %15, align 1
  %49 = load i8*, i8** %11, align 8
  store i8* %49, i8** @mem_base, align 8
  %50 = load i8, i8* %12, align 1
  %51 = trunc i8 %50 to i1
  br i1 %51, label %52, label %56

52:                                               ; preds = %48
  %53 = load i8*, i8** @mem_base, align 8
  %54 = load i64, i64* @mem_limit, align 8
  %55 = getelementptr inbounds i8, i8* %53, i64 %54
  store i8* %55, i8** @mem_current, align 8
  store i64 0, i64* @mem_avail, align 8
  br label %59

56:                                               ; preds = %48
  %57 = load i8*, i8** @mem_base, align 8
  store i8* %57, i8** @mem_current, align 8
  %58 = load i64, i64* @mem_limit, align 8
  store i64 %58, i64* @mem_avail, align 8
  br label %59

59:                                               ; preds = %56, %52
  br label %60

60:                                               ; preds = %59, %45, %42
  br label %61

61:                                               ; preds = %60, %41
  call void @llvm.memset.p0i8.i64(i8* align 16 bitcast ([64 x %struct.slabclass_t]* @slabclass to i8*), i8 0, i64 2560, i1 false)
  br label %62

62:                                               ; preds = %147, %61
  %63 = load i32, i32* %13, align 4
  %64 = add nsw i32 %63, 1
  store i32 %64, i32* %13, align 4
  %65 = icmp slt i32 %64, 63
  br i1 %65, label %66, label %148

66:                                               ; preds = %62
  %67 = load i32*, i32** %10, align 8
  %68 = icmp ne i32* %67, null
  br i1 %68, label %69, label %85

69:                                               ; preds = %66
  %70 = load i32*, i32** %10, align 8
  %71 = load i32, i32* %13, align 4
  %72 = sub nsw i32 %71, 1
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds i32, i32* %70, i64 %73
  %75 = load i32, i32* %74, align 4
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %78

77:                                               ; preds = %69
  br label %148

78:                                               ; preds = %69
  %79 = load i32*, i32** %10, align 8
  %80 = load i32, i32* %13, align 4
  %81 = sub nsw i32 %80, 1
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds i32, i32* %79, i64 %82
  %84 = load i32, i32* %83, align 4
  store i32 %84, i32* %14, align 4
  br label %95

85:                                               ; preds = %66
  %86 = load i32, i32* %14, align 4
  %87 = uitofp i32 %86 to double
  %88 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 23), align 8
  %89 = sitofp i32 %88 to double
  %90 = load double, double* %8, align 8
  %91 = fdiv double %89, %90
  %92 = fcmp oge double %87, %91
  br i1 %92, label %93, label %94

93:                                               ; preds = %85
  br label %148

94:                                               ; preds = %85
  br label %95

95:                                               ; preds = %94, %78
  %96 = load i32, i32* %14, align 4
  %97 = urem i32 %96, 8
  %98 = icmp ne i32 %97, 0
  br i1 %98, label %99, label %105

99:                                               ; preds = %95
  %100 = load i32, i32* %14, align 4
  %101 = urem i32 %100, 8
  %102 = sub i32 8, %101
  %103 = load i32, i32* %14, align 4
  %104 = add i32 %103, %102
  store i32 %104, i32* %14, align 4
  br label %105

105:                                              ; preds = %99, %95
  %106 = load i32, i32* %14, align 4
  %107 = load i32, i32* %13, align 4
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds [64 x %struct.slabclass_t], [64 x %struct.slabclass_t]* @slabclass, i64 0, i64 %108
  %110 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %109, i32 0, i32 0
  store i32 %106, i32* %110, align 8
  %111 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 24), align 4
  %112 = load i32, i32* %13, align 4
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds [64 x %struct.slabclass_t], [64 x %struct.slabclass_t]* @slabclass, i64 0, i64 %113
  %115 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %114, i32 0, i32 0
  %116 = load i32, i32* %115, align 8
  %117 = udiv i32 %111, %116
  %118 = load i32, i32* %13, align 4
  %119 = sext i32 %118 to i64
  %120 = getelementptr inbounds [64 x %struct.slabclass_t], [64 x %struct.slabclass_t]* @slabclass, i64 0, i64 %119
  %121 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %120, i32 0, i32 1
  store i32 %117, i32* %121, align 4
  %122 = load i32*, i32** %10, align 8
  %123 = icmp eq i32* %122, null
  br i1 %123, label %124, label %130

124:                                              ; preds = %105
  %125 = load double, double* %8, align 8
  %126 = load i32, i32* %14, align 4
  %127 = uitofp i32 %126 to double
  %128 = fmul double %127, %125
  %129 = fptoui double %128 to i32
  store i32 %129, i32* %14, align 4
  br label %130

130:                                              ; preds = %124, %105
  %131 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %132 = icmp sgt i32 %131, 1
  br i1 %132, label %133, label %147

133:                                              ; preds = %130
  %134 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %135 = load i32, i32* %13, align 4
  %136 = load i32, i32* %13, align 4
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds [64 x %struct.slabclass_t], [64 x %struct.slabclass_t]* @slabclass, i64 0, i64 %137
  %139 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %138, i32 0, i32 0
  %140 = load i32, i32* %139, align 8
  %141 = load i32, i32* %13, align 4
  %142 = sext i32 %141 to i64
  %143 = getelementptr inbounds [64 x %struct.slabclass_t], [64 x %struct.slabclass_t]* @slabclass, i64 0, i64 %142
  %144 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %143, i32 0, i32 1
  %145 = load i32, i32* %144, align 4
  %146 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %134, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.1.520, i64 0, i64 0), i32 %135, i32 %140, i32 %145)
  br label %147

147:                                              ; preds = %133, %130
  br label %62, !llvm.loop !53

148:                                              ; preds = %93, %77, %62
  %149 = load i32, i32* %13, align 4
  store i32 %149, i32* @power_largest, align 4
  %150 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 23), align 8
  %151 = load i32, i32* @power_largest, align 4
  %152 = sext i32 %151 to i64
  %153 = getelementptr inbounds [64 x %struct.slabclass_t], [64 x %struct.slabclass_t]* @slabclass, i64 0, i64 %152
  %154 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %153, i32 0, i32 0
  store i32 %150, i32* %154, align 8
  %155 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 24), align 4
  %156 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 23), align 8
  %157 = sdiv i32 %155, %156
  %158 = load i32, i32* @power_largest, align 4
  %159 = sext i32 %158 to i64
  %160 = getelementptr inbounds [64 x %struct.slabclass_t], [64 x %struct.slabclass_t]* @slabclass, i64 0, i64 %159
  %161 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %160, i32 0, i32 1
  store i32 %157, i32* %161, align 4
  %162 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %163 = icmp sgt i32 %162, 1
  br i1 %163, label %164, label %178

164:                                              ; preds = %148
  %165 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %166 = load i32, i32* %13, align 4
  %167 = load i32, i32* %13, align 4
  %168 = sext i32 %167 to i64
  %169 = getelementptr inbounds [64 x %struct.slabclass_t], [64 x %struct.slabclass_t]* @slabclass, i64 0, i64 %168
  %170 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %169, i32 0, i32 0
  %171 = load i32, i32* %170, align 8
  %172 = load i32, i32* %13, align 4
  %173 = sext i32 %172 to i64
  %174 = getelementptr inbounds [64 x %struct.slabclass_t], [64 x %struct.slabclass_t]* @slabclass, i64 0, i64 %173
  %175 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %174, i32 0, i32 1
  %176 = load i32, i32* %175, align 4
  %177 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %165, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.1.520, i64 0, i64 0), i32 %166, i32 %171, i32 %176)
  br label %178

178:                                              ; preds = %164, %148
  %179 = call i8* @getenv(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2.521, i64 0, i64 0)) #14
  store i8* %179, i8** %16, align 8
  %180 = load i8*, i8** %16, align 8
  %181 = icmp ne i8* %180, null
  br i1 %181, label %182, label %188

182:                                              ; preds = %178
  %183 = load i8*, i8** %16, align 8
  %184 = call zeroext i1 @safe_strtoll(i8* %183, i64* %17)
  br i1 %184, label %185, label %187

185:                                              ; preds = %182
  %186 = load i64, i64* %17, align 8
  store i64 %186, i64* @mem_malloced, align 8
  br label %187

187:                                              ; preds = %185, %182
  br label %188

188:                                              ; preds = %187, %178
  %189 = load i8, i8* %15, align 1
  %190 = trunc i8 %189 to i1
  br i1 %190, label %191, label %197

191:                                              ; preds = %188
  %192 = load i8, i8* %12, align 1
  %193 = trunc i8 %192 to i1
  br i1 %193, label %196, label %194

194:                                              ; preds = %191
  %195 = load i32, i32* @power_largest, align 4
  call void @slabs_preallocate(i32 %195)
  br label %196

196:                                              ; preds = %194, %191
  br label %197

197:                                              ; preds = %196, %188
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @alloc_large_chunk(i64 %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i64, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %struct._IO_FILE*, align 8
  %7 = alloca i32, align 4
  %8 = alloca [64 x i8], align 16
  store i64 %0, i64* %3, align 8
  store i8* null, i8** %4, align 8
  store i64 0, i64* %5, align 8
  %9 = call %struct._IO_FILE* @fopen(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.523, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.524, i64 0, i64 0))
  store %struct._IO_FILE* %9, %struct._IO_FILE** %6, align 8
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8
  %11 = icmp ne %struct._IO_FILE* %10, null
  br i1 %11, label %12, label %32

12:                                               ; preds = %1
  br label %13

13:                                               ; preds = %28, %12
  %14 = getelementptr inbounds [64 x i8], [64 x i8]* %8, i64 0, i64 0
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8
  %16 = call i8* @fgets(i8* %14, i32 64, %struct._IO_FILE* %15)
  %17 = icmp ne i8* %16, null
  br i1 %17, label %18, label %29

18:                                               ; preds = %13
  %19 = getelementptr inbounds [64 x i8], [64 x i8]* %8, i64 0, i64 0
  %20 = call i32 @strncmp(i8* %19, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.525, i64 0, i64 0), i64 13) #16
  %21 = icmp ne i32 %20, 0
  br i1 %21, label %28, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds [64 x i8], [64 x i8]* %8, i64 0, i64 0
  %24 = getelementptr inbounds i8, i8* %23, i64 13
  %25 = call i32 (i8*, i8*, ...) @sscanf(i8* %24, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7.526, i64 0, i64 0), i64* %5) #14
  store i32 %25, i32* %7, align 4
  %26 = load i64, i64* %5, align 8
  %27 = shl i64 %26, 10
  store i64 %27, i64* %5, align 8
  br label %28

28:                                               ; preds = %22, %18
  br label %13, !llvm.loop !54

29:                                               ; preds = %13
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8
  %31 = call i32 @fclose(%struct._IO_FILE* %30)
  br label %32

32:                                               ; preds = %29, %1
  %33 = load i64, i64* %5, align 8
  %34 = icmp ne i64 %33, 0
  br i1 %34, label %38, label %35

35:                                               ; preds = %32
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %37 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %36, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8.527, i64 0, i64 0))
  store i8* null, i8** %2, align 8
  br label %68

38:                                               ; preds = %32
  %39 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %40 = icmp sgt i32 %39, 1
  br i1 %40, label %41, label %45

41:                                               ; preds = %38
  %42 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %43 = load i64, i64* %5, align 8
  %44 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %42, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.528, i64 0, i64 0), i64 %43)
  br label %45

45:                                               ; preds = %41, %38
  %46 = load i64, i64* %5, align 8
  %47 = load i64, i64* %3, align 8
  %48 = call i32 @posix_memalign(i8** %4, i64 %46, i64 %47) #14
  store i32 %48, i32* %7, align 4
  %49 = load i32, i32* %7, align 4
  %50 = icmp ne i32 %49, 0
  br i1 %50, label %51, label %55

51:                                               ; preds = %45
  %52 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %53 = load i32, i32* %7, align 4
  %54 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %52, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.10.529, i64 0, i64 0), i32 %53)
  store i8* null, i8** %2, align 8
  br label %68

55:                                               ; preds = %45
  %56 = load i8*, i8** %4, align 8
  %57 = load i64, i64* %3, align 8
  %58 = call i32 @madvise(i8* %56, i64 %57, i32 14) #14
  store i32 %58, i32* %7, align 4
  %59 = load i32, i32* %7, align 4
  %60 = icmp slt i32 %59, 0
  br i1 %60, label %61, label %66

61:                                               ; preds = %55
  %62 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %63 = load i32, i32* %7, align 4
  %64 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %62, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.11.530, i64 0, i64 0), i32 %63)
  %65 = load i8*, i8** %4, align 8
  call void @free(i8* %65) #14
  store i8* null, i8** %4, align 8
  br label %66

66:                                               ; preds = %61, %55
  %67 = load i8*, i8** %4, align 8
  store i8* %67, i8** %2, align 8
  br label %68

68:                                               ; preds = %66, %51, %35
  %69 = load i8*, i8** %2, align 8
  ret i8* %69
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @slabs_preallocate(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  store i32 0, i32* %4, align 4
  store i32 1, i32* %3, align 4
  br label %5

5:                                                ; preds = %23, %1
  %6 = load i32, i32* %3, align 4
  %7 = icmp slt i32 %6, 64
  br i1 %7, label %8, label %26

8:                                                ; preds = %5
  %9 = load i32, i32* %4, align 4
  %10 = add i32 %9, 1
  store i32 %10, i32* %4, align 4
  %11 = load i32, i32* %2, align 4
  %12 = icmp ugt i32 %10, %11
  br i1 %12, label %13, label %14

13:                                               ; preds = %8
  br label %26

14:                                               ; preds = %8
  %15 = load i32, i32* %3, align 4
  %16 = call i32 @do_slabs_newslab(i32 %15)
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %22

18:                                               ; preds = %14
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %20 = load i32, i32* @power_largest, align 4
  %21 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %19, i8* getelementptr inbounds ([121 x i8], [121 x i8]* @.str.12.522, i64 0, i64 0), i32 %20)
  call void @exit(i32 1) #17
  unreachable

22:                                               ; preds = %14
  br label %23

23:                                               ; preds = %22
  %24 = load i32, i32* %3, align 4
  %25 = add nsw i32 %24, 1
  store i32 %25, i32* %3, align 4
  br label %5, !llvm.loop !55

26:                                               ; preds = %13, %5
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @do_slabs_newslab(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.slabclass_t*, align 8
  %5 = alloca %struct.slabclass_t*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  store i32 %0, i32* %3, align 4
  %8 = load i32, i32* %3, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds [64 x %struct.slabclass_t], [64 x %struct.slabclass_t]* @slabclass, i64 0, i64 %9
  store %struct.slabclass_t* %10, %struct.slabclass_t** %4, align 8
  store %struct.slabclass_t* getelementptr inbounds ([64 x %struct.slabclass_t], [64 x %struct.slabclass_t]* @slabclass, i64 0, i64 0), %struct.slabclass_t** %5, align 8
  %11 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 31), align 1
  %12 = trunc i8 %11 to i1
  br i1 %12, label %17, label %13

13:                                               ; preds = %1
  %14 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 23), align 8
  %15 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 24), align 4
  %16 = icmp ne i32 %14, %15
  br i1 %16, label %17, label %19

17:                                               ; preds = %13, %1
  %18 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 24), align 4
  br label %27

19:                                               ; preds = %13
  %20 = load %struct.slabclass_t*, %struct.slabclass_t** %4, align 8
  %21 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %20, i32 0, i32 0
  %22 = load i32, i32* %21, align 8
  %23 = load %struct.slabclass_t*, %struct.slabclass_t** %4, align 8
  %24 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %23, i32 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = mul i32 %22, %25
  br label %27

27:                                               ; preds = %19, %17
  %28 = phi i32 [ %18, %17 ], [ %26, %19 ]
  store i32 %28, i32* %6, align 4
  %29 = load i64, i64* @mem_limit, align 8
  %30 = icmp ne i64 %29, 0
  br i1 %30, label %31, label %49

31:                                               ; preds = %27
  %32 = load i64, i64* @mem_malloced, align 8
  %33 = load i32, i32* %6, align 4
  %34 = sext i32 %33 to i64
  %35 = add i64 %32, %34
  %36 = load i64, i64* @mem_limit, align 8
  %37 = icmp ugt i64 %35, %36
  br i1 %37, label %38, label %49

38:                                               ; preds = %31
  %39 = load %struct.slabclass_t*, %struct.slabclass_t** %4, align 8
  %40 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %39, i32 0, i32 4
  %41 = load i32, i32* %40, align 4
  %42 = icmp ugt i32 %41, 0
  br i1 %42, label %43, label %49

43:                                               ; preds = %38
  %44 = load %struct.slabclass_t*, %struct.slabclass_t** %5, align 8
  %45 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %44, i32 0, i32 4
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %43
  store i8 1, i8* @mem_limit_reached, align 1
  store i32 0, i32* %2, align 4
  br label %78

49:                                               ; preds = %43, %38, %31, %27
  %50 = load i32, i32* %3, align 4
  %51 = call i32 @grow_slab_list(i32 %50)
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %61, label %53

53:                                               ; preds = %49
  %54 = call i8* @get_page_from_global_pool()
  store i8* %54, i8** %7, align 8
  %55 = icmp eq i8* %54, null
  br i1 %55, label %56, label %62

56:                                               ; preds = %53
  %57 = load i32, i32* %6, align 4
  %58 = sext i32 %57 to i64
  %59 = call i8* @memory_allocate(i64 %58)
  store i8* %59, i8** %7, align 8
  %60 = icmp eq i8* %59, null
  br i1 %60, label %61, label %62

61:                                               ; preds = %56, %49
  store i32 0, i32* %2, align 4
  br label %78

62:                                               ; preds = %56, %53
  %63 = load i8*, i8** %7, align 8
  %64 = load i32, i32* %6, align 4
  %65 = sext i32 %64 to i64
  call void @llvm.memset.p0i8.i64(i8* align 1 %63, i8 0, i64 %65, i1 false)
  %66 = load i8*, i8** %7, align 8
  %67 = load i32, i32* %3, align 4
  call void @split_slab_page_into_freelist(i8* %66, i32 %67)
  %68 = load i8*, i8** %7, align 8
  %69 = load %struct.slabclass_t*, %struct.slabclass_t** %4, align 8
  %70 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %69, i32 0, i32 5
  %71 = load i8**, i8*** %70, align 8
  %72 = load %struct.slabclass_t*, %struct.slabclass_t** %4, align 8
  %73 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %72, i32 0, i32 4
  %74 = load i32, i32* %73, align 4
  %75 = add i32 %74, 1
  store i32 %75, i32* %73, align 4
  %76 = zext i32 %74 to i64
  %77 = getelementptr inbounds i8*, i8** %71, i64 %76
  store i8* %68, i8** %77, align 8
  store i32 1, i32* %2, align 4
  br label %78

78:                                               ; preds = %62, %61, %48
  %79 = load i32, i32* %2, align 4
  ret i32 %79
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @get_page_from_global_pool() #0 {
  %1 = alloca i8*, align 8
  %2 = alloca %struct.slabclass_t*, align 8
  %3 = alloca i8*, align 8
  store %struct.slabclass_t* getelementptr inbounds ([64 x %struct.slabclass_t], [64 x %struct.slabclass_t]* @slabclass, i64 0, i64 0), %struct.slabclass_t** %2, align 8
  %4 = load %struct.slabclass_t*, %struct.slabclass_t** %2, align 8
  %5 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %4, i32 0, i32 4
  %6 = load i32, i32* %5, align 4
  %7 = icmp ult i32 %6, 1
  br i1 %7, label %8, label %9

8:                                                ; preds = %0
  store i8* null, i8** %1, align 8
  br label %25

9:                                                ; preds = %0
  %10 = load %struct.slabclass_t*, %struct.slabclass_t** %2, align 8
  %11 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %10, i32 0, i32 5
  %12 = load i8**, i8*** %11, align 8
  %13 = load %struct.slabclass_t*, %struct.slabclass_t** %2, align 8
  %14 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %13, i32 0, i32 4
  %15 = load i32, i32* %14, align 4
  %16 = sub i32 %15, 1
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds i8*, i8** %12, i64 %17
  %19 = load i8*, i8** %18, align 8
  store i8* %19, i8** %3, align 8
  %20 = load %struct.slabclass_t*, %struct.slabclass_t** %2, align 8
  %21 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %20, i32 0, i32 4
  %22 = load i32, i32* %21, align 4
  %23 = add i32 %22, -1
  store i32 %23, i32* %21, align 4
  %24 = load i8*, i8** %3, align 8
  store i8* %24, i8** %1, align 8
  br label %25

25:                                               ; preds = %9, %8
  %26 = load i8*, i8** %1, align 8
  ret i8* %26
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @memory_allocate(i64 %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i64, align 8
  %4 = alloca i8*, align 8
  store i64 %0, i64* %3, align 8
  %5 = load i8*, i8** @mem_base, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = load i64, i64* %3, align 8
  %9 = call noalias i8* @malloc(i64 %8) #14
  store i8* %9, i8** %4, align 8
  br label %39

10:                                               ; preds = %1
  %11 = load i8*, i8** @mem_current, align 8
  store i8* %11, i8** %4, align 8
  %12 = load i64, i64* %3, align 8
  %13 = load i64, i64* @mem_avail, align 8
  %14 = icmp ugt i64 %12, %13
  br i1 %14, label %15, label %16

15:                                               ; preds = %10
  store i8* null, i8** %2, align 8
  br label %44

16:                                               ; preds = %10
  %17 = load i64, i64* %3, align 8
  %18 = urem i64 %17, 8
  %19 = icmp ne i64 %18, 0
  br i1 %19, label %20, label %26

20:                                               ; preds = %16
  %21 = load i64, i64* %3, align 8
  %22 = urem i64 %21, 8
  %23 = sub i64 8, %22
  %24 = load i64, i64* %3, align 8
  %25 = add i64 %24, %23
  store i64 %25, i64* %3, align 8
  br label %26

26:                                               ; preds = %20, %16
  %27 = load i8*, i8** @mem_current, align 8
  %28 = load i64, i64* %3, align 8
  %29 = getelementptr inbounds i8, i8* %27, i64 %28
  store i8* %29, i8** @mem_current, align 8
  %30 = load i64, i64* %3, align 8
  %31 = load i64, i64* @mem_avail, align 8
  %32 = icmp ult i64 %30, %31
  br i1 %32, label %33, label %37

33:                                               ; preds = %26
  %34 = load i64, i64* %3, align 8
  %35 = load i64, i64* @mem_avail, align 8
  %36 = sub i64 %35, %34
  store i64 %36, i64* @mem_avail, align 8
  br label %38

37:                                               ; preds = %26
  store i64 0, i64* @mem_avail, align 8
  br label %38

38:                                               ; preds = %37, %33
  br label %39

39:                                               ; preds = %38, %7
  %40 = load i64, i64* %3, align 8
  %41 = load i64, i64* @mem_malloced, align 8
  %42 = add i64 %41, %40
  store i64 %42, i64* @mem_malloced, align 8
  %43 = load i8*, i8** %4, align 8
  store i8* %43, i8** %2, align 8
  br label %44

44:                                               ; preds = %39, %15
  %45 = load i8*, i8** %2, align 8
  ret i8* %45
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @split_slab_page_into_freelist(i8* %0, i32 %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.slabclass_t*, align 8
  %6 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  store i32 %1, i32* %4, align 4
  %7 = load i32, i32* %4, align 4
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds [64 x %struct.slabclass_t], [64 x %struct.slabclass_t]* @slabclass, i64 0, i64 %8
  store %struct.slabclass_t* %9, %struct.slabclass_t** %5, align 8
  store i32 0, i32* %6, align 4
  br label %10

10:                                               ; preds = %25, %2
  %11 = load i32, i32* %6, align 4
  %12 = load %struct.slabclass_t*, %struct.slabclass_t** %5, align 8
  %13 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %12, i32 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = icmp ult i32 %11, %14
  br i1 %15, label %16, label %28

16:                                               ; preds = %10
  %17 = load i8*, i8** %3, align 8
  %18 = load i32, i32* %4, align 4
  call void @do_slabs_free(i8* %17, i64 0, i32 %18)
  %19 = load %struct.slabclass_t*, %struct.slabclass_t** %5, align 8
  %20 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %19, i32 0, i32 0
  %21 = load i32, i32* %20, align 8
  %22 = load i8*, i8** %3, align 8
  %23 = zext i32 %21 to i64
  %24 = getelementptr inbounds i8, i8* %22, i64 %23
  store i8* %24, i8** %3, align 8
  br label %25

25:                                               ; preds = %16
  %26 = load i32, i32* %6, align 4
  %27 = add nsw i32 %26, 1
  store i32 %27, i32* %6, align 4
  br label %10, !llvm.loop !56

28:                                               ; preds = %10
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @do_slabs_free(i8* %0, i64 %1, i32 %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.slabclass_t*, align 8
  %8 = alloca %struct._stritem*, align 8
  store i8* %0, i8** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32 %2, i32* %6, align 4
  %9 = load i32, i32* %6, align 4
  %10 = icmp ult i32 %9, 1
  br i1 %10, label %15, label %11

11:                                               ; preds = %3
  %12 = load i32, i32* %6, align 4
  %13 = load i32, i32* @power_largest, align 4
  %14 = icmp ugt i32 %12, %13
  br i1 %14, label %15, label %16

15:                                               ; preds = %11, %3
  br label %66

16:                                               ; preds = %11
  %17 = load i32, i32* %6, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds [64 x %struct.slabclass_t], [64 x %struct.slabclass_t]* @slabclass, i64 0, i64 %18
  store %struct.slabclass_t* %19, %struct.slabclass_t** %7, align 8
  %20 = load i8*, i8** %4, align 8
  %21 = bitcast i8* %20 to %struct._stritem*
  store %struct._stritem* %21, %struct._stritem** %8, align 8
  %22 = load %struct._stritem*, %struct._stritem** %8, align 8
  %23 = getelementptr inbounds %struct._stritem, %struct._stritem* %22, i32 0, i32 7
  %24 = load i16, i16* %23, align 2
  %25 = zext i16 %24 to i32
  %26 = and i32 %25, 32
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %62

28:                                               ; preds = %16
  %29 = load %struct._stritem*, %struct._stritem** %8, align 8
  %30 = getelementptr inbounds %struct._stritem, %struct._stritem* %29, i32 0, i32 7
  store i16 4, i16* %30, align 2
  %31 = load i32, i32* %6, align 4
  %32 = trunc i32 %31 to i8
  %33 = load %struct._stritem*, %struct._stritem** %8, align 8
  %34 = getelementptr inbounds %struct._stritem, %struct._stritem* %33, i32 0, i32 8
  store i8 %32, i8* %34, align 8
  %35 = load %struct._stritem*, %struct._stritem** %8, align 8
  %36 = getelementptr inbounds %struct._stritem, %struct._stritem* %35, i32 0, i32 1
  store %struct._stritem* null, %struct._stritem** %36, align 8
  %37 = load %struct.slabclass_t*, %struct.slabclass_t** %7, align 8
  %38 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %37, i32 0, i32 2
  %39 = load i8*, i8** %38, align 8
  %40 = bitcast i8* %39 to %struct._stritem*
  %41 = load %struct._stritem*, %struct._stritem** %8, align 8
  %42 = getelementptr inbounds %struct._stritem, %struct._stritem* %41, i32 0, i32 0
  store %struct._stritem* %40, %struct._stritem** %42, align 8
  %43 = load %struct._stritem*, %struct._stritem** %8, align 8
  %44 = getelementptr inbounds %struct._stritem, %struct._stritem* %43, i32 0, i32 0
  %45 = load %struct._stritem*, %struct._stritem** %44, align 8
  %46 = icmp ne %struct._stritem* %45, null
  br i1 %46, label %47, label %53

47:                                               ; preds = %28
  %48 = load %struct._stritem*, %struct._stritem** %8, align 8
  %49 = load %struct._stritem*, %struct._stritem** %8, align 8
  %50 = getelementptr inbounds %struct._stritem, %struct._stritem* %49, i32 0, i32 0
  %51 = load %struct._stritem*, %struct._stritem** %50, align 8
  %52 = getelementptr inbounds %struct._stritem, %struct._stritem* %51, i32 0, i32 1
  store %struct._stritem* %48, %struct._stritem** %52, align 8
  br label %53

53:                                               ; preds = %47, %28
  %54 = load %struct._stritem*, %struct._stritem** %8, align 8
  %55 = bitcast %struct._stritem* %54 to i8*
  %56 = load %struct.slabclass_t*, %struct.slabclass_t** %7, align 8
  %57 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %56, i32 0, i32 2
  store i8* %55, i8** %57, align 8
  %58 = load %struct.slabclass_t*, %struct.slabclass_t** %7, align 8
  %59 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %58, i32 0, i32 3
  %60 = load i32, i32* %59, align 8
  %61 = add i32 %60, 1
  store i32 %61, i32* %59, align 8
  br label %65

62:                                               ; preds = %16
  %63 = load %struct._stritem*, %struct._stritem** %8, align 8
  %64 = load i64, i64* %5, align 8
  call void @do_slabs_free_chunked(%struct._stritem* %63, i64 %64)
  br label %65

65:                                               ; preds = %62, %53
  br label %66

66:                                               ; preds = %65, %15
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @do_slabs_free_chunked(%struct._stritem* %0, i64 %1) #0 {
  %3 = alloca %struct._stritem*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %struct._strchunk*, align 8
  %6 = alloca %struct.slabclass_t*, align 8
  %7 = alloca %struct._strchunk*, align 8
  store %struct._stritem* %0, %struct._stritem** %3, align 8
  store i64 %1, i64* %4, align 8
  %8 = load %struct._stritem*, %struct._stritem** %3, align 8
  %9 = getelementptr inbounds %struct._stritem, %struct._stritem* %8, i32 0, i32 10
  %10 = bitcast [0 x %union.anon.10]* %9 to i8*
  %11 = load %struct._stritem*, %struct._stritem** %3, align 8
  %12 = getelementptr inbounds %struct._stritem, %struct._stritem* %11, i32 0, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = zext i8 %13 to i32
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds i8, i8* %10, i64 %15
  %17 = getelementptr inbounds i8, i8* %16, i64 1
  %18 = load %struct._stritem*, %struct._stritem** %3, align 8
  %19 = getelementptr inbounds %struct._stritem, %struct._stritem* %18, i32 0, i32 7
  %20 = load i16, i16* %19, align 2
  %21 = zext i16 %20 to i32
  %22 = and i32 %21, 256
  %23 = icmp ne i32 %22, 0
  %24 = zext i1 %23 to i64
  %25 = select i1 %23, i64 4, i64 0
  %26 = getelementptr inbounds i8, i8* %17, i64 %25
  %27 = load %struct._stritem*, %struct._stritem** %3, align 8
  %28 = getelementptr inbounds %struct._stritem, %struct._stritem* %27, i32 0, i32 7
  %29 = load i16, i16* %28, align 2
  %30 = zext i16 %29 to i32
  %31 = and i32 %30, 2
  %32 = icmp ne i32 %31, 0
  %33 = zext i1 %32 to i64
  %34 = select i1 %32, i64 8, i64 0
  %35 = getelementptr inbounds i8, i8* %26, i64 %34
  %36 = bitcast i8* %35 to %struct._strchunk*
  store %struct._strchunk* %36, %struct._strchunk** %5, align 8
  %37 = load %struct._stritem*, %struct._stritem** %3, align 8
  %38 = getelementptr inbounds %struct._stritem, %struct._stritem* %37, i32 0, i32 7
  store i16 4, i16* %38, align 2
  %39 = load %struct._stritem*, %struct._stritem** %3, align 8
  %40 = getelementptr inbounds %struct._stritem, %struct._stritem* %39, i32 0, i32 1
  store %struct._stritem* null, %struct._stritem** %40, align 8
  %41 = load %struct._strchunk*, %struct._strchunk** %5, align 8
  %42 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %41, i32 0, i32 9
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %43 to i64
  %45 = getelementptr inbounds [64 x %struct.slabclass_t], [64 x %struct.slabclass_t]* @slabclass, i64 0, i64 %44
  store %struct.slabclass_t* %45, %struct.slabclass_t** %6, align 8
  %46 = load %struct._strchunk*, %struct._strchunk** %5, align 8
  %47 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %46, i32 0, i32 9
  %48 = load i8, i8* %47, align 1
  %49 = load %struct._stritem*, %struct._stritem** %3, align 8
  %50 = getelementptr inbounds %struct._stritem, %struct._stritem* %49, i32 0, i32 8
  store i8 %48, i8* %50, align 8
  %51 = load %struct._strchunk*, %struct._strchunk** %5, align 8
  %52 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %51, i32 0, i32 0
  %53 = load %struct._strchunk*, %struct._strchunk** %52, align 8
  %54 = icmp ne %struct._strchunk* %53, null
  br i1 %54, label %55, label %61

55:                                               ; preds = %2
  %56 = load %struct._strchunk*, %struct._strchunk** %5, align 8
  %57 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %56, i32 0, i32 0
  %58 = load %struct._strchunk*, %struct._strchunk** %57, align 8
  store %struct._strchunk* %58, %struct._strchunk** %5, align 8
  %59 = load %struct._strchunk*, %struct._strchunk** %5, align 8
  %60 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %59, i32 0, i32 1
  store %struct._strchunk* null, %struct._strchunk** %60, align 8
  br label %62

61:                                               ; preds = %2
  store %struct._strchunk* null, %struct._strchunk** %5, align 8
  br label %62

62:                                               ; preds = %61, %55
  %63 = load %struct._stritem*, %struct._stritem** %3, align 8
  %64 = getelementptr inbounds %struct._stritem, %struct._stritem* %63, i32 0, i32 1
  store %struct._stritem* null, %struct._stritem** %64, align 8
  %65 = load %struct.slabclass_t*, %struct.slabclass_t** %6, align 8
  %66 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %65, i32 0, i32 2
  %67 = load i8*, i8** %66, align 8
  %68 = bitcast i8* %67 to %struct._stritem*
  %69 = load %struct._stritem*, %struct._stritem** %3, align 8
  %70 = getelementptr inbounds %struct._stritem, %struct._stritem* %69, i32 0, i32 0
  store %struct._stritem* %68, %struct._stritem** %70, align 8
  %71 = load %struct._stritem*, %struct._stritem** %3, align 8
  %72 = getelementptr inbounds %struct._stritem, %struct._stritem* %71, i32 0, i32 0
  %73 = load %struct._stritem*, %struct._stritem** %72, align 8
  %74 = icmp ne %struct._stritem* %73, null
  br i1 %74, label %75, label %81

75:                                               ; preds = %62
  %76 = load %struct._stritem*, %struct._stritem** %3, align 8
  %77 = load %struct._stritem*, %struct._stritem** %3, align 8
  %78 = getelementptr inbounds %struct._stritem, %struct._stritem* %77, i32 0, i32 0
  %79 = load %struct._stritem*, %struct._stritem** %78, align 8
  %80 = getelementptr inbounds %struct._stritem, %struct._stritem* %79, i32 0, i32 1
  store %struct._stritem* %76, %struct._stritem** %80, align 8
  br label %81

81:                                               ; preds = %75, %62
  %82 = load %struct._stritem*, %struct._stritem** %3, align 8
  %83 = bitcast %struct._stritem* %82 to i8*
  %84 = load %struct.slabclass_t*, %struct.slabclass_t** %6, align 8
  %85 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %84, i32 0, i32 2
  store i8* %83, i8** %85, align 8
  %86 = load %struct.slabclass_t*, %struct.slabclass_t** %6, align 8
  %87 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %86, i32 0, i32 3
  %88 = load i32, i32* %87, align 8
  %89 = add i32 %88, 1
  store i32 %89, i32* %87, align 8
  br label %90

90:                                               ; preds = %122, %81
  %91 = load %struct._strchunk*, %struct._strchunk** %5, align 8
  %92 = icmp ne %struct._strchunk* %91, null
  br i1 %92, label %93, label %132

93:                                               ; preds = %90
  %94 = load %struct._strchunk*, %struct._strchunk** %5, align 8
  %95 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %94, i32 0, i32 7
  store i16 4, i16* %95, align 2
  %96 = load %struct._strchunk*, %struct._strchunk** %5, align 8
  %97 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %96, i32 0, i32 8
  %98 = load i8, i8* %97, align 8
  %99 = zext i8 %98 to i64
  %100 = getelementptr inbounds [64 x %struct.slabclass_t], [64 x %struct.slabclass_t]* @slabclass, i64 0, i64 %99
  store %struct.slabclass_t* %100, %struct.slabclass_t** %6, align 8
  %101 = load %struct._strchunk*, %struct._strchunk** %5, align 8
  %102 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %101, i32 0, i32 0
  %103 = load %struct._strchunk*, %struct._strchunk** %102, align 8
  store %struct._strchunk* %103, %struct._strchunk** %7, align 8
  %104 = load %struct._strchunk*, %struct._strchunk** %5, align 8
  %105 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %104, i32 0, i32 1
  store %struct._strchunk* null, %struct._strchunk** %105, align 8
  %106 = load %struct.slabclass_t*, %struct.slabclass_t** %6, align 8
  %107 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %106, i32 0, i32 2
  %108 = load i8*, i8** %107, align 8
  %109 = bitcast i8* %108 to %struct._strchunk*
  %110 = load %struct._strchunk*, %struct._strchunk** %5, align 8
  %111 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %110, i32 0, i32 0
  store %struct._strchunk* %109, %struct._strchunk** %111, align 8
  %112 = load %struct._strchunk*, %struct._strchunk** %5, align 8
  %113 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %112, i32 0, i32 0
  %114 = load %struct._strchunk*, %struct._strchunk** %113, align 8
  %115 = icmp ne %struct._strchunk* %114, null
  br i1 %115, label %116, label %122

116:                                              ; preds = %93
  %117 = load %struct._strchunk*, %struct._strchunk** %5, align 8
  %118 = load %struct._strchunk*, %struct._strchunk** %5, align 8
  %119 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %118, i32 0, i32 0
  %120 = load %struct._strchunk*, %struct._strchunk** %119, align 8
  %121 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %120, i32 0, i32 1
  store %struct._strchunk* %117, %struct._strchunk** %121, align 8
  br label %122

122:                                              ; preds = %116, %93
  %123 = load %struct._strchunk*, %struct._strchunk** %5, align 8
  %124 = bitcast %struct._strchunk* %123 to i8*
  %125 = load %struct.slabclass_t*, %struct.slabclass_t** %6, align 8
  %126 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %125, i32 0, i32 2
  store i8* %124, i8** %126, align 8
  %127 = load %struct.slabclass_t*, %struct.slabclass_t** %6, align 8
  %128 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %127, i32 0, i32 3
  %129 = load i32, i32* %128, align 8
  %130 = add i32 %129, 1
  store i32 %130, i32* %128, align 8
  %131 = load %struct._strchunk*, %struct._strchunk** %7, align 8
  store %struct._strchunk* %131, %struct._strchunk** %5, align 8
  br label %90, !llvm.loop !57

132:                                              ; preds = %90
  ret void
}

; Function Attrs: nounwind
declare dso_local i32 @sscanf(i8*, i8*, ...) #2

; Function Attrs: nounwind
declare dso_local i32 @posix_memalign(i8**, i64, i64) #2

; Function Attrs: nounwind
declare dso_local i32 @madvise(i8*, i64, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @slabs_prefill_global() #0 {
  %1 = alloca i8*, align 8
  %2 = alloca %struct.slabclass_t*, align 8
  %3 = alloca i32, align 4
  store %struct.slabclass_t* getelementptr inbounds ([64 x %struct.slabclass_t], [64 x %struct.slabclass_t]* @slabclass, i64 0, i64 0), %struct.slabclass_t** %2, align 8
  %4 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 24), align 4
  store i32 %4, i32* %3, align 4
  br label %5

5:                                                ; preds = %16, %0
  %6 = load i64, i64* @mem_malloced, align 8
  %7 = load i64, i64* @mem_limit, align 8
  %8 = icmp ult i64 %6, %7
  br i1 %8, label %9, label %14

9:                                                ; preds = %5
  %10 = load i32, i32* %3, align 4
  %11 = sext i32 %10 to i64
  %12 = call i8* @memory_allocate(i64 %11)
  store i8* %12, i8** %1, align 8
  %13 = icmp ne i8* %12, null
  br label %14

14:                                               ; preds = %9, %5
  %15 = phi i1 [ false, %5 ], [ %13, %9 ]
  br i1 %15, label %16, label %29

16:                                               ; preds = %14
  %17 = call i32 @grow_slab_list(i32 0)
  %18 = load i8*, i8** %1, align 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %18, i8 0, i64 48, i1 false)
  %19 = load i8*, i8** %1, align 8
  %20 = load %struct.slabclass_t*, %struct.slabclass_t** %2, align 8
  %21 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %20, i32 0, i32 5
  %22 = load i8**, i8*** %21, align 8
  %23 = load %struct.slabclass_t*, %struct.slabclass_t** %2, align 8
  %24 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %23, i32 0, i32 4
  %25 = load i32, i32* %24, align 4
  %26 = add i32 %25, 1
  store i32 %26, i32* %24, align 4
  %27 = zext i32 %25 to i64
  %28 = getelementptr inbounds i8*, i8** %22, i64 %27
  store i8* %19, i8** %28, align 8
  br label %5, !llvm.loop !58

29:                                               ; preds = %14
  store i8 1, i8* @mem_limit_reached, align 1
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @fill_slab_stats_automove(%struct.slab_stats_automove* %0) #0 {
  %2 = alloca %struct.slab_stats_automove*, align 8
  %3 = alloca i32, align 4
  %4 = alloca %struct.slabclass_t*, align 8
  %5 = alloca %struct.slab_stats_automove*, align 8
  store %struct.slab_stats_automove* %0, %struct.slab_stats_automove** %2, align 8
  %6 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @slabs_lock) #14
  store i32 0, i32* %3, align 4
  br label %7

7:                                                ; preds = %40, %1
  %8 = load i32, i32* %3, align 4
  %9 = icmp slt i32 %8, 64
  br i1 %9, label %10, label %43

10:                                               ; preds = %7
  %11 = load i32, i32* %3, align 4
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds [64 x %struct.slabclass_t], [64 x %struct.slabclass_t]* @slabclass, i64 0, i64 %12
  store %struct.slabclass_t* %13, %struct.slabclass_t** %4, align 8
  %14 = load %struct.slab_stats_automove*, %struct.slab_stats_automove** %2, align 8
  %15 = load i32, i32* %3, align 4
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds %struct.slab_stats_automove, %struct.slab_stats_automove* %14, i64 %16
  store %struct.slab_stats_automove* %17, %struct.slab_stats_automove** %5, align 8
  %18 = load %struct.slabclass_t*, %struct.slabclass_t** %4, align 8
  %19 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %18, i32 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = load %struct.slab_stats_automove*, %struct.slab_stats_automove** %5, align 8
  %22 = getelementptr inbounds %struct.slab_stats_automove, %struct.slab_stats_automove* %21, i32 0, i32 0
  store i32 %20, i32* %22, align 8
  %23 = load %struct.slabclass_t*, %struct.slabclass_t** %4, align 8
  %24 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %23, i32 0, i32 3
  %25 = load i32, i32* %24, align 8
  %26 = zext i32 %25 to i64
  %27 = load %struct.slab_stats_automove*, %struct.slab_stats_automove** %5, align 8
  %28 = getelementptr inbounds %struct.slab_stats_automove, %struct.slab_stats_automove* %27, i32 0, i32 2
  store i64 %26, i64* %28, align 8
  %29 = load %struct.slabclass_t*, %struct.slabclass_t** %4, align 8
  %30 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %29, i32 0, i32 4
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i64
  %33 = load %struct.slab_stats_automove*, %struct.slab_stats_automove** %5, align 8
  %34 = getelementptr inbounds %struct.slab_stats_automove, %struct.slab_stats_automove* %33, i32 0, i32 3
  store i64 %32, i64* %34, align 8
  %35 = load %struct.slabclass_t*, %struct.slabclass_t** %4, align 8
  %36 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %35, i32 0, i32 0
  %37 = load i32, i32* %36, align 8
  %38 = load %struct.slab_stats_automove*, %struct.slab_stats_automove** %5, align 8
  %39 = getelementptr inbounds %struct.slab_stats_automove, %struct.slab_stats_automove* %38, i32 0, i32 1
  store i32 %37, i32* %39, align 4
  br label %40

40:                                               ; preds = %10
  %41 = load i32, i32* %3, align 4
  %42 = add nsw i32 %41, 1
  store i32 %42, i32* %3, align 4
  br label %7, !llvm.loop !59

43:                                               ; preds = %7
  %44 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @slabs_lock) #14
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @global_page_pool_size(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  store i32 0, i32* %3, align 4
  %4 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @slabs_lock) #14
  %5 = load i8*, i8** %2, align 8
  %6 = icmp ne i8* %5, null
  br i1 %6, label %7, label %16

7:                                                ; preds = %1
  %8 = load i64, i64* @mem_malloced, align 8
  %9 = load i64, i64* @mem_limit, align 8
  %10 = icmp uge i64 %8, %9
  %11 = zext i1 %10 to i64
  %12 = select i1 %10, i32 1, i32 0
  %13 = icmp ne i32 %12, 0
  %14 = load i8*, i8** %2, align 8
  %15 = zext i1 %13 to i8
  store i8 %15, i8* %14, align 1
  br label %16

16:                                               ; preds = %7, %1
  %17 = load i32, i32* getelementptr inbounds ([64 x %struct.slabclass_t], [64 x %struct.slabclass_t]* @slabclass, i64 0, i64 0, i32 4), align 4
  store i32 %17, i32* %3, align 4
  %18 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @slabs_lock) #14
  %19 = load i32, i32* %3, align 4
  ret i32 %19
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @slabs_alloc(i64 %0, i32 %1, i32 %2) #0 {
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  store i64 %0, i64* %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %8 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @slabs_lock) #14
  %9 = load i64, i64* %4, align 8
  %10 = load i32, i32* %5, align 4
  %11 = load i32, i32* %6, align 4
  %12 = call i8* @do_slabs_alloc(i64 %9, i32 %10, i32 %11)
  store i8* %12, i8** %7, align 8
  %13 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @slabs_lock) #14
  %14 = load i8*, i8** %7, align 8
  ret i8* %14
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @do_slabs_alloc(i64 %0, i32 %1, i32 %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.slabclass_t*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca %struct._stritem*, align 8
  store i64 %0, i64* %5, align 8
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  store i8* null, i8** %9, align 8
  store %struct._stritem* null, %struct._stritem** %10, align 8
  %11 = load i32, i32* %6, align 4
  %12 = icmp ult i32 %11, 1
  br i1 %12, label %17, label %13

13:                                               ; preds = %3
  %14 = load i32, i32* %6, align 4
  %15 = load i32, i32* @power_largest, align 4
  %16 = icmp ugt i32 %14, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %13, %3
  store i8* null, i8** %4, align 8
  br label %80

18:                                               ; preds = %13
  %19 = load i32, i32* %6, align 4
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds [64 x %struct.slabclass_t], [64 x %struct.slabclass_t]* @slabclass, i64 0, i64 %20
  store %struct.slabclass_t* %21, %struct.slabclass_t** %8, align 8
  %22 = load %struct.slabclass_t*, %struct.slabclass_t** %8, align 8
  %23 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %22, i32 0, i32 3
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %32

26:                                               ; preds = %18
  %27 = load i32, i32* %7, align 4
  %28 = icmp ne i32 %27, 1
  br i1 %28, label %29, label %32

29:                                               ; preds = %26
  %30 = load i32, i32* %6, align 4
  %31 = call i32 @do_slabs_newslab(i32 %30)
  br label %32

32:                                               ; preds = %29, %26, %18
  %33 = load %struct.slabclass_t*, %struct.slabclass_t** %8, align 8
  %34 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %33, i32 0, i32 3
  %35 = load i32, i32* %34, align 8
  %36 = icmp ne i32 %35, 0
  br i1 %36, label %37, label %72

37:                                               ; preds = %32
  %38 = load %struct.slabclass_t*, %struct.slabclass_t** %8, align 8
  %39 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %38, i32 0, i32 2
  %40 = load i8*, i8** %39, align 8
  %41 = bitcast i8* %40 to %struct._stritem*
  store %struct._stritem* %41, %struct._stritem** %10, align 8
  %42 = load %struct._stritem*, %struct._stritem** %10, align 8
  %43 = getelementptr inbounds %struct._stritem, %struct._stritem* %42, i32 0, i32 0
  %44 = load %struct._stritem*, %struct._stritem** %43, align 8
  %45 = bitcast %struct._stritem* %44 to i8*
  %46 = load %struct.slabclass_t*, %struct.slabclass_t** %8, align 8
  %47 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %46, i32 0, i32 2
  store i8* %45, i8** %47, align 8
  %48 = load %struct._stritem*, %struct._stritem** %10, align 8
  %49 = getelementptr inbounds %struct._stritem, %struct._stritem* %48, i32 0, i32 0
  %50 = load %struct._stritem*, %struct._stritem** %49, align 8
  %51 = icmp ne %struct._stritem* %50, null
  br i1 %51, label %52, label %57

52:                                               ; preds = %37
  %53 = load %struct._stritem*, %struct._stritem** %10, align 8
  %54 = getelementptr inbounds %struct._stritem, %struct._stritem* %53, i32 0, i32 0
  %55 = load %struct._stritem*, %struct._stritem** %54, align 8
  %56 = getelementptr inbounds %struct._stritem, %struct._stritem* %55, i32 0, i32 1
  store %struct._stritem* null, %struct._stritem** %56, align 8
  br label %57

57:                                               ; preds = %52, %37
  %58 = load %struct._stritem*, %struct._stritem** %10, align 8
  %59 = getelementptr inbounds %struct._stritem, %struct._stritem* %58, i32 0, i32 7
  %60 = load i16, i16* %59, align 2
  %61 = zext i16 %60 to i32
  %62 = and i32 %61, -5
  %63 = trunc i32 %62 to i16
  store i16 %63, i16* %59, align 2
  %64 = load %struct._stritem*, %struct._stritem** %10, align 8
  %65 = getelementptr inbounds %struct._stritem, %struct._stritem* %64, i32 0, i32 6
  store i16 1, i16* %65, align 4
  %66 = load %struct.slabclass_t*, %struct.slabclass_t** %8, align 8
  %67 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %66, i32 0, i32 3
  %68 = load i32, i32* %67, align 8
  %69 = add i32 %68, -1
  store i32 %69, i32* %67, align 8
  %70 = load %struct._stritem*, %struct._stritem** %10, align 8
  %71 = bitcast %struct._stritem* %70 to i8*
  store i8* %71, i8** %9, align 8
  br label %73

72:                                               ; preds = %32
  store i8* null, i8** %9, align 8
  br label %73

73:                                               ; preds = %72, %57
  %74 = load i8*, i8** %9, align 8
  %75 = icmp ne i8* %74, null
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  br label %78

77:                                               ; preds = %73
  br label %78

78:                                               ; preds = %77, %76
  %79 = load i8*, i8** %9, align 8
  store i8* %79, i8** %4, align 8
  br label %80

80:                                               ; preds = %78, %17
  %81 = load i8*, i8** %4, align 8
  ret i8* %81
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @slabs_free(i8* %0, i64 %1, i32 %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32 %2, i32* %6, align 4
  %7 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @slabs_lock) #14
  %8 = load i8*, i8** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = load i32, i32* %6, align 4
  call void @do_slabs_free(i8* %8, i64 %9, i32 %10)
  %11 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @slabs_lock) #14
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @slabs_stats(void (i8*, i16, i8*, i32, i8*)* %0, i8* %1) #0 {
  %3 = alloca void (i8*, i16, i8*, i32, i8*)*, align 8
  %4 = alloca i8*, align 8
  store void (i8*, i16, i8*, i32, i8*)* %0, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @slabs_lock) #14
  %6 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %7 = load i8*, i8** %4, align 8
  call void @do_slabs_stats(void (i8*, i16, i8*, i32, i8*)* %6, i8* %7)
  %8 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @slabs_lock) #14
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @do_slabs_stats(void (i8*, i16, i8*, i32, i8*)* %0, i8* %1) #0 {
  %3 = alloca void (i8*, i16, i8*, i32, i8*)*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.thread_stats, align 8
  %8 = alloca %struct.slabclass_t*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca [128 x i8], align 16
  %12 = alloca [128 x i8], align 16
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store void (i8*, i16, i8*, i32, i8*)* %0, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  store i8* %1, i8** %4, align 8
  call void @threadlocal_stats_aggregate(%struct.thread_stats* %7)
  store i32 0, i32* %6, align 4
  store i32 1, i32* %5, align 4
  br label %15

15:                                               ; preds = %283, %2
  %16 = load i32, i32* %5, align 4
  %17 = load i32, i32* @power_largest, align 4
  %18 = icmp sle i32 %16, %17
  br i1 %18, label %19, label %286

19:                                               ; preds = %15
  %20 = load i32, i32* %5, align 4
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds [64 x %struct.slabclass_t], [64 x %struct.slabclass_t]* @slabclass, i64 0, i64 %21
  store %struct.slabclass_t* %22, %struct.slabclass_t** %8, align 8
  %23 = load %struct.slabclass_t*, %struct.slabclass_t** %8, align 8
  %24 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %23, i32 0, i32 4
  %25 = load i32, i32* %24, align 4
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %27, label %282

27:                                               ; preds = %19
  %28 = load %struct.slabclass_t*, %struct.slabclass_t** %8, align 8
  %29 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %28, i32 0, i32 4
  %30 = load i32, i32* %29, align 4
  store i32 %30, i32* %10, align 4
  %31 = load %struct.slabclass_t*, %struct.slabclass_t** %8, align 8
  %32 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %31, i32 0, i32 1
  %33 = load i32, i32* %32, align 4
  store i32 %33, i32* %9, align 4
  store i32 0, i32* %13, align 4
  store i32 0, i32* %14, align 4
  %34 = getelementptr inbounds [128 x i8], [128 x i8]* %11, i64 0, i64 0
  %35 = load i32, i32* %5, align 4
  %36 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %34, i64 128, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.537, i64 0, i64 0), i32 %35, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.538, i64 0, i64 0)) #14
  store i32 %36, i32* %13, align 4
  %37 = getelementptr inbounds [128 x i8], [128 x i8]* %12, i64 0, i64 0
  %38 = load %struct.slabclass_t*, %struct.slabclass_t** %8, align 8
  %39 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %38, i32 0, i32 0
  %40 = load i32, i32* %39, align 8
  %41 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %37, i64 128, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.15.539, i64 0, i64 0), i32 %40) #14
  store i32 %41, i32* %14, align 4
  %42 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %43 = getelementptr inbounds [128 x i8], [128 x i8]* %11, i64 0, i64 0
  %44 = load i32, i32* %13, align 4
  %45 = trunc i32 %44 to i16
  %46 = getelementptr inbounds [128 x i8], [128 x i8]* %12, i64 0, i64 0
  %47 = load i32, i32* %14, align 4
  %48 = load i8*, i8** %4, align 8
  call void %42(i8* %43, i16 zeroext %45, i8* %46, i32 %47, i8* %48)
  %49 = getelementptr inbounds [128 x i8], [128 x i8]* %11, i64 0, i64 0
  %50 = load i32, i32* %5, align 4
  %51 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %49, i64 128, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.537, i64 0, i64 0), i32 %50, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.16.540, i64 0, i64 0)) #14
  store i32 %51, i32* %13, align 4
  %52 = getelementptr inbounds [128 x i8], [128 x i8]* %12, i64 0, i64 0
  %53 = load i32, i32* %9, align 4
  %54 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %52, i64 128, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.15.539, i64 0, i64 0), i32 %53) #14
  store i32 %54, i32* %14, align 4
  %55 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %56 = getelementptr inbounds [128 x i8], [128 x i8]* %11, i64 0, i64 0
  %57 = load i32, i32* %13, align 4
  %58 = trunc i32 %57 to i16
  %59 = getelementptr inbounds [128 x i8], [128 x i8]* %12, i64 0, i64 0
  %60 = load i32, i32* %14, align 4
  %61 = load i8*, i8** %4, align 8
  call void %55(i8* %56, i16 zeroext %58, i8* %59, i32 %60, i8* %61)
  %62 = getelementptr inbounds [128 x i8], [128 x i8]* %11, i64 0, i64 0
  %63 = load i32, i32* %5, align 4
  %64 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %62, i64 128, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.537, i64 0, i64 0), i32 %63, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17.541, i64 0, i64 0)) #14
  store i32 %64, i32* %13, align 4
  %65 = getelementptr inbounds [128 x i8], [128 x i8]* %12, i64 0, i64 0
  %66 = load i32, i32* %10, align 4
  %67 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %65, i64 128, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.15.539, i64 0, i64 0), i32 %66) #14
  store i32 %67, i32* %14, align 4
  %68 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %69 = getelementptr inbounds [128 x i8], [128 x i8]* %11, i64 0, i64 0
  %70 = load i32, i32* %13, align 4
  %71 = trunc i32 %70 to i16
  %72 = getelementptr inbounds [128 x i8], [128 x i8]* %12, i64 0, i64 0
  %73 = load i32, i32* %14, align 4
  %74 = load i8*, i8** %4, align 8
  call void %68(i8* %69, i16 zeroext %71, i8* %72, i32 %73, i8* %74)
  %75 = getelementptr inbounds [128 x i8], [128 x i8]* %11, i64 0, i64 0
  %76 = load i32, i32* %5, align 4
  %77 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %75, i64 128, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.537, i64 0, i64 0), i32 %76, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18.542, i64 0, i64 0)) #14
  store i32 %77, i32* %13, align 4
  %78 = getelementptr inbounds [128 x i8], [128 x i8]* %12, i64 0, i64 0
  %79 = load i32, i32* %10, align 4
  %80 = load i32, i32* %9, align 4
  %81 = mul i32 %79, %80
  %82 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %78, i64 128, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.15.539, i64 0, i64 0), i32 %81) #14
  store i32 %82, i32* %14, align 4
  %83 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %84 = getelementptr inbounds [128 x i8], [128 x i8]* %11, i64 0, i64 0
  %85 = load i32, i32* %13, align 4
  %86 = trunc i32 %85 to i16
  %87 = getelementptr inbounds [128 x i8], [128 x i8]* %12, i64 0, i64 0
  %88 = load i32, i32* %14, align 4
  %89 = load i8*, i8** %4, align 8
  call void %83(i8* %84, i16 zeroext %86, i8* %87, i32 %88, i8* %89)
  %90 = getelementptr inbounds [128 x i8], [128 x i8]* %11, i64 0, i64 0
  %91 = load i32, i32* %5, align 4
  %92 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %90, i64 128, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.537, i64 0, i64 0), i32 %91, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.19.543, i64 0, i64 0)) #14
  store i32 %92, i32* %13, align 4
  %93 = getelementptr inbounds [128 x i8], [128 x i8]* %12, i64 0, i64 0
  %94 = load i32, i32* %10, align 4
  %95 = load i32, i32* %9, align 4
  %96 = mul i32 %94, %95
  %97 = load %struct.slabclass_t*, %struct.slabclass_t** %8, align 8
  %98 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %97, i32 0, i32 3
  %99 = load i32, i32* %98, align 8
  %100 = sub i32 %96, %99
  %101 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %93, i64 128, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.15.539, i64 0, i64 0), i32 %100) #14
  store i32 %101, i32* %14, align 4
  %102 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %103 = getelementptr inbounds [128 x i8], [128 x i8]* %11, i64 0, i64 0
  %104 = load i32, i32* %13, align 4
  %105 = trunc i32 %104 to i16
  %106 = getelementptr inbounds [128 x i8], [128 x i8]* %12, i64 0, i64 0
  %107 = load i32, i32* %14, align 4
  %108 = load i8*, i8** %4, align 8
  call void %102(i8* %103, i16 zeroext %105, i8* %106, i32 %107, i8* %108)
  %109 = getelementptr inbounds [128 x i8], [128 x i8]* %11, i64 0, i64 0
  %110 = load i32, i32* %5, align 4
  %111 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %109, i64 128, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.537, i64 0, i64 0), i32 %110, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.20.544, i64 0, i64 0)) #14
  store i32 %111, i32* %13, align 4
  %112 = getelementptr inbounds [128 x i8], [128 x i8]* %12, i64 0, i64 0
  %113 = load %struct.slabclass_t*, %struct.slabclass_t** %8, align 8
  %114 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %113, i32 0, i32 3
  %115 = load i32, i32* %114, align 8
  %116 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %112, i64 128, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.15.539, i64 0, i64 0), i32 %115) #14
  store i32 %116, i32* %14, align 4
  %117 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %118 = getelementptr inbounds [128 x i8], [128 x i8]* %11, i64 0, i64 0
  %119 = load i32, i32* %13, align 4
  %120 = trunc i32 %119 to i16
  %121 = getelementptr inbounds [128 x i8], [128 x i8]* %12, i64 0, i64 0
  %122 = load i32, i32* %14, align 4
  %123 = load i8*, i8** %4, align 8
  call void %117(i8* %118, i16 zeroext %120, i8* %121, i32 %122, i8* %123)
  %124 = getelementptr inbounds [128 x i8], [128 x i8]* %11, i64 0, i64 0
  %125 = load i32, i32* %5, align 4
  %126 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %124, i64 128, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.537, i64 0, i64 0), i32 %125, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.21.545, i64 0, i64 0)) #14
  store i32 %126, i32* %13, align 4
  %127 = getelementptr inbounds [128 x i8], [128 x i8]* %12, i64 0, i64 0
  %128 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %127, i64 128, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.15.539, i64 0, i64 0), i32 0) #14
  store i32 %128, i32* %14, align 4
  %129 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %130 = getelementptr inbounds [128 x i8], [128 x i8]* %11, i64 0, i64 0
  %131 = load i32, i32* %13, align 4
  %132 = trunc i32 %131 to i16
  %133 = getelementptr inbounds [128 x i8], [128 x i8]* %12, i64 0, i64 0
  %134 = load i32, i32* %14, align 4
  %135 = load i8*, i8** %4, align 8
  call void %129(i8* %130, i16 zeroext %132, i8* %133, i32 %134, i8* %135)
  %136 = getelementptr inbounds [128 x i8], [128 x i8]* %11, i64 0, i64 0
  %137 = load i32, i32* %5, align 4
  %138 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %136, i64 128, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.537, i64 0, i64 0), i32 %137, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.22.546, i64 0, i64 0)) #14
  store i32 %138, i32* %13, align 4
  %139 = getelementptr inbounds [128 x i8], [128 x i8]* %12, i64 0, i64 0
  %140 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %7, i32 0, i32 31
  %141 = load i32, i32* %5, align 4
  %142 = sext i32 %141 to i64
  %143 = getelementptr inbounds [64 x %struct.slab_stats], [64 x %struct.slab_stats]* %140, i64 0, i64 %142
  %144 = getelementptr inbounds %struct.slab_stats, %struct.slab_stats* %143, i32 0, i32 1
  %145 = load i64, i64* %144, align 8
  %146 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %139, i64 128, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23.547, i64 0, i64 0), i64 %145) #14
  store i32 %146, i32* %14, align 4
  %147 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %148 = getelementptr inbounds [128 x i8], [128 x i8]* %11, i64 0, i64 0
  %149 = load i32, i32* %13, align 4
  %150 = trunc i32 %149 to i16
  %151 = getelementptr inbounds [128 x i8], [128 x i8]* %12, i64 0, i64 0
  %152 = load i32, i32* %14, align 4
  %153 = load i8*, i8** %4, align 8
  call void %147(i8* %148, i16 zeroext %150, i8* %151, i32 %152, i8* %153)
  %154 = getelementptr inbounds [128 x i8], [128 x i8]* %11, i64 0, i64 0
  %155 = load i32, i32* %5, align 4
  %156 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %154, i64 128, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.537, i64 0, i64 0), i32 %155, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24.548, i64 0, i64 0)) #14
  store i32 %156, i32* %13, align 4
  %157 = getelementptr inbounds [128 x i8], [128 x i8]* %12, i64 0, i64 0
  %158 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %7, i32 0, i32 31
  %159 = load i32, i32* %5, align 4
  %160 = sext i32 %159 to i64
  %161 = getelementptr inbounds [64 x %struct.slab_stats], [64 x %struct.slab_stats]* %158, i64 0, i64 %160
  %162 = getelementptr inbounds %struct.slab_stats, %struct.slab_stats* %161, i32 0, i32 0
  %163 = load i64, i64* %162, align 8
  %164 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %157, i64 128, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23.547, i64 0, i64 0), i64 %163) #14
  store i32 %164, i32* %14, align 4
  %165 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %166 = getelementptr inbounds [128 x i8], [128 x i8]* %11, i64 0, i64 0
  %167 = load i32, i32* %13, align 4
  %168 = trunc i32 %167 to i16
  %169 = getelementptr inbounds [128 x i8], [128 x i8]* %12, i64 0, i64 0
  %170 = load i32, i32* %14, align 4
  %171 = load i8*, i8** %4, align 8
  call void %165(i8* %166, i16 zeroext %168, i8* %169, i32 %170, i8* %171)
  %172 = getelementptr inbounds [128 x i8], [128 x i8]* %11, i64 0, i64 0
  %173 = load i32, i32* %5, align 4
  %174 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %172, i64 128, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.537, i64 0, i64 0), i32 %173, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.25.549, i64 0, i64 0)) #14
  store i32 %174, i32* %13, align 4
  %175 = getelementptr inbounds [128 x i8], [128 x i8]* %12, i64 0, i64 0
  %176 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %7, i32 0, i32 31
  %177 = load i32, i32* %5, align 4
  %178 = sext i32 %177 to i64
  %179 = getelementptr inbounds [64 x %struct.slab_stats], [64 x %struct.slab_stats]* %176, i64 0, i64 %178
  %180 = getelementptr inbounds %struct.slab_stats, %struct.slab_stats* %179, i32 0, i32 3
  %181 = load i64, i64* %180, align 8
  %182 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %175, i64 128, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23.547, i64 0, i64 0), i64 %181) #14
  store i32 %182, i32* %14, align 4
  %183 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %184 = getelementptr inbounds [128 x i8], [128 x i8]* %11, i64 0, i64 0
  %185 = load i32, i32* %13, align 4
  %186 = trunc i32 %185 to i16
  %187 = getelementptr inbounds [128 x i8], [128 x i8]* %12, i64 0, i64 0
  %188 = load i32, i32* %14, align 4
  %189 = load i8*, i8** %4, align 8
  call void %183(i8* %184, i16 zeroext %186, i8* %187, i32 %188, i8* %189)
  %190 = getelementptr inbounds [128 x i8], [128 x i8]* %11, i64 0, i64 0
  %191 = load i32, i32* %5, align 4
  %192 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %190, i64 128, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.537, i64 0, i64 0), i32 %191, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26.550, i64 0, i64 0)) #14
  store i32 %192, i32* %13, align 4
  %193 = getelementptr inbounds [128 x i8], [128 x i8]* %12, i64 0, i64 0
  %194 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %7, i32 0, i32 31
  %195 = load i32, i32* %5, align 4
  %196 = sext i32 %195 to i64
  %197 = getelementptr inbounds [64 x %struct.slab_stats], [64 x %struct.slab_stats]* %194, i64 0, i64 %196
  %198 = getelementptr inbounds %struct.slab_stats, %struct.slab_stats* %197, i32 0, i32 6
  %199 = load i64, i64* %198, align 8
  %200 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %193, i64 128, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23.547, i64 0, i64 0), i64 %199) #14
  store i32 %200, i32* %14, align 4
  %201 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %202 = getelementptr inbounds [128 x i8], [128 x i8]* %11, i64 0, i64 0
  %203 = load i32, i32* %13, align 4
  %204 = trunc i32 %203 to i16
  %205 = getelementptr inbounds [128 x i8], [128 x i8]* %12, i64 0, i64 0
  %206 = load i32, i32* %14, align 4
  %207 = load i8*, i8** %4, align 8
  call void %201(i8* %202, i16 zeroext %204, i8* %205, i32 %206, i8* %207)
  %208 = getelementptr inbounds [128 x i8], [128 x i8]* %11, i64 0, i64 0
  %209 = load i32, i32* %5, align 4
  %210 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %208, i64 128, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.537, i64 0, i64 0), i32 %209, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.27.551, i64 0, i64 0)) #14
  store i32 %210, i32* %13, align 4
  %211 = getelementptr inbounds [128 x i8], [128 x i8]* %12, i64 0, i64 0
  %212 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %7, i32 0, i32 31
  %213 = load i32, i32* %5, align 4
  %214 = sext i32 %213 to i64
  %215 = getelementptr inbounds [64 x %struct.slab_stats], [64 x %struct.slab_stats]* %212, i64 0, i64 %214
  %216 = getelementptr inbounds %struct.slab_stats, %struct.slab_stats* %215, i32 0, i32 7
  %217 = load i64, i64* %216, align 8
  %218 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %211, i64 128, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23.547, i64 0, i64 0), i64 %217) #14
  store i32 %218, i32* %14, align 4
  %219 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %220 = getelementptr inbounds [128 x i8], [128 x i8]* %11, i64 0, i64 0
  %221 = load i32, i32* %13, align 4
  %222 = trunc i32 %221 to i16
  %223 = getelementptr inbounds [128 x i8], [128 x i8]* %12, i64 0, i64 0
  %224 = load i32, i32* %14, align 4
  %225 = load i8*, i8** %4, align 8
  call void %219(i8* %220, i16 zeroext %222, i8* %223, i32 %224, i8* %225)
  %226 = getelementptr inbounds [128 x i8], [128 x i8]* %11, i64 0, i64 0
  %227 = load i32, i32* %5, align 4
  %228 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %226, i64 128, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.537, i64 0, i64 0), i32 %227, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28.552, i64 0, i64 0)) #14
  store i32 %228, i32* %13, align 4
  %229 = getelementptr inbounds [128 x i8], [128 x i8]* %12, i64 0, i64 0
  %230 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %7, i32 0, i32 31
  %231 = load i32, i32* %5, align 4
  %232 = sext i32 %231 to i64
  %233 = getelementptr inbounds [64 x %struct.slab_stats], [64 x %struct.slab_stats]* %230, i64 0, i64 %232
  %234 = getelementptr inbounds %struct.slab_stats, %struct.slab_stats* %233, i32 0, i32 4
  %235 = load i64, i64* %234, align 8
  %236 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %229, i64 128, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23.547, i64 0, i64 0), i64 %235) #14
  store i32 %236, i32* %14, align 4
  %237 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %238 = getelementptr inbounds [128 x i8], [128 x i8]* %11, i64 0, i64 0
  %239 = load i32, i32* %13, align 4
  %240 = trunc i32 %239 to i16
  %241 = getelementptr inbounds [128 x i8], [128 x i8]* %12, i64 0, i64 0
  %242 = load i32, i32* %14, align 4
  %243 = load i8*, i8** %4, align 8
  call void %237(i8* %238, i16 zeroext %240, i8* %241, i32 %242, i8* %243)
  %244 = getelementptr inbounds [128 x i8], [128 x i8]* %11, i64 0, i64 0
  %245 = load i32, i32* %5, align 4
  %246 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %244, i64 128, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.537, i64 0, i64 0), i32 %245, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.29.553, i64 0, i64 0)) #14
  store i32 %246, i32* %13, align 4
  %247 = getelementptr inbounds [128 x i8], [128 x i8]* %12, i64 0, i64 0
  %248 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %7, i32 0, i32 31
  %249 = load i32, i32* %5, align 4
  %250 = sext i32 %249 to i64
  %251 = getelementptr inbounds [64 x %struct.slab_stats], [64 x %struct.slab_stats]* %248, i64 0, i64 %250
  %252 = getelementptr inbounds %struct.slab_stats, %struct.slab_stats* %251, i32 0, i32 5
  %253 = load i64, i64* %252, align 8
  %254 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %247, i64 128, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23.547, i64 0, i64 0), i64 %253) #14
  store i32 %254, i32* %14, align 4
  %255 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %256 = getelementptr inbounds [128 x i8], [128 x i8]* %11, i64 0, i64 0
  %257 = load i32, i32* %13, align 4
  %258 = trunc i32 %257 to i16
  %259 = getelementptr inbounds [128 x i8], [128 x i8]* %12, i64 0, i64 0
  %260 = load i32, i32* %14, align 4
  %261 = load i8*, i8** %4, align 8
  call void %255(i8* %256, i16 zeroext %258, i8* %259, i32 %260, i8* %261)
  %262 = getelementptr inbounds [128 x i8], [128 x i8]* %11, i64 0, i64 0
  %263 = load i32, i32* %5, align 4
  %264 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %262, i64 128, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.537, i64 0, i64 0), i32 %263, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30.554, i64 0, i64 0)) #14
  store i32 %264, i32* %13, align 4
  %265 = getelementptr inbounds [128 x i8], [128 x i8]* %12, i64 0, i64 0
  %266 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %7, i32 0, i32 31
  %267 = load i32, i32* %5, align 4
  %268 = sext i32 %267 to i64
  %269 = getelementptr inbounds [64 x %struct.slab_stats], [64 x %struct.slab_stats]* %266, i64 0, i64 %268
  %270 = getelementptr inbounds %struct.slab_stats, %struct.slab_stats* %269, i32 0, i32 2
  %271 = load i64, i64* %270, align 8
  %272 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %265, i64 128, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23.547, i64 0, i64 0), i64 %271) #14
  store i32 %272, i32* %14, align 4
  %273 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %274 = getelementptr inbounds [128 x i8], [128 x i8]* %11, i64 0, i64 0
  %275 = load i32, i32* %13, align 4
  %276 = trunc i32 %275 to i16
  %277 = getelementptr inbounds [128 x i8], [128 x i8]* %12, i64 0, i64 0
  %278 = load i32, i32* %14, align 4
  %279 = load i8*, i8** %4, align 8
  call void %273(i8* %274, i16 zeroext %276, i8* %277, i32 %278, i8* %279)
  %280 = load i32, i32* %6, align 4
  %281 = add nsw i32 %280, 1
  store i32 %281, i32* %6, align 4
  br label %282

282:                                              ; preds = %27, %19
  br label %283

283:                                              ; preds = %282
  %284 = load i32, i32* %5, align 4
  %285 = add nsw i32 %284, 1
  store i32 %285, i32* %5, align 4
  br label %15, !llvm.loop !60

286:                                              ; preds = %15
  %287 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %288 = load i8*, i8** %4, align 8
  %289 = bitcast i8* %288 to %struct.conn*
  %290 = load i32, i32* %6, align 4
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.31.555, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %287, %struct.conn* %289, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.32.556, i64 0, i64 0), i32 %290)
  %291 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %292 = load i8*, i8** %4, align 8
  %293 = bitcast i8* %292 to %struct.conn*
  %294 = load i64, i64* @mem_malloced, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.33.557, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %291, %struct.conn* %293, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23.547, i64 0, i64 0), i64 %294)
  %295 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %296 = load i8*, i8** %4, align 8
  call void %295(i8* null, i16 zeroext 0, i8* null, i32 0, i8* %296)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @slabs_adjust_mem_limit(i64 %0) #0 {
  %2 = alloca i64, align 8
  %3 = alloca i8, align 1
  store i64 %0, i64* %2, align 8
  %4 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @slabs_lock) #14
  %5 = load i64, i64* %2, align 8
  %6 = call zeroext i1 @do_slabs_adjust_mem_limit(i64 %5)
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %3, align 1
  %8 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @slabs_lock) #14
  %9 = load i8, i8* %3, align 1
  %10 = trunc i8 %9 to i1
  ret i1 %10
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @do_slabs_adjust_mem_limit(i64 %0) #0 {
  %2 = alloca i1, align 1
  %3 = alloca i64, align 8
  store i64 %0, i64* %3, align 8
  %4 = load i8*, i8** @mem_base, align 8
  %5 = icmp ne i8* %4, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %1
  store i1 false, i1* %2, align 1
  br label %10

7:                                                ; preds = %1
  %8 = load i64, i64* %3, align 8
  store i64 %8, i64* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 0), align 8
  %9 = load i64, i64* %3, align 8
  store i64 %9, i64* @mem_limit, align 8
  store i8 0, i8* @mem_limit_reached, align 1
  call void @memory_release()
  store i1 true, i1* %2, align 1
  br label %10

10:                                               ; preds = %7, %6
  %11 = load i1, i1* %2, align 1
  ret i1 %11
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @memory_release() #0 {
  %1 = alloca i8*, align 8
  store i8* null, i8** %1, align 8
  %2 = load i8*, i8** @mem_base, align 8
  %3 = icmp ne i8* %2, null
  br i1 %3, label %4, label %5

4:                                                ; preds = %0
  br label %25

5:                                                ; preds = %0
  %6 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 31), align 1
  %7 = trunc i8 %6 to i1
  br i1 %7, label %9, label %8

8:                                                ; preds = %5
  br label %25

9:                                                ; preds = %5
  br label %10

10:                                               ; preds = %19, %9
  %11 = load i64, i64* @mem_malloced, align 8
  %12 = load i64, i64* @mem_limit, align 8
  %13 = icmp ugt i64 %11, %12
  br i1 %13, label %14, label %17

14:                                               ; preds = %10
  %15 = call i8* @get_page_from_global_pool()
  store i8* %15, i8** %1, align 8
  %16 = icmp ne i8* %15, null
  br label %17

17:                                               ; preds = %14, %10
  %18 = phi i1 [ false, %10 ], [ %16, %14 ]
  br i1 %18, label %19, label %25

19:                                               ; preds = %17
  %20 = load i8*, i8** %1, align 8
  call void @free(i8* %20) #14
  %21 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 24), align 4
  %22 = sext i32 %21 to i64
  %23 = load i64, i64* @mem_malloced, align 8
  %24 = sub i64 %23, %22
  store i64 %24, i64* @mem_malloced, align 8
  br label %10, !llvm.loop !61

25:                                               ; preds = %4, %8, %17
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @slabs_available_chunks(i32 %0, i8* %1, i32* %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %struct.slabclass_t*, align 8
  store i32 %0, i32* %4, align 4
  store i8* %1, i8** %5, align 8
  store i32* %2, i32** %6, align 8
  %9 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @slabs_lock) #14
  %10 = load i32, i32* %4, align 4
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds [64 x %struct.slabclass_t], [64 x %struct.slabclass_t]* @slabclass, i64 0, i64 %11
  store %struct.slabclass_t* %12, %struct.slabclass_t** %8, align 8
  %13 = load %struct.slabclass_t*, %struct.slabclass_t** %8, align 8
  %14 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %13, i32 0, i32 3
  %15 = load i32, i32* %14, align 8
  store i32 %15, i32* %7, align 4
  %16 = load i8*, i8** %5, align 8
  %17 = icmp ne i8* %16, null
  br i1 %17, label %18, label %27

18:                                               ; preds = %3
  %19 = load i64, i64* @mem_malloced, align 8
  %20 = load i64, i64* @mem_limit, align 8
  %21 = icmp uge i64 %19, %20
  %22 = zext i1 %21 to i64
  %23 = select i1 %21, i32 1, i32 0
  %24 = icmp ne i32 %23, 0
  %25 = load i8*, i8** %5, align 8
  %26 = zext i1 %24 to i8
  store i8 %26, i8* %25, align 1
  br label %27

27:                                               ; preds = %18, %3
  %28 = load i32*, i32** %6, align 8
  %29 = icmp ne i32* %28, null
  br i1 %29, label %30, label %35

30:                                               ; preds = %27
  %31 = load %struct.slabclass_t*, %struct.slabclass_t** %8, align 8
  %32 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %31, i32 0, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = load i32*, i32** %6, align 8
  store i32 %33, i32* %34, align 4
  br label %35

35:                                               ; preds = %30, %27
  %36 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @slabs_lock) #14
  %37 = load i32, i32* %7, align 4
  ret i32 %37
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @slabs_mlock() #0 {
  %1 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @slabs_lock) #14
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @slabs_munlock() #0 {
  %1 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @slabs_lock) #14
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @slabs_reassign(i32 %0, i32 %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  store i32 %1, i32* %5, align 4
  %7 = call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* @slabs_rebalance_lock) #14
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %2
  store i32 1, i32* %3, align 4
  br label %16

10:                                               ; preds = %2
  %11 = load i32, i32* %4, align 4
  %12 = load i32, i32* %5, align 4
  %13 = call i32 @do_slabs_reassign(i32 %11, i32 %12)
  store i32 %13, i32* %6, align 4
  %14 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @slabs_rebalance_lock) #14
  %15 = load i32, i32* %6, align 4
  store i32 %15, i32* %3, align 4
  br label %16

16:                                               ; preds = %10, %9
  %17 = load i32, i32* %3, align 4
  ret i32 %17
}

; Function Attrs: nounwind
declare dso_local i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @do_slabs_reassign(i32 %0, i32 %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  store i32 %0, i32* %4, align 4
  store i32 %1, i32* %5, align 4
  store i8 0, i8* %6, align 1
  %7 = load volatile i32, i32* @slab_rebalance_signal, align 4
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %2
  store i32 1, i32* %3, align 4
  br label %54

10:                                               ; preds = %2
  %11 = load i32, i32* %4, align 4
  %12 = load i32, i32* %5, align 4
  %13 = icmp eq i32 %11, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %10
  store i32 4, i32* %3, align 4
  br label %54

15:                                               ; preds = %10
  %16 = load i32, i32* %4, align 4
  %17 = icmp eq i32 %16, -1
  br i1 %17, label %18, label %21

18:                                               ; preds = %15
  %19 = load i32, i32* %5, align 4
  %20 = call i32 @slabs_reassign_pick_any(i32 %19)
  store i32 %20, i32* %4, align 4
  br label %21

21:                                               ; preds = %18, %15
  %22 = load i32, i32* %4, align 4
  %23 = icmp slt i32 %22, 0
  br i1 %23, label %35, label %24

24:                                               ; preds = %21
  %25 = load i32, i32* %4, align 4
  %26 = load i32, i32* @power_largest, align 4
  %27 = icmp sgt i32 %25, %26
  br i1 %27, label %35, label %28

28:                                               ; preds = %24
  %29 = load i32, i32* %5, align 4
  %30 = icmp slt i32 %29, 0
  br i1 %30, label %35, label %31

31:                                               ; preds = %28
  %32 = load i32, i32* %5, align 4
  %33 = load i32, i32* @power_largest, align 4
  %34 = icmp sgt i32 %32, %33
  br i1 %34, label %35, label %36

35:                                               ; preds = %31, %28, %24, %21
  store i32 2, i32* %3, align 4
  br label %54

36:                                               ; preds = %31
  %37 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @slabs_lock) #14
  %38 = load i32, i32* %4, align 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds [64 x %struct.slabclass_t], [64 x %struct.slabclass_t]* @slabclass, i64 0, i64 %39
  %41 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %40, i32 0, i32 4
  %42 = load i32, i32* %41, align 4
  %43 = icmp ult i32 %42, 2
  br i1 %43, label %44, label %45

44:                                               ; preds = %36
  store i8 1, i8* %6, align 1
  br label %45

45:                                               ; preds = %44, %36
  %46 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @slabs_lock) #14
  %47 = load i8, i8* %6, align 1
  %48 = trunc i8 %47 to i1
  br i1 %48, label %49, label %50

49:                                               ; preds = %45
  store i32 3, i32* %3, align 4
  br label %54

50:                                               ; preds = %45
  %51 = load i32, i32* %4, align 4
  store i32 %51, i32* getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 3), align 8
  %52 = load i32, i32* %5, align 4
  store i32 %52, i32* getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 4), align 4
  store volatile i32 1, i32* @slab_rebalance_signal, align 4
  %53 = call i32 @pthread_cond_signal(%union.pthread_cond_t* @slab_rebalance_cond) #14
  store i32 0, i32* %3, align 4
  br label %54

54:                                               ; preds = %50, %49, %35, %14, %9
  %55 = load i32, i32* %3, align 4
  ret i32 %55
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @slabs_reassign_pick_any(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  %5 = load i32, i32* @power_largest, align 4
  %6 = sub nsw i32 %5, 1
  %7 = add nsw i32 %6, 1
  store i32 %7, i32* %4, align 4
  br label %8

8:                                                ; preds = %33, %1
  %9 = load i32, i32* %4, align 4
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %11, label %36

11:                                               ; preds = %8
  %12 = load i32, i32* @slabs_reassign_pick_any.cur, align 4
  %13 = add nsw i32 %12, 1
  store i32 %13, i32* @slabs_reassign_pick_any.cur, align 4
  %14 = load i32, i32* @slabs_reassign_pick_any.cur, align 4
  %15 = load i32, i32* @power_largest, align 4
  %16 = icmp sgt i32 %14, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %11
  store i32 1, i32* @slabs_reassign_pick_any.cur, align 4
  br label %18

18:                                               ; preds = %17, %11
  %19 = load i32, i32* @slabs_reassign_pick_any.cur, align 4
  %20 = load i32, i32* %3, align 4
  %21 = icmp eq i32 %19, %20
  br i1 %21, label %22, label %23

22:                                               ; preds = %18
  br label %33

23:                                               ; preds = %18
  %24 = load i32, i32* @slabs_reassign_pick_any.cur, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [64 x %struct.slabclass_t], [64 x %struct.slabclass_t]* @slabclass, i64 0, i64 %25
  %27 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %26, i32 0, i32 4
  %28 = load i32, i32* %27, align 4
  %29 = icmp ugt i32 %28, 1
  br i1 %29, label %30, label %32

30:                                               ; preds = %23
  %31 = load i32, i32* @slabs_reassign_pick_any.cur, align 4
  store i32 %31, i32* %2, align 4
  br label %37

32:                                               ; preds = %23
  br label %33

33:                                               ; preds = %32, %22
  %34 = load i32, i32* %4, align 4
  %35 = add nsw i32 %34, -1
  store i32 %35, i32* %4, align 4
  br label %8, !llvm.loop !62

36:                                               ; preds = %8
  store i32 -1, i32* %2, align 4
  br label %37

37:                                               ; preds = %36, %30
  %38 = load i32, i32* %2, align 4
  ret i32 %38
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @slabs_rebalancer_pause() #0 {
  %1 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @slabs_rebalance_lock) #14
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @slabs_rebalancer_resume() #0 {
  %1 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @slabs_rebalance_lock) #14
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @start_slab_maintenance_thread() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  store volatile i32 0, i32* @slab_rebalance_signal, align 4
  store i8* null, i8** getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 0), align 8
  %3 = call i32 @pthread_create(i64* @rebalance_tid, %union.pthread_attr_t* null, i8* (i8*)* @slab_rebalance_thread, i8* null) #14
  store i32 %3, i32* %2, align 4
  %4 = icmp ne i32 %3, 0
  br i1 %4, label %5, label %10

5:                                                ; preds = %0
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %7 = load i32, i32* %2, align 4
  %8 = call i8* @strerror(i32 %7) #14
  %9 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.560, i64 0, i64 0), i8* %8)
  store i32 -1, i32* %1, align 4
  br label %11

10:                                               ; preds = %0
  store i32 0, i32* %1, align 4
  br label %11

11:                                               ; preds = %10, %5
  %12 = load i32, i32* %1, align 4
  ret i32 %12
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @slab_rebalance_thread(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  store i32 0, i32* %3, align 4
  store i32 1, i32* %4, align 4
  store i32 1000, i32* %5, align 4
  %6 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @slabs_rebalance_lock) #14
  br label %7

7:                                                ; preds = %56, %1
  %8 = load volatile i32, i32* @slab_rebalance_signal, align 4
  %9 = icmp ne i32 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %7
  %11 = load volatile i32, i32* @do_run_slab_rebalance_thread, align 4
  %12 = icmp ne i32 %11, 0
  br label %13

13:                                               ; preds = %10, %7
  %14 = phi i1 [ true, %7 ], [ %12, %10 ]
  br i1 %14, label %15, label %57

15:                                               ; preds = %13
  %16 = load volatile i32, i32* @slab_rebalance_signal, align 4
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %18, label %23

18:                                               ; preds = %15
  %19 = call i32 @slab_rebalance_start()
  %20 = icmp slt i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %18
  store volatile i32 0, i32* @slab_rebalance_signal, align 4
  br label %22

22:                                               ; preds = %21, %18
  store i32 0, i32* %3, align 4
  br label %32

23:                                               ; preds = %15
  %24 = load volatile i32, i32* @slab_rebalance_signal, align 4
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %26, label %31

26:                                               ; preds = %23
  %27 = load i8*, i8** getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 0), align 8
  %28 = icmp ne i8* %27, null
  br i1 %28, label %29, label %31

29:                                               ; preds = %26
  %30 = call i32 @slab_rebalance_move()
  store i32 %30, i32* %3, align 4
  br label %31

31:                                               ; preds = %29, %26, %23
  br label %32

32:                                               ; preds = %31, %22
  %33 = load i8, i8* getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 12), align 4
  %34 = icmp ne i8 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  call void @slab_rebalance_finish()
  br label %51

36:                                               ; preds = %32
  %37 = load i32, i32* %3, align 4
  %38 = icmp ne i32 %37, 0
  br i1 %38, label %39, label %50

39:                                               ; preds = %36
  %40 = load i32, i32* %4, align 4
  %41 = call i32 @usleep(i32 %40)
  %42 = load i32, i32* %4, align 4
  %43 = mul nsw i32 %42, 2
  store i32 %43, i32* %4, align 4
  %44 = load i32, i32* %4, align 4
  %45 = load i32, i32* %5, align 4
  %46 = icmp sgt i32 %44, %45
  br i1 %46, label %47, label %49

47:                                               ; preds = %39
  %48 = load i32, i32* %5, align 4
  store i32 %48, i32* %4, align 4
  br label %49

49:                                               ; preds = %47, %39
  br label %50

50:                                               ; preds = %49, %36
  br label %51

51:                                               ; preds = %50, %35
  %52 = load volatile i32, i32* @slab_rebalance_signal, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %56

54:                                               ; preds = %51
  %55 = call i32 @pthread_cond_wait(%union.pthread_cond_t* @slab_rebalance_cond, %union.pthread_mutex_t* @slabs_rebalance_lock)
  br label %56

56:                                               ; preds = %54, %51
  br label %7, !llvm.loop !63

57:                                               ; preds = %13
  %58 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @slabs_rebalance_lock) #14
  ret i8* null
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @slab_rebalance_start() #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.slabclass_t*, align 8
  %3 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  %4 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @slabs_lock) #14
  %5 = load i32, i32* getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 3), align 8
  %6 = icmp slt i32 %5, 0
  br i1 %6, label %22, label %7

7:                                                ; preds = %0
  %8 = load i32, i32* getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 3), align 8
  %9 = load i32, i32* @power_largest, align 4
  %10 = icmp sgt i32 %8, %9
  br i1 %10, label %22, label %11

11:                                               ; preds = %7
  %12 = load i32, i32* getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 4), align 4
  %13 = icmp slt i32 %12, 0
  br i1 %13, label %22, label %14

14:                                               ; preds = %11
  %15 = load i32, i32* getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 4), align 4
  %16 = load i32, i32* @power_largest, align 4
  %17 = icmp sgt i32 %15, %16
  br i1 %17, label %22, label %18

18:                                               ; preds = %14
  %19 = load i32, i32* getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 3), align 8
  %20 = load i32, i32* getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 4), align 4
  %21 = icmp eq i32 %19, %20
  br i1 %21, label %22, label %23

22:                                               ; preds = %18, %14, %11, %7, %0
  store i32 -2, i32* %3, align 4
  br label %23

23:                                               ; preds = %22, %18
  %24 = load i32, i32* getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 3), align 8
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [64 x %struct.slabclass_t], [64 x %struct.slabclass_t]* @slabclass, i64 0, i64 %25
  store %struct.slabclass_t* %26, %struct.slabclass_t** %2, align 8
  %27 = load i32, i32* getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 4), align 4
  %28 = call i32 @grow_slab_list(i32 %27)
  %29 = icmp ne i32 %28, 0
  br i1 %29, label %31, label %30

30:                                               ; preds = %23
  store i32 -1, i32* %3, align 4
  br label %31

31:                                               ; preds = %30, %23
  %32 = load %struct.slabclass_t*, %struct.slabclass_t** %2, align 8
  %33 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %32, i32 0, i32 4
  %34 = load i32, i32* %33, align 4
  %35 = icmp ult i32 %34, 2
  br i1 %35, label %36, label %37

36:                                               ; preds = %31
  store i32 -3, i32* %3, align 4
  br label %37

37:                                               ; preds = %36, %31
  %38 = load i32, i32* %3, align 4
  %39 = icmp ne i32 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %37
  %41 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @slabs_lock) #14
  %42 = load i32, i32* %3, align 4
  store i32 %42, i32* %1, align 4
  br label %76

43:                                               ; preds = %37
  %44 = load %struct.slabclass_t*, %struct.slabclass_t** %2, align 8
  %45 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %44, i32 0, i32 5
  %46 = load i8**, i8*** %45, align 8
  %47 = getelementptr inbounds i8*, i8** %46, i64 0
  %48 = load i8*, i8** %47, align 8
  store i8* %48, i8** getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 0), align 8
  %49 = load i8*, i8** getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 0), align 8
  %50 = load %struct.slabclass_t*, %struct.slabclass_t** %2, align 8
  %51 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %50, i32 0, i32 0
  %52 = load i32, i32* %51, align 8
  %53 = load %struct.slabclass_t*, %struct.slabclass_t** %2, align 8
  %54 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %53, i32 0, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = mul i32 %52, %55
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds i8, i8* %49, i64 %57
  store i8* %58, i8** getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 1), align 8
  %59 = load i8*, i8** getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 0), align 8
  store i8* %59, i8** getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 2), align 8
  store i8 0, i8* getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 12), align 4
  %60 = load i32, i32* getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 3), align 8
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %43
  store i8 1, i8* getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 12), align 4
  br label %63

63:                                               ; preds = %62, %43
  %64 = load %struct.slabclass_t*, %struct.slabclass_t** %2, align 8
  %65 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %64, i32 0, i32 1
  %66 = load i32, i32* %65, align 4
  %67 = zext i32 %66 to i64
  %68 = call noalias i8* @calloc(i64 %67, i64 1) #14
  store i8* %68, i8** getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 13), align 8
  store volatile i32 2, i32* @slab_rebalance_signal, align 4
  %69 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %70 = icmp sgt i32 %69, 1
  br i1 %70, label %71, label %74

71:                                               ; preds = %63
  %72 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %73 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %72, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.34.563, i64 0, i64 0))
  br label %74

74:                                               ; preds = %71, %63
  %75 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @slabs_lock) #14
  call void @STATS_LOCK()
  store i8 1, i8* getelementptr inbounds (%struct.stats_state, %struct.stats_state* @stats_state, i32 0, i32 10), align 2
  call void @STATS_UNLOCK()
  store i32 0, i32* %1, align 4
  br label %76

76:                                               ; preds = %74, %40
  %77 = load i32, i32* %1, align 4
  ret i32 %77
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @slab_rebalance_move() #0 {
  %1 = alloca %struct.slabclass_t*, align 8
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct._stritem*, align 8
  %9 = alloca %struct._strchunk*, align 8
  %10 = alloca i8, align 1
  %11 = alloca i32, align 4
  %12 = alloca %struct._stritem*, align 8
  %13 = alloca i64, align 8
  %14 = alloca %struct._strchunk*, align 8
  %15 = alloca %struct._strchunk*, align 8
  store i32 0, i32* %2, align 4
  store i32 0, i32* %3, align 4
  store i32 0, i32* %6, align 4
  %16 = load i32, i32* getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 3), align 8
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds [64 x %struct.slabclass_t], [64 x %struct.slabclass_t]* @slabclass, i64 0, i64 %17
  store %struct.slabclass_t* %18, %struct.slabclass_t** %1, align 8
  %19 = load i8*, i8** getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 2), align 8
  %20 = load i8*, i8** getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 0), align 8
  %21 = ptrtoint i8* %19 to i64
  %22 = ptrtoint i8* %20 to i64
  %23 = sub i64 %21, %22
  %24 = load %struct.slabclass_t*, %struct.slabclass_t** %1, align 8
  %25 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %24, i32 0, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = zext i32 %26 to i64
  %28 = sdiv i64 %23, %27
  %29 = trunc i64 %28 to i32
  store i32 %29, i32* %7, align 4
  %30 = load i8*, i8** getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 13), align 8
  %31 = load i32, i32* %7, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds i8, i8* %30, i64 %32
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i32
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %495

37:                                               ; preds = %0
  %38 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @slabs_lock) #14
  store i32 0, i32* %4, align 4
  store i8* null, i8** %5, align 8
  %39 = load i8*, i8** getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 2), align 8
  %40 = bitcast i8* %39 to %struct._stritem*
  store %struct._stritem* %40, %struct._stritem** %8, align 8
  store %struct._strchunk* null, %struct._strchunk** %9, align 8
  store i32 0, i32* %6, align 4
  %41 = load %struct._stritem*, %struct._stritem** %8, align 8
  %42 = getelementptr inbounds %struct._stritem, %struct._stritem* %41, i32 0, i32 7
  %43 = load i16, i16* %42, align 2
  %44 = zext i16 %43 to i32
  %45 = and i32 %44, 64
  %46 = icmp ne i32 %45, 0
  br i1 %46, label %47, label %53

47:                                               ; preds = %37
  %48 = load %struct._stritem*, %struct._stritem** %8, align 8
  %49 = bitcast %struct._stritem* %48 to %struct._strchunk*
  store %struct._strchunk* %49, %struct._strchunk** %9, align 8
  %50 = load %struct._strchunk*, %struct._strchunk** %9, align 8
  %51 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %50, i32 0, i32 2
  %52 = load %struct._stritem*, %struct._stritem** %51, align 8
  store %struct._stritem* %52, %struct._stritem** %8, align 8
  br label %53

53:                                               ; preds = %47, %37
  %54 = load %struct._stritem*, %struct._stritem** %8, align 8
  %55 = getelementptr inbounds %struct._stritem, %struct._stritem* %54, i32 0, i32 7
  %56 = load i16, i16* %55, align 2
  %57 = zext i16 %56 to i32
  %58 = icmp ne i32 %57, 12
  br i1 %58, label %59, label %169

59:                                               ; preds = %53
  %60 = load %struct._stritem*, %struct._stritem** %8, align 8
  %61 = getelementptr inbounds %struct._stritem, %struct._stritem* %60, i32 0, i32 7
  %62 = load i16, i16* %61, align 2
  %63 = zext i16 %62 to i32
  %64 = and i32 %63, 4
  %65 = icmp ne i32 %64, 0
  br i1 %65, label %66, label %69

66:                                               ; preds = %59
  %67 = load %struct.slabclass_t*, %struct.slabclass_t** %1, align 8
  %68 = load %struct._stritem*, %struct._stritem** %8, align 8
  call void @slab_rebalance_cut_free(%struct.slabclass_t* %67, %struct._stritem* %68)
  store i32 1, i32* %6, align 4
  br label %168

69:                                               ; preds = %59
  %70 = load %struct._stritem*, %struct._stritem** %8, align 8
  %71 = getelementptr inbounds %struct._stritem, %struct._stritem* %70, i32 0, i32 7
  %72 = load i16, i16* %71, align 2
  %73 = zext i16 %72 to i32
  %74 = and i32 %73, 1
  %75 = icmp ne i32 %74, 0
  br i1 %75, label %76, label %166

76:                                               ; preds = %69
  %77 = load i32 (i8*, i64)*, i32 (i8*, i64)** @hash, align 8
  %78 = load %struct._stritem*, %struct._stritem** %8, align 8
  %79 = getelementptr inbounds %struct._stritem, %struct._stritem* %78, i32 0, i32 10
  %80 = bitcast [0 x %union.anon.10]* %79 to i8*
  %81 = load %struct._stritem*, %struct._stritem** %8, align 8
  %82 = getelementptr inbounds %struct._stritem, %struct._stritem* %81, i32 0, i32 7
  %83 = load i16, i16* %82, align 2
  %84 = zext i16 %83 to i32
  %85 = and i32 %84, 2
  %86 = icmp ne i32 %85, 0
  %87 = zext i1 %86 to i64
  %88 = select i1 %86, i64 8, i64 0
  %89 = getelementptr inbounds i8, i8* %80, i64 %88
  %90 = load %struct._stritem*, %struct._stritem** %8, align 8
  %91 = getelementptr inbounds %struct._stritem, %struct._stritem* %90, i32 0, i32 9
  %92 = load i8, i8* %91, align 1
  %93 = zext i8 %92 to i64
  %94 = call i32 %77(i8* %89, i64 %93)
  store i32 %94, i32* %4, align 4
  %95 = load i32, i32* %4, align 4
  %96 = call i8* @item_trylock(i32 %95)
  store i8* %96, i8** %5, align 8
  %97 = icmp eq i8* %96, null
  br i1 %97, label %98, label %99

98:                                               ; preds = %76
  store i32 4, i32* %6, align 4
  br label %165

99:                                               ; preds = %76
  %100 = load %struct._stritem*, %struct._stritem** %8, align 8
  %101 = getelementptr inbounds %struct._stritem, %struct._stritem* %100, i32 0, i32 7
  %102 = load i16, i16* %101, align 2
  %103 = zext i16 %102 to i32
  %104 = and i32 %103, 1
  %105 = icmp ne i32 %104, 0
  %106 = zext i1 %105 to i8
  store i8 %106, i8* %10, align 1
  %107 = load %struct._stritem*, %struct._stritem** %8, align 8
  %108 = getelementptr inbounds %struct._stritem, %struct._stritem* %107, i32 0, i32 6
  %109 = load i16, i16* %108, align 4
  %110 = add i16 %109, 1
  store i16 %110, i16* %108, align 4
  %111 = zext i16 %110 to i32
  store i32 %111, i32* %3, align 4
  %112 = load i32, i32* %3, align 4
  %113 = icmp eq i32 %112, 2
  br i1 %113, label %114, label %120

114:                                              ; preds = %99
  %115 = load i8, i8* %10, align 1
  %116 = trunc i8 %115 to i1
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  store i32 2, i32* %6, align 4
  br label %119

118:                                              ; preds = %114
  store i32 3, i32* %6, align 4
  br label %119

119:                                              ; preds = %118, %117
  br label %155

120:                                              ; preds = %99
  %121 = load i32, i32* %3, align 4
  %122 = icmp sgt i32 %121, 2
  br i1 %122, label %123, label %141

123:                                              ; preds = %120
  %124 = load i8, i8* %10, align 1
  %125 = trunc i8 %124 to i1
  br i1 %125, label %126, label %141

126:                                              ; preds = %123
  %127 = load i32, i32* getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 11), align 8
  %128 = icmp ugt i32 %127, 1000
  br i1 %128, label %129, label %140

129:                                              ; preds = %126
  %130 = load i32, i32* getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 10), align 4
  %131 = add i32 %130, 1
  store i32 %131, i32* getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 10), align 4
  br label %132

132:                                              ; preds = %129
  %133 = load i8*, i8** @storage, align 8
  %134 = load %struct._stritem*, %struct._stritem** %8, align 8
  call void @storage_delete(i8* %133, %struct._stritem* %134)
  br label %135

135:                                              ; preds = %132
  %136 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @slabs_lock) #14
  %137 = load %struct._stritem*, %struct._stritem** %8, align 8
  %138 = load i32, i32* %4, align 4
  call void @do_item_unlink(%struct._stritem* %137, i32 %138)
  %139 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @slabs_lock) #14
  br label %140

140:                                              ; preds = %135, %126
  store i32 3, i32* %6, align 4
  br label %154

141:                                              ; preds = %123, %120
  %142 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %143 = icmp sgt i32 %142, 2
  br i1 %143, label %144, label %153

144:                                              ; preds = %141
  %145 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %146 = load %struct._stritem*, %struct._stritem** %8, align 8
  %147 = getelementptr inbounds %struct._stritem, %struct._stritem* %146, i32 0, i32 6
  %148 = load i16, i16* %147, align 4
  %149 = zext i16 %148 to i32
  %150 = load i32, i32* getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 3), align 8
  %151 = load i32, i32* getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 4), align 4
  %152 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %145, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.35.562, i64 0, i64 0), i32 %149, i32 %150, i32 %151)
  br label %153

153:                                              ; preds = %144, %141
  store i32 3, i32* %6, align 4
  br label %154

154:                                              ; preds = %153, %140
  br label %155

155:                                              ; preds = %154, %119
  %156 = load i32, i32* %6, align 4
  %157 = icmp eq i32 %156, 3
  br i1 %157, label %158, label %164

158:                                              ; preds = %155
  %159 = load %struct._stritem*, %struct._stritem** %8, align 8
  %160 = getelementptr inbounds %struct._stritem, %struct._stritem* %159, i32 0, i32 6
  %161 = load i16, i16* %160, align 4
  %162 = add i16 %161, -1
  store i16 %162, i16* %160, align 4
  %163 = load i8*, i8** %5, align 8
  call void @item_trylock_unlock(i8* %163)
  br label %164

164:                                              ; preds = %158, %155
  br label %165

165:                                              ; preds = %164, %98
  br label %167

166:                                              ; preds = %69
  store i32 3, i32* %6, align 4
  br label %167

167:                                              ; preds = %166, %165
  br label %168

168:                                              ; preds = %167, %66
  br label %169

169:                                              ; preds = %168, %53
  store i32 0, i32* %11, align 4
  store %struct._stritem* null, %struct._stritem** %12, align 8
  store i64 0, i64* %13, align 8
  %170 = load i32, i32* %6, align 4
  switch i32 %170, label %493 [
    i32 2, label %171
    i32 1, label %478
    i32 3, label %487
    i32 4, label %487
    i32 0, label %492
  ]

171:                                              ; preds = %169
  %172 = load %struct._stritem*, %struct._stritem** %8, align 8
  %173 = getelementptr inbounds %struct._stritem, %struct._stritem* %172, i32 0, i32 9
  %174 = load i8, i8* %173, align 1
  %175 = zext i8 %174 to i64
  %176 = add i64 48, %175
  %177 = add i64 %176, 1
  %178 = load %struct._stritem*, %struct._stritem** %8, align 8
  %179 = getelementptr inbounds %struct._stritem, %struct._stritem* %178, i32 0, i32 5
  %180 = load i32, i32* %179, align 8
  %181 = sext i32 %180 to i64
  %182 = add i64 %177, %181
  %183 = load %struct._stritem*, %struct._stritem** %8, align 8
  %184 = getelementptr inbounds %struct._stritem, %struct._stritem* %183, i32 0, i32 7
  %185 = load i16, i16* %184, align 2
  %186 = zext i16 %185 to i32
  %187 = and i32 %186, 256
  %188 = icmp ne i32 %187, 0
  %189 = zext i1 %188 to i64
  %190 = select i1 %188, i64 4, i64 0
  %191 = add i64 %182, %190
  %192 = load %struct._stritem*, %struct._stritem** %8, align 8
  %193 = getelementptr inbounds %struct._stritem, %struct._stritem* %192, i32 0, i32 7
  %194 = load i16, i16* %193, align 2
  %195 = zext i16 %194 to i32
  %196 = and i32 %195, 2
  %197 = icmp ne i32 %196, 0
  %198 = zext i1 %197 to i64
  %199 = select i1 %197, i64 8, i64 0
  %200 = add i64 %191, %199
  store i64 %200, i64* %13, align 8
  %201 = load %struct._stritem*, %struct._stritem** %8, align 8
  %202 = getelementptr inbounds %struct._stritem, %struct._stritem* %201, i32 0, i32 7
  %203 = load i16, i16* %202, align 2
  %204 = zext i16 %203 to i32
  %205 = and i32 %204, 128
  %206 = icmp ne i32 %205, 0
  br i1 %206, label %207, label %215

207:                                              ; preds = %171
  %208 = load i64, i64* %13, align 8
  %209 = load %struct._stritem*, %struct._stritem** %8, align 8
  %210 = getelementptr inbounds %struct._stritem, %struct._stritem* %209, i32 0, i32 5
  %211 = load i32, i32* %210, align 8
  %212 = sext i32 %211 to i64
  %213 = sub i64 %208, %212
  %214 = add i64 %213, 12
  store i64 %214, i64* %13, align 8
  br label %215

215:                                              ; preds = %207, %171
  %216 = load %struct._strchunk*, %struct._strchunk** %9, align 8
  %217 = icmp eq %struct._strchunk* %216, null
  br i1 %217, label %218, label %230

218:                                              ; preds = %215
  %219 = load %struct._stritem*, %struct._stritem** %8, align 8
  %220 = getelementptr inbounds %struct._stritem, %struct._stritem* %219, i32 0, i32 7
  %221 = load i16, i16* %220, align 2
  %222 = zext i16 %221 to i32
  %223 = and i32 %222, 32
  %224 = icmp ne i32 %223, 0
  br i1 %224, label %225, label %230

225:                                              ; preds = %218
  %226 = load %struct.slabclass_t*, %struct.slabclass_t** %1, align 8
  %227 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %226, i32 0, i32 0
  %228 = load i32, i32* %227, align 8
  %229 = zext i32 %228 to i64
  store i64 %229, i64* %13, align 8
  br label %230

230:                                              ; preds = %225, %218, %215
  %231 = load %struct._stritem*, %struct._stritem** %8, align 8
  %232 = getelementptr inbounds %struct._stritem, %struct._stritem* %231, i32 0, i32 4
  %233 = load i32, i32* %232, align 4
  %234 = icmp ne i32 %233, 0
  br i1 %234, label %235, label %241

235:                                              ; preds = %230
  %236 = load %struct._stritem*, %struct._stritem** %8, align 8
  %237 = getelementptr inbounds %struct._stritem, %struct._stritem* %236, i32 0, i32 4
  %238 = load i32, i32* %237, align 4
  %239 = load volatile i32, i32* @current_time, align 4
  %240 = icmp ult i32 %238, %239
  br i1 %240, label %245, label %241

241:                                              ; preds = %235, %230
  %242 = load %struct._stritem*, %struct._stritem** %8, align 8
  %243 = call i32 @item_is_flushed(%struct._stritem* %242)
  %244 = icmp ne i32 %243, 0
  br i1 %244, label %245, label %246

245:                                              ; preds = %241, %235
  store i32 0, i32* %11, align 4
  br label %276

246:                                              ; preds = %241
  %247 = load %struct._strchunk*, %struct._strchunk** %9, align 8
  %248 = icmp eq %struct._strchunk* %247, null
  br i1 %248, label %249, label %258

249:                                              ; preds = %246
  %250 = load i64, i64* %13, align 8
  %251 = load i32, i32* getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 3), align 8
  %252 = call i8* @slab_rebalance_alloc(i64 %250, i32 %251)
  %253 = bitcast i8* %252 to %struct._stritem*
  store %struct._stritem* %253, %struct._stritem** %12, align 8
  %254 = icmp eq %struct._stritem* %253, null
  br i1 %254, label %255, label %258

255:                                              ; preds = %249
  store i32 0, i32* %11, align 4
  %256 = load i32, i32* getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 7), align 8
  %257 = add i32 %256, 1
  store i32 %257, i32* getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 7), align 8
  br label %275

258:                                              ; preds = %249, %246
  %259 = load %struct._strchunk*, %struct._strchunk** %9, align 8
  %260 = icmp ne %struct._strchunk* %259, null
  br i1 %260, label %261, label %273

261:                                              ; preds = %258
  %262 = load %struct.slabclass_t*, %struct.slabclass_t** %1, align 8
  %263 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %262, i32 0, i32 0
  %264 = load i32, i32* %263, align 8
  %265 = zext i32 %264 to i64
  %266 = load i32, i32* getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 3), align 8
  %267 = call i8* @slab_rebalance_alloc(i64 %265, i32 %266)
  %268 = bitcast i8* %267 to %struct._stritem*
  store %struct._stritem* %268, %struct._stritem** %12, align 8
  %269 = icmp eq %struct._stritem* %268, null
  br i1 %269, label %270, label %273

270:                                              ; preds = %261
  store i32 0, i32* %11, align 4
  %271 = load i32, i32* getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 7), align 8
  %272 = add i32 %271, 1
  store i32 %272, i32* getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 7), align 8
  br label %274

273:                                              ; preds = %261, %258
  store i32 1, i32* %11, align 4
  br label %274

274:                                              ; preds = %273, %270
  br label %275

275:                                              ; preds = %274, %255
  br label %276

276:                                              ; preds = %275, %245
  %277 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @slabs_lock) #14
  %278 = load i32, i32* %11, align 4
  %279 = icmp ne i32 %278, 0
  br i1 %279, label %280, label %409

280:                                              ; preds = %276
  %281 = load %struct._strchunk*, %struct._strchunk** %9, align 8
  %282 = icmp eq %struct._strchunk* %281, null
  br i1 %282, label %283, label %366

283:                                              ; preds = %280
  %284 = load %struct._stritem*, %struct._stritem** %12, align 8
  %285 = bitcast %struct._stritem* %284 to i8*
  %286 = load %struct._stritem*, %struct._stritem** %8, align 8
  %287 = bitcast %struct._stritem* %286 to i8*
  %288 = load i64, i64* %13, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %285, i8* align 8 %287, i64 %288, i1 false)
  %289 = load %struct._stritem*, %struct._stritem** %12, align 8
  %290 = getelementptr inbounds %struct._stritem, %struct._stritem* %289, i32 0, i32 1
  store %struct._stritem* null, %struct._stritem** %290, align 8
  %291 = load %struct._stritem*, %struct._stritem** %12, align 8
  %292 = getelementptr inbounds %struct._stritem, %struct._stritem* %291, i32 0, i32 0
  store %struct._stritem* null, %struct._stritem** %292, align 8
  %293 = load %struct._stritem*, %struct._stritem** %12, align 8
  %294 = getelementptr inbounds %struct._stritem, %struct._stritem* %293, i32 0, i32 2
  store %struct._stritem* null, %struct._stritem** %294, align 8
  %295 = load %struct._stritem*, %struct._stritem** %12, align 8
  %296 = getelementptr inbounds %struct._stritem, %struct._stritem* %295, i32 0, i32 7
  %297 = load i16, i16* %296, align 2
  %298 = zext i16 %297 to i32
  %299 = and i32 %298, -2
  %300 = trunc i32 %299 to i16
  store i16 %300, i16* %296, align 2
  %301 = load %struct._stritem*, %struct._stritem** %12, align 8
  %302 = getelementptr inbounds %struct._stritem, %struct._stritem* %301, i32 0, i32 6
  store i16 0, i16* %302, align 4
  %303 = load %struct._stritem*, %struct._stritem** %8, align 8
  %304 = load %struct._stritem*, %struct._stritem** %12, align 8
  %305 = load i32, i32* %4, align 4
  %306 = call i32 @do_item_replace(%struct._stritem* %303, %struct._stritem* %304, i32 %305)
  %307 = load %struct._stritem*, %struct._stritem** %12, align 8
  %308 = getelementptr inbounds %struct._stritem, %struct._stritem* %307, i32 0, i32 7
  %309 = load i16, i16* %308, align 2
  %310 = zext i16 %309 to i32
  %311 = and i32 %310, 32
  %312 = icmp ne i32 %311, 0
  br i1 %312, label %313, label %359

313:                                              ; preds = %283
  %314 = load %struct._stritem*, %struct._stritem** %12, align 8
  %315 = getelementptr inbounds %struct._stritem, %struct._stritem* %314, i32 0, i32 10
  %316 = bitcast [0 x %union.anon.10]* %315 to i8*
  %317 = load %struct._stritem*, %struct._stritem** %12, align 8
  %318 = getelementptr inbounds %struct._stritem, %struct._stritem* %317, i32 0, i32 9
  %319 = load i8, i8* %318, align 1
  %320 = zext i8 %319 to i32
  %321 = sext i32 %320 to i64
  %322 = getelementptr inbounds i8, i8* %316, i64 %321
  %323 = getelementptr inbounds i8, i8* %322, i64 1
  %324 = load %struct._stritem*, %struct._stritem** %12, align 8
  %325 = getelementptr inbounds %struct._stritem, %struct._stritem* %324, i32 0, i32 7
  %326 = load i16, i16* %325, align 2
  %327 = zext i16 %326 to i32
  %328 = and i32 %327, 256
  %329 = icmp ne i32 %328, 0
  %330 = zext i1 %329 to i64
  %331 = select i1 %329, i64 4, i64 0
  %332 = getelementptr inbounds i8, i8* %323, i64 %331
  %333 = load %struct._stritem*, %struct._stritem** %12, align 8
  %334 = getelementptr inbounds %struct._stritem, %struct._stritem* %333, i32 0, i32 7
  %335 = load i16, i16* %334, align 2
  %336 = zext i16 %335 to i32
  %337 = and i32 %336, 2
  %338 = icmp ne i32 %337, 0
  %339 = zext i1 %338 to i64
  %340 = select i1 %338, i64 8, i64 0
  %341 = getelementptr inbounds i8, i8* %332, i64 %340
  %342 = bitcast i8* %341 to %struct._strchunk*
  store %struct._strchunk* %342, %struct._strchunk** %14, align 8
  %343 = load %struct._strchunk*, %struct._strchunk** %14, align 8
  %344 = load %struct._strchunk*, %struct._strchunk** %14, align 8
  %345 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %344, i32 0, i32 0
  %346 = load %struct._strchunk*, %struct._strchunk** %345, align 8
  %347 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %346, i32 0, i32 1
  store %struct._strchunk* %343, %struct._strchunk** %347, align 8
  br label %348

348:                                              ; preds = %351, %313
  %349 = load %struct._strchunk*, %struct._strchunk** %14, align 8
  %350 = icmp ne %struct._strchunk* %349, null
  br i1 %350, label %351, label %358

351:                                              ; preds = %348
  %352 = load %struct._stritem*, %struct._stritem** %12, align 8
  %353 = load %struct._strchunk*, %struct._strchunk** %14, align 8
  %354 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %353, i32 0, i32 2
  store %struct._stritem* %352, %struct._stritem** %354, align 8
  %355 = load %struct._strchunk*, %struct._strchunk** %14, align 8
  %356 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %355, i32 0, i32 0
  %357 = load %struct._strchunk*, %struct._strchunk** %356, align 8
  store %struct._strchunk* %357, %struct._strchunk** %14, align 8
  br label %348, !llvm.loop !64

358:                                              ; preds = %348
  br label %359

359:                                              ; preds = %358, %283
  %360 = load %struct._stritem*, %struct._stritem** %8, align 8
  %361 = getelementptr inbounds %struct._stritem, %struct._stritem* %360, i32 0, i32 6
  store i16 0, i16* %361, align 4
  %362 = load %struct._stritem*, %struct._stritem** %8, align 8
  %363 = getelementptr inbounds %struct._stritem, %struct._stritem* %362, i32 0, i32 7
  store i16 12, i16* %363, align 2
  %364 = load i32, i32* getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 6), align 4
  %365 = add i32 %364, 1
  store i32 %365, i32* getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 6), align 4
  br label %404

366:                                              ; preds = %280
  %367 = load %struct._stritem*, %struct._stritem** %12, align 8
  %368 = bitcast %struct._stritem* %367 to %struct._strchunk*
  store %struct._strchunk* %368, %struct._strchunk** %15, align 8
  %369 = load %struct._strchunk*, %struct._strchunk** %15, align 8
  %370 = load %struct._strchunk*, %struct._strchunk** %9, align 8
  %371 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %370, i32 0, i32 1
  %372 = load %struct._strchunk*, %struct._strchunk** %371, align 8
  %373 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %372, i32 0, i32 0
  store %struct._strchunk* %369, %struct._strchunk** %373, align 8
  %374 = load %struct._strchunk*, %struct._strchunk** %9, align 8
  %375 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %374, i32 0, i32 0
  %376 = load %struct._strchunk*, %struct._strchunk** %375, align 8
  %377 = icmp ne %struct._strchunk* %376, null
  br i1 %377, label %378, label %384

378:                                              ; preds = %366
  %379 = load %struct._strchunk*, %struct._strchunk** %15, align 8
  %380 = load %struct._strchunk*, %struct._strchunk** %9, align 8
  %381 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %380, i32 0, i32 0
  %382 = load %struct._strchunk*, %struct._strchunk** %381, align 8
  %383 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %382, i32 0, i32 1
  store %struct._strchunk* %379, %struct._strchunk** %383, align 8
  br label %384

384:                                              ; preds = %378, %366
  %385 = load %struct._strchunk*, %struct._strchunk** %15, align 8
  %386 = bitcast %struct._strchunk* %385 to i8*
  %387 = load %struct._strchunk*, %struct._strchunk** %9, align 8
  %388 = bitcast %struct._strchunk* %387 to i8*
  %389 = load %struct._strchunk*, %struct._strchunk** %9, align 8
  %390 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %389, i32 0, i32 4
  %391 = load i32, i32* %390, align 4
  %392 = sext i32 %391 to i64
  %393 = add i64 %392, 48
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %386, i8* align 8 %388, i64 %393, i1 false)
  %394 = load %struct._strchunk*, %struct._strchunk** %9, align 8
  %395 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %394, i32 0, i32 6
  store i16 0, i16* %395, align 4
  %396 = load %struct._strchunk*, %struct._strchunk** %9, align 8
  %397 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %396, i32 0, i32 7
  store i16 12, i16* %397, align 2
  %398 = load i32, i32* getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 9), align 8
  %399 = add i32 %398, 1
  store i32 %399, i32* getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 9), align 8
  %400 = load %struct._stritem*, %struct._stritem** %8, align 8
  %401 = getelementptr inbounds %struct._stritem, %struct._stritem* %400, i32 0, i32 6
  %402 = load i16, i16* %401, align 4
  %403 = add i16 %402, -1
  store i16 %403, i16* %401, align 4
  br label %404

404:                                              ; preds = %384, %359
  %405 = load i8*, i8** getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 13), align 8
  %406 = load i32, i32* %7, align 4
  %407 = sext i32 %406 to i64
  %408 = getelementptr inbounds i8, i8* %405, i64 %407
  store i8 1, i8* %408, align 1
  br label %475

409:                                              ; preds = %276
  br label %410

410:                                              ; preds = %409
  %411 = load i8*, i8** @storage, align 8
  %412 = load %struct._stritem*, %struct._stritem** %8, align 8
  call void @storage_delete(i8* %411, %struct._stritem* %412)
  br label %413

413:                                              ; preds = %410
  %414 = load %struct._strchunk*, %struct._strchunk** %9, align 8
  %415 = icmp ne %struct._strchunk* %414, null
  br i1 %415, label %434, label %416

416:                                              ; preds = %413
  %417 = load %struct._stritem*, %struct._stritem** %8, align 8
  %418 = getelementptr inbounds %struct._stritem, %struct._stritem* %417, i32 0, i32 7
  %419 = load i16, i16* %418, align 2
  %420 = zext i16 %419 to i32
  %421 = and i32 %420, 32
  %422 = icmp eq i32 %421, 0
  br i1 %422, label %423, label %434

423:                                              ; preds = %416
  %424 = load %struct._stritem*, %struct._stritem** %8, align 8
  %425 = load i32, i32* %4, align 4
  call void @do_item_unlink(%struct._stritem* %424, i32 %425)
  %426 = load %struct._stritem*, %struct._stritem** %8, align 8
  %427 = getelementptr inbounds %struct._stritem, %struct._stritem* %426, i32 0, i32 7
  store i16 12, i16* %427, align 2
  %428 = load %struct._stritem*, %struct._stritem** %8, align 8
  %429 = getelementptr inbounds %struct._stritem, %struct._stritem* %428, i32 0, i32 6
  store i16 0, i16* %429, align 4
  %430 = load i8*, i8** getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 13), align 8
  %431 = load i32, i32* %7, align 4
  %432 = sext i32 %431 to i64
  %433 = getelementptr inbounds i8, i8* %430, i64 %432
  store i8 1, i8* %433, align 1
  br label %474

434:                                              ; preds = %416, %413
  %435 = load %struct._stritem*, %struct._stritem** %8, align 8
  %436 = getelementptr inbounds %struct._stritem, %struct._stritem* %435, i32 0, i32 9
  %437 = load i8, i8* %436, align 1
  %438 = zext i8 %437 to i64
  %439 = add i64 48, %438
  %440 = add i64 %439, 1
  %441 = load %struct._stritem*, %struct._stritem** %8, align 8
  %442 = getelementptr inbounds %struct._stritem, %struct._stritem* %441, i32 0, i32 5
  %443 = load i32, i32* %442, align 8
  %444 = sext i32 %443 to i64
  %445 = add i64 %440, %444
  %446 = load %struct._stritem*, %struct._stritem** %8, align 8
  %447 = getelementptr inbounds %struct._stritem, %struct._stritem* %446, i32 0, i32 7
  %448 = load i16, i16* %447, align 2
  %449 = zext i16 %448 to i32
  %450 = and i32 %449, 256
  %451 = icmp ne i32 %450, 0
  %452 = zext i1 %451 to i64
  %453 = select i1 %451, i64 4, i64 0
  %454 = add i64 %445, %453
  %455 = load %struct._stritem*, %struct._stritem** %8, align 8
  %456 = getelementptr inbounds %struct._stritem, %struct._stritem* %455, i32 0, i32 7
  %457 = load i16, i16* %456, align 2
  %458 = zext i16 %457 to i32
  %459 = and i32 %458, 2
  %460 = icmp ne i32 %459, 0
  %461 = zext i1 %460 to i64
  %462 = select i1 %460, i64 8, i64 0
  %463 = add i64 %454, %462
  store i64 %463, i64* %13, align 8
  %464 = load %struct._stritem*, %struct._stritem** %8, align 8
  %465 = load i32, i32* %4, align 4
  call void @do_item_unlink(%struct._stritem* %464, i32 %465)
  %466 = load %struct._stritem*, %struct._stritem** %8, align 8
  %467 = bitcast %struct._stritem* %466 to i8*
  %468 = load i64, i64* %13, align 8
  %469 = load i32, i32* getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 3), align 8
  call void @slabs_free(i8* %467, i64 %468, i32 %469)
  %470 = load i32, i32* getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 5), align 8
  %471 = add i32 %470, 1
  store i32 %471, i32* getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 5), align 8
  %472 = load i32, i32* %2, align 4
  %473 = add nsw i32 %472, 1
  store i32 %473, i32* %2, align 4
  br label %474

474:                                              ; preds = %434, %423
  br label %475

475:                                              ; preds = %474, %404
  %476 = load i8*, i8** %5, align 8
  call void @item_trylock_unlock(i8* %476)
  %477 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @slabs_lock) #14
  br label %493

478:                                              ; preds = %169
  %479 = load i8*, i8** getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 13), align 8
  %480 = load i32, i32* %7, align 4
  %481 = sext i32 %480 to i64
  %482 = getelementptr inbounds i8, i8* %479, i64 %481
  store i8 1, i8* %482, align 1
  %483 = load %struct._stritem*, %struct._stritem** %8, align 8
  %484 = getelementptr inbounds %struct._stritem, %struct._stritem* %483, i32 0, i32 6
  store i16 0, i16* %484, align 4
  %485 = load %struct._stritem*, %struct._stritem** %8, align 8
  %486 = getelementptr inbounds %struct._stritem, %struct._stritem* %485, i32 0, i32 7
  store i16 12, i16* %486, align 2
  br label %493

487:                                              ; preds = %169, %169
  %488 = load i32, i32* getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 5), align 8
  %489 = add i32 %488, 1
  store i32 %489, i32* getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 5), align 8
  %490 = load i32, i32* %2, align 4
  %491 = add nsw i32 %490, 1
  store i32 %491, i32* %2, align 4
  br label %493

492:                                              ; preds = %169
  br label %493

493:                                              ; preds = %169, %492, %487, %478, %475
  %494 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @slabs_lock) #14
  br label %495

495:                                              ; preds = %493, %0
  %496 = load i8*, i8** getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 2), align 8
  %497 = load %struct.slabclass_t*, %struct.slabclass_t** %1, align 8
  %498 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %497, i32 0, i32 0
  %499 = load i32, i32* %498, align 8
  %500 = zext i32 %499 to i64
  %501 = getelementptr inbounds i8, i8* %496, i64 %500
  store i8* %501, i8** getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 2), align 8
  %502 = load i8*, i8** getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 2), align 8
  %503 = load i8*, i8** getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 1), align 8
  %504 = icmp uge i8* %502, %503
  br i1 %504, label %505, label %520

505:                                              ; preds = %495
  %506 = load i32, i32* getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 5), align 8
  %507 = icmp ne i32 %506, 0
  br i1 %507, label %508, label %516

508:                                              ; preds = %505
  %509 = load i8*, i8** getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 0), align 8
  store i8* %509, i8** getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 2), align 8
  call void @STATS_LOCK()
  %510 = load i32, i32* getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 5), align 8
  %511 = zext i32 %510 to i64
  %512 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 10), align 8
  %513 = add i64 %512, %511
  store i64 %513, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 10), align 8
  call void @STATS_UNLOCK()
  store i32 0, i32* getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 5), align 8
  %514 = load i32, i32* getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 11), align 8
  %515 = add i32 %514, 1
  store i32 %515, i32* getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 11), align 8
  br label %519

516:                                              ; preds = %505
  %517 = load i8, i8* getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 12), align 4
  %518 = add i8 %517, 1
  store i8 %518, i8* getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 12), align 4
  br label %519

519:                                              ; preds = %516, %508
  br label %520

520:                                              ; preds = %519, %495
  %521 = load i32, i32* %2, align 4
  ret i32 %521
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @slab_rebalance_finish() #0 {
  %1 = alloca %struct.slabclass_t*, align 8
  %2 = alloca %struct.slabclass_t*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @slabs_lock) #14
  %10 = load i32, i32* getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 3), align 8
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds [64 x %struct.slabclass_t], [64 x %struct.slabclass_t]* @slabclass, i64 0, i64 %11
  store %struct.slabclass_t* %12, %struct.slabclass_t** %1, align 8
  %13 = load i32, i32* getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 4), align 4
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds [64 x %struct.slabclass_t], [64 x %struct.slabclass_t]* @slabclass, i64 0, i64 %14
  store %struct.slabclass_t* %15, %struct.slabclass_t** %2, align 8
  %16 = load %struct.slabclass_t*, %struct.slabclass_t** %1, align 8
  %17 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %16, i32 0, i32 4
  %18 = load i32, i32* %17, align 4
  %19 = add i32 %18, -1
  store i32 %19, i32* %17, align 4
  store i32 0, i32* %3, align 4
  br label %20

20:                                               ; preds = %41, %0
  %21 = load i32, i32* %3, align 4
  %22 = load %struct.slabclass_t*, %struct.slabclass_t** %1, align 8
  %23 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %22, i32 0, i32 4
  %24 = load i32, i32* %23, align 4
  %25 = icmp ult i32 %21, %24
  br i1 %25, label %26, label %44

26:                                               ; preds = %20
  %27 = load %struct.slabclass_t*, %struct.slabclass_t** %1, align 8
  %28 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %27, i32 0, i32 5
  %29 = load i8**, i8*** %28, align 8
  %30 = load i32, i32* %3, align 4
  %31 = add nsw i32 %30, 1
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds i8*, i8** %29, i64 %32
  %34 = load i8*, i8** %33, align 8
  %35 = load %struct.slabclass_t*, %struct.slabclass_t** %1, align 8
  %36 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %35, i32 0, i32 5
  %37 = load i8**, i8*** %36, align 8
  %38 = load i32, i32* %3, align 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds i8*, i8** %37, i64 %39
  store i8* %34, i8** %40, align 8
  br label %41

41:                                               ; preds = %26
  %42 = load i32, i32* %3, align 4
  %43 = add nsw i32 %42, 1
  store i32 %43, i32* %3, align 4
  br label %20, !llvm.loop !65

44:                                               ; preds = %20
  %45 = load i8*, i8** getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 0), align 8
  %46 = load %struct.slabclass_t*, %struct.slabclass_t** %2, align 8
  %47 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %46, i32 0, i32 5
  %48 = load i8**, i8*** %47, align 8
  %49 = load %struct.slabclass_t*, %struct.slabclass_t** %2, align 8
  %50 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %49, i32 0, i32 4
  %51 = load i32, i32* %50, align 4
  %52 = add i32 %51, 1
  store i32 %52, i32* %50, align 4
  %53 = zext i32 %51 to i64
  %54 = getelementptr inbounds i8*, i8** %48, i64 %53
  store i8* %45, i8** %54, align 8
  %55 = load i32, i32* getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 4), align 4
  %56 = icmp sgt i32 %55, 0
  br i1 %56, label %57, label %63

57:                                               ; preds = %44
  %58 = load i8*, i8** getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 0), align 8
  %59 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 24), align 4
  %60 = sext i32 %59 to i64
  call void @llvm.memset.p0i8.i64(i8* align 1 %58, i8 0, i64 %60, i1 false)
  %61 = load i8*, i8** getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 0), align 8
  %62 = load i32, i32* getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 4), align 4
  call void @split_slab_page_into_freelist(i8* %61, i32 %62)
  br label %69

63:                                               ; preds = %44
  %64 = load i32, i32* getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 4), align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %68

66:                                               ; preds = %63
  %67 = load i8*, i8** getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 0), align 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %67, i8 0, i64 48, i1 false)
  store i8 0, i8* @mem_limit_reached, align 1
  call void @memory_release()
  br label %68

68:                                               ; preds = %66, %63
  br label %69

69:                                               ; preds = %68, %57
  store i32 0, i32* getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 11), align 8
  store i8 0, i8* getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 12), align 4
  store i32 0, i32* getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 3), align 8
  store i32 0, i32* getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 4), align 4
  store i8* null, i8** getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 0), align 8
  store i8* null, i8** getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 1), align 8
  store i8* null, i8** getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 2), align 8
  %70 = load i32, i32* getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 7), align 8
  store i32 %70, i32* %5, align 4
  %71 = load i32, i32* getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 8), align 4
  store i32 %71, i32* %6, align 4
  %72 = load i32, i32* getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 6), align 4
  store i32 %72, i32* %4, align 4
  %73 = load i32, i32* getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 9), align 8
  store i32 %73, i32* %7, align 4
  %74 = load i32, i32* getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 10), align 4
  store i32 %74, i32* %8, align 4
  store i32 0, i32* getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 7), align 8
  store i32 0, i32* getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 8), align 4
  store i32 0, i32* getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 6), align 4
  store i32 0, i32* getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 9), align 8
  store i32 0, i32* getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 10), align 4
  store volatile i32 0, i32* @slab_rebalance_signal, align 4
  %75 = load i8*, i8** getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 13), align 8
  call void @free(i8* %75) #14
  %76 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @slabs_lock) #14
  call void @STATS_LOCK()
  %77 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 5), align 8
  %78 = add i64 %77, 1
  store i64 %78, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 5), align 8
  %79 = load i32, i32* %4, align 4
  %80 = zext i32 %79 to i64
  %81 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 6), align 8
  %82 = add i64 %81, %80
  store i64 %82, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 6), align 8
  %83 = load i32, i32* %5, align 4
  %84 = zext i32 %83 to i64
  %85 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 7), align 8
  %86 = add i64 %85, %84
  store i64 %86, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 7), align 8
  %87 = load i32, i32* %6, align 4
  %88 = zext i32 %87 to i64
  %89 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 8), align 8
  %90 = add i64 %89, %88
  store i64 %90, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 8), align 8
  %91 = load i32, i32* %7, align 4
  %92 = zext i32 %91 to i64
  %93 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 9), align 8
  %94 = add i64 %93, %92
  store i64 %94, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 9), align 8
  %95 = load i32, i32* %8, align 4
  %96 = zext i32 %95 to i64
  %97 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 11), align 8
  %98 = add i64 %97, %96
  store i64 %98, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 11), align 8
  store i8 0, i8* getelementptr inbounds (%struct.stats_state, %struct.stats_state* @stats_state, i32 0, i32 10), align 2
  call void @STATS_UNLOCK()
  %99 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %100 = icmp sgt i32 %99, 1
  br i1 %100, label %101, label %104

101:                                              ; preds = %69
  %102 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %103 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %102, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.36.561, i64 0, i64 0))
  br label %104

104:                                              ; preds = %101, %69
  ret void
}

declare dso_local i32 @pthread_cond_wait(%union.pthread_cond_t*, %union.pthread_mutex_t*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @slab_rebalance_cut_free(%struct.slabclass_t* %0, %struct._stritem* %1) #0 {
  %3 = alloca %struct.slabclass_t*, align 8
  %4 = alloca %struct._stritem*, align 8
  store %struct.slabclass_t* %0, %struct.slabclass_t** %3, align 8
  store %struct._stritem* %1, %struct._stritem** %4, align 8
  %5 = load %struct.slabclass_t*, %struct.slabclass_t** %3, align 8
  %6 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %5, i32 0, i32 2
  %7 = load i8*, i8** %6, align 8
  %8 = load %struct._stritem*, %struct._stritem** %4, align 8
  %9 = bitcast %struct._stritem* %8 to i8*
  %10 = icmp eq i8* %7, %9
  br i1 %10, label %11, label %18

11:                                               ; preds = %2
  %12 = load %struct._stritem*, %struct._stritem** %4, align 8
  %13 = getelementptr inbounds %struct._stritem, %struct._stritem* %12, i32 0, i32 0
  %14 = load %struct._stritem*, %struct._stritem** %13, align 8
  %15 = bitcast %struct._stritem* %14 to i8*
  %16 = load %struct.slabclass_t*, %struct.slabclass_t** %3, align 8
  %17 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %16, i32 0, i32 2
  store i8* %15, i8** %17, align 8
  br label %18

18:                                               ; preds = %11, %2
  %19 = load %struct._stritem*, %struct._stritem** %4, align 8
  %20 = getelementptr inbounds %struct._stritem, %struct._stritem* %19, i32 0, i32 0
  %21 = load %struct._stritem*, %struct._stritem** %20, align 8
  %22 = icmp ne %struct._stritem* %21, null
  br i1 %22, label %23, label %31

23:                                               ; preds = %18
  %24 = load %struct._stritem*, %struct._stritem** %4, align 8
  %25 = getelementptr inbounds %struct._stritem, %struct._stritem* %24, i32 0, i32 1
  %26 = load %struct._stritem*, %struct._stritem** %25, align 8
  %27 = load %struct._stritem*, %struct._stritem** %4, align 8
  %28 = getelementptr inbounds %struct._stritem, %struct._stritem* %27, i32 0, i32 0
  %29 = load %struct._stritem*, %struct._stritem** %28, align 8
  %30 = getelementptr inbounds %struct._stritem, %struct._stritem* %29, i32 0, i32 1
  store %struct._stritem* %26, %struct._stritem** %30, align 8
  br label %31

31:                                               ; preds = %23, %18
  %32 = load %struct._stritem*, %struct._stritem** %4, align 8
  %33 = getelementptr inbounds %struct._stritem, %struct._stritem* %32, i32 0, i32 1
  %34 = load %struct._stritem*, %struct._stritem** %33, align 8
  %35 = icmp ne %struct._stritem* %34, null
  br i1 %35, label %36, label %44

36:                                               ; preds = %31
  %37 = load %struct._stritem*, %struct._stritem** %4, align 8
  %38 = getelementptr inbounds %struct._stritem, %struct._stritem* %37, i32 0, i32 0
  %39 = load %struct._stritem*, %struct._stritem** %38, align 8
  %40 = load %struct._stritem*, %struct._stritem** %4, align 8
  %41 = getelementptr inbounds %struct._stritem, %struct._stritem* %40, i32 0, i32 1
  %42 = load %struct._stritem*, %struct._stritem** %41, align 8
  %43 = getelementptr inbounds %struct._stritem, %struct._stritem* %42, i32 0, i32 0
  store %struct._stritem* %39, %struct._stritem** %43, align 8
  br label %44

44:                                               ; preds = %36, %31
  %45 = load %struct.slabclass_t*, %struct.slabclass_t** %3, align 8
  %46 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %45, i32 0, i32 3
  %47 = load i32, i32* %46, align 8
  %48 = add i32 %47, -1
  store i32 %48, i32* %46, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @slab_rebalance_alloc(i64 %0, i32 %1) #0 {
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.slabclass_t*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct._stritem*, align 8
  store i64 %0, i64* %3, align 8
  store i32 %1, i32* %4, align 4
  %8 = load i32, i32* getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 3), align 8
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds [64 x %struct.slabclass_t], [64 x %struct.slabclass_t]* @slabclass, i64 0, i64 %9
  store %struct.slabclass_t* %10, %struct.slabclass_t** %5, align 8
  store %struct._stritem* null, %struct._stritem** %7, align 8
  store i32 0, i32* %6, align 4
  br label %11

11:                                               ; preds = %44, %2
  %12 = load i32, i32* %6, align 4
  %13 = load %struct.slabclass_t*, %struct.slabclass_t** %5, align 8
  %14 = getelementptr inbounds %struct.slabclass_t, %struct.slabclass_t* %13, i32 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = icmp ult i32 %12, %15
  br i1 %16, label %17, label %47

17:                                               ; preds = %11
  %18 = load i64, i64* %3, align 8
  %19 = load i32, i32* %4, align 4
  %20 = call i8* @do_slabs_alloc(i64 %18, i32 %19, i32 1)
  %21 = bitcast i8* %20 to %struct._stritem*
  store %struct._stritem* %21, %struct._stritem** %7, align 8
  %22 = load %struct._stritem*, %struct._stritem** %7, align 8
  %23 = icmp eq %struct._stritem* %22, null
  br i1 %23, label %24, label %25

24:                                               ; preds = %17
  br label %47

25:                                               ; preds = %17
  %26 = load %struct._stritem*, %struct._stritem** %7, align 8
  %27 = bitcast %struct._stritem* %26 to i8*
  %28 = load i8*, i8** getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 0), align 8
  %29 = icmp uge i8* %27, %28
  br i1 %29, label %30, label %42

30:                                               ; preds = %25
  %31 = load %struct._stritem*, %struct._stritem** %7, align 8
  %32 = bitcast %struct._stritem* %31 to i8*
  %33 = load i8*, i8** getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 1), align 8
  %34 = icmp ult i8* %32, %33
  br i1 %34, label %35, label %42

35:                                               ; preds = %30
  %36 = load %struct._stritem*, %struct._stritem** %7, align 8
  %37 = getelementptr inbounds %struct._stritem, %struct._stritem* %36, i32 0, i32 6
  store i16 0, i16* %37, align 4
  %38 = load %struct._stritem*, %struct._stritem** %7, align 8
  %39 = getelementptr inbounds %struct._stritem, %struct._stritem* %38, i32 0, i32 7
  store i16 12, i16* %39, align 2
  store %struct._stritem* null, %struct._stritem** %7, align 8
  %40 = load i32, i32* getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 8), align 4
  %41 = add i32 %40, 1
  store i32 %41, i32* getelementptr inbounds (%struct.slab_rebalance, %struct.slab_rebalance* @slab_rebal, i32 0, i32 8), align 4
  br label %43

42:                                               ; preds = %30, %25
  br label %47

43:                                               ; preds = %35
  br label %44

44:                                               ; preds = %43
  %45 = load i32, i32* %6, align 4
  %46 = add nsw i32 %45, 1
  store i32 %46, i32* %6, align 4
  br label %11, !llvm.loop !66

47:                                               ; preds = %42, %24, %11
  %48 = load %struct._stritem*, %struct._stritem** %7, align 8
  %49 = bitcast %struct._stritem* %48 to i8*
  ret i8* %49
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @stop_slab_maintenance_thread() #0 {
  %1 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @slabs_rebalance_lock) #14
  store volatile i32 0, i32* @do_run_slab_rebalance_thread, align 4
  %2 = call i32 @pthread_cond_signal(%union.pthread_cond_t* @slab_rebalance_cond) #14
  %3 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @slabs_rebalance_lock) #14
  %4 = load i64, i64* @rebalance_tid, align 8
  %5 = call i32 @pthread_join(i64 %4, i8** null)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @item_stats_reset() #0 {
  %1 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  br label %2

2:                                                ; preds = %18, %0
  %3 = load i32, i32* %1, align 4
  %4 = icmp slt i32 %3, 256
  br i1 %4, label %5, label %21

5:                                                ; preds = %2
  %6 = load i32, i32* %1, align 4
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds [256 x %union.pthread_mutex_t], [256 x %union.pthread_mutex_t]* @lru_locks, i64 0, i64 %7
  %9 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %8) #14
  %10 = load i32, i32* %1, align 4
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds [256 x %struct.itemstats_t], [256 x %struct.itemstats_t]* @itemstats, i64 0, i64 %11
  %13 = bitcast %struct.itemstats_t* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 168, i1 false)
  %14 = load i32, i32* %1, align 4
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds [256 x %union.pthread_mutex_t], [256 x %union.pthread_mutex_t]* @lru_locks, i64 0, i64 %15
  %17 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %16) #14
  br label %18

18:                                               ; preds = %5
  %19 = load i32, i32* %1, align 4
  %20 = add nsw i32 %19, 1
  store i32 %20, i32* %1, align 4
  br label %2, !llvm.loop !67

21:                                               ; preds = %2
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @do_item_stats_add_crawl(i32 %0, i64 %1, i64 %2, i64 %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  store i32 %0, i32* %5, align 4
  store i64 %1, i64* %6, align 8
  store i64 %2, i64* %7, align 8
  store i64 %3, i64* %8, align 8
  %9 = load i64, i64* %6, align 8
  %10 = load i32, i32* %5, align 4
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds [256 x %struct.itemstats_t], [256 x %struct.itemstats_t]* @itemstats, i64 0, i64 %11
  %13 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %12, i32 0, i32 8
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, %9
  store i64 %15, i64* %13, align 8
  %16 = load i64, i64* %7, align 8
  %17 = load i32, i32* %5, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [256 x %struct.itemstats_t], [256 x %struct.itemstats_t]* @itemstats, i64 0, i64 %18
  %20 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %19, i32 0, i32 5
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, %16
  store i64 %22, i64* %20, align 8
  %23 = load i64, i64* %8, align 8
  %24 = load i32, i32* %5, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [256 x %struct.itemstats_t], [256 x %struct.itemstats_t]* @itemstats, i64 0, i64 %25
  %27 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %26, i32 0, i32 9
  %28 = load i64, i64* %27, align 8
  %29 = add i64 %28, %23
  store i64 %29, i64* %27, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @get_cas_id() #0 {
  %1 = alloca i64, align 8
  %2 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @cas_id_lock) #14
  %3 = load i64, i64* @cas_id, align 8
  %4 = add i64 %3, 1
  store i64 %4, i64* @cas_id, align 8
  store i64 %4, i64* %1, align 8
  %5 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @cas_id_lock) #14
  %6 = load i64, i64* %1, align 8
  ret i64 %6
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @set_cas_id(i64 %0) #0 {
  %2 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  %3 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @cas_id_lock) #14
  %4 = load i64, i64* %2, align 8
  store i64 %4, i64* @cas_id, align 8
  %5 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @cas_id_lock) #14
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @item_is_flushed(%struct._stritem* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct._stritem*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  store %struct._stritem* %0, %struct._stritem** %3, align 8
  %7 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 6), align 4
  store i32 %7, i32* %4, align 4
  %8 = load %struct._stritem*, %struct._stritem** %3, align 8
  %9 = getelementptr inbounds %struct._stritem, %struct._stritem* %8, i32 0, i32 7
  %10 = load i16, i16* %9, align 2
  %11 = zext i16 %10 to i32
  %12 = and i32 %11, 2
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %14, label %20

14:                                               ; preds = %1
  %15 = load %struct._stritem*, %struct._stritem** %3, align 8
  %16 = getelementptr inbounds %struct._stritem, %struct._stritem* %15, i32 0, i32 10
  %17 = getelementptr inbounds [0 x %union.anon.10], [0 x %union.anon.10]* %16, i64 0, i64 0
  %18 = bitcast %union.anon.10* %17 to i64*
  %19 = load i64, i64* %18, align 8
  br label %21

20:                                               ; preds = %1
  br label %21

21:                                               ; preds = %20, %14
  %22 = phi i64 [ %19, %14 ], [ 0, %20 ]
  store i64 %22, i64* %5, align 8
  %23 = load i64, i64* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 7), align 8
  store i64 %23, i64* %6, align 8
  %24 = load i32, i32* %4, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %30, label %26

26:                                               ; preds = %21
  %27 = load i32, i32* %4, align 4
  %28 = load volatile i32, i32* @current_time, align 4
  %29 = icmp ugt i32 %27, %28
  br i1 %29, label %30, label %31

30:                                               ; preds = %26, %21
  store i32 0, i32* %2, align 4
  br label %49

31:                                               ; preds = %26
  %32 = load %struct._stritem*, %struct._stritem** %3, align 8
  %33 = getelementptr inbounds %struct._stritem, %struct._stritem* %32, i32 0, i32 3
  %34 = load i32, i32* %33, align 8
  %35 = load i32, i32* %4, align 4
  %36 = icmp ule i32 %34, %35
  br i1 %36, label %47, label %37

37:                                               ; preds = %31
  %38 = load i64, i64* %6, align 8
  %39 = icmp ne i64 %38, 0
  br i1 %39, label %40, label %48

40:                                               ; preds = %37
  %41 = load i64, i64* %5, align 8
  %42 = icmp ne i64 %41, 0
  br i1 %42, label %43, label %48

43:                                               ; preds = %40
  %44 = load i64, i64* %5, align 8
  %45 = load i64, i64* %6, align 8
  %46 = icmp ult i64 %44, %45
  br i1 %46, label %47, label %48

47:                                               ; preds = %43, %31
  store i32 1, i32* %2, align 4
  br label %49

48:                                               ; preds = %43, %40, %37
  store i32 0, i32* %2, align 4
  br label %49

49:                                               ; preds = %48, %47, %30
  %50 = load i32, i32* %2, align 4
  ret i32 %50
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @do_get_lru_size(i32 %0) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = zext i32 %3 to i64
  %5 = getelementptr inbounds [256 x i32], [256 x i32]* @sizes, i64 0, i64 %4
  %6 = load i32, i32* %5, align 4
  ret i32 %6
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct._stritem* @do_item_alloc_pull(i64 %0, i32 %1) #0 {
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct._stritem*, align 8
  %6 = alloca i32, align 4
  store i64 %0, i64* %3, align 8
  store i32 %1, i32* %4, align 4
  store %struct._stritem* null, %struct._stritem** %5, align 8
  store i32 0, i32* %6, align 4
  br label %7

7:                                                ; preds = %38, %2
  %8 = load i32, i32* %6, align 4
  %9 = icmp slt i32 %8, 10
  br i1 %9, label %10, label %41

10:                                               ; preds = %7
  %11 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 30), align 8
  %12 = trunc i8 %11 to i1
  br i1 %12, label %16, label %13

13:                                               ; preds = %10
  %14 = load i32, i32* %4, align 4
  %15 = call i32 @lru_pull_tail(i32 %14, i32 128, i64 0, i8 zeroext 0, i32 0, %struct.lru_pull_tail_return* null)
  br label %16

16:                                               ; preds = %13, %10
  %17 = load i64, i64* %3, align 8
  %18 = load i32, i32* %4, align 4
  %19 = call i8* @slabs_alloc(i64 %17, i32 %18, i32 0)
  %20 = bitcast i8* %19 to %struct._stritem*
  store %struct._stritem* %20, %struct._stritem** %5, align 8
  %21 = load %struct._stritem*, %struct._stritem** %5, align 8
  %22 = icmp eq %struct._stritem* %21, null
  br i1 %22, label %23, label %36

23:                                               ; preds = %16
  %24 = load i32, i32* %4, align 4
  %25 = call i32 @lru_pull_tail(i32 %24, i32 128, i64 0, i8 zeroext 1, i32 0, %struct.lru_pull_tail_return* null)
  %26 = icmp sle i32 %25, 0
  br i1 %26, label %27, label %35

27:                                               ; preds = %23
  %28 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 30), align 8
  %29 = trunc i8 %28 to i1
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = load i32, i32* %4, align 4
  %32 = call i32 @lru_pull_tail(i32 %31, i32 0, i64 0, i8 zeroext 0, i32 0, %struct.lru_pull_tail_return* null)
  br label %34

33:                                               ; preds = %27
  br label %41

34:                                               ; preds = %30
  br label %35

35:                                               ; preds = %34, %23
  br label %37

36:                                               ; preds = %16
  br label %41

37:                                               ; preds = %35
  br label %38

38:                                               ; preds = %37
  %39 = load i32, i32* %6, align 4
  %40 = add nsw i32 %39, 1
  store i32 %40, i32* %6, align 4
  br label %7, !llvm.loop !68

41:                                               ; preds = %36, %33, %7
  %42 = load i32, i32* %6, align 4
  %43 = icmp sgt i32 %42, 0
  br i1 %43, label %44, label %61

44:                                               ; preds = %41
  %45 = load i32, i32* %4, align 4
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds [256 x %union.pthread_mutex_t], [256 x %union.pthread_mutex_t]* @lru_locks, i64 0, i64 %46
  %48 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %47) #14
  %49 = load i32, i32* %6, align 4
  %50 = sext i32 %49 to i64
  %51 = load i32, i32* %4, align 4
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds [256 x %struct.itemstats_t], [256 x %struct.itemstats_t]* @itemstats, i64 0, i64 %52
  %54 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %53, i32 0, i32 14
  %55 = load i64, i64* %54, align 8
  %56 = add i64 %55, %50
  store i64 %56, i64* %54, align 8
  %57 = load i32, i32* %4, align 4
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds [256 x %union.pthread_mutex_t], [256 x %union.pthread_mutex_t]* @lru_locks, i64 0, i64 %58
  %60 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %59) #14
  br label %61

61:                                               ; preds = %44, %41
  %62 = load %struct._stritem*, %struct._stritem** %5, align 8
  ret %struct._stritem* %62
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @lru_pull_tail(i32 %0, i32 %1, i64 %2, i8 zeroext %3, i32 %4, %struct.lru_pull_tail_return* %5) #0 {
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i64, align 8
  %11 = alloca i8, align 1
  %12 = alloca i32, align 4
  %13 = alloca %struct.lru_pull_tail_return*, align 8
  %14 = alloca %struct._stritem*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca %struct._stritem*, align 8
  %19 = alloca %struct._stritem*, align 8
  %20 = alloca i8*, align 8
  %21 = alloca i32, align 4
  %22 = alloca i64, align 8
  %23 = alloca i32, align 4
  %24 = alloca %struct._logger*, align 8
  store i32 %0, i32* %8, align 4
  store i32 %1, i32* %9, align 4
  store i64 %2, i64* %10, align 8
  store i8 %3, i8* %11, align 1
  store i32 %4, i32* %12, align 4
  store %struct.lru_pull_tail_return* %5, %struct.lru_pull_tail_return** %13, align 8
  store %struct._stritem* null, %struct._stritem** %14, align 8
  %25 = load i32, i32* %8, align 4
  store i32 %25, i32* %15, align 4
  store i32 0, i32* %16, align 4
  %26 = load i32, i32* %15, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %6
  store i32 0, i32* %7, align 4
  br label %465

29:                                               ; preds = %6
  store i32 5, i32* %17, align 4
  store i8* null, i8** %20, align 8
  store i32 0, i32* %21, align 4
  store i64 0, i64* %22, align 8
  %30 = load i32, i32* %9, align 4
  %31 = load i32, i32* %15, align 4
  %32 = or i32 %31, %30
  store i32 %32, i32* %15, align 4
  %33 = load i32, i32* %15, align 4
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [256 x %union.pthread_mutex_t], [256 x %union.pthread_mutex_t]* @lru_locks, i64 0, i64 %34
  %36 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %35) #14
  %37 = load i32, i32* %15, align 4
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds [256 x %struct._stritem*], [256 x %struct._stritem*]* @tails, i64 0, i64 %38
  %40 = load %struct._stritem*, %struct._stritem** %39, align 8
  store %struct._stritem* %40, %struct._stritem** %18, align 8
  br label %41

41:                                               ; preds = %423, %29
  %42 = load i32, i32* %17, align 4
  %43 = icmp sgt i32 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %41
  %45 = load %struct._stritem*, %struct._stritem** %18, align 8
  %46 = icmp ne %struct._stritem* %45, null
  br label %47

47:                                               ; preds = %44, %41
  %48 = phi i1 [ false, %41 ], [ %46, %44 ]
  br i1 %48, label %49, label %427

49:                                               ; preds = %47
  %50 = load %struct._stritem*, %struct._stritem** %18, align 8
  %51 = getelementptr inbounds %struct._stritem, %struct._stritem* %50, i32 0, i32 1
  %52 = load %struct._stritem*, %struct._stritem** %51, align 8
  store %struct._stritem* %52, %struct._stritem** %19, align 8
  %53 = load %struct._stritem*, %struct._stritem** %18, align 8
  %54 = getelementptr inbounds %struct._stritem, %struct._stritem* %53, i32 0, i32 5
  %55 = load i32, i32* %54, align 8
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %82

57:                                               ; preds = %49
  %58 = load %struct._stritem*, %struct._stritem** %18, align 8
  %59 = getelementptr inbounds %struct._stritem, %struct._stritem* %58, i32 0, i32 9
  %60 = load i8, i8* %59, align 1
  %61 = zext i8 %60 to i32
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %82

63:                                               ; preds = %57
  %64 = load %struct._stritem*, %struct._stritem** %18, align 8
  %65 = getelementptr inbounds %struct._stritem, %struct._stritem* %64, i32 0, i32 7
  %66 = load i16, i16* %65, align 2
  %67 = zext i16 %66 to i32
  %68 = icmp eq i32 %67, 1
  br i1 %68, label %69, label %82

69:                                               ; preds = %63
  %70 = load i8, i8* %11, align 1
  %71 = zext i8 %70 to i32
  %72 = and i32 %71, 2
  %73 = icmp ne i32 %72, 0
  br i1 %73, label %74, label %79

74:                                               ; preds = %69
  %75 = load i32, i32* %15, align 4
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds [256 x %union.pthread_mutex_t], [256 x %union.pthread_mutex_t]* @lru_locks, i64 0, i64 %76
  %78 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %77) #14
  store i32 0, i32* %7, align 4
  br label %465

79:                                               ; preds = %69
  %80 = load i32, i32* %17, align 4
  %81 = add nsw i32 %80, 1
  store i32 %81, i32* %17, align 4
  br label %423

82:                                               ; preds = %63, %57, %49
  %83 = load i32 (i8*, i64)*, i32 (i8*, i64)** @hash, align 8
  %84 = load %struct._stritem*, %struct._stritem** %18, align 8
  %85 = getelementptr inbounds %struct._stritem, %struct._stritem* %84, i32 0, i32 10
  %86 = bitcast [0 x %union.anon.10]* %85 to i8*
  %87 = load %struct._stritem*, %struct._stritem** %18, align 8
  %88 = getelementptr inbounds %struct._stritem, %struct._stritem* %87, i32 0, i32 7
  %89 = load i16, i16* %88, align 2
  %90 = zext i16 %89 to i32
  %91 = and i32 %90, 2
  %92 = icmp ne i32 %91, 0
  %93 = zext i1 %92 to i64
  %94 = select i1 %92, i64 8, i64 0
  %95 = getelementptr inbounds i8, i8* %86, i64 %94
  %96 = load %struct._stritem*, %struct._stritem** %18, align 8
  %97 = getelementptr inbounds %struct._stritem, %struct._stritem* %96, i32 0, i32 9
  %98 = load i8, i8* %97, align 1
  %99 = zext i8 %98 to i64
  %100 = call i32 %83(i8* %95, i64 %99)
  store i32 %100, i32* %23, align 4
  %101 = load i32, i32* %23, align 4
  %102 = call i8* @item_trylock(i32 %101)
  store i8* %102, i8** %20, align 8
  %103 = icmp eq i8* %102, null
  br i1 %103, label %104, label %105

104:                                              ; preds = %82
  br label %423

105:                                              ; preds = %82
  %106 = load %struct._stritem*, %struct._stritem** %18, align 8
  %107 = getelementptr inbounds %struct._stritem, %struct._stritem* %106, i32 0, i32 6
  %108 = load i16, i16* %107, align 4
  %109 = add i16 %108, 1
  store i16 %109, i16* %107, align 4
  %110 = zext i16 %109 to i32
  %111 = icmp ne i32 %110, 2
  br i1 %111, label %112, label %146

112:                                              ; preds = %105
  %113 = load i32, i32* %15, align 4
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds [256 x %struct.itemstats_t], [256 x %struct.itemstats_t]* @itemstats, i64 0, i64 %114
  %116 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %115, i32 0, i32 10
  %117 = load i64, i64* %116, align 8
  %118 = add i64 %117, 1
  store i64 %118, i64* %116, align 8
  %119 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 37), align 4
  %120 = icmp ne i32 %119, 0
  br i1 %120, label %121, label %145

121:                                              ; preds = %112
  %122 = load %struct._stritem*, %struct._stritem** %18, align 8
  %123 = getelementptr inbounds %struct._stritem, %struct._stritem* %122, i32 0, i32 3
  %124 = load i32, i32* %123, align 8
  %125 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 37), align 4
  %126 = add i32 %124, %125
  %127 = load volatile i32, i32* @current_time, align 4
  %128 = icmp ult i32 %126, %127
  br i1 %128, label %129, label %145

129:                                              ; preds = %121
  %130 = load i32, i32* %15, align 4
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds [256 x %struct.itemstats_t], [256 x %struct.itemstats_t]* @itemstats, i64 0, i64 %131
  %133 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %132, i32 0, i32 4
  %134 = load i64, i64* %133, align 8
  %135 = add i64 %134, 1
  store i64 %135, i64* %133, align 8
  %136 = load %struct._stritem*, %struct._stritem** %18, align 8
  %137 = getelementptr inbounds %struct._stritem, %struct._stritem* %136, i32 0, i32 6
  store i16 1, i16* %137, align 4
  br label %138

138:                                              ; preds = %129
  %139 = load i8*, i8** @ext_storage, align 8
  %140 = load %struct._stritem*, %struct._stritem** %18, align 8
  call void @storage_delete(i8* %139, %struct._stritem* %140)
  br label %141

141:                                              ; preds = %138
  %142 = load %struct._stritem*, %struct._stritem** %18, align 8
  %143 = load i32, i32* %23, align 4
  call void @do_item_unlink_nolock(%struct._stritem* %142, i32 %143)
  %144 = load i8*, i8** %20, align 8
  call void @item_trylock_unlock(i8* %144)
  br label %423

145:                                              ; preds = %121, %112
  br label %146

146:                                              ; preds = %145, %105
  %147 = load %struct._stritem*, %struct._stritem** %18, align 8
  %148 = getelementptr inbounds %struct._stritem, %struct._stritem* %147, i32 0, i32 4
  %149 = load i32, i32* %148, align 4
  %150 = icmp ne i32 %149, 0
  br i1 %150, label %151, label %157

151:                                              ; preds = %146
  %152 = load %struct._stritem*, %struct._stritem** %18, align 8
  %153 = getelementptr inbounds %struct._stritem, %struct._stritem* %152, i32 0, i32 4
  %154 = load i32, i32* %153, align 4
  %155 = load volatile i32, i32* @current_time, align 4
  %156 = icmp ult i32 %154, %155
  br i1 %156, label %161, label %157

157:                                              ; preds = %151, %146
  %158 = load %struct._stritem*, %struct._stritem** %18, align 8
  %159 = call i32 @item_is_flushed(%struct._stritem* %158)
  %160 = icmp ne i32 %159, 0
  br i1 %160, label %161, label %192

161:                                              ; preds = %157, %151
  %162 = load i32, i32* %15, align 4
  %163 = sext i32 %162 to i64
  %164 = getelementptr inbounds [256 x %struct.itemstats_t], [256 x %struct.itemstats_t]* @itemstats, i64 0, i64 %163
  %165 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %164, i32 0, i32 2
  %166 = load i64, i64* %165, align 8
  %167 = add i64 %166, 1
  store i64 %167, i64* %165, align 8
  %168 = load %struct._stritem*, %struct._stritem** %18, align 8
  %169 = getelementptr inbounds %struct._stritem, %struct._stritem* %168, i32 0, i32 7
  %170 = load i16, i16* %169, align 2
  %171 = zext i16 %170 to i32
  %172 = and i32 %171, 8
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %174, label %181

174:                                              ; preds = %161
  %175 = load i32, i32* %15, align 4
  %176 = sext i32 %175 to i64
  %177 = getelementptr inbounds [256 x %struct.itemstats_t], [256 x %struct.itemstats_t]* @itemstats, i64 0, i64 %176
  %178 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %177, i32 0, i32 5
  %179 = load i64, i64* %178, align 8
  %180 = add i64 %179, 1
  store i64 %180, i64* %178, align 8
  br label %181

181:                                              ; preds = %174, %161
  %182 = load %struct._stritem*, %struct._stritem** %18, align 8
  %183 = load i32, i32* %23, align 4
  call void @do_item_unlink_nolock(%struct._stritem* %182, i32 %183)
  br label %184

184:                                              ; preds = %181
  %185 = load i8*, i8** @ext_storage, align 8
  %186 = load %struct._stritem*, %struct._stritem** %18, align 8
  call void @storage_delete(i8* %185, %struct._stritem* %186)
  br label %187

187:                                              ; preds = %184
  %188 = load %struct._stritem*, %struct._stritem** %18, align 8
  call void @do_item_remove(%struct._stritem* %188)
  %189 = load i8*, i8** %20, align 8
  call void @item_trylock_unlock(i8* %189)
  %190 = load i32, i32* %16, align 4
  %191 = add nsw i32 %190, 1
  store i32 %191, i32* %16, align 4
  br label %423

192:                                              ; preds = %157
  %193 = load i32, i32* %9, align 4
  switch i32 %193, label %418 [
    i32 0, label %194
    i32 64, label %200
    i32 128, label %278
    i32 192, label %416
  ]

194:                                              ; preds = %192
  %195 = load i64, i64* %10, align 8
  %196 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 43), align 8
  %197 = sext i32 %196 to i64
  %198 = mul i64 %195, %197
  %199 = udiv i64 %198, 100
  store i64 %199, i64* %22, align 8
  br label %200

200:                                              ; preds = %192, %194
  %201 = load i64, i64* %22, align 8
  %202 = icmp eq i64 %201, 0
  br i1 %202, label %203, label %209

203:                                              ; preds = %200
  %204 = load i64, i64* %10, align 8
  %205 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 44), align 4
  %206 = sext i32 %205 to i64
  %207 = mul i64 %204, %206
  %208 = udiv i64 %207, 100
  store i64 %208, i64* %22, align 8
  br label %209

209:                                              ; preds = %203, %200
  %210 = load %struct._stritem*, %struct._stritem** %18, align 8
  %211 = getelementptr inbounds %struct._stritem, %struct._stritem* %210, i32 0, i32 7
  %212 = load i16, i16* %211, align 2
  %213 = zext i16 %212 to i32
  %214 = and i32 %213, 16
  %215 = icmp ne i32 %214, 0
  br i1 %215, label %216, label %248

216:                                              ; preds = %209
  %217 = load %struct._stritem*, %struct._stritem** %18, align 8
  %218 = getelementptr inbounds %struct._stritem, %struct._stritem* %217, i32 0, i32 7
  %219 = load i16, i16* %218, align 2
  %220 = zext i16 %219 to i32
  %221 = and i32 %220, -17
  %222 = trunc i32 %221 to i16
  store i16 %222, i16* %218, align 2
  %223 = load i32, i32* %16, align 4
  %224 = add nsw i32 %223, 1
  store i32 %224, i32* %16, align 4
  %225 = load i32, i32* %9, align 4
  %226 = icmp eq i32 %225, 64
  br i1 %226, label %227, label %238

227:                                              ; preds = %216
  %228 = load i32, i32* %15, align 4
  %229 = sext i32 %228 to i64
  %230 = getelementptr inbounds [256 x %struct.itemstats_t], [256 x %struct.itemstats_t]* @itemstats, i64 0, i64 %229
  %231 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %230, i32 0, i32 13
  %232 = load i64, i64* %231, align 8
  %233 = add i64 %232, 1
  store i64 %233, i64* %231, align 8
  %234 = load %struct._stritem*, %struct._stritem** %18, align 8
  call void @do_item_unlink_q(%struct._stritem* %234)
  %235 = load %struct._stritem*, %struct._stritem** %18, align 8
  call void @do_item_link_q(%struct._stritem* %235)
  %236 = load %struct._stritem*, %struct._stritem** %18, align 8
  call void @do_item_remove(%struct._stritem* %236)
  %237 = load i8*, i8** %20, align 8
  call void @item_trylock_unlock(i8* %237)
  br label %247

238:                                              ; preds = %216
  %239 = load i32, i32* %15, align 4
  %240 = sext i32 %239 to i64
  %241 = getelementptr inbounds [256 x %struct.itemstats_t], [256 x %struct.itemstats_t]* @itemstats, i64 0, i64 %240
  %242 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %241, i32 0, i32 12
  %243 = load i64, i64* %242, align 8
  %244 = add i64 %243, 1
  store i64 %244, i64* %242, align 8
  store i32 64, i32* %21, align 4
  %245 = load %struct._stritem*, %struct._stritem** %18, align 8
  call void @do_item_unlink_q(%struct._stritem* %245)
  %246 = load %struct._stritem*, %struct._stritem** %18, align 8
  store %struct._stritem* %246, %struct._stritem** %14, align 8
  br label %247

247:                                              ; preds = %238, %227
  br label %277

248:                                              ; preds = %209
  %249 = load i32, i32* %15, align 4
  %250 = sext i32 %249 to i64
  %251 = getelementptr inbounds [256 x i64], [256 x i64]* @sizes_bytes, i64 0, i64 %250
  %252 = load i64, i64* %251, align 8
  %253 = load i64, i64* %22, align 8
  %254 = icmp ugt i64 %252, %253
  br i1 %254, label %263, label %255

255:                                              ; preds = %248
  %256 = load volatile i32, i32* @current_time, align 4
  %257 = load %struct._stritem*, %struct._stritem** %18, align 8
  %258 = getelementptr inbounds %struct._stritem, %struct._stritem* %257, i32 0, i32 3
  %259 = load i32, i32* %258, align 8
  %260 = sub i32 %256, %259
  %261 = load i32, i32* %12, align 4
  %262 = icmp ugt i32 %260, %261
  br i1 %262, label %263, label %274

263:                                              ; preds = %255, %248
  %264 = load i32, i32* %15, align 4
  %265 = sext i32 %264 to i64
  %266 = getelementptr inbounds [256 x %struct.itemstats_t], [256 x %struct.itemstats_t]* @itemstats, i64 0, i64 %265
  %267 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %266, i32 0, i32 11
  %268 = load i64, i64* %267, align 8
  %269 = add i64 %268, 1
  store i64 %269, i64* %267, align 8
  store i32 128, i32* %21, align 4
  %270 = load %struct._stritem*, %struct._stritem** %18, align 8
  call void @do_item_unlink_q(%struct._stritem* %270)
  %271 = load %struct._stritem*, %struct._stritem** %18, align 8
  store %struct._stritem* %271, %struct._stritem** %14, align 8
  %272 = load i32, i32* %16, align 4
  %273 = add nsw i32 %272, 1
  store i32 %273, i32* %16, align 4
  br label %418

274:                                              ; preds = %255
  %275 = load %struct._stritem*, %struct._stritem** %18, align 8
  store %struct._stritem* %275, %struct._stritem** %14, align 8
  br label %276

276:                                              ; preds = %274
  br label %277

277:                                              ; preds = %276, %247
  br label %418

278:                                              ; preds = %192
  %279 = load %struct._stritem*, %struct._stritem** %18, align 8
  store %struct._stritem* %279, %struct._stritem** %14, align 8
  %280 = load i8, i8* %11, align 1
  %281 = zext i8 %280 to i32
  %282 = and i32 %281, 1
  %283 = icmp ne i32 %282, 0
  br i1 %283, label %284, label %375

284:                                              ; preds = %278
  %285 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 8), align 8
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %287, label %288

287:                                              ; preds = %284
  br label %418

288:                                              ; preds = %284
  %289 = load i32, i32* %15, align 4
  %290 = sext i32 %289 to i64
  %291 = getelementptr inbounds [256 x %struct.itemstats_t], [256 x %struct.itemstats_t]* @itemstats, i64 0, i64 %290
  %292 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %291, i32 0, i32 0
  %293 = load i64, i64* %292, align 8
  %294 = add i64 %293, 1
  store i64 %294, i64* %292, align 8
  %295 = load volatile i32, i32* @current_time, align 4
  %296 = load %struct._stritem*, %struct._stritem** %18, align 8
  %297 = getelementptr inbounds %struct._stritem, %struct._stritem* %296, i32 0, i32 3
  %298 = load i32, i32* %297, align 8
  %299 = sub i32 %295, %298
  %300 = load i32, i32* %15, align 4
  %301 = sext i32 %300 to i64
  %302 = getelementptr inbounds [256 x %struct.itemstats_t], [256 x %struct.itemstats_t]* @itemstats, i64 0, i64 %301
  %303 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %302, i32 0, i32 20
  store i32 %299, i32* %303, align 8
  %304 = load %struct._stritem*, %struct._stritem** %18, align 8
  %305 = getelementptr inbounds %struct._stritem, %struct._stritem* %304, i32 0, i32 4
  %306 = load i32, i32* %305, align 4
  %307 = icmp ne i32 %306, 0
  br i1 %307, label %308, label %315

308:                                              ; preds = %288
  %309 = load i32, i32* %15, align 4
  %310 = sext i32 %309 to i64
  %311 = getelementptr inbounds [256 x %struct.itemstats_t], [256 x %struct.itemstats_t]* @itemstats, i64 0, i64 %310
  %312 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %311, i32 0, i32 1
  %313 = load i64, i64* %312, align 8
  %314 = add i64 %313, 1
  store i64 %314, i64* %312, align 8
  br label %315

315:                                              ; preds = %308, %288
  %316 = load %struct._stritem*, %struct._stritem** %18, align 8
  %317 = getelementptr inbounds %struct._stritem, %struct._stritem* %316, i32 0, i32 7
  %318 = load i16, i16* %317, align 2
  %319 = zext i16 %318 to i32
  %320 = and i32 %319, 8
  %321 = icmp eq i32 %320, 0
  br i1 %321, label %322, label %329

322:                                              ; preds = %315
  %323 = load i32, i32* %15, align 4
  %324 = sext i32 %323 to i64
  %325 = getelementptr inbounds [256 x %struct.itemstats_t], [256 x %struct.itemstats_t]* @itemstats, i64 0, i64 %324
  %326 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %325, i32 0, i32 6
  %327 = load i64, i64* %326, align 8
  %328 = add i64 %327, 1
  store i64 %328, i64* %326, align 8
  br label %329

329:                                              ; preds = %322, %315
  %330 = load %struct._stritem*, %struct._stritem** %18, align 8
  %331 = getelementptr inbounds %struct._stritem, %struct._stritem* %330, i32 0, i32 7
  %332 = load i16, i16* %331, align 2
  %333 = zext i16 %332 to i32
  %334 = and i32 %333, 16
  %335 = icmp ne i32 %334, 0
  br i1 %335, label %336, label %343

336:                                              ; preds = %329
  %337 = load i32, i32* %15, align 4
  %338 = sext i32 %337 to i64
  %339 = getelementptr inbounds [256 x %struct.itemstats_t], [256 x %struct.itemstats_t]* @itemstats, i64 0, i64 %338
  %340 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %339, i32 0, i32 7
  %341 = load i64, i64* %340, align 8
  %342 = add i64 %341, 1
  store i64 %342, i64* %340, align 8
  br label %343

343:                                              ; preds = %336, %329
  br label %344

344:                                              ; preds = %343
  store %struct._logger* null, %struct._logger** %24, align 8
  %345 = load i32, i32* @logger_key, align 4
  %346 = call i8* @pthread_getspecific(i32 %345) #14
  %347 = bitcast i8* %346 to %struct._logger*
  store %struct._logger* %347, %struct._logger** %24, align 8
  %348 = load %struct._logger*, %struct._logger** %24, align 8
  %349 = getelementptr inbounds %struct._logger, %struct._logger* %348, i32 0, i32 8
  %350 = load i16, i16* %349, align 4
  %351 = zext i16 %350 to i32
  %352 = and i32 %351, 64
  %353 = icmp ne i32 %352, 0
  br i1 %353, label %354, label %359

354:                                              ; preds = %344
  %355 = load %struct._logger*, %struct._logger** %24, align 8
  %356 = load %struct._stritem*, %struct._stritem** %18, align 8
  %357 = bitcast %struct._stritem* %356 to i8*
  %358 = call i32 (%struct._logger*, i32, i8*, ...) @logger_log(%struct._logger* %355, i32 1, i8* %357)
  br label %359

359:                                              ; preds = %354, %344
  br label %360

360:                                              ; preds = %359
  br label %361

361:                                              ; preds = %360
  %362 = load i8*, i8** @ext_storage, align 8
  %363 = load %struct._stritem*, %struct._stritem** %18, align 8
  call void @storage_delete(i8* %362, %struct._stritem* %363)
  br label %364

364:                                              ; preds = %361
  %365 = load %struct._stritem*, %struct._stritem** %18, align 8
  %366 = load i32, i32* %23, align 4
  call void @do_item_unlink_nolock(%struct._stritem* %365, i32 %366)
  %367 = load i32, i32* %16, align 4
  %368 = add nsw i32 %367, 1
  store i32 %368, i32* %16, align 4
  %369 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 32), align 4
  %370 = icmp eq i32 %369, 2
  br i1 %370, label %371, label %374

371:                                              ; preds = %364
  %372 = load i32, i32* %8, align 4
  %373 = call i32 @slabs_reassign(i32 -1, i32 %372)
  br label %374

374:                                              ; preds = %371, %364
  br label %415

375:                                              ; preds = %278
  %376 = load i8, i8* %11, align 1
  %377 = zext i8 %376 to i32
  %378 = and i32 %377, 4
  %379 = icmp ne i32 %378, 0
  br i1 %379, label %380, label %387

380:                                              ; preds = %375
  %381 = load %struct._stritem*, %struct._stritem** %14, align 8
  %382 = load %struct.lru_pull_tail_return*, %struct.lru_pull_tail_return** %13, align 8
  %383 = getelementptr inbounds %struct.lru_pull_tail_return, %struct.lru_pull_tail_return* %382, i32 0, i32 0
  store %struct._stritem* %381, %struct._stritem** %383, align 8
  %384 = load i32, i32* %23, align 4
  %385 = load %struct.lru_pull_tail_return*, %struct.lru_pull_tail_return** %13, align 8
  %386 = getelementptr inbounds %struct.lru_pull_tail_return, %struct.lru_pull_tail_return* %385, i32 0, i32 1
  store i32 %384, i32* %386, align 8
  br label %414

387:                                              ; preds = %375
  %388 = load %struct._stritem*, %struct._stritem** %18, align 8
  %389 = getelementptr inbounds %struct._stritem, %struct._stritem* %388, i32 0, i32 7
  %390 = load i16, i16* %389, align 2
  %391 = zext i16 %390 to i32
  %392 = and i32 %391, 16
  %393 = icmp ne i32 %392, 0
  br i1 %393, label %394, label %413

394:                                              ; preds = %387
  %395 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 30), align 8
  %396 = trunc i8 %395 to i1
  br i1 %396, label %397, label %413

397:                                              ; preds = %394
  %398 = load i32, i32* %15, align 4
  %399 = sext i32 %398 to i64
  %400 = getelementptr inbounds [256 x %struct.itemstats_t], [256 x %struct.itemstats_t]* @itemstats, i64 0, i64 %399
  %401 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %400, i32 0, i32 12
  %402 = load i64, i64* %401, align 8
  %403 = add i64 %402, 1
  store i64 %403, i64* %401, align 8
  %404 = load %struct._stritem*, %struct._stritem** %18, align 8
  %405 = getelementptr inbounds %struct._stritem, %struct._stritem* %404, i32 0, i32 7
  %406 = load i16, i16* %405, align 2
  %407 = zext i16 %406 to i32
  %408 = and i32 %407, -17
  %409 = trunc i32 %408 to i16
  store i16 %409, i16* %405, align 2
  store i32 64, i32* %21, align 4
  %410 = load %struct._stritem*, %struct._stritem** %18, align 8
  call void @do_item_unlink_q(%struct._stritem* %410)
  %411 = load i32, i32* %16, align 4
  %412 = add nsw i32 %411, 1
  store i32 %412, i32* %16, align 4
  br label %413

413:                                              ; preds = %397, %394, %387
  br label %414

414:                                              ; preds = %413, %380
  br label %415

415:                                              ; preds = %414, %374
  br label %418

416:                                              ; preds = %192
  %417 = load %struct._stritem*, %struct._stritem** %18, align 8
  store %struct._stritem* %417, %struct._stritem** %14, align 8
  br label %418

418:                                              ; preds = %192, %416, %415, %287, %277, %263
  %419 = load %struct._stritem*, %struct._stritem** %14, align 8
  %420 = icmp ne %struct._stritem* %419, null
  br i1 %420, label %421, label %422

421:                                              ; preds = %418
  br label %427

422:                                              ; preds = %418
  br label %423

423:                                              ; preds = %422, %187, %141, %104, %79
  %424 = load i32, i32* %17, align 4
  %425 = add nsw i32 %424, -1
  store i32 %425, i32* %17, align 4
  %426 = load %struct._stritem*, %struct._stritem** %19, align 8
  store %struct._stritem* %426, %struct._stritem** %18, align 8
  br label %41, !llvm.loop !69

427:                                              ; preds = %421, %47
  %428 = load i32, i32* %15, align 4
  %429 = sext i32 %428 to i64
  %430 = getelementptr inbounds [256 x %union.pthread_mutex_t], [256 x %union.pthread_mutex_t]* @lru_locks, i64 0, i64 %429
  %431 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %430) #14
  %432 = load %struct._stritem*, %struct._stritem** %14, align 8
  %433 = icmp ne %struct._stritem* %432, null
  br i1 %433, label %434, label %463

434:                                              ; preds = %427
  %435 = load i32, i32* %21, align 4
  %436 = icmp ne i32 %435, 0
  br i1 %436, label %437, label %454

437:                                              ; preds = %434
  %438 = load %struct._stritem*, %struct._stritem** %14, align 8
  %439 = getelementptr inbounds %struct._stritem, %struct._stritem* %438, i32 0, i32 8
  %440 = load i8, i8* %439, align 8
  %441 = zext i8 %440 to i32
  %442 = and i32 %441, -193
  %443 = trunc i32 %442 to i8
  %444 = load %struct._stritem*, %struct._stritem** %14, align 8
  %445 = getelementptr inbounds %struct._stritem, %struct._stritem* %444, i32 0, i32 8
  store i8 %443, i8* %445, align 8
  %446 = load i32, i32* %21, align 4
  %447 = load %struct._stritem*, %struct._stritem** %14, align 8
  %448 = getelementptr inbounds %struct._stritem, %struct._stritem* %447, i32 0, i32 8
  %449 = load i8, i8* %448, align 8
  %450 = zext i8 %449 to i32
  %451 = or i32 %450, %446
  %452 = trunc i32 %451 to i8
  store i8 %452, i8* %448, align 8
  %453 = load %struct._stritem*, %struct._stritem** %14, align 8
  call void @item_link_q(%struct._stritem* %453)
  br label %454

454:                                              ; preds = %437, %434
  %455 = load i8, i8* %11, align 1
  %456 = zext i8 %455 to i32
  %457 = and i32 %456, 4
  %458 = icmp eq i32 %457, 0
  br i1 %458, label %459, label %462

459:                                              ; preds = %454
  %460 = load %struct._stritem*, %struct._stritem** %14, align 8
  call void @do_item_remove(%struct._stritem* %460)
  %461 = load i8*, i8** %20, align 8
  call void @item_trylock_unlock(i8* %461)
  br label %462

462:                                              ; preds = %459, %454
  br label %463

463:                                              ; preds = %462, %427
  %464 = load i32, i32* %16, align 4
  store i32 %464, i32* %7, align 4
  br label %465

465:                                              ; preds = %463, %74, %28
  %466 = load i32, i32* %7, align 4
  ret i32 %466
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @do_item_unlink_nolock(%struct._stritem* %0, i32 %1) #0 {
  %3 = alloca %struct._stritem*, align 8
  %4 = alloca i32, align 4
  store %struct._stritem* %0, %struct._stritem** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %struct._stritem*, %struct._stritem** %3, align 8
  %6 = getelementptr inbounds %struct._stritem, %struct._stritem* %5, i32 0, i32 7
  %7 = load i16, i16* %6, align 2
  %8 = zext i16 %7 to i32
  %9 = and i32 %8, 1
  %10 = icmp ne i32 %9, 0
  br i1 %10, label %11, label %71

11:                                               ; preds = %2
  %12 = load %struct._stritem*, %struct._stritem** %3, align 8
  %13 = getelementptr inbounds %struct._stritem, %struct._stritem* %12, i32 0, i32 7
  %14 = load i16, i16* %13, align 2
  %15 = zext i16 %14 to i32
  %16 = and i32 %15, -2
  %17 = trunc i32 %16 to i16
  store i16 %17, i16* %13, align 2
  call void @STATS_LOCK()
  %18 = load %struct._stritem*, %struct._stritem** %3, align 8
  %19 = getelementptr inbounds %struct._stritem, %struct._stritem* %18, i32 0, i32 9
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i64
  %22 = add i64 48, %21
  %23 = add i64 %22, 1
  %24 = load %struct._stritem*, %struct._stritem** %3, align 8
  %25 = getelementptr inbounds %struct._stritem, %struct._stritem* %24, i32 0, i32 5
  %26 = load i32, i32* %25, align 8
  %27 = sext i32 %26 to i64
  %28 = add i64 %23, %27
  %29 = load %struct._stritem*, %struct._stritem** %3, align 8
  %30 = getelementptr inbounds %struct._stritem, %struct._stritem* %29, i32 0, i32 7
  %31 = load i16, i16* %30, align 2
  %32 = zext i16 %31 to i32
  %33 = and i32 %32, 256
  %34 = icmp ne i32 %33, 0
  %35 = zext i1 %34 to i64
  %36 = select i1 %34, i64 4, i64 0
  %37 = add i64 %28, %36
  %38 = load %struct._stritem*, %struct._stritem** %3, align 8
  %39 = getelementptr inbounds %struct._stritem, %struct._stritem* %38, i32 0, i32 7
  %40 = load i16, i16* %39, align 2
  %41 = zext i16 %40 to i32
  %42 = and i32 %41, 2
  %43 = icmp ne i32 %42, 0
  %44 = zext i1 %43 to i64
  %45 = select i1 %43, i64 8, i64 0
  %46 = add i64 %37, %45
  %47 = load i64, i64* getelementptr inbounds (%struct.stats_state, %struct.stats_state* @stats_state, i32 0, i32 1), align 8
  %48 = sub i64 %47, %46
  store i64 %48, i64* getelementptr inbounds (%struct.stats_state, %struct.stats_state* @stats_state, i32 0, i32 1), align 8
  %49 = load i64, i64* getelementptr inbounds (%struct.stats_state, %struct.stats_state* @stats_state, i32 0, i32 0), align 8
  %50 = sub i64 %49, 1
  store i64 %50, i64* getelementptr inbounds (%struct.stats_state, %struct.stats_state* @stats_state, i32 0, i32 0), align 8
  call void @STATS_UNLOCK()
  %51 = load %struct._stritem*, %struct._stritem** %3, align 8
  call void @item_stats_sizes_remove(%struct._stritem* %51)
  %52 = load %struct._stritem*, %struct._stritem** %3, align 8
  %53 = getelementptr inbounds %struct._stritem, %struct._stritem* %52, i32 0, i32 10
  %54 = bitcast [0 x %union.anon.10]* %53 to i8*
  %55 = load %struct._stritem*, %struct._stritem** %3, align 8
  %56 = getelementptr inbounds %struct._stritem, %struct._stritem* %55, i32 0, i32 7
  %57 = load i16, i16* %56, align 2
  %58 = zext i16 %57 to i32
  %59 = and i32 %58, 2
  %60 = icmp ne i32 %59, 0
  %61 = zext i1 %60 to i64
  %62 = select i1 %60, i64 8, i64 0
  %63 = getelementptr inbounds i8, i8* %54, i64 %62
  %64 = load %struct._stritem*, %struct._stritem** %3, align 8
  %65 = getelementptr inbounds %struct._stritem, %struct._stritem* %64, i32 0, i32 9
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %66 to i64
  %68 = load i32, i32* %4, align 4
  call void @assoc_delete(i8* %63, i64 %67, i32 %68)
  %69 = load %struct._stritem*, %struct._stritem** %3, align 8
  call void @do_item_unlink_q(%struct._stritem* %69)
  %70 = load %struct._stritem*, %struct._stritem** %3, align 8
  call void @do_item_remove(%struct._stritem* %70)
  br label %71

71:                                               ; preds = %11, %2
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @do_item_remove(%struct._stritem* %0) #0 {
  %2 = alloca %struct._stritem*, align 8
  store %struct._stritem* %0, %struct._stritem** %2, align 8
  %3 = load %struct._stritem*, %struct._stritem** %2, align 8
  %4 = getelementptr inbounds %struct._stritem, %struct._stritem* %3, i32 0, i32 6
  %5 = load i16, i16* %4, align 4
  %6 = add i16 %5, -1
  store i16 %6, i16* %4, align 4
  %7 = zext i16 %6 to i32
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %11

9:                                                ; preds = %1
  %10 = load %struct._stritem*, %struct._stritem** %2, align 8
  call void @item_free(%struct._stritem* %10)
  br label %11

11:                                               ; preds = %9, %1
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @do_item_unlink_q(%struct._stritem* %0) #0 {
  %2 = alloca %struct._stritem*, align 8
  %3 = alloca %struct._stritem**, align 8
  %4 = alloca %struct._stritem**, align 8
  store %struct._stritem* %0, %struct._stritem** %2, align 8
  %5 = load %struct._stritem*, %struct._stritem** %2, align 8
  %6 = getelementptr inbounds %struct._stritem, %struct._stritem* %5, i32 0, i32 8
  %7 = load i8, i8* %6, align 8
  %8 = zext i8 %7 to i64
  %9 = getelementptr inbounds [256 x %struct._stritem*], [256 x %struct._stritem*]* @heads, i64 0, i64 %8
  store %struct._stritem** %9, %struct._stritem*** %3, align 8
  %10 = load %struct._stritem*, %struct._stritem** %2, align 8
  %11 = getelementptr inbounds %struct._stritem, %struct._stritem* %10, i32 0, i32 8
  %12 = load i8, i8* %11, align 8
  %13 = zext i8 %12 to i64
  %14 = getelementptr inbounds [256 x %struct._stritem*], [256 x %struct._stritem*]* @tails, i64 0, i64 %13
  store %struct._stritem** %14, %struct._stritem*** %4, align 8
  %15 = load %struct._stritem**, %struct._stritem*** %3, align 8
  %16 = load %struct._stritem*, %struct._stritem** %15, align 8
  %17 = load %struct._stritem*, %struct._stritem** %2, align 8
  %18 = icmp eq %struct._stritem* %16, %17
  br i1 %18, label %19, label %24

19:                                               ; preds = %1
  %20 = load %struct._stritem*, %struct._stritem** %2, align 8
  %21 = getelementptr inbounds %struct._stritem, %struct._stritem* %20, i32 0, i32 0
  %22 = load %struct._stritem*, %struct._stritem** %21, align 8
  %23 = load %struct._stritem**, %struct._stritem*** %3, align 8
  store %struct._stritem* %22, %struct._stritem** %23, align 8
  br label %24

24:                                               ; preds = %19, %1
  %25 = load %struct._stritem**, %struct._stritem*** %4, align 8
  %26 = load %struct._stritem*, %struct._stritem** %25, align 8
  %27 = load %struct._stritem*, %struct._stritem** %2, align 8
  %28 = icmp eq %struct._stritem* %26, %27
  br i1 %28, label %29, label %34

29:                                               ; preds = %24
  %30 = load %struct._stritem*, %struct._stritem** %2, align 8
  %31 = getelementptr inbounds %struct._stritem, %struct._stritem* %30, i32 0, i32 1
  %32 = load %struct._stritem*, %struct._stritem** %31, align 8
  %33 = load %struct._stritem**, %struct._stritem*** %4, align 8
  store %struct._stritem* %32, %struct._stritem** %33, align 8
  br label %34

34:                                               ; preds = %29, %24
  %35 = load %struct._stritem*, %struct._stritem** %2, align 8
  %36 = getelementptr inbounds %struct._stritem, %struct._stritem* %35, i32 0, i32 0
  %37 = load %struct._stritem*, %struct._stritem** %36, align 8
  %38 = icmp ne %struct._stritem* %37, null
  br i1 %38, label %39, label %47

39:                                               ; preds = %34
  %40 = load %struct._stritem*, %struct._stritem** %2, align 8
  %41 = getelementptr inbounds %struct._stritem, %struct._stritem* %40, i32 0, i32 1
  %42 = load %struct._stritem*, %struct._stritem** %41, align 8
  %43 = load %struct._stritem*, %struct._stritem** %2, align 8
  %44 = getelementptr inbounds %struct._stritem, %struct._stritem* %43, i32 0, i32 0
  %45 = load %struct._stritem*, %struct._stritem** %44, align 8
  %46 = getelementptr inbounds %struct._stritem, %struct._stritem* %45, i32 0, i32 1
  store %struct._stritem* %42, %struct._stritem** %46, align 8
  br label %47

47:                                               ; preds = %39, %34
  %48 = load %struct._stritem*, %struct._stritem** %2, align 8
  %49 = getelementptr inbounds %struct._stritem, %struct._stritem* %48, i32 0, i32 1
  %50 = load %struct._stritem*, %struct._stritem** %49, align 8
  %51 = icmp ne %struct._stritem* %50, null
  br i1 %51, label %52, label %60

52:                                               ; preds = %47
  %53 = load %struct._stritem*, %struct._stritem** %2, align 8
  %54 = getelementptr inbounds %struct._stritem, %struct._stritem* %53, i32 0, i32 0
  %55 = load %struct._stritem*, %struct._stritem** %54, align 8
  %56 = load %struct._stritem*, %struct._stritem** %2, align 8
  %57 = getelementptr inbounds %struct._stritem, %struct._stritem* %56, i32 0, i32 1
  %58 = load %struct._stritem*, %struct._stritem** %57, align 8
  %59 = getelementptr inbounds %struct._stritem, %struct._stritem* %58, i32 0, i32 0
  store %struct._stritem* %55, %struct._stritem** %59, align 8
  br label %60

60:                                               ; preds = %52, %47
  %61 = load %struct._stritem*, %struct._stritem** %2, align 8
  %62 = getelementptr inbounds %struct._stritem, %struct._stritem* %61, i32 0, i32 8
  %63 = load i8, i8* %62, align 8
  %64 = zext i8 %63 to i64
  %65 = getelementptr inbounds [256 x i32], [256 x i32]* @sizes, i64 0, i64 %64
  %66 = load i32, i32* %65, align 4
  %67 = add i32 %66, -1
  store i32 %67, i32* %65, align 4
  %68 = load %struct._stritem*, %struct._stritem** %2, align 8
  %69 = getelementptr inbounds %struct._stritem, %struct._stritem* %68, i32 0, i32 7
  %70 = load i16, i16* %69, align 2
  %71 = zext i16 %70 to i32
  %72 = and i32 %71, 128
  %73 = icmp ne i32 %72, 0
  br i1 %73, label %74, label %117

74:                                               ; preds = %60
  %75 = load %struct._stritem*, %struct._stritem** %2, align 8
  %76 = getelementptr inbounds %struct._stritem, %struct._stritem* %75, i32 0, i32 9
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i64
  %79 = add i64 48, %78
  %80 = add i64 %79, 1
  %81 = load %struct._stritem*, %struct._stritem** %2, align 8
  %82 = getelementptr inbounds %struct._stritem, %struct._stritem* %81, i32 0, i32 5
  %83 = load i32, i32* %82, align 8
  %84 = sext i32 %83 to i64
  %85 = add i64 %80, %84
  %86 = load %struct._stritem*, %struct._stritem** %2, align 8
  %87 = getelementptr inbounds %struct._stritem, %struct._stritem* %86, i32 0, i32 7
  %88 = load i16, i16* %87, align 2
  %89 = zext i16 %88 to i32
  %90 = and i32 %89, 256
  %91 = icmp ne i32 %90, 0
  %92 = zext i1 %91 to i64
  %93 = select i1 %91, i64 4, i64 0
  %94 = add i64 %85, %93
  %95 = load %struct._stritem*, %struct._stritem** %2, align 8
  %96 = getelementptr inbounds %struct._stritem, %struct._stritem* %95, i32 0, i32 7
  %97 = load i16, i16* %96, align 2
  %98 = zext i16 %97 to i32
  %99 = and i32 %98, 2
  %100 = icmp ne i32 %99, 0
  %101 = zext i1 %100 to i64
  %102 = select i1 %100, i64 8, i64 0
  %103 = add i64 %94, %102
  %104 = load %struct._stritem*, %struct._stritem** %2, align 8
  %105 = getelementptr inbounds %struct._stritem, %struct._stritem* %104, i32 0, i32 5
  %106 = load i32, i32* %105, align 8
  %107 = sext i32 %106 to i64
  %108 = sub i64 %103, %107
  %109 = add i64 %108, 12
  %110 = load %struct._stritem*, %struct._stritem** %2, align 8
  %111 = getelementptr inbounds %struct._stritem, %struct._stritem* %110, i32 0, i32 8
  %112 = load i8, i8* %111, align 8
  %113 = zext i8 %112 to i64
  %114 = getelementptr inbounds [256 x i64], [256 x i64]* @sizes_bytes, i64 0, i64 %113
  %115 = load i64, i64* %114, align 8
  %116 = sub i64 %115, %109
  store i64 %116, i64* %114, align 8
  br label %154

117:                                              ; preds = %60
  %118 = load %struct._stritem*, %struct._stritem** %2, align 8
  %119 = getelementptr inbounds %struct._stritem, %struct._stritem* %118, i32 0, i32 9
  %120 = load i8, i8* %119, align 1
  %121 = zext i8 %120 to i64
  %122 = add i64 48, %121
  %123 = add i64 %122, 1
  %124 = load %struct._stritem*, %struct._stritem** %2, align 8
  %125 = getelementptr inbounds %struct._stritem, %struct._stritem* %124, i32 0, i32 5
  %126 = load i32, i32* %125, align 8
  %127 = sext i32 %126 to i64
  %128 = add i64 %123, %127
  %129 = load %struct._stritem*, %struct._stritem** %2, align 8
  %130 = getelementptr inbounds %struct._stritem, %struct._stritem* %129, i32 0, i32 7
  %131 = load i16, i16* %130, align 2
  %132 = zext i16 %131 to i32
  %133 = and i32 %132, 256
  %134 = icmp ne i32 %133, 0
  %135 = zext i1 %134 to i64
  %136 = select i1 %134, i64 4, i64 0
  %137 = add i64 %128, %136
  %138 = load %struct._stritem*, %struct._stritem** %2, align 8
  %139 = getelementptr inbounds %struct._stritem, %struct._stritem* %138, i32 0, i32 7
  %140 = load i16, i16* %139, align 2
  %141 = zext i16 %140 to i32
  %142 = and i32 %141, 2
  %143 = icmp ne i32 %142, 0
  %144 = zext i1 %143 to i64
  %145 = select i1 %143, i64 8, i64 0
  %146 = add i64 %137, %145
  %147 = load %struct._stritem*, %struct._stritem** %2, align 8
  %148 = getelementptr inbounds %struct._stritem, %struct._stritem* %147, i32 0, i32 8
  %149 = load i8, i8* %148, align 8
  %150 = zext i8 %149 to i64
  %151 = getelementptr inbounds [256 x i64], [256 x i64]* @sizes_bytes, i64 0, i64 %150
  %152 = load i64, i64* %151, align 8
  %153 = sub i64 %152, %146
  store i64 %153, i64* %151, align 8
  br label %154

154:                                              ; preds = %117, %74
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @do_item_link_q(%struct._stritem* %0) #0 {
  %2 = alloca %struct._stritem*, align 8
  %3 = alloca %struct._stritem**, align 8
  %4 = alloca %struct._stritem**, align 8
  store %struct._stritem* %0, %struct._stritem** %2, align 8
  %5 = load %struct._stritem*, %struct._stritem** %2, align 8
  %6 = getelementptr inbounds %struct._stritem, %struct._stritem* %5, i32 0, i32 8
  %7 = load i8, i8* %6, align 8
  %8 = zext i8 %7 to i64
  %9 = getelementptr inbounds [256 x %struct._stritem*], [256 x %struct._stritem*]* @heads, i64 0, i64 %8
  store %struct._stritem** %9, %struct._stritem*** %3, align 8
  %10 = load %struct._stritem*, %struct._stritem** %2, align 8
  %11 = getelementptr inbounds %struct._stritem, %struct._stritem* %10, i32 0, i32 8
  %12 = load i8, i8* %11, align 8
  %13 = zext i8 %12 to i64
  %14 = getelementptr inbounds [256 x %struct._stritem*], [256 x %struct._stritem*]* @tails, i64 0, i64 %13
  store %struct._stritem** %14, %struct._stritem*** %4, align 8
  %15 = load %struct._stritem*, %struct._stritem** %2, align 8
  %16 = getelementptr inbounds %struct._stritem, %struct._stritem* %15, i32 0, i32 1
  store %struct._stritem* null, %struct._stritem** %16, align 8
  %17 = load %struct._stritem**, %struct._stritem*** %3, align 8
  %18 = load %struct._stritem*, %struct._stritem** %17, align 8
  %19 = load %struct._stritem*, %struct._stritem** %2, align 8
  %20 = getelementptr inbounds %struct._stritem, %struct._stritem* %19, i32 0, i32 0
  store %struct._stritem* %18, %struct._stritem** %20, align 8
  %21 = load %struct._stritem*, %struct._stritem** %2, align 8
  %22 = getelementptr inbounds %struct._stritem, %struct._stritem* %21, i32 0, i32 0
  %23 = load %struct._stritem*, %struct._stritem** %22, align 8
  %24 = icmp ne %struct._stritem* %23, null
  br i1 %24, label %25, label %31

25:                                               ; preds = %1
  %26 = load %struct._stritem*, %struct._stritem** %2, align 8
  %27 = load %struct._stritem*, %struct._stritem** %2, align 8
  %28 = getelementptr inbounds %struct._stritem, %struct._stritem* %27, i32 0, i32 0
  %29 = load %struct._stritem*, %struct._stritem** %28, align 8
  %30 = getelementptr inbounds %struct._stritem, %struct._stritem* %29, i32 0, i32 1
  store %struct._stritem* %26, %struct._stritem** %30, align 8
  br label %31

31:                                               ; preds = %25, %1
  %32 = load %struct._stritem*, %struct._stritem** %2, align 8
  %33 = load %struct._stritem**, %struct._stritem*** %3, align 8
  store %struct._stritem* %32, %struct._stritem** %33, align 8
  %34 = load %struct._stritem**, %struct._stritem*** %4, align 8
  %35 = load %struct._stritem*, %struct._stritem** %34, align 8
  %36 = icmp eq %struct._stritem* %35, null
  br i1 %36, label %37, label %40

37:                                               ; preds = %31
  %38 = load %struct._stritem*, %struct._stritem** %2, align 8
  %39 = load %struct._stritem**, %struct._stritem*** %4, align 8
  store %struct._stritem* %38, %struct._stritem** %39, align 8
  br label %40

40:                                               ; preds = %37, %31
  %41 = load %struct._stritem*, %struct._stritem** %2, align 8
  %42 = getelementptr inbounds %struct._stritem, %struct._stritem* %41, i32 0, i32 8
  %43 = load i8, i8* %42, align 8
  %44 = zext i8 %43 to i64
  %45 = getelementptr inbounds [256 x i32], [256 x i32]* @sizes, i64 0, i64 %44
  %46 = load i32, i32* %45, align 4
  %47 = add i32 %46, 1
  store i32 %47, i32* %45, align 4
  %48 = load %struct._stritem*, %struct._stritem** %2, align 8
  %49 = getelementptr inbounds %struct._stritem, %struct._stritem* %48, i32 0, i32 7
  %50 = load i16, i16* %49, align 2
  %51 = zext i16 %50 to i32
  %52 = and i32 %51, 128
  %53 = icmp ne i32 %52, 0
  br i1 %53, label %54, label %97

54:                                               ; preds = %40
  %55 = load %struct._stritem*, %struct._stritem** %2, align 8
  %56 = getelementptr inbounds %struct._stritem, %struct._stritem* %55, i32 0, i32 9
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = add i64 48, %58
  %60 = add i64 %59, 1
  %61 = load %struct._stritem*, %struct._stritem** %2, align 8
  %62 = getelementptr inbounds %struct._stritem, %struct._stritem* %61, i32 0, i32 5
  %63 = load i32, i32* %62, align 8
  %64 = sext i32 %63 to i64
  %65 = add i64 %60, %64
  %66 = load %struct._stritem*, %struct._stritem** %2, align 8
  %67 = getelementptr inbounds %struct._stritem, %struct._stritem* %66, i32 0, i32 7
  %68 = load i16, i16* %67, align 2
  %69 = zext i16 %68 to i32
  %70 = and i32 %69, 256
  %71 = icmp ne i32 %70, 0
  %72 = zext i1 %71 to i64
  %73 = select i1 %71, i64 4, i64 0
  %74 = add i64 %65, %73
  %75 = load %struct._stritem*, %struct._stritem** %2, align 8
  %76 = getelementptr inbounds %struct._stritem, %struct._stritem* %75, i32 0, i32 7
  %77 = load i16, i16* %76, align 2
  %78 = zext i16 %77 to i32
  %79 = and i32 %78, 2
  %80 = icmp ne i32 %79, 0
  %81 = zext i1 %80 to i64
  %82 = select i1 %80, i64 8, i64 0
  %83 = add i64 %74, %82
  %84 = load %struct._stritem*, %struct._stritem** %2, align 8
  %85 = getelementptr inbounds %struct._stritem, %struct._stritem* %84, i32 0, i32 5
  %86 = load i32, i32* %85, align 8
  %87 = sext i32 %86 to i64
  %88 = sub i64 %83, %87
  %89 = add i64 %88, 12
  %90 = load %struct._stritem*, %struct._stritem** %2, align 8
  %91 = getelementptr inbounds %struct._stritem, %struct._stritem* %90, i32 0, i32 8
  %92 = load i8, i8* %91, align 8
  %93 = zext i8 %92 to i64
  %94 = getelementptr inbounds [256 x i64], [256 x i64]* @sizes_bytes, i64 0, i64 %93
  %95 = load i64, i64* %94, align 8
  %96 = add i64 %95, %89
  store i64 %96, i64* %94, align 8
  br label %134

97:                                               ; preds = %40
  %98 = load %struct._stritem*, %struct._stritem** %2, align 8
  %99 = getelementptr inbounds %struct._stritem, %struct._stritem* %98, i32 0, i32 9
  %100 = load i8, i8* %99, align 1
  %101 = zext i8 %100 to i64
  %102 = add i64 48, %101
  %103 = add i64 %102, 1
  %104 = load %struct._stritem*, %struct._stritem** %2, align 8
  %105 = getelementptr inbounds %struct._stritem, %struct._stritem* %104, i32 0, i32 5
  %106 = load i32, i32* %105, align 8
  %107 = sext i32 %106 to i64
  %108 = add i64 %103, %107
  %109 = load %struct._stritem*, %struct._stritem** %2, align 8
  %110 = getelementptr inbounds %struct._stritem, %struct._stritem* %109, i32 0, i32 7
  %111 = load i16, i16* %110, align 2
  %112 = zext i16 %111 to i32
  %113 = and i32 %112, 256
  %114 = icmp ne i32 %113, 0
  %115 = zext i1 %114 to i64
  %116 = select i1 %114, i64 4, i64 0
  %117 = add i64 %108, %116
  %118 = load %struct._stritem*, %struct._stritem** %2, align 8
  %119 = getelementptr inbounds %struct._stritem, %struct._stritem* %118, i32 0, i32 7
  %120 = load i16, i16* %119, align 2
  %121 = zext i16 %120 to i32
  %122 = and i32 %121, 2
  %123 = icmp ne i32 %122, 0
  %124 = zext i1 %123 to i64
  %125 = select i1 %123, i64 8, i64 0
  %126 = add i64 %117, %125
  %127 = load %struct._stritem*, %struct._stritem** %2, align 8
  %128 = getelementptr inbounds %struct._stritem, %struct._stritem* %127, i32 0, i32 8
  %129 = load i8, i8* %128, align 8
  %130 = zext i8 %129 to i64
  %131 = getelementptr inbounds [256 x i64], [256 x i64]* @sizes_bytes, i64 0, i64 %130
  %132 = load i64, i64* %131, align 8
  %133 = add i64 %132, %126
  store i64 %133, i64* %131, align 8
  br label %134

134:                                              ; preds = %97, %54
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @item_link_q(%struct._stritem* %0) #0 {
  %2 = alloca %struct._stritem*, align 8
  store %struct._stritem* %0, %struct._stritem** %2, align 8
  %3 = load %struct._stritem*, %struct._stritem** %2, align 8
  %4 = getelementptr inbounds %struct._stritem, %struct._stritem* %3, i32 0, i32 8
  %5 = load i8, i8* %4, align 8
  %6 = zext i8 %5 to i64
  %7 = getelementptr inbounds [256 x %union.pthread_mutex_t], [256 x %union.pthread_mutex_t]* @lru_locks, i64 0, i64 %6
  %8 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %7) #14
  %9 = load %struct._stritem*, %struct._stritem** %2, align 8
  call void @do_item_link_q(%struct._stritem* %9)
  %10 = load %struct._stritem*, %struct._stritem** %2, align 8
  %11 = getelementptr inbounds %struct._stritem, %struct._stritem* %10, i32 0, i32 8
  %12 = load i8, i8* %11, align 8
  %13 = zext i8 %12 to i64
  %14 = getelementptr inbounds [256 x %union.pthread_mutex_t], [256 x %union.pthread_mutex_t]* @lru_locks, i64 0, i64 %13
  %15 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %14) #14
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @item_free(%struct._stritem* %0) #0 {
  %2 = alloca %struct._stritem*, align 8
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  store %struct._stritem* %0, %struct._stritem** %2, align 8
  %5 = load %struct._stritem*, %struct._stritem** %2, align 8
  %6 = getelementptr inbounds %struct._stritem, %struct._stritem* %5, i32 0, i32 9
  %7 = load i8, i8* %6, align 1
  %8 = zext i8 %7 to i64
  %9 = add i64 48, %8
  %10 = add i64 %9, 1
  %11 = load %struct._stritem*, %struct._stritem** %2, align 8
  %12 = getelementptr inbounds %struct._stritem, %struct._stritem* %11, i32 0, i32 5
  %13 = load i32, i32* %12, align 8
  %14 = sext i32 %13 to i64
  %15 = add i64 %10, %14
  %16 = load %struct._stritem*, %struct._stritem** %2, align 8
  %17 = getelementptr inbounds %struct._stritem, %struct._stritem* %16, i32 0, i32 7
  %18 = load i16, i16* %17, align 2
  %19 = zext i16 %18 to i32
  %20 = and i32 %19, 256
  %21 = icmp ne i32 %20, 0
  %22 = zext i1 %21 to i64
  %23 = select i1 %21, i64 4, i64 0
  %24 = add i64 %15, %23
  %25 = load %struct._stritem*, %struct._stritem** %2, align 8
  %26 = getelementptr inbounds %struct._stritem, %struct._stritem* %25, i32 0, i32 7
  %27 = load i16, i16* %26, align 2
  %28 = zext i16 %27 to i32
  %29 = and i32 %28, 2
  %30 = icmp ne i32 %29, 0
  %31 = zext i1 %30 to i64
  %32 = select i1 %30, i64 8, i64 0
  %33 = add i64 %24, %32
  store i64 %33, i64* %3, align 8
  %34 = load %struct._stritem*, %struct._stritem** %2, align 8
  %35 = getelementptr inbounds %struct._stritem, %struct._stritem* %34, i32 0, i32 8
  %36 = load i8, i8* %35, align 8
  %37 = zext i8 %36 to i32
  %38 = and i32 %37, -193
  store i32 %38, i32* %4, align 4
  br label %39

39:                                               ; preds = %40, %1
  br i1 false, label %40, label %41

40:                                               ; preds = %39
  br label %39

41:                                               ; preds = %39
  %42 = load %struct._stritem*, %struct._stritem** %2, align 8
  %43 = bitcast %struct._stritem* %42 to i8*
  %44 = load i64, i64* %3, align 8
  %45 = load i32, i32* %4, align 4
  call void @slabs_free(i8* %43, i64 %44, i32 %45)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @item_stats_sizes_remove(%struct._stritem* %0) #0 {
  %2 = alloca %struct._stritem*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store %struct._stritem* %0, %struct._stritem** %2, align 8
  %5 = load i32*, i32** @stats_sizes_hist, align 8
  %6 = icmp eq i32* %5, null
  br i1 %6, label %25, label %7

7:                                                ; preds = %1
  %8 = load i64, i64* @stats_sizes_cas_min, align 8
  %9 = load %struct._stritem*, %struct._stritem** %2, align 8
  %10 = getelementptr inbounds %struct._stritem, %struct._stritem* %9, i32 0, i32 7
  %11 = load i16, i16* %10, align 2
  %12 = zext i16 %11 to i32
  %13 = and i32 %12, 2
  %14 = icmp ne i32 %13, 0
  br i1 %14, label %15, label %21

15:                                               ; preds = %7
  %16 = load %struct._stritem*, %struct._stritem** %2, align 8
  %17 = getelementptr inbounds %struct._stritem, %struct._stritem* %16, i32 0, i32 10
  %18 = getelementptr inbounds [0 x %union.anon.10], [0 x %union.anon.10]* %17, i64 0, i64 0
  %19 = bitcast %union.anon.10* %18 to i64*
  %20 = load i64, i64* %19, align 8
  br label %22

21:                                               ; preds = %7
  br label %22

22:                                               ; preds = %21, %15
  %23 = phi i64 [ %20, %15 ], [ 0, %21 ]
  %24 = icmp ugt i64 %8, %23
  br i1 %24, label %25, label %26

25:                                               ; preds = %22, %1
  br label %76

26:                                               ; preds = %22
  %27 = load %struct._stritem*, %struct._stritem** %2, align 8
  %28 = getelementptr inbounds %struct._stritem, %struct._stritem* %27, i32 0, i32 9
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i64
  %31 = add i64 48, %30
  %32 = add i64 %31, 1
  %33 = load %struct._stritem*, %struct._stritem** %2, align 8
  %34 = getelementptr inbounds %struct._stritem, %struct._stritem* %33, i32 0, i32 5
  %35 = load i32, i32* %34, align 8
  %36 = sext i32 %35 to i64
  %37 = add i64 %32, %36
  %38 = load %struct._stritem*, %struct._stritem** %2, align 8
  %39 = getelementptr inbounds %struct._stritem, %struct._stritem* %38, i32 0, i32 7
  %40 = load i16, i16* %39, align 2
  %41 = zext i16 %40 to i32
  %42 = and i32 %41, 256
  %43 = icmp ne i32 %42, 0
  %44 = zext i1 %43 to i64
  %45 = select i1 %43, i64 4, i64 0
  %46 = add i64 %37, %45
  %47 = load %struct._stritem*, %struct._stritem** %2, align 8
  %48 = getelementptr inbounds %struct._stritem, %struct._stritem* %47, i32 0, i32 7
  %49 = load i16, i16* %48, align 2
  %50 = zext i16 %49 to i32
  %51 = and i32 %50, 2
  %52 = icmp ne i32 %51, 0
  %53 = zext i1 %52 to i64
  %54 = select i1 %52, i64 8, i64 0
  %55 = add i64 %46, %54
  %56 = trunc i64 %55 to i32
  store i32 %56, i32* %3, align 4
  %57 = load i32, i32* %3, align 4
  %58 = sdiv i32 %57, 32
  store i32 %58, i32* %4, align 4
  %59 = load i32, i32* %3, align 4
  %60 = srem i32 %59, 32
  %61 = icmp ne i32 %60, 0
  br i1 %61, label %62, label %65

62:                                               ; preds = %26
  %63 = load i32, i32* %4, align 4
  %64 = add nsw i32 %63, 1
  store i32 %64, i32* %4, align 4
  br label %65

65:                                               ; preds = %62, %26
  %66 = load i32, i32* %4, align 4
  %67 = load i32, i32* @stats_sizes_buckets, align 4
  %68 = icmp slt i32 %66, %67
  br i1 %68, label %69, label %76

69:                                               ; preds = %65
  %70 = load i32*, i32** @stats_sizes_hist, align 8
  %71 = load i32, i32* %4, align 4
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds i32, i32* %70, i64 %72
  %74 = load i32, i32* %73, align 4
  %75 = add i32 %74, -1
  store i32 %75, i32* %73, align 4
  br label %76

76:                                               ; preds = %25, %69, %65
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct._strchunk* @do_item_alloc_chunk(%struct._strchunk* %0, i64 %1) #0 {
  %3 = alloca %struct._strchunk*, align 8
  %4 = alloca %struct._strchunk*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca %struct._strchunk*, align 8
  store %struct._strchunk* %0, %struct._strchunk** %4, align 8
  store i64 %1, i64* %5, align 8
  %9 = load i64, i64* %5, align 8
  %10 = add i64 %9, 48
  store i64 %10, i64* %6, align 8
  %11 = load i64, i64* %6, align 8
  %12 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 23), align 8
  %13 = sext i32 %12 to i64
  %14 = icmp ugt i64 %11, %13
  br i1 %14, label %15, label %18

15:                                               ; preds = %2
  %16 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 23), align 8
  %17 = sext i32 %16 to i64
  store i64 %17, i64* %6, align 8
  br label %18

18:                                               ; preds = %15, %2
  %19 = load i64, i64* %6, align 8
  %20 = call i32 @slabs_clsid(i64 %19)
  store i32 %20, i32* %7, align 4
  %21 = load i64, i64* %6, align 8
  %22 = load i32, i32* %7, align 4
  %23 = call %struct._stritem* @do_item_alloc_pull(i64 %21, i32 %22)
  %24 = bitcast %struct._stritem* %23 to %struct._strchunk*
  store %struct._strchunk* %24, %struct._strchunk** %8, align 8
  %25 = load %struct._strchunk*, %struct._strchunk** %8, align 8
  %26 = icmp eq %struct._strchunk* %25, null
  br i1 %26, label %27, label %28

27:                                               ; preds = %18
  store %struct._strchunk* null, %struct._strchunk** %3, align 8
  br label %60

28:                                               ; preds = %18
  call void @slabs_mlock()
  %29 = load %struct._strchunk*, %struct._strchunk** %4, align 8
  %30 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %29, i32 0, i32 2
  %31 = load %struct._stritem*, %struct._stritem** %30, align 8
  %32 = load %struct._strchunk*, %struct._strchunk** %8, align 8
  %33 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %32, i32 0, i32 2
  store %struct._stritem* %31, %struct._stritem** %33, align 8
  %34 = load %struct._strchunk*, %struct._strchunk** %8, align 8
  %35 = load %struct._strchunk*, %struct._strchunk** %4, align 8
  %36 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %35, i32 0, i32 0
  store %struct._strchunk* %34, %struct._strchunk** %36, align 8
  %37 = load %struct._strchunk*, %struct._strchunk** %4, align 8
  %38 = load %struct._strchunk*, %struct._strchunk** %8, align 8
  %39 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %38, i32 0, i32 1
  store %struct._strchunk* %37, %struct._strchunk** %39, align 8
  %40 = load %struct._strchunk*, %struct._strchunk** %8, align 8
  %41 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %40, i32 0, i32 0
  store %struct._strchunk* null, %struct._strchunk** %41, align 8
  %42 = load %struct._strchunk*, %struct._strchunk** %8, align 8
  %43 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %42, i32 0, i32 4
  store i32 0, i32* %43, align 4
  %44 = load i32, i32* %7, align 4
  %45 = trunc i32 %44 to i8
  %46 = load %struct._strchunk*, %struct._strchunk** %8, align 8
  %47 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %46, i32 0, i32 8
  store i8 %45, i8* %47, align 8
  %48 = load i64, i64* %6, align 8
  %49 = sub i64 %48, 48
  %50 = trunc i64 %49 to i32
  %51 = load %struct._strchunk*, %struct._strchunk** %8, align 8
  %52 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %51, i32 0, i32 3
  store i32 %50, i32* %52, align 8
  %53 = load %struct._strchunk*, %struct._strchunk** %8, align 8
  %54 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %53, i32 0, i32 7
  %55 = load i16, i16* %54, align 2
  %56 = zext i16 %55 to i32
  %57 = or i32 %56, 64
  %58 = trunc i32 %57 to i16
  store i16 %58, i16* %54, align 2
  call void @slabs_munlock()
  %59 = load %struct._strchunk*, %struct._strchunk** %8, align 8
  store %struct._strchunk* %59, %struct._strchunk** %3, align 8
  br label %60

60:                                               ; preds = %28, %27
  %61 = load %struct._strchunk*, %struct._strchunk** %3, align 8
  ret %struct._strchunk* %61
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct._stritem* @do_item_alloc(i8* %0, i64 %1, i32 %2, i32 %3, i32 %4) #0 {
  %6 = alloca %struct._stritem*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i8, align 1
  %13 = alloca %struct._stritem*, align 8
  %14 = alloca [40 x i8], align 16
  %15 = alloca i64, align 8
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca %struct._strchunk*, align 8
  store i8* %0, i8** %7, align 8
  store i64 %1, i64* %8, align 8
  store i32 %2, i32* %9, align 4
  store i32 %3, i32* %10, align 4
  store i32 %4, i32* %11, align 4
  store %struct._stritem* null, %struct._stritem** %13, align 8
  %20 = load i32, i32* %11, align 4
  %21 = icmp slt i32 %20, 2
  br i1 %21, label %22, label %23

22:                                               ; preds = %5
  store %struct._stritem* null, %struct._stritem** %6, align 8
  br label %261

23:                                               ; preds = %5
  %24 = load i64, i64* %8, align 8
  %25 = add i64 %24, 1
  %26 = trunc i64 %25 to i8
  %27 = load i32, i32* %9, align 4
  %28 = load i32, i32* %11, align 4
  %29 = getelementptr inbounds [40 x i8], [40 x i8]* %14, i64 0, i64 0
  %30 = call i64 @item_make_header(i8 zeroext %26, i32 %27, i32 %28, i8* %29, i8* %12)
  store i64 %30, i64* %15, align 8
  %31 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 19), align 8
  %32 = trunc i8 %31 to i1
  br i1 %32, label %33, label %36

33:                                               ; preds = %23
  %34 = load i64, i64* %15, align 8
  %35 = add i64 %34, 8
  store i64 %35, i64* %15, align 8
  br label %36

36:                                               ; preds = %33, %23
  %37 = load i64, i64* %15, align 8
  %38 = call i32 @slabs_clsid(i64 %37)
  store i32 %38, i32* %16, align 4
  store i32 0, i32* %17, align 4
  %39 = load i32, i32* %16, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %36
  store %struct._stritem* null, %struct._stritem** %6, align 8
  br label %261

42:                                               ; preds = %36
  %43 = load i64, i64* %15, align 8
  %44 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 23), align 8
  %45 = sext i32 %44 to i64
  %46 = icmp ugt i64 %43, %45
  br i1 %46, label %47, label %81

47:                                               ; preds = %42
  %48 = load i64, i64* %8, align 8
  %49 = add i64 %48, 1
  %50 = load i8, i8* %12, align 1
  %51 = zext i8 %50 to i64
  %52 = add i64 %49, %51
  %53 = add i64 %52, 48
  %54 = add i64 %53, 48
  %55 = trunc i64 %54 to i32
  store i32 %55, i32* %18, align 4
  %56 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 19), align 8
  %57 = trunc i8 %56 to i1
  br i1 %57, label %58, label %63

58:                                               ; preds = %47
  %59 = load i32, i32* %18, align 4
  %60 = sext i32 %59 to i64
  %61 = add i64 %60, 8
  %62 = trunc i64 %61 to i32
  store i32 %62, i32* %18, align 4
  br label %63

63:                                               ; preds = %58, %47
  %64 = load i32, i32* %18, align 4
  %65 = sext i32 %64 to i64
  %66 = call i32 @slabs_clsid(i64 %65)
  store i32 %66, i32* %17, align 4
  %67 = load i32, i32* %18, align 4
  %68 = sext i32 %67 to i64
  %69 = load i32, i32* %17, align 4
  %70 = call %struct._stritem* @do_item_alloc_pull(i64 %68, i32 %69)
  store %struct._stritem* %70, %struct._stritem** %13, align 8
  %71 = load %struct._stritem*, %struct._stritem** %13, align 8
  %72 = icmp ne %struct._stritem* %71, null
  br i1 %72, label %73, label %80

73:                                               ; preds = %63
  %74 = load %struct._stritem*, %struct._stritem** %13, align 8
  %75 = getelementptr inbounds %struct._stritem, %struct._stritem* %74, i32 0, i32 7
  %76 = load i16, i16* %75, align 2
  %77 = zext i16 %76 to i32
  %78 = or i32 %77, 32
  %79 = trunc i32 %78 to i16
  store i16 %79, i16* %75, align 2
  br label %80

80:                                               ; preds = %73, %63
  br label %85

81:                                               ; preds = %42
  %82 = load i64, i64* %15, align 8
  %83 = load i32, i32* %16, align 4
  %84 = call %struct._stritem* @do_item_alloc_pull(i64 %82, i32 %83)
  store %struct._stritem* %84, %struct._stritem** %13, align 8
  br label %85

85:                                               ; preds = %81, %80
  %86 = load %struct._stritem*, %struct._stritem** %13, align 8
  %87 = icmp eq %struct._stritem* %86, null
  br i1 %87, label %88, label %103

88:                                               ; preds = %85
  %89 = load i32, i32* %16, align 4
  %90 = zext i32 %89 to i64
  %91 = getelementptr inbounds [256 x %union.pthread_mutex_t], [256 x %union.pthread_mutex_t]* @lru_locks, i64 0, i64 %90
  %92 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %91) #14
  %93 = load i32, i32* %16, align 4
  %94 = zext i32 %93 to i64
  %95 = getelementptr inbounds [256 x %struct.itemstats_t], [256 x %struct.itemstats_t]* @itemstats, i64 0, i64 %94
  %96 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %95, i32 0, i32 3
  %97 = load i64, i64* %96, align 8
  %98 = add i64 %97, 1
  store i64 %98, i64* %96, align 8
  %99 = load i32, i32* %16, align 4
  %100 = zext i32 %99 to i64
  %101 = getelementptr inbounds [256 x %union.pthread_mutex_t], [256 x %union.pthread_mutex_t]* @lru_locks, i64 0, i64 %100
  %102 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %101) #14
  store %struct._stritem* null, %struct._stritem** %6, align 8
  br label %261

103:                                              ; preds = %85
  %104 = load %struct._stritem*, %struct._stritem** %13, align 8
  %105 = getelementptr inbounds %struct._stritem, %struct._stritem* %104, i32 0, i32 1
  store %struct._stritem* null, %struct._stritem** %105, align 8
  %106 = load %struct._stritem*, %struct._stritem** %13, align 8
  %107 = getelementptr inbounds %struct._stritem, %struct._stritem* %106, i32 0, i32 0
  store %struct._stritem* null, %struct._stritem** %107, align 8
  %108 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 48), align 4
  %109 = trunc i8 %108 to i1
  br i1 %109, label %110, label %119

110:                                              ; preds = %103
  %111 = load i32, i32* %10, align 4
  %112 = load volatile i32, i32* @current_time, align 4
  %113 = sub i32 %111, %112
  %114 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 49), align 8
  %115 = icmp ule i32 %113, %114
  br i1 %115, label %116, label %119

116:                                              ; preds = %110
  %117 = load i32, i32* %16, align 4
  %118 = or i32 %117, 192
  store i32 %118, i32* %16, align 4
  br label %128

119:                                              ; preds = %110, %103
  %120 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 30), align 8
  %121 = trunc i8 %120 to i1
  br i1 %121, label %122, label %124

122:                                              ; preds = %119
  %123 = load i32, i32* %16, align 4
  store i32 %123, i32* %16, align 4
  br label %127

124:                                              ; preds = %119
  %125 = load i32, i32* %16, align 4
  %126 = or i32 %125, 128
  store i32 %126, i32* %16, align 4
  br label %127

127:                                              ; preds = %124, %122
  br label %128

128:                                              ; preds = %127, %116
  %129 = load i32, i32* %16, align 4
  %130 = trunc i32 %129 to i8
  %131 = load %struct._stritem*, %struct._stritem** %13, align 8
  %132 = getelementptr inbounds %struct._stritem, %struct._stritem* %131, i32 0, i32 8
  store i8 %130, i8* %132, align 8
  br label %133

133:                                              ; preds = %134, %128
  br i1 false, label %134, label %135

134:                                              ; preds = %133
  br label %133

135:                                              ; preds = %133
  %136 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 19), align 8
  %137 = trunc i8 %136 to i1
  %138 = zext i1 %137 to i64
  %139 = select i1 %137, i32 2, i32 0
  %140 = load %struct._stritem*, %struct._stritem** %13, align 8
  %141 = getelementptr inbounds %struct._stritem, %struct._stritem* %140, i32 0, i32 7
  %142 = load i16, i16* %141, align 2
  %143 = zext i16 %142 to i32
  %144 = or i32 %143, %139
  %145 = trunc i32 %144 to i16
  store i16 %145, i16* %141, align 2
  %146 = load i8, i8* %12, align 1
  %147 = zext i8 %146 to i32
  %148 = icmp ne i32 %147, 0
  %149 = zext i1 %148 to i64
  %150 = select i1 %148, i32 256, i32 0
  %151 = load %struct._stritem*, %struct._stritem** %13, align 8
  %152 = getelementptr inbounds %struct._stritem, %struct._stritem* %151, i32 0, i32 7
  %153 = load i16, i16* %152, align 2
  %154 = zext i16 %153 to i32
  %155 = or i32 %154, %150
  %156 = trunc i32 %155 to i16
  store i16 %156, i16* %152, align 2
  %157 = load i64, i64* %8, align 8
  %158 = trunc i64 %157 to i8
  %159 = load %struct._stritem*, %struct._stritem** %13, align 8
  %160 = getelementptr inbounds %struct._stritem, %struct._stritem* %159, i32 0, i32 9
  store i8 %158, i8* %160, align 1
  %161 = load i32, i32* %11, align 4
  %162 = load %struct._stritem*, %struct._stritem** %13, align 8
  %163 = getelementptr inbounds %struct._stritem, %struct._stritem* %162, i32 0, i32 5
  store i32 %161, i32* %163, align 8
  %164 = load %struct._stritem*, %struct._stritem** %13, align 8
  %165 = getelementptr inbounds %struct._stritem, %struct._stritem* %164, i32 0, i32 10
  %166 = bitcast [0 x %union.anon.10]* %165 to i8*
  %167 = load %struct._stritem*, %struct._stritem** %13, align 8
  %168 = getelementptr inbounds %struct._stritem, %struct._stritem* %167, i32 0, i32 7
  %169 = load i16, i16* %168, align 2
  %170 = zext i16 %169 to i32
  %171 = and i32 %170, 2
  %172 = icmp ne i32 %171, 0
  %173 = zext i1 %172 to i64
  %174 = select i1 %172, i64 8, i64 0
  %175 = getelementptr inbounds i8, i8* %166, i64 %174
  %176 = load i8*, i8** %7, align 8
  %177 = load i64, i64* %8, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %175, i8* align 1 %176, i64 %177, i1 false)
  %178 = load i32, i32* %10, align 4
  %179 = load %struct._stritem*, %struct._stritem** %13, align 8
  %180 = getelementptr inbounds %struct._stritem, %struct._stritem* %179, i32 0, i32 4
  store i32 %178, i32* %180, align 4
  %181 = load i8, i8* %12, align 1
  %182 = zext i8 %181 to i32
  %183 = icmp sgt i32 %182, 0
  br i1 %183, label %184, label %205

184:                                              ; preds = %135
  %185 = load %struct._stritem*, %struct._stritem** %13, align 8
  %186 = getelementptr inbounds %struct._stritem, %struct._stritem* %185, i32 0, i32 10
  %187 = bitcast [0 x %union.anon.10]* %186 to i8*
  %188 = load %struct._stritem*, %struct._stritem** %13, align 8
  %189 = getelementptr inbounds %struct._stritem, %struct._stritem* %188, i32 0, i32 9
  %190 = load i8, i8* %189, align 1
  %191 = zext i8 %190 to i32
  %192 = sext i32 %191 to i64
  %193 = getelementptr inbounds i8, i8* %187, i64 %192
  %194 = getelementptr inbounds i8, i8* %193, i64 1
  %195 = load %struct._stritem*, %struct._stritem** %13, align 8
  %196 = getelementptr inbounds %struct._stritem, %struct._stritem* %195, i32 0, i32 7
  %197 = load i16, i16* %196, align 2
  %198 = zext i16 %197 to i32
  %199 = and i32 %198, 2
  %200 = icmp ne i32 %199, 0
  %201 = zext i1 %200 to i64
  %202 = select i1 %200, i64 8, i64 0
  %203 = getelementptr inbounds i8, i8* %194, i64 %202
  %204 = bitcast i32* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %203, i8* align 4 %204, i64 4, i1 false)
  br label %205

205:                                              ; preds = %184, %135
  %206 = load %struct._stritem*, %struct._stritem** %13, align 8
  %207 = getelementptr inbounds %struct._stritem, %struct._stritem* %206, i32 0, i32 7
  %208 = load i16, i16* %207, align 2
  %209 = zext i16 %208 to i32
  %210 = and i32 %209, 32
  %211 = icmp ne i32 %210, 0
  br i1 %211, label %212, label %257

212:                                              ; preds = %205
  %213 = load %struct._stritem*, %struct._stritem** %13, align 8
  %214 = getelementptr inbounds %struct._stritem, %struct._stritem* %213, i32 0, i32 10
  %215 = bitcast [0 x %union.anon.10]* %214 to i8*
  %216 = load %struct._stritem*, %struct._stritem** %13, align 8
  %217 = getelementptr inbounds %struct._stritem, %struct._stritem* %216, i32 0, i32 9
  %218 = load i8, i8* %217, align 1
  %219 = zext i8 %218 to i32
  %220 = sext i32 %219 to i64
  %221 = getelementptr inbounds i8, i8* %215, i64 %220
  %222 = getelementptr inbounds i8, i8* %221, i64 1
  %223 = load %struct._stritem*, %struct._stritem** %13, align 8
  %224 = getelementptr inbounds %struct._stritem, %struct._stritem* %223, i32 0, i32 7
  %225 = load i16, i16* %224, align 2
  %226 = zext i16 %225 to i32
  %227 = and i32 %226, 256
  %228 = icmp ne i32 %227, 0
  %229 = zext i1 %228 to i64
  %230 = select i1 %228, i64 4, i64 0
  %231 = getelementptr inbounds i8, i8* %222, i64 %230
  %232 = load %struct._stritem*, %struct._stritem** %13, align 8
  %233 = getelementptr inbounds %struct._stritem, %struct._stritem* %232, i32 0, i32 7
  %234 = load i16, i16* %233, align 2
  %235 = zext i16 %234 to i32
  %236 = and i32 %235, 2
  %237 = icmp ne i32 %236, 0
  %238 = zext i1 %237 to i64
  %239 = select i1 %237, i64 8, i64 0
  %240 = getelementptr inbounds i8, i8* %231, i64 %239
  %241 = bitcast i8* %240 to %struct._strchunk*
  store %struct._strchunk* %241, %struct._strchunk** %19, align 8
  %242 = load %struct._strchunk*, %struct._strchunk** %19, align 8
  %243 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %242, i32 0, i32 0
  store %struct._strchunk* null, %struct._strchunk** %243, align 8
  %244 = load %struct._strchunk*, %struct._strchunk** %19, align 8
  %245 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %244, i32 0, i32 1
  store %struct._strchunk* null, %struct._strchunk** %245, align 8
  %246 = load %struct._strchunk*, %struct._strchunk** %19, align 8
  %247 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %246, i32 0, i32 4
  store i32 0, i32* %247, align 4
  %248 = load %struct._strchunk*, %struct._strchunk** %19, align 8
  %249 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %248, i32 0, i32 3
  store i32 0, i32* %249, align 8
  %250 = load %struct._stritem*, %struct._stritem** %13, align 8
  %251 = load %struct._strchunk*, %struct._strchunk** %19, align 8
  %252 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %251, i32 0, i32 2
  store %struct._stritem* %250, %struct._stritem** %252, align 8
  %253 = load i32, i32* %17, align 4
  %254 = trunc i32 %253 to i8
  %255 = load %struct._strchunk*, %struct._strchunk** %19, align 8
  %256 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %255, i32 0, i32 9
  store i8 %254, i8* %256, align 1
  br label %257

257:                                              ; preds = %212, %205
  %258 = load %struct._stritem*, %struct._stritem** %13, align 8
  %259 = getelementptr inbounds %struct._stritem, %struct._stritem* %258, i32 0, i32 2
  store %struct._stritem* null, %struct._stritem** %259, align 8
  %260 = load %struct._stritem*, %struct._stritem** %13, align 8
  store %struct._stritem* %260, %struct._stritem** %6, align 8
  br label %261

261:                                              ; preds = %257, %88, %41, %22
  %262 = load %struct._stritem*, %struct._stritem** %6, align 8
  ret %struct._stritem* %262
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @item_make_header(i8 zeroext %0, i32 %1, i32 %2, i8* %3, i8* %4) #0 {
  %6 = alloca i8, align 1
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  store i8 %0, i8* %6, align 1
  store i32 %1, i32* %7, align 4
  store i32 %2, i32* %8, align 4
  store i8* %3, i8** %9, align 8
  store i8* %4, i8** %10, align 8
  %11 = load i32, i32* %7, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %15

13:                                               ; preds = %5
  %14 = load i8*, i8** %10, align 8
  store i8 0, i8* %14, align 1
  br label %17

15:                                               ; preds = %5
  %16 = load i8*, i8** %10, align 8
  store i8 4, i8* %16, align 1
  br label %17

17:                                               ; preds = %15, %13
  %18 = load i8, i8* %6, align 1
  %19 = zext i8 %18 to i64
  %20 = add i64 48, %19
  %21 = load i8*, i8** %10, align 8
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = add i64 %20, %23
  %25 = load i32, i32* %8, align 4
  %26 = sext i32 %25 to i64
  %27 = add i64 %24, %26
  ret i64 %27
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @item_size_ok(i64 %0, i32 %1, i32 %2) #0 {
  %4 = alloca i1, align 1
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca [40 x i8], align 16
  %9 = alloca i8, align 1
  %10 = alloca i64, align 8
  store i64 %0, i64* %5, align 8
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  %11 = load i32, i32* %7, align 4
  %12 = icmp slt i32 %11, 2
  br i1 %12, label %13, label %14

13:                                               ; preds = %3
  store i1 false, i1* %4, align 1
  br label %31

14:                                               ; preds = %3
  %15 = load i64, i64* %5, align 8
  %16 = add i64 %15, 1
  %17 = trunc i64 %16 to i8
  %18 = load i32, i32* %6, align 4
  %19 = load i32, i32* %7, align 4
  %20 = getelementptr inbounds [40 x i8], [40 x i8]* %8, i64 0, i64 0
  %21 = call i64 @item_make_header(i8 zeroext %17, i32 %18, i32 %19, i8* %20, i8* %9)
  store i64 %21, i64* %10, align 8
  %22 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 19), align 8
  %23 = trunc i8 %22 to i1
  br i1 %23, label %24, label %27

24:                                               ; preds = %14
  %25 = load i64, i64* %10, align 8
  %26 = add i64 %25, 8
  store i64 %26, i64* %10, align 8
  br label %27

27:                                               ; preds = %24, %14
  %28 = load i64, i64* %10, align 8
  %29 = call i32 @slabs_clsid(i64 %28)
  %30 = icmp ne i32 %29, 0
  store i1 %30, i1* %4, align 1
  br label %31

31:                                               ; preds = %27, %13
  %32 = load i1, i1* %4, align 1
  ret i1 %32
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @do_item_link_fixup(%struct._stritem* %0) #0 {
  %2 = alloca %struct._stritem*, align 8
  %3 = alloca %struct._stritem**, align 8
  %4 = alloca %struct._stritem**, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %struct._stritem* %0, %struct._stritem** %2, align 8
  %7 = load %struct._stritem*, %struct._stritem** %2, align 8
  %8 = getelementptr inbounds %struct._stritem, %struct._stritem* %7, i32 0, i32 9
  %9 = load i8, i8* %8, align 1
  %10 = zext i8 %9 to i64
  %11 = add i64 48, %10
  %12 = add i64 %11, 1
  %13 = load %struct._stritem*, %struct._stritem** %2, align 8
  %14 = getelementptr inbounds %struct._stritem, %struct._stritem* %13, i32 0, i32 5
  %15 = load i32, i32* %14, align 8
  %16 = sext i32 %15 to i64
  %17 = add i64 %12, %16
  %18 = load %struct._stritem*, %struct._stritem** %2, align 8
  %19 = getelementptr inbounds %struct._stritem, %struct._stritem* %18, i32 0, i32 7
  %20 = load i16, i16* %19, align 2
  %21 = zext i16 %20 to i32
  %22 = and i32 %21, 256
  %23 = icmp ne i32 %22, 0
  %24 = zext i1 %23 to i64
  %25 = select i1 %23, i64 4, i64 0
  %26 = add i64 %17, %25
  %27 = load %struct._stritem*, %struct._stritem** %2, align 8
  %28 = getelementptr inbounds %struct._stritem, %struct._stritem* %27, i32 0, i32 7
  %29 = load i16, i16* %28, align 2
  %30 = zext i16 %29 to i32
  %31 = and i32 %30, 2
  %32 = icmp ne i32 %31, 0
  %33 = zext i1 %32 to i64
  %34 = select i1 %32, i64 8, i64 0
  %35 = add i64 %26, %34
  %36 = trunc i64 %35 to i32
  store i32 %36, i32* %5, align 4
  %37 = load i32 (i8*, i64)*, i32 (i8*, i64)** @hash, align 8
  %38 = load %struct._stritem*, %struct._stritem** %2, align 8
  %39 = getelementptr inbounds %struct._stritem, %struct._stritem* %38, i32 0, i32 10
  %40 = bitcast [0 x %union.anon.10]* %39 to i8*
  %41 = load %struct._stritem*, %struct._stritem** %2, align 8
  %42 = getelementptr inbounds %struct._stritem, %struct._stritem* %41, i32 0, i32 7
  %43 = load i16, i16* %42, align 2
  %44 = zext i16 %43 to i32
  %45 = and i32 %44, 2
  %46 = icmp ne i32 %45, 0
  %47 = zext i1 %46 to i64
  %48 = select i1 %46, i64 8, i64 0
  %49 = getelementptr inbounds i8, i8* %40, i64 %48
  %50 = load %struct._stritem*, %struct._stritem** %2, align 8
  %51 = getelementptr inbounds %struct._stritem, %struct._stritem* %50, i32 0, i32 9
  %52 = load i8, i8* %51, align 1
  %53 = zext i8 %52 to i64
  %54 = call i32 %37(i8* %49, i64 %53)
  store i32 %54, i32* %6, align 4
  %55 = load %struct._stritem*, %struct._stritem** %2, align 8
  %56 = load i32, i32* %6, align 4
  %57 = call i32 @assoc_insert(%struct._stritem* %55, i32 %56)
  %58 = load %struct._stritem*, %struct._stritem** %2, align 8
  %59 = getelementptr inbounds %struct._stritem, %struct._stritem* %58, i32 0, i32 8
  %60 = load i8, i8* %59, align 8
  %61 = zext i8 %60 to i64
  %62 = getelementptr inbounds [256 x %struct._stritem*], [256 x %struct._stritem*]* @heads, i64 0, i64 %61
  store %struct._stritem** %62, %struct._stritem*** %3, align 8
  %63 = load %struct._stritem*, %struct._stritem** %2, align 8
  %64 = getelementptr inbounds %struct._stritem, %struct._stritem* %63, i32 0, i32 8
  %65 = load i8, i8* %64, align 8
  %66 = zext i8 %65 to i64
  %67 = getelementptr inbounds [256 x %struct._stritem*], [256 x %struct._stritem*]* @tails, i64 0, i64 %66
  store %struct._stritem** %67, %struct._stritem*** %4, align 8
  %68 = load %struct._stritem*, %struct._stritem** %2, align 8
  %69 = getelementptr inbounds %struct._stritem, %struct._stritem* %68, i32 0, i32 1
  %70 = load %struct._stritem*, %struct._stritem** %69, align 8
  %71 = icmp eq %struct._stritem* %70, null
  br i1 %71, label %72, label %79

72:                                               ; preds = %1
  %73 = load %struct._stritem**, %struct._stritem*** %3, align 8
  %74 = load %struct._stritem*, %struct._stritem** %73, align 8
  %75 = icmp eq %struct._stritem* %74, null
  br i1 %75, label %76, label %79

76:                                               ; preds = %72
  %77 = load %struct._stritem*, %struct._stritem** %2, align 8
  %78 = load %struct._stritem**, %struct._stritem*** %3, align 8
  store %struct._stritem* %77, %struct._stritem** %78, align 8
  br label %79

79:                                               ; preds = %76, %72, %1
  %80 = load %struct._stritem*, %struct._stritem** %2, align 8
  %81 = getelementptr inbounds %struct._stritem, %struct._stritem* %80, i32 0, i32 0
  %82 = load %struct._stritem*, %struct._stritem** %81, align 8
  %83 = icmp eq %struct._stritem* %82, null
  br i1 %83, label %84, label %91

84:                                               ; preds = %79
  %85 = load %struct._stritem**, %struct._stritem*** %4, align 8
  %86 = load %struct._stritem*, %struct._stritem** %85, align 8
  %87 = icmp eq %struct._stritem* %86, null
  br i1 %87, label %88, label %91

88:                                               ; preds = %84
  %89 = load %struct._stritem*, %struct._stritem** %2, align 8
  %90 = load %struct._stritem**, %struct._stritem*** %4, align 8
  store %struct._stritem* %89, %struct._stritem** %90, align 8
  br label %91

91:                                               ; preds = %88, %84, %79
  %92 = load %struct._stritem*, %struct._stritem** %2, align 8
  %93 = getelementptr inbounds %struct._stritem, %struct._stritem* %92, i32 0, i32 8
  %94 = load i8, i8* %93, align 8
  %95 = zext i8 %94 to i64
  %96 = getelementptr inbounds [256 x i32], [256 x i32]* @sizes, i64 0, i64 %95
  %97 = load i32, i32* %96, align 4
  %98 = add i32 %97, 1
  store i32 %98, i32* %96, align 4
  %99 = load i32, i32* %5, align 4
  %100 = sext i32 %99 to i64
  %101 = load %struct._stritem*, %struct._stritem** %2, align 8
  %102 = getelementptr inbounds %struct._stritem, %struct._stritem* %101, i32 0, i32 8
  %103 = load i8, i8* %102, align 8
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i64], [256 x i64]* @sizes_bytes, i64 0, i64 %104
  %106 = load i64, i64* %105, align 8
  %107 = add i64 %106, %100
  store i64 %107, i64* %105, align 8
  call void @STATS_LOCK()
  %108 = load i32, i32* %5, align 4
  %109 = sext i32 %108 to i64
  %110 = load i64, i64* getelementptr inbounds (%struct.stats_state, %struct.stats_state* @stats_state, i32 0, i32 1), align 8
  %111 = add i64 %110, %109
  store i64 %111, i64* getelementptr inbounds (%struct.stats_state, %struct.stats_state* @stats_state, i32 0, i32 1), align 8
  %112 = load i64, i64* getelementptr inbounds (%struct.stats_state, %struct.stats_state* @stats_state, i32 0, i32 0), align 8
  %113 = add i64 %112, 1
  store i64 %113, i64* getelementptr inbounds (%struct.stats_state, %struct.stats_state* @stats_state, i32 0, i32 0), align 8
  %114 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 0), align 8
  %115 = add i64 %114, 1
  store i64 %115, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 0), align 8
  call void @STATS_UNLOCK()
  %116 = load %struct._stritem*, %struct._stritem** %2, align 8
  call void @item_stats_sizes_add(%struct._stritem* %116)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @item_stats_sizes_add(%struct._stritem* %0) #0 {
  %2 = alloca %struct._stritem*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store %struct._stritem* %0, %struct._stritem** %2, align 8
  %5 = load i32*, i32** @stats_sizes_hist, align 8
  %6 = icmp eq i32* %5, null
  br i1 %6, label %25, label %7

7:                                                ; preds = %1
  %8 = load i64, i64* @stats_sizes_cas_min, align 8
  %9 = load %struct._stritem*, %struct._stritem** %2, align 8
  %10 = getelementptr inbounds %struct._stritem, %struct._stritem* %9, i32 0, i32 7
  %11 = load i16, i16* %10, align 2
  %12 = zext i16 %11 to i32
  %13 = and i32 %12, 2
  %14 = icmp ne i32 %13, 0
  br i1 %14, label %15, label %21

15:                                               ; preds = %7
  %16 = load %struct._stritem*, %struct._stritem** %2, align 8
  %17 = getelementptr inbounds %struct._stritem, %struct._stritem* %16, i32 0, i32 10
  %18 = getelementptr inbounds [0 x %union.anon.10], [0 x %union.anon.10]* %17, i64 0, i64 0
  %19 = bitcast %union.anon.10* %18 to i64*
  %20 = load i64, i64* %19, align 8
  br label %22

21:                                               ; preds = %7
  br label %22

22:                                               ; preds = %21, %15
  %23 = phi i64 [ %20, %15 ], [ 0, %21 ]
  %24 = icmp ugt i64 %8, %23
  br i1 %24, label %25, label %26

25:                                               ; preds = %22, %1
  br label %76

26:                                               ; preds = %22
  %27 = load %struct._stritem*, %struct._stritem** %2, align 8
  %28 = getelementptr inbounds %struct._stritem, %struct._stritem* %27, i32 0, i32 9
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i64
  %31 = add i64 48, %30
  %32 = add i64 %31, 1
  %33 = load %struct._stritem*, %struct._stritem** %2, align 8
  %34 = getelementptr inbounds %struct._stritem, %struct._stritem* %33, i32 0, i32 5
  %35 = load i32, i32* %34, align 8
  %36 = sext i32 %35 to i64
  %37 = add i64 %32, %36
  %38 = load %struct._stritem*, %struct._stritem** %2, align 8
  %39 = getelementptr inbounds %struct._stritem, %struct._stritem* %38, i32 0, i32 7
  %40 = load i16, i16* %39, align 2
  %41 = zext i16 %40 to i32
  %42 = and i32 %41, 256
  %43 = icmp ne i32 %42, 0
  %44 = zext i1 %43 to i64
  %45 = select i1 %43, i64 4, i64 0
  %46 = add i64 %37, %45
  %47 = load %struct._stritem*, %struct._stritem** %2, align 8
  %48 = getelementptr inbounds %struct._stritem, %struct._stritem* %47, i32 0, i32 7
  %49 = load i16, i16* %48, align 2
  %50 = zext i16 %49 to i32
  %51 = and i32 %50, 2
  %52 = icmp ne i32 %51, 0
  %53 = zext i1 %52 to i64
  %54 = select i1 %52, i64 8, i64 0
  %55 = add i64 %46, %54
  %56 = trunc i64 %55 to i32
  store i32 %56, i32* %3, align 4
  %57 = load i32, i32* %3, align 4
  %58 = sdiv i32 %57, 32
  store i32 %58, i32* %4, align 4
  %59 = load i32, i32* %3, align 4
  %60 = srem i32 %59, 32
  %61 = icmp ne i32 %60, 0
  br i1 %61, label %62, label %65

62:                                               ; preds = %26
  %63 = load i32, i32* %4, align 4
  %64 = add nsw i32 %63, 1
  store i32 %64, i32* %4, align 4
  br label %65

65:                                               ; preds = %62, %26
  %66 = load i32, i32* %4, align 4
  %67 = load i32, i32* @stats_sizes_buckets, align 4
  %68 = icmp slt i32 %66, %67
  br i1 %68, label %69, label %76

69:                                               ; preds = %65
  %70 = load i32*, i32** @stats_sizes_hist, align 8
  %71 = load i32, i32* %4, align 4
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds i32, i32* %70, i64 %72
  %74 = load i32, i32* %73, align 4
  %75 = add i32 %74, 1
  store i32 %75, i32* %73, align 4
  br label %76

76:                                               ; preds = %25, %69, %65
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @do_item_link(%struct._stritem* %0, i32 %1) #0 {
  %3 = alloca %struct._stritem*, align 8
  %4 = alloca i32, align 4
  store %struct._stritem* %0, %struct._stritem** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %struct._stritem*, %struct._stritem** %3, align 8
  %6 = getelementptr inbounds %struct._stritem, %struct._stritem* %5, i32 0, i32 7
  %7 = load i16, i16* %6, align 2
  %8 = zext i16 %7 to i32
  %9 = or i32 %8, 1
  %10 = trunc i32 %9 to i16
  store i16 %10, i16* %6, align 2
  %11 = load volatile i32, i32* @current_time, align 4
  %12 = load %struct._stritem*, %struct._stritem** %3, align 8
  %13 = getelementptr inbounds %struct._stritem, %struct._stritem* %12, i32 0, i32 3
  store i32 %11, i32* %13, align 8
  call void @STATS_LOCK()
  %14 = load %struct._stritem*, %struct._stritem** %3, align 8
  %15 = getelementptr inbounds %struct._stritem, %struct._stritem* %14, i32 0, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = add i64 48, %17
  %19 = add i64 %18, 1
  %20 = load %struct._stritem*, %struct._stritem** %3, align 8
  %21 = getelementptr inbounds %struct._stritem, %struct._stritem* %20, i32 0, i32 5
  %22 = load i32, i32* %21, align 8
  %23 = sext i32 %22 to i64
  %24 = add i64 %19, %23
  %25 = load %struct._stritem*, %struct._stritem** %3, align 8
  %26 = getelementptr inbounds %struct._stritem, %struct._stritem* %25, i32 0, i32 7
  %27 = load i16, i16* %26, align 2
  %28 = zext i16 %27 to i32
  %29 = and i32 %28, 256
  %30 = icmp ne i32 %29, 0
  %31 = zext i1 %30 to i64
  %32 = select i1 %30, i64 4, i64 0
  %33 = add i64 %24, %32
  %34 = load %struct._stritem*, %struct._stritem** %3, align 8
  %35 = getelementptr inbounds %struct._stritem, %struct._stritem* %34, i32 0, i32 7
  %36 = load i16, i16* %35, align 2
  %37 = zext i16 %36 to i32
  %38 = and i32 %37, 2
  %39 = icmp ne i32 %38, 0
  %40 = zext i1 %39 to i64
  %41 = select i1 %39, i64 8, i64 0
  %42 = add i64 %33, %41
  %43 = load i64, i64* getelementptr inbounds (%struct.stats_state, %struct.stats_state* @stats_state, i32 0, i32 1), align 8
  %44 = add i64 %43, %42
  store i64 %44, i64* getelementptr inbounds (%struct.stats_state, %struct.stats_state* @stats_state, i32 0, i32 1), align 8
  %45 = load i64, i64* getelementptr inbounds (%struct.stats_state, %struct.stats_state* @stats_state, i32 0, i32 0), align 8
  %46 = add i64 %45, 1
  store i64 %46, i64* getelementptr inbounds (%struct.stats_state, %struct.stats_state* @stats_state, i32 0, i32 0), align 8
  %47 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 0), align 8
  %48 = add i64 %47, 1
  store i64 %48, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 0), align 8
  call void @STATS_UNLOCK()
  %49 = load %struct._stritem*, %struct._stritem** %3, align 8
  %50 = getelementptr inbounds %struct._stritem, %struct._stritem* %49, i32 0, i32 7
  %51 = load i16, i16* %50, align 2
  %52 = zext i16 %51 to i32
  %53 = and i32 %52, 2
  %54 = icmp ne i32 %53, 0
  br i1 %54, label %55, label %67

55:                                               ; preds = %2
  %56 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 19), align 8
  %57 = trunc i8 %56 to i1
  br i1 %57, label %58, label %60

58:                                               ; preds = %55
  %59 = call i64 @get_cas_id()
  br label %61

60:                                               ; preds = %55
  br label %61

61:                                               ; preds = %60, %58
  %62 = phi i64 [ %59, %58 ], [ 0, %60 ]
  %63 = load %struct._stritem*, %struct._stritem** %3, align 8
  %64 = getelementptr inbounds %struct._stritem, %struct._stritem* %63, i32 0, i32 10
  %65 = getelementptr inbounds [0 x %union.anon.10], [0 x %union.anon.10]* %64, i64 0, i64 0
  %66 = bitcast %union.anon.10* %65 to i64*
  store i64 %62, i64* %66, align 8
  br label %67

67:                                               ; preds = %61, %2
  %68 = load %struct._stritem*, %struct._stritem** %3, align 8
  %69 = load i32, i32* %4, align 4
  %70 = call i32 @assoc_insert(%struct._stritem* %68, i32 %69)
  %71 = load %struct._stritem*, %struct._stritem** %3, align 8
  call void @item_link_q(%struct._stritem* %71)
  %72 = load %struct._stritem*, %struct._stritem** %3, align 8
  %73 = getelementptr inbounds %struct._stritem, %struct._stritem* %72, i32 0, i32 6
  %74 = load i16, i16* %73, align 4
  %75 = add i16 %74, 1
  store i16 %75, i16* %73, align 4
  %76 = load %struct._stritem*, %struct._stritem** %3, align 8
  call void @item_stats_sizes_add(%struct._stritem* %76)
  ret i32 1
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @do_item_unlink(%struct._stritem* %0, i32 %1) #0 {
  %3 = alloca %struct._stritem*, align 8
  %4 = alloca i32, align 4
  store %struct._stritem* %0, %struct._stritem** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %struct._stritem*, %struct._stritem** %3, align 8
  %6 = getelementptr inbounds %struct._stritem, %struct._stritem* %5, i32 0, i32 7
  %7 = load i16, i16* %6, align 2
  %8 = zext i16 %7 to i32
  %9 = and i32 %8, 1
  %10 = icmp ne i32 %9, 0
  br i1 %10, label %11, label %71

11:                                               ; preds = %2
  %12 = load %struct._stritem*, %struct._stritem** %3, align 8
  %13 = getelementptr inbounds %struct._stritem, %struct._stritem* %12, i32 0, i32 7
  %14 = load i16, i16* %13, align 2
  %15 = zext i16 %14 to i32
  %16 = and i32 %15, -2
  %17 = trunc i32 %16 to i16
  store i16 %17, i16* %13, align 2
  call void @STATS_LOCK()
  %18 = load %struct._stritem*, %struct._stritem** %3, align 8
  %19 = getelementptr inbounds %struct._stritem, %struct._stritem* %18, i32 0, i32 9
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i64
  %22 = add i64 48, %21
  %23 = add i64 %22, 1
  %24 = load %struct._stritem*, %struct._stritem** %3, align 8
  %25 = getelementptr inbounds %struct._stritem, %struct._stritem* %24, i32 0, i32 5
  %26 = load i32, i32* %25, align 8
  %27 = sext i32 %26 to i64
  %28 = add i64 %23, %27
  %29 = load %struct._stritem*, %struct._stritem** %3, align 8
  %30 = getelementptr inbounds %struct._stritem, %struct._stritem* %29, i32 0, i32 7
  %31 = load i16, i16* %30, align 2
  %32 = zext i16 %31 to i32
  %33 = and i32 %32, 256
  %34 = icmp ne i32 %33, 0
  %35 = zext i1 %34 to i64
  %36 = select i1 %34, i64 4, i64 0
  %37 = add i64 %28, %36
  %38 = load %struct._stritem*, %struct._stritem** %3, align 8
  %39 = getelementptr inbounds %struct._stritem, %struct._stritem* %38, i32 0, i32 7
  %40 = load i16, i16* %39, align 2
  %41 = zext i16 %40 to i32
  %42 = and i32 %41, 2
  %43 = icmp ne i32 %42, 0
  %44 = zext i1 %43 to i64
  %45 = select i1 %43, i64 8, i64 0
  %46 = add i64 %37, %45
  %47 = load i64, i64* getelementptr inbounds (%struct.stats_state, %struct.stats_state* @stats_state, i32 0, i32 1), align 8
  %48 = sub i64 %47, %46
  store i64 %48, i64* getelementptr inbounds (%struct.stats_state, %struct.stats_state* @stats_state, i32 0, i32 1), align 8
  %49 = load i64, i64* getelementptr inbounds (%struct.stats_state, %struct.stats_state* @stats_state, i32 0, i32 0), align 8
  %50 = sub i64 %49, 1
  store i64 %50, i64* getelementptr inbounds (%struct.stats_state, %struct.stats_state* @stats_state, i32 0, i32 0), align 8
  call void @STATS_UNLOCK()
  %51 = load %struct._stritem*, %struct._stritem** %3, align 8
  call void @item_stats_sizes_remove(%struct._stritem* %51)
  %52 = load %struct._stritem*, %struct._stritem** %3, align 8
  %53 = getelementptr inbounds %struct._stritem, %struct._stritem* %52, i32 0, i32 10
  %54 = bitcast [0 x %union.anon.10]* %53 to i8*
  %55 = load %struct._stritem*, %struct._stritem** %3, align 8
  %56 = getelementptr inbounds %struct._stritem, %struct._stritem* %55, i32 0, i32 7
  %57 = load i16, i16* %56, align 2
  %58 = zext i16 %57 to i32
  %59 = and i32 %58, 2
  %60 = icmp ne i32 %59, 0
  %61 = zext i1 %60 to i64
  %62 = select i1 %60, i64 8, i64 0
  %63 = getelementptr inbounds i8, i8* %54, i64 %62
  %64 = load %struct._stritem*, %struct._stritem** %3, align 8
  %65 = getelementptr inbounds %struct._stritem, %struct._stritem* %64, i32 0, i32 9
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %66 to i64
  %68 = load i32, i32* %4, align 4
  call void @assoc_delete(i8* %63, i64 %67, i32 %68)
  %69 = load %struct._stritem*, %struct._stritem** %3, align 8
  call void @item_unlink_q(%struct._stritem* %69)
  %70 = load %struct._stritem*, %struct._stritem** %3, align 8
  call void @do_item_remove(%struct._stritem* %70)
  br label %71

71:                                               ; preds = %11, %2
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @item_unlink_q(%struct._stritem* %0) #0 {
  %2 = alloca %struct._stritem*, align 8
  store %struct._stritem* %0, %struct._stritem** %2, align 8
  %3 = load %struct._stritem*, %struct._stritem** %2, align 8
  %4 = getelementptr inbounds %struct._stritem, %struct._stritem* %3, i32 0, i32 8
  %5 = load i8, i8* %4, align 8
  %6 = zext i8 %5 to i64
  %7 = getelementptr inbounds [256 x %union.pthread_mutex_t], [256 x %union.pthread_mutex_t]* @lru_locks, i64 0, i64 %6
  %8 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %7) #14
  %9 = load %struct._stritem*, %struct._stritem** %2, align 8
  call void @do_item_unlink_q(%struct._stritem* %9)
  %10 = load %struct._stritem*, %struct._stritem** %2, align 8
  %11 = getelementptr inbounds %struct._stritem, %struct._stritem* %10, i32 0, i32 8
  %12 = load i8, i8* %11, align 8
  %13 = zext i8 %12 to i64
  %14 = getelementptr inbounds [256 x %union.pthread_mutex_t], [256 x %union.pthread_mutex_t]* @lru_locks, i64 0, i64 %13
  %15 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %14) #14
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @do_item_update(%struct._stritem* %0) #0 {
  %2 = alloca %struct._stritem*, align 8
  store %struct._stritem* %0, %struct._stritem** %2, align 8
  %3 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 30), align 8
  %4 = trunc i8 %3 to i1
  br i1 %4, label %5, label %58

5:                                                ; preds = %1
  %6 = load %struct._stritem*, %struct._stritem** %2, align 8
  %7 = getelementptr inbounds %struct._stritem, %struct._stritem* %6, i32 0, i32 7
  %8 = load i16, i16* %7, align 2
  %9 = zext i16 %8 to i32
  %10 = and i32 %9, 1
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %12, label %57

12:                                               ; preds = %5
  %13 = load %struct._stritem*, %struct._stritem** %2, align 8
  %14 = getelementptr inbounds %struct._stritem, %struct._stritem* %13, i32 0, i32 8
  %15 = load i8, i8* %14, align 8
  %16 = zext i8 %15 to i32
  %17 = and i32 %16, 192
  %18 = icmp eq i32 %17, 128
  br i1 %18, label %19, label %52

19:                                               ; preds = %12
  %20 = load %struct._stritem*, %struct._stritem** %2, align 8
  %21 = getelementptr inbounds %struct._stritem, %struct._stritem* %20, i32 0, i32 7
  %22 = load i16, i16* %21, align 2
  %23 = zext i16 %22 to i32
  %24 = and i32 %23, 16
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %26, label %52

26:                                               ; preds = %19
  %27 = load volatile i32, i32* @current_time, align 4
  %28 = load %struct._stritem*, %struct._stritem** %2, align 8
  %29 = getelementptr inbounds %struct._stritem, %struct._stritem* %28, i32 0, i32 3
  store i32 %27, i32* %29, align 8
  %30 = load %struct._stritem*, %struct._stritem** %2, align 8
  call void @item_unlink_q(%struct._stritem* %30)
  %31 = load %struct._stritem*, %struct._stritem** %2, align 8
  %32 = getelementptr inbounds %struct._stritem, %struct._stritem* %31, i32 0, i32 8
  %33 = load i8, i8* %32, align 8
  %34 = zext i8 %33 to i32
  %35 = and i32 %34, -193
  %36 = trunc i32 %35 to i8
  %37 = load %struct._stritem*, %struct._stritem** %2, align 8
  %38 = getelementptr inbounds %struct._stritem, %struct._stritem* %37, i32 0, i32 8
  store i8 %36, i8* %38, align 8
  %39 = load %struct._stritem*, %struct._stritem** %2, align 8
  %40 = getelementptr inbounds %struct._stritem, %struct._stritem* %39, i32 0, i32 8
  %41 = load i8, i8* %40, align 8
  %42 = zext i8 %41 to i32
  %43 = or i32 %42, 64
  %44 = trunc i32 %43 to i8
  store i8 %44, i8* %40, align 8
  %45 = load %struct._stritem*, %struct._stritem** %2, align 8
  %46 = getelementptr inbounds %struct._stritem, %struct._stritem* %45, i32 0, i32 7
  %47 = load i16, i16* %46, align 2
  %48 = zext i16 %47 to i32
  %49 = and i32 %48, -17
  %50 = trunc i32 %49 to i16
  store i16 %50, i16* %46, align 2
  %51 = load %struct._stritem*, %struct._stritem** %2, align 8
  call void @item_link_q_warm(%struct._stritem* %51)
  br label %56

52:                                               ; preds = %19, %12
  %53 = load volatile i32, i32* @current_time, align 4
  %54 = load %struct._stritem*, %struct._stritem** %2, align 8
  %55 = getelementptr inbounds %struct._stritem, %struct._stritem* %54, i32 0, i32 3
  store i32 %53, i32* %55, align 8
  br label %56

56:                                               ; preds = %52, %26
  br label %57

57:                                               ; preds = %56, %5
  br label %80

58:                                               ; preds = %1
  %59 = load %struct._stritem*, %struct._stritem** %2, align 8
  %60 = getelementptr inbounds %struct._stritem, %struct._stritem* %59, i32 0, i32 3
  %61 = load i32, i32* %60, align 8
  %62 = load volatile i32, i32* @current_time, align 4
  %63 = sub i32 %62, 60
  %64 = icmp ult i32 %61, %63
  br i1 %64, label %65, label %79

65:                                               ; preds = %58
  %66 = load %struct._stritem*, %struct._stritem** %2, align 8
  %67 = getelementptr inbounds %struct._stritem, %struct._stritem* %66, i32 0, i32 7
  %68 = load i16, i16* %67, align 2
  %69 = zext i16 %68 to i32
  %70 = and i32 %69, 1
  %71 = icmp ne i32 %70, 0
  br i1 %71, label %72, label %78

72:                                               ; preds = %65
  %73 = load volatile i32, i32* @current_time, align 4
  %74 = load %struct._stritem*, %struct._stritem** %2, align 8
  %75 = getelementptr inbounds %struct._stritem, %struct._stritem* %74, i32 0, i32 3
  store i32 %73, i32* %75, align 8
  %76 = load %struct._stritem*, %struct._stritem** %2, align 8
  call void @item_unlink_q(%struct._stritem* %76)
  %77 = load %struct._stritem*, %struct._stritem** %2, align 8
  call void @item_link_q(%struct._stritem* %77)
  br label %78

78:                                               ; preds = %72, %65
  br label %79

79:                                               ; preds = %78, %58
  br label %80

80:                                               ; preds = %79, %57
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @item_link_q_warm(%struct._stritem* %0) #0 {
  %2 = alloca %struct._stritem*, align 8
  store %struct._stritem* %0, %struct._stritem** %2, align 8
  %3 = load %struct._stritem*, %struct._stritem** %2, align 8
  %4 = getelementptr inbounds %struct._stritem, %struct._stritem* %3, i32 0, i32 8
  %5 = load i8, i8* %4, align 8
  %6 = zext i8 %5 to i64
  %7 = getelementptr inbounds [256 x %union.pthread_mutex_t], [256 x %union.pthread_mutex_t]* @lru_locks, i64 0, i64 %6
  %8 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %7) #14
  %9 = load %struct._stritem*, %struct._stritem** %2, align 8
  call void @do_item_link_q(%struct._stritem* %9)
  %10 = load %struct._stritem*, %struct._stritem** %2, align 8
  %11 = getelementptr inbounds %struct._stritem, %struct._stritem* %10, i32 0, i32 8
  %12 = load i8, i8* %11, align 8
  %13 = zext i8 %12 to i64
  %14 = getelementptr inbounds [256 x %struct.itemstats_t], [256 x %struct.itemstats_t]* @itemstats, i64 0, i64 %13
  %15 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %14, i32 0, i32 12
  %16 = load i64, i64* %15, align 8
  %17 = add i64 %16, 1
  store i64 %17, i64* %15, align 8
  %18 = load %struct._stritem*, %struct._stritem** %2, align 8
  %19 = getelementptr inbounds %struct._stritem, %struct._stritem* %18, i32 0, i32 8
  %20 = load i8, i8* %19, align 8
  %21 = zext i8 %20 to i64
  %22 = getelementptr inbounds [256 x %union.pthread_mutex_t], [256 x %union.pthread_mutex_t]* @lru_locks, i64 0, i64 %21
  %23 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %22) #14
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @do_item_replace(%struct._stritem* %0, %struct._stritem* %1, i32 %2) #0 {
  %4 = alloca %struct._stritem*, align 8
  %5 = alloca %struct._stritem*, align 8
  %6 = alloca i32, align 4
  store %struct._stritem* %0, %struct._stritem** %4, align 8
  store %struct._stritem* %1, %struct._stritem** %5, align 8
  store i32 %2, i32* %6, align 4
  %7 = load %struct._stritem*, %struct._stritem** %4, align 8
  %8 = load i32, i32* %6, align 4
  call void @do_item_unlink(%struct._stritem* %7, i32 %8)
  %9 = load %struct._stritem*, %struct._stritem** %5, align 8
  %10 = load i32, i32* %6, align 4
  %11 = call i32 @do_item_link(%struct._stritem* %9, i32 %10)
  ret i32 %11
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @item_cachedump(i32 %0, i32 %1, i32* %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca %struct._stritem*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca [251 x i8], align 16
  %15 = alloca [512 x i8], align 16
  %16 = alloca i32, align 4
  store i32 %0, i32* %5, align 4
  store i32 %1, i32* %6, align 4
  store i32* %2, i32** %7, align 8
  store i32 2097152, i32* %8, align 4
  store i32 0, i32* %13, align 4
  %17 = load i32, i32* %5, align 4
  store i32 %17, i32* %16, align 4
  %18 = load i32, i32* %16, align 4
  %19 = or i32 %18, 128
  store i32 %19, i32* %16, align 4
  %20 = load i32, i32* %16, align 4
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds [256 x %union.pthread_mutex_t], [256 x %union.pthread_mutex_t]* @lru_locks, i64 0, i64 %21
  %23 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %22) #14
  %24 = load i32, i32* %16, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds [256 x %struct._stritem*], [256 x %struct._stritem*]* @heads, i64 0, i64 %25
  %27 = load %struct._stritem*, %struct._stritem** %26, align 8
  store %struct._stritem* %27, %struct._stritem** %11, align 8
  %28 = load i32, i32* %8, align 4
  %29 = zext i32 %28 to i64
  %30 = call noalias i8* @malloc(i64 %29) #14
  store i8* %30, i8** %9, align 8
  %31 = load i8*, i8** %9, align 8
  %32 = icmp eq i8* %31, null
  br i1 %32, label %33, label %38

33:                                               ; preds = %3
  %34 = load i32, i32* %16, align 4
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds [256 x %union.pthread_mutex_t], [256 x %union.pthread_mutex_t]* @lru_locks, i64 0, i64 %35
  %37 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %36) #14
  store i8* null, i8** %4, align 8
  br label %157

38:                                               ; preds = %3
  store i32 0, i32* %10, align 4
  br label %39

39:                                               ; preds = %127, %71, %38
  %40 = load %struct._stritem*, %struct._stritem** %11, align 8
  %41 = icmp ne %struct._stritem* %40, null
  br i1 %41, label %42, label %51

42:                                               ; preds = %39
  %43 = load i32, i32* %6, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %49, label %45

45:                                               ; preds = %42
  %46 = load i32, i32* %13, align 4
  %47 = load i32, i32* %6, align 4
  %48 = icmp ult i32 %46, %47
  br label %49

49:                                               ; preds = %45, %42
  %50 = phi i1 [ true, %42 ], [ %48, %45 ]
  br label %51

51:                                               ; preds = %49, %39
  %52 = phi i1 [ false, %39 ], [ %50, %49 ]
  br i1 %52, label %53, label %143

53:                                               ; preds = %51
  %54 = load %struct._stritem*, %struct._stritem** %11, align 8
  %55 = getelementptr inbounds %struct._stritem, %struct._stritem* %54, i32 0, i32 5
  %56 = load i32, i32* %55, align 8
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %64

58:                                               ; preds = %53
  %59 = load %struct._stritem*, %struct._stritem** %11, align 8
  %60 = getelementptr inbounds %struct._stritem, %struct._stritem* %59, i32 0, i32 9
  %61 = load i8, i8* %60, align 1
  %62 = zext i8 %61 to i32
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %71, label %64

64:                                               ; preds = %58, %53
  %65 = load %struct._stritem*, %struct._stritem** %11, align 8
  %66 = getelementptr inbounds %struct._stritem, %struct._stritem* %65, i32 0, i32 7
  %67 = load i16, i16* %66, align 2
  %68 = zext i16 %67 to i32
  %69 = and i32 %68, 4096
  %70 = icmp ne i32 %69, 0
  br i1 %70, label %71, label %75

71:                                               ; preds = %64, %58
  %72 = load %struct._stritem*, %struct._stritem** %11, align 8
  %73 = getelementptr inbounds %struct._stritem, %struct._stritem* %72, i32 0, i32 0
  %74 = load %struct._stritem*, %struct._stritem** %73, align 8
  store %struct._stritem* %74, %struct._stritem** %11, align 8
  br label %39, !llvm.loop !70

75:                                               ; preds = %64
  %76 = getelementptr inbounds [251 x i8], [251 x i8]* %14, i64 0, i64 0
  %77 = load %struct._stritem*, %struct._stritem** %11, align 8
  %78 = getelementptr inbounds %struct._stritem, %struct._stritem* %77, i32 0, i32 10
  %79 = bitcast [0 x %union.anon.10]* %78 to i8*
  %80 = load %struct._stritem*, %struct._stritem** %11, align 8
  %81 = getelementptr inbounds %struct._stritem, %struct._stritem* %80, i32 0, i32 7
  %82 = load i16, i16* %81, align 2
  %83 = zext i16 %82 to i32
  %84 = and i32 %83, 2
  %85 = icmp ne i32 %84, 0
  %86 = zext i1 %85 to i64
  %87 = select i1 %85, i64 8, i64 0
  %88 = getelementptr inbounds i8, i8* %79, i64 %87
  %89 = load %struct._stritem*, %struct._stritem** %11, align 8
  %90 = getelementptr inbounds %struct._stritem, %struct._stritem* %89, i32 0, i32 9
  %91 = load i8, i8* %90, align 1
  %92 = zext i8 %91 to i64
  %93 = call i8* @strncpy(i8* %76, i8* %88, i64 %92) #14
  %94 = load %struct._stritem*, %struct._stritem** %11, align 8
  %95 = getelementptr inbounds %struct._stritem, %struct._stritem* %94, i32 0, i32 9
  %96 = load i8, i8* %95, align 1
  %97 = zext i8 %96 to i64
  %98 = getelementptr inbounds [251 x i8], [251 x i8]* %14, i64 0, i64 %97
  store i8 0, i8* %98, align 1
  %99 = getelementptr inbounds [512 x i8], [512 x i8]* %15, i64 0, i64 0
  %100 = getelementptr inbounds [251 x i8], [251 x i8]* %14, i64 0, i64 0
  %101 = load %struct._stritem*, %struct._stritem** %11, align 8
  %102 = getelementptr inbounds %struct._stritem, %struct._stritem* %101, i32 0, i32 5
  %103 = load i32, i32* %102, align 8
  %104 = sub nsw i32 %103, 2
  %105 = load %struct._stritem*, %struct._stritem** %11, align 8
  %106 = getelementptr inbounds %struct._stritem, %struct._stritem* %105, i32 0, i32 4
  %107 = load i32, i32* %106, align 4
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %110

109:                                              ; preds = %75
  br label %117

110:                                              ; preds = %75
  %111 = load %struct._stritem*, %struct._stritem** %11, align 8
  %112 = getelementptr inbounds %struct._stritem, %struct._stritem* %111, i32 0, i32 4
  %113 = load i32, i32* %112, align 4
  %114 = zext i32 %113 to i64
  %115 = load i64, i64* @process_started, align 8
  %116 = add i64 %114, %115
  br label %117

117:                                              ; preds = %110, %109
  %118 = phi i64 [ 0, %109 ], [ %116, %110 ]
  %119 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %99, i64 512, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.590, i64 0, i64 0), i8* %100, i32 %104, i64 %118) #14
  store i32 %119, i32* %12, align 4
  %120 = load i32, i32* %10, align 4
  %121 = load i32, i32* %12, align 4
  %122 = add i32 %120, %121
  %123 = add i32 %122, 6
  %124 = load i32, i32* %8, align 4
  %125 = icmp ugt i32 %123, %124
  br i1 %125, label %126, label %127

126:                                              ; preds = %117
  br label %143

127:                                              ; preds = %117
  %128 = load i8*, i8** %9, align 8
  %129 = load i32, i32* %10, align 4
  %130 = zext i32 %129 to i64
  %131 = getelementptr inbounds i8, i8* %128, i64 %130
  %132 = getelementptr inbounds [512 x i8], [512 x i8]* %15, i64 0, i64 0
  %133 = load i32, i32* %12, align 4
  %134 = zext i32 %133 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %131, i8* align 16 %132, i64 %134, i1 false)
  %135 = load i32, i32* %12, align 4
  %136 = load i32, i32* %10, align 4
  %137 = add i32 %136, %135
  store i32 %137, i32* %10, align 4
  %138 = load i32, i32* %13, align 4
  %139 = add i32 %138, 1
  store i32 %139, i32* %13, align 4
  %140 = load %struct._stritem*, %struct._stritem** %11, align 8
  %141 = getelementptr inbounds %struct._stritem, %struct._stritem* %140, i32 0, i32 0
  %142 = load %struct._stritem*, %struct._stritem** %141, align 8
  store %struct._stritem* %142, %struct._stritem** %11, align 8
  br label %39, !llvm.loop !70

143:                                              ; preds = %126, %51
  %144 = load i8*, i8** %9, align 8
  %145 = load i32, i32* %10, align 4
  %146 = zext i32 %145 to i64
  %147 = getelementptr inbounds i8, i8* %144, i64 %146
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %147, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.591, i64 0, i64 0), i64 6, i1 false)
  %148 = load i32, i32* %10, align 4
  %149 = add i32 %148, 5
  store i32 %149, i32* %10, align 4
  %150 = load i32, i32* %10, align 4
  %151 = load i32*, i32** %7, align 8
  store i32 %150, i32* %151, align 4
  %152 = load i32, i32* %16, align 4
  %153 = zext i32 %152 to i64
  %154 = getelementptr inbounds [256 x %union.pthread_mutex_t], [256 x %union.pthread_mutex_t]* @lru_locks, i64 0, i64 %153
  %155 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %154) #14
  %156 = load i8*, i8** %9, align 8
  store i8* %156, i8** %4, align 8
  br label %157

157:                                              ; preds = %143, %33
  %158 = load i8*, i8** %4, align 8
  ret i8* %158
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @fill_item_stats_automove(%struct.item_stats_automove* %0) #0 {
  %2 = alloca %struct.item_stats_automove*, align 8
  %3 = alloca i32, align 4
  %4 = alloca %struct.item_stats_automove*, align 8
  %5 = alloca i32, align 4
  store %struct.item_stats_automove* %0, %struct.item_stats_automove** %2, align 8
  store i32 0, i32* %3, align 4
  br label %6

6:                                                ; preds = %67, %1
  %7 = load i32, i32* %3, align 4
  %8 = icmp slt i32 %7, 64
  br i1 %8, label %9, label %70

9:                                                ; preds = %6
  %10 = load %struct.item_stats_automove*, %struct.item_stats_automove** %2, align 8
  %11 = load i32, i32* %3, align 4
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds %struct.item_stats_automove, %struct.item_stats_automove* %10, i64 %12
  store %struct.item_stats_automove* %13, %struct.item_stats_automove** %4, align 8
  %14 = load i32, i32* %3, align 4
  store i32 %14, i32* %5, align 4
  %15 = load i32, i32* %5, align 4
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds [256 x %union.pthread_mutex_t], [256 x %union.pthread_mutex_t]* @lru_locks, i64 0, i64 %16
  %18 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %17) #14
  %19 = load i32, i32* %5, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds [256 x %struct.itemstats_t], [256 x %struct.itemstats_t]* @itemstats, i64 0, i64 %20
  %22 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %21, i32 0, i32 3
  %23 = load i64, i64* %22, align 8
  %24 = load %struct.item_stats_automove*, %struct.item_stats_automove** %4, align 8
  %25 = getelementptr inbounds %struct.item_stats_automove, %struct.item_stats_automove* %24, i32 0, i32 1
  store i64 %23, i64* %25, align 8
  %26 = load i32, i32* %5, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [256 x %union.pthread_mutex_t], [256 x %union.pthread_mutex_t]* @lru_locks, i64 0, i64 %27
  %29 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %28) #14
  %30 = load i32, i32* %3, align 4
  %31 = or i32 %30, 128
  store i32 %31, i32* %5, align 4
  %32 = load i32, i32* %5, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds [256 x %union.pthread_mutex_t], [256 x %union.pthread_mutex_t]* @lru_locks, i64 0, i64 %33
  %35 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %34) #14
  %36 = load i32, i32* %5, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds [256 x %struct.itemstats_t], [256 x %struct.itemstats_t]* @itemstats, i64 0, i64 %37
  %39 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %38, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = load %struct.item_stats_automove*, %struct.item_stats_automove** %4, align 8
  %42 = getelementptr inbounds %struct.item_stats_automove, %struct.item_stats_automove* %41, i32 0, i32 0
  store i64 %40, i64* %42, align 8
  %43 = load i32, i32* %5, align 4
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds [256 x %struct._stritem*], [256 x %struct._stritem*]* @tails, i64 0, i64 %44
  %46 = load %struct._stritem*, %struct._stritem** %45, align 8
  %47 = icmp ne %struct._stritem* %46, null
  br i1 %47, label %48, label %59

48:                                               ; preds = %9
  %49 = load volatile i32, i32* @current_time, align 4
  %50 = load i32, i32* %5, align 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds [256 x %struct._stritem*], [256 x %struct._stritem*]* @tails, i64 0, i64 %51
  %53 = load %struct._stritem*, %struct._stritem** %52, align 8
  %54 = getelementptr inbounds %struct._stritem, %struct._stritem* %53, i32 0, i32 3
  %55 = load i32, i32* %54, align 8
  %56 = sub i32 %49, %55
  %57 = load %struct.item_stats_automove*, %struct.item_stats_automove** %4, align 8
  %58 = getelementptr inbounds %struct.item_stats_automove, %struct.item_stats_automove* %57, i32 0, i32 2
  store i32 %56, i32* %58, align 8
  br label %62

59:                                               ; preds = %9
  %60 = load %struct.item_stats_automove*, %struct.item_stats_automove** %4, align 8
  %61 = getelementptr inbounds %struct.item_stats_automove, %struct.item_stats_automove* %60, i32 0, i32 2
  store i32 0, i32* %61, align 8
  br label %62

62:                                               ; preds = %59, %48
  %63 = load i32, i32* %5, align 4
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds [256 x %union.pthread_mutex_t], [256 x %union.pthread_mutex_t]* @lru_locks, i64 0, i64 %64
  %66 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %65) #14
  br label %67

67:                                               ; preds = %62
  %68 = load i32, i32* %3, align 4
  %69 = add nsw i32 %68, 1
  store i32 %69, i32* %3, align 4
  br label %6, !llvm.loop !71

70:                                               ; preds = %6
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @item_stats_totals(void (i8*, i16, i8*, i32, i8*)* %0, i8* %1) #0 {
  %3 = alloca void (i8*, i16, i8*, i32, i8*)*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %struct.itemstats_t, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store void (i8*, i16, i8*, i32, i8*)* %0, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  store i8* %1, i8** %4, align 8
  %9 = bitcast %struct.itemstats_t* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 168, i1 false)
  store i32 0, i32* %6, align 4
  br label %10

10:                                               ; preds = %132, %2
  %11 = load i32, i32* %6, align 4
  %12 = icmp slt i32 %11, 64
  br i1 %12, label %13, label %135

13:                                               ; preds = %10
  store i32 0, i32* %7, align 4
  br label %14

14:                                               ; preds = %128, %13
  %15 = load i32, i32* %7, align 4
  %16 = icmp slt i32 %15, 4
  br i1 %16, label %17, label %131

17:                                               ; preds = %14
  %18 = load i32, i32* %6, align 4
  %19 = load i32, i32* %7, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds [4 x i32], [4 x i32]* @lru_type_map, i64 0, i64 %20
  %22 = load i32, i32* %21, align 4
  %23 = or i32 %18, %22
  store i32 %23, i32* %8, align 4
  %24 = load i32, i32* %8, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [256 x %union.pthread_mutex_t], [256 x %union.pthread_mutex_t]* @lru_locks, i64 0, i64 %25
  %27 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %26) #14
  %28 = load i32, i32* %8, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds [256 x %struct.itemstats_t], [256 x %struct.itemstats_t]* @itemstats, i64 0, i64 %29
  %31 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %30, i32 0, i32 5
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %5, i32 0, i32 5
  %34 = load i64, i64* %33, align 8
  %35 = add i64 %34, %32
  store i64 %35, i64* %33, align 8
  %36 = load i32, i32* %8, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds [256 x %struct.itemstats_t], [256 x %struct.itemstats_t]* @itemstats, i64 0, i64 %37
  %39 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %38, i32 0, i32 6
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %5, i32 0, i32 6
  %42 = load i64, i64* %41, align 8
  %43 = add i64 %42, %40
  store i64 %43, i64* %41, align 8
  %44 = load i32, i32* %8, align 4
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds [256 x %struct.itemstats_t], [256 x %struct.itemstats_t]* @itemstats, i64 0, i64 %45
  %47 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %46, i32 0, i32 7
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %5, i32 0, i32 7
  %50 = load i64, i64* %49, align 8
  %51 = add i64 %50, %48
  store i64 %51, i64* %49, align 8
  %52 = load i32, i32* %8, align 4
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds [256 x %struct.itemstats_t], [256 x %struct.itemstats_t]* @itemstats, i64 0, i64 %53
  %55 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %54, i32 0, i32 0
  %56 = load i64, i64* %55, align 8
  %57 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %5, i32 0, i32 0
  %58 = load i64, i64* %57, align 8
  %59 = add i64 %58, %56
  store i64 %59, i64* %57, align 8
  %60 = load i32, i32* %8, align 4
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds [256 x %struct.itemstats_t], [256 x %struct.itemstats_t]* @itemstats, i64 0, i64 %61
  %63 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %62, i32 0, i32 2
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %5, i32 0, i32 2
  %66 = load i64, i64* %65, align 8
  %67 = add i64 %66, %64
  store i64 %67, i64* %65, align 8
  %68 = load i32, i32* %8, align 4
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds [256 x %struct.itemstats_t], [256 x %struct.itemstats_t]* @itemstats, i64 0, i64 %69
  %71 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %70, i32 0, i32 8
  %72 = load i64, i64* %71, align 8
  %73 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %5, i32 0, i32 8
  %74 = load i64, i64* %73, align 8
  %75 = add i64 %74, %72
  store i64 %75, i64* %73, align 8
  %76 = load i32, i32* %8, align 4
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds [256 x %struct.itemstats_t], [256 x %struct.itemstats_t]* @itemstats, i64 0, i64 %77
  %79 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %78, i32 0, i32 9
  %80 = load i64, i64* %79, align 8
  %81 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %5, i32 0, i32 9
  %82 = load i64, i64* %81, align 8
  %83 = add i64 %82, %80
  store i64 %83, i64* %81, align 8
  %84 = load i32, i32* %8, align 4
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds [256 x %struct.itemstats_t], [256 x %struct.itemstats_t]* @itemstats, i64 0, i64 %85
  %87 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %86, i32 0, i32 10
  %88 = load i64, i64* %87, align 8
  %89 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %5, i32 0, i32 10
  %90 = load i64, i64* %89, align 8
  %91 = add i64 %90, %88
  store i64 %91, i64* %89, align 8
  %92 = load i32, i32* %8, align 4
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds [256 x %struct.itemstats_t], [256 x %struct.itemstats_t]* @itemstats, i64 0, i64 %93
  %95 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %94, i32 0, i32 11
  %96 = load i64, i64* %95, align 8
  %97 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %5, i32 0, i32 11
  %98 = load i64, i64* %97, align 8
  %99 = add i64 %98, %96
  store i64 %99, i64* %97, align 8
  %100 = load i32, i32* %8, align 4
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds [256 x %struct.itemstats_t], [256 x %struct.itemstats_t]* @itemstats, i64 0, i64 %101
  %103 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %102, i32 0, i32 12
  %104 = load i64, i64* %103, align 8
  %105 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %5, i32 0, i32 12
  %106 = load i64, i64* %105, align 8
  %107 = add i64 %106, %104
  store i64 %107, i64* %105, align 8
  %108 = load i32, i32* %8, align 4
  %109 = sext i32 %108 to i64
  %110 = getelementptr inbounds [256 x %struct.itemstats_t], [256 x %struct.itemstats_t]* @itemstats, i64 0, i64 %109
  %111 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %110, i32 0, i32 13
  %112 = load i64, i64* %111, align 8
  %113 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %5, i32 0, i32 13
  %114 = load i64, i64* %113, align 8
  %115 = add i64 %114, %112
  store i64 %115, i64* %113, align 8
  %116 = load i32, i32* %8, align 4
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds [256 x %struct.itemstats_t], [256 x %struct.itemstats_t]* @itemstats, i64 0, i64 %117
  %119 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %118, i32 0, i32 14
  %120 = load i64, i64* %119, align 8
  %121 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %5, i32 0, i32 14
  %122 = load i64, i64* %121, align 8
  %123 = add i64 %122, %120
  store i64 %123, i64* %121, align 8
  %124 = load i32, i32* %8, align 4
  %125 = sext i32 %124 to i64
  %126 = getelementptr inbounds [256 x %union.pthread_mutex_t], [256 x %union.pthread_mutex_t]* @lru_locks, i64 0, i64 %125
  %127 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %126) #14
  br label %128

128:                                              ; preds = %17
  %129 = load i32, i32* %7, align 4
  %130 = add nsw i32 %129, 1
  store i32 %130, i32* %7, align 4
  br label %14, !llvm.loop !72

131:                                              ; preds = %14
  br label %132

132:                                              ; preds = %131
  %133 = load i32, i32* %6, align 4
  %134 = add nsw i32 %133, 1
  store i32 %134, i32* %6, align 4
  br label %10, !llvm.loop !73

135:                                              ; preds = %10
  %136 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %137 = load i8*, i8** %4, align 8
  %138 = bitcast i8* %137 to %struct.conn*
  %139 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %5, i32 0, i32 5
  %140 = load i64, i64* %139, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2.594, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %136, %struct.conn* %138, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.595, i64 0, i64 0), i64 %140)
  %141 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %142 = load i8*, i8** %4, align 8
  %143 = bitcast i8* %142 to %struct.conn*
  %144 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %5, i32 0, i32 6
  %145 = load i64, i64* %144, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4.596, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %141, %struct.conn* %143, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.595, i64 0, i64 0), i64 %145)
  %146 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 29), align 1
  %147 = trunc i8 %146 to i1
  br i1 %147, label %148, label %154

148:                                              ; preds = %135
  %149 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %150 = load i8*, i8** %4, align 8
  %151 = bitcast i8* %150 to %struct.conn*
  %152 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %5, i32 0, i32 7
  %153 = load i64, i64* %152, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5.597, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %149, %struct.conn* %151, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.595, i64 0, i64 0), i64 %153)
  br label %154

154:                                              ; preds = %148, %135
  %155 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %156 = load i8*, i8** %4, align 8
  %157 = bitcast i8* %156 to %struct.conn*
  %158 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %5, i32 0, i32 0
  %159 = load i64, i64* %158, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6.598, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %155, %struct.conn* %157, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.595, i64 0, i64 0), i64 %159)
  %160 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %161 = load i8*, i8** %4, align 8
  %162 = bitcast i8* %161 to %struct.conn*
  %163 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %5, i32 0, i32 2
  %164 = load i64, i64* %163, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7.599, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %160, %struct.conn* %162, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.595, i64 0, i64 0), i64 %164)
  %165 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %166 = load i8*, i8** %4, align 8
  %167 = bitcast i8* %166 to %struct.conn*
  %168 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %5, i32 0, i32 8
  %169 = load i64, i64* %168, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8.600, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %165, %struct.conn* %167, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.595, i64 0, i64 0), i64 %169)
  %170 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %171 = load i8*, i8** %4, align 8
  %172 = bitcast i8* %171 to %struct.conn*
  %173 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %5, i32 0, i32 9
  %174 = load i64, i64* %173, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.9.601, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %170, %struct.conn* %172, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.595, i64 0, i64 0), i64 %174)
  %175 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %176 = load i8*, i8** %4, align 8
  %177 = bitcast i8* %176 to %struct.conn*
  %178 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %5, i32 0, i32 10
  %179 = load i64, i64* %178, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10.602, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %175, %struct.conn* %177, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.595, i64 0, i64 0), i64 %179)
  %180 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 29), align 1
  %181 = trunc i8 %180 to i1
  br i1 %181, label %182, label %207

182:                                              ; preds = %154
  %183 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %184 = load i8*, i8** %4, align 8
  %185 = bitcast i8* %184 to %struct.conn*
  %186 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %5, i32 0, i32 11
  %187 = load i64, i64* %186, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11.603, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %183, %struct.conn* %185, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.595, i64 0, i64 0), i64 %187)
  %188 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %189 = load i8*, i8** %4, align 8
  %190 = bitcast i8* %189 to %struct.conn*
  %191 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %5, i32 0, i32 12
  %192 = load i64, i64* %191, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.12.604, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %188, %struct.conn* %190, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.595, i64 0, i64 0), i64 %192)
  %193 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %194 = load i8*, i8** %4, align 8
  %195 = bitcast i8* %194 to %struct.conn*
  %196 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %5, i32 0, i32 13
  %197 = load i64, i64* %196, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.13.605, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %193, %struct.conn* %195, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.595, i64 0, i64 0), i64 %197)
  %198 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %199 = load i8*, i8** %4, align 8
  %200 = bitcast i8* %199 to %struct.conn*
  %201 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %5, i32 0, i32 14
  %202 = load i64, i64* %201, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.14.606, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %198, %struct.conn* %200, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.595, i64 0, i64 0), i64 %202)
  %203 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %204 = load i8*, i8** %4, align 8
  %205 = bitcast i8* %204 to %struct.conn*
  %206 = call i64 @lru_total_bumps_dropped()
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.15.607, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %203, %struct.conn* %205, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.595, i64 0, i64 0), i64 %206)
  br label %207

207:                                              ; preds = %182, %154
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @lru_total_bumps_dropped() #0 {
  %1 = alloca i64, align 8
  %2 = alloca %struct._lru_bump_buf*, align 8
  store i64 0, i64* %1, align 8
  %3 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @bump_buf_lock) #14
  %4 = load %struct._lru_bump_buf*, %struct._lru_bump_buf** @bump_buf_head, align 8
  store %struct._lru_bump_buf* %4, %struct._lru_bump_buf** %2, align 8
  br label %5

5:                                                ; preds = %20, %0
  %6 = load %struct._lru_bump_buf*, %struct._lru_bump_buf** %2, align 8
  %7 = icmp ne %struct._lru_bump_buf* %6, null
  br i1 %7, label %8, label %24

8:                                                ; preds = %5
  %9 = load %struct._lru_bump_buf*, %struct._lru_bump_buf** %2, align 8
  %10 = getelementptr inbounds %struct._lru_bump_buf, %struct._lru_bump_buf* %9, i32 0, i32 2
  %11 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %10) #14
  %12 = load %struct._lru_bump_buf*, %struct._lru_bump_buf** %2, align 8
  %13 = getelementptr inbounds %struct._lru_bump_buf, %struct._lru_bump_buf* %12, i32 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = load i64, i64* %1, align 8
  %16 = add i64 %15, %14
  store i64 %16, i64* %1, align 8
  %17 = load %struct._lru_bump_buf*, %struct._lru_bump_buf** %2, align 8
  %18 = getelementptr inbounds %struct._lru_bump_buf, %struct._lru_bump_buf* %17, i32 0, i32 2
  %19 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %18) #14
  br label %20

20:                                               ; preds = %8
  %21 = load %struct._lru_bump_buf*, %struct._lru_bump_buf** %2, align 8
  %22 = getelementptr inbounds %struct._lru_bump_buf, %struct._lru_bump_buf* %21, i32 0, i32 1
  %23 = load %struct._lru_bump_buf*, %struct._lru_bump_buf** %22, align 8
  store %struct._lru_bump_buf* %23, %struct._lru_bump_buf** %2, align 8
  br label %5, !llvm.loop !74

24:                                               ; preds = %5
  %25 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @bump_buf_lock) #14
  %26 = load i64, i64* %1, align 8
  ret i64 %26
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @item_stats(void (i8*, i16, i8*, i32, i8*)* %0, i8* %1) #0 {
  %3 = alloca void (i8*, i16, i8*, i32, i8*)*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %struct.thread_stats, align 8
  %6 = alloca %struct.itemstats_t, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca [4 x i32], align 16
  %15 = alloca i8*, align 8
  %16 = alloca [128 x i8], align 16
  %17 = alloca [128 x i8], align 16
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  store void (i8*, i16, i8*, i32, i8*)* %0, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  store i8* %1, i8** %4, align 8
  call void @threadlocal_stats_aggregate(%struct.thread_stats* %5)
  store i32 0, i32* %7, align 4
  br label %20

20:                                               ; preds = %749, %2
  %21 = load i32, i32* %7, align 4
  %22 = icmp slt i32 %21, 64
  br i1 %22, label %23, label %752

23:                                               ; preds = %20
  %24 = bitcast %struct.itemstats_t* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 168, i1 false)
  store i32 0, i32* %10, align 4
  store i32 0, i32* %11, align 4
  store i32 0, i32* %12, align 4
  store i32 0, i32* %13, align 4
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.16.610, i64 0, i64 0), i8** %15, align 8
  store i32 0, i32* %18, align 4
  store i32 0, i32* %19, align 4
  store i32 0, i32* %8, align 4
  br label %25

25:                                               ; preds = %294, %23
  %26 = load i32, i32* %8, align 4
  %27 = icmp slt i32 %26, 4
  br i1 %27, label %28, label %297

28:                                               ; preds = %25
  %29 = load i32, i32* %7, align 4
  %30 = load i32, i32* %8, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds [4 x i32], [4 x i32]* @lru_type_map, i64 0, i64 %31
  %33 = load i32, i32* %32, align 4
  %34 = or i32 %29, %33
  store i32 %34, i32* %9, align 4
  %35 = load i32, i32* %9, align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds [256 x %union.pthread_mutex_t], [256 x %union.pthread_mutex_t]* @lru_locks, i64 0, i64 %36
  %38 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %37) #14
  %39 = load i32, i32* %9, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds [256 x %struct.itemstats_t], [256 x %struct.itemstats_t]* @itemstats, i64 0, i64 %40
  %42 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %41, i32 0, i32 0
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %6, i32 0, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = add i64 %45, %43
  store i64 %46, i64* %44, align 8
  %47 = load i32, i32* %9, align 4
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds [256 x %struct.itemstats_t], [256 x %struct.itemstats_t]* @itemstats, i64 0, i64 %48
  %50 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %49, i32 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %6, i32 0, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = add i64 %53, %51
  store i64 %54, i64* %52, align 8
  %55 = load i32, i32* %9, align 4
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds [256 x %struct.itemstats_t], [256 x %struct.itemstats_t]* @itemstats, i64 0, i64 %56
  %58 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %57, i32 0, i32 3
  %59 = load i64, i64* %58, align 8
  %60 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %6, i32 0, i32 3
  %61 = load i64, i64* %60, align 8
  %62 = add i64 %61, %59
  store i64 %62, i64* %60, align 8
  %63 = load i32, i32* %9, align 4
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds [256 x %struct.itemstats_t], [256 x %struct.itemstats_t]* @itemstats, i64 0, i64 %64
  %66 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %65, i32 0, i32 4
  %67 = load i64, i64* %66, align 8
  %68 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %6, i32 0, i32 4
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, %67
  store i64 %70, i64* %68, align 8
  %71 = load i32, i32* %9, align 4
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds [256 x %struct.itemstats_t], [256 x %struct.itemstats_t]* @itemstats, i64 0, i64 %72
  %74 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %73, i32 0, i32 2
  %75 = load i64, i64* %74, align 8
  %76 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %6, i32 0, i32 2
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, %75
  store i64 %78, i64* %76, align 8
  %79 = load i32, i32* %9, align 4
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds [256 x %struct.itemstats_t], [256 x %struct.itemstats_t]* @itemstats, i64 0, i64 %80
  %82 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %81, i32 0, i32 5
  %83 = load i64, i64* %82, align 8
  %84 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %6, i32 0, i32 5
  %85 = load i64, i64* %84, align 8
  %86 = add i64 %85, %83
  store i64 %86, i64* %84, align 8
  %87 = load i32, i32* %9, align 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds [256 x %struct.itemstats_t], [256 x %struct.itemstats_t]* @itemstats, i64 0, i64 %88
  %90 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %89, i32 0, i32 6
  %91 = load i64, i64* %90, align 8
  %92 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %6, i32 0, i32 6
  %93 = load i64, i64* %92, align 8
  %94 = add i64 %93, %91
  store i64 %94, i64* %92, align 8
  %95 = load i32, i32* %9, align 4
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds [256 x %struct.itemstats_t], [256 x %struct.itemstats_t]* @itemstats, i64 0, i64 %96
  %98 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %97, i32 0, i32 7
  %99 = load i64, i64* %98, align 8
  %100 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %6, i32 0, i32 7
  %101 = load i64, i64* %100, align 8
  %102 = add i64 %101, %99
  store i64 %102, i64* %100, align 8
  %103 = load i32, i32* %9, align 4
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds [256 x %struct.itemstats_t], [256 x %struct.itemstats_t]* @itemstats, i64 0, i64 %104
  %106 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %105, i32 0, i32 8
  %107 = load i64, i64* %106, align 8
  %108 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %6, i32 0, i32 8
  %109 = load i64, i64* %108, align 8
  %110 = add i64 %109, %107
  store i64 %110, i64* %108, align 8
  %111 = load i32, i32* %9, align 4
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds [256 x %struct.itemstats_t], [256 x %struct.itemstats_t]* @itemstats, i64 0, i64 %112
  %114 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %113, i32 0, i32 9
  %115 = load i64, i64* %114, align 8
  %116 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %6, i32 0, i32 9
  %117 = load i64, i64* %116, align 8
  %118 = add i64 %117, %115
  store i64 %118, i64* %116, align 8
  %119 = load i32, i32* %9, align 4
  %120 = sext i32 %119 to i64
  %121 = getelementptr inbounds [256 x %struct.itemstats_t], [256 x %struct.itemstats_t]* @itemstats, i64 0, i64 %120
  %122 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %121, i32 0, i32 10
  %123 = load i64, i64* %122, align 8
  %124 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %6, i32 0, i32 10
  %125 = load i64, i64* %124, align 8
  %126 = add i64 %125, %123
  store i64 %126, i64* %124, align 8
  %127 = load i32, i32* %9, align 4
  %128 = sext i32 %127 to i64
  %129 = getelementptr inbounds [256 x %struct.itemstats_t], [256 x %struct.itemstats_t]* @itemstats, i64 0, i64 %128
  %130 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %129, i32 0, i32 11
  %131 = load i64, i64* %130, align 8
  %132 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %6, i32 0, i32 11
  %133 = load i64, i64* %132, align 8
  %134 = add i64 %133, %131
  store i64 %134, i64* %132, align 8
  %135 = load i32, i32* %9, align 4
  %136 = sext i32 %135 to i64
  %137 = getelementptr inbounds [256 x %struct.itemstats_t], [256 x %struct.itemstats_t]* @itemstats, i64 0, i64 %136
  %138 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %137, i32 0, i32 12
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %6, i32 0, i32 12
  %141 = load i64, i64* %140, align 8
  %142 = add i64 %141, %139
  store i64 %142, i64* %140, align 8
  %143 = load i32, i32* %9, align 4
  %144 = sext i32 %143 to i64
  %145 = getelementptr inbounds [256 x %struct.itemstats_t], [256 x %struct.itemstats_t]* @itemstats, i64 0, i64 %144
  %146 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %145, i32 0, i32 13
  %147 = load i64, i64* %146, align 8
  %148 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %6, i32 0, i32 13
  %149 = load i64, i64* %148, align 8
  %150 = add i64 %149, %147
  store i64 %150, i64* %148, align 8
  %151 = load i32, i32* %9, align 4
  %152 = sext i32 %151 to i64
  %153 = getelementptr inbounds [256 x %struct.itemstats_t], [256 x %struct.itemstats_t]* @itemstats, i64 0, i64 %152
  %154 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %153, i32 0, i32 14
  %155 = load i64, i64* %154, align 8
  %156 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %6, i32 0, i32 14
  %157 = load i64, i64* %156, align 8
  %158 = add i64 %157, %155
  store i64 %158, i64* %156, align 8
  %159 = load i32, i32* %9, align 4
  %160 = sext i32 %159 to i64
  %161 = getelementptr inbounds [256 x i64], [256 x i64]* @sizes_bytes, i64 0, i64 %160
  %162 = load i64, i64* %161, align 8
  %163 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %6, i32 0, i32 19
  %164 = load i64, i64* %163, align 8
  %165 = add i64 %164, %162
  store i64 %165, i64* %163, align 8
  %166 = load i32, i32* %9, align 4
  %167 = sext i32 %166 to i64
  %168 = getelementptr inbounds [256 x i32], [256 x i32]* @sizes, i64 0, i64 %167
  %169 = load i32, i32* %168, align 4
  %170 = load i32, i32* %10, align 4
  %171 = add i32 %170, %169
  store i32 %171, i32* %10, align 4
  %172 = load i32, i32* %9, align 4
  %173 = sext i32 %172 to i64
  %174 = getelementptr inbounds [256 x i32], [256 x i32]* @sizes, i64 0, i64 %173
  %175 = load i32, i32* %174, align 4
  %176 = load i32, i32* %8, align 4
  %177 = sext i32 %176 to i64
  %178 = getelementptr inbounds [4 x i32], [4 x i32]* %14, i64 0, i64 %177
  store i32 %175, i32* %178, align 4
  %179 = load i32, i32* %8, align 4
  %180 = sext i32 %179 to i64
  %181 = getelementptr inbounds [4 x i32], [4 x i32]* @lru_type_map, i64 0, i64 %180
  %182 = load i32, i32* %181, align 4
  %183 = icmp eq i32 %182, 128
  br i1 %183, label %184, label %199

184:                                              ; preds = %28
  %185 = load i32, i32* %9, align 4
  %186 = sext i32 %185 to i64
  %187 = getelementptr inbounds [256 x %struct._stritem*], [256 x %struct._stritem*]* @tails, i64 0, i64 %186
  %188 = load %struct._stritem*, %struct._stritem** %187, align 8
  %189 = icmp ne %struct._stritem* %188, null
  br i1 %189, label %190, label %199

190:                                              ; preds = %184
  %191 = load volatile i32, i32* @current_time, align 4
  %192 = load i32, i32* %9, align 4
  %193 = sext i32 %192 to i64
  %194 = getelementptr inbounds [256 x %struct._stritem*], [256 x %struct._stritem*]* @tails, i64 0, i64 %193
  %195 = load %struct._stritem*, %struct._stritem** %194, align 8
  %196 = getelementptr inbounds %struct._stritem, %struct._stritem* %195, i32 0, i32 3
  %197 = load i32, i32* %196, align 8
  %198 = sub i32 %191, %197
  store i32 %198, i32* %11, align 4
  br label %243

199:                                              ; preds = %184, %28
  %200 = load i32, i32* %8, align 4
  %201 = sext i32 %200 to i64
  %202 = getelementptr inbounds [4 x i32], [4 x i32]* @lru_type_map, i64 0, i64 %201
  %203 = load i32, i32* %202, align 4
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %205, label %220

205:                                              ; preds = %199
  %206 = load i32, i32* %9, align 4
  %207 = sext i32 %206 to i64
  %208 = getelementptr inbounds [256 x %struct._stritem*], [256 x %struct._stritem*]* @tails, i64 0, i64 %207
  %209 = load %struct._stritem*, %struct._stritem** %208, align 8
  %210 = icmp ne %struct._stritem* %209, null
  br i1 %210, label %211, label %220

211:                                              ; preds = %205
  %212 = load volatile i32, i32* @current_time, align 4
  %213 = load i32, i32* %9, align 4
  %214 = sext i32 %213 to i64
  %215 = getelementptr inbounds [256 x %struct._stritem*], [256 x %struct._stritem*]* @tails, i64 0, i64 %214
  %216 = load %struct._stritem*, %struct._stritem** %215, align 8
  %217 = getelementptr inbounds %struct._stritem, %struct._stritem* %216, i32 0, i32 3
  %218 = load i32, i32* %217, align 8
  %219 = sub i32 %212, %218
  store i32 %219, i32* %12, align 4
  br label %242

220:                                              ; preds = %205, %199
  %221 = load i32, i32* %8, align 4
  %222 = sext i32 %221 to i64
  %223 = getelementptr inbounds [4 x i32], [4 x i32]* @lru_type_map, i64 0, i64 %222
  %224 = load i32, i32* %223, align 4
  %225 = icmp eq i32 %224, 64
  br i1 %225, label %226, label %241

226:                                              ; preds = %220
  %227 = load i32, i32* %9, align 4
  %228 = sext i32 %227 to i64
  %229 = getelementptr inbounds [256 x %struct._stritem*], [256 x %struct._stritem*]* @tails, i64 0, i64 %228
  %230 = load %struct._stritem*, %struct._stritem** %229, align 8
  %231 = icmp ne %struct._stritem* %230, null
  br i1 %231, label %232, label %241

232:                                              ; preds = %226
  %233 = load volatile i32, i32* @current_time, align 4
  %234 = load i32, i32* %9, align 4
  %235 = sext i32 %234 to i64
  %236 = getelementptr inbounds [256 x %struct._stritem*], [256 x %struct._stritem*]* @tails, i64 0, i64 %235
  %237 = load %struct._stritem*, %struct._stritem** %236, align 8
  %238 = getelementptr inbounds %struct._stritem, %struct._stritem* %237, i32 0, i32 3
  %239 = load i32, i32* %238, align 8
  %240 = sub i32 %233, %239
  store i32 %240, i32* %13, align 4
  br label %241

241:                                              ; preds = %232, %226, %220
  br label %242

242:                                              ; preds = %241, %211
  br label %243

243:                                              ; preds = %242, %190
  %244 = load i32, i32* %8, align 4
  %245 = sext i32 %244 to i64
  %246 = getelementptr inbounds [4 x i32], [4 x i32]* @lru_type_map, i64 0, i64 %245
  %247 = load i32, i32* %246, align 4
  %248 = icmp eq i32 %247, 128
  br i1 %248, label %249, label %256

249:                                              ; preds = %243
  %250 = load i32, i32* %9, align 4
  %251 = sext i32 %250 to i64
  %252 = getelementptr inbounds [256 x %struct.itemstats_t], [256 x %struct.itemstats_t]* @itemstats, i64 0, i64 %251
  %253 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %252, i32 0, i32 20
  %254 = load i32, i32* %253, align 8
  %255 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %6, i32 0, i32 20
  store i32 %254, i32* %255, align 8
  br label %256

256:                                              ; preds = %249, %243
  %257 = load i32, i32* %8, align 4
  %258 = sext i32 %257 to i64
  %259 = getelementptr inbounds [4 x i32], [4 x i32]* @lru_type_map, i64 0, i64 %258
  %260 = load i32, i32* %259, align 4
  switch i32 %260, label %289 [
    i32 0, label %261
    i32 64, label %268
    i32 128, label %275
    i32 192, label %282
  ]

261:                                              ; preds = %256
  %262 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %5, i32 0, i32 32
  %263 = load i32, i32* %9, align 4
  %264 = sext i32 %263 to i64
  %265 = getelementptr inbounds [256 x i64], [256 x i64]* %262, i64 0, i64 %264
  %266 = load i64, i64* %265, align 8
  %267 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %6, i32 0, i32 15
  store i64 %266, i64* %267, align 8
  br label %289

268:                                              ; preds = %256
  %269 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %5, i32 0, i32 32
  %270 = load i32, i32* %9, align 4
  %271 = sext i32 %270 to i64
  %272 = getelementptr inbounds [256 x i64], [256 x i64]* %269, i64 0, i64 %271
  %273 = load i64, i64* %272, align 8
  %274 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %6, i32 0, i32 16
  store i64 %273, i64* %274, align 8
  br label %289

275:                                              ; preds = %256
  %276 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %5, i32 0, i32 32
  %277 = load i32, i32* %9, align 4
  %278 = sext i32 %277 to i64
  %279 = getelementptr inbounds [256 x i64], [256 x i64]* %276, i64 0, i64 %278
  %280 = load i64, i64* %279, align 8
  %281 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %6, i32 0, i32 17
  store i64 %280, i64* %281, align 8
  br label %289

282:                                              ; preds = %256
  %283 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %5, i32 0, i32 32
  %284 = load i32, i32* %9, align 4
  %285 = sext i32 %284 to i64
  %286 = getelementptr inbounds [256 x i64], [256 x i64]* %283, i64 0, i64 %285
  %287 = load i64, i64* %286, align 8
  %288 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %6, i32 0, i32 18
  store i64 %287, i64* %288, align 8
  br label %289

289:                                              ; preds = %256, %282, %275, %268, %261
  %290 = load i32, i32* %9, align 4
  %291 = sext i32 %290 to i64
  %292 = getelementptr inbounds [256 x %union.pthread_mutex_t], [256 x %union.pthread_mutex_t]* @lru_locks, i64 0, i64 %291
  %293 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %292) #14
  br label %294

294:                                              ; preds = %289
  %295 = load i32, i32* %8, align 4
  %296 = add nsw i32 %295, 1
  store i32 %296, i32* %8, align 4
  br label %25, !llvm.loop !75

297:                                              ; preds = %25
  %298 = load i32, i32* %10, align 4
  %299 = icmp eq i32 %298, 0
  br i1 %299, label %300, label %301

300:                                              ; preds = %297
  br label %749

301:                                              ; preds = %297
  %302 = getelementptr inbounds [128 x i8], [128 x i8]* %16, i64 0, i64 0
  %303 = load i8*, i8** %15, align 8
  %304 = load i32, i32* %7, align 4
  %305 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %302, i64 128, i8* %303, i32 %304, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.17.611, i64 0, i64 0)) #14
  store i32 %305, i32* %18, align 4
  %306 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 0
  %307 = load i32, i32* %10, align 4
  %308 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %306, i64 128, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.612, i64 0, i64 0), i32 %307) #14
  store i32 %308, i32* %19, align 4
  %309 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %310 = getelementptr inbounds [128 x i8], [128 x i8]* %16, i64 0, i64 0
  %311 = load i32, i32* %18, align 4
  %312 = trunc i32 %311 to i16
  %313 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 0
  %314 = load i32, i32* %19, align 4
  %315 = load i8*, i8** %4, align 8
  call void %309(i8* %310, i16 zeroext %312, i8* %313, i32 %314, i8* %315)
  %316 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 29), align 1
  %317 = trunc i8 %316 to i1
  br i1 %317, label %318, label %411

318:                                              ; preds = %301
  %319 = getelementptr inbounds [128 x i8], [128 x i8]* %16, i64 0, i64 0
  %320 = load i8*, i8** %15, align 8
  %321 = load i32, i32* %7, align 4
  %322 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %319, i64 128, i8* %320, i32 %321, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19.613, i64 0, i64 0)) #14
  store i32 %322, i32* %18, align 4
  %323 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 0
  %324 = getelementptr inbounds [4 x i32], [4 x i32]* %14, i64 0, i64 0
  %325 = load i32, i32* %324, align 16
  %326 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %323, i64 128, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.612, i64 0, i64 0), i32 %325) #14
  store i32 %326, i32* %19, align 4
  %327 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %328 = getelementptr inbounds [128 x i8], [128 x i8]* %16, i64 0, i64 0
  %329 = load i32, i32* %18, align 4
  %330 = trunc i32 %329 to i16
  %331 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 0
  %332 = load i32, i32* %19, align 4
  %333 = load i8*, i8** %4, align 8
  call void %327(i8* %328, i16 zeroext %330, i8* %331, i32 %332, i8* %333)
  %334 = getelementptr inbounds [128 x i8], [128 x i8]* %16, i64 0, i64 0
  %335 = load i8*, i8** %15, align 8
  %336 = load i32, i32* %7, align 4
  %337 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %334, i64 128, i8* %335, i32 %336, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.20.614, i64 0, i64 0)) #14
  store i32 %337, i32* %18, align 4
  %338 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 0
  %339 = getelementptr inbounds [4 x i32], [4 x i32]* %14, i64 0, i64 1
  %340 = load i32, i32* %339, align 4
  %341 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %338, i64 128, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.612, i64 0, i64 0), i32 %340) #14
  store i32 %341, i32* %19, align 4
  %342 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %343 = getelementptr inbounds [128 x i8], [128 x i8]* %16, i64 0, i64 0
  %344 = load i32, i32* %18, align 4
  %345 = trunc i32 %344 to i16
  %346 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 0
  %347 = load i32, i32* %19, align 4
  %348 = load i8*, i8** %4, align 8
  call void %342(i8* %343, i16 zeroext %345, i8* %346, i32 %347, i8* %348)
  %349 = getelementptr inbounds [128 x i8], [128 x i8]* %16, i64 0, i64 0
  %350 = load i8*, i8** %15, align 8
  %351 = load i32, i32* %7, align 4
  %352 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %349, i64 128, i8* %350, i32 %351, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.21.615, i64 0, i64 0)) #14
  store i32 %352, i32* %18, align 4
  %353 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 0
  %354 = getelementptr inbounds [4 x i32], [4 x i32]* %14, i64 0, i64 2
  %355 = load i32, i32* %354, align 8
  %356 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %353, i64 128, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.612, i64 0, i64 0), i32 %355) #14
  store i32 %356, i32* %19, align 4
  %357 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %358 = getelementptr inbounds [128 x i8], [128 x i8]* %16, i64 0, i64 0
  %359 = load i32, i32* %18, align 4
  %360 = trunc i32 %359 to i16
  %361 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 0
  %362 = load i32, i32* %19, align 4
  %363 = load i8*, i8** %4, align 8
  call void %357(i8* %358, i16 zeroext %360, i8* %361, i32 %362, i8* %363)
  %364 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 48), align 4
  %365 = trunc i8 %364 to i1
  br i1 %365, label %366, label %382

366:                                              ; preds = %318
  %367 = getelementptr inbounds [128 x i8], [128 x i8]* %16, i64 0, i64 0
  %368 = load i8*, i8** %15, align 8
  %369 = load i32, i32* %7, align 4
  %370 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %367, i64 128, i8* %368, i32 %369, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.22.616, i64 0, i64 0)) #14
  store i32 %370, i32* %18, align 4
  %371 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 0
  %372 = getelementptr inbounds [4 x i32], [4 x i32]* %14, i64 0, i64 3
  %373 = load i32, i32* %372, align 4
  %374 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %371, i64 128, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.612, i64 0, i64 0), i32 %373) #14
  store i32 %374, i32* %19, align 4
  %375 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %376 = getelementptr inbounds [128 x i8], [128 x i8]* %16, i64 0, i64 0
  %377 = load i32, i32* %18, align 4
  %378 = trunc i32 %377 to i16
  %379 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 0
  %380 = load i32, i32* %19, align 4
  %381 = load i8*, i8** %4, align 8
  call void %375(i8* %376, i16 zeroext %378, i8* %379, i32 %380, i8* %381)
  br label %382

382:                                              ; preds = %366, %318
  %383 = getelementptr inbounds [128 x i8], [128 x i8]* %16, i64 0, i64 0
  %384 = load i8*, i8** %15, align 8
  %385 = load i32, i32* %7, align 4
  %386 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %383, i64 128, i8* %384, i32 %385, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23.617, i64 0, i64 0)) #14
  store i32 %386, i32* %18, align 4
  %387 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 0
  %388 = load i32, i32* %12, align 4
  %389 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %387, i64 128, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.612, i64 0, i64 0), i32 %388) #14
  store i32 %389, i32* %19, align 4
  %390 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %391 = getelementptr inbounds [128 x i8], [128 x i8]* %16, i64 0, i64 0
  %392 = load i32, i32* %18, align 4
  %393 = trunc i32 %392 to i16
  %394 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 0
  %395 = load i32, i32* %19, align 4
  %396 = load i8*, i8** %4, align 8
  call void %390(i8* %391, i16 zeroext %393, i8* %394, i32 %395, i8* %396)
  %397 = getelementptr inbounds [128 x i8], [128 x i8]* %16, i64 0, i64 0
  %398 = load i8*, i8** %15, align 8
  %399 = load i32, i32* %7, align 4
  %400 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %397, i64 128, i8* %398, i32 %399, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.24.618, i64 0, i64 0)) #14
  store i32 %400, i32* %18, align 4
  %401 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 0
  %402 = load i32, i32* %13, align 4
  %403 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %401, i64 128, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.612, i64 0, i64 0), i32 %402) #14
  store i32 %403, i32* %19, align 4
  %404 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %405 = getelementptr inbounds [128 x i8], [128 x i8]* %16, i64 0, i64 0
  %406 = load i32, i32* %18, align 4
  %407 = trunc i32 %406 to i16
  %408 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 0
  %409 = load i32, i32* %19, align 4
  %410 = load i8*, i8** %4, align 8
  call void %404(i8* %405, i16 zeroext %407, i8* %408, i32 %409, i8* %410)
  br label %411

411:                                              ; preds = %382, %301
  %412 = getelementptr inbounds [128 x i8], [128 x i8]* %16, i64 0, i64 0
  %413 = load i8*, i8** %15, align 8
  %414 = load i32, i32* %7, align 4
  %415 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %412, i64 128, i8* %413, i32 %414, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.25.619, i64 0, i64 0)) #14
  store i32 %415, i32* %18, align 4
  %416 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 0
  %417 = load i32, i32* %11, align 4
  %418 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %416, i64 128, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.612, i64 0, i64 0), i32 %417) #14
  store i32 %418, i32* %19, align 4
  %419 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %420 = getelementptr inbounds [128 x i8], [128 x i8]* %16, i64 0, i64 0
  %421 = load i32, i32* %18, align 4
  %422 = trunc i32 %421 to i16
  %423 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 0
  %424 = load i32, i32* %19, align 4
  %425 = load i8*, i8** %4, align 8
  call void %419(i8* %420, i16 zeroext %422, i8* %423, i32 %424, i8* %425)
  %426 = getelementptr inbounds [128 x i8], [128 x i8]* %16, i64 0, i64 0
  %427 = load i8*, i8** %15, align 8
  %428 = load i32, i32* %7, align 4
  %429 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %426, i64 128, i8* %427, i32 %428, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.26.620, i64 0, i64 0)) #14
  store i32 %429, i32* %18, align 4
  %430 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 0
  %431 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %6, i32 0, i32 19
  %432 = load i64, i64* %431, align 8
  %433 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %430, i64 128, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.595, i64 0, i64 0), i64 %432) #14
  store i32 %433, i32* %19, align 4
  %434 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %435 = getelementptr inbounds [128 x i8], [128 x i8]* %16, i64 0, i64 0
  %436 = load i32, i32* %18, align 4
  %437 = trunc i32 %436 to i16
  %438 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 0
  %439 = load i32, i32* %19, align 4
  %440 = load i8*, i8** %4, align 8
  call void %434(i8* %435, i16 zeroext %437, i8* %438, i32 %439, i8* %440)
  %441 = getelementptr inbounds [128 x i8], [128 x i8]* %16, i64 0, i64 0
  %442 = load i8*, i8** %15, align 8
  %443 = load i32, i32* %7, align 4
  %444 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %441, i64 128, i8* %442, i32 %443, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.27.621, i64 0, i64 0)) #14
  store i32 %444, i32* %18, align 4
  %445 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 0
  %446 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %6, i32 0, i32 0
  %447 = load i64, i64* %446, align 8
  %448 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %445, i64 128, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.595, i64 0, i64 0), i64 %447) #14
  store i32 %448, i32* %19, align 4
  %449 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %450 = getelementptr inbounds [128 x i8], [128 x i8]* %16, i64 0, i64 0
  %451 = load i32, i32* %18, align 4
  %452 = trunc i32 %451 to i16
  %453 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 0
  %454 = load i32, i32* %19, align 4
  %455 = load i8*, i8** %4, align 8
  call void %449(i8* %450, i16 zeroext %452, i8* %453, i32 %454, i8* %455)
  %456 = getelementptr inbounds [128 x i8], [128 x i8]* %16, i64 0, i64 0
  %457 = load i8*, i8** %15, align 8
  %458 = load i32, i32* %7, align 4
  %459 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %456, i64 128, i8* %457, i32 %458, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.28.622, i64 0, i64 0)) #14
  store i32 %459, i32* %18, align 4
  %460 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 0
  %461 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %6, i32 0, i32 1
  %462 = load i64, i64* %461, align 8
  %463 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %460, i64 128, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.595, i64 0, i64 0), i64 %462) #14
  store i32 %463, i32* %19, align 4
  %464 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %465 = getelementptr inbounds [128 x i8], [128 x i8]* %16, i64 0, i64 0
  %466 = load i32, i32* %18, align 4
  %467 = trunc i32 %466 to i16
  %468 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 0
  %469 = load i32, i32* %19, align 4
  %470 = load i8*, i8** %4, align 8
  call void %464(i8* %465, i16 zeroext %467, i8* %468, i32 %469, i8* %470)
  %471 = getelementptr inbounds [128 x i8], [128 x i8]* %16, i64 0, i64 0
  %472 = load i8*, i8** %15, align 8
  %473 = load i32, i32* %7, align 4
  %474 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %471, i64 128, i8* %472, i32 %473, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.29.623, i64 0, i64 0)) #14
  store i32 %474, i32* %18, align 4
  %475 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 0
  %476 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %6, i32 0, i32 20
  %477 = load i32, i32* %476, align 8
  %478 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %475, i64 128, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.612, i64 0, i64 0), i32 %477) #14
  store i32 %478, i32* %19, align 4
  %479 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %480 = getelementptr inbounds [128 x i8], [128 x i8]* %16, i64 0, i64 0
  %481 = load i32, i32* %18, align 4
  %482 = trunc i32 %481 to i16
  %483 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 0
  %484 = load i32, i32* %19, align 4
  %485 = load i8*, i8** %4, align 8
  call void %479(i8* %480, i16 zeroext %482, i8* %483, i32 %484, i8* %485)
  %486 = getelementptr inbounds [128 x i8], [128 x i8]* %16, i64 0, i64 0
  %487 = load i8*, i8** %15, align 8
  %488 = load i32, i32* %7, align 4
  %489 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %486, i64 128, i8* %487, i32 %488, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.30.624, i64 0, i64 0)) #14
  store i32 %489, i32* %18, align 4
  %490 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 0
  %491 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %6, i32 0, i32 3
  %492 = load i64, i64* %491, align 8
  %493 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %490, i64 128, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.595, i64 0, i64 0), i64 %492) #14
  store i32 %493, i32* %19, align 4
  %494 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %495 = getelementptr inbounds [128 x i8], [128 x i8]* %16, i64 0, i64 0
  %496 = load i32, i32* %18, align 4
  %497 = trunc i32 %496 to i16
  %498 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 0
  %499 = load i32, i32* %19, align 4
  %500 = load i8*, i8** %4, align 8
  call void %494(i8* %495, i16 zeroext %497, i8* %498, i32 %499, i8* %500)
  %501 = getelementptr inbounds [128 x i8], [128 x i8]* %16, i64 0, i64 0
  %502 = load i8*, i8** %15, align 8
  %503 = load i32, i32* %7, align 4
  %504 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %501, i64 128, i8* %502, i32 %503, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31.625, i64 0, i64 0)) #14
  store i32 %504, i32* %18, align 4
  %505 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 0
  %506 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %6, i32 0, i32 4
  %507 = load i64, i64* %506, align 8
  %508 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %505, i64 128, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.595, i64 0, i64 0), i64 %507) #14
  store i32 %508, i32* %19, align 4
  %509 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %510 = getelementptr inbounds [128 x i8], [128 x i8]* %16, i64 0, i64 0
  %511 = load i32, i32* %18, align 4
  %512 = trunc i32 %511 to i16
  %513 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 0
  %514 = load i32, i32* %19, align 4
  %515 = load i8*, i8** %4, align 8
  call void %509(i8* %510, i16 zeroext %512, i8* %513, i32 %514, i8* %515)
  %516 = getelementptr inbounds [128 x i8], [128 x i8]* %16, i64 0, i64 0
  %517 = load i8*, i8** %15, align 8
  %518 = load i32, i32* %7, align 4
  %519 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %516, i64 128, i8* %517, i32 %518, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7.599, i64 0, i64 0)) #14
  store i32 %519, i32* %18, align 4
  %520 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 0
  %521 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %6, i32 0, i32 2
  %522 = load i64, i64* %521, align 8
  %523 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %520, i64 128, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.595, i64 0, i64 0), i64 %522) #14
  store i32 %523, i32* %19, align 4
  %524 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %525 = getelementptr inbounds [128 x i8], [128 x i8]* %16, i64 0, i64 0
  %526 = load i32, i32* %18, align 4
  %527 = trunc i32 %526 to i16
  %528 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 0
  %529 = load i32, i32* %19, align 4
  %530 = load i8*, i8** %4, align 8
  call void %524(i8* %525, i16 zeroext %527, i8* %528, i32 %529, i8* %530)
  %531 = getelementptr inbounds [128 x i8], [128 x i8]* %16, i64 0, i64 0
  %532 = load i8*, i8** %15, align 8
  %533 = load i32, i32* %7, align 4
  %534 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %531, i64 128, i8* %532, i32 %533, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2.594, i64 0, i64 0)) #14
  store i32 %534, i32* %18, align 4
  %535 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 0
  %536 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %6, i32 0, i32 5
  %537 = load i64, i64* %536, align 8
  %538 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %535, i64 128, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.595, i64 0, i64 0), i64 %537) #14
  store i32 %538, i32* %19, align 4
  %539 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %540 = getelementptr inbounds [128 x i8], [128 x i8]* %16, i64 0, i64 0
  %541 = load i32, i32* %18, align 4
  %542 = trunc i32 %541 to i16
  %543 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 0
  %544 = load i32, i32* %19, align 4
  %545 = load i8*, i8** %4, align 8
  call void %539(i8* %540, i16 zeroext %542, i8* %543, i32 %544, i8* %545)
  %546 = getelementptr inbounds [128 x i8], [128 x i8]* %16, i64 0, i64 0
  %547 = load i8*, i8** %15, align 8
  %548 = load i32, i32* %7, align 4
  %549 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %546, i64 128, i8* %547, i32 %548, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4.596, i64 0, i64 0)) #14
  store i32 %549, i32* %18, align 4
  %550 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 0
  %551 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %6, i32 0, i32 6
  %552 = load i64, i64* %551, align 8
  %553 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %550, i64 128, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.595, i64 0, i64 0), i64 %552) #14
  store i32 %553, i32* %19, align 4
  %554 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %555 = getelementptr inbounds [128 x i8], [128 x i8]* %16, i64 0, i64 0
  %556 = load i32, i32* %18, align 4
  %557 = trunc i32 %556 to i16
  %558 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 0
  %559 = load i32, i32* %19, align 4
  %560 = load i8*, i8** %4, align 8
  call void %554(i8* %555, i16 zeroext %557, i8* %558, i32 %559, i8* %560)
  %561 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 29), align 1
  %562 = trunc i8 %561 to i1
  br i1 %562, label %563, label %579

563:                                              ; preds = %411
  %564 = getelementptr inbounds [128 x i8], [128 x i8]* %16, i64 0, i64 0
  %565 = load i8*, i8** %15, align 8
  %566 = load i32, i32* %7, align 4
  %567 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %564, i64 128, i8* %565, i32 %566, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5.597, i64 0, i64 0)) #14
  store i32 %567, i32* %18, align 4
  %568 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 0
  %569 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %6, i32 0, i32 7
  %570 = load i64, i64* %569, align 8
  %571 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %568, i64 128, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.595, i64 0, i64 0), i64 %570) #14
  store i32 %571, i32* %19, align 4
  %572 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %573 = getelementptr inbounds [128 x i8], [128 x i8]* %16, i64 0, i64 0
  %574 = load i32, i32* %18, align 4
  %575 = trunc i32 %574 to i16
  %576 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 0
  %577 = load i32, i32* %19, align 4
  %578 = load i8*, i8** %4, align 8
  call void %572(i8* %573, i16 zeroext %575, i8* %576, i32 %577, i8* %578)
  br label %579

579:                                              ; preds = %563, %411
  %580 = getelementptr inbounds [128 x i8], [128 x i8]* %16, i64 0, i64 0
  %581 = load i8*, i8** %15, align 8
  %582 = load i32, i32* %7, align 4
  %583 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %580, i64 128, i8* %581, i32 %582, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8.600, i64 0, i64 0)) #14
  store i32 %583, i32* %18, align 4
  %584 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 0
  %585 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %6, i32 0, i32 8
  %586 = load i64, i64* %585, align 8
  %587 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %584, i64 128, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.595, i64 0, i64 0), i64 %586) #14
  store i32 %587, i32* %19, align 4
  %588 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %589 = getelementptr inbounds [128 x i8], [128 x i8]* %16, i64 0, i64 0
  %590 = load i32, i32* %18, align 4
  %591 = trunc i32 %590 to i16
  %592 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 0
  %593 = load i32, i32* %19, align 4
  %594 = load i8*, i8** %4, align 8
  call void %588(i8* %589, i16 zeroext %591, i8* %592, i32 %593, i8* %594)
  %595 = getelementptr inbounds [128 x i8], [128 x i8]* %16, i64 0, i64 0
  %596 = load i8*, i8** %15, align 8
  %597 = load i32, i32* %7, align 4
  %598 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %595, i64 128, i8* %596, i32 %597, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.9.601, i64 0, i64 0)) #14
  store i32 %598, i32* %18, align 4
  %599 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 0
  %600 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %6, i32 0, i32 9
  %601 = load i64, i64* %600, align 8
  %602 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %599, i64 128, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.595, i64 0, i64 0), i64 %601) #14
  store i32 %602, i32* %19, align 4
  %603 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %604 = getelementptr inbounds [128 x i8], [128 x i8]* %16, i64 0, i64 0
  %605 = load i32, i32* %18, align 4
  %606 = trunc i32 %605 to i16
  %607 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 0
  %608 = load i32, i32* %19, align 4
  %609 = load i8*, i8** %4, align 8
  call void %603(i8* %604, i16 zeroext %606, i8* %607, i32 %608, i8* %609)
  %610 = getelementptr inbounds [128 x i8], [128 x i8]* %16, i64 0, i64 0
  %611 = load i8*, i8** %15, align 8
  %612 = load i32, i32* %7, align 4
  %613 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %610, i64 128, i8* %611, i32 %612, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10.602, i64 0, i64 0)) #14
  store i32 %613, i32* %18, align 4
  %614 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 0
  %615 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %6, i32 0, i32 10
  %616 = load i64, i64* %615, align 8
  %617 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %614, i64 128, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.595, i64 0, i64 0), i64 %616) #14
  store i32 %617, i32* %19, align 4
  %618 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %619 = getelementptr inbounds [128 x i8], [128 x i8]* %16, i64 0, i64 0
  %620 = load i32, i32* %18, align 4
  %621 = trunc i32 %620 to i16
  %622 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 0
  %623 = load i32, i32* %19, align 4
  %624 = load i8*, i8** %4, align 8
  call void %618(i8* %619, i16 zeroext %621, i8* %622, i32 %623, i8* %624)
  %625 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 29), align 1
  %626 = trunc i8 %625 to i1
  br i1 %626, label %627, label %748

627:                                              ; preds = %579
  %628 = getelementptr inbounds [128 x i8], [128 x i8]* %16, i64 0, i64 0
  %629 = load i8*, i8** %15, align 8
  %630 = load i32, i32* %7, align 4
  %631 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %628, i64 128, i8* %629, i32 %630, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11.603, i64 0, i64 0)) #14
  store i32 %631, i32* %18, align 4
  %632 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 0
  %633 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %6, i32 0, i32 11
  %634 = load i64, i64* %633, align 8
  %635 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %632, i64 128, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.595, i64 0, i64 0), i64 %634) #14
  store i32 %635, i32* %19, align 4
  %636 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %637 = getelementptr inbounds [128 x i8], [128 x i8]* %16, i64 0, i64 0
  %638 = load i32, i32* %18, align 4
  %639 = trunc i32 %638 to i16
  %640 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 0
  %641 = load i32, i32* %19, align 4
  %642 = load i8*, i8** %4, align 8
  call void %636(i8* %637, i16 zeroext %639, i8* %640, i32 %641, i8* %642)
  %643 = getelementptr inbounds [128 x i8], [128 x i8]* %16, i64 0, i64 0
  %644 = load i8*, i8** %15, align 8
  %645 = load i32, i32* %7, align 4
  %646 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %643, i64 128, i8* %644, i32 %645, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.12.604, i64 0, i64 0)) #14
  store i32 %646, i32* %18, align 4
  %647 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 0
  %648 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %6, i32 0, i32 12
  %649 = load i64, i64* %648, align 8
  %650 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %647, i64 128, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.595, i64 0, i64 0), i64 %649) #14
  store i32 %650, i32* %19, align 4
  %651 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %652 = getelementptr inbounds [128 x i8], [128 x i8]* %16, i64 0, i64 0
  %653 = load i32, i32* %18, align 4
  %654 = trunc i32 %653 to i16
  %655 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 0
  %656 = load i32, i32* %19, align 4
  %657 = load i8*, i8** %4, align 8
  call void %651(i8* %652, i16 zeroext %654, i8* %655, i32 %656, i8* %657)
  %658 = getelementptr inbounds [128 x i8], [128 x i8]* %16, i64 0, i64 0
  %659 = load i8*, i8** %15, align 8
  %660 = load i32, i32* %7, align 4
  %661 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %658, i64 128, i8* %659, i32 %660, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.13.605, i64 0, i64 0)) #14
  store i32 %661, i32* %18, align 4
  %662 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 0
  %663 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %6, i32 0, i32 13
  %664 = load i64, i64* %663, align 8
  %665 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %662, i64 128, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.595, i64 0, i64 0), i64 %664) #14
  store i32 %665, i32* %19, align 4
  %666 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %667 = getelementptr inbounds [128 x i8], [128 x i8]* %16, i64 0, i64 0
  %668 = load i32, i32* %18, align 4
  %669 = trunc i32 %668 to i16
  %670 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 0
  %671 = load i32, i32* %19, align 4
  %672 = load i8*, i8** %4, align 8
  call void %666(i8* %667, i16 zeroext %669, i8* %670, i32 %671, i8* %672)
  %673 = getelementptr inbounds [128 x i8], [128 x i8]* %16, i64 0, i64 0
  %674 = load i8*, i8** %15, align 8
  %675 = load i32, i32* %7, align 4
  %676 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %673, i64 128, i8* %674, i32 %675, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.14.606, i64 0, i64 0)) #14
  store i32 %676, i32* %18, align 4
  %677 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 0
  %678 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %6, i32 0, i32 14
  %679 = load i64, i64* %678, align 8
  %680 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %677, i64 128, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.595, i64 0, i64 0), i64 %679) #14
  store i32 %680, i32* %19, align 4
  %681 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %682 = getelementptr inbounds [128 x i8], [128 x i8]* %16, i64 0, i64 0
  %683 = load i32, i32* %18, align 4
  %684 = trunc i32 %683 to i16
  %685 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 0
  %686 = load i32, i32* %19, align 4
  %687 = load i8*, i8** %4, align 8
  call void %681(i8* %682, i16 zeroext %684, i8* %685, i32 %686, i8* %687)
  %688 = getelementptr inbounds [128 x i8], [128 x i8]* %16, i64 0, i64 0
  %689 = load i8*, i8** %15, align 8
  %690 = load i32, i32* %7, align 4
  %691 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %688, i64 128, i8* %689, i32 %690, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.32.626, i64 0, i64 0)) #14
  store i32 %691, i32* %18, align 4
  %692 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 0
  %693 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %6, i32 0, i32 15
  %694 = load i64, i64* %693, align 8
  %695 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %692, i64 128, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.595, i64 0, i64 0), i64 %694) #14
  store i32 %695, i32* %19, align 4
  %696 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %697 = getelementptr inbounds [128 x i8], [128 x i8]* %16, i64 0, i64 0
  %698 = load i32, i32* %18, align 4
  %699 = trunc i32 %698 to i16
  %700 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 0
  %701 = load i32, i32* %19, align 4
  %702 = load i8*, i8** %4, align 8
  call void %696(i8* %697, i16 zeroext %699, i8* %700, i32 %701, i8* %702)
  %703 = getelementptr inbounds [128 x i8], [128 x i8]* %16, i64 0, i64 0
  %704 = load i8*, i8** %15, align 8
  %705 = load i32, i32* %7, align 4
  %706 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %703, i64 128, i8* %704, i32 %705, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.33.627, i64 0, i64 0)) #14
  store i32 %706, i32* %18, align 4
  %707 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 0
  %708 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %6, i32 0, i32 16
  %709 = load i64, i64* %708, align 8
  %710 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %707, i64 128, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.595, i64 0, i64 0), i64 %709) #14
  store i32 %710, i32* %19, align 4
  %711 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %712 = getelementptr inbounds [128 x i8], [128 x i8]* %16, i64 0, i64 0
  %713 = load i32, i32* %18, align 4
  %714 = trunc i32 %713 to i16
  %715 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 0
  %716 = load i32, i32* %19, align 4
  %717 = load i8*, i8** %4, align 8
  call void %711(i8* %712, i16 zeroext %714, i8* %715, i32 %716, i8* %717)
  %718 = getelementptr inbounds [128 x i8], [128 x i8]* %16, i64 0, i64 0
  %719 = load i8*, i8** %15, align 8
  %720 = load i32, i32* %7, align 4
  %721 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %718, i64 128, i8* %719, i32 %720, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.34.628, i64 0, i64 0)) #14
  store i32 %721, i32* %18, align 4
  %722 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 0
  %723 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %6, i32 0, i32 17
  %724 = load i64, i64* %723, align 8
  %725 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %722, i64 128, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.595, i64 0, i64 0), i64 %724) #14
  store i32 %725, i32* %19, align 4
  %726 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %727 = getelementptr inbounds [128 x i8], [128 x i8]* %16, i64 0, i64 0
  %728 = load i32, i32* %18, align 4
  %729 = trunc i32 %728 to i16
  %730 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 0
  %731 = load i32, i32* %19, align 4
  %732 = load i8*, i8** %4, align 8
  call void %726(i8* %727, i16 zeroext %729, i8* %730, i32 %731, i8* %732)
  %733 = getelementptr inbounds [128 x i8], [128 x i8]* %16, i64 0, i64 0
  %734 = load i8*, i8** %15, align 8
  %735 = load i32, i32* %7, align 4
  %736 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %733, i64 128, i8* %734, i32 %735, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.35.629, i64 0, i64 0)) #14
  store i32 %736, i32* %18, align 4
  %737 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 0
  %738 = getelementptr inbounds %struct.itemstats_t, %struct.itemstats_t* %6, i32 0, i32 18
  %739 = load i64, i64* %738, align 8
  %740 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %737, i64 128, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.595, i64 0, i64 0), i64 %739) #14
  store i32 %740, i32* %19, align 4
  %741 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %742 = getelementptr inbounds [128 x i8], [128 x i8]* %16, i64 0, i64 0
  %743 = load i32, i32* %18, align 4
  %744 = trunc i32 %743 to i16
  %745 = getelementptr inbounds [128 x i8], [128 x i8]* %17, i64 0, i64 0
  %746 = load i32, i32* %19, align 4
  %747 = load i8*, i8** %4, align 8
  call void %741(i8* %742, i16 zeroext %744, i8* %745, i32 %746, i8* %747)
  br label %748

748:                                              ; preds = %627, %579
  br label %749

749:                                              ; preds = %748, %300
  %750 = load i32, i32* %7, align 4
  %751 = add nsw i32 %750, 1
  store i32 %751, i32* %7, align 4
  br label %20, !llvm.loop !76

752:                                              ; preds = %20
  %753 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %754 = load i8*, i8** %4, align 8
  call void %753(i8* null, i16 zeroext 0, i8* null, i32 0, i8* %754)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @item_stats_sizes_status() #0 {
  %1 = alloca i8, align 1
  store i8 0, i8* %1, align 1
  %2 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @stats_sizes_lock) #14
  %3 = load i32*, i32** @stats_sizes_hist, align 8
  %4 = icmp ne i32* %3, null
  br i1 %4, label %5, label %6

5:                                                ; preds = %0
  store i8 1, i8* %1, align 1
  br label %6

6:                                                ; preds = %5, %0
  %7 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @stats_sizes_lock) #14
  %8 = load i8, i8* %1, align 1
  %9 = trunc i8 %8 to i1
  ret i1 %9
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @item_stats_sizes_init() #0 {
  %1 = load i32*, i32** @stats_sizes_hist, align 8
  %2 = icmp ne i32* %1, null
  br i1 %2, label %3, label %4

3:                                                ; preds = %0
  br label %19

4:                                                ; preds = %0
  %5 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 22), align 4
  %6 = sdiv i32 %5, 32
  %7 = add nsw i32 %6, 1
  store i32 %7, i32* @stats_sizes_buckets, align 4
  %8 = load i32, i32* @stats_sizes_buckets, align 4
  %9 = sext i32 %8 to i64
  %10 = call noalias i8* @calloc(i64 %9, i64 4) #14
  %11 = bitcast i8* %10 to i32*
  store i32* %11, i32** @stats_sizes_hist, align 8
  %12 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 19), align 8
  %13 = trunc i8 %12 to i1
  br i1 %13, label %14, label %16

14:                                               ; preds = %4
  %15 = call i64 @get_cas_id()
  br label %17

16:                                               ; preds = %4
  br label %17

17:                                               ; preds = %16, %14
  %18 = phi i64 [ %15, %14 ], [ 0, %16 ]
  store i64 %18, i64* @stats_sizes_cas_min, align 8
  br label %19

19:                                               ; preds = %17, %3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @item_stats_sizes_enable(void (i8*, i16, i8*, i32, i8*)* %0, i8* %1) #0 {
  %3 = alloca void (i8*, i16, i8*, i32, i8*)*, align 8
  %4 = alloca i8*, align 8
  store void (i8*, i16, i8*, i32, i8*)* %0, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @stats_sizes_lock) #14
  %6 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 19), align 8
  %7 = trunc i8 %6 to i1
  br i1 %7, label %15, label %8

8:                                                ; preds = %2
  %9 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %10 = load i8*, i8** %4, align 8
  %11 = bitcast i8* %10 to %struct.conn*
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.36.636, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %9, %struct.conn* %11, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.37.637, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.38.638, i64 0, i64 0))
  %12 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %13 = load i8*, i8** %4, align 8
  %14 = bitcast i8* %13 to %struct.conn*
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.39.639, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %12, %struct.conn* %14, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.40.640, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.38.638, i64 0, i64 0))
  br label %38

15:                                               ; preds = %2
  %16 = load i32*, i32** @stats_sizes_hist, align 8
  %17 = icmp eq i32* %16, null
  br i1 %17, label %18, label %33

18:                                               ; preds = %15
  call void @item_stats_sizes_init()
  %19 = load i32*, i32** @stats_sizes_hist, align 8
  %20 = icmp ne i32* %19, null
  br i1 %20, label %21, label %25

21:                                               ; preds = %18
  %22 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %23 = load i8*, i8** %4, align 8
  %24 = bitcast i8* %23 to %struct.conn*
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.36.636, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %22, %struct.conn* %24, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.41.641, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.38.638, i64 0, i64 0))
  br label %32

25:                                               ; preds = %18
  %26 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %27 = load i8*, i8** %4, align 8
  %28 = bitcast i8* %27 to %struct.conn*
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.36.636, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %26, %struct.conn* %28, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.37.637, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.38.638, i64 0, i64 0))
  %29 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %30 = load i8*, i8** %4, align 8
  %31 = bitcast i8* %30 to %struct.conn*
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.39.639, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %29, %struct.conn* %31, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.42.642, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.38.638, i64 0, i64 0))
  br label %32

32:                                               ; preds = %25, %21
  br label %37

33:                                               ; preds = %15
  %34 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %35 = load i8*, i8** %4, align 8
  %36 = bitcast i8* %35 to %struct.conn*
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.36.636, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %34, %struct.conn* %36, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.41.641, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.38.638, i64 0, i64 0))
  br label %37

37:                                               ; preds = %33, %32
  br label %38

38:                                               ; preds = %37, %8
  %39 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @stats_sizes_lock) #14
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @item_stats_sizes_disable(void (i8*, i16, i8*, i32, i8*)* %0, i8* %1) #0 {
  %3 = alloca void (i8*, i16, i8*, i32, i8*)*, align 8
  %4 = alloca i8*, align 8
  store void (i8*, i16, i8*, i32, i8*)* %0, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @stats_sizes_lock) #14
  %6 = load i32*, i32** @stats_sizes_hist, align 8
  %7 = icmp ne i32* %6, null
  br i1 %7, label %8, label %11

8:                                                ; preds = %2
  %9 = load i32*, i32** @stats_sizes_hist, align 8
  %10 = bitcast i32* %9 to i8*
  call void @free(i8* %10) #14
  store i32* null, i32** @stats_sizes_hist, align 8
  br label %11

11:                                               ; preds = %8, %2
  %12 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %13 = load i8*, i8** %4, align 8
  %14 = bitcast i8* %13 to %struct.conn*
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.36.636, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %12, %struct.conn* %14, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.43.645, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.38.638, i64 0, i64 0))
  %15 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @stats_sizes_lock) #14
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @item_stats_sizes(void (i8*, i16, i8*, i32, i8*)* %0, i8* %1) #0 {
  %3 = alloca void (i8*, i16, i8*, i32, i8*)*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca [12 x i8], align 1
  store void (i8*, i16, i8*, i32, i8*)* %0, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  store i8* %1, i8** %4, align 8
  %7 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @stats_sizes_lock) #14
  %8 = load i32*, i32** @stats_sizes_hist, align 8
  %9 = icmp ne i32* %8, null
  br i1 %9, label %10, label %41

10:                                               ; preds = %2
  store i32 0, i32* %5, align 4
  br label %11

11:                                               ; preds = %37, %10
  %12 = load i32, i32* %5, align 4
  %13 = load i32, i32* @stats_sizes_buckets, align 4
  %14 = icmp slt i32 %12, %13
  br i1 %14, label %15, label %40

15:                                               ; preds = %11
  %16 = load i32*, i32** @stats_sizes_hist, align 8
  %17 = load i32, i32* %5, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds i32, i32* %16, i64 %18
  %20 = load i32, i32* %19, align 4
  %21 = icmp ne i32 %20, 0
  br i1 %21, label %22, label %36

22:                                               ; preds = %15
  %23 = getelementptr inbounds [12 x i8], [12 x i8]* %6, i64 0, i64 0
  %24 = load i32, i32* %5, align 4
  %25 = mul nsw i32 %24, 32
  %26 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %23, i64 12, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.44.648, i64 0, i64 0), i32 %25) #14
  %27 = getelementptr inbounds [12 x i8], [12 x i8]* %6, i64 0, i64 0
  %28 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %29 = load i8*, i8** %4, align 8
  %30 = bitcast i8* %29 to %struct.conn*
  %31 = load i32*, i32** @stats_sizes_hist, align 8
  %32 = load i32, i32* %5, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds i32, i32* %31, i64 %33
  %35 = load i32, i32* %34, align 4
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* %27, void (i8*, i16, i8*, i32, i8*)* %28, %struct.conn* %30, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.612, i64 0, i64 0), i32 %35)
  br label %36

36:                                               ; preds = %22, %15
  br label %37

37:                                               ; preds = %36
  %38 = load i32, i32* %5, align 4
  %39 = add nsw i32 %38, 1
  store i32 %39, i32* %5, align 4
  br label %11, !llvm.loop !77

40:                                               ; preds = %11
  br label %45

41:                                               ; preds = %2
  %42 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %43 = load i8*, i8** %4, align 8
  %44 = bitcast i8* %43 to %struct.conn*
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.36.636, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %42, %struct.conn* %44, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.43.645, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.38.638, i64 0, i64 0))
  br label %45

45:                                               ; preds = %41, %40
  %46 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %47 = load i8*, i8** %4, align 8
  call void %46(i8* null, i16 zeroext 0, i8* null, i32 0, i8* %47)
  %48 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @stats_sizes_lock) #14
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct._stritem* @do_item_get(i8* %0, i64 %1, i32 %2, %struct.conn* %3, i1 zeroext %4) #0 {
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca %struct.conn*, align 8
  %10 = alloca i8, align 1
  %11 = alloca %struct._stritem*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %struct._logger*, align 8
  store i8* %0, i8** %6, align 8
  store i64 %1, i64* %7, align 8
  store i32 %2, i32* %8, align 4
  store %struct.conn* %3, %struct.conn** %9, align 8
  %15 = zext i1 %4 to i8
  store i8 %15, i8* %10, align 1
  %16 = load i8*, i8** %6, align 8
  %17 = load i64, i64* %7, align 8
  %18 = load i32, i32* %8, align 4
  %19 = call %struct._stritem* @assoc_find(i8* %16, i64 %17, i32 %18)
  store %struct._stritem* %19, %struct._stritem** %11, align 8
  %20 = load %struct._stritem*, %struct._stritem** %11, align 8
  %21 = icmp ne %struct._stritem* %20, null
  br i1 %21, label %22, label %27

22:                                               ; preds = %5
  %23 = load %struct._stritem*, %struct._stritem** %11, align 8
  %24 = getelementptr inbounds %struct._stritem, %struct._stritem* %23, i32 0, i32 6
  %25 = load i16, i16* %24, align 4
  %26 = add i16 %25, 1
  store i16 %26, i16* %24, align 4
  br label %27

27:                                               ; preds = %22, %5
  store i32 0, i32* %12, align 4
  %28 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %29 = icmp sgt i32 %28, 2
  br i1 %29, label %30, label %58

30:                                               ; preds = %27
  %31 = load %struct._stritem*, %struct._stritem** %11, align 8
  %32 = icmp eq %struct._stritem* %31, null
  br i1 %32, label %33, label %36

33:                                               ; preds = %30
  %34 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %35 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %34, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.45.651, i64 0, i64 0))
  br label %39

36:                                               ; preds = %30
  %37 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %38 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %37, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.46.652, i64 0, i64 0))
  br label %39

39:                                               ; preds = %36, %33
  store i32 0, i32* %13, align 4
  br label %40

40:                                               ; preds = %54, %39
  %41 = load i32, i32* %13, align 4
  %42 = sext i32 %41 to i64
  %43 = load i64, i64* %7, align 8
  %44 = icmp ult i64 %42, %43
  br i1 %44, label %45, label %57

45:                                               ; preds = %40
  %46 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %47 = load i8*, i8** %6, align 8
  %48 = load i32, i32* %13, align 4
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %47, i64 %49
  %51 = load i8, i8* %50, align 1
  %52 = sext i8 %51 to i32
  %53 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %46, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.47.653, i64 0, i64 0), i32 %52)
  br label %54

54:                                               ; preds = %45
  %55 = load i32, i32* %13, align 4
  %56 = add nsw i32 %55, 1
  store i32 %56, i32* %13, align 4
  br label %40, !llvm.loop !78

57:                                               ; preds = %40
  br label %58

58:                                               ; preds = %57, %27
  %59 = load %struct._stritem*, %struct._stritem** %11, align 8
  %60 = icmp ne %struct._stritem* %59, null
  br i1 %60, label %61, label %163

61:                                               ; preds = %58
  store i32 1, i32* %12, align 4
  %62 = load %struct._stritem*, %struct._stritem** %11, align 8
  %63 = call i32 @item_is_flushed(%struct._stritem* %62)
  %64 = icmp ne i32 %63, 0
  br i1 %64, label %65, label %102

65:                                               ; preds = %61
  %66 = load %struct._stritem*, %struct._stritem** %11, align 8
  %67 = load i32, i32* %8, align 4
  call void @do_item_unlink(%struct._stritem* %66, i32 %67)
  br label %68

68:                                               ; preds = %65
  %69 = load %struct.conn*, %struct.conn** %9, align 8
  %70 = getelementptr inbounds %struct.conn, %struct.conn* %69, i32 0, i32 42
  %71 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %70, align 8
  %72 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %71, i32 0, i32 10
  %73 = load i8*, i8** %72, align 8
  %74 = load %struct._stritem*, %struct._stritem** %11, align 8
  call void @storage_delete(i8* %73, %struct._stritem* %74)
  br label %75

75:                                               ; preds = %68
  %76 = load %struct._stritem*, %struct._stritem** %11, align 8
  call void @do_item_remove(%struct._stritem* %76)
  store %struct._stritem* null, %struct._stritem** %11, align 8
  %77 = load %struct.conn*, %struct.conn** %9, align 8
  %78 = getelementptr inbounds %struct.conn, %struct.conn* %77, i32 0, i32 42
  %79 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %78, align 8
  %80 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %79, i32 0, i32 4
  %81 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %80, i32 0, i32 0
  %82 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %81) #14
  %83 = load %struct.conn*, %struct.conn** %9, align 8
  %84 = getelementptr inbounds %struct.conn, %struct.conn* %83, i32 0, i32 42
  %85 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %84, align 8
  %86 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %85, i32 0, i32 4
  %87 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %86, i32 0, i32 4
  %88 = load i64, i64* %87, align 8
  %89 = add i64 %88, 1
  store i64 %89, i64* %87, align 8
  %90 = load %struct.conn*, %struct.conn** %9, align 8
  %91 = getelementptr inbounds %struct.conn, %struct.conn* %90, i32 0, i32 42
  %92 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %91, align 8
  %93 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %92, i32 0, i32 4
  %94 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %93, i32 0, i32 0
  %95 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %94) #14
  %96 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %97 = icmp sgt i32 %96, 2
  br i1 %97, label %98, label %101

98:                                               ; preds = %75
  %99 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %100 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %99, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.48.654, i64 0, i64 0))
  br label %101

101:                                              ; preds = %98, %75
  store i32 2, i32* %12, align 4
  br label %162

102:                                              ; preds = %61
  %103 = load %struct._stritem*, %struct._stritem** %11, align 8
  %104 = getelementptr inbounds %struct._stritem, %struct._stritem* %103, i32 0, i32 4
  %105 = load i32, i32* %104, align 4
  %106 = icmp ne i32 %105, 0
  br i1 %106, label %107, label %150

107:                                              ; preds = %102
  %108 = load %struct._stritem*, %struct._stritem** %11, align 8
  %109 = getelementptr inbounds %struct._stritem, %struct._stritem* %108, i32 0, i32 4
  %110 = load i32, i32* %109, align 4
  %111 = load volatile i32, i32* @current_time, align 4
  %112 = icmp ule i32 %110, %111
  br i1 %112, label %113, label %150

113:                                              ; preds = %107
  %114 = load %struct._stritem*, %struct._stritem** %11, align 8
  %115 = load i32, i32* %8, align 4
  call void @do_item_unlink(%struct._stritem* %114, i32 %115)
  br label %116

116:                                              ; preds = %113
  %117 = load %struct.conn*, %struct.conn** %9, align 8
  %118 = getelementptr inbounds %struct.conn, %struct.conn* %117, i32 0, i32 42
  %119 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %118, align 8
  %120 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %119, i32 0, i32 10
  %121 = load i8*, i8** %120, align 8
  %122 = load %struct._stritem*, %struct._stritem** %11, align 8
  call void @storage_delete(i8* %121, %struct._stritem* %122)
  br label %123

123:                                              ; preds = %116
  %124 = load %struct._stritem*, %struct._stritem** %11, align 8
  call void @do_item_remove(%struct._stritem* %124)
  store %struct._stritem* null, %struct._stritem** %11, align 8
  %125 = load %struct.conn*, %struct.conn** %9, align 8
  %126 = getelementptr inbounds %struct.conn, %struct.conn* %125, i32 0, i32 42
  %127 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %126, align 8
  %128 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %127, i32 0, i32 4
  %129 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %128, i32 0, i32 0
  %130 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %129) #14
  %131 = load %struct.conn*, %struct.conn** %9, align 8
  %132 = getelementptr inbounds %struct.conn, %struct.conn* %131, i32 0, i32 42
  %133 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %132, align 8
  %134 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %133, i32 0, i32 4
  %135 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %134, i32 0, i32 3
  %136 = load i64, i64* %135, align 8
  %137 = add i64 %136, 1
  store i64 %137, i64* %135, align 8
  %138 = load %struct.conn*, %struct.conn** %9, align 8
  %139 = getelementptr inbounds %struct.conn, %struct.conn* %138, i32 0, i32 42
  %140 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %139, align 8
  %141 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %140, i32 0, i32 4
  %142 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %141, i32 0, i32 0
  %143 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %142) #14
  %144 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %145 = icmp sgt i32 %144, 2
  br i1 %145, label %146, label %149

146:                                              ; preds = %123
  %147 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %148 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %147, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.49.655, i64 0, i64 0))
  br label %149

149:                                              ; preds = %146, %123
  store i32 3, i32* %12, align 4
  br label %161

150:                                              ; preds = %107, %102
  %151 = load i8, i8* %10, align 1
  %152 = trunc i8 %151 to i1
  br i1 %152, label %153, label %157

153:                                              ; preds = %150
  %154 = load %struct.conn*, %struct.conn** %9, align 8
  %155 = load %struct._stritem*, %struct._stritem** %11, align 8
  %156 = load i32, i32* %8, align 4
  call void @do_item_bump(%struct.conn* %154, %struct._stritem* %155, i32 %156)
  br label %157

157:                                              ; preds = %153, %150
  br label %158

158:                                              ; preds = %159, %157
  br i1 false, label %159, label %160

159:                                              ; preds = %158
  br label %158

160:                                              ; preds = %158
  br label %161

161:                                              ; preds = %160, %149
  br label %162

162:                                              ; preds = %161, %101
  br label %163

163:                                              ; preds = %162, %58
  %164 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %165 = icmp sgt i32 %164, 2
  br i1 %165, label %166, label %169

166:                                              ; preds = %163
  %167 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %168 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %167, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.50.656, i64 0, i64 0))
  br label %169

169:                                              ; preds = %166, %163
  br label %170

170:                                              ; preds = %169
  %171 = load %struct.conn*, %struct.conn** %9, align 8
  %172 = getelementptr inbounds %struct.conn, %struct.conn* %171, i32 0, i32 42
  %173 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %172, align 8
  %174 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %173, i32 0, i32 11
  %175 = load %struct._logger*, %struct._logger** %174, align 8
  store %struct._logger* %175, %struct._logger** %14, align 8
  %176 = load %struct.conn*, %struct.conn** %9, align 8
  %177 = getelementptr inbounds %struct.conn, %struct.conn* %176, i32 0, i32 42
  %178 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %177, align 8
  %179 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %178, i32 0, i32 11
  %180 = load %struct._logger*, %struct._logger** %179, align 8
  %181 = icmp eq %struct._logger* %180, null
  br i1 %181, label %182, label %186

182:                                              ; preds = %170
  %183 = load i32, i32* @logger_key, align 4
  %184 = call i8* @pthread_getspecific(i32 %183) #14
  %185 = bitcast i8* %184 to %struct._logger*
  store %struct._logger* %185, %struct._logger** %14, align 8
  br label %186

186:                                              ; preds = %182, %170
  %187 = load %struct._logger*, %struct._logger** %14, align 8
  %188 = getelementptr inbounds %struct._logger, %struct._logger* %187, i32 0, i32 8
  %189 = load i16, i16* %188, align 4
  %190 = zext i16 %189 to i32
  %191 = and i32 %190, 4
  %192 = icmp ne i32 %191, 0
  br i1 %192, label %193, label %222

193:                                              ; preds = %186
  %194 = load %struct._logger*, %struct._logger** %14, align 8
  %195 = load i32, i32* %12, align 4
  %196 = load i8*, i8** %6, align 8
  %197 = load i64, i64* %7, align 8
  %198 = load %struct._stritem*, %struct._stritem** %11, align 8
  %199 = icmp ne %struct._stritem* %198, null
  br i1 %199, label %200, label %204

200:                                              ; preds = %193
  %201 = load %struct._stritem*, %struct._stritem** %11, align 8
  %202 = getelementptr inbounds %struct._stritem, %struct._stritem* %201, i32 0, i32 5
  %203 = load i32, i32* %202, align 8
  br label %205

204:                                              ; preds = %193
  br label %205

205:                                              ; preds = %204, %200
  %206 = phi i32 [ %203, %200 ], [ 0, %204 ]
  %207 = load %struct._stritem*, %struct._stritem** %11, align 8
  %208 = icmp ne %struct._stritem* %207, null
  br i1 %208, label %209, label %215

209:                                              ; preds = %205
  %210 = load %struct._stritem*, %struct._stritem** %11, align 8
  %211 = getelementptr inbounds %struct._stritem, %struct._stritem* %210, i32 0, i32 8
  %212 = load i8, i8* %211, align 8
  %213 = zext i8 %212 to i32
  %214 = and i32 %213, -193
  br label %216

215:                                              ; preds = %205
  br label %216

216:                                              ; preds = %215, %209
  %217 = phi i32 [ %214, %209 ], [ 0, %215 ]
  %218 = load %struct.conn*, %struct.conn** %9, align 8
  %219 = getelementptr inbounds %struct.conn, %struct.conn* %218, i32 0, i32 1
  %220 = load i32, i32* %219, align 8
  %221 = call i32 (%struct._logger*, i32, i8*, ...) @logger_log(%struct._logger* %194, i32 2, i8* null, i32 %195, i8* %196, i64 %197, i32 %206, i32 %217, i32 %220)
  br label %222

222:                                              ; preds = %216, %186
  br label %223

223:                                              ; preds = %222
  %224 = load %struct._stritem*, %struct._stritem** %11, align 8
  ret %struct._stritem* %224
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @do_item_bump(%struct.conn* %0, %struct._stritem* %1, i32 %2) #0 {
  %4 = alloca %struct.conn*, align 8
  %5 = alloca %struct._stritem*, align 8
  %6 = alloca i32, align 4
  store %struct.conn* %0, %struct.conn** %4, align 8
  store %struct._stritem* %1, %struct._stritem** %5, align 8
  store i32 %2, i32* %6, align 4
  %7 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 30), align 8
  %8 = trunc i8 %7 to i1
  br i1 %8, label %9, label %68

9:                                                ; preds = %3
  %10 = load %struct._stritem*, %struct._stritem** %5, align 8
  %11 = getelementptr inbounds %struct._stritem, %struct._stritem* %10, i32 0, i32 7
  %12 = load i16, i16* %11, align 2
  %13 = zext i16 %12 to i32
  %14 = and i32 %13, 16
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %67

16:                                               ; preds = %9
  %17 = load %struct._stritem*, %struct._stritem** %5, align 8
  %18 = getelementptr inbounds %struct._stritem, %struct._stritem* %17, i32 0, i32 7
  %19 = load i16, i16* %18, align 2
  %20 = zext i16 %19 to i32
  %21 = and i32 %20, 8
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %30

23:                                               ; preds = %16
  %24 = load %struct._stritem*, %struct._stritem** %5, align 8
  %25 = getelementptr inbounds %struct._stritem, %struct._stritem* %24, i32 0, i32 7
  %26 = load i16, i16* %25, align 2
  %27 = zext i16 %26 to i32
  %28 = or i32 %27, 8
  %29 = trunc i32 %28 to i16
  store i16 %29, i16* %25, align 2
  br label %66

30:                                               ; preds = %16
  %31 = load %struct._stritem*, %struct._stritem** %5, align 8
  %32 = getelementptr inbounds %struct._stritem, %struct._stritem* %31, i32 0, i32 7
  %33 = load i16, i16* %32, align 2
  %34 = zext i16 %33 to i32
  %35 = or i32 %34, 16
  %36 = trunc i32 %35 to i16
  store i16 %36, i16* %32, align 2
  %37 = load %struct._stritem*, %struct._stritem** %5, align 8
  %38 = getelementptr inbounds %struct._stritem, %struct._stritem* %37, i32 0, i32 8
  %39 = load i8, i8* %38, align 8
  %40 = zext i8 %39 to i32
  %41 = and i32 %40, 192
  %42 = icmp ne i32 %41, 128
  br i1 %42, label %43, label %47

43:                                               ; preds = %30
  %44 = load volatile i32, i32* @current_time, align 4
  %45 = load %struct._stritem*, %struct._stritem** %5, align 8
  %46 = getelementptr inbounds %struct._stritem, %struct._stritem* %45, i32 0, i32 3
  store i32 %44, i32* %46, align 8
  br label %65

47:                                               ; preds = %30
  %48 = load %struct.conn*, %struct.conn** %4, align 8
  %49 = getelementptr inbounds %struct.conn, %struct.conn* %48, i32 0, i32 42
  %50 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %49, align 8
  %51 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %50, i32 0, i32 12
  %52 = load i8*, i8** %51, align 8
  %53 = bitcast i8* %52 to %struct._lru_bump_buf*
  %54 = load %struct._stritem*, %struct._stritem** %5, align 8
  %55 = load i32, i32* %6, align 4
  %56 = call zeroext i1 @lru_bump_async(%struct._lru_bump_buf* %53, %struct._stritem* %54, i32 %55)
  br i1 %56, label %64, label %57

57:                                               ; preds = %47
  %58 = load %struct._stritem*, %struct._stritem** %5, align 8
  %59 = getelementptr inbounds %struct._stritem, %struct._stritem* %58, i32 0, i32 7
  %60 = load i16, i16* %59, align 2
  %61 = zext i16 %60 to i32
  %62 = and i32 %61, -17
  %63 = trunc i32 %62 to i16
  store i16 %63, i16* %59, align 2
  br label %64

64:                                               ; preds = %57, %47
  br label %65

65:                                               ; preds = %64, %43
  br label %66

66:                                               ; preds = %65, %23
  br label %67

67:                                               ; preds = %66, %9
  br label %76

68:                                               ; preds = %3
  %69 = load %struct._stritem*, %struct._stritem** %5, align 8
  %70 = getelementptr inbounds %struct._stritem, %struct._stritem* %69, i32 0, i32 7
  %71 = load i16, i16* %70, align 2
  %72 = zext i16 %71 to i32
  %73 = or i32 %72, 8
  %74 = trunc i32 %73 to i16
  store i16 %74, i16* %70, align 2
  %75 = load %struct._stritem*, %struct._stritem** %5, align 8
  call void @do_item_update(%struct._stritem* %75)
  br label %76

76:                                               ; preds = %68, %67
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @lru_bump_async(%struct._lru_bump_buf* %0, %struct._stritem* %1, i32 %2) #0 {
  %4 = alloca %struct._lru_bump_buf*, align 8
  %5 = alloca %struct._stritem*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8, align 1
  %8 = alloca %struct.lru_pull_tail_return*, align 8
  store %struct._lru_bump_buf* %0, %struct._lru_bump_buf** %4, align 8
  store %struct._stritem* %1, %struct._stritem** %5, align 8
  store i32 %2, i32* %6, align 4
  store i8 1, i8* %7, align 1
  %9 = load %struct._stritem*, %struct._stritem** %5, align 8
  %10 = getelementptr inbounds %struct._stritem, %struct._stritem* %9, i32 0, i32 6
  %11 = load i16, i16* %10, align 4
  %12 = add i16 %11, 1
  store i16 %12, i16* %10, align 4
  %13 = load %struct._lru_bump_buf*, %struct._lru_bump_buf** %4, align 8
  %14 = getelementptr inbounds %struct._lru_bump_buf, %struct._lru_bump_buf* %13, i32 0, i32 2
  %15 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %14) #14
  %16 = load %struct._lru_bump_buf*, %struct._lru_bump_buf** %4, align 8
  %17 = getelementptr inbounds %struct._lru_bump_buf, %struct._lru_bump_buf* %16, i32 0, i32 3
  %18 = load %struct.bipbuf_t*, %struct.bipbuf_t** %17, align 8
  %19 = call i8* @bipbuf_request(%struct.bipbuf_t* %18, i32 16)
  %20 = bitcast i8* %19 to %struct.lru_pull_tail_return*
  store %struct.lru_pull_tail_return* %20, %struct.lru_pull_tail_return** %8, align 8
  %21 = load %struct.lru_pull_tail_return*, %struct.lru_pull_tail_return** %8, align 8
  %22 = icmp ne %struct.lru_pull_tail_return* %21, null
  br i1 %22, label %23, label %41

23:                                               ; preds = %3
  %24 = load %struct._stritem*, %struct._stritem** %5, align 8
  %25 = load %struct.lru_pull_tail_return*, %struct.lru_pull_tail_return** %8, align 8
  %26 = getelementptr inbounds %struct.lru_pull_tail_return, %struct.lru_pull_tail_return* %25, i32 0, i32 0
  store %struct._stritem* %24, %struct._stritem** %26, align 8
  %27 = load i32, i32* %6, align 4
  %28 = load %struct.lru_pull_tail_return*, %struct.lru_pull_tail_return** %8, align 8
  %29 = getelementptr inbounds %struct.lru_pull_tail_return, %struct.lru_pull_tail_return* %28, i32 0, i32 1
  store i32 %27, i32* %29, align 8
  %30 = load %struct._lru_bump_buf*, %struct._lru_bump_buf** %4, align 8
  %31 = getelementptr inbounds %struct._lru_bump_buf, %struct._lru_bump_buf* %30, i32 0, i32 3
  %32 = load %struct.bipbuf_t*, %struct.bipbuf_t** %31, align 8
  %33 = call i32 @bipbuf_push(%struct.bipbuf_t* %32, i32 16)
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %40

35:                                               ; preds = %23
  store i8 0, i8* %7, align 1
  %36 = load %struct._lru_bump_buf*, %struct._lru_bump_buf** %4, align 8
  %37 = getelementptr inbounds %struct._lru_bump_buf, %struct._lru_bump_buf* %36, i32 0, i32 4
  %38 = load i64, i64* %37, align 8
  %39 = add i64 %38, 1
  store i64 %39, i64* %37, align 8
  br label %40

40:                                               ; preds = %35, %23
  br label %46

41:                                               ; preds = %3
  store i8 0, i8* %7, align 1
  %42 = load %struct._lru_bump_buf*, %struct._lru_bump_buf** %4, align 8
  %43 = getelementptr inbounds %struct._lru_bump_buf, %struct._lru_bump_buf* %42, i32 0, i32 4
  %44 = load i64, i64* %43, align 8
  %45 = add i64 %44, 1
  store i64 %45, i64* %43, align 8
  br label %46

46:                                               ; preds = %41, %40
  %47 = load i8, i8* %7, align 1
  %48 = trunc i8 %47 to i1
  br i1 %48, label %54, label %49

49:                                               ; preds = %46
  %50 = load %struct._stritem*, %struct._stritem** %5, align 8
  %51 = getelementptr inbounds %struct._stritem, %struct._stritem* %50, i32 0, i32 6
  %52 = load i16, i16* %51, align 4
  %53 = add i16 %52, -1
  store i16 %53, i16* %51, align 4
  br label %54

54:                                               ; preds = %49, %46
  %55 = load %struct._lru_bump_buf*, %struct._lru_bump_buf** %4, align 8
  %56 = getelementptr inbounds %struct._lru_bump_buf, %struct._lru_bump_buf* %55, i32 0, i32 2
  %57 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %56) #14
  %58 = load i8, i8* %7, align 1
  %59 = trunc i8 %58 to i1
  ret i1 %59
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct._stritem* @do_item_touch(i8* %0, i64 %1, i32 %2, i32 %3, %struct.conn* %4) #0 {
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %struct.conn*, align 8
  %11 = alloca %struct._stritem*, align 8
  store i8* %0, i8** %6, align 8
  store i64 %1, i64* %7, align 8
  store i32 %2, i32* %8, align 4
  store i32 %3, i32* %9, align 4
  store %struct.conn* %4, %struct.conn** %10, align 8
  %12 = load i8*, i8** %6, align 8
  %13 = load i64, i64* %7, align 8
  %14 = load i32, i32* %9, align 4
  %15 = load %struct.conn*, %struct.conn** %10, align 8
  %16 = call %struct._stritem* @do_item_get(i8* %12, i64 %13, i32 %14, %struct.conn* %15, i1 zeroext true)
  store %struct._stritem* %16, %struct._stritem** %11, align 8
  %17 = load %struct._stritem*, %struct._stritem** %11, align 8
  %18 = icmp ne %struct._stritem* %17, null
  br i1 %18, label %19, label %23

19:                                               ; preds = %5
  %20 = load i32, i32* %8, align 4
  %21 = load %struct._stritem*, %struct._stritem** %11, align 8
  %22 = getelementptr inbounds %struct._stritem, %struct._stritem* %21, i32 0, i32 4
  store i32 %20, i32* %22, align 4
  br label %23

23:                                               ; preds = %19, %5
  %24 = load %struct._stritem*, %struct._stritem** %11, align 8
  ret %struct._stritem* %24
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @item_lru_bump_buf_create() #0 {
  %1 = alloca i8*, align 8
  %2 = alloca %struct._lru_bump_buf*, align 8
  %3 = call noalias i8* @calloc(i64 1, i64 72) #14
  %4 = bitcast i8* %3 to %struct._lru_bump_buf*
  store %struct._lru_bump_buf* %4, %struct._lru_bump_buf** %2, align 8
  %5 = load %struct._lru_bump_buf*, %struct._lru_bump_buf** %2, align 8
  %6 = icmp eq %struct._lru_bump_buf* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %0
  store i8* null, i8** %1, align 8
  br label %26

8:                                                ; preds = %0
  %9 = call %struct.bipbuf_t* @bipbuf_new(i32 131072)
  %10 = load %struct._lru_bump_buf*, %struct._lru_bump_buf** %2, align 8
  %11 = getelementptr inbounds %struct._lru_bump_buf, %struct._lru_bump_buf* %10, i32 0, i32 3
  store %struct.bipbuf_t* %9, %struct.bipbuf_t** %11, align 8
  %12 = load %struct._lru_bump_buf*, %struct._lru_bump_buf** %2, align 8
  %13 = getelementptr inbounds %struct._lru_bump_buf, %struct._lru_bump_buf* %12, i32 0, i32 3
  %14 = load %struct.bipbuf_t*, %struct.bipbuf_t** %13, align 8
  %15 = icmp eq %struct.bipbuf_t* %14, null
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %struct._lru_bump_buf*, %struct._lru_bump_buf** %2, align 8
  %18 = bitcast %struct._lru_bump_buf* %17 to i8*
  call void @free(i8* %18) #14
  store i8* null, i8** %1, align 8
  br label %26

19:                                               ; preds = %8
  %20 = load %struct._lru_bump_buf*, %struct._lru_bump_buf** %2, align 8
  %21 = getelementptr inbounds %struct._lru_bump_buf, %struct._lru_bump_buf* %20, i32 0, i32 2
  %22 = call i32 @pthread_mutex_init(%union.pthread_mutex_t* %21, %struct.in_addr* null) #14
  %23 = load %struct._lru_bump_buf*, %struct._lru_bump_buf** %2, align 8
  call void @lru_bump_buf_link_q(%struct._lru_bump_buf* %23)
  %24 = load %struct._lru_bump_buf*, %struct._lru_bump_buf** %2, align 8
  %25 = bitcast %struct._lru_bump_buf* %24 to i8*
  store i8* %25, i8** %1, align 8
  br label %26

26:                                               ; preds = %19, %16, %7
  %27 = load i8*, i8** %1, align 8
  ret i8* %27
}

; Function Attrs: nounwind
declare dso_local i32 @pthread_mutex_init(%union.pthread_mutex_t*, %struct.in_addr*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @lru_bump_buf_link_q(%struct._lru_bump_buf* %0) #0 {
  %2 = alloca %struct._lru_bump_buf*, align 8
  store %struct._lru_bump_buf* %0, %struct._lru_bump_buf** %2, align 8
  %3 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @bump_buf_lock) #14
  %4 = load %struct._lru_bump_buf*, %struct._lru_bump_buf** %2, align 8
  %5 = getelementptr inbounds %struct._lru_bump_buf, %struct._lru_bump_buf* %4, i32 0, i32 0
  store %struct._lru_bump_buf* null, %struct._lru_bump_buf** %5, align 8
  %6 = load %struct._lru_bump_buf*, %struct._lru_bump_buf** @bump_buf_head, align 8
  %7 = load %struct._lru_bump_buf*, %struct._lru_bump_buf** %2, align 8
  %8 = getelementptr inbounds %struct._lru_bump_buf, %struct._lru_bump_buf* %7, i32 0, i32 1
  store %struct._lru_bump_buf* %6, %struct._lru_bump_buf** %8, align 8
  %9 = load %struct._lru_bump_buf*, %struct._lru_bump_buf** %2, align 8
  %10 = getelementptr inbounds %struct._lru_bump_buf, %struct._lru_bump_buf* %9, i32 0, i32 1
  %11 = load %struct._lru_bump_buf*, %struct._lru_bump_buf** %10, align 8
  %12 = icmp ne %struct._lru_bump_buf* %11, null
  br i1 %12, label %13, label %19

13:                                               ; preds = %1
  %14 = load %struct._lru_bump_buf*, %struct._lru_bump_buf** %2, align 8
  %15 = load %struct._lru_bump_buf*, %struct._lru_bump_buf** %2, align 8
  %16 = getelementptr inbounds %struct._lru_bump_buf, %struct._lru_bump_buf* %15, i32 0, i32 1
  %17 = load %struct._lru_bump_buf*, %struct._lru_bump_buf** %16, align 8
  %18 = getelementptr inbounds %struct._lru_bump_buf, %struct._lru_bump_buf* %17, i32 0, i32 0
  store %struct._lru_bump_buf* %14, %struct._lru_bump_buf** %18, align 8
  br label %19

19:                                               ; preds = %13, %1
  %20 = load %struct._lru_bump_buf*, %struct._lru_bump_buf** %2, align 8
  store %struct._lru_bump_buf* %20, %struct._lru_bump_buf** @bump_buf_head, align 8
  %21 = load %struct._lru_bump_buf*, %struct._lru_bump_buf** @bump_buf_tail, align 8
  %22 = icmp eq %struct._lru_bump_buf* %21, null
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = load %struct._lru_bump_buf*, %struct._lru_bump_buf** %2, align 8
  store %struct._lru_bump_buf* %24, %struct._lru_bump_buf** @bump_buf_tail, align 8
  br label %25

25:                                               ; preds = %23, %19
  %26 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @bump_buf_lock) #14
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @stop_lru_maintainer_thread() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @lru_maintainer_lock) #14
  store volatile i32 0, i32* @do_run_lru_maintainer_thread, align 4
  %4 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @lru_maintainer_lock) #14
  %5 = load i64, i64* @lru_maintainer_tid, align 8
  %6 = call i32 @pthread_join(i64 %5, i8** null)
  store i32 %6, i32* %2, align 4
  %7 = icmp ne i32 %6, 0
  br i1 %7, label %8, label %13

8:                                                ; preds = %0
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %10 = load i32, i32* %2, align 4
  %11 = call i8* @strerror(i32 %10) #14
  %12 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %9, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.51.657, i64 0, i64 0), i8* %11)
  store i32 -1, i32* %1, align 4
  br label %14

13:                                               ; preds = %0
  store i8 0, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 29), align 1
  store i32 0, i32* %1, align 4
  br label %14

14:                                               ; preds = %13, %8
  %15 = load i32, i32* %1, align 4
  ret i32 %15
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @start_lru_maintainer_thread(i8* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  %5 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @lru_maintainer_lock) #14
  store volatile i32 1, i32* @do_run_lru_maintainer_thread, align 4
  store i8 1, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 29), align 1
  %6 = load i8*, i8** %3, align 8
  %7 = call i32 @pthread_create(i64* @lru_maintainer_tid, %union.pthread_attr_t* null, i8* (i8*)* @lru_maintainer_thread, i8* %6) #14
  store i32 %7, i32* %4, align 4
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %9, label %15

9:                                                ; preds = %1
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %11 = load i32, i32* %4, align 4
  %12 = call i8* @strerror(i32 %11) #14
  %13 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.52.660, i64 0, i64 0), i8* %12)
  %14 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @lru_maintainer_lock) #14
  store i32 -1, i32* %2, align 4
  br label %17

15:                                               ; preds = %1
  %16 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @lru_maintainer_lock) #14
  store i32 0, i32* %2, align 4
  br label %17

17:                                               ; preds = %15, %9
  %18 = load i32, i32* %2, align 4
  ret i32 %18
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @lru_maintainer_thread(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.slab_automove_reg_t*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca [64 x i32], align 16
  %11 = alloca [64 x i32], align 16
  %12 = alloca %struct.crawler_expired_data*, align 8
  %13 = alloca %struct._logger*, align 8
  %14 = alloca double, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca %struct._logger*, align 8
  store i8* %0, i8** %2, align 8
  store %struct.slab_automove_reg_t* @slab_automove_default, %struct.slab_automove_reg_t** %3, align 8
  %20 = load i8*, i8** %2, align 8
  store i8* %20, i8** %4, align 8
  %21 = load i8*, i8** %4, align 8
  %22 = icmp ne i8* %21, null
  br i1 %22, label %23, label %24

23:                                               ; preds = %1
  store %struct.slab_automove_reg_t* @slab_automove_extstore, %struct.slab_automove_reg_t** %3, align 8
  br label %24

24:                                               ; preds = %23, %1
  store i32 1000, i32* %6, align 4
  store i32 1000, i32* %7, align 4
  store i32 0, i32* %8, align 4
  store i32 0, i32* %9, align 4
  %25 = bitcast [64 x i32]* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %25, i8 0, i64 256, i1 false)
  %26 = bitcast [64 x i32]* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %26, i8 0, i64 256, i1 false)
  %27 = call noalias i8* @calloc(i64 1, i64 137272) #14
  %28 = bitcast i8* %27 to %struct.crawler_expired_data*
  store %struct.crawler_expired_data* %28, %struct.crawler_expired_data** %12, align 8
  %29 = load %struct.crawler_expired_data*, %struct.crawler_expired_data** %12, align 8
  %30 = icmp eq %struct.crawler_expired_data* %29, null
  br i1 %30, label %31, label %34

31:                                               ; preds = %24
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %33 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %32, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.53.661, i64 0, i64 0))
  call void @abort() #17
  unreachable

34:                                               ; preds = %24
  %35 = load %struct.crawler_expired_data*, %struct.crawler_expired_data** %12, align 8
  %36 = getelementptr inbounds %struct.crawler_expired_data, %struct.crawler_expired_data* %35, i32 0, i32 0
  %37 = call i32 @pthread_mutex_init(%union.pthread_mutex_t* %36, %struct.in_addr* null) #14
  %38 = load %struct.crawler_expired_data*, %struct.crawler_expired_data** %12, align 8
  %39 = getelementptr inbounds %struct.crawler_expired_data, %struct.crawler_expired_data* %38, i32 0, i32 4
  store i8 1, i8* %39, align 8
  %40 = call %struct._logger* @logger_create()
  store %struct._logger* %40, %struct._logger** %13, align 8
  %41 = load %struct._logger*, %struct._logger** %13, align 8
  %42 = icmp eq %struct._logger* %41, null
  br i1 %42, label %43, label %46

43:                                               ; preds = %34
  %44 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %45 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %44, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.54.662, i64 0, i64 0))
  call void @abort() #17
  unreachable

46:                                               ; preds = %34
  %47 = load double, double* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 33), align 8
  store double %47, double* %14, align 8
  %48 = load %struct.slab_automove_reg_t*, %struct.slab_automove_reg_t** %3, align 8
  %49 = getelementptr inbounds %struct.slab_automove_reg_t, %struct.slab_automove_reg_t* %48, i32 0, i32 0
  %50 = load i8* (%struct.settings*)*, i8* (%struct.settings*)** %49, align 8
  %51 = call i8* %50(%struct.settings* @settings)
  store i8* %51, i8** %15, align 8
  %52 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @lru_maintainer_lock) #14
  %53 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %54 = icmp sgt i32 %53, 2
  br i1 %54, label %55, label %58

55:                                               ; preds = %46
  %56 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %57 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %56, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.55.663, i64 0, i64 0))
  br label %58

58:                                               ; preds = %55, %46
  br label %59

59:                                               ; preds = %292, %58
  %60 = load volatile i32, i32* @do_run_lru_maintainer_thread, align 4
  %61 = icmp ne i32 %60, 0
  br i1 %61, label %62, label %293

62:                                               ; preds = %59
  %63 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @lru_maintainer_lock) #14
  %64 = load i32, i32* %6, align 4
  %65 = icmp ne i32 %64, 0
  br i1 %65, label %66, label %69

66:                                               ; preds = %62
  %67 = load i32, i32* %6, align 4
  %68 = call i32 @usleep(i32 %67)
  br label %69

69:                                               ; preds = %66, %62
  %70 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @lru_maintainer_lock) #14
  %71 = load i32, i32* %6, align 4
  %72 = icmp ugt i32 %71, 1000
  br i1 %72, label %73, label %75

73:                                               ; preds = %69
  %74 = load i32, i32* %6, align 4
  br label %76

75:                                               ; preds = %69
  br label %76

76:                                               ; preds = %75, %73
  %77 = phi i32 [ %74, %73 ], [ 1000, %75 ]
  store i32 %77, i32* %7, align 4
  store i32 1000000, i32* %6, align 4
  call void @STATS_LOCK()
  %78 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 13), align 8
  %79 = add i64 %78, 1
  store i64 %79, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 13), align 8
  call void @STATS_UNLOCK()
  store i32 1, i32* %5, align 4
  br label %80

80:                                               ; preds = %201, %76
  %81 = load i32, i32* %5, align 4
  %82 = icmp slt i32 %81, 64
  br i1 %82, label %83, label %204

83:                                               ; preds = %80
  %84 = load i32, i32* %5, align 4
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds [64 x i32], [64 x i32]* %10, i64 0, i64 %85
  %87 = load i32, i32* %86, align 4
  %88 = load i32, i32* %7, align 4
  %89 = icmp ugt i32 %87, %88
  br i1 %89, label %90, label %97

90:                                               ; preds = %83
  %91 = load i32, i32* %5, align 4
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds [64 x i32], [64 x i32]* %10, i64 0, i64 %92
  %94 = load i32, i32* %93, align 4
  %95 = load i32, i32* %7, align 4
  %96 = sub i32 %94, %95
  br label %98

97:                                               ; preds = %83
  br label %98

98:                                               ; preds = %97, %90
  %99 = phi i32 [ %96, %90 ], [ 0, %97 ]
  %100 = load i32, i32* %5, align 4
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds [64 x i32], [64 x i32]* %10, i64 0, i64 %101
  store i32 %99, i32* %102, align 4
  %103 = load i32, i32* %5, align 4
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds [64 x i32], [64 x i32]* %10, i64 0, i64 %104
  %106 = load i32, i32* %105, align 4
  %107 = icmp ugt i32 %106, 0
  br i1 %107, label %108, label %121

108:                                              ; preds = %98
  %109 = load i32, i32* %5, align 4
  %110 = sext i32 %109 to i64
  %111 = getelementptr inbounds [64 x i32], [64 x i32]* %10, i64 0, i64 %110
  %112 = load i32, i32* %111, align 4
  %113 = load i32, i32* %6, align 4
  %114 = icmp ult i32 %112, %113
  br i1 %114, label %115, label %120

115:                                              ; preds = %108
  %116 = load i32, i32* %5, align 4
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds [64 x i32], [64 x i32]* %10, i64 0, i64 %117
  %119 = load i32, i32* %118, align 4
  store i32 %119, i32* %6, align 4
  br label %120

120:                                              ; preds = %115, %108
  br label %201

121:                                              ; preds = %98
  %122 = load i32, i32* %5, align 4
  %123 = call i32 @lru_maintainer_juggle(i32 %122)
  store i32 %123, i32* %16, align 4
  %124 = load i32, i32* %16, align 4
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %126, label %158

126:                                              ; preds = %121
  %127 = load i32, i32* %5, align 4
  %128 = sext i32 %127 to i64
  %129 = getelementptr inbounds [64 x i32], [64 x i32]* %11, i64 0, i64 %128
  %130 = load i32, i32* %129, align 4
  %131 = icmp ne i32 %130, 0
  br i1 %131, label %132, label %143

132:                                              ; preds = %126
  %133 = load i32, i32* %5, align 4
  %134 = sext i32 %133 to i64
  %135 = getelementptr inbounds [64 x i32], [64 x i32]* %11, i64 0, i64 %134
  %136 = load i32, i32* %135, align 4
  %137 = udiv i32 %136, 8
  %138 = load i32, i32* %5, align 4
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds [64 x i32], [64 x i32]* %11, i64 0, i64 %139
  %141 = load i32, i32* %140, align 4
  %142 = add i32 %141, %137
  store i32 %142, i32* %140, align 4
  br label %147

143:                                              ; preds = %126
  %144 = load i32, i32* %5, align 4
  %145 = sext i32 %144 to i64
  %146 = getelementptr inbounds [64 x i32], [64 x i32]* %11, i64 0, i64 %145
  store i32 1000, i32* %146, align 4
  br label %147

147:                                              ; preds = %143, %132
  %148 = load i32, i32* %5, align 4
  %149 = sext i32 %148 to i64
  %150 = getelementptr inbounds [64 x i32], [64 x i32]* %11, i64 0, i64 %149
  %151 = load i32, i32* %150, align 4
  %152 = icmp ugt i32 %151, 1000000
  br i1 %152, label %153, label %157

153:                                              ; preds = %147
  %154 = load i32, i32* %5, align 4
  %155 = sext i32 %154 to i64
  %156 = getelementptr inbounds [64 x i32], [64 x i32]* %11, i64 0, i64 %155
  store i32 1000000, i32* %156, align 4
  br label %157

157:                                              ; preds = %153, %147
  br label %181

158:                                              ; preds = %121
  %159 = load i32, i32* %5, align 4
  %160 = sext i32 %159 to i64
  %161 = getelementptr inbounds [64 x i32], [64 x i32]* %11, i64 0, i64 %160
  %162 = load i32, i32* %161, align 4
  %163 = icmp ugt i32 %162, 0
  br i1 %163, label %164, label %180

164:                                              ; preds = %158
  %165 = load i32, i32* %5, align 4
  %166 = sext i32 %165 to i64
  %167 = getelementptr inbounds [64 x i32], [64 x i32]* %11, i64 0, i64 %166
  %168 = load i32, i32* %167, align 4
  %169 = udiv i32 %168, 2
  store i32 %169, i32* %167, align 4
  %170 = load i32, i32* %5, align 4
  %171 = sext i32 %170 to i64
  %172 = getelementptr inbounds [64 x i32], [64 x i32]* %11, i64 0, i64 %171
  %173 = load i32, i32* %172, align 4
  %174 = icmp ult i32 %173, 1000
  br i1 %174, label %175, label %179

175:                                              ; preds = %164
  %176 = load i32, i32* %5, align 4
  %177 = sext i32 %176 to i64
  %178 = getelementptr inbounds [64 x i32], [64 x i32]* %11, i64 0, i64 %177
  store i32 0, i32* %178, align 4
  br label %179

179:                                              ; preds = %175, %164
  br label %180

180:                                              ; preds = %179, %158
  br label %181

181:                                              ; preds = %180, %157
  %182 = load i32, i32* %5, align 4
  %183 = sext i32 %182 to i64
  %184 = getelementptr inbounds [64 x i32], [64 x i32]* %11, i64 0, i64 %183
  %185 = load i32, i32* %184, align 4
  %186 = load i32, i32* %5, align 4
  %187 = sext i32 %186 to i64
  %188 = getelementptr inbounds [64 x i32], [64 x i32]* %10, i64 0, i64 %187
  store i32 %185, i32* %188, align 4
  %189 = load i32, i32* %5, align 4
  %190 = sext i32 %189 to i64
  %191 = getelementptr inbounds [64 x i32], [64 x i32]* %10, i64 0, i64 %190
  %192 = load i32, i32* %191, align 4
  %193 = load i32, i32* %6, align 4
  %194 = icmp ult i32 %192, %193
  br i1 %194, label %195, label %200

195:                                              ; preds = %181
  %196 = load i32, i32* %5, align 4
  %197 = sext i32 %196 to i64
  %198 = getelementptr inbounds [64 x i32], [64 x i32]* %10, i64 0, i64 %197
  %199 = load i32, i32* %198, align 4
  store i32 %199, i32* %6, align 4
  br label %200

200:                                              ; preds = %195, %181
  br label %201

201:                                              ; preds = %200, %120
  %202 = load i32, i32* %5, align 4
  %203 = add nsw i32 %202, 1
  store i32 %203, i32* %5, align 4
  br label %80, !llvm.loop !79

204:                                              ; preds = %80
  %205 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 30), align 8
  %206 = trunc i8 %205 to i1
  br i1 %206, label %207, label %213

207:                                              ; preds = %204
  %208 = call zeroext i1 @lru_maintainer_bumps()
  br i1 %208, label %209, label %213

209:                                              ; preds = %207
  %210 = load i32, i32* %6, align 4
  %211 = icmp ugt i32 %210, 1000
  br i1 %211, label %212, label %213

212:                                              ; preds = %209
  store i32 1000, i32* %6, align 4
  br label %213

213:                                              ; preds = %212, %209, %207, %204
  %214 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 28), align 2
  %215 = trunc i8 %214 to i1
  br i1 %215, label %216, label %224

216:                                              ; preds = %213
  %217 = load i32, i32* %8, align 4
  %218 = load volatile i32, i32* @current_time, align 4
  %219 = icmp ne i32 %217, %218
  br i1 %219, label %220, label %224

220:                                              ; preds = %216
  %221 = load %struct.crawler_expired_data*, %struct.crawler_expired_data** %12, align 8
  %222 = load %struct._logger*, %struct._logger** %13, align 8
  call void @lru_maintainer_crawler_check(%struct.crawler_expired_data* %221, %struct._logger* %222)
  %223 = load volatile i32, i32* @current_time, align 4
  store i32 %223, i32* %8, align 4
  br label %224

224:                                              ; preds = %220, %216, %213
  %225 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 32), align 4
  %226 = icmp eq i32 %225, 1
  br i1 %226, label %227, label %292

227:                                              ; preds = %224
  %228 = load i32, i32* %9, align 4
  %229 = load volatile i32, i32* @current_time, align 4
  %230 = icmp ne i32 %228, %229
  br i1 %230, label %231, label %292

231:                                              ; preds = %227
  %232 = load double, double* %14, align 8
  %233 = load double, double* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 33), align 8
  %234 = fcmp une double %232, %233
  br i1 %234, label %235, label %245

235:                                              ; preds = %231
  %236 = load %struct.slab_automove_reg_t*, %struct.slab_automove_reg_t** %3, align 8
  %237 = getelementptr inbounds %struct.slab_automove_reg_t, %struct.slab_automove_reg_t* %236, i32 0, i32 1
  %238 = load void (i8*)*, void (i8*)** %237, align 8
  %239 = load i8*, i8** %15, align 8
  call void %238(i8* %239)
  %240 = load %struct.slab_automove_reg_t*, %struct.slab_automove_reg_t** %3, align 8
  %241 = getelementptr inbounds %struct.slab_automove_reg_t, %struct.slab_automove_reg_t* %240, i32 0, i32 0
  %242 = load i8* (%struct.settings*)*, i8* (%struct.settings*)** %241, align 8
  %243 = call i8* %242(%struct.settings* @settings)
  store i8* %243, i8** %15, align 8
  %244 = load double, double* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 33), align 8
  store double %244, double* %14, align 8
  br label %245

245:                                              ; preds = %235, %231
  %246 = load %struct.slab_automove_reg_t*, %struct.slab_automove_reg_t** %3, align 8
  %247 = getelementptr inbounds %struct.slab_automove_reg_t, %struct.slab_automove_reg_t* %246, i32 0, i32 2
  %248 = load void (i8*, i32*, i32*)*, void (i8*, i32*, i32*)** %247, align 8
  %249 = load i8*, i8** %15, align 8
  call void %248(i8* %249, i32* %17, i32* %18)
  %250 = load i32, i32* %17, align 4
  %251 = icmp ne i32 %250, -1
  br i1 %251, label %252, label %281

252:                                              ; preds = %245
  %253 = load i32, i32* %18, align 4
  %254 = icmp ne i32 %253, -1
  br i1 %254, label %255, label %281

255:                                              ; preds = %252
  %256 = load i32, i32* %17, align 4
  %257 = load i32, i32* %18, align 4
  %258 = call i32 @slabs_reassign(i32 %256, i32 %257)
  br label %259

259:                                              ; preds = %255
  %260 = load %struct._logger*, %struct._logger** %13, align 8
  store %struct._logger* %260, %struct._logger** %19, align 8
  %261 = load %struct._logger*, %struct._logger** %13, align 8
  %262 = icmp eq %struct._logger* %261, null
  br i1 %262, label %263, label %267

263:                                              ; preds = %259
  %264 = load i32, i32* @logger_key, align 4
  %265 = call i8* @pthread_getspecific(i32 %264) #14
  %266 = bitcast i8* %265 to %struct._logger*
  store %struct._logger* %266, %struct._logger** %19, align 8
  br label %267

267:                                              ; preds = %263, %259
  %268 = load %struct._logger*, %struct._logger** %19, align 8
  %269 = getelementptr inbounds %struct._logger, %struct._logger* %268, i32 0, i32 8
  %270 = load i16, i16* %269, align 4
  %271 = zext i16 %270 to i32
  %272 = and i32 %271, 2
  %273 = icmp ne i32 %272, 0
  br i1 %273, label %274, label %279

274:                                              ; preds = %267
  %275 = load %struct._logger*, %struct._logger** %19, align 8
  %276 = load i32, i32* %17, align 4
  %277 = load i32, i32* %18, align 4
  %278 = call i32 (%struct._logger*, i32, i8*, ...) @logger_log(%struct._logger* %275, i32 5, i8* null, i32 %276, i32 %277)
  br label %279

279:                                              ; preds = %274, %267
  br label %280

280:                                              ; preds = %279
  br label %281

281:                                              ; preds = %280, %252, %245
  %282 = load i32, i32* %18, align 4
  %283 = icmp ne i32 %282, 0
  br i1 %283, label %284, label %286

284:                                              ; preds = %281
  %285 = load volatile i32, i32* @current_time, align 4
  store i32 %285, i32* %9, align 4
  br label %291

286:                                              ; preds = %281
  %287 = load i32, i32* %18, align 4
  %288 = icmp eq i32 %287, 0
  br i1 %288, label %289, label %290

289:                                              ; preds = %286
  store i32 1000, i32* %6, align 4
  br label %290

290:                                              ; preds = %289, %286
  br label %291

291:                                              ; preds = %290, %284
  br label %292

292:                                              ; preds = %291, %227, %224
  br label %59, !llvm.loop !80

293:                                              ; preds = %59
  %294 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @lru_maintainer_lock) #14
  %295 = load %struct.slab_automove_reg_t*, %struct.slab_automove_reg_t** %3, align 8
  %296 = getelementptr inbounds %struct.slab_automove_reg_t, %struct.slab_automove_reg_t* %295, i32 0, i32 1
  %297 = load void (i8*)*, void (i8*)** %296, align 8
  %298 = load i8*, i8** %15, align 8
  call void %297(i8* %298)
  %299 = load %struct.crawler_expired_data*, %struct.crawler_expired_data** %12, align 8
  %300 = bitcast %struct.crawler_expired_data* %299 to i8*
  call void @free(i8* %300) #14
  %301 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %302 = icmp sgt i32 %301, 2
  br i1 %302, label %303, label %306

303:                                              ; preds = %293
  %304 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %305 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %304, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.56.664, i64 0, i64 0))
  br label %306

306:                                              ; preds = %303, %293
  ret i8* null
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @lru_maintainer_juggle(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  store i32 0, i32* %4, align 4
  store i64 0, i64* %5, align 8
  store i32 0, i32* %6, align 4
  %11 = load i32, i32* %2, align 4
  %12 = call i32 @slabs_available_chunks(i32 %11, i8* null, i32* %6)
  %13 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 48), align 4
  %14 = trunc i8 %13 to i1
  br i1 %14, label %15, label %32

15:                                               ; preds = %1
  store i32 0, i32* %3, align 4
  br label %16

16:                                               ; preds = %28, %15
  %17 = load i32, i32* %3, align 4
  %18 = icmp slt i32 %17, 500
  br i1 %18, label %19, label %31

19:                                               ; preds = %16
  %20 = load i32, i32* %2, align 4
  %21 = call i32 @lru_pull_tail(i32 %20, i32 192, i64 0, i8 zeroext 0, i32 0, %struct.lru_pull_tail_return* null)
  %22 = icmp sle i32 %21, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %19
  br label %31

24:                                               ; preds = %19
  %25 = load i32, i32* %4, align 4
  %26 = add nsw i32 %25, 1
  store i32 %26, i32* %4, align 4
  br label %27

27:                                               ; preds = %24
  br label %28

28:                                               ; preds = %27
  %29 = load i32, i32* %3, align 4
  %30 = add nsw i32 %29, 1
  store i32 %30, i32* %3, align 4
  br label %16, !llvm.loop !81

31:                                               ; preds = %23, %16
  br label %32

32:                                               ; preds = %31, %1
  store i32 0, i32* %7, align 4
  store i32 0, i32* %8, align 4
  store i32 0, i32* %9, align 4
  %33 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 30), align 8
  %34 = trunc i8 %33 to i1
  br i1 %34, label %35, label %111

35:                                               ; preds = %32
  %36 = load i32, i32* %2, align 4
  %37 = or i32 %36, 128
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds [256 x %union.pthread_mutex_t], [256 x %union.pthread_mutex_t]* @lru_locks, i64 0, i64 %38
  %40 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %39) #14
  %41 = load i32, i32* %2, align 4
  %42 = or i32 %41, 128
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [256 x %struct._stritem*], [256 x %struct._stritem*]* @tails, i64 0, i64 %43
  %45 = load %struct._stritem*, %struct._stritem** %44, align 8
  %46 = icmp ne %struct._stritem* %45, null
  br i1 %46, label %47, label %57

47:                                               ; preds = %35
  %48 = load volatile i32, i32* @current_time, align 4
  %49 = load i32, i32* %2, align 4
  %50 = or i32 %49, 128
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds [256 x %struct._stritem*], [256 x %struct._stritem*]* @tails, i64 0, i64 %51
  %53 = load %struct._stritem*, %struct._stritem** %52, align 8
  %54 = getelementptr inbounds %struct._stritem, %struct._stritem* %53, i32 0, i32 3
  %55 = load i32, i32* %54, align 8
  %56 = sub i32 %48, %55
  store i32 %56, i32* %7, align 4
  br label %57

57:                                               ; preds = %47, %35
  %58 = load i32, i32* %2, align 4
  %59 = or i32 %58, 128
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds [256 x i64], [256 x i64]* @sizes_bytes, i64 0, i64 %60
  %62 = load i64, i64* %61, align 8
  %63 = load i64, i64* %5, align 8
  %64 = add i64 %63, %62
  store i64 %64, i64* %5, align 8
  %65 = load i32, i32* %2, align 4
  %66 = or i32 %65, 128
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds [256 x %union.pthread_mutex_t], [256 x %union.pthread_mutex_t]* @lru_locks, i64 0, i64 %67
  %69 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %68) #14
  %70 = load i32, i32* %7, align 4
  %71 = uitofp i32 %70 to double
  %72 = load double, double* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 45), align 8
  %73 = fmul double %71, %72
  %74 = fptoui double %73 to i32
  store i32 %74, i32* %8, align 4
  %75 = load i32, i32* %7, align 4
  %76 = uitofp i32 %75 to double
  %77 = load double, double* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 46), align 8
  %78 = fmul double %76, %77
  %79 = fptoui double %78 to i32
  store i32 %79, i32* %9, align 4
  %80 = load i32, i32* %2, align 4
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds [256 x %union.pthread_mutex_t], [256 x %union.pthread_mutex_t]* @lru_locks, i64 0, i64 %81
  %83 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %82) #14
  %84 = load i32, i32* %2, align 4
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds [256 x i64], [256 x i64]* @sizes_bytes, i64 0, i64 %85
  %87 = load i64, i64* %86, align 8
  %88 = load i64, i64* %5, align 8
  %89 = add i64 %88, %87
  store i64 %89, i64* %5, align 8
  %90 = load i32, i32* %2, align 4
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds [256 x %union.pthread_mutex_t], [256 x %union.pthread_mutex_t]* @lru_locks, i64 0, i64 %91
  %93 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %92) #14
  %94 = load i32, i32* %2, align 4
  %95 = or i32 %94, 64
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds [256 x %union.pthread_mutex_t], [256 x %union.pthread_mutex_t]* @lru_locks, i64 0, i64 %96
  %98 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %97) #14
  %99 = load i32, i32* %2, align 4
  %100 = or i32 %99, 64
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds [256 x i64], [256 x i64]* @sizes_bytes, i64 0, i64 %101
  %103 = load i64, i64* %102, align 8
  %104 = load i64, i64* %5, align 8
  %105 = add i64 %104, %103
  store i64 %105, i64* %5, align 8
  %106 = load i32, i32* %2, align 4
  %107 = or i32 %106, 64
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds [256 x %union.pthread_mutex_t], [256 x %union.pthread_mutex_t]* @lru_locks, i64 0, i64 %108
  %110 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %109) #14
  br label %111

111:                                              ; preds = %57, %32
  store i32 0, i32* %3, align 4
  br label %112

112:                                              ; preds = %146, %111
  %113 = load i32, i32* %3, align 4
  %114 = icmp slt i32 %113, 500
  br i1 %114, label %115, label %149

115:                                              ; preds = %112
  store i32 0, i32* %10, align 4
  %116 = load i32, i32* %2, align 4
  %117 = load i64, i64* %5, align 8
  %118 = load i32, i32* %8, align 4
  %119 = call i32 @lru_pull_tail(i32 %116, i32 0, i64 %117, i8 zeroext 2, i32 %118, %struct.lru_pull_tail_return* null)
  %120 = icmp ne i32 %119, 0
  br i1 %120, label %127, label %121

121:                                              ; preds = %115
  %122 = load i32, i32* %2, align 4
  %123 = load i64, i64* %5, align 8
  %124 = load i32, i32* %9, align 4
  %125 = call i32 @lru_pull_tail(i32 %122, i32 64, i64 %123, i8 zeroext 2, i32 %124, %struct.lru_pull_tail_return* null)
  %126 = icmp ne i32 %125, 0
  br i1 %126, label %127, label %130

127:                                              ; preds = %121, %115
  %128 = load i32, i32* %10, align 4
  %129 = add nsw i32 %128, 1
  store i32 %129, i32* %10, align 4
  br label %130

130:                                              ; preds = %127, %121
  %131 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 30), align 8
  %132 = trunc i8 %131 to i1
  br i1 %132, label %133, label %139

133:                                              ; preds = %130
  %134 = load i32, i32* %2, align 4
  %135 = load i64, i64* %5, align 8
  %136 = call i32 @lru_pull_tail(i32 %134, i32 128, i64 %135, i8 zeroext 2, i32 0, %struct.lru_pull_tail_return* null)
  %137 = load i32, i32* %10, align 4
  %138 = add nsw i32 %137, %136
  store i32 %138, i32* %10, align 4
  br label %139

139:                                              ; preds = %133, %130
  %140 = load i32, i32* %10, align 4
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  br label %149

143:                                              ; preds = %139
  %144 = load i32, i32* %4, align 4
  %145 = add nsw i32 %144, 1
  store i32 %145, i32* %4, align 4
  br label %146

146:                                              ; preds = %143
  %147 = load i32, i32* %3, align 4
  %148 = add nsw i32 %147, 1
  store i32 %148, i32* %3, align 4
  br label %112, !llvm.loop !82

149:                                              ; preds = %142, %112
  %150 = load i32, i32* %4, align 4
  ret i32 %150
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @lru_maintainer_bumps() #0 {
  %1 = alloca %struct._lru_bump_buf*, align 8
  %2 = alloca %struct.lru_pull_tail_return*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8, align 1
  store i8 0, i8* %5, align 1
  %6 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @bump_buf_lock) #14
  %7 = load %struct._lru_bump_buf*, %struct._lru_bump_buf** @bump_buf_head, align 8
  store %struct._lru_bump_buf* %7, %struct._lru_bump_buf** %1, align 8
  br label %8

8:                                                ; preds = %63, %0
  %9 = load %struct._lru_bump_buf*, %struct._lru_bump_buf** %1, align 8
  %10 = icmp ne %struct._lru_bump_buf* %9, null
  br i1 %10, label %11, label %67

11:                                               ; preds = %8
  %12 = load %struct._lru_bump_buf*, %struct._lru_bump_buf** %1, align 8
  %13 = getelementptr inbounds %struct._lru_bump_buf, %struct._lru_bump_buf* %12, i32 0, i32 2
  %14 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %13) #14
  %15 = load %struct._lru_bump_buf*, %struct._lru_bump_buf** %1, align 8
  %16 = getelementptr inbounds %struct._lru_bump_buf, %struct._lru_bump_buf* %15, i32 0, i32 3
  %17 = load %struct.bipbuf_t*, %struct.bipbuf_t** %16, align 8
  %18 = call i8* @bipbuf_peek_all(%struct.bipbuf_t* %17, i32* %3)
  %19 = bitcast i8* %18 to %struct.lru_pull_tail_return*
  store %struct.lru_pull_tail_return* %19, %struct.lru_pull_tail_return** %2, align 8
  %20 = load %struct._lru_bump_buf*, %struct._lru_bump_buf** %1, align 8
  %21 = getelementptr inbounds %struct._lru_bump_buf, %struct._lru_bump_buf* %20, i32 0, i32 2
  %22 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %21) #14
  %23 = load %struct.lru_pull_tail_return*, %struct.lru_pull_tail_return** %2, align 8
  %24 = icmp eq %struct.lru_pull_tail_return* %23, null
  br i1 %24, label %25, label %26

25:                                               ; preds = %11
  br label %63

26:                                               ; preds = %11
  %27 = load i32, i32* %3, align 4
  store i32 %27, i32* %4, align 4
  store i8 1, i8* %5, align 1
  br label %28

28:                                               ; preds = %31, %26
  %29 = load i32, i32* %4, align 4
  %30 = icmp ne i32 %29, 0
  br i1 %30, label %31, label %50

31:                                               ; preds = %28
  %32 = load %struct.lru_pull_tail_return*, %struct.lru_pull_tail_return** %2, align 8
  %33 = getelementptr inbounds %struct.lru_pull_tail_return, %struct.lru_pull_tail_return* %32, i32 0, i32 1
  %34 = load i32, i32* %33, align 8
  call void @item_lock(i32 %34)
  %35 = load %struct.lru_pull_tail_return*, %struct.lru_pull_tail_return** %2, align 8
  %36 = getelementptr inbounds %struct.lru_pull_tail_return, %struct.lru_pull_tail_return* %35, i32 0, i32 0
  %37 = load %struct._stritem*, %struct._stritem** %36, align 8
  call void @do_item_update(%struct._stritem* %37)
  %38 = load %struct.lru_pull_tail_return*, %struct.lru_pull_tail_return** %2, align 8
  %39 = getelementptr inbounds %struct.lru_pull_tail_return, %struct.lru_pull_tail_return* %38, i32 0, i32 0
  %40 = load %struct._stritem*, %struct._stritem** %39, align 8
  call void @do_item_remove(%struct._stritem* %40)
  %41 = load %struct.lru_pull_tail_return*, %struct.lru_pull_tail_return** %2, align 8
  %42 = getelementptr inbounds %struct.lru_pull_tail_return, %struct.lru_pull_tail_return* %41, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  call void @item_unlock(i32 %43)
  %44 = load %struct.lru_pull_tail_return*, %struct.lru_pull_tail_return** %2, align 8
  %45 = getelementptr inbounds %struct.lru_pull_tail_return, %struct.lru_pull_tail_return* %44, i32 1
  store %struct.lru_pull_tail_return* %45, %struct.lru_pull_tail_return** %2, align 8
  %46 = load i32, i32* %4, align 4
  %47 = zext i32 %46 to i64
  %48 = sub i64 %47, 16
  %49 = trunc i64 %48 to i32
  store i32 %49, i32* %4, align 4
  br label %28, !llvm.loop !83

50:                                               ; preds = %28
  %51 = load %struct._lru_bump_buf*, %struct._lru_bump_buf** %1, align 8
  %52 = getelementptr inbounds %struct._lru_bump_buf, %struct._lru_bump_buf* %51, i32 0, i32 2
  %53 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %52) #14
  %54 = load %struct._lru_bump_buf*, %struct._lru_bump_buf** %1, align 8
  %55 = getelementptr inbounds %struct._lru_bump_buf, %struct._lru_bump_buf* %54, i32 0, i32 3
  %56 = load %struct.bipbuf_t*, %struct.bipbuf_t** %55, align 8
  %57 = load i32, i32* %3, align 4
  %58 = call i8* @bipbuf_poll(%struct.bipbuf_t* %56, i32 %57)
  %59 = bitcast i8* %58 to %struct.lru_pull_tail_return*
  store %struct.lru_pull_tail_return* %59, %struct.lru_pull_tail_return** %2, align 8
  %60 = load %struct._lru_bump_buf*, %struct._lru_bump_buf** %1, align 8
  %61 = getelementptr inbounds %struct._lru_bump_buf, %struct._lru_bump_buf* %60, i32 0, i32 2
  %62 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %61) #14
  br label %63

63:                                               ; preds = %50, %25
  %64 = load %struct._lru_bump_buf*, %struct._lru_bump_buf** %1, align 8
  %65 = getelementptr inbounds %struct._lru_bump_buf, %struct._lru_bump_buf* %64, i32 0, i32 1
  %66 = load %struct._lru_bump_buf*, %struct._lru_bump_buf** %65, align 8
  store %struct._lru_bump_buf* %66, %struct._lru_bump_buf** %1, align 8
  br label %8, !llvm.loop !84

67:                                               ; preds = %8
  %68 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @bump_buf_lock) #14
  %69 = load i8, i8* %5, align 1
  %70 = trunc i8 %69 to i1
  ret i1 %70
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @lru_maintainer_crawler_check(%struct.crawler_expired_data* %0, %struct._logger* %1) #0 {
  %3 = alloca %struct.crawler_expired_data*, align 8
  %4 = alloca %struct._logger*, align 8
  %5 = alloca i32, align 4
  %6 = alloca [256 x i8], align 16
  %7 = alloca i8, align 1
  %8 = alloca i32, align 4
  %9 = alloca %struct.crawlerstats_t*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca i32, align 4
  %16 = alloca %struct._logger*, align 8
  store %struct.crawler_expired_data* %0, %struct.crawler_expired_data** %3, align 8
  store %struct._logger* %1, %struct._logger** %4, align 8
  %17 = getelementptr inbounds [256 x i8], [256 x i8]* %6, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 16 %17, i8 0, i64 256, i1 false)
  store i8 0, i8* %7, align 1
  store i32 0, i32* %8, align 4
  store i32 1, i32* %5, align 4
  br label %18

18:                                               ; preds = %221, %2
  %19 = load i32, i32* %5, align 4
  %20 = icmp slt i32 %19, 256
  br i1 %20, label %21, label %224

21:                                               ; preds = %18
  %22 = load %struct.crawler_expired_data*, %struct.crawler_expired_data** %3, align 8
  %23 = getelementptr inbounds %struct.crawler_expired_data, %struct.crawler_expired_data* %22, i32 0, i32 1
  %24 = load i32, i32* %5, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [256 x %struct.crawlerstats_t], [256 x %struct.crawlerstats_t]* %23, i64 0, i64 %25
  store %struct.crawlerstats_t* %26, %struct.crawlerstats_t** %9, align 8
  %27 = load %struct.crawlerstats_t*, %struct.crawlerstats_t** %9, align 8
  %28 = getelementptr inbounds %struct.crawlerstats_t, %struct.crawlerstats_t* %27, i32 0, i32 7
  %29 = load i8, i8* %28, align 8
  %30 = trunc i8 %29 to i1
  br i1 %30, label %31, label %184

31:                                               ; preds = %21
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.57.665, i64 0, i64 0), i8** %10, align 8
  %32 = load %struct.crawler_expired_data*, %struct.crawler_expired_data** %3, align 8
  %33 = getelementptr inbounds %struct.crawler_expired_data, %struct.crawler_expired_data* %32, i32 0, i32 0
  %34 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %33) #14
  %35 = load %struct.crawlerstats_t*, %struct.crawlerstats_t** %9, align 8
  %36 = getelementptr inbounds %struct.crawlerstats_t, %struct.crawlerstats_t* %35, i32 0, i32 4
  %37 = load i64, i64* %36, align 8
  %38 = load %struct.crawlerstats_t*, %struct.crawlerstats_t** %9, align 8
  %39 = getelementptr inbounds %struct.crawlerstats_t, %struct.crawlerstats_t* %38, i32 0, i32 2
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %37, %40
  store i64 %41, i64* %12, align 8
  store i64 0, i64* %13, align 8
  %42 = load i64, i64* %12, align 8
  %43 = udiv i64 %42, 100
  %44 = add i64 %43, 1
  store i64 %44, i64* %14, align 8
  %45 = load volatile i32, i32* @current_time, align 4
  %46 = load %struct.crawlerstats_t*, %struct.crawlerstats_t** %9, align 8
  %47 = getelementptr inbounds %struct.crawlerstats_t, %struct.crawlerstats_t* %46, i32 0, i32 6
  %48 = load i32, i32* %47, align 4
  %49 = sub i32 %45, %48
  store i32 %49, i32* %15, align 4
  store i32 0, i32* %11, align 4
  br label %50

50:                                               ; preds = %94, %31
  %51 = load i32, i32* %11, align 4
  %52 = icmp slt i32 %51, 60
  br i1 %52, label %53, label %97

53:                                               ; preds = %50
  %54 = load %struct.crawlerstats_t*, %struct.crawlerstats_t** %9, align 8
  %55 = getelementptr inbounds %struct.crawlerstats_t, %struct.crawlerstats_t* %54, i32 0, i32 0
  %56 = load i32, i32* %11, align 4
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds [61 x i64], [61 x i64]* %55, i64 0, i64 %57
  %59 = load i64, i64* %58, align 8
  %60 = load i64, i64* %13, align 8
  %61 = add i64 %60, %59
  store i64 %61, i64* %13, align 8
  %62 = load i64, i64* %13, align 8
  %63 = load i64, i64* %14, align 8
  %64 = icmp ugt i64 %62, %63
  br i1 %64, label %65, label %93

65:                                               ; preds = %53
  %66 = load i32, i32* %5, align 4
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds [256 x i32], [256 x i32]* @lru_maintainer_crawler_check.next_crawl_wait, i64 0, i64 %67
  %69 = load i32, i32* %68, align 4
  %70 = load i32, i32* %11, align 4
  %71 = mul nsw i32 %70, 60
  %72 = icmp ult i32 %69, %71
  br i1 %72, label %73, label %79

73:                                               ; preds = %65
  %74 = load i32, i32* %5, align 4
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds [256 x i32], [256 x i32]* @lru_maintainer_crawler_check.next_crawl_wait, i64 0, i64 %75
  %77 = load i32, i32* %76, align 4
  %78 = add i32 %77, 60
  store i32 %78, i32* %76, align 4
  br label %92

79:                                               ; preds = %65
  %80 = load i32, i32* %5, align 4
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds [256 x i32], [256 x i32]* @lru_maintainer_crawler_check.next_crawl_wait, i64 0, i64 %81
  %83 = load i32, i32* %82, align 4
  %84 = icmp uge i32 %83, 60
  br i1 %84, label %85, label %91

85:                                               ; preds = %79
  %86 = load i32, i32* %5, align 4
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds [256 x i32], [256 x i32]* @lru_maintainer_crawler_check.next_crawl_wait, i64 0, i64 %87
  %89 = load i32, i32* %88, align 4
  %90 = sub i32 %89, 60
  store i32 %90, i32* %88, align 4
  br label %91

91:                                               ; preds = %85, %79
  br label %92

92:                                               ; preds = %91, %73
  br label %97

93:                                               ; preds = %53
  br label %94

94:                                               ; preds = %93
  %95 = load i32, i32* %11, align 4
  %96 = add nsw i32 %95, 1
  store i32 %96, i32* %11, align 4
  br label %50, !llvm.loop !85

97:                                               ; preds = %92, %50
  %98 = load i64, i64* %13, align 8
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %100, label %106

100:                                              ; preds = %97
  %101 = load i32, i32* %5, align 4
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds [256 x i32], [256 x i32]* @lru_maintainer_crawler_check.next_crawl_wait, i64 0, i64 %102
  %104 = load i32, i32* %103, align 4
  %105 = add i32 %104, 60
  store i32 %105, i32* %103, align 4
  br label %106

106:                                              ; preds = %100, %97
  %107 = load i32, i32* %5, align 4
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds [256 x i32], [256 x i32]* @lru_maintainer_crawler_check.next_crawl_wait, i64 0, i64 %108
  %110 = load i32, i32* %109, align 4
  %111 = icmp ugt i32 %110, 3600
  br i1 %111, label %112, label %116

112:                                              ; preds = %106
  %113 = load i32, i32* %5, align 4
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds [256 x i32], [256 x i32]* @lru_maintainer_crawler_check.next_crawl_wait, i64 0, i64 %114
  store i32 3600, i32* %115, align 4
  br label %116

116:                                              ; preds = %112, %106
  %117 = load volatile i32, i32* @current_time, align 4
  %118 = load i32, i32* %5, align 4
  %119 = sext i32 %118 to i64
  %120 = getelementptr inbounds [256 x i32], [256 x i32]* @lru_maintainer_crawler_check.next_crawl_wait, i64 0, i64 %119
  %121 = load i32, i32* %120, align 4
  %122 = add i32 %117, %121
  %123 = add i32 %122, 5
  %124 = load i32, i32* %5, align 4
  %125 = sext i32 %124 to i64
  %126 = getelementptr inbounds [256 x i32], [256 x i32]* @lru_maintainer_crawler_check.next_crawls, i64 0, i64 %125
  store i32 %123, i32* %126, align 4
  %127 = load i32, i32* %5, align 4
  %128 = and i32 %127, 192
  switch i32 %128, label %133 [
    i32 0, label %129
    i32 64, label %130
    i32 128, label %131
    i32 192, label %132
  ]

129:                                              ; preds = %116
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.58.666, i64 0, i64 0), i8** %10, align 8
  br label %133

130:                                              ; preds = %116
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.59.667, i64 0, i64 0), i8** %10, align 8
  br label %133

131:                                              ; preds = %116
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.60.668, i64 0, i64 0), i8** %10, align 8
  br label %133

132:                                              ; preds = %116
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.61.669, i64 0, i64 0), i8** %10, align 8
  br label %133

133:                                              ; preds = %116, %132, %131, %130, %129
  br label %134

134:                                              ; preds = %133
  %135 = load %struct._logger*, %struct._logger** %4, align 8
  store %struct._logger* %135, %struct._logger** %16, align 8
  %136 = load %struct._logger*, %struct._logger** %4, align 8
  %137 = icmp eq %struct._logger* %136, null
  br i1 %137, label %138, label %142

138:                                              ; preds = %134
  %139 = load i32, i32* @logger_key, align 4
  %140 = call i8* @pthread_getspecific(i32 %139) #14
  %141 = bitcast i8* %140 to %struct._logger*
  store %struct._logger* %141, %struct._logger** %16, align 8
  br label %142

142:                                              ; preds = %138, %134
  %143 = load %struct._logger*, %struct._logger** %16, align 8
  %144 = getelementptr inbounds %struct._logger, %struct._logger* %143, i32 0, i32 8
  %145 = load i16, i16* %144, align 4
  %146 = zext i16 %145 to i32
  %147 = and i32 %146, 2
  %148 = icmp ne i32 %147, 0
  br i1 %148, label %149, label %177

149:                                              ; preds = %142
  %150 = load %struct._logger*, %struct._logger** %16, align 8
  %151 = load i32, i32* %5, align 4
  %152 = and i32 %151, -193
  %153 = load i8*, i8** %10, align 8
  %154 = load i64, i64* %14, align 8
  %155 = load i64, i64* %13, align 8
  %156 = load i32, i32* %15, align 4
  %157 = load i32, i32* %5, align 4
  %158 = sext i32 %157 to i64
  %159 = getelementptr inbounds [256 x i32], [256 x i32]* @lru_maintainer_crawler_check.next_crawls, i64 0, i64 %158
  %160 = load i32, i32* %159, align 4
  %161 = load volatile i32, i32* @current_time, align 4
  %162 = sub i32 %160, %161
  %163 = load %struct.crawlerstats_t*, %struct.crawlerstats_t** %9, align 8
  %164 = getelementptr inbounds %struct.crawlerstats_t, %struct.crawlerstats_t* %163, i32 0, i32 6
  %165 = load i32, i32* %164, align 4
  %166 = load %struct.crawlerstats_t*, %struct.crawlerstats_t** %9, align 8
  %167 = getelementptr inbounds %struct.crawlerstats_t, %struct.crawlerstats_t* %166, i32 0, i32 5
  %168 = load i32, i32* %167, align 8
  %169 = sub i32 %165, %168
  %170 = load %struct.crawlerstats_t*, %struct.crawlerstats_t** %9, align 8
  %171 = getelementptr inbounds %struct.crawlerstats_t, %struct.crawlerstats_t* %170, i32 0, i32 4
  %172 = load i64, i64* %171, align 8
  %173 = load %struct.crawlerstats_t*, %struct.crawlerstats_t** %9, align 8
  %174 = getelementptr inbounds %struct.crawlerstats_t, %struct.crawlerstats_t* %173, i32 0, i32 3
  %175 = load i64, i64* %174, align 8
  %176 = call i32 (%struct._logger*, i32, i8*, ...) @logger_log(%struct._logger* %150, i32 4, i8* null, i32 %152, i8* %153, i64 %154, i64 %155, i32 %156, i32 %162, i32 %169, i64 %172, i64 %175)
  br label %177

177:                                              ; preds = %149, %142
  br label %178

178:                                              ; preds = %177
  %179 = load %struct.crawlerstats_t*, %struct.crawlerstats_t** %9, align 8
  %180 = getelementptr inbounds %struct.crawlerstats_t, %struct.crawlerstats_t* %179, i32 0, i32 7
  store i8 0, i8* %180, align 8
  %181 = load %struct.crawler_expired_data*, %struct.crawler_expired_data** %3, align 8
  %182 = getelementptr inbounds %struct.crawler_expired_data, %struct.crawler_expired_data* %181, i32 0, i32 0
  %183 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %182) #14
  br label %184

184:                                              ; preds = %178, %21
  %185 = load volatile i32, i32* @current_time, align 4
  %186 = load i32, i32* %5, align 4
  %187 = sext i32 %186 to i64
  %188 = getelementptr inbounds [256 x i32], [256 x i32]* @lru_maintainer_crawler_check.next_crawls, i64 0, i64 %187
  %189 = load i32, i32* %188, align 4
  %190 = icmp ugt i32 %185, %189
  br i1 %190, label %191, label %220

191:                                              ; preds = %184
  %192 = load i32, i32* %5, align 4
  %193 = sext i32 %192 to i64
  %194 = getelementptr inbounds [256 x %union.pthread_mutex_t], [256 x %union.pthread_mutex_t]* @lru_locks, i64 0, i64 %193
  %195 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %194) #14
  %196 = load i32, i32* %5, align 4
  %197 = sext i32 %196 to i64
  %198 = getelementptr inbounds [256 x i32], [256 x i32]* @sizes, i64 0, i64 %197
  %199 = load i32, i32* %198, align 4
  %200 = load i32, i32* %8, align 4
  %201 = icmp ugt i32 %199, %200
  br i1 %201, label %202, label %207

202:                                              ; preds = %191
  %203 = load i32, i32* %5, align 4
  %204 = sext i32 %203 to i64
  %205 = getelementptr inbounds [256 x i32], [256 x i32]* @sizes, i64 0, i64 %204
  %206 = load i32, i32* %205, align 4
  store i32 %206, i32* %8, align 4
  br label %207

207:                                              ; preds = %202, %191
  %208 = load i32, i32* %5, align 4
  %209 = sext i32 %208 to i64
  %210 = getelementptr inbounds [256 x %union.pthread_mutex_t], [256 x %union.pthread_mutex_t]* @lru_locks, i64 0, i64 %209
  %211 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %210) #14
  %212 = load i32, i32* %5, align 4
  %213 = sext i32 %212 to i64
  %214 = getelementptr inbounds [256 x i8], [256 x i8]* %6, i64 0, i64 %213
  store i8 1, i8* %214, align 1
  store i8 1, i8* %7, align 1
  %215 = load volatile i32, i32* @current_time, align 4
  %216 = add i32 %215, 5
  %217 = load i32, i32* %5, align 4
  %218 = sext i32 %217 to i64
  %219 = getelementptr inbounds [256 x i32], [256 x i32]* @lru_maintainer_crawler_check.next_crawls, i64 0, i64 %218
  store i32 %216, i32* %219, align 4
  br label %220

220:                                              ; preds = %207, %184
  br label %221

221:                                              ; preds = %220
  %222 = load i32, i32* %5, align 4
  %223 = add nsw i32 %222, 1
  store i32 %223, i32* %5, align 4
  br label %18, !llvm.loop !86

224:                                              ; preds = %18
  %225 = load i8, i8* %7, align 1
  %226 = trunc i8 %225 to i1
  br i1 %226, label %227, label %242

227:                                              ; preds = %224
  %228 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 42), align 4
  %229 = icmp ne i32 %228, 0
  br i1 %229, label %230, label %236

230:                                              ; preds = %227
  %231 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 42), align 4
  %232 = load i32, i32* %8, align 4
  %233 = icmp ult i32 %231, %232
  br i1 %233, label %234, label %236

234:                                              ; preds = %230
  %235 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 42), align 4
  store i32 %235, i32* %8, align 4
  br label %236

236:                                              ; preds = %234, %230, %227
  %237 = getelementptr inbounds [256 x i8], [256 x i8]* %6, i64 0, i64 0
  %238 = load i32, i32* %8, align 4
  %239 = load %struct.crawler_expired_data*, %struct.crawler_expired_data** %3, align 8
  %240 = bitcast %struct.crawler_expired_data* %239 to i8*
  %241 = call i32 @lru_crawler_start(i8* %237, i32 %238, i32 0, i8* %240, i8* null, i32 0)
  br label %242

242:                                              ; preds = %236, %224
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lru_maintainer_pause() #0 {
  %1 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @lru_maintainer_lock) #14
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lru_maintainer_resume() #0 {
  %1 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @lru_maintainer_lock) #14
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @init_lru_maintainer() #0 {
  store i32 1, i32* @lru_maintainer_initialized, align 4
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @do_item_linktail_q(%struct._stritem* %0) #0 {
  %2 = alloca %struct._stritem*, align 8
  %3 = alloca %struct._stritem**, align 8
  %4 = alloca %struct._stritem**, align 8
  store %struct._stritem* %0, %struct._stritem** %2, align 8
  %5 = load %struct._stritem*, %struct._stritem** %2, align 8
  %6 = getelementptr inbounds %struct._stritem, %struct._stritem* %5, i32 0, i32 8
  %7 = load i8, i8* %6, align 8
  %8 = zext i8 %7 to i64
  %9 = getelementptr inbounds [256 x %struct._stritem*], [256 x %struct._stritem*]* @heads, i64 0, i64 %8
  store %struct._stritem** %9, %struct._stritem*** %3, align 8
  %10 = load %struct._stritem*, %struct._stritem** %2, align 8
  %11 = getelementptr inbounds %struct._stritem, %struct._stritem* %10, i32 0, i32 8
  %12 = load i8, i8* %11, align 8
  %13 = zext i8 %12 to i64
  %14 = getelementptr inbounds [256 x %struct._stritem*], [256 x %struct._stritem*]* @tails, i64 0, i64 %13
  store %struct._stritem** %14, %struct._stritem*** %4, align 8
  %15 = load %struct._stritem**, %struct._stritem*** %4, align 8
  %16 = load %struct._stritem*, %struct._stritem** %15, align 8
  %17 = load %struct._stritem*, %struct._stritem** %2, align 8
  %18 = getelementptr inbounds %struct._stritem, %struct._stritem* %17, i32 0, i32 1
  store %struct._stritem* %16, %struct._stritem** %18, align 8
  %19 = load %struct._stritem*, %struct._stritem** %2, align 8
  %20 = getelementptr inbounds %struct._stritem, %struct._stritem* %19, i32 0, i32 0
  store %struct._stritem* null, %struct._stritem** %20, align 8
  %21 = load %struct._stritem*, %struct._stritem** %2, align 8
  %22 = getelementptr inbounds %struct._stritem, %struct._stritem* %21, i32 0, i32 1
  %23 = load %struct._stritem*, %struct._stritem** %22, align 8
  %24 = icmp ne %struct._stritem* %23, null
  br i1 %24, label %25, label %31

25:                                               ; preds = %1
  %26 = load %struct._stritem*, %struct._stritem** %2, align 8
  %27 = load %struct._stritem*, %struct._stritem** %2, align 8
  %28 = getelementptr inbounds %struct._stritem, %struct._stritem* %27, i32 0, i32 1
  %29 = load %struct._stritem*, %struct._stritem** %28, align 8
  %30 = getelementptr inbounds %struct._stritem, %struct._stritem* %29, i32 0, i32 0
  store %struct._stritem* %26, %struct._stritem** %30, align 8
  br label %31

31:                                               ; preds = %25, %1
  %32 = load %struct._stritem*, %struct._stritem** %2, align 8
  %33 = load %struct._stritem**, %struct._stritem*** %4, align 8
  store %struct._stritem* %32, %struct._stritem** %33, align 8
  %34 = load %struct._stritem**, %struct._stritem*** %3, align 8
  %35 = load %struct._stritem*, %struct._stritem** %34, align 8
  %36 = icmp eq %struct._stritem* %35, null
  br i1 %36, label %37, label %40

37:                                               ; preds = %31
  %38 = load %struct._stritem*, %struct._stritem** %2, align 8
  %39 = load %struct._stritem**, %struct._stritem*** %3, align 8
  store %struct._stritem* %38, %struct._stritem** %39, align 8
  br label %40

40:                                               ; preds = %37, %31
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @do_item_unlinktail_q(%struct._stritem* %0) #0 {
  %2 = alloca %struct._stritem*, align 8
  %3 = alloca %struct._stritem**, align 8
  %4 = alloca %struct._stritem**, align 8
  store %struct._stritem* %0, %struct._stritem** %2, align 8
  %5 = load %struct._stritem*, %struct._stritem** %2, align 8
  %6 = getelementptr inbounds %struct._stritem, %struct._stritem* %5, i32 0, i32 8
  %7 = load i8, i8* %6, align 8
  %8 = zext i8 %7 to i64
  %9 = getelementptr inbounds [256 x %struct._stritem*], [256 x %struct._stritem*]* @heads, i64 0, i64 %8
  store %struct._stritem** %9, %struct._stritem*** %3, align 8
  %10 = load %struct._stritem*, %struct._stritem** %2, align 8
  %11 = getelementptr inbounds %struct._stritem, %struct._stritem* %10, i32 0, i32 8
  %12 = load i8, i8* %11, align 8
  %13 = zext i8 %12 to i64
  %14 = getelementptr inbounds [256 x %struct._stritem*], [256 x %struct._stritem*]* @tails, i64 0, i64 %13
  store %struct._stritem** %14, %struct._stritem*** %4, align 8
  %15 = load %struct._stritem**, %struct._stritem*** %3, align 8
  %16 = load %struct._stritem*, %struct._stritem** %15, align 8
  %17 = load %struct._stritem*, %struct._stritem** %2, align 8
  %18 = icmp eq %struct._stritem* %16, %17
  br i1 %18, label %19, label %24

19:                                               ; preds = %1
  %20 = load %struct._stritem*, %struct._stritem** %2, align 8
  %21 = getelementptr inbounds %struct._stritem, %struct._stritem* %20, i32 0, i32 0
  %22 = load %struct._stritem*, %struct._stritem** %21, align 8
  %23 = load %struct._stritem**, %struct._stritem*** %3, align 8
  store %struct._stritem* %22, %struct._stritem** %23, align 8
  br label %24

24:                                               ; preds = %19, %1
  %25 = load %struct._stritem**, %struct._stritem*** %4, align 8
  %26 = load %struct._stritem*, %struct._stritem** %25, align 8
  %27 = load %struct._stritem*, %struct._stritem** %2, align 8
  %28 = icmp eq %struct._stritem* %26, %27
  br i1 %28, label %29, label %34

29:                                               ; preds = %24
  %30 = load %struct._stritem*, %struct._stritem** %2, align 8
  %31 = getelementptr inbounds %struct._stritem, %struct._stritem* %30, i32 0, i32 1
  %32 = load %struct._stritem*, %struct._stritem** %31, align 8
  %33 = load %struct._stritem**, %struct._stritem*** %4, align 8
  store %struct._stritem* %32, %struct._stritem** %33, align 8
  br label %34

34:                                               ; preds = %29, %24
  %35 = load %struct._stritem*, %struct._stritem** %2, align 8
  %36 = getelementptr inbounds %struct._stritem, %struct._stritem* %35, i32 0, i32 0
  %37 = load %struct._stritem*, %struct._stritem** %36, align 8
  %38 = icmp ne %struct._stritem* %37, null
  br i1 %38, label %39, label %47

39:                                               ; preds = %34
  %40 = load %struct._stritem*, %struct._stritem** %2, align 8
  %41 = getelementptr inbounds %struct._stritem, %struct._stritem* %40, i32 0, i32 1
  %42 = load %struct._stritem*, %struct._stritem** %41, align 8
  %43 = load %struct._stritem*, %struct._stritem** %2, align 8
  %44 = getelementptr inbounds %struct._stritem, %struct._stritem* %43, i32 0, i32 0
  %45 = load %struct._stritem*, %struct._stritem** %44, align 8
  %46 = getelementptr inbounds %struct._stritem, %struct._stritem* %45, i32 0, i32 1
  store %struct._stritem* %42, %struct._stritem** %46, align 8
  br label %47

47:                                               ; preds = %39, %34
  %48 = load %struct._stritem*, %struct._stritem** %2, align 8
  %49 = getelementptr inbounds %struct._stritem, %struct._stritem* %48, i32 0, i32 1
  %50 = load %struct._stritem*, %struct._stritem** %49, align 8
  %51 = icmp ne %struct._stritem* %50, null
  br i1 %51, label %52, label %60

52:                                               ; preds = %47
  %53 = load %struct._stritem*, %struct._stritem** %2, align 8
  %54 = getelementptr inbounds %struct._stritem, %struct._stritem* %53, i32 0, i32 0
  %55 = load %struct._stritem*, %struct._stritem** %54, align 8
  %56 = load %struct._stritem*, %struct._stritem** %2, align 8
  %57 = getelementptr inbounds %struct._stritem, %struct._stritem* %56, i32 0, i32 1
  %58 = load %struct._stritem*, %struct._stritem** %57, align 8
  %59 = getelementptr inbounds %struct._stritem, %struct._stritem* %58, i32 0, i32 0
  store %struct._stritem* %55, %struct._stritem** %59, align 8
  br label %60

60:                                               ; preds = %52, %47
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct._stritem* @do_item_crawl_q(%struct._stritem* %0) #0 {
  %2 = alloca %struct._stritem*, align 8
  %3 = alloca %struct._stritem*, align 8
  %4 = alloca %struct._stritem**, align 8
  %5 = alloca %struct._stritem**, align 8
  store %struct._stritem* %0, %struct._stritem** %3, align 8
  %6 = load %struct._stritem*, %struct._stritem** %3, align 8
  %7 = getelementptr inbounds %struct._stritem, %struct._stritem* %6, i32 0, i32 8
  %8 = load i8, i8* %7, align 8
  %9 = zext i8 %8 to i64
  %10 = getelementptr inbounds [256 x %struct._stritem*], [256 x %struct._stritem*]* @heads, i64 0, i64 %9
  store %struct._stritem** %10, %struct._stritem*** %4, align 8
  %11 = load %struct._stritem*, %struct._stritem** %3, align 8
  %12 = getelementptr inbounds %struct._stritem, %struct._stritem* %11, i32 0, i32 8
  %13 = load i8, i8* %12, align 8
  %14 = zext i8 %13 to i64
  %15 = getelementptr inbounds [256 x %struct._stritem*], [256 x %struct._stritem*]* @tails, i64 0, i64 %14
  store %struct._stritem** %15, %struct._stritem*** %5, align 8
  %16 = load %struct._stritem*, %struct._stritem** %3, align 8
  %17 = getelementptr inbounds %struct._stritem, %struct._stritem* %16, i32 0, i32 1
  %18 = load %struct._stritem*, %struct._stritem** %17, align 8
  %19 = icmp eq %struct._stritem* %18, null
  br i1 %19, label %20, label %35

20:                                               ; preds = %1
  %21 = load %struct._stritem*, %struct._stritem** %3, align 8
  %22 = getelementptr inbounds %struct._stritem, %struct._stritem* %21, i32 0, i32 0
  %23 = load %struct._stritem*, %struct._stritem** %22, align 8
  %24 = icmp ne %struct._stritem* %23, null
  br i1 %24, label %25, label %34

25:                                               ; preds = %20
  %26 = load %struct._stritem*, %struct._stritem** %3, align 8
  %27 = getelementptr inbounds %struct._stritem, %struct._stritem* %26, i32 0, i32 0
  %28 = load %struct._stritem*, %struct._stritem** %27, align 8
  %29 = load %struct._stritem**, %struct._stritem*** %4, align 8
  store %struct._stritem* %28, %struct._stritem** %29, align 8
  %30 = load %struct._stritem*, %struct._stritem** %3, align 8
  %31 = getelementptr inbounds %struct._stritem, %struct._stritem* %30, i32 0, i32 0
  %32 = load %struct._stritem*, %struct._stritem** %31, align 8
  %33 = getelementptr inbounds %struct._stritem, %struct._stritem* %32, i32 0, i32 1
  store %struct._stritem* null, %struct._stritem** %33, align 8
  br label %34

34:                                               ; preds = %25, %20
  store %struct._stritem* null, %struct._stritem** %2, align 8
  br label %118

35:                                               ; preds = %1
  %36 = load %struct._stritem*, %struct._stritem** %3, align 8
  %37 = getelementptr inbounds %struct._stritem, %struct._stritem* %36, i32 0, i32 1
  %38 = load %struct._stritem*, %struct._stritem** %37, align 8
  %39 = icmp ne %struct._stritem* %38, null
  br i1 %39, label %40, label %114

40:                                               ; preds = %35
  %41 = load %struct._stritem**, %struct._stritem*** %4, align 8
  %42 = load %struct._stritem*, %struct._stritem** %41, align 8
  %43 = load %struct._stritem*, %struct._stritem** %3, align 8
  %44 = getelementptr inbounds %struct._stritem, %struct._stritem* %43, i32 0, i32 1
  %45 = load %struct._stritem*, %struct._stritem** %44, align 8
  %46 = icmp eq %struct._stritem* %42, %45
  br i1 %46, label %47, label %50

47:                                               ; preds = %40
  %48 = load %struct._stritem*, %struct._stritem** %3, align 8
  %49 = load %struct._stritem**, %struct._stritem*** %4, align 8
  store %struct._stritem* %48, %struct._stritem** %49, align 8
  br label %50

50:                                               ; preds = %47, %40
  %51 = load %struct._stritem**, %struct._stritem*** %5, align 8
  %52 = load %struct._stritem*, %struct._stritem** %51, align 8
  %53 = load %struct._stritem*, %struct._stritem** %3, align 8
  %54 = icmp eq %struct._stritem* %52, %53
  br i1 %54, label %55, label %60

55:                                               ; preds = %50
  %56 = load %struct._stritem*, %struct._stritem** %3, align 8
  %57 = getelementptr inbounds %struct._stritem, %struct._stritem* %56, i32 0, i32 1
  %58 = load %struct._stritem*, %struct._stritem** %57, align 8
  %59 = load %struct._stritem**, %struct._stritem*** %5, align 8
  store %struct._stritem* %58, %struct._stritem** %59, align 8
  br label %60

60:                                               ; preds = %55, %50
  %61 = load %struct._stritem*, %struct._stritem** %3, align 8
  %62 = getelementptr inbounds %struct._stritem, %struct._stritem* %61, i32 0, i32 0
  %63 = load %struct._stritem*, %struct._stritem** %62, align 8
  %64 = icmp ne %struct._stritem* %63, null
  br i1 %64, label %65, label %80

65:                                               ; preds = %60
  %66 = load %struct._stritem*, %struct._stritem** %3, align 8
  %67 = getelementptr inbounds %struct._stritem, %struct._stritem* %66, i32 0, i32 0
  %68 = load %struct._stritem*, %struct._stritem** %67, align 8
  %69 = load %struct._stritem*, %struct._stritem** %3, align 8
  %70 = getelementptr inbounds %struct._stritem, %struct._stritem* %69, i32 0, i32 1
  %71 = load %struct._stritem*, %struct._stritem** %70, align 8
  %72 = getelementptr inbounds %struct._stritem, %struct._stritem* %71, i32 0, i32 0
  store %struct._stritem* %68, %struct._stritem** %72, align 8
  %73 = load %struct._stritem*, %struct._stritem** %3, align 8
  %74 = getelementptr inbounds %struct._stritem, %struct._stritem* %73, i32 0, i32 1
  %75 = load %struct._stritem*, %struct._stritem** %74, align 8
  %76 = load %struct._stritem*, %struct._stritem** %3, align 8
  %77 = getelementptr inbounds %struct._stritem, %struct._stritem* %76, i32 0, i32 0
  %78 = load %struct._stritem*, %struct._stritem** %77, align 8
  %79 = getelementptr inbounds %struct._stritem, %struct._stritem* %78, i32 0, i32 1
  store %struct._stritem* %75, %struct._stritem** %79, align 8
  br label %85

80:                                               ; preds = %60
  %81 = load %struct._stritem*, %struct._stritem** %3, align 8
  %82 = getelementptr inbounds %struct._stritem, %struct._stritem* %81, i32 0, i32 1
  %83 = load %struct._stritem*, %struct._stritem** %82, align 8
  %84 = getelementptr inbounds %struct._stritem, %struct._stritem* %83, i32 0, i32 0
  store %struct._stritem* null, %struct._stritem** %84, align 8
  br label %85

85:                                               ; preds = %80, %65
  %86 = load %struct._stritem*, %struct._stritem** %3, align 8
  %87 = getelementptr inbounds %struct._stritem, %struct._stritem* %86, i32 0, i32 1
  %88 = load %struct._stritem*, %struct._stritem** %87, align 8
  %89 = load %struct._stritem*, %struct._stritem** %3, align 8
  %90 = getelementptr inbounds %struct._stritem, %struct._stritem* %89, i32 0, i32 0
  store %struct._stritem* %88, %struct._stritem** %90, align 8
  %91 = load %struct._stritem*, %struct._stritem** %3, align 8
  %92 = getelementptr inbounds %struct._stritem, %struct._stritem* %91, i32 0, i32 0
  %93 = load %struct._stritem*, %struct._stritem** %92, align 8
  %94 = getelementptr inbounds %struct._stritem, %struct._stritem* %93, i32 0, i32 1
  %95 = load %struct._stritem*, %struct._stritem** %94, align 8
  %96 = load %struct._stritem*, %struct._stritem** %3, align 8
  %97 = getelementptr inbounds %struct._stritem, %struct._stritem* %96, i32 0, i32 1
  store %struct._stritem* %95, %struct._stritem** %97, align 8
  %98 = load %struct._stritem*, %struct._stritem** %3, align 8
  %99 = load %struct._stritem*, %struct._stritem** %3, align 8
  %100 = getelementptr inbounds %struct._stritem, %struct._stritem* %99, i32 0, i32 0
  %101 = load %struct._stritem*, %struct._stritem** %100, align 8
  %102 = getelementptr inbounds %struct._stritem, %struct._stritem* %101, i32 0, i32 1
  store %struct._stritem* %98, %struct._stritem** %102, align 8
  %103 = load %struct._stritem*, %struct._stritem** %3, align 8
  %104 = getelementptr inbounds %struct._stritem, %struct._stritem* %103, i32 0, i32 1
  %105 = load %struct._stritem*, %struct._stritem** %104, align 8
  %106 = icmp ne %struct._stritem* %105, null
  br i1 %106, label %107, label %113

107:                                              ; preds = %85
  %108 = load %struct._stritem*, %struct._stritem** %3, align 8
  %109 = load %struct._stritem*, %struct._stritem** %3, align 8
  %110 = getelementptr inbounds %struct._stritem, %struct._stritem* %109, i32 0, i32 1
  %111 = load %struct._stritem*, %struct._stritem** %110, align 8
  %112 = getelementptr inbounds %struct._stritem, %struct._stritem* %111, i32 0, i32 0
  store %struct._stritem* %108, %struct._stritem** %112, align 8
  br label %113

113:                                              ; preds = %107, %85
  br label %114

114:                                              ; preds = %113, %35
  %115 = load %struct._stritem*, %struct._stritem** %3, align 8
  %116 = getelementptr inbounds %struct._stritem, %struct._stritem* %115, i32 0, i32 0
  %117 = load %struct._stritem*, %struct._stritem** %116, align 8
  store %struct._stritem* %117, %struct._stritem** %2, align 8
  br label %118

118:                                              ; preds = %114, %34
  %119 = load %struct._stritem*, %struct._stritem** %2, align 8
  ret %struct._stritem* %119
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @assoc_init(i32 %0) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = icmp ne i32 %3, 0
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = load i32, i32* %2, align 4
  store i32 %6, i32* @hashpower, align 4
  br label %7

7:                                                ; preds = %5, %1
  %8 = load i32, i32* @hashpower, align 4
  %9 = zext i32 %8 to i64
  %10 = shl i64 1, %9
  %11 = call noalias i8* @calloc(i64 %10, i64 8) #14
  %12 = bitcast i8* %11 to %struct._stritem**
  store %struct._stritem** %12, %struct._stritem*** @primary_hashtable, align 8
  %13 = load %struct._stritem**, %struct._stritem*** @primary_hashtable, align 8
  %14 = icmp ne %struct._stritem** %13, null
  br i1 %14, label %18, label %15

15:                                               ; preds = %7
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %17 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.674, i64 0, i64 0))
  call void @exit(i32 1) #17
  unreachable

18:                                               ; preds = %7
  call void @STATS_LOCK()
  %19 = load i32, i32* @hashpower, align 4
  store i32 %19, i32* getelementptr inbounds (%struct.stats_state, %struct.stats_state* @stats_state, i32 0, i32 6), align 8
  %20 = load i32, i32* @hashpower, align 4
  %21 = zext i32 %20 to i64
  %22 = shl i64 1, %21
  %23 = mul i64 %22, 8
  store i64 %23, i64* getelementptr inbounds (%struct.stats_state, %struct.stats_state* @stats_state, i32 0, i32 3), align 8
  call void @STATS_UNLOCK()
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct._stritem* @assoc_find(i8* %0, i64 %1, i32 %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct._stritem*, align 8
  %8 = alloca i64, align 8
  %9 = alloca %struct._stritem*, align 8
  %10 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32 %2, i32* %6, align 4
  %11 = load i8, i8* @expanding, align 1
  %12 = trunc i8 %11 to i1
  br i1 %12, label %13, label %29

13:                                               ; preds = %3
  %14 = load i32, i32* %6, align 4
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* @hashpower, align 4
  %17 = sub i32 %16, 1
  %18 = zext i32 %17 to i64
  %19 = shl i64 1, %18
  %20 = sub i64 %19, 1
  %21 = and i64 %15, %20
  store i64 %21, i64* %8, align 8
  %22 = load i64, i64* @expand_bucket, align 8
  %23 = icmp uge i64 %21, %22
  br i1 %23, label %24, label %29

24:                                               ; preds = %13
  %25 = load %struct._stritem**, %struct._stritem*** @old_hashtable, align 8
  %26 = load i64, i64* %8, align 8
  %27 = getelementptr inbounds %struct._stritem*, %struct._stritem** %25, i64 %26
  %28 = load %struct._stritem*, %struct._stritem** %27, align 8
  store %struct._stritem* %28, %struct._stritem** %7, align 8
  br label %40

29:                                               ; preds = %13, %3
  %30 = load %struct._stritem**, %struct._stritem*** @primary_hashtable, align 8
  %31 = load i32, i32* %6, align 4
  %32 = zext i32 %31 to i64
  %33 = load i32, i32* @hashpower, align 4
  %34 = zext i32 %33 to i64
  %35 = shl i64 1, %34
  %36 = sub i64 %35, 1
  %37 = and i64 %32, %36
  %38 = getelementptr inbounds %struct._stritem*, %struct._stritem** %30, i64 %37
  %39 = load %struct._stritem*, %struct._stritem** %38, align 8
  store %struct._stritem* %39, %struct._stritem** %7, align 8
  br label %40

40:                                               ; preds = %29, %24
  store %struct._stritem* null, %struct._stritem** %9, align 8
  store i32 0, i32* %10, align 4
  br label %41

41:                                               ; preds = %70, %40
  %42 = load %struct._stritem*, %struct._stritem** %7, align 8
  %43 = icmp ne %struct._stritem* %42, null
  br i1 %43, label %44, label %76

44:                                               ; preds = %41
  %45 = load i64, i64* %5, align 8
  %46 = load %struct._stritem*, %struct._stritem** %7, align 8
  %47 = getelementptr inbounds %struct._stritem, %struct._stritem* %46, i32 0, i32 9
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i64
  %50 = icmp eq i64 %45, %49
  br i1 %50, label %51, label %70

51:                                               ; preds = %44
  %52 = load i8*, i8** %4, align 8
  %53 = load %struct._stritem*, %struct._stritem** %7, align 8
  %54 = getelementptr inbounds %struct._stritem, %struct._stritem* %53, i32 0, i32 10
  %55 = bitcast [0 x %union.anon.10]* %54 to i8*
  %56 = load %struct._stritem*, %struct._stritem** %7, align 8
  %57 = getelementptr inbounds %struct._stritem, %struct._stritem* %56, i32 0, i32 7
  %58 = load i16, i16* %57, align 2
  %59 = zext i16 %58 to i32
  %60 = and i32 %59, 2
  %61 = icmp ne i32 %60, 0
  %62 = zext i1 %61 to i64
  %63 = select i1 %61, i64 8, i64 0
  %64 = getelementptr inbounds i8, i8* %55, i64 %63
  %65 = load i64, i64* %5, align 8
  %66 = call i32 @memcmp(i8* %52, i8* %64, i64 %65) #16
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %70

68:                                               ; preds = %51
  %69 = load %struct._stritem*, %struct._stritem** %7, align 8
  store %struct._stritem* %69, %struct._stritem** %9, align 8
  br label %76

70:                                               ; preds = %51, %44
  %71 = load %struct._stritem*, %struct._stritem** %7, align 8
  %72 = getelementptr inbounds %struct._stritem, %struct._stritem* %71, i32 0, i32 2
  %73 = load %struct._stritem*, %struct._stritem** %72, align 8
  store %struct._stritem* %73, %struct._stritem** %7, align 8
  %74 = load i32, i32* %10, align 4
  %75 = add nsw i32 %74, 1
  store i32 %75, i32* %10, align 4
  br label %41, !llvm.loop !87

76:                                               ; preds = %68, %41
  %77 = load %struct._stritem*, %struct._stritem** %9, align 8
  ret %struct._stritem* %77
}

; Function Attrs: nounwind readonly willreturn
declare dso_local i32 @memcmp(i8*, i8*, i64) #6

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @assoc_start_expand(i64 %0) #0 {
  %2 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  %3 = call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* @maintenance_lock) #14
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %20

5:                                                ; preds = %1
  %6 = load i64, i64* %2, align 8
  %7 = load i32, i32* @hashpower, align 4
  %8 = zext i32 %7 to i64
  %9 = shl i64 1, %8
  %10 = mul i64 %9, 3
  %11 = udiv i64 %10, 2
  %12 = icmp ugt i64 %6, %11
  br i1 %12, label %13, label %18

13:                                               ; preds = %5
  %14 = load i32, i32* @hashpower, align 4
  %15 = icmp ult i32 %14, 32
  br i1 %15, label %16, label %18

16:                                               ; preds = %13
  %17 = call i32 @pthread_cond_signal(%union.pthread_cond_t* @maintenance_cond) #14
  br label %18

18:                                               ; preds = %16, %13, %5
  %19 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @maintenance_lock) #14
  br label %20

20:                                               ; preds = %18, %1
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @assoc_insert(%struct._stritem* %0, i32 %1) #0 {
  %3 = alloca %struct._stritem*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i64, align 8
  store %struct._stritem* %0, %struct._stritem** %3, align 8
  store i32 %1, i32* %4, align 4
  %6 = load i8, i8* @expanding, align 1
  %7 = trunc i8 %6 to i1
  br i1 %7, label %8, label %30

8:                                                ; preds = %2
  %9 = load i32, i32* %4, align 4
  %10 = zext i32 %9 to i64
  %11 = load i32, i32* @hashpower, align 4
  %12 = sub i32 %11, 1
  %13 = zext i32 %12 to i64
  %14 = shl i64 1, %13
  %15 = sub i64 %14, 1
  %16 = and i64 %10, %15
  store i64 %16, i64* %5, align 8
  %17 = load i64, i64* @expand_bucket, align 8
  %18 = icmp uge i64 %16, %17
  br i1 %18, label %19, label %30

19:                                               ; preds = %8
  %20 = load %struct._stritem**, %struct._stritem*** @old_hashtable, align 8
  %21 = load i64, i64* %5, align 8
  %22 = getelementptr inbounds %struct._stritem*, %struct._stritem** %20, i64 %21
  %23 = load %struct._stritem*, %struct._stritem** %22, align 8
  %24 = load %struct._stritem*, %struct._stritem** %3, align 8
  %25 = getelementptr inbounds %struct._stritem, %struct._stritem* %24, i32 0, i32 2
  store %struct._stritem* %23, %struct._stritem** %25, align 8
  %26 = load %struct._stritem*, %struct._stritem** %3, align 8
  %27 = load %struct._stritem**, %struct._stritem*** @old_hashtable, align 8
  %28 = load i64, i64* %5, align 8
  %29 = getelementptr inbounds %struct._stritem*, %struct._stritem** %27, i64 %28
  store %struct._stritem* %26, %struct._stritem** %29, align 8
  br label %53

30:                                               ; preds = %8, %2
  %31 = load %struct._stritem**, %struct._stritem*** @primary_hashtable, align 8
  %32 = load i32, i32* %4, align 4
  %33 = zext i32 %32 to i64
  %34 = load i32, i32* @hashpower, align 4
  %35 = zext i32 %34 to i64
  %36 = shl i64 1, %35
  %37 = sub i64 %36, 1
  %38 = and i64 %33, %37
  %39 = getelementptr inbounds %struct._stritem*, %struct._stritem** %31, i64 %38
  %40 = load %struct._stritem*, %struct._stritem** %39, align 8
  %41 = load %struct._stritem*, %struct._stritem** %3, align 8
  %42 = getelementptr inbounds %struct._stritem, %struct._stritem* %41, i32 0, i32 2
  store %struct._stritem* %40, %struct._stritem** %42, align 8
  %43 = load %struct._stritem*, %struct._stritem** %3, align 8
  %44 = load %struct._stritem**, %struct._stritem*** @primary_hashtable, align 8
  %45 = load i32, i32* %4, align 4
  %46 = zext i32 %45 to i64
  %47 = load i32, i32* @hashpower, align 4
  %48 = zext i32 %47 to i64
  %49 = shl i64 1, %48
  %50 = sub i64 %49, 1
  %51 = and i64 %46, %50
  %52 = getelementptr inbounds %struct._stritem*, %struct._stritem** %44, i64 %51
  store %struct._stritem* %43, %struct._stritem** %52, align 8
  br label %53

53:                                               ; preds = %30, %19
  ret i32 1
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @assoc_delete(i8* %0, i64 %1, i32 %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct._stritem**, align 8
  %8 = alloca %struct._stritem*, align 8
  store i8* %0, i8** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32 %2, i32* %6, align 4
  %9 = load i8*, i8** %4, align 8
  %10 = load i64, i64* %5, align 8
  %11 = load i32, i32* %6, align 4
  %12 = call %struct._stritem** @_hashitem_before(i8* %9, i64 %10, i32 %11)
  store %struct._stritem** %12, %struct._stritem*** %7, align 8
  %13 = load %struct._stritem**, %struct._stritem*** %7, align 8
  %14 = load %struct._stritem*, %struct._stritem** %13, align 8
  %15 = icmp ne %struct._stritem* %14, null
  br i1 %15, label %16, label %26

16:                                               ; preds = %3
  %17 = load %struct._stritem**, %struct._stritem*** %7, align 8
  %18 = load %struct._stritem*, %struct._stritem** %17, align 8
  %19 = getelementptr inbounds %struct._stritem, %struct._stritem* %18, i32 0, i32 2
  %20 = load %struct._stritem*, %struct._stritem** %19, align 8
  store %struct._stritem* %20, %struct._stritem** %8, align 8
  %21 = load %struct._stritem**, %struct._stritem*** %7, align 8
  %22 = load %struct._stritem*, %struct._stritem** %21, align 8
  %23 = getelementptr inbounds %struct._stritem, %struct._stritem* %22, i32 0, i32 2
  store %struct._stritem* null, %struct._stritem** %23, align 8
  %24 = load %struct._stritem*, %struct._stritem** %8, align 8
  %25 = load %struct._stritem**, %struct._stritem*** %7, align 8
  store %struct._stritem* %24, %struct._stritem** %25, align 8
  br label %26

26:                                               ; preds = %16, %3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct._stritem** @_hashitem_before(i8* %0, i64 %1, i32 %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct._stritem**, align 8
  %8 = alloca i64, align 8
  store i8* %0, i8** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32 %2, i32* %6, align 4
  %9 = load i8, i8* @expanding, align 1
  %10 = trunc i8 %9 to i1
  br i1 %10, label %11, label %26

11:                                               ; preds = %3
  %12 = load i32, i32* %6, align 4
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* @hashpower, align 4
  %15 = sub i32 %14, 1
  %16 = zext i32 %15 to i64
  %17 = shl i64 1, %16
  %18 = sub i64 %17, 1
  %19 = and i64 %13, %18
  store i64 %19, i64* %8, align 8
  %20 = load i64, i64* @expand_bucket, align 8
  %21 = icmp uge i64 %19, %20
  br i1 %21, label %22, label %26

22:                                               ; preds = %11
  %23 = load %struct._stritem**, %struct._stritem*** @old_hashtable, align 8
  %24 = load i64, i64* %8, align 8
  %25 = getelementptr inbounds %struct._stritem*, %struct._stritem** %23, i64 %24
  store %struct._stritem** %25, %struct._stritem*** %7, align 8
  br label %36

26:                                               ; preds = %11, %3
  %27 = load %struct._stritem**, %struct._stritem*** @primary_hashtable, align 8
  %28 = load i32, i32* %6, align 4
  %29 = zext i32 %28 to i64
  %30 = load i32, i32* @hashpower, align 4
  %31 = zext i32 %30 to i64
  %32 = shl i64 1, %31
  %33 = sub i64 %32, 1
  %34 = and i64 %29, %33
  %35 = getelementptr inbounds %struct._stritem*, %struct._stritem** %27, i64 %34
  store %struct._stritem** %35, %struct._stritem*** %7, align 8
  br label %36

36:                                               ; preds = %26, %22
  br label %37

37:                                               ; preds = %72, %36
  %38 = load %struct._stritem**, %struct._stritem*** %7, align 8
  %39 = load %struct._stritem*, %struct._stritem** %38, align 8
  %40 = icmp ne %struct._stritem* %39, null
  br i1 %40, label %41, label %70

41:                                               ; preds = %37
  %42 = load i64, i64* %5, align 8
  %43 = load %struct._stritem**, %struct._stritem*** %7, align 8
  %44 = load %struct._stritem*, %struct._stritem** %43, align 8
  %45 = getelementptr inbounds %struct._stritem, %struct._stritem* %44, i32 0, i32 9
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i64
  %48 = icmp ne i64 %42, %47
  br i1 %48, label %68, label %49

49:                                               ; preds = %41
  %50 = load i8*, i8** %4, align 8
  %51 = load %struct._stritem**, %struct._stritem*** %7, align 8
  %52 = load %struct._stritem*, %struct._stritem** %51, align 8
  %53 = getelementptr inbounds %struct._stritem, %struct._stritem* %52, i32 0, i32 10
  %54 = bitcast [0 x %union.anon.10]* %53 to i8*
  %55 = load %struct._stritem**, %struct._stritem*** %7, align 8
  %56 = load %struct._stritem*, %struct._stritem** %55, align 8
  %57 = getelementptr inbounds %struct._stritem, %struct._stritem* %56, i32 0, i32 7
  %58 = load i16, i16* %57, align 2
  %59 = zext i16 %58 to i32
  %60 = and i32 %59, 2
  %61 = icmp ne i32 %60, 0
  %62 = zext i1 %61 to i64
  %63 = select i1 %61, i64 8, i64 0
  %64 = getelementptr inbounds i8, i8* %54, i64 %63
  %65 = load i64, i64* %5, align 8
  %66 = call i32 @memcmp(i8* %50, i8* %64, i64 %65) #16
  %67 = icmp ne i32 %66, 0
  br label %68

68:                                               ; preds = %49, %41
  %69 = phi i1 [ true, %41 ], [ %67, %49 ]
  br label %70

70:                                               ; preds = %68, %37
  %71 = phi i1 [ false, %37 ], [ %69, %68 ]
  br i1 %71, label %72, label %76

72:                                               ; preds = %70
  %73 = load %struct._stritem**, %struct._stritem*** %7, align 8
  %74 = load %struct._stritem*, %struct._stritem** %73, align 8
  %75 = getelementptr inbounds %struct._stritem, %struct._stritem* %74, i32 0, i32 2
  store %struct._stritem** %75, %struct._stritem*** %7, align 8
  br label %37, !llvm.loop !88

76:                                               ; preds = %70
  %77 = load %struct._stritem**, %struct._stritem*** %7, align 8
  ret %struct._stritem** %77
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @start_assoc_maintenance_thread() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  %4 = call i8* @getenv(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1.685, i64 0, i64 0)) #14
  store i8* %4, i8** %3, align 8
  %5 = load i8*, i8** %3, align 8
  %6 = icmp ne i8* %5, null
  br i1 %6, label %7, label %14

7:                                                ; preds = %0
  %8 = load i8*, i8** %3, align 8
  %9 = call i32 @atoi(i8* %8) #16
  store i32 %9, i32* @hash_bulk_move, align 4
  %10 = load i32, i32* @hash_bulk_move, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %13

12:                                               ; preds = %7
  store i32 1, i32* @hash_bulk_move, align 4
  br label %13

13:                                               ; preds = %12, %7
  br label %14

14:                                               ; preds = %13, %0
  %15 = call i32 @pthread_create(i64* @maintenance_tid, %union.pthread_attr_t* null, i8* (i8*)* @assoc_maintenance_thread, i8* null) #14
  store i32 %15, i32* %2, align 4
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %17, label %22

17:                                               ; preds = %14
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %19 = load i32, i32* %2, align 4
  %20 = call i8* @strerror(i32 %19) #14
  %21 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %18, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2.686, i64 0, i64 0), i8* %20)
  store i32 -1, i32* %1, align 4
  br label %23

22:                                               ; preds = %14
  store i32 0, i32* %1, align 4
  br label %23

23:                                               ; preds = %22, %17
  %24 = load i32, i32* %1, align 4
  ret i32 %24
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @assoc_maintenance_thread(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  %4 = alloca %struct._stritem*, align 8
  %5 = alloca %struct._stritem*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %8 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @maintenance_lock) #14
  br label %9

9:                                                ; preds = %124, %1
  %10 = load volatile i32, i32* @do_run_maintenance_thread, align 4
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %12, label %125

12:                                               ; preds = %9
  store i32 0, i32* %3, align 4
  store i32 0, i32* %3, align 4
  br label %13

13:                                               ; preds = %112, %12
  %14 = load i32, i32* %3, align 4
  %15 = load i32, i32* @hash_bulk_move, align 4
  %16 = icmp slt i32 %14, %15
  br i1 %16, label %17, label %20

17:                                               ; preds = %13
  %18 = load i8, i8* @expanding, align 1
  %19 = trunc i8 %18 to i1
  br label %20

20:                                               ; preds = %17, %13
  %21 = phi i1 [ false, %13 ], [ %19, %17 ]
  br i1 %21, label %22, label %115

22:                                               ; preds = %20
  store i8* null, i8** %7, align 8
  %23 = load i64, i64* @expand_bucket, align 8
  %24 = trunc i64 %23 to i32
  %25 = call i8* @item_trylock(i32 %24)
  store i8* %25, i8** %7, align 8
  %26 = icmp ne i8* %25, null
  br i1 %26, label %27, label %104

27:                                               ; preds = %22
  %28 = load %struct._stritem**, %struct._stritem*** @old_hashtable, align 8
  %29 = load i64, i64* @expand_bucket, align 8
  %30 = getelementptr inbounds %struct._stritem*, %struct._stritem** %28, i64 %29
  %31 = load %struct._stritem*, %struct._stritem** %30, align 8
  store %struct._stritem* %31, %struct._stritem** %4, align 8
  br label %32

32:                                               ; preds = %73, %27
  %33 = load %struct._stritem*, %struct._stritem** %4, align 8
  %34 = icmp ne %struct._stritem* null, %33
  br i1 %34, label %35, label %75

35:                                               ; preds = %32
  %36 = load %struct._stritem*, %struct._stritem** %4, align 8
  %37 = getelementptr inbounds %struct._stritem, %struct._stritem* %36, i32 0, i32 2
  %38 = load %struct._stritem*, %struct._stritem** %37, align 8
  store %struct._stritem* %38, %struct._stritem** %5, align 8
  %39 = load i32 (i8*, i64)*, i32 (i8*, i64)** @hash, align 8
  %40 = load %struct._stritem*, %struct._stritem** %4, align 8
  %41 = getelementptr inbounds %struct._stritem, %struct._stritem* %40, i32 0, i32 10
  %42 = bitcast [0 x %union.anon.10]* %41 to i8*
  %43 = load %struct._stritem*, %struct._stritem** %4, align 8
  %44 = getelementptr inbounds %struct._stritem, %struct._stritem* %43, i32 0, i32 7
  %45 = load i16, i16* %44, align 2
  %46 = zext i16 %45 to i32
  %47 = and i32 %46, 2
  %48 = icmp ne i32 %47, 0
  %49 = zext i1 %48 to i64
  %50 = select i1 %48, i64 8, i64 0
  %51 = getelementptr inbounds i8, i8* %42, i64 %50
  %52 = load %struct._stritem*, %struct._stritem** %4, align 8
  %53 = getelementptr inbounds %struct._stritem, %struct._stritem* %52, i32 0, i32 9
  %54 = load i8, i8* %53, align 1
  %55 = zext i8 %54 to i64
  %56 = call i32 %39(i8* %51, i64 %55)
  %57 = zext i32 %56 to i64
  %58 = load i32, i32* @hashpower, align 4
  %59 = zext i32 %58 to i64
  %60 = shl i64 1, %59
  %61 = sub i64 %60, 1
  %62 = and i64 %57, %61
  store i64 %62, i64* %6, align 8
  %63 = load %struct._stritem**, %struct._stritem*** @primary_hashtable, align 8
  %64 = load i64, i64* %6, align 8
  %65 = getelementptr inbounds %struct._stritem*, %struct._stritem** %63, i64 %64
  %66 = load %struct._stritem*, %struct._stritem** %65, align 8
  %67 = load %struct._stritem*, %struct._stritem** %4, align 8
  %68 = getelementptr inbounds %struct._stritem, %struct._stritem* %67, i32 0, i32 2
  store %struct._stritem* %66, %struct._stritem** %68, align 8
  %69 = load %struct._stritem*, %struct._stritem** %4, align 8
  %70 = load %struct._stritem**, %struct._stritem*** @primary_hashtable, align 8
  %71 = load i64, i64* %6, align 8
  %72 = getelementptr inbounds %struct._stritem*, %struct._stritem** %70, i64 %71
  store %struct._stritem* %69, %struct._stritem** %72, align 8
  br label %73

73:                                               ; preds = %35
  %74 = load %struct._stritem*, %struct._stritem** %5, align 8
  store %struct._stritem* %74, %struct._stritem** %4, align 8
  br label %32, !llvm.loop !89

75:                                               ; preds = %32
  %76 = load %struct._stritem**, %struct._stritem*** @old_hashtable, align 8
  %77 = load i64, i64* @expand_bucket, align 8
  %78 = getelementptr inbounds %struct._stritem*, %struct._stritem** %76, i64 %77
  store %struct._stritem* null, %struct._stritem** %78, align 8
  %79 = load i64, i64* @expand_bucket, align 8
  %80 = add i64 %79, 1
  store i64 %80, i64* @expand_bucket, align 8
  %81 = load i64, i64* @expand_bucket, align 8
  %82 = load i32, i32* @hashpower, align 4
  %83 = sub i32 %82, 1
  %84 = zext i32 %83 to i64
  %85 = shl i64 1, %84
  %86 = icmp eq i64 %81, %85
  br i1 %86, label %87, label %103

87:                                               ; preds = %75
  store i8 0, i8* @expanding, align 1
  %88 = load %struct._stritem**, %struct._stritem*** @old_hashtable, align 8
  %89 = bitcast %struct._stritem** %88 to i8*
  call void @free(i8* %89) #14
  call void @STATS_LOCK()
  %90 = load i32, i32* @hashpower, align 4
  %91 = sub i32 %90, 1
  %92 = zext i32 %91 to i64
  %93 = shl i64 1, %92
  %94 = mul i64 %93, 8
  %95 = load i64, i64* getelementptr inbounds (%struct.stats_state, %struct.stats_state* @stats_state, i32 0, i32 3), align 8
  %96 = sub i64 %95, %94
  store i64 %96, i64* getelementptr inbounds (%struct.stats_state, %struct.stats_state* @stats_state, i32 0, i32 3), align 8
  store i8 0, i8* getelementptr inbounds (%struct.stats_state, %struct.stats_state* @stats_state, i32 0, i32 8), align 8
  call void @STATS_UNLOCK()
  %97 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %98 = icmp sgt i32 %97, 1
  br i1 %98, label %99, label %102

99:                                               ; preds = %87
  %100 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %101 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %100, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3.687, i64 0, i64 0))
  br label %102

102:                                              ; preds = %99, %87
  br label %103

103:                                              ; preds = %102, %75
  br label %106

104:                                              ; preds = %22
  %105 = call i32 @usleep(i32 10000)
  br label %106

106:                                              ; preds = %104, %103
  %107 = load i8*, i8** %7, align 8
  %108 = icmp ne i8* %107, null
  br i1 %108, label %109, label %111

109:                                              ; preds = %106
  %110 = load i8*, i8** %7, align 8
  call void @item_trylock_unlock(i8* %110)
  store i8* null, i8** %7, align 8
  br label %111

111:                                              ; preds = %109, %106
  br label %112

112:                                              ; preds = %111
  %113 = load i32, i32* %3, align 4
  %114 = add nsw i32 %113, 1
  store i32 %114, i32* %3, align 4
  br label %13, !llvm.loop !90

115:                                              ; preds = %20
  %116 = load i8, i8* @expanding, align 1
  %117 = trunc i8 %116 to i1
  br i1 %117, label %124, label %118

118:                                              ; preds = %115
  %119 = call i32 @pthread_cond_wait(%union.pthread_cond_t* @maintenance_cond, %union.pthread_mutex_t* @maintenance_lock)
  %120 = load volatile i32, i32* @do_run_maintenance_thread, align 4
  %121 = icmp ne i32 %120, 0
  br i1 %121, label %122, label %123

122:                                              ; preds = %118
  call void @pause_threads(i32 1)
  call void @assoc_expand()
  call void @pause_threads(i32 2)
  br label %123

123:                                              ; preds = %122, %118
  br label %124

124:                                              ; preds = %123, %115
  br label %9, !llvm.loop !91

125:                                              ; preds = %9
  %126 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @maintenance_lock) #14
  ret i8* null
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @assoc_expand() #0 {
  %1 = load %struct._stritem**, %struct._stritem*** @primary_hashtable, align 8
  store %struct._stritem** %1, %struct._stritem*** @old_hashtable, align 8
  %2 = load i32, i32* @hashpower, align 4
  %3 = add i32 %2, 1
  %4 = zext i32 %3 to i64
  %5 = shl i64 1, %4
  %6 = call noalias i8* @calloc(i64 %5, i64 8) #14
  %7 = bitcast i8* %6 to %struct._stritem**
  store %struct._stritem** %7, %struct._stritem*** @primary_hashtable, align 8
  %8 = load %struct._stritem**, %struct._stritem*** @primary_hashtable, align 8
  %9 = icmp ne %struct._stritem** %8, null
  br i1 %9, label %10, label %26

10:                                               ; preds = %0
  %11 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %12 = icmp sgt i32 %11, 1
  br i1 %12, label %13, label %16

13:                                               ; preds = %10
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %15 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %14, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.4.688, i64 0, i64 0))
  br label %16

16:                                               ; preds = %13, %10
  %17 = load i32, i32* @hashpower, align 4
  %18 = add i32 %17, 1
  store i32 %18, i32* @hashpower, align 4
  store i8 1, i8* @expanding, align 1
  store i64 0, i64* @expand_bucket, align 8
  call void @STATS_LOCK()
  %19 = load i32, i32* @hashpower, align 4
  store i32 %19, i32* getelementptr inbounds (%struct.stats_state, %struct.stats_state* @stats_state, i32 0, i32 6), align 8
  %20 = load i32, i32* @hashpower, align 4
  %21 = zext i32 %20 to i64
  %22 = shl i64 1, %21
  %23 = mul i64 %22, 8
  %24 = load i64, i64* getelementptr inbounds (%struct.stats_state, %struct.stats_state* @stats_state, i32 0, i32 3), align 8
  %25 = add i64 %24, %23
  store i64 %25, i64* getelementptr inbounds (%struct.stats_state, %struct.stats_state* @stats_state, i32 0, i32 3), align 8
  store i8 1, i8* getelementptr inbounds (%struct.stats_state, %struct.stats_state* @stats_state, i32 0, i32 8), align 8
  call void @STATS_UNLOCK()
  br label %28

26:                                               ; preds = %0
  %27 = load %struct._stritem**, %struct._stritem*** @old_hashtable, align 8
  store %struct._stritem** %27, %struct._stritem*** @primary_hashtable, align 8
  br label %28

28:                                               ; preds = %26, %16
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @stop_assoc_maintenance_thread() #0 {
  %1 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @maintenance_lock) #14
  store volatile i32 0, i32* @do_run_maintenance_thread, align 4
  %2 = call i32 @pthread_cond_signal(%union.pthread_cond_t* @maintenance_cond) #14
  %3 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @maintenance_lock) #14
  %4 = load i64, i64* @maintenance_tid, align 8
  %5 = call i32 @pthread_join(i64 %4, i8** null)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @assoc_get_iterator() #0 {
  %1 = alloca i8*, align 8
  %2 = alloca %struct.assoc_iterator*, align 8
  %3 = call noalias i8* @calloc(i64 1, i64 32) #14
  %4 = bitcast i8* %3 to %struct.assoc_iterator*
  store %struct.assoc_iterator* %4, %struct.assoc_iterator** %2, align 8
  %5 = load %struct.assoc_iterator*, %struct.assoc_iterator** %2, align 8
  %6 = icmp eq %struct.assoc_iterator* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %0
  store i8* null, i8** %1, align 8
  br label %12

8:                                                ; preds = %0
  %9 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @maintenance_lock) #14
  %10 = load %struct.assoc_iterator*, %struct.assoc_iterator** %2, align 8
  %11 = bitcast %struct.assoc_iterator* %10 to i8*
  store i8* %11, i8** %1, align 8
  br label %12

12:                                               ; preds = %8, %7
  %13 = load i8*, i8** %1, align 8
  ret i8* %13
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @assoc_iterate(i8* %0, %struct._stritem** %1) #0 {
  %3 = alloca i1, align 1
  %4 = alloca i8*, align 8
  %5 = alloca %struct._stritem**, align 8
  %6 = alloca %struct.assoc_iterator*, align 8
  store i8* %0, i8** %4, align 8
  store %struct._stritem** %1, %struct._stritem*** %5, align 8
  %7 = load i8*, i8** %4, align 8
  %8 = bitcast i8* %7 to %struct.assoc_iterator*
  store %struct.assoc_iterator* %8, %struct.assoc_iterator** %6, align 8
  %9 = load %struct._stritem**, %struct._stritem*** %5, align 8
  store %struct._stritem* null, %struct._stritem** %9, align 8
  %10 = load %struct.assoc_iterator*, %struct.assoc_iterator** %6, align 8
  %11 = getelementptr inbounds %struct.assoc_iterator, %struct.assoc_iterator* %10, i32 0, i32 3
  %12 = load i8, i8* %11, align 8
  %13 = trunc i8 %12 to i1
  br i1 %13, label %14, label %49

14:                                               ; preds = %2
  %15 = load %struct.assoc_iterator*, %struct.assoc_iterator** %6, align 8
  %16 = getelementptr inbounds %struct.assoc_iterator, %struct.assoc_iterator* %15, i32 0, i32 2
  %17 = load %struct._stritem*, %struct._stritem** %16, align 8
  %18 = icmp ne %struct._stritem* %17, null
  br i1 %18, label %19, label %36

19:                                               ; preds = %14
  %20 = load %struct.assoc_iterator*, %struct.assoc_iterator** %6, align 8
  %21 = getelementptr inbounds %struct.assoc_iterator, %struct.assoc_iterator* %20, i32 0, i32 2
  %22 = load %struct._stritem*, %struct._stritem** %21, align 8
  %23 = load %struct.assoc_iterator*, %struct.assoc_iterator** %6, align 8
  %24 = getelementptr inbounds %struct.assoc_iterator, %struct.assoc_iterator* %23, i32 0, i32 1
  store %struct._stritem* %22, %struct._stritem** %24, align 8
  %25 = load %struct.assoc_iterator*, %struct.assoc_iterator** %6, align 8
  %26 = getelementptr inbounds %struct.assoc_iterator, %struct.assoc_iterator* %25, i32 0, i32 1
  %27 = load %struct._stritem*, %struct._stritem** %26, align 8
  %28 = getelementptr inbounds %struct._stritem, %struct._stritem* %27, i32 0, i32 2
  %29 = load %struct._stritem*, %struct._stritem** %28, align 8
  %30 = load %struct.assoc_iterator*, %struct.assoc_iterator** %6, align 8
  %31 = getelementptr inbounds %struct.assoc_iterator, %struct.assoc_iterator* %30, i32 0, i32 2
  store %struct._stritem* %29, %struct._stritem** %31, align 8
  %32 = load %struct.assoc_iterator*, %struct.assoc_iterator** %6, align 8
  %33 = getelementptr inbounds %struct.assoc_iterator, %struct.assoc_iterator* %32, i32 0, i32 1
  %34 = load %struct._stritem*, %struct._stritem** %33, align 8
  %35 = load %struct._stritem**, %struct._stritem*** %5, align 8
  store %struct._stritem* %34, %struct._stritem** %35, align 8
  br label %48

36:                                               ; preds = %14
  %37 = load %struct.assoc_iterator*, %struct.assoc_iterator** %6, align 8
  %38 = getelementptr inbounds %struct.assoc_iterator, %struct.assoc_iterator* %37, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = trunc i64 %39 to i32
  call void @item_unlock(i32 %40)
  %41 = load %struct.assoc_iterator*, %struct.assoc_iterator** %6, align 8
  %42 = getelementptr inbounds %struct.assoc_iterator, %struct.assoc_iterator* %41, i32 0, i32 0
  %43 = load i64, i64* %42, align 8
  %44 = add i64 %43, 1
  store i64 %44, i64* %42, align 8
  %45 = load %struct.assoc_iterator*, %struct.assoc_iterator** %6, align 8
  %46 = getelementptr inbounds %struct.assoc_iterator, %struct.assoc_iterator* %45, i32 0, i32 3
  store i8 0, i8* %46, align 8
  %47 = load %struct._stritem**, %struct._stritem*** %5, align 8
  store %struct._stritem* null, %struct._stritem** %47, align 8
  br label %48

48:                                               ; preds = %36, %19
  store i1 true, i1* %3, align 1
  br label %102

49:                                               ; preds = %2
  %50 = load %struct.assoc_iterator*, %struct.assoc_iterator** %6, align 8
  %51 = getelementptr inbounds %struct.assoc_iterator, %struct.assoc_iterator* %50, i32 0, i32 0
  %52 = load i64, i64* %51, align 8
  %53 = load i32, i32* @hashpower, align 4
  %54 = zext i32 %53 to i64
  %55 = shl i64 1, %54
  %56 = icmp ne i64 %52, %55
  br i1 %56, label %57, label %100

57:                                               ; preds = %49
  %58 = load %struct.assoc_iterator*, %struct.assoc_iterator** %6, align 8
  %59 = getelementptr inbounds %struct.assoc_iterator, %struct.assoc_iterator* %58, i32 0, i32 0
  %60 = load i64, i64* %59, align 8
  %61 = trunc i64 %60 to i32
  call void @item_lock(i32 %61)
  %62 = load %struct.assoc_iterator*, %struct.assoc_iterator** %6, align 8
  %63 = getelementptr inbounds %struct.assoc_iterator, %struct.assoc_iterator* %62, i32 0, i32 3
  store i8 1, i8* %63, align 8
  %64 = load %struct._stritem**, %struct._stritem*** @primary_hashtable, align 8
  %65 = load %struct.assoc_iterator*, %struct.assoc_iterator** %6, align 8
  %66 = getelementptr inbounds %struct.assoc_iterator, %struct.assoc_iterator* %65, i32 0, i32 0
  %67 = load i64, i64* %66, align 8
  %68 = getelementptr inbounds %struct._stritem*, %struct._stritem** %64, i64 %67
  %69 = load %struct._stritem*, %struct._stritem** %68, align 8
  %70 = load %struct.assoc_iterator*, %struct.assoc_iterator** %6, align 8
  %71 = getelementptr inbounds %struct.assoc_iterator, %struct.assoc_iterator* %70, i32 0, i32 1
  store %struct._stritem* %69, %struct._stritem** %71, align 8
  %72 = load %struct.assoc_iterator*, %struct.assoc_iterator** %6, align 8
  %73 = getelementptr inbounds %struct.assoc_iterator, %struct.assoc_iterator* %72, i32 0, i32 1
  %74 = load %struct._stritem*, %struct._stritem** %73, align 8
  %75 = icmp ne %struct._stritem* %74, null
  br i1 %75, label %76, label %88

76:                                               ; preds = %57
  %77 = load %struct.assoc_iterator*, %struct.assoc_iterator** %6, align 8
  %78 = getelementptr inbounds %struct.assoc_iterator, %struct.assoc_iterator* %77, i32 0, i32 1
  %79 = load %struct._stritem*, %struct._stritem** %78, align 8
  %80 = getelementptr inbounds %struct._stritem, %struct._stritem* %79, i32 0, i32 2
  %81 = load %struct._stritem*, %struct._stritem** %80, align 8
  %82 = load %struct.assoc_iterator*, %struct.assoc_iterator** %6, align 8
  %83 = getelementptr inbounds %struct.assoc_iterator, %struct.assoc_iterator* %82, i32 0, i32 2
  store %struct._stritem* %81, %struct._stritem** %83, align 8
  %84 = load %struct.assoc_iterator*, %struct.assoc_iterator** %6, align 8
  %85 = getelementptr inbounds %struct.assoc_iterator, %struct.assoc_iterator* %84, i32 0, i32 1
  %86 = load %struct._stritem*, %struct._stritem** %85, align 8
  %87 = load %struct._stritem**, %struct._stritem*** %5, align 8
  store %struct._stritem* %86, %struct._stritem** %87, align 8
  br label %99

88:                                               ; preds = %57
  %89 = load %struct.assoc_iterator*, %struct.assoc_iterator** %6, align 8
  %90 = getelementptr inbounds %struct.assoc_iterator, %struct.assoc_iterator* %89, i32 0, i32 0
  %91 = load i64, i64* %90, align 8
  %92 = trunc i64 %91 to i32
  call void @item_unlock(i32 %92)
  %93 = load %struct.assoc_iterator*, %struct.assoc_iterator** %6, align 8
  %94 = getelementptr inbounds %struct.assoc_iterator, %struct.assoc_iterator* %93, i32 0, i32 3
  store i8 0, i8* %94, align 8
  %95 = load %struct.assoc_iterator*, %struct.assoc_iterator** %6, align 8
  %96 = getelementptr inbounds %struct.assoc_iterator, %struct.assoc_iterator* %95, i32 0, i32 0
  %97 = load i64, i64* %96, align 8
  %98 = add i64 %97, 1
  store i64 %98, i64* %96, align 8
  br label %99

99:                                               ; preds = %88, %76
  br label %101

100:                                              ; preds = %49
  store i1 false, i1* %3, align 1
  br label %102

101:                                              ; preds = %99
  store i1 true, i1* %3, align 1
  br label %102

102:                                              ; preds = %101, %100, %48
  %103 = load i1, i1* %3, align 1
  ret i1 %103
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @assoc_iterate_final(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.assoc_iterator*, align 8
  store i8* %0, i8** %2, align 8
  %4 = load i8*, i8** %2, align 8
  %5 = bitcast i8* %4 to %struct.assoc_iterator*
  store %struct.assoc_iterator* %5, %struct.assoc_iterator** %3, align 8
  %6 = load %struct.assoc_iterator*, %struct.assoc_iterator** %3, align 8
  %7 = getelementptr inbounds %struct.assoc_iterator, %struct.assoc_iterator* %6, i32 0, i32 3
  %8 = load i8, i8* %7, align 8
  %9 = trunc i8 %8 to i1
  br i1 %9, label %10, label %15

10:                                               ; preds = %1
  %11 = load %struct.assoc_iterator*, %struct.assoc_iterator** %3, align 8
  %12 = getelementptr inbounds %struct.assoc_iterator, %struct.assoc_iterator* %11, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = trunc i64 %13 to i32
  call void @item_unlock(i32 %14)
  br label %15

15:                                               ; preds = %10, %1
  %16 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @maintenance_lock) #14
  %17 = load %struct.assoc_iterator*, %struct.assoc_iterator** %3, align 8
  %18 = bitcast %struct.assoc_iterator* %17 to i8*
  call void @free(i8* %18) #14
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @item_lock(i32 %0) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load %union.pthread_mutex_t*, %union.pthread_mutex_t** @item_locks, align 8
  %4 = load i32, i32* %2, align 4
  %5 = zext i32 %4 to i64
  %6 = load i32, i32* @item_lock_hashpower, align 4
  %7 = zext i32 %6 to i64
  %8 = shl i64 1, %7
  %9 = sub i64 %8, 1
  %10 = and i64 %5, %9
  %11 = getelementptr inbounds %union.pthread_mutex_t, %union.pthread_mutex_t* %3, i64 %10
  %12 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %11) #14
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @item_trylock(i32 %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  %4 = alloca %union.pthread_mutex_t*, align 8
  store i32 %0, i32* %3, align 4
  %5 = load %union.pthread_mutex_t*, %union.pthread_mutex_t** @item_locks, align 8
  %6 = load i32, i32* %3, align 4
  %7 = zext i32 %6 to i64
  %8 = load i32, i32* @item_lock_hashpower, align 4
  %9 = zext i32 %8 to i64
  %10 = shl i64 1, %9
  %11 = sub i64 %10, 1
  %12 = and i64 %7, %11
  %13 = getelementptr inbounds %union.pthread_mutex_t, %union.pthread_mutex_t* %5, i64 %12
  store %union.pthread_mutex_t* %13, %union.pthread_mutex_t** %4, align 8
  %14 = load %union.pthread_mutex_t*, %union.pthread_mutex_t** %4, align 8
  %15 = call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %14) #14
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %1
  %18 = load %union.pthread_mutex_t*, %union.pthread_mutex_t** %4, align 8
  %19 = bitcast %union.pthread_mutex_t* %18 to i8*
  store i8* %19, i8** %2, align 8
  br label %21

20:                                               ; preds = %1
  store i8* null, i8** %2, align 8
  br label %21

21:                                               ; preds = %20, %17
  %22 = load i8*, i8** %2, align 8
  ret i8* %22
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @item_trylock_unlock(i8* %0) #0 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  %4 = bitcast i8* %3 to %union.pthread_mutex_t*
  %5 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %4) #14
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @item_unlock(i32 %0) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load %union.pthread_mutex_t*, %union.pthread_mutex_t** @item_locks, align 8
  %4 = load i32, i32* %2, align 4
  %5 = zext i32 %4 to i64
  %6 = load i32, i32* @item_lock_hashpower, align 4
  %7 = zext i32 %6 to i64
  %8 = shl i64 1, %7
  %9 = sub i64 %8, 1
  %10 = and i64 %5, %9
  %11 = getelementptr inbounds %union.pthread_mutex_t, %union.pthread_mutex_t* %3, i64 %10
  %12 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %11) #14
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @pause_threads(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i8, align 1
  store i32 %0, i32* %2, align 4
  store i8 0, i8* %4, align 1
  %5 = load i32, i32* %2, align 4
  switch i32 %5, label %12 [
    i32 1, label %6
    i32 0, label %7
    i32 2, label %9
    i32 3, label %10
  ]

6:                                                ; preds = %1
  call void @slabs_rebalancer_pause()
  call void @lru_maintainer_pause()
  call void @lru_crawler_pause()
  call void @storage_compact_pause()
  call void @storage_write_pause()
  br label %7

7:                                                ; preds = %1, %6
  store i8 1, i8* %4, align 1
  %8 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @worker_hang_lock) #14
  br label %16

9:                                                ; preds = %1
  call void @slabs_rebalancer_resume()
  call void @lru_maintainer_resume()
  call void @lru_crawler_resume()
  call void @storage_compact_resume()
  call void @storage_write_resume()
  br label %10

10:                                               ; preds = %1, %9
  %11 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @worker_hang_lock) #14
  br label %16

12:                                               ; preds = %1
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %14 = load i32, i32* %2, align 4
  %15 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %13, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.703, i64 0, i64 0), i32 %14)
  br label %16

16:                                               ; preds = %12, %10, %7
  %17 = load i8, i8* %4, align 1
  %18 = trunc i8 %17 to i1
  br i1 %18, label %20, label %19

19:                                               ; preds = %16
  br label %37

20:                                               ; preds = %16
  %21 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @init_lock) #14
  store i32 0, i32* @init_count, align 4
  store i32 0, i32* %3, align 4
  br label %22

22:                                               ; preds = %31, %20
  %23 = load i32, i32* %3, align 4
  %24 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 14), align 4
  %25 = icmp slt i32 %23, %24
  br i1 %25, label %26, label %34

26:                                               ; preds = %22
  %27 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %28 = load i32, i32* %3, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %27, i64 %29
  call void @notify_worker_fd(%struct.LIBEVENT_THREAD* %30, i32 0, i32 1)
  br label %31

31:                                               ; preds = %26
  %32 = load i32, i32* %3, align 4
  %33 = add nsw i32 %32, 1
  store i32 %33, i32* %3, align 4
  br label %22, !llvm.loop !92

34:                                               ; preds = %22
  %35 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 14), align 4
  call void @wait_for_thread_registration(i32 %35)
  %36 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @init_lock) #14
  br label %37

37:                                               ; preds = %34, %19
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @notify_worker_fd(%struct.LIBEVENT_THREAD* %0, i32 %1, i32 %2) #0 {
  %4 = alloca %struct.LIBEVENT_THREAD*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.conn_queue_item*, align 8
  store %struct.LIBEVENT_THREAD* %0, %struct.LIBEVENT_THREAD** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  br label %8

8:                                                ; preds = %14, %3
  %9 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %4, align 8
  %10 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %9, i32 0, i32 6
  %11 = load %struct.conn_queue*, %struct.conn_queue** %10, align 8
  %12 = call %struct.conn_queue_item* @cqi_new(%struct.conn_queue* %11)
  store %struct.conn_queue_item* %12, %struct.conn_queue_item** %7, align 8
  %13 = icmp eq %struct.conn_queue_item* %12, null
  br i1 %13, label %14, label %15

14:                                               ; preds = %8
  br label %8, !llvm.loop !93

15:                                               ; preds = %8
  %16 = load i32, i32* %6, align 4
  %17 = load %struct.conn_queue_item*, %struct.conn_queue_item** %7, align 8
  %18 = getelementptr inbounds %struct.conn_queue_item, %struct.conn_queue_item* %17, i32 0, i32 5
  store i32 %16, i32* %18, align 4
  %19 = load i32, i32* %5, align 4
  %20 = load %struct.conn_queue_item*, %struct.conn_queue_item** %7, align 8
  %21 = getelementptr inbounds %struct.conn_queue_item, %struct.conn_queue_item* %20, i32 0, i32 0
  store i32 %19, i32* %21, align 8
  %22 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %4, align 8
  %23 = load %struct.conn_queue_item*, %struct.conn_queue_item** %7, align 8
  call void @notify_worker(%struct.LIBEVENT_THREAD* %22, %struct.conn_queue_item* %23)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @wait_for_thread_registration(i32 %0) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  br label %3

3:                                                ; preds = %7, %1
  %4 = load i32, i32* @init_count, align 4
  %5 = load i32, i32* %2, align 4
  %6 = icmp slt i32 %4, %5
  br i1 %6, label %7, label %9

7:                                                ; preds = %3
  %8 = call i32 @pthread_cond_wait(%union.pthread_cond_t* @init_cond, %union.pthread_mutex_t* @init_lock)
  br label %3, !llvm.loop !94

9:                                                ; preds = %3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.conn_queue_item* @cqi_new(%struct.conn_queue* %0) #0 {
  %2 = alloca %struct.conn_queue*, align 8
  %3 = alloca %struct.conn_queue_item*, align 8
  store %struct.conn_queue* %0, %struct.conn_queue** %2, align 8
  %4 = load %struct.conn_queue*, %struct.conn_queue** %2, align 8
  %5 = getelementptr inbounds %struct.conn_queue, %struct.conn_queue* %4, i32 0, i32 2
  %6 = load %struct.cache_t*, %struct.cache_t** %5, align 8
  %7 = call i8* @cache_alloc(%struct.cache_t* %6)
  %8 = bitcast i8* %7 to %struct.conn_queue_item*
  store %struct.conn_queue_item* %8, %struct.conn_queue_item** %3, align 8
  %9 = load %struct.conn_queue_item*, %struct.conn_queue_item** %3, align 8
  %10 = icmp eq %struct.conn_queue_item* %9, null
  br i1 %10, label %11, label %14

11:                                               ; preds = %1
  call void @STATS_LOCK()
  %12 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 3), align 8
  %13 = add i64 %12, 1
  store i64 %13, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 3), align 8
  call void @STATS_UNLOCK()
  br label %14

14:                                               ; preds = %11, %1
  %15 = load %struct.conn_queue_item*, %struct.conn_queue_item** %3, align 8
  ret %struct.conn_queue_item* %15
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @notify_worker(%struct.LIBEVENT_THREAD* %0, %struct.conn_queue_item* %1) #0 {
  %3 = alloca %struct.LIBEVENT_THREAD*, align 8
  %4 = alloca %struct.conn_queue_item*, align 8
  %5 = alloca i64, align 8
  store %struct.LIBEVENT_THREAD* %0, %struct.LIBEVENT_THREAD** %3, align 8
  store %struct.conn_queue_item* %1, %struct.conn_queue_item** %4, align 8
  %6 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %3, align 8
  %7 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %6, i32 0, i32 6
  %8 = load %struct.conn_queue*, %struct.conn_queue** %7, align 8
  %9 = load %struct.conn_queue_item*, %struct.conn_queue_item** %4, align 8
  call void @cq_push(%struct.conn_queue* %8, %struct.conn_queue_item* %9)
  store i64 1, i64* %5, align 8
  %10 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %3, align 8
  %11 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %10, i32 0, i32 3
  %12 = load i32, i32* %11, align 8
  %13 = bitcast i64* %5 to i8*
  %14 = call i64 @write(i32 %12, i8* %13, i64 8)
  %15 = icmp ne i64 %14, 8
  br i1 %15, label %16, label %17

16:                                               ; preds = %2
  call void @perror(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.20.704, i64 0, i64 0))
  br label %17

17:                                               ; preds = %16, %2
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @cq_push(%struct.conn_queue* %0, %struct.conn_queue_item* %1) #0 {
  %3 = alloca %struct.conn_queue*, align 8
  %4 = alloca %struct.conn_queue_item*, align 8
  store %struct.conn_queue* %0, %struct.conn_queue** %3, align 8
  store %struct.conn_queue_item* %1, %struct.conn_queue_item** %4, align 8
  %5 = load %struct.conn_queue*, %struct.conn_queue** %3, align 8
  %6 = getelementptr inbounds %struct.conn_queue, %struct.conn_queue* %5, i32 0, i32 1
  %7 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %6) #14
  br label %8

8:                                                ; preds = %2
  %9 = load %struct.conn_queue_item*, %struct.conn_queue_item** %4, align 8
  %10 = getelementptr inbounds %struct.conn_queue_item, %struct.conn_queue_item* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %10, i32 0, i32 0
  store %struct.conn_queue_item* null, %struct.conn_queue_item** %11, align 8
  %12 = load %struct.conn_queue_item*, %struct.conn_queue_item** %4, align 8
  %13 = load %struct.conn_queue*, %struct.conn_queue** %3, align 8
  %14 = getelementptr inbounds %struct.conn_queue, %struct.conn_queue* %13, i32 0, i32 0
  %15 = getelementptr inbounds %struct.conn_ev_head, %struct.conn_ev_head* %14, i32 0, i32 1
  %16 = load %struct.conn_queue_item**, %struct.conn_queue_item*** %15, align 8
  store %struct.conn_queue_item* %12, %struct.conn_queue_item** %16, align 8
  %17 = load %struct.conn_queue_item*, %struct.conn_queue_item** %4, align 8
  %18 = getelementptr inbounds %struct.conn_queue_item, %struct.conn_queue_item* %17, i32 0, i32 9
  %19 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %18, i32 0, i32 0
  %20 = load %struct.conn_queue*, %struct.conn_queue** %3, align 8
  %21 = getelementptr inbounds %struct.conn_queue, %struct.conn_queue* %20, i32 0, i32 0
  %22 = getelementptr inbounds %struct.conn_ev_head, %struct.conn_ev_head* %21, i32 0, i32 1
  store %struct.conn_queue_item** %19, %struct.conn_queue_item*** %22, align 8
  br label %23

23:                                               ; preds = %8
  %24 = load %struct.conn_queue*, %struct.conn_queue** %3, align 8
  %25 = getelementptr inbounds %struct.conn_queue, %struct.conn_queue* %24, i32 0, i32 1
  %26 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %25) #14
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @STATS_LOCK() #0 {
  %1 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @stats_lock) #14
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @STATS_UNLOCK() #0 {
  %1 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @stats_lock) #14
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @stop_threads() #0 {
  %1 = alloca i32, align 4
  call void @stop_assoc_maintenance_thread()
  %2 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %3 = icmp sgt i32 %2, 0
  br i1 %3, label %4, label %7

4:                                                ; preds = %0
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1.711, i64 0, i64 0))
  br label %7

7:                                                ; preds = %4, %0
  %8 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %7
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %12 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2.712, i64 0, i64 0))
  br label %13

13:                                               ; preds = %10, %7
  %14 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @worker_hang_lock) #14
  %15 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @init_lock) #14
  store i32 0, i32* @init_count, align 4
  store i32 0, i32* %1, align 4
  br label %16

16:                                               ; preds = %25, %13
  %17 = load i32, i32* %1, align 4
  %18 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 14), align 4
  %19 = icmp slt i32 %17, %18
  br i1 %19, label %20, label %28

20:                                               ; preds = %16
  %21 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %22 = load i32, i32* %1, align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %21, i64 %23
  call void @notify_worker_fd(%struct.LIBEVENT_THREAD* %24, i32 0, i32 4)
  br label %25

25:                                               ; preds = %20
  %26 = load i32, i32* %1, align 4
  %27 = add nsw i32 %26, 1
  store i32 %27, i32* %1, align 4
  br label %16, !llvm.loop !95

28:                                               ; preds = %16
  %29 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 14), align 4
  call void @wait_for_thread_registration(i32 %29)
  %30 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @init_lock) #14
  %31 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %32 = icmp sgt i32 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %28
  %34 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %35 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %34, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.3.713, i64 0, i64 0))
  br label %36

36:                                               ; preds = %33, %28
  %37 = call i32 @stop_item_crawler_thread(i1 zeroext true)
  %38 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %39 = icmp sgt i32 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %36
  %41 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %42 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %41, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.714, i64 0, i64 0))
  br label %43

43:                                               ; preds = %40, %36
  %44 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 29), align 1
  %45 = trunc i8 %44 to i1
  br i1 %45, label %46, label %54

46:                                               ; preds = %43
  %47 = call i32 @stop_lru_maintainer_thread()
  %48 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %49 = icmp sgt i32 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %46
  %51 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %52 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %51, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.715, i64 0, i64 0))
  br label %53

53:                                               ; preds = %50, %46
  br label %54

54:                                               ; preds = %53, %43
  %55 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 31), align 1
  %56 = trunc i8 %55 to i1
  br i1 %56, label %57, label %64

57:                                               ; preds = %54
  call void @stop_slab_maintenance_thread()
  %58 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %59 = icmp sgt i32 %58, 0
  br i1 %59, label %60, label %63

60:                                               ; preds = %57
  %61 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %62 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %61, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6.716, i64 0, i64 0))
  br label %63

63:                                               ; preds = %60, %57
  br label %64

64:                                               ; preds = %63, %54
  call void @logger_stop()
  %65 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %66 = icmp sgt i32 %65, 0
  br i1 %66, label %67, label %70

67:                                               ; preds = %64
  %68 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %69 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %68, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.717, i64 0, i64 0))
  br label %70

70:                                               ; preds = %67, %64
  %71 = call i32 @stop_conn_timeout_thread()
  %72 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %73 = icmp sgt i32 %72, 0
  br i1 %73, label %74, label %77

74:                                               ; preds = %70
  %75 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %76 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %75, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.718, i64 0, i64 0))
  br label %77

77:                                               ; preds = %74, %70
  %78 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %79 = icmp sgt i32 %78, 0
  br i1 %79, label %80, label %83

80:                                               ; preds = %77
  %81 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %82 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %81, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.719, i64 0, i64 0))
  br label %83

83:                                               ; preds = %80, %77
  call void @conn_close_all()
  %84 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @worker_hang_lock) #14
  %85 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %86 = icmp sgt i32 %85, 0
  br i1 %86, label %87, label %90

87:                                               ; preds = %83
  %88 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %89 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %88, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.10.720, i64 0, i64 0))
  br label %90

90:                                               ; preds = %87, %83
  store i32 0, i32* %1, align 4
  br label %91

91:                                               ; preds = %103, %90
  %92 = load i32, i32* %1, align 4
  %93 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 14), align 4
  %94 = icmp slt i32 %92, %93
  br i1 %94, label %95, label %106

95:                                               ; preds = %91
  %96 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %97 = load i32, i32* %1, align 4
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %96, i64 %98
  %100 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %99, i32 0, i32 0
  %101 = load i64, i64* %100, align 8
  %102 = call i32 @pthread_join(i64 %101, i8** null)
  br label %103

103:                                              ; preds = %95
  %104 = load i32, i32* %1, align 4
  %105 = add nsw i32 %104, 1
  store i32 %105, i32* %1, align 4
  br label %91, !llvm.loop !96

106:                                              ; preds = %91
  %107 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %108 = icmp sgt i32 %107, 0
  br i1 %108, label %109, label %112

109:                                              ; preds = %106
  %110 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %111 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %110, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11.721, i64 0, i64 0))
  br label %112

112:                                              ; preds = %109, %106
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @accept_new_conns(i1 zeroext %0) #0 {
  %2 = alloca i8, align 1
  %3 = zext i1 %0 to i8
  store i8 %3, i8* %2, align 1
  %4 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @conn_lock) #14
  %5 = load i8, i8* %2, align 1
  %6 = trunc i8 %5 to i1
  call void @do_accept_new_conns(i1 zeroext %6)
  %7 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @conn_lock) #14
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.LIBEVENT_THREAD* @get_worker_thread(i32 %0) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %4 = load i32, i32* %2, align 4
  %5 = sext i32 %4 to i64
  %6 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %3, i64 %5
  ret %struct.LIBEVENT_THREAD* %6
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @dispatch_conn_new(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i8* %5) #0 {
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  %13 = alloca %struct.conn_queue_item*, align 8
  %14 = alloca %struct.LIBEVENT_THREAD*, align 8
  store i32 %0, i32* %7, align 4
  store i32 %1, i32* %8, align 4
  store i32 %2, i32* %9, align 4
  store i32 %3, i32* %10, align 4
  store i32 %4, i32* %11, align 4
  store i8* %5, i8** %12, align 8
  store %struct.conn_queue_item* null, %struct.conn_queue_item** %13, align 8
  %15 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 72), align 4
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %19, label %17

17:                                               ; preds = %6
  %18 = call %struct.LIBEVENT_THREAD* @select_thread_round_robin()
  store %struct.LIBEVENT_THREAD* %18, %struct.LIBEVENT_THREAD** %14, align 8
  br label %22

19:                                               ; preds = %6
  %20 = load i32, i32* %7, align 4
  %21 = call %struct.LIBEVENT_THREAD* @select_thread_by_napi_id(i32 %20)
  store %struct.LIBEVENT_THREAD* %21, %struct.LIBEVENT_THREAD** %14, align 8
  br label %22

22:                                               ; preds = %19, %17
  %23 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %14, align 8
  %24 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %23, i32 0, i32 6
  %25 = load %struct.conn_queue*, %struct.conn_queue** %24, align 8
  %26 = call %struct.conn_queue_item* @cqi_new(%struct.conn_queue* %25)
  store %struct.conn_queue_item* %26, %struct.conn_queue_item** %13, align 8
  %27 = load %struct.conn_queue_item*, %struct.conn_queue_item** %13, align 8
  %28 = icmp eq %struct.conn_queue_item* %27, null
  br i1 %28, label %29, label %34

29:                                               ; preds = %22
  %30 = load i32, i32* %7, align 4
  %31 = call i32 @close(i32 %30)
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %33 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %32, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12.726, i64 0, i64 0))
  br label %57

34:                                               ; preds = %22
  %35 = load i32, i32* %7, align 4
  %36 = load %struct.conn_queue_item*, %struct.conn_queue_item** %13, align 8
  %37 = getelementptr inbounds %struct.conn_queue_item, %struct.conn_queue_item* %36, i32 0, i32 0
  store i32 %35, i32* %37, align 8
  %38 = load i32, i32* %8, align 4
  %39 = load %struct.conn_queue_item*, %struct.conn_queue_item** %13, align 8
  %40 = getelementptr inbounds %struct.conn_queue_item, %struct.conn_queue_item* %39, i32 0, i32 1
  store i32 %38, i32* %40, align 4
  %41 = load i32, i32* %9, align 4
  %42 = load %struct.conn_queue_item*, %struct.conn_queue_item** %13, align 8
  %43 = getelementptr inbounds %struct.conn_queue_item, %struct.conn_queue_item* %42, i32 0, i32 2
  store i32 %41, i32* %43, align 8
  %44 = load i32, i32* %10, align 4
  %45 = load %struct.conn_queue_item*, %struct.conn_queue_item** %13, align 8
  %46 = getelementptr inbounds %struct.conn_queue_item, %struct.conn_queue_item* %45, i32 0, i32 3
  store i32 %44, i32* %46, align 4
  %47 = load i32, i32* %11, align 4
  %48 = load %struct.conn_queue_item*, %struct.conn_queue_item** %13, align 8
  %49 = getelementptr inbounds %struct.conn_queue_item, %struct.conn_queue_item* %48, i32 0, i32 4
  store i32 %47, i32* %49, align 8
  %50 = load %struct.conn_queue_item*, %struct.conn_queue_item** %13, align 8
  %51 = getelementptr inbounds %struct.conn_queue_item, %struct.conn_queue_item* %50, i32 0, i32 5
  store i32 0, i32* %51, align 4
  %52 = load i8*, i8** %12, align 8
  %53 = load %struct.conn_queue_item*, %struct.conn_queue_item** %13, align 8
  %54 = getelementptr inbounds %struct.conn_queue_item, %struct.conn_queue_item* %53, i32 0, i32 7
  store i8* %52, i8** %54, align 8
  %55 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %14, align 8
  %56 = load %struct.conn_queue_item*, %struct.conn_queue_item** %13, align 8
  call void @notify_worker(%struct.LIBEVENT_THREAD* %55, %struct.conn_queue_item* %56)
  br label %57

57:                                               ; preds = %34, %29
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.LIBEVENT_THREAD* @select_thread_round_robin() #0 {
  %1 = alloca i32, align 4
  %2 = load i32, i32* @last_thread, align 4
  %3 = add nsw i32 %2, 1
  %4 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 14), align 4
  %5 = srem i32 %3, %4
  store i32 %5, i32* %1, align 4
  %6 = load i32, i32* %1, align 4
  store i32 %6, i32* @last_thread, align 4
  %7 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %8 = load i32, i32* %1, align 4
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %7, i64 %9
  ret %struct.LIBEVENT_THREAD* %10
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.LIBEVENT_THREAD* @select_thread_by_napi_id(i32 %0) #0 {
  %2 = alloca %struct.LIBEVENT_THREAD*, align 8
  %3 = alloca i32, align 4
  %4 = alloca %struct.LIBEVENT_THREAD*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32 -1, i32* %9, align 4
  store i32 4, i32* %8, align 4
  %10 = load i32, i32* %3, align 4
  %11 = bitcast i32* %5 to i8*
  %12 = call i32 @getsockopt(i32 %10, i32 1, i32 56, i8* %11, i32* %8) #14
  store i32 %12, i32* %6, align 4
  %13 = load i32, i32* %6, align 4
  %14 = icmp eq i32 %13, -1
  br i1 %14, label %18, label %15

15:                                               ; preds = %1
  %16 = load i32, i32* %5, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %22

18:                                               ; preds = %15, %1
  call void @STATS_LOCK()
  %19 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 24), align 8
  %20 = add i64 %19, 1
  store i64 %20, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 24), align 8
  call void @STATS_UNLOCK()
  %21 = call %struct.LIBEVENT_THREAD* @select_thread_round_robin()
  store %struct.LIBEVENT_THREAD* %21, %struct.LIBEVENT_THREAD** %2, align 8
  br label %65

22:                                               ; preds = %15
  br label %23

23:                                               ; preds = %57, %22
  store i32 0, i32* %7, align 4
  br label %24

24:                                               ; preds = %51, %23
  %25 = load i32, i32* %7, align 4
  %26 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 14), align 4
  %27 = icmp slt i32 %25, %26
  br i1 %27, label %28, label %54

28:                                               ; preds = %24
  %29 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %30 = load i32, i32* %7, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %29, i64 %31
  store %struct.LIBEVENT_THREAD* %32, %struct.LIBEVENT_THREAD** %4, align 8
  %33 = load i32, i32* @last_thread_by_napi_id, align 4
  %34 = load i32, i32* %7, align 4
  %35 = icmp slt i32 %33, %34
  br i1 %35, label %36, label %42

36:                                               ; preds = %28
  %37 = load i32, i32* %5, align 4
  %38 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %4, align 8
  %39 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %38, i32 0, i32 13
  store i32 %37, i32* %39, align 8
  %40 = load i32, i32* %7, align 4
  store i32 %40, i32* @last_thread_by_napi_id, align 4
  %41 = load i32, i32* %7, align 4
  store i32 %41, i32* %9, align 4
  br label %54

42:                                               ; preds = %28
  %43 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %4, align 8
  %44 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %43, i32 0, i32 13
  %45 = load i32, i32* %44, align 8
  %46 = load i32, i32* %5, align 4
  %47 = icmp eq i32 %45, %46
  br i1 %47, label %48, label %50

48:                                               ; preds = %42
  %49 = load i32, i32* %7, align 4
  store i32 %49, i32* %9, align 4
  br label %54

50:                                               ; preds = %42
  br label %51

51:                                               ; preds = %50
  %52 = load i32, i32* %7, align 4
  %53 = add nsw i32 %52, 1
  store i32 %53, i32* %7, align 4
  br label %24, !llvm.loop !97

54:                                               ; preds = %48, %36, %24
  %55 = load i32, i32* %9, align 4
  %56 = icmp eq i32 %55, -1
  br i1 %56, label %57, label %60

57:                                               ; preds = %54
  call void @STATS_LOCK()
  %58 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 23), align 8
  %59 = add i64 %58, 1
  store i64 %59, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 23), align 8
  call void @STATS_UNLOCK()
  call void @reset_threads_napi_id()
  br label %23

60:                                               ; preds = %54
  %61 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %62 = load i32, i32* %9, align 4
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %61, i64 %63
  store %struct.LIBEVENT_THREAD* %64, %struct.LIBEVENT_THREAD** %2, align 8
  br label %65

65:                                               ; preds = %60, %18
  %66 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %2, align 8
  ret %struct.LIBEVENT_THREAD* %66
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @reset_threads_napi_id() #0 {
  %1 = alloca %struct.LIBEVENT_THREAD*, align 8
  %2 = alloca i32, align 4
  store i32 0, i32* %2, align 4
  br label %3

3:                                                ; preds = %14, %0
  %4 = load i32, i32* %2, align 4
  %5 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 14), align 4
  %6 = icmp slt i32 %4, %5
  br i1 %6, label %7, label %17

7:                                                ; preds = %3
  %8 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %9 = load i32, i32* %2, align 4
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %8, i64 %10
  store %struct.LIBEVENT_THREAD* %11, %struct.LIBEVENT_THREAD** %1, align 8
  %12 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %1, align 8
  %13 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %12, i32 0, i32 13
  store i32 0, i32* %13, align 8
  br label %14

14:                                               ; preds = %7
  %15 = load i32, i32* %2, align 4
  %16 = add nsw i32 %15, 1
  store i32 %16, i32* %2, align 4
  br label %3, !llvm.loop !98

17:                                               ; preds = %3
  store i32 -1, i32* @last_thread_by_napi_id, align 4
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @redispatch_conn(%struct.conn* %0) #0 {
  %2 = alloca %struct.conn*, align 8
  store %struct.conn* %0, %struct.conn** %2, align 8
  %3 = load %struct.conn*, %struct.conn** %2, align 8
  %4 = getelementptr inbounds %struct.conn, %struct.conn* %3, i32 0, i32 42
  %5 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %4, align 8
  %6 = load %struct.conn*, %struct.conn** %2, align 8
  %7 = getelementptr inbounds %struct.conn, %struct.conn* %6, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  call void @notify_worker_fd(%struct.LIBEVENT_THREAD* %5, i32 %8, i32 3)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @timeout_conn(%struct.conn* %0) #0 {
  %2 = alloca %struct.conn*, align 8
  store %struct.conn* %0, %struct.conn** %2, align 8
  %3 = load %struct.conn*, %struct.conn** %2, align 8
  %4 = getelementptr inbounds %struct.conn, %struct.conn* %3, i32 0, i32 42
  %5 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %4, align 8
  %6 = load %struct.conn*, %struct.conn** %2, align 8
  %7 = getelementptr inbounds %struct.conn, %struct.conn* %6, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  call void @notify_worker_fd(%struct.LIBEVENT_THREAD* %5, i32 %8, i32 2)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @return_io_pending(%struct._io_pending_t* %0) #0 {
  %2 = alloca %struct._io_pending_t*, align 8
  %3 = alloca %struct.conn_queue_item*, align 8
  store %struct._io_pending_t* %0, %struct._io_pending_t** %2, align 8
  %4 = load %struct._io_pending_t*, %struct._io_pending_t** %2, align 8
  %5 = getelementptr inbounds %struct._io_pending_t, %struct._io_pending_t* %4, i32 0, i32 1
  %6 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %5, align 8
  %7 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %6, i32 0, i32 6
  %8 = load %struct.conn_queue*, %struct.conn_queue** %7, align 8
  %9 = call %struct.conn_queue_item* @cqi_new(%struct.conn_queue* %8)
  store %struct.conn_queue_item* %9, %struct.conn_queue_item** %3, align 8
  %10 = load %struct.conn_queue_item*, %struct.conn_queue_item** %3, align 8
  %11 = icmp eq %struct.conn_queue_item* %10, null
  br i1 %11, label %12, label %13

12:                                               ; preds = %1
  br label %23

13:                                               ; preds = %1
  %14 = load %struct.conn_queue_item*, %struct.conn_queue_item** %3, align 8
  %15 = getelementptr inbounds %struct.conn_queue_item, %struct.conn_queue_item* %14, i32 0, i32 5
  store i32 5, i32* %15, align 4
  %16 = load %struct._io_pending_t*, %struct._io_pending_t** %2, align 8
  %17 = load %struct.conn_queue_item*, %struct.conn_queue_item** %3, align 8
  %18 = getelementptr inbounds %struct.conn_queue_item, %struct.conn_queue_item* %17, i32 0, i32 8
  store %struct._io_pending_t* %16, %struct._io_pending_t** %18, align 8
  %19 = load %struct._io_pending_t*, %struct._io_pending_t** %2, align 8
  %20 = getelementptr inbounds %struct._io_pending_t, %struct._io_pending_t* %19, i32 0, i32 1
  %21 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %20, align 8
  %22 = load %struct.conn_queue_item*, %struct.conn_queue_item** %3, align 8
  call void @notify_worker(%struct.LIBEVENT_THREAD* %21, %struct.conn_queue_item* %22)
  br label %23

23:                                               ; preds = %13, %12
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @sidethread_conn_close(%struct.conn* %0) #0 {
  %2 = alloca %struct.conn*, align 8
  store %struct.conn* %0, %struct.conn** %2, align 8
  %3 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %4 = icmp sgt i32 %3, 1
  br i1 %4, label %5, label %11

5:                                                ; preds = %1
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %7 = load %struct.conn*, %struct.conn** %2, align 8
  %8 = getelementptr inbounds %struct.conn, %struct.conn* %7, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.13.729, i64 0, i64 0), i32 %9)
  br label %11

11:                                               ; preds = %5, %1
  %12 = load %struct.conn*, %struct.conn** %2, align 8
  %13 = getelementptr inbounds %struct.conn, %struct.conn* %12, i32 0, i32 9
  store i32 8, i32* %13, align 4
  %14 = load %struct.conn*, %struct.conn** %2, align 8
  call void @redispatch_conn(%struct.conn* %14)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct._stritem* @item_alloc(i8* %0, i64 %1, i32 %2, i32 %3, i32 %4) #0 {
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct._stritem*, align 8
  store i8* %0, i8** %6, align 8
  store i64 %1, i64* %7, align 8
  store i32 %2, i32* %8, align 4
  store i32 %3, i32* %9, align 4
  store i32 %4, i32* %10, align 4
  %12 = load i8*, i8** %6, align 8
  %13 = load i64, i64* %7, align 8
  %14 = load i32, i32* %8, align 4
  %15 = load i32, i32* %9, align 4
  %16 = load i32, i32* %10, align 4
  %17 = call %struct._stritem* @do_item_alloc(i8* %12, i64 %13, i32 %14, i32 %15, i32 %16)
  store %struct._stritem* %17, %struct._stritem** %11, align 8
  %18 = load %struct._stritem*, %struct._stritem** %11, align 8
  ret %struct._stritem* %18
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct._stritem* @item_get(i8* %0, i64 %1, %struct.conn* %2, i1 zeroext %3) #0 {
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %struct.conn*, align 8
  %8 = alloca i8, align 1
  %9 = alloca %struct._stritem*, align 8
  %10 = alloca i32, align 4
  store i8* %0, i8** %5, align 8
  store i64 %1, i64* %6, align 8
  store %struct.conn* %2, %struct.conn** %7, align 8
  %11 = zext i1 %3 to i8
  store i8 %11, i8* %8, align 1
  %12 = load i32 (i8*, i64)*, i32 (i8*, i64)** @hash, align 8
  %13 = load i8*, i8** %5, align 8
  %14 = load i64, i64* %6, align 8
  %15 = call i32 %12(i8* %13, i64 %14)
  store i32 %15, i32* %10, align 4
  %16 = load i32, i32* %10, align 4
  call void @item_lock(i32 %16)
  %17 = load i8*, i8** %5, align 8
  %18 = load i64, i64* %6, align 8
  %19 = load i32, i32* %10, align 4
  %20 = load %struct.conn*, %struct.conn** %7, align 8
  %21 = load i8, i8* %8, align 1
  %22 = trunc i8 %21 to i1
  %23 = call %struct._stritem* @do_item_get(i8* %17, i64 %18, i32 %19, %struct.conn* %20, i1 zeroext %22)
  store %struct._stritem* %23, %struct._stritem** %9, align 8
  %24 = load i32, i32* %10, align 4
  call void @item_unlock(i32 %24)
  %25 = load %struct._stritem*, %struct._stritem** %9, align 8
  ret %struct._stritem* %25
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct._stritem* @item_get_locked(i8* %0, i64 %1, %struct.conn* %2, i1 zeroext %3, i32* %4) #0 {
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %struct.conn*, align 8
  %9 = alloca i8, align 1
  %10 = alloca i32*, align 8
  %11 = alloca %struct._stritem*, align 8
  store i8* %0, i8** %6, align 8
  store i64 %1, i64* %7, align 8
  store %struct.conn* %2, %struct.conn** %8, align 8
  %12 = zext i1 %3 to i8
  store i8 %12, i8* %9, align 1
  store i32* %4, i32** %10, align 8
  %13 = load i32 (i8*, i64)*, i32 (i8*, i64)** @hash, align 8
  %14 = load i8*, i8** %6, align 8
  %15 = load i64, i64* %7, align 8
  %16 = call i32 %13(i8* %14, i64 %15)
  %17 = load i32*, i32** %10, align 8
  store i32 %16, i32* %17, align 4
  %18 = load i32*, i32** %10, align 8
  %19 = load i32, i32* %18, align 4
  call void @item_lock(i32 %19)
  %20 = load i8*, i8** %6, align 8
  %21 = load i64, i64* %7, align 8
  %22 = load i32*, i32** %10, align 8
  %23 = load i32, i32* %22, align 4
  %24 = load %struct.conn*, %struct.conn** %8, align 8
  %25 = load i8, i8* %9, align 1
  %26 = trunc i8 %25 to i1
  %27 = call %struct._stritem* @do_item_get(i8* %20, i64 %21, i32 %23, %struct.conn* %24, i1 zeroext %26)
  store %struct._stritem* %27, %struct._stritem** %11, align 8
  %28 = load %struct._stritem*, %struct._stritem** %11, align 8
  ret %struct._stritem* %28
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct._stritem* @item_touch(i8* %0, i64 %1, i32 %2, %struct.conn* %3) #0 {
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca %struct.conn*, align 8
  %9 = alloca %struct._stritem*, align 8
  %10 = alloca i32, align 4
  store i8* %0, i8** %5, align 8
  store i64 %1, i64* %6, align 8
  store i32 %2, i32* %7, align 4
  store %struct.conn* %3, %struct.conn** %8, align 8
  %11 = load i32 (i8*, i64)*, i32 (i8*, i64)** @hash, align 8
  %12 = load i8*, i8** %5, align 8
  %13 = load i64, i64* %6, align 8
  %14 = call i32 %11(i8* %12, i64 %13)
  store i32 %14, i32* %10, align 4
  %15 = load i32, i32* %10, align 4
  call void @item_lock(i32 %15)
  %16 = load i8*, i8** %5, align 8
  %17 = load i64, i64* %6, align 8
  %18 = load i32, i32* %7, align 4
  %19 = load i32, i32* %10, align 4
  %20 = load %struct.conn*, %struct.conn** %8, align 8
  %21 = call %struct._stritem* @do_item_touch(i8* %16, i64 %17, i32 %18, i32 %19, %struct.conn* %20)
  store %struct._stritem* %21, %struct._stritem** %9, align 8
  %22 = load i32, i32* %10, align 4
  call void @item_unlock(i32 %22)
  %23 = load %struct._stritem*, %struct._stritem** %9, align 8
  ret %struct._stritem* %23
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @item_link(%struct._stritem* %0) #0 {
  %2 = alloca %struct._stritem*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store %struct._stritem* %0, %struct._stritem** %2, align 8
  %5 = load i32 (i8*, i64)*, i32 (i8*, i64)** @hash, align 8
  %6 = load %struct._stritem*, %struct._stritem** %2, align 8
  %7 = getelementptr inbounds %struct._stritem, %struct._stritem* %6, i32 0, i32 10
  %8 = bitcast [0 x %union.anon.10]* %7 to i8*
  %9 = load %struct._stritem*, %struct._stritem** %2, align 8
  %10 = getelementptr inbounds %struct._stritem, %struct._stritem* %9, i32 0, i32 7
  %11 = load i16, i16* %10, align 2
  %12 = zext i16 %11 to i32
  %13 = and i32 %12, 2
  %14 = icmp ne i32 %13, 0
  %15 = zext i1 %14 to i64
  %16 = select i1 %14, i64 8, i64 0
  %17 = getelementptr inbounds i8, i8* %8, i64 %16
  %18 = load %struct._stritem*, %struct._stritem** %2, align 8
  %19 = getelementptr inbounds %struct._stritem, %struct._stritem* %18, i32 0, i32 9
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i64
  %22 = call i32 %5(i8* %17, i64 %21)
  store i32 %22, i32* %4, align 4
  %23 = load i32, i32* %4, align 4
  call void @item_lock(i32 %23)
  %24 = load %struct._stritem*, %struct._stritem** %2, align 8
  %25 = load i32, i32* %4, align 4
  %26 = call i32 @do_item_link(%struct._stritem* %24, i32 %25)
  store i32 %26, i32* %3, align 4
  %27 = load i32, i32* %4, align 4
  call void @item_unlock(i32 %27)
  %28 = load i32, i32* %3, align 4
  ret i32 %28
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @item_remove(%struct._stritem* %0) #0 {
  %2 = alloca %struct._stritem*, align 8
  %3 = alloca i32, align 4
  store %struct._stritem* %0, %struct._stritem** %2, align 8
  %4 = load i32 (i8*, i64)*, i32 (i8*, i64)** @hash, align 8
  %5 = load %struct._stritem*, %struct._stritem** %2, align 8
  %6 = getelementptr inbounds %struct._stritem, %struct._stritem* %5, i32 0, i32 10
  %7 = bitcast [0 x %union.anon.10]* %6 to i8*
  %8 = load %struct._stritem*, %struct._stritem** %2, align 8
  %9 = getelementptr inbounds %struct._stritem, %struct._stritem* %8, i32 0, i32 7
  %10 = load i16, i16* %9, align 2
  %11 = zext i16 %10 to i32
  %12 = and i32 %11, 2
  %13 = icmp ne i32 %12, 0
  %14 = zext i1 %13 to i64
  %15 = select i1 %13, i64 8, i64 0
  %16 = getelementptr inbounds i8, i8* %7, i64 %15
  %17 = load %struct._stritem*, %struct._stritem** %2, align 8
  %18 = getelementptr inbounds %struct._stritem, %struct._stritem* %17, i32 0, i32 9
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i64
  %21 = call i32 %4(i8* %16, i64 %20)
  store i32 %21, i32* %3, align 4
  %22 = load i32, i32* %3, align 4
  call void @item_lock(i32 %22)
  %23 = load %struct._stritem*, %struct._stritem** %2, align 8
  call void @do_item_remove(%struct._stritem* %23)
  %24 = load i32, i32* %3, align 4
  call void @item_unlock(i32 %24)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @item_replace(%struct._stritem* %0, %struct._stritem* %1, i32 %2) #0 {
  %4 = alloca %struct._stritem*, align 8
  %5 = alloca %struct._stritem*, align 8
  %6 = alloca i32, align 4
  store %struct._stritem* %0, %struct._stritem** %4, align 8
  store %struct._stritem* %1, %struct._stritem** %5, align 8
  store i32 %2, i32* %6, align 4
  %7 = load %struct._stritem*, %struct._stritem** %4, align 8
  %8 = load %struct._stritem*, %struct._stritem** %5, align 8
  %9 = load i32, i32* %6, align 4
  %10 = call i32 @do_item_replace(%struct._stritem* %7, %struct._stritem* %8, i32 %9)
  ret i32 %10
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @item_unlink(%struct._stritem* %0) #0 {
  %2 = alloca %struct._stritem*, align 8
  %3 = alloca i32, align 4
  store %struct._stritem* %0, %struct._stritem** %2, align 8
  %4 = load i32 (i8*, i64)*, i32 (i8*, i64)** @hash, align 8
  %5 = load %struct._stritem*, %struct._stritem** %2, align 8
  %6 = getelementptr inbounds %struct._stritem, %struct._stritem* %5, i32 0, i32 10
  %7 = bitcast [0 x %union.anon.10]* %6 to i8*
  %8 = load %struct._stritem*, %struct._stritem** %2, align 8
  %9 = getelementptr inbounds %struct._stritem, %struct._stritem* %8, i32 0, i32 7
  %10 = load i16, i16* %9, align 2
  %11 = zext i16 %10 to i32
  %12 = and i32 %11, 2
  %13 = icmp ne i32 %12, 0
  %14 = zext i1 %13 to i64
  %15 = select i1 %13, i64 8, i64 0
  %16 = getelementptr inbounds i8, i8* %7, i64 %15
  %17 = load %struct._stritem*, %struct._stritem** %2, align 8
  %18 = getelementptr inbounds %struct._stritem, %struct._stritem* %17, i32 0, i32 9
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i64
  %21 = call i32 %4(i8* %16, i64 %20)
  store i32 %21, i32* %3, align 4
  %22 = load i32, i32* %3, align 4
  call void @item_lock(i32 %22)
  %23 = load %struct._stritem*, %struct._stritem** %2, align 8
  %24 = load i32, i32* %3, align 4
  call void @do_item_unlink(%struct._stritem* %23, i32 %24)
  %25 = load i32, i32* %3, align 4
  call void @item_unlock(i32 %25)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @add_delta(%struct.conn* %0, i8* %1, i64 %2, i1 zeroext %3, i64 %4, i8* %5, i64* %6) #0 {
  %8 = alloca %struct.conn*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i8, align 1
  %12 = alloca i64, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i64*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  store %struct.conn* %0, %struct.conn** %8, align 8
  store i8* %1, i8** %9, align 8
  store i64 %2, i64* %10, align 8
  %17 = zext i1 %3 to i8
  store i8 %17, i8* %11, align 1
  store i64 %4, i64* %12, align 8
  store i8* %5, i8** %13, align 8
  store i64* %6, i64** %14, align 8
  %18 = load i32 (i8*, i64)*, i32 (i8*, i64)** @hash, align 8
  %19 = load i8*, i8** %9, align 8
  %20 = load i64, i64* %10, align 8
  %21 = call i32 %18(i8* %19, i64 %20)
  store i32 %21, i32* %16, align 4
  %22 = load i32, i32* %16, align 4
  call void @item_lock(i32 %22)
  %23 = load %struct.conn*, %struct.conn** %8, align 8
  %24 = load i8*, i8** %9, align 8
  %25 = load i64, i64* %10, align 8
  %26 = load i8, i8* %11, align 1
  %27 = trunc i8 %26 to i1
  %28 = load i64, i64* %12, align 8
  %29 = load i8*, i8** %13, align 8
  %30 = load i64*, i64** %14, align 8
  %31 = load i32, i32* %16, align 4
  %32 = call i32 @do_add_delta(%struct.conn* %23, i8* %24, i64 %25, i1 zeroext %27, i64 %28, i8* %29, i64* %30, i32 %31, %struct._stritem** null)
  store i32 %32, i32* %15, align 4
  %33 = load i32, i32* %16, align 4
  call void @item_unlock(i32 %33)
  %34 = load i32, i32* %15, align 4
  ret i32 %34
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @store_item(%struct._stritem* %0, i32 %1, %struct.conn* %2) #0 {
  %4 = alloca %struct._stritem*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.conn*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %struct._stritem* %0, %struct._stritem** %4, align 8
  store i32 %1, i32* %5, align 4
  store %struct.conn* %2, %struct.conn** %6, align 8
  %9 = load i32 (i8*, i64)*, i32 (i8*, i64)** @hash, align 8
  %10 = load %struct._stritem*, %struct._stritem** %4, align 8
  %11 = getelementptr inbounds %struct._stritem, %struct._stritem* %10, i32 0, i32 10
  %12 = bitcast [0 x %union.anon.10]* %11 to i8*
  %13 = load %struct._stritem*, %struct._stritem** %4, align 8
  %14 = getelementptr inbounds %struct._stritem, %struct._stritem* %13, i32 0, i32 7
  %15 = load i16, i16* %14, align 2
  %16 = zext i16 %15 to i32
  %17 = and i32 %16, 2
  %18 = icmp ne i32 %17, 0
  %19 = zext i1 %18 to i64
  %20 = select i1 %18, i64 8, i64 0
  %21 = getelementptr inbounds i8, i8* %12, i64 %20
  %22 = load %struct._stritem*, %struct._stritem** %4, align 8
  %23 = getelementptr inbounds %struct._stritem, %struct._stritem* %22, i32 0, i32 9
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i64
  %26 = call i32 %9(i8* %21, i64 %25)
  store i32 %26, i32* %8, align 4
  %27 = load i32, i32* %8, align 4
  call void @item_lock(i32 %27)
  %28 = load %struct._stritem*, %struct._stritem** %4, align 8
  %29 = load i32, i32* %5, align 4
  %30 = load %struct.conn*, %struct.conn** %6, align 8
  %31 = load i32, i32* %8, align 4
  %32 = call i32 @do_store_item(%struct._stritem* %28, i32 %29, %struct.conn* %30, i32 %31)
  store i32 %32, i32* %7, align 4
  %33 = load i32, i32* %8, align 4
  call void @item_unlock(i32 %33)
  %34 = load i32, i32* %7, align 4
  ret i32 %34
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @threadlocal_stats_reset() #0 {
  %1 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  br label %2

2:                                                ; preds = %215, %0
  %3 = load i32, i32* %1, align 4
  %4 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 14), align 4
  %5 = icmp slt i32 %3, %4
  br i1 %5, label %6, label %218

6:                                                ; preds = %2
  %7 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %8 = load i32, i32* %1, align 4
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %7, i64 %9
  %11 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %10, i32 0, i32 4
  %12 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %11, i32 0, i32 0
  %13 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %12) #14
  %14 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %15 = load i32, i32* %1, align 4
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %14, i64 %16
  %18 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %17, i32 0, i32 4
  %19 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %18, i32 0, i32 1
  store i64 0, i64* %19, align 8
  %20 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %21 = load i32, i32* %1, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %20, i64 %22
  %24 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %23, i32 0, i32 4
  %25 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %24, i32 0, i32 2
  store i64 0, i64* %25, align 8
  %26 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %27 = load i32, i32* %1, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %26, i64 %28
  %30 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %29, i32 0, i32 4
  %31 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %30, i32 0, i32 3
  store i64 0, i64* %31, align 8
  %32 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %33 = load i32, i32* %1, align 4
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %32, i64 %34
  %36 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %35, i32 0, i32 4
  %37 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %36, i32 0, i32 4
  store i64 0, i64* %37, align 8
  %38 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %39 = load i32, i32* %1, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %38, i64 %40
  %42 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %41, i32 0, i32 4
  %43 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %42, i32 0, i32 5
  store i64 0, i64* %43, align 8
  %44 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %45 = load i32, i32* %1, align 4
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %44, i64 %46
  %48 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %47, i32 0, i32 4
  %49 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %48, i32 0, i32 6
  store i64 0, i64* %49, align 8
  %50 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %51 = load i32, i32* %1, align 4
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %50, i64 %52
  %54 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %53, i32 0, i32 4
  %55 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %54, i32 0, i32 7
  store i64 0, i64* %55, align 8
  %56 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %57 = load i32, i32* %1, align 4
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %56, i64 %58
  %60 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %59, i32 0, i32 4
  %61 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %60, i32 0, i32 8
  store i64 0, i64* %61, align 8
  %62 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %63 = load i32, i32* %1, align 4
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %62, i64 %64
  %66 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %65, i32 0, i32 4
  %67 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %66, i32 0, i32 9
  store i64 0, i64* %67, align 8
  %68 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %69 = load i32, i32* %1, align 4
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %68, i64 %70
  %72 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %71, i32 0, i32 4
  %73 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %72, i32 0, i32 10
  store i64 0, i64* %73, align 8
  %74 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %75 = load i32, i32* %1, align 4
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %74, i64 %76
  %78 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %77, i32 0, i32 4
  %79 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %78, i32 0, i32 11
  store i64 0, i64* %79, align 8
  %80 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %81 = load i32, i32* %1, align 4
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %80, i64 %82
  %84 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %83, i32 0, i32 4
  %85 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %84, i32 0, i32 12
  store i64 0, i64* %85, align 8
  %86 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %87 = load i32, i32* %1, align 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %86, i64 %88
  %90 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %89, i32 0, i32 4
  %91 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %90, i32 0, i32 13
  store i64 0, i64* %91, align 8
  %92 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %93 = load i32, i32* %1, align 4
  %94 = sext i32 %93 to i64
  %95 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %92, i64 %94
  %96 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %95, i32 0, i32 4
  %97 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %96, i32 0, i32 14
  store i64 0, i64* %97, align 8
  %98 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %99 = load i32, i32* %1, align 4
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %98, i64 %100
  %102 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %101, i32 0, i32 4
  %103 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %102, i32 0, i32 15
  store i64 0, i64* %103, align 8
  %104 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %105 = load i32, i32* %1, align 4
  %106 = sext i32 %105 to i64
  %107 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %104, i64 %106
  %108 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %107, i32 0, i32 4
  %109 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %108, i32 0, i32 16
  store i64 0, i64* %109, align 8
  %110 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %111 = load i32, i32* %1, align 4
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %110, i64 %112
  %114 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %113, i32 0, i32 4
  %115 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %114, i32 0, i32 17
  store i64 0, i64* %115, align 8
  %116 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %117 = load i32, i32* %1, align 4
  %118 = sext i32 %117 to i64
  %119 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %116, i64 %118
  %120 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %119, i32 0, i32 4
  %121 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %120, i32 0, i32 18
  store i64 0, i64* %121, align 8
  %122 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %123 = load i32, i32* %1, align 4
  %124 = sext i32 %123 to i64
  %125 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %122, i64 %124
  %126 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %125, i32 0, i32 4
  %127 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %126, i32 0, i32 19
  store i64 0, i64* %127, align 8
  %128 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %129 = load i32, i32* %1, align 4
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %128, i64 %130
  %132 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %131, i32 0, i32 4
  %133 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %132, i32 0, i32 20
  store i64 0, i64* %133, align 8
  %134 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %135 = load i32, i32* %1, align 4
  %136 = sext i32 %135 to i64
  %137 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %134, i64 %136
  %138 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %137, i32 0, i32 4
  %139 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %138, i32 0, i32 21
  store i64 0, i64* %139, align 8
  %140 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %141 = load i32, i32* %1, align 4
  %142 = sext i32 %141 to i64
  %143 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %140, i64 %142
  %144 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %143, i32 0, i32 4
  %145 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %144, i32 0, i32 22
  store i64 0, i64* %145, align 8
  %146 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %147 = load i32, i32* %1, align 4
  %148 = sext i32 %147 to i64
  %149 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %146, i64 %148
  %150 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %149, i32 0, i32 4
  %151 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %150, i32 0, i32 23
  store i64 0, i64* %151, align 8
  %152 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %153 = load i32, i32* %1, align 4
  %154 = sext i32 %153 to i64
  %155 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %152, i64 %154
  %156 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %155, i32 0, i32 4
  %157 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %156, i32 0, i32 24
  store i64 0, i64* %157, align 8
  %158 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %159 = load i32, i32* %1, align 4
  %160 = sext i32 %159 to i64
  %161 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %158, i64 %160
  %162 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %161, i32 0, i32 4
  %163 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %162, i32 0, i32 25
  store i64 0, i64* %163, align 8
  %164 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %165 = load i32, i32* %1, align 4
  %166 = sext i32 %165 to i64
  %167 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %164, i64 %166
  %168 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %167, i32 0, i32 4
  %169 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %168, i32 0, i32 26
  store i64 0, i64* %169, align 8
  %170 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %171 = load i32, i32* %1, align 4
  %172 = sext i32 %171 to i64
  %173 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %170, i64 %172
  %174 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %173, i32 0, i32 4
  %175 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %174, i32 0, i32 27
  store i64 0, i64* %175, align 8
  %176 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %177 = load i32, i32* %1, align 4
  %178 = sext i32 %177 to i64
  %179 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %176, i64 %178
  %180 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %179, i32 0, i32 4
  %181 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %180, i32 0, i32 28
  store i64 0, i64* %181, align 8
  %182 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %183 = load i32, i32* %1, align 4
  %184 = sext i32 %183 to i64
  %185 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %182, i64 %184
  %186 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %185, i32 0, i32 4
  %187 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %186, i32 0, i32 29
  store i64 0, i64* %187, align 8
  %188 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %189 = load i32, i32* %1, align 4
  %190 = sext i32 %189 to i64
  %191 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %188, i64 %190
  %192 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %191, i32 0, i32 4
  %193 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %192, i32 0, i32 30
  store i64 0, i64* %193, align 8
  %194 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %195 = load i32, i32* %1, align 4
  %196 = sext i32 %195 to i64
  %197 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %194, i64 %196
  %198 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %197, i32 0, i32 4
  %199 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %198, i32 0, i32 31
  %200 = bitcast [64 x %struct.slab_stats]* %199 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %200, i8 0, i64 4096, i1 false)
  %201 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %202 = load i32, i32* %1, align 4
  %203 = sext i32 %202 to i64
  %204 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %201, i64 %203
  %205 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %204, i32 0, i32 4
  %206 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %205, i32 0, i32 32
  %207 = bitcast [256 x i64]* %206 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %207, i8 0, i64 2048, i1 false)
  %208 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %209 = load i32, i32* %1, align 4
  %210 = sext i32 %209 to i64
  %211 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %208, i64 %210
  %212 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %211, i32 0, i32 4
  %213 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %212, i32 0, i32 0
  %214 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %213) #14
  br label %215

215:                                              ; preds = %6
  %216 = load i32, i32* %1, align 4
  %217 = add nsw i32 %216, 1
  store i32 %217, i32* %1, align 4
  br label %2, !llvm.loop !99

218:                                              ; preds = %2
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @threadlocal_stats_aggregate(%struct.thread_stats* %0) #0 {
  %2 = alloca %struct.thread_stats*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store %struct.thread_stats* %0, %struct.thread_stats** %2, align 8
  %5 = load %struct.thread_stats*, %struct.thread_stats** %2, align 8
  %6 = bitcast %struct.thread_stats* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 6448, i1 false)
  store i32 0, i32* %3, align 4
  br label %7

7:                                                ; preds = %601, %1
  %8 = load i32, i32* %3, align 4
  %9 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 14), align 4
  %10 = icmp slt i32 %8, %9
  br i1 %10, label %11, label %604

11:                                               ; preds = %7
  %12 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %13 = load i32, i32* %3, align 4
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %12, i64 %14
  %16 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %15, i32 0, i32 4
  %17 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %16, i32 0, i32 0
  %18 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %17) #14
  %19 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %20 = load i32, i32* %3, align 4
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %19, i64 %21
  %23 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %22, i32 0, i32 4
  %24 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %23, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = load %struct.thread_stats*, %struct.thread_stats** %2, align 8
  %27 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %26, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = add i64 %28, %25
  store i64 %29, i64* %27, align 8
  %30 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %31 = load i32, i32* %3, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %30, i64 %32
  %34 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %33, i32 0, i32 4
  %35 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %34, i32 0, i32 2
  %36 = load i64, i64* %35, align 8
  %37 = load %struct.thread_stats*, %struct.thread_stats** %2, align 8
  %38 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %37, i32 0, i32 2
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, %36
  store i64 %40, i64* %38, align 8
  %41 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %42 = load i32, i32* %3, align 4
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %41, i64 %43
  %45 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %44, i32 0, i32 4
  %46 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %45, i32 0, i32 3
  %47 = load i64, i64* %46, align 8
  %48 = load %struct.thread_stats*, %struct.thread_stats** %2, align 8
  %49 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %48, i32 0, i32 3
  %50 = load i64, i64* %49, align 8
  %51 = add i64 %50, %47
  store i64 %51, i64* %49, align 8
  %52 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %53 = load i32, i32* %3, align 4
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %52, i64 %54
  %56 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %55, i32 0, i32 4
  %57 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %56, i32 0, i32 4
  %58 = load i64, i64* %57, align 8
  %59 = load %struct.thread_stats*, %struct.thread_stats** %2, align 8
  %60 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %59, i32 0, i32 4
  %61 = load i64, i64* %60, align 8
  %62 = add i64 %61, %58
  store i64 %62, i64* %60, align 8
  %63 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %64 = load i32, i32* %3, align 4
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %63, i64 %65
  %67 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %66, i32 0, i32 4
  %68 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %67, i32 0, i32 5
  %69 = load i64, i64* %68, align 8
  %70 = load %struct.thread_stats*, %struct.thread_stats** %2, align 8
  %71 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %70, i32 0, i32 5
  %72 = load i64, i64* %71, align 8
  %73 = add i64 %72, %69
  store i64 %73, i64* %71, align 8
  %74 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %75 = load i32, i32* %3, align 4
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %74, i64 %76
  %78 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %77, i32 0, i32 4
  %79 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %78, i32 0, i32 6
  %80 = load i64, i64* %79, align 8
  %81 = load %struct.thread_stats*, %struct.thread_stats** %2, align 8
  %82 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %81, i32 0, i32 6
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, %80
  store i64 %84, i64* %82, align 8
  %85 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %86 = load i32, i32* %3, align 4
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %85, i64 %87
  %89 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %88, i32 0, i32 4
  %90 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %89, i32 0, i32 7
  %91 = load i64, i64* %90, align 8
  %92 = load %struct.thread_stats*, %struct.thread_stats** %2, align 8
  %93 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %92, i32 0, i32 7
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, %91
  store i64 %95, i64* %93, align 8
  %96 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %97 = load i32, i32* %3, align 4
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %96, i64 %98
  %100 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %99, i32 0, i32 4
  %101 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %100, i32 0, i32 8
  %102 = load i64, i64* %101, align 8
  %103 = load %struct.thread_stats*, %struct.thread_stats** %2, align 8
  %104 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %103, i32 0, i32 8
  %105 = load i64, i64* %104, align 8
  %106 = add i64 %105, %102
  store i64 %106, i64* %104, align 8
  %107 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %108 = load i32, i32* %3, align 4
  %109 = sext i32 %108 to i64
  %110 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %107, i64 %109
  %111 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %110, i32 0, i32 4
  %112 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %111, i32 0, i32 9
  %113 = load i64, i64* %112, align 8
  %114 = load %struct.thread_stats*, %struct.thread_stats** %2, align 8
  %115 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %114, i32 0, i32 9
  %116 = load i64, i64* %115, align 8
  %117 = add i64 %116, %113
  store i64 %117, i64* %115, align 8
  %118 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %119 = load i32, i32* %3, align 4
  %120 = sext i32 %119 to i64
  %121 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %118, i64 %120
  %122 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %121, i32 0, i32 4
  %123 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %122, i32 0, i32 10
  %124 = load i64, i64* %123, align 8
  %125 = load %struct.thread_stats*, %struct.thread_stats** %2, align 8
  %126 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %125, i32 0, i32 10
  %127 = load i64, i64* %126, align 8
  %128 = add i64 %127, %124
  store i64 %128, i64* %126, align 8
  %129 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %130 = load i32, i32* %3, align 4
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %129, i64 %131
  %133 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %132, i32 0, i32 4
  %134 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %133, i32 0, i32 11
  %135 = load i64, i64* %134, align 8
  %136 = load %struct.thread_stats*, %struct.thread_stats** %2, align 8
  %137 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %136, i32 0, i32 11
  %138 = load i64, i64* %137, align 8
  %139 = add i64 %138, %135
  store i64 %139, i64* %137, align 8
  %140 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %141 = load i32, i32* %3, align 4
  %142 = sext i32 %141 to i64
  %143 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %140, i64 %142
  %144 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %143, i32 0, i32 4
  %145 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %144, i32 0, i32 12
  %146 = load i64, i64* %145, align 8
  %147 = load %struct.thread_stats*, %struct.thread_stats** %2, align 8
  %148 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %147, i32 0, i32 12
  %149 = load i64, i64* %148, align 8
  %150 = add i64 %149, %146
  store i64 %150, i64* %148, align 8
  %151 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %152 = load i32, i32* %3, align 4
  %153 = sext i32 %152 to i64
  %154 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %151, i64 %153
  %155 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %154, i32 0, i32 4
  %156 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %155, i32 0, i32 13
  %157 = load i64, i64* %156, align 8
  %158 = load %struct.thread_stats*, %struct.thread_stats** %2, align 8
  %159 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %158, i32 0, i32 13
  %160 = load i64, i64* %159, align 8
  %161 = add i64 %160, %157
  store i64 %161, i64* %159, align 8
  %162 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %163 = load i32, i32* %3, align 4
  %164 = sext i32 %163 to i64
  %165 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %162, i64 %164
  %166 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %165, i32 0, i32 4
  %167 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %166, i32 0, i32 14
  %168 = load i64, i64* %167, align 8
  %169 = load %struct.thread_stats*, %struct.thread_stats** %2, align 8
  %170 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %169, i32 0, i32 14
  %171 = load i64, i64* %170, align 8
  %172 = add i64 %171, %168
  store i64 %172, i64* %170, align 8
  %173 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %174 = load i32, i32* %3, align 4
  %175 = sext i32 %174 to i64
  %176 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %173, i64 %175
  %177 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %176, i32 0, i32 4
  %178 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %177, i32 0, i32 15
  %179 = load i64, i64* %178, align 8
  %180 = load %struct.thread_stats*, %struct.thread_stats** %2, align 8
  %181 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %180, i32 0, i32 15
  %182 = load i64, i64* %181, align 8
  %183 = add i64 %182, %179
  store i64 %183, i64* %181, align 8
  %184 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %185 = load i32, i32* %3, align 4
  %186 = sext i32 %185 to i64
  %187 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %184, i64 %186
  %188 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %187, i32 0, i32 4
  %189 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %188, i32 0, i32 16
  %190 = load i64, i64* %189, align 8
  %191 = load %struct.thread_stats*, %struct.thread_stats** %2, align 8
  %192 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %191, i32 0, i32 16
  %193 = load i64, i64* %192, align 8
  %194 = add i64 %193, %190
  store i64 %194, i64* %192, align 8
  %195 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %196 = load i32, i32* %3, align 4
  %197 = sext i32 %196 to i64
  %198 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %195, i64 %197
  %199 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %198, i32 0, i32 4
  %200 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %199, i32 0, i32 17
  %201 = load i64, i64* %200, align 8
  %202 = load %struct.thread_stats*, %struct.thread_stats** %2, align 8
  %203 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %202, i32 0, i32 17
  %204 = load i64, i64* %203, align 8
  %205 = add i64 %204, %201
  store i64 %205, i64* %203, align 8
  %206 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %207 = load i32, i32* %3, align 4
  %208 = sext i32 %207 to i64
  %209 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %206, i64 %208
  %210 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %209, i32 0, i32 4
  %211 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %210, i32 0, i32 18
  %212 = load i64, i64* %211, align 8
  %213 = load %struct.thread_stats*, %struct.thread_stats** %2, align 8
  %214 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %213, i32 0, i32 18
  %215 = load i64, i64* %214, align 8
  %216 = add i64 %215, %212
  store i64 %216, i64* %214, align 8
  %217 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %218 = load i32, i32* %3, align 4
  %219 = sext i32 %218 to i64
  %220 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %217, i64 %219
  %221 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %220, i32 0, i32 4
  %222 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %221, i32 0, i32 19
  %223 = load i64, i64* %222, align 8
  %224 = load %struct.thread_stats*, %struct.thread_stats** %2, align 8
  %225 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %224, i32 0, i32 19
  %226 = load i64, i64* %225, align 8
  %227 = add i64 %226, %223
  store i64 %227, i64* %225, align 8
  %228 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %229 = load i32, i32* %3, align 4
  %230 = sext i32 %229 to i64
  %231 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %228, i64 %230
  %232 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %231, i32 0, i32 4
  %233 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %232, i32 0, i32 20
  %234 = load i64, i64* %233, align 8
  %235 = load %struct.thread_stats*, %struct.thread_stats** %2, align 8
  %236 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %235, i32 0, i32 20
  %237 = load i64, i64* %236, align 8
  %238 = add i64 %237, %234
  store i64 %238, i64* %236, align 8
  %239 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %240 = load i32, i32* %3, align 4
  %241 = sext i32 %240 to i64
  %242 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %239, i64 %241
  %243 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %242, i32 0, i32 4
  %244 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %243, i32 0, i32 21
  %245 = load i64, i64* %244, align 8
  %246 = load %struct.thread_stats*, %struct.thread_stats** %2, align 8
  %247 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %246, i32 0, i32 21
  %248 = load i64, i64* %247, align 8
  %249 = add i64 %248, %245
  store i64 %249, i64* %247, align 8
  %250 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %251 = load i32, i32* %3, align 4
  %252 = sext i32 %251 to i64
  %253 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %250, i64 %252
  %254 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %253, i32 0, i32 4
  %255 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %254, i32 0, i32 22
  %256 = load i64, i64* %255, align 8
  %257 = load %struct.thread_stats*, %struct.thread_stats** %2, align 8
  %258 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %257, i32 0, i32 22
  %259 = load i64, i64* %258, align 8
  %260 = add i64 %259, %256
  store i64 %260, i64* %258, align 8
  %261 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %262 = load i32, i32* %3, align 4
  %263 = sext i32 %262 to i64
  %264 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %261, i64 %263
  %265 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %264, i32 0, i32 4
  %266 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %265, i32 0, i32 23
  %267 = load i64, i64* %266, align 8
  %268 = load %struct.thread_stats*, %struct.thread_stats** %2, align 8
  %269 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %268, i32 0, i32 23
  %270 = load i64, i64* %269, align 8
  %271 = add i64 %270, %267
  store i64 %271, i64* %269, align 8
  %272 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %273 = load i32, i32* %3, align 4
  %274 = sext i32 %273 to i64
  %275 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %272, i64 %274
  %276 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %275, i32 0, i32 4
  %277 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %276, i32 0, i32 24
  %278 = load i64, i64* %277, align 8
  %279 = load %struct.thread_stats*, %struct.thread_stats** %2, align 8
  %280 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %279, i32 0, i32 24
  %281 = load i64, i64* %280, align 8
  %282 = add i64 %281, %278
  store i64 %282, i64* %280, align 8
  %283 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %284 = load i32, i32* %3, align 4
  %285 = sext i32 %284 to i64
  %286 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %283, i64 %285
  %287 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %286, i32 0, i32 4
  %288 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %287, i32 0, i32 25
  %289 = load i64, i64* %288, align 8
  %290 = load %struct.thread_stats*, %struct.thread_stats** %2, align 8
  %291 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %290, i32 0, i32 25
  %292 = load i64, i64* %291, align 8
  %293 = add i64 %292, %289
  store i64 %293, i64* %291, align 8
  %294 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %295 = load i32, i32* %3, align 4
  %296 = sext i32 %295 to i64
  %297 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %294, i64 %296
  %298 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %297, i32 0, i32 4
  %299 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %298, i32 0, i32 26
  %300 = load i64, i64* %299, align 8
  %301 = load %struct.thread_stats*, %struct.thread_stats** %2, align 8
  %302 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %301, i32 0, i32 26
  %303 = load i64, i64* %302, align 8
  %304 = add i64 %303, %300
  store i64 %304, i64* %302, align 8
  %305 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %306 = load i32, i32* %3, align 4
  %307 = sext i32 %306 to i64
  %308 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %305, i64 %307
  %309 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %308, i32 0, i32 4
  %310 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %309, i32 0, i32 27
  %311 = load i64, i64* %310, align 8
  %312 = load %struct.thread_stats*, %struct.thread_stats** %2, align 8
  %313 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %312, i32 0, i32 27
  %314 = load i64, i64* %313, align 8
  %315 = add i64 %314, %311
  store i64 %315, i64* %313, align 8
  %316 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %317 = load i32, i32* %3, align 4
  %318 = sext i32 %317 to i64
  %319 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %316, i64 %318
  %320 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %319, i32 0, i32 4
  %321 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %320, i32 0, i32 28
  %322 = load i64, i64* %321, align 8
  %323 = load %struct.thread_stats*, %struct.thread_stats** %2, align 8
  %324 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %323, i32 0, i32 28
  %325 = load i64, i64* %324, align 8
  %326 = add i64 %325, %322
  store i64 %326, i64* %324, align 8
  %327 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %328 = load i32, i32* %3, align 4
  %329 = sext i32 %328 to i64
  %330 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %327, i64 %329
  %331 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %330, i32 0, i32 4
  %332 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %331, i32 0, i32 29
  %333 = load i64, i64* %332, align 8
  %334 = load %struct.thread_stats*, %struct.thread_stats** %2, align 8
  %335 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %334, i32 0, i32 29
  %336 = load i64, i64* %335, align 8
  %337 = add i64 %336, %333
  store i64 %337, i64* %335, align 8
  %338 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %339 = load i32, i32* %3, align 4
  %340 = sext i32 %339 to i64
  %341 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %338, i64 %340
  %342 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %341, i32 0, i32 4
  %343 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %342, i32 0, i32 30
  %344 = load i64, i64* %343, align 8
  %345 = load %struct.thread_stats*, %struct.thread_stats** %2, align 8
  %346 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %345, i32 0, i32 30
  %347 = load i64, i64* %346, align 8
  %348 = add i64 %347, %344
  store i64 %348, i64* %346, align 8
  store i32 0, i32* %4, align 4
  br label %349

349:                                              ; preds = %505, %11
  %350 = load i32, i32* %4, align 4
  %351 = icmp slt i32 %350, 64
  br i1 %351, label %352, label %508

352:                                              ; preds = %349
  %353 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %354 = load i32, i32* %3, align 4
  %355 = sext i32 %354 to i64
  %356 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %353, i64 %355
  %357 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %356, i32 0, i32 4
  %358 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %357, i32 0, i32 31
  %359 = load i32, i32* %4, align 4
  %360 = sext i32 %359 to i64
  %361 = getelementptr inbounds [64 x %struct.slab_stats], [64 x %struct.slab_stats]* %358, i64 0, i64 %360
  %362 = getelementptr inbounds %struct.slab_stats, %struct.slab_stats* %361, i32 0, i32 0
  %363 = load i64, i64* %362, align 8
  %364 = load %struct.thread_stats*, %struct.thread_stats** %2, align 8
  %365 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %364, i32 0, i32 31
  %366 = load i32, i32* %4, align 4
  %367 = sext i32 %366 to i64
  %368 = getelementptr inbounds [64 x %struct.slab_stats], [64 x %struct.slab_stats]* %365, i64 0, i64 %367
  %369 = getelementptr inbounds %struct.slab_stats, %struct.slab_stats* %368, i32 0, i32 0
  %370 = load i64, i64* %369, align 8
  %371 = add i64 %370, %363
  store i64 %371, i64* %369, align 8
  %372 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %373 = load i32, i32* %3, align 4
  %374 = sext i32 %373 to i64
  %375 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %372, i64 %374
  %376 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %375, i32 0, i32 4
  %377 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %376, i32 0, i32 31
  %378 = load i32, i32* %4, align 4
  %379 = sext i32 %378 to i64
  %380 = getelementptr inbounds [64 x %struct.slab_stats], [64 x %struct.slab_stats]* %377, i64 0, i64 %379
  %381 = getelementptr inbounds %struct.slab_stats, %struct.slab_stats* %380, i32 0, i32 1
  %382 = load i64, i64* %381, align 8
  %383 = load %struct.thread_stats*, %struct.thread_stats** %2, align 8
  %384 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %383, i32 0, i32 31
  %385 = load i32, i32* %4, align 4
  %386 = sext i32 %385 to i64
  %387 = getelementptr inbounds [64 x %struct.slab_stats], [64 x %struct.slab_stats]* %384, i64 0, i64 %386
  %388 = getelementptr inbounds %struct.slab_stats, %struct.slab_stats* %387, i32 0, i32 1
  %389 = load i64, i64* %388, align 8
  %390 = add i64 %389, %382
  store i64 %390, i64* %388, align 8
  %391 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %392 = load i32, i32* %3, align 4
  %393 = sext i32 %392 to i64
  %394 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %391, i64 %393
  %395 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %394, i32 0, i32 4
  %396 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %395, i32 0, i32 31
  %397 = load i32, i32* %4, align 4
  %398 = sext i32 %397 to i64
  %399 = getelementptr inbounds [64 x %struct.slab_stats], [64 x %struct.slab_stats]* %396, i64 0, i64 %398
  %400 = getelementptr inbounds %struct.slab_stats, %struct.slab_stats* %399, i32 0, i32 2
  %401 = load i64, i64* %400, align 8
  %402 = load %struct.thread_stats*, %struct.thread_stats** %2, align 8
  %403 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %402, i32 0, i32 31
  %404 = load i32, i32* %4, align 4
  %405 = sext i32 %404 to i64
  %406 = getelementptr inbounds [64 x %struct.slab_stats], [64 x %struct.slab_stats]* %403, i64 0, i64 %405
  %407 = getelementptr inbounds %struct.slab_stats, %struct.slab_stats* %406, i32 0, i32 2
  %408 = load i64, i64* %407, align 8
  %409 = add i64 %408, %401
  store i64 %409, i64* %407, align 8
  %410 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %411 = load i32, i32* %3, align 4
  %412 = sext i32 %411 to i64
  %413 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %410, i64 %412
  %414 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %413, i32 0, i32 4
  %415 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %414, i32 0, i32 31
  %416 = load i32, i32* %4, align 4
  %417 = sext i32 %416 to i64
  %418 = getelementptr inbounds [64 x %struct.slab_stats], [64 x %struct.slab_stats]* %415, i64 0, i64 %417
  %419 = getelementptr inbounds %struct.slab_stats, %struct.slab_stats* %418, i32 0, i32 3
  %420 = load i64, i64* %419, align 8
  %421 = load %struct.thread_stats*, %struct.thread_stats** %2, align 8
  %422 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %421, i32 0, i32 31
  %423 = load i32, i32* %4, align 4
  %424 = sext i32 %423 to i64
  %425 = getelementptr inbounds [64 x %struct.slab_stats], [64 x %struct.slab_stats]* %422, i64 0, i64 %424
  %426 = getelementptr inbounds %struct.slab_stats, %struct.slab_stats* %425, i32 0, i32 3
  %427 = load i64, i64* %426, align 8
  %428 = add i64 %427, %420
  store i64 %428, i64* %426, align 8
  %429 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %430 = load i32, i32* %3, align 4
  %431 = sext i32 %430 to i64
  %432 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %429, i64 %431
  %433 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %432, i32 0, i32 4
  %434 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %433, i32 0, i32 31
  %435 = load i32, i32* %4, align 4
  %436 = sext i32 %435 to i64
  %437 = getelementptr inbounds [64 x %struct.slab_stats], [64 x %struct.slab_stats]* %434, i64 0, i64 %436
  %438 = getelementptr inbounds %struct.slab_stats, %struct.slab_stats* %437, i32 0, i32 4
  %439 = load i64, i64* %438, align 8
  %440 = load %struct.thread_stats*, %struct.thread_stats** %2, align 8
  %441 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %440, i32 0, i32 31
  %442 = load i32, i32* %4, align 4
  %443 = sext i32 %442 to i64
  %444 = getelementptr inbounds [64 x %struct.slab_stats], [64 x %struct.slab_stats]* %441, i64 0, i64 %443
  %445 = getelementptr inbounds %struct.slab_stats, %struct.slab_stats* %444, i32 0, i32 4
  %446 = load i64, i64* %445, align 8
  %447 = add i64 %446, %439
  store i64 %447, i64* %445, align 8
  %448 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %449 = load i32, i32* %3, align 4
  %450 = sext i32 %449 to i64
  %451 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %448, i64 %450
  %452 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %451, i32 0, i32 4
  %453 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %452, i32 0, i32 31
  %454 = load i32, i32* %4, align 4
  %455 = sext i32 %454 to i64
  %456 = getelementptr inbounds [64 x %struct.slab_stats], [64 x %struct.slab_stats]* %453, i64 0, i64 %455
  %457 = getelementptr inbounds %struct.slab_stats, %struct.slab_stats* %456, i32 0, i32 5
  %458 = load i64, i64* %457, align 8
  %459 = load %struct.thread_stats*, %struct.thread_stats** %2, align 8
  %460 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %459, i32 0, i32 31
  %461 = load i32, i32* %4, align 4
  %462 = sext i32 %461 to i64
  %463 = getelementptr inbounds [64 x %struct.slab_stats], [64 x %struct.slab_stats]* %460, i64 0, i64 %462
  %464 = getelementptr inbounds %struct.slab_stats, %struct.slab_stats* %463, i32 0, i32 5
  %465 = load i64, i64* %464, align 8
  %466 = add i64 %465, %458
  store i64 %466, i64* %464, align 8
  %467 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %468 = load i32, i32* %3, align 4
  %469 = sext i32 %468 to i64
  %470 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %467, i64 %469
  %471 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %470, i32 0, i32 4
  %472 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %471, i32 0, i32 31
  %473 = load i32, i32* %4, align 4
  %474 = sext i32 %473 to i64
  %475 = getelementptr inbounds [64 x %struct.slab_stats], [64 x %struct.slab_stats]* %472, i64 0, i64 %474
  %476 = getelementptr inbounds %struct.slab_stats, %struct.slab_stats* %475, i32 0, i32 6
  %477 = load i64, i64* %476, align 8
  %478 = load %struct.thread_stats*, %struct.thread_stats** %2, align 8
  %479 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %478, i32 0, i32 31
  %480 = load i32, i32* %4, align 4
  %481 = sext i32 %480 to i64
  %482 = getelementptr inbounds [64 x %struct.slab_stats], [64 x %struct.slab_stats]* %479, i64 0, i64 %481
  %483 = getelementptr inbounds %struct.slab_stats, %struct.slab_stats* %482, i32 0, i32 6
  %484 = load i64, i64* %483, align 8
  %485 = add i64 %484, %477
  store i64 %485, i64* %483, align 8
  %486 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %487 = load i32, i32* %3, align 4
  %488 = sext i32 %487 to i64
  %489 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %486, i64 %488
  %490 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %489, i32 0, i32 4
  %491 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %490, i32 0, i32 31
  %492 = load i32, i32* %4, align 4
  %493 = sext i32 %492 to i64
  %494 = getelementptr inbounds [64 x %struct.slab_stats], [64 x %struct.slab_stats]* %491, i64 0, i64 %493
  %495 = getelementptr inbounds %struct.slab_stats, %struct.slab_stats* %494, i32 0, i32 7
  %496 = load i64, i64* %495, align 8
  %497 = load %struct.thread_stats*, %struct.thread_stats** %2, align 8
  %498 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %497, i32 0, i32 31
  %499 = load i32, i32* %4, align 4
  %500 = sext i32 %499 to i64
  %501 = getelementptr inbounds [64 x %struct.slab_stats], [64 x %struct.slab_stats]* %498, i64 0, i64 %500
  %502 = getelementptr inbounds %struct.slab_stats, %struct.slab_stats* %501, i32 0, i32 7
  %503 = load i64, i64* %502, align 8
  %504 = add i64 %503, %496
  store i64 %504, i64* %502, align 8
  br label %505

505:                                              ; preds = %352
  %506 = load i32, i32* %4, align 4
  %507 = add nsw i32 %506, 1
  store i32 %507, i32* %4, align 4
  br label %349, !llvm.loop !100

508:                                              ; preds = %349
  store i32 0, i32* %4, align 4
  br label %509

509:                                              ; preds = %549, %508
  %510 = load i32, i32* %4, align 4
  %511 = icmp slt i32 %510, 256
  br i1 %511, label %512, label %552

512:                                              ; preds = %509
  %513 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %514 = load i32, i32* %3, align 4
  %515 = sext i32 %514 to i64
  %516 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %513, i64 %515
  %517 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %516, i32 0, i32 4
  %518 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %517, i32 0, i32 32
  %519 = load i32, i32* %4, align 4
  %520 = sext i32 %519 to i64
  %521 = getelementptr inbounds [256 x i64], [256 x i64]* %518, i64 0, i64 %520
  %522 = load i64, i64* %521, align 8
  %523 = load %struct.thread_stats*, %struct.thread_stats** %2, align 8
  %524 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %523, i32 0, i32 32
  %525 = load i32, i32* %4, align 4
  %526 = sext i32 %525 to i64
  %527 = getelementptr inbounds [256 x i64], [256 x i64]* %524, i64 0, i64 %526
  %528 = load i64, i64* %527, align 8
  %529 = add i64 %528, %522
  store i64 %529, i64* %527, align 8
  %530 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %531 = load i32, i32* %3, align 4
  %532 = sext i32 %531 to i64
  %533 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %530, i64 %532
  %534 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %533, i32 0, i32 4
  %535 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %534, i32 0, i32 32
  %536 = load i32, i32* %4, align 4
  %537 = sext i32 %536 to i64
  %538 = getelementptr inbounds [256 x i64], [256 x i64]* %535, i64 0, i64 %537
  %539 = load i64, i64* %538, align 8
  %540 = load %struct.thread_stats*, %struct.thread_stats** %2, align 8
  %541 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %540, i32 0, i32 31
  %542 = load i32, i32* %4, align 4
  %543 = and i32 %542, -193
  %544 = sext i32 %543 to i64
  %545 = getelementptr inbounds [64 x %struct.slab_stats], [64 x %struct.slab_stats]* %541, i64 0, i64 %544
  %546 = getelementptr inbounds %struct.slab_stats, %struct.slab_stats* %545, i32 0, i32 1
  %547 = load i64, i64* %546, align 8
  %548 = add i64 %547, %539
  store i64 %548, i64* %546, align 8
  br label %549

549:                                              ; preds = %512
  %550 = load i32, i32* %4, align 4
  %551 = add nsw i32 %550, 1
  store i32 %551, i32* %4, align 4
  br label %509, !llvm.loop !101

552:                                              ; preds = %509
  %553 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %554 = load i32, i32* %3, align 4
  %555 = sext i32 %554 to i64
  %556 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %553, i64 %555
  %557 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %556, i32 0, i32 7
  %558 = load %struct.cache_t*, %struct.cache_t** %557, align 8
  %559 = getelementptr inbounds %struct.cache_t, %struct.cache_t* %558, i32 0, i32 5
  %560 = load i32, i32* %559, align 4
  %561 = sext i32 %560 to i64
  %562 = load %struct.thread_stats*, %struct.thread_stats** %2, align 8
  %563 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %562, i32 0, i32 33
  %564 = load i64, i64* %563, align 8
  %565 = add i64 %564, %561
  store i64 %565, i64* %563, align 8
  %566 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %567 = load i32, i32* %3, align 4
  %568 = sext i32 %567 to i64
  %569 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %566, i64 %568
  %570 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %569, i32 0, i32 7
  %571 = load %struct.cache_t*, %struct.cache_t** %570, align 8
  %572 = getelementptr inbounds %struct.cache_t, %struct.cache_t* %571, i32 0, i32 5
  %573 = load i32, i32* %572, align 4
  %574 = mul nsw i32 %573, 16384
  %575 = sext i32 %574 to i64
  %576 = load %struct.thread_stats*, %struct.thread_stats** %2, align 8
  %577 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %576, i32 0, i32 34
  %578 = load i64, i64* %577, align 8
  %579 = add i64 %578, %575
  store i64 %579, i64* %577, align 8
  %580 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %581 = load i32, i32* %3, align 4
  %582 = sext i32 %581 to i64
  %583 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %580, i64 %582
  %584 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %583, i32 0, i32 7
  %585 = load %struct.cache_t*, %struct.cache_t** %584, align 8
  %586 = getelementptr inbounds %struct.cache_t, %struct.cache_t* %585, i32 0, i32 6
  %587 = load i32, i32* %586, align 8
  %588 = mul nsw i32 %587, 16384
  %589 = sext i32 %588 to i64
  %590 = load %struct.thread_stats*, %struct.thread_stats** %2, align 8
  %591 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %590, i32 0, i32 35
  %592 = load i64, i64* %591, align 8
  %593 = add i64 %592, %589
  store i64 %593, i64* %591, align 8
  %594 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %595 = load i32, i32* %3, align 4
  %596 = sext i32 %595 to i64
  %597 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %594, i64 %596
  %598 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %597, i32 0, i32 4
  %599 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %598, i32 0, i32 0
  %600 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %599) #14
  br label %601

601:                                              ; preds = %552
  %602 = load i32, i32* %3, align 4
  %603 = add nsw i32 %602, 1
  store i32 %603, i32* %3, align 4
  br label %7, !llvm.loop !102

604:                                              ; preds = %7
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @slab_stats_aggregate(%struct.thread_stats* %0, %struct.slab_stats* %1) #0 {
  %3 = alloca %struct.thread_stats*, align 8
  %4 = alloca %struct.slab_stats*, align 8
  %5 = alloca i32, align 4
  store %struct.thread_stats* %0, %struct.thread_stats** %3, align 8
  store %struct.slab_stats* %1, %struct.slab_stats** %4, align 8
  %6 = load %struct.slab_stats*, %struct.slab_stats** %4, align 8
  %7 = bitcast %struct.slab_stats* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 64, i1 false)
  store i32 0, i32* %5, align 4
  br label %8

8:                                                ; preds = %100, %2
  %9 = load i32, i32* %5, align 4
  %10 = icmp slt i32 %9, 64
  br i1 %10, label %11, label %103

11:                                               ; preds = %8
  %12 = load %struct.thread_stats*, %struct.thread_stats** %3, align 8
  %13 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %12, i32 0, i32 31
  %14 = load i32, i32* %5, align 4
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds [64 x %struct.slab_stats], [64 x %struct.slab_stats]* %13, i64 0, i64 %15
  %17 = getelementptr inbounds %struct.slab_stats, %struct.slab_stats* %16, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = load %struct.slab_stats*, %struct.slab_stats** %4, align 8
  %20 = getelementptr inbounds %struct.slab_stats, %struct.slab_stats* %19, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, %18
  store i64 %22, i64* %20, align 8
  %23 = load %struct.thread_stats*, %struct.thread_stats** %3, align 8
  %24 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %23, i32 0, i32 31
  %25 = load i32, i32* %5, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds [64 x %struct.slab_stats], [64 x %struct.slab_stats]* %24, i64 0, i64 %26
  %28 = getelementptr inbounds %struct.slab_stats, %struct.slab_stats* %27, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = load %struct.slab_stats*, %struct.slab_stats** %4, align 8
  %31 = getelementptr inbounds %struct.slab_stats, %struct.slab_stats* %30, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = add i64 %32, %29
  store i64 %33, i64* %31, align 8
  %34 = load %struct.thread_stats*, %struct.thread_stats** %3, align 8
  %35 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %34, i32 0, i32 31
  %36 = load i32, i32* %5, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds [64 x %struct.slab_stats], [64 x %struct.slab_stats]* %35, i64 0, i64 %37
  %39 = getelementptr inbounds %struct.slab_stats, %struct.slab_stats* %38, i32 0, i32 2
  %40 = load i64, i64* %39, align 8
  %41 = load %struct.slab_stats*, %struct.slab_stats** %4, align 8
  %42 = getelementptr inbounds %struct.slab_stats, %struct.slab_stats* %41, i32 0, i32 2
  %43 = load i64, i64* %42, align 8
  %44 = add i64 %43, %40
  store i64 %44, i64* %42, align 8
  %45 = load %struct.thread_stats*, %struct.thread_stats** %3, align 8
  %46 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %45, i32 0, i32 31
  %47 = load i32, i32* %5, align 4
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds [64 x %struct.slab_stats], [64 x %struct.slab_stats]* %46, i64 0, i64 %48
  %50 = getelementptr inbounds %struct.slab_stats, %struct.slab_stats* %49, i32 0, i32 3
  %51 = load i64, i64* %50, align 8
  %52 = load %struct.slab_stats*, %struct.slab_stats** %4, align 8
  %53 = getelementptr inbounds %struct.slab_stats, %struct.slab_stats* %52, i32 0, i32 3
  %54 = load i64, i64* %53, align 8
  %55 = add i64 %54, %51
  store i64 %55, i64* %53, align 8
  %56 = load %struct.thread_stats*, %struct.thread_stats** %3, align 8
  %57 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %56, i32 0, i32 31
  %58 = load i32, i32* %5, align 4
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds [64 x %struct.slab_stats], [64 x %struct.slab_stats]* %57, i64 0, i64 %59
  %61 = getelementptr inbounds %struct.slab_stats, %struct.slab_stats* %60, i32 0, i32 4
  %62 = load i64, i64* %61, align 8
  %63 = load %struct.slab_stats*, %struct.slab_stats** %4, align 8
  %64 = getelementptr inbounds %struct.slab_stats, %struct.slab_stats* %63, i32 0, i32 4
  %65 = load i64, i64* %64, align 8
  %66 = add i64 %65, %62
  store i64 %66, i64* %64, align 8
  %67 = load %struct.thread_stats*, %struct.thread_stats** %3, align 8
  %68 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %67, i32 0, i32 31
  %69 = load i32, i32* %5, align 4
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds [64 x %struct.slab_stats], [64 x %struct.slab_stats]* %68, i64 0, i64 %70
  %72 = getelementptr inbounds %struct.slab_stats, %struct.slab_stats* %71, i32 0, i32 5
  %73 = load i64, i64* %72, align 8
  %74 = load %struct.slab_stats*, %struct.slab_stats** %4, align 8
  %75 = getelementptr inbounds %struct.slab_stats, %struct.slab_stats* %74, i32 0, i32 5
  %76 = load i64, i64* %75, align 8
  %77 = add i64 %76, %73
  store i64 %77, i64* %75, align 8
  %78 = load %struct.thread_stats*, %struct.thread_stats** %3, align 8
  %79 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %78, i32 0, i32 31
  %80 = load i32, i32* %5, align 4
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds [64 x %struct.slab_stats], [64 x %struct.slab_stats]* %79, i64 0, i64 %81
  %83 = getelementptr inbounds %struct.slab_stats, %struct.slab_stats* %82, i32 0, i32 6
  %84 = load i64, i64* %83, align 8
  %85 = load %struct.slab_stats*, %struct.slab_stats** %4, align 8
  %86 = getelementptr inbounds %struct.slab_stats, %struct.slab_stats* %85, i32 0, i32 6
  %87 = load i64, i64* %86, align 8
  %88 = add i64 %87, %84
  store i64 %88, i64* %86, align 8
  %89 = load %struct.thread_stats*, %struct.thread_stats** %3, align 8
  %90 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %89, i32 0, i32 31
  %91 = load i32, i32* %5, align 4
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds [64 x %struct.slab_stats], [64 x %struct.slab_stats]* %90, i64 0, i64 %92
  %94 = getelementptr inbounds %struct.slab_stats, %struct.slab_stats* %93, i32 0, i32 7
  %95 = load i64, i64* %94, align 8
  %96 = load %struct.slab_stats*, %struct.slab_stats** %4, align 8
  %97 = getelementptr inbounds %struct.slab_stats, %struct.slab_stats* %96, i32 0, i32 7
  %98 = load i64, i64* %97, align 8
  %99 = add i64 %98, %95
  store i64 %99, i64* %97, align 8
  br label %100

100:                                              ; preds = %11
  %101 = load i32, i32* %5, align 4
  %102 = add nsw i32 %101, 1
  store i32 %102, i32* %5, align 4
  br label %8, !llvm.loop !103

103:                                              ; preds = %8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @memcached_thread_init(i32 %0, i8* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i8* %1, i8** %4, align 8
  store i32 0, i32* %5, align 4
  br label %7

7:                                                ; preds = %15, %2
  %8 = load i32, i32* %5, align 4
  %9 = icmp slt i32 %8, 256
  br i1 %9, label %10, label %18

10:                                               ; preds = %7
  %11 = load i32, i32* %5, align 4
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds [256 x %union.pthread_mutex_t], [256 x %union.pthread_mutex_t]* @lru_locks, i64 0, i64 %12
  %14 = call i32 @pthread_mutex_init(%union.pthread_mutex_t* %13, %struct.in_addr* null) #14
  br label %15

15:                                               ; preds = %10
  %16 = load i32, i32* %5, align 4
  %17 = add nsw i32 %16, 1
  store i32 %17, i32* %5, align 4
  br label %7, !llvm.loop !104

18:                                               ; preds = %7
  %19 = call i32 @pthread_mutex_init(%union.pthread_mutex_t* @worker_hang_lock, %struct.in_addr* null) #14
  %20 = call i32 @pthread_mutex_init(%union.pthread_mutex_t* @init_lock, %struct.in_addr* null) #14
  %21 = call i32 @pthread_cond_init(%union.pthread_cond_t* @init_cond, %struct.in_addr* null) #14
  %22 = load i32, i32* %3, align 4
  %23 = icmp slt i32 %22, 3
  br i1 %23, label %24, label %25

24:                                               ; preds = %18
  store i32 10, i32* %6, align 4
  br label %46

25:                                               ; preds = %18
  %26 = load i32, i32* %3, align 4
  %27 = icmp slt i32 %26, 4
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  store i32 11, i32* %6, align 4
  br label %45

29:                                               ; preds = %25
  %30 = load i32, i32* %3, align 4
  %31 = icmp slt i32 %30, 5
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  store i32 12, i32* %6, align 4
  br label %44

33:                                               ; preds = %29
  %34 = load i32, i32* %3, align 4
  %35 = icmp sle i32 %34, 10
  br i1 %35, label %36, label %37

36:                                               ; preds = %33
  store i32 13, i32* %6, align 4
  br label %43

37:                                               ; preds = %33
  %38 = load i32, i32* %3, align 4
  %39 = icmp sle i32 %38, 20
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  store i32 14, i32* %6, align 4
  br label %42

41:                                               ; preds = %37
  store i32 15, i32* %6, align 4
  br label %42

42:                                               ; preds = %41, %40
  br label %43

43:                                               ; preds = %42, %36
  br label %44

44:                                               ; preds = %43, %32
  br label %45

45:                                               ; preds = %44, %28
  br label %46

46:                                               ; preds = %45, %24
  %47 = load i32, i32* %6, align 4
  %48 = load i32, i32* @hashpower, align 4
  %49 = icmp uge i32 %47, %48
  br i1 %49, label %50, label %59

50:                                               ; preds = %46
  %51 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %52 = load i32, i32* @hashpower, align 4
  %53 = load i32, i32* %6, align 4
  %54 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %51, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.14.748, i64 0, i64 0), i32 %52, i32 %53)
  %55 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %56 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %55, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.15.749, i64 0, i64 0))
  %57 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %58 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %57, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.16.750, i64 0, i64 0))
  call void @exit(i32 1) #17
  unreachable

59:                                               ; preds = %46
  %60 = load i32, i32* %6, align 4
  %61 = zext i32 %60 to i64
  %62 = shl i64 1, %61
  %63 = trunc i64 %62 to i32
  store i32 %63, i32* @item_lock_count, align 4
  %64 = load i32, i32* %6, align 4
  store i32 %64, i32* @item_lock_hashpower, align 4
  %65 = load i32, i32* @item_lock_count, align 4
  %66 = zext i32 %65 to i64
  %67 = call noalias i8* @calloc(i64 %66, i64 40) #14
  %68 = bitcast i8* %67 to %union.pthread_mutex_t*
  store %union.pthread_mutex_t* %68, %union.pthread_mutex_t** @item_locks, align 8
  %69 = load %union.pthread_mutex_t*, %union.pthread_mutex_t** @item_locks, align 8
  %70 = icmp ne %union.pthread_mutex_t* %69, null
  br i1 %70, label %72, label %71

71:                                               ; preds = %59
  call void @perror(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.17.751, i64 0, i64 0))
  call void @exit(i32 1) #17
  unreachable

72:                                               ; preds = %59
  store i32 0, i32* %5, align 4
  br label %73

73:                                               ; preds = %83, %72
  %74 = load i32, i32* %5, align 4
  %75 = load i32, i32* @item_lock_count, align 4
  %76 = icmp ult i32 %74, %75
  br i1 %76, label %77, label %86

77:                                               ; preds = %73
  %78 = load %union.pthread_mutex_t*, %union.pthread_mutex_t** @item_locks, align 8
  %79 = load i32, i32* %5, align 4
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds %union.pthread_mutex_t, %union.pthread_mutex_t* %78, i64 %80
  %82 = call i32 @pthread_mutex_init(%union.pthread_mutex_t* %81, %struct.in_addr* null) #14
  br label %83

83:                                               ; preds = %77
  %84 = load i32, i32* %5, align 4
  %85 = add nsw i32 %84, 1
  store i32 %85, i32* %5, align 4
  br label %73, !llvm.loop !105

86:                                               ; preds = %73
  %87 = load i32, i32* %3, align 4
  %88 = sext i32 %87 to i64
  %89 = call noalias i8* @calloc(i64 %88, i64 6808) #14
  %90 = bitcast i8* %89 to %struct.LIBEVENT_THREAD*
  store %struct.LIBEVENT_THREAD* %90, %struct.LIBEVENT_THREAD** @threads, align 8
  %91 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %92 = icmp ne %struct.LIBEVENT_THREAD* %91, null
  br i1 %92, label %94, label %93

93:                                               ; preds = %86
  call void @perror(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.18.752, i64 0, i64 0))
  call void @exit(i32 1) #17
  unreachable

94:                                               ; preds = %86
  store i32 0, i32* %5, align 4
  br label %95

95:                                               ; preds = %127, %94
  %96 = load i32, i32* %5, align 4
  %97 = load i32, i32* %3, align 4
  %98 = icmp slt i32 %96, %97
  br i1 %98, label %99, label %130

99:                                               ; preds = %95
  %100 = call i32 @eventfd(i32 0, i32 2048) #14
  %101 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %102 = load i32, i32* %5, align 4
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %101, i64 %103
  %105 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %104, i32 0, i32 3
  store i32 %100, i32* %105, align 8
  %106 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %107 = load i32, i32* %5, align 4
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %106, i64 %108
  %110 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %109, i32 0, i32 3
  %111 = load i32, i32* %110, align 8
  %112 = icmp eq i32 %111, -1
  br i1 %112, label %113, label %114

113:                                              ; preds = %99
  call void @perror(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.19.753, i64 0, i64 0))
  call void @exit(i32 1) #17
  unreachable

114:                                              ; preds = %99
  %115 = load i8*, i8** %4, align 8
  %116 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %117 = load i32, i32* %5, align 4
  %118 = sext i32 %117 to i64
  %119 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %116, i64 %118
  %120 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %119, i32 0, i32 10
  store i8* %115, i8** %120, align 8
  %121 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %122 = load i32, i32* %5, align 4
  %123 = sext i32 %122 to i64
  %124 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %121, i64 %123
  call void @setup_thread(%struct.LIBEVENT_THREAD* %124)
  %125 = load i32, i32* getelementptr inbounds (%struct.stats_state, %struct.stats_state* @stats_state, i32 0, i32 5), align 4
  %126 = add i32 %125, 5
  store i32 %126, i32* getelementptr inbounds (%struct.stats_state, %struct.stats_state* @stats_state, i32 0, i32 5), align 4
  br label %127

127:                                              ; preds = %114
  %128 = load i32, i32* %5, align 4
  %129 = add nsw i32 %128, 1
  store i32 %129, i32* %5, align 4
  br label %95, !llvm.loop !106

130:                                              ; preds = %95
  store i32 0, i32* %5, align 4
  br label %131

131:                                              ; preds = %141, %130
  %132 = load i32, i32* %5, align 4
  %133 = load i32, i32* %3, align 4
  %134 = icmp slt i32 %132, %133
  br i1 %134, label %135, label %144

135:                                              ; preds = %131
  %136 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8
  %137 = load i32, i32* %5, align 4
  %138 = sext i32 %137 to i64
  %139 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %136, i64 %138
  %140 = bitcast %struct.LIBEVENT_THREAD* %139 to i8*
  call void @create_worker(i8* (i8*)* @worker_libevent, i8* %140)
  br label %141

141:                                              ; preds = %135
  %142 = load i32, i32* %5, align 4
  %143 = add nsw i32 %142, 1
  store i32 %143, i32* %5, align 4
  br label %131, !llvm.loop !107

144:                                              ; preds = %131
  %145 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @init_lock) #14
  %146 = load i32, i32* %3, align 4
  call void @wait_for_thread_registration(i32 %146)
  %147 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @init_lock) #14
  ret void
}

; Function Attrs: nounwind
declare dso_local i32 @pthread_cond_init(%union.pthread_cond_t*, %struct.in_addr*) #2

; Function Attrs: nounwind
declare dso_local i32 @eventfd(i32, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @setup_thread(%struct.LIBEVENT_THREAD* %0) #0 {
  %2 = alloca %struct.LIBEVENT_THREAD*, align 8
  %3 = alloca %struct.event_config*, align 8
  %4 = alloca i32, align 4
  store %struct.LIBEVENT_THREAD* %0, %struct.LIBEVENT_THREAD** %2, align 8
  %5 = call %struct.event_config* @event_config_new()
  store %struct.event_config* %5, %struct.event_config** %3, align 8
  %6 = load %struct.event_config*, %struct.event_config** %3, align 8
  %7 = call i32 @event_config_set_flag(%struct.event_config* %6, i32 1)
  %8 = load %struct.event_config*, %struct.event_config** %3, align 8
  %9 = call %struct.event_base* @event_base_new_with_config(%struct.event_config* %8)
  %10 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %2, align 8
  %11 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %10, i32 0, i32 1
  store %struct.event_base* %9, %struct.event_base** %11, align 8
  %12 = load %struct.event_config*, %struct.event_config** %3, align 8
  call void @event_config_free(%struct.event_config* %12)
  %13 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %2, align 8
  %14 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %13, i32 0, i32 1
  %15 = load %struct.event_base*, %struct.event_base** %14, align 8
  %16 = icmp ne %struct.event_base* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %19 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %18, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.21.755, i64 0, i64 0))
  call void @exit(i32 1) #17
  unreachable

20:                                               ; preds = %1
  %21 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %2, align 8
  %22 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %21, i32 0, i32 2
  %23 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %2, align 8
  %24 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %23, i32 0, i32 3
  %25 = load i32, i32* %24, align 8
  %26 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %2, align 8
  %27 = bitcast %struct.LIBEVENT_THREAD* %26 to i8*
  call void @event_set(%struct.event* %22, i32 %25, i16 signext 18, void (i32, i16, i8*)* @thread_libevent_process, i8* %27)
  %28 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %2, align 8
  %29 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %28, i32 0, i32 1
  %30 = load %struct.event_base*, %struct.event_base** %29, align 8
  %31 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %2, align 8
  %32 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %31, i32 0, i32 2
  %33 = call i32 @event_base_set(%struct.event_base* %30, %struct.event* %32)
  %34 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %2, align 8
  %35 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %34, i32 0, i32 2
  %36 = call i32 @event_add(%struct.event* %35, %struct.timeval* null)
  %37 = icmp eq i32 %36, -1
  br i1 %37, label %38, label %41

38:                                               ; preds = %20
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %40 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %39, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.22.756, i64 0, i64 0))
  call void @exit(i32 1) #17
  unreachable

41:                                               ; preds = %20
  %42 = call noalias i8* @malloc(i64 64) #14
  %43 = bitcast i8* %42 to %struct.conn_queue*
  %44 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %2, align 8
  %45 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %44, i32 0, i32 6
  store %struct.conn_queue* %43, %struct.conn_queue** %45, align 8
  %46 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %2, align 8
  %47 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %46, i32 0, i32 6
  %48 = load %struct.conn_queue*, %struct.conn_queue** %47, align 8
  %49 = icmp eq %struct.conn_queue* %48, null
  br i1 %49, label %50, label %51

50:                                               ; preds = %41
  call void @perror(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.23.757, i64 0, i64 0))
  call void @exit(i32 1) #17
  unreachable

51:                                               ; preds = %41
  %52 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %2, align 8
  %53 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %52, i32 0, i32 6
  %54 = load %struct.conn_queue*, %struct.conn_queue** %53, align 8
  call void @cq_init(%struct.conn_queue* %54)
  %55 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %2, align 8
  %56 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %55, i32 0, i32 4
  %57 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %56, i32 0, i32 0
  %58 = call i32 @pthread_mutex_init(%union.pthread_mutex_t* %57, %struct.in_addr* null) #14
  %59 = icmp ne i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %51
  call void @perror(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.24.758, i64 0, i64 0))
  call void @exit(i32 1) #17
  unreachable

61:                                               ; preds = %51
  %62 = call %struct.cache_t* @cache_create(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25.759, i64 0, i64 0), i64 16384, i64 8)
  %63 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %2, align 8
  %64 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %63, i32 0, i32 7
  store %struct.cache_t* %62, %struct.cache_t** %64, align 8
  %65 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %2, align 8
  %66 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %65, i32 0, i32 7
  %67 = load %struct.cache_t*, %struct.cache_t** %66, align 8
  %68 = icmp eq %struct.cache_t* %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %61
  %70 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %71 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %70, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.26.760, i64 0, i64 0))
  call void @exit(i32 1) #17
  unreachable

72:                                               ; preds = %61
  %73 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 53), align 8
  %74 = icmp ne i32 %73, 0
  br i1 %74, label %75, label %90

75:                                               ; preds = %72
  %76 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 53), align 8
  %77 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 14), align 4
  %78 = udiv i32 %76, %77
  store i32 %78, i32* %4, align 4
  %79 = load i32, i32* %4, align 4
  %80 = icmp slt i32 %79, 16384
  br i1 %80, label %81, label %82

81:                                               ; preds = %75
  store i32 1, i32* %4, align 4
  br label %85

82:                                               ; preds = %75
  %83 = load i32, i32* %4, align 4
  %84 = sdiv i32 %83, 16384
  store i32 %84, i32* %4, align 4
  br label %85

85:                                               ; preds = %82, %81
  %86 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %2, align 8
  %87 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %86, i32 0, i32 7
  %88 = load %struct.cache_t*, %struct.cache_t** %87, align 8
  %89 = load i32, i32* %4, align 4
  call void @cache_set_limit(%struct.cache_t* %88, i32 %89)
  br label %90

90:                                               ; preds = %85, %72
  %91 = call %struct.cache_t* @cache_create(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27.761, i64 0, i64 0), i64 152, i64 8)
  %92 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %2, align 8
  %93 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %92, i32 0, i32 9
  store %struct.cache_t* %91, %struct.cache_t** %93, align 8
  %94 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %2, align 8
  %95 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %94, i32 0, i32 9
  %96 = load %struct.cache_t*, %struct.cache_t** %95, align 8
  %97 = icmp eq %struct.cache_t* %96, null
  br i1 %97, label %98, label %101

98:                                               ; preds = %90
  %99 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %100 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %99, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.28.762, i64 0, i64 0))
  call void @exit(i32 1) #17
  unreachable

101:                                              ; preds = %90
  %102 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %2, align 8
  %103 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %102, i32 0, i32 10
  %104 = load i8*, i8** %103, align 8
  %105 = icmp ne i8* %104, null
  br i1 %105, label %106, label %111

106:                                              ; preds = %101
  %107 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %2, align 8
  %108 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %2, align 8
  %109 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %108, i32 0, i32 10
  %110 = load i8*, i8** %109, align 8
  call void @thread_io_queue_add(%struct.LIBEVENT_THREAD* %107, i32 1, i8* %110, void (%struct.io_queue_s*)* @storage_submit_cb, void (%struct.io_queue_s*)* @storage_complete_cb, void (%struct._io_pending_t*)* null, void (%struct._io_pending_t*)* @storage_finalize_cb)
  br label %111

111:                                              ; preds = %106, %101
  %112 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %2, align 8
  call void @thread_io_queue_add(%struct.LIBEVENT_THREAD* %112, i32 0, i8* null, void (%struct.io_queue_s*)* null, void (%struct.io_queue_s*)* null, void (%struct._io_pending_t*)* null, void (%struct._io_pending_t*)* null)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @worker_libevent(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.LIBEVENT_THREAD*, align 8
  store i8* %0, i8** %2, align 8
  %4 = load i8*, i8** %2, align 8
  %5 = bitcast i8* %4 to %struct.LIBEVENT_THREAD*
  store %struct.LIBEVENT_THREAD* %5, %struct.LIBEVENT_THREAD** %3, align 8
  %6 = call %struct._logger* @logger_create()
  %7 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %3, align 8
  %8 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %7, i32 0, i32 11
  store %struct._logger* %6, %struct._logger** %8, align 8
  %9 = call i8* @item_lru_bump_buf_create()
  %10 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %3, align 8
  %11 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %10, i32 0, i32 12
  store i8* %9, i8** %11, align 8
  %12 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %3, align 8
  %13 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %12, i32 0, i32 11
  %14 = load %struct._logger*, %struct._logger** %13, align 8
  %15 = icmp eq %struct._logger* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %1
  %17 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %3, align 8
  %18 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %17, i32 0, i32 12
  %19 = load i8*, i8** %18, align 8
  %20 = icmp eq i8* %19, null
  br i1 %20, label %21, label %22

21:                                               ; preds = %16, %1
  call void @abort() #17
  unreachable

22:                                               ; preds = %16
  %23 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 54), align 4
  %24 = trunc i8 %23 to i1
  br i1 %24, label %25, label %26

25:                                               ; preds = %22
  br label %26

26:                                               ; preds = %25, %22
  call void @register_thread_initialized()
  %27 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %3, align 8
  %28 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %27, i32 0, i32 1
  %29 = load %struct.event_base*, %struct.event_base** %28, align 8
  %30 = call i32 @event_base_loop(%struct.event_base* %29, i32 0)
  call void @register_thread_initialized()
  %31 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %3, align 8
  %32 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %31, i32 0, i32 1
  %33 = load %struct.event_base*, %struct.event_base** %32, align 8
  call void @event_base_free(%struct.event_base* %33)
  ret i8* null
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @create_worker(i8* (i8*)* %0, i8* %1) #0 {
  %3 = alloca i8* (i8*)*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %union.pthread_attr_t, align 8
  %6 = alloca i32, align 4
  store i8* (i8*)* %0, i8* (i8*)** %3, align 8
  store i8* %1, i8** %4, align 8
  %7 = call i32 @pthread_attr_init(%union.pthread_attr_t* %5) #14
  %8 = load i8*, i8** %4, align 8
  %9 = bitcast i8* %8 to %struct.LIBEVENT_THREAD*
  %10 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %9, i32 0, i32 0
  %11 = load i8* (i8*)*, i8* (i8*)** %3, align 8
  %12 = load i8*, i8** %4, align 8
  %13 = call i32 @pthread_create(i64* %10, %union.pthread_attr_t* %5, i8* (i8*)* %11, i8* %12) #14
  store i32 %13, i32* %6, align 4
  %14 = icmp ne i32 %13, 0
  br i1 %14, label %15, label %20

15:                                               ; preds = %2
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %17 = load i32, i32* %6, align 4
  %18 = call i8* @strerror(i32 %17) #14
  %19 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.34.754, i64 0, i64 0), i8* %18)
  call void @exit(i32 1) #17
  unreachable

20:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind
declare dso_local i32 @pthread_attr_init(%union.pthread_attr_t*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @register_thread_initialized() #0 {
  %1 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @init_lock) #14
  %2 = load i32, i32* @init_count, align 4
  %3 = add nsw i32 %2, 1
  store i32 %3, i32* @init_count, align 4
  %4 = call i32 @pthread_cond_signal(%union.pthread_cond_t* @init_cond) #14
  %5 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @init_lock) #14
  %6 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @worker_hang_lock) #14
  %7 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @worker_hang_lock) #14
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @thread_libevent_process(i32 %0, i16 signext %1, i8* %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i16, align 2
  %6 = alloca i8*, align 8
  %7 = alloca %struct.LIBEVENT_THREAD*, align 8
  %8 = alloca %struct.conn_queue_item*, align 8
  %9 = alloca %struct.conn*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  store i16 %1, i16* %5, align 2
  store i8* %2, i8** %6, align 8
  %12 = load i8*, i8** %6, align 8
  %13 = bitcast i8* %12 to %struct.LIBEVENT_THREAD*
  store %struct.LIBEVENT_THREAD* %13, %struct.LIBEVENT_THREAD** %7, align 8
  store i64 0, i64* %10, align 8
  %14 = load i32, i32* %4, align 4
  %15 = bitcast i64* %10 to i8*
  %16 = call i64 @read(i32 %14, i8* %15, i64 8)
  %17 = icmp ne i64 %16, 8
  br i1 %17, label %18, label %25

18:                                               ; preds = %3
  %19 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %20 = icmp sgt i32 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %18
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %23 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %22, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.29.765, i64 0, i64 0))
  br label %24

24:                                               ; preds = %21, %18
  br label %131

25:                                               ; preds = %3
  store i32 0, i32* %11, align 4
  br label %26

26:                                               ; preds = %128, %25
  %27 = load i32, i32* %11, align 4
  %28 = sext i32 %27 to i64
  %29 = load i64, i64* %10, align 8
  %30 = icmp ult i64 %28, %29
  br i1 %30, label %31, label %131

31:                                               ; preds = %26
  %32 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %7, align 8
  %33 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %32, i32 0, i32 6
  %34 = load %struct.conn_queue*, %struct.conn_queue** %33, align 8
  %35 = call %struct.conn_queue_item* @cq_pop(%struct.conn_queue* %34)
  store %struct.conn_queue_item* %35, %struct.conn_queue_item** %8, align 8
  %36 = load %struct.conn_queue_item*, %struct.conn_queue_item** %8, align 8
  %37 = icmp eq %struct.conn_queue_item* %36, null
  br i1 %37, label %38, label %39

38:                                               ; preds = %31
  br label %131

39:                                               ; preds = %31
  %40 = load %struct.conn_queue_item*, %struct.conn_queue_item** %8, align 8
  %41 = getelementptr inbounds %struct.conn_queue_item, %struct.conn_queue_item* %40, i32 0, i32 5
  %42 = load i32, i32* %41, align 4
  switch i32 %42, label %123 [
    i32 0, label %43
    i32 1, label %97
    i32 2, label %98
    i32 3, label %106
    i32 4, label %114
    i32 5, label %119
  ]

43:                                               ; preds = %39
  %44 = load %struct.conn_queue_item*, %struct.conn_queue_item** %8, align 8
  %45 = getelementptr inbounds %struct.conn_queue_item, %struct.conn_queue_item* %44, i32 0, i32 0
  %46 = load i32, i32* %45, align 8
  %47 = load %struct.conn_queue_item*, %struct.conn_queue_item** %8, align 8
  %48 = getelementptr inbounds %struct.conn_queue_item, %struct.conn_queue_item* %47, i32 0, i32 1
  %49 = load i32, i32* %48, align 4
  %50 = load %struct.conn_queue_item*, %struct.conn_queue_item** %8, align 8
  %51 = getelementptr inbounds %struct.conn_queue_item, %struct.conn_queue_item* %50, i32 0, i32 2
  %52 = load i32, i32* %51, align 8
  %53 = load %struct.conn_queue_item*, %struct.conn_queue_item** %8, align 8
  %54 = getelementptr inbounds %struct.conn_queue_item, %struct.conn_queue_item* %53, i32 0, i32 3
  %55 = load i32, i32* %54, align 4
  %56 = load %struct.conn_queue_item*, %struct.conn_queue_item** %8, align 8
  %57 = getelementptr inbounds %struct.conn_queue_item, %struct.conn_queue_item* %56, i32 0, i32 4
  %58 = load i32, i32* %57, align 8
  %59 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %7, align 8
  %60 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %59, i32 0, i32 1
  %61 = load %struct.event_base*, %struct.event_base** %60, align 8
  %62 = load %struct.conn_queue_item*, %struct.conn_queue_item** %8, align 8
  %63 = getelementptr inbounds %struct.conn_queue_item, %struct.conn_queue_item* %62, i32 0, i32 7
  %64 = load i8*, i8** %63, align 8
  %65 = call %struct.conn* @conn_new(i32 %46, i32 %49, i32 %52, i32 %55, i32 %58, %struct.event_base* %61, i8* %64)
  store %struct.conn* %65, %struct.conn** %9, align 8
  %66 = load %struct.conn*, %struct.conn** %9, align 8
  %67 = icmp eq %struct.conn* %66, null
  br i1 %67, label %68, label %91

68:                                               ; preds = %43
  %69 = load %struct.conn_queue_item*, %struct.conn_queue_item** %8, align 8
  %70 = getelementptr inbounds %struct.conn_queue_item, %struct.conn_queue_item* %69, i32 0, i32 4
  %71 = load i32, i32* %70, align 8
  %72 = icmp eq i32 %71, 2
  br i1 %72, label %73, label %76

73:                                               ; preds = %68
  %74 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %75 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %74, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.30.766, i64 0, i64 0))
  call void @exit(i32 1) #17
  unreachable

76:                                               ; preds = %68
  %77 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %78 = icmp sgt i32 %77, 0
  br i1 %78, label %79, label %85

79:                                               ; preds = %76
  %80 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %81 = load %struct.conn_queue_item*, %struct.conn_queue_item** %8, align 8
  %82 = getelementptr inbounds %struct.conn_queue_item, %struct.conn_queue_item* %81, i32 0, i32 0
  %83 = load i32, i32* %82, align 8
  %84 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %80, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.31.767, i64 0, i64 0), i32 %83)
  br label %85

85:                                               ; preds = %79, %76
  %86 = load %struct.conn_queue_item*, %struct.conn_queue_item** %8, align 8
  %87 = getelementptr inbounds %struct.conn_queue_item, %struct.conn_queue_item* %86, i32 0, i32 0
  %88 = load i32, i32* %87, align 8
  %89 = call i32 @close(i32 %88)
  br label %90

90:                                               ; preds = %85
  br label %96

91:                                               ; preds = %43
  %92 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %7, align 8
  %93 = load %struct.conn*, %struct.conn** %9, align 8
  %94 = getelementptr inbounds %struct.conn, %struct.conn* %93, i32 0, i32 42
  store %struct.LIBEVENT_THREAD* %92, %struct.LIBEVENT_THREAD** %94, align 8
  %95 = load %struct.conn*, %struct.conn** %9, align 8
  call void @conn_io_queue_setup(%struct.conn* %95)
  br label %96

96:                                               ; preds = %91, %90
  br label %123

97:                                               ; preds = %39
  call void @register_thread_initialized()
  br label %123

98:                                               ; preds = %39
  %99 = load %struct.conn**, %struct.conn*** @conns, align 8
  %100 = load %struct.conn_queue_item*, %struct.conn_queue_item** %8, align 8
  %101 = getelementptr inbounds %struct.conn_queue_item, %struct.conn_queue_item* %100, i32 0, i32 0
  %102 = load i32, i32* %101, align 8
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds %struct.conn*, %struct.conn** %99, i64 %103
  %105 = load %struct.conn*, %struct.conn** %104, align 8
  call void @conn_close_idle(%struct.conn* %105)
  br label %123

106:                                              ; preds = %39
  %107 = load %struct.conn**, %struct.conn*** @conns, align 8
  %108 = load %struct.conn_queue_item*, %struct.conn_queue_item** %8, align 8
  %109 = getelementptr inbounds %struct.conn_queue_item, %struct.conn_queue_item* %108, i32 0, i32 0
  %110 = load i32, i32* %109, align 8
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds %struct.conn*, %struct.conn** %107, i64 %111
  %113 = load %struct.conn*, %struct.conn** %112, align 8
  call void @conn_worker_readd(%struct.conn* %113)
  br label %123

114:                                              ; preds = %39
  %115 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %7, align 8
  %116 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %115, i32 0, i32 1
  %117 = load %struct.event_base*, %struct.event_base** %116, align 8
  %118 = call i32 @event_base_loopexit(%struct.event_base* %117, %struct.timeval* null)
  br label %123

119:                                              ; preds = %39
  %120 = load %struct.conn_queue_item*, %struct.conn_queue_item** %8, align 8
  %121 = getelementptr inbounds %struct.conn_queue_item, %struct.conn_queue_item* %120, i32 0, i32 8
  %122 = load %struct._io_pending_t*, %struct._io_pending_t** %121, align 8
  call void @conn_io_queue_return(%struct._io_pending_t* %122)
  br label %123

123:                                              ; preds = %39, %119, %114, %106, %98, %97, %96
  %124 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %7, align 8
  %125 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %124, i32 0, i32 6
  %126 = load %struct.conn_queue*, %struct.conn_queue** %125, align 8
  %127 = load %struct.conn_queue_item*, %struct.conn_queue_item** %8, align 8
  call void @cqi_free(%struct.conn_queue* %126, %struct.conn_queue_item* %127)
  br label %128

128:                                              ; preds = %123
  %129 = load i32, i32* %11, align 4
  %130 = add nsw i32 %129, 1
  store i32 %130, i32* %11, align 4
  br label %26, !llvm.loop !108

131:                                              ; preds = %24, %38, %26
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @cq_init(%struct.conn_queue* %0) #0 {
  %2 = alloca %struct.conn_queue*, align 8
  store %struct.conn_queue* %0, %struct.conn_queue** %2, align 8
  %3 = load %struct.conn_queue*, %struct.conn_queue** %2, align 8
  %4 = getelementptr inbounds %struct.conn_queue, %struct.conn_queue* %3, i32 0, i32 1
  %5 = call i32 @pthread_mutex_init(%union.pthread_mutex_t* %4, %struct.in_addr* null) #14
  br label %6

6:                                                ; preds = %1
  %7 = load %struct.conn_queue*, %struct.conn_queue** %2, align 8
  %8 = getelementptr inbounds %struct.conn_queue, %struct.conn_queue* %7, i32 0, i32 0
  %9 = getelementptr inbounds %struct.conn_ev_head, %struct.conn_ev_head* %8, i32 0, i32 0
  store %struct.conn_queue_item* null, %struct.conn_queue_item** %9, align 8
  %10 = load %struct.conn_queue*, %struct.conn_queue** %2, align 8
  %11 = getelementptr inbounds %struct.conn_queue, %struct.conn_queue* %10, i32 0, i32 0
  %12 = getelementptr inbounds %struct.conn_ev_head, %struct.conn_ev_head* %11, i32 0, i32 0
  %13 = load %struct.conn_queue*, %struct.conn_queue** %2, align 8
  %14 = getelementptr inbounds %struct.conn_queue, %struct.conn_queue* %13, i32 0, i32 0
  %15 = getelementptr inbounds %struct.conn_ev_head, %struct.conn_ev_head* %14, i32 0, i32 1
  store %struct.conn_queue_item** %12, %struct.conn_queue_item*** %15, align 8
  br label %16

16:                                               ; preds = %6
  %17 = call %struct.cache_t* @cache_create(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.32.763, i64 0, i64 0), i64 56, i64 8)
  %18 = load %struct.conn_queue*, %struct.conn_queue** %2, align 8
  %19 = getelementptr inbounds %struct.conn_queue, %struct.conn_queue* %18, i32 0, i32 2
  store %struct.cache_t* %17, %struct.cache_t** %19, align 8
  %20 = load %struct.conn_queue*, %struct.conn_queue** %2, align 8
  %21 = getelementptr inbounds %struct.conn_queue, %struct.conn_queue* %20, i32 0, i32 2
  %22 = load %struct.cache_t*, %struct.cache_t** %21, align 8
  %23 = icmp eq %struct.cache_t* %22, null
  br i1 %23, label %24, label %27

24:                                               ; preds = %16
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %26 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %25, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.33.764, i64 0, i64 0))
  call void @exit(i32 1) #17
  unreachable

27:                                               ; preds = %16
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.conn_queue_item* @cq_pop(%struct.conn_queue* %0) #0 {
  %2 = alloca %struct.conn_queue*, align 8
  %3 = alloca %struct.conn_queue_item*, align 8
  store %struct.conn_queue* %0, %struct.conn_queue** %2, align 8
  %4 = load %struct.conn_queue*, %struct.conn_queue** %2, align 8
  %5 = getelementptr inbounds %struct.conn_queue, %struct.conn_queue* %4, i32 0, i32 1
  %6 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %5) #14
  %7 = load %struct.conn_queue*, %struct.conn_queue** %2, align 8
  %8 = getelementptr inbounds %struct.conn_queue, %struct.conn_queue* %7, i32 0, i32 0
  %9 = getelementptr inbounds %struct.conn_ev_head, %struct.conn_ev_head* %8, i32 0, i32 0
  %10 = load %struct.conn_queue_item*, %struct.conn_queue_item** %9, align 8
  store %struct.conn_queue_item* %10, %struct.conn_queue_item** %3, align 8
  %11 = load %struct.conn_queue_item*, %struct.conn_queue_item** %3, align 8
  %12 = icmp ne %struct.conn_queue_item* %11, null
  br i1 %12, label %13, label %35

13:                                               ; preds = %1
  br label %14

14:                                               ; preds = %13
  %15 = load %struct.conn_queue*, %struct.conn_queue** %2, align 8
  %16 = getelementptr inbounds %struct.conn_queue, %struct.conn_queue* %15, i32 0, i32 0
  %17 = getelementptr inbounds %struct.conn_ev_head, %struct.conn_ev_head* %16, i32 0, i32 0
  %18 = load %struct.conn_queue_item*, %struct.conn_queue_item** %17, align 8
  %19 = getelementptr inbounds %struct.conn_queue_item, %struct.conn_queue_item* %18, i32 0, i32 9
  %20 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %19, i32 0, i32 0
  %21 = load %struct.conn_queue_item*, %struct.conn_queue_item** %20, align 8
  %22 = load %struct.conn_queue*, %struct.conn_queue** %2, align 8
  %23 = getelementptr inbounds %struct.conn_queue, %struct.conn_queue* %22, i32 0, i32 0
  %24 = getelementptr inbounds %struct.conn_ev_head, %struct.conn_ev_head* %23, i32 0, i32 0
  store %struct.conn_queue_item* %21, %struct.conn_queue_item** %24, align 8
  %25 = icmp eq %struct.conn_queue_item* %21, null
  br i1 %25, label %26, label %33

26:                                               ; preds = %14
  %27 = load %struct.conn_queue*, %struct.conn_queue** %2, align 8
  %28 = getelementptr inbounds %struct.conn_queue, %struct.conn_queue* %27, i32 0, i32 0
  %29 = getelementptr inbounds %struct.conn_ev_head, %struct.conn_ev_head* %28, i32 0, i32 0
  %30 = load %struct.conn_queue*, %struct.conn_queue** %2, align 8
  %31 = getelementptr inbounds %struct.conn_queue, %struct.conn_queue* %30, i32 0, i32 0
  %32 = getelementptr inbounds %struct.conn_ev_head, %struct.conn_ev_head* %31, i32 0, i32 1
  store %struct.conn_queue_item** %29, %struct.conn_queue_item*** %32, align 8
  br label %33

33:                                               ; preds = %26, %14
  br label %34

34:                                               ; preds = %33
  br label %35

35:                                               ; preds = %34, %1
  %36 = load %struct.conn_queue*, %struct.conn_queue** %2, align 8
  %37 = getelementptr inbounds %struct.conn_queue, %struct.conn_queue* %36, i32 0, i32 1
  %38 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %37) #14
  %39 = load %struct.conn_queue_item*, %struct.conn_queue_item** %3, align 8
  ret %struct.conn_queue_item* %39
}

declare dso_local i32 @event_base_loopexit(%struct.event_base*, %struct.timeval*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @cqi_free(%struct.conn_queue* %0, %struct.conn_queue_item* %1) #0 {
  %3 = alloca %struct.conn_queue*, align 8
  %4 = alloca %struct.conn_queue_item*, align 8
  store %struct.conn_queue* %0, %struct.conn_queue** %3, align 8
  store %struct.conn_queue_item* %1, %struct.conn_queue_item** %4, align 8
  %5 = load %struct.conn_queue*, %struct.conn_queue** %3, align 8
  %6 = getelementptr inbounds %struct.conn_queue, %struct.conn_queue* %5, i32 0, i32 2
  %7 = load %struct.cache_t*, %struct.cache_t** %6, align 8
  %8 = load %struct.conn_queue_item*, %struct.conn_queue_item** %4, align 8
  %9 = bitcast %struct.conn_queue_item* %8 to i8*
  call void @cache_free(%struct.cache_t* %7, i8* %9)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @daemonize(i32 %0, i32 %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  store i32 %1, i32* %5, align 4
  %7 = call i32 @fork() #14
  switch i32 %7, label %10 [
    i32 -1, label %8
    i32 0, label %9
  ]

8:                                                ; preds = %2
  store i32 -1, i32* %3, align 4
  br label %54

9:                                                ; preds = %2
  br label %11

10:                                               ; preds = %2
  call void @_exit(i32 0) #18
  unreachable

11:                                               ; preds = %9
  %12 = call i32 @setsid() #14
  %13 = icmp eq i32 %12, -1
  br i1 %13, label %14, label %15

14:                                               ; preds = %11
  store i32 -1, i32* %3, align 4
  br label %54

15:                                               ; preds = %11
  %16 = load i32, i32* %4, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %23

18:                                               ; preds = %15
  %19 = call i32 @chdir(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.770, i64 0, i64 0)) #14
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %18
  call void @perror(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.771, i64 0, i64 0))
  store i32 -1, i32* %3, align 4
  br label %54

22:                                               ; preds = %18
  br label %23

23:                                               ; preds = %22, %15
  %24 = load i32, i32* %5, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %50

26:                                               ; preds = %23
  %27 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2.772, i64 0, i64 0), i32 2, i32 0)
  store i32 %27, i32* %6, align 4
  %28 = icmp ne i32 %27, -1
  br i1 %28, label %29, label %50

29:                                               ; preds = %26
  %30 = load i32, i32* %6, align 4
  %31 = call i32 @dup2(i32 %30, i32 0) #14
  %32 = icmp slt i32 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %29
  call void @perror(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3.773, i64 0, i64 0))
  br label %51

34:                                               ; preds = %29
  %35 = load i32, i32* %6, align 4
  %36 = call i32 @dup2(i32 %35, i32 1) #14
  %37 = icmp slt i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %34
  call void @perror(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4.774, i64 0, i64 0))
  br label %51

39:                                               ; preds = %34
  %40 = load i32, i32* %6, align 4
  %41 = call i32 @dup2(i32 %40, i32 2) #14
  %42 = icmp slt i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %39
  call void @perror(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5.775, i64 0, i64 0))
  br label %51

44:                                               ; preds = %39
  %45 = load i32, i32* %6, align 4
  %46 = call i32 @close(i32 %45)
  %47 = icmp slt i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %44
  call void @perror(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6.776, i64 0, i64 0))
  store i32 -1, i32* %3, align 4
  br label %54

49:                                               ; preds = %44
  br label %50

50:                                               ; preds = %49, %26, %23
  store i32 0, i32* %3, align 4
  br label %54

51:                                               ; preds = %43, %38, %33
  %52 = load i32, i32* %6, align 4
  %53 = call i32 @close(i32 %52)
  store i32 -1, i32* %3, align 4
  br label %54

54:                                               ; preds = %51, %50, %48, %21, %14, %8
  %55 = load i32, i32* %3, align 4
  ret i32 %55
}

; Function Attrs: nounwind
declare dso_local i32 @fork() #2

; Function Attrs: noreturn
declare dso_local void @_exit(i32) #13

; Function Attrs: nounwind
declare dso_local i32 @setsid() #2

; Function Attrs: nounwind
declare dso_local i32 @chdir(i8*) #2

; Function Attrs: nounwind
declare dso_local i32 @dup2(i32, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @stats_prefix_init(i8 signext %0) #0 {
  %2 = alloca i8, align 1
  store i8 %0, i8* %2, align 1
  %3 = load i8, i8* %2, align 1
  store i8 %3, i8* @prefix_delimiter, align 1
  call void @llvm.memset.p0i8.i64(i8* align 16 bitcast ([256 x %struct._prefix_stats*]* @prefix_stats to i8*), i8 0, i64 2048, i1 false)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @stats_prefix_clear() #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct._prefix_stats*, align 8
  %3 = alloca %struct._prefix_stats*, align 8
  store i32 0, i32* %1, align 4
  br label %4

4:                                                ; preds = %30, %0
  %5 = load i32, i32* %1, align 4
  %6 = icmp slt i32 %5, 256
  br i1 %6, label %7, label %33

7:                                                ; preds = %4
  %8 = load i32, i32* %1, align 4
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds [256 x %struct._prefix_stats*], [256 x %struct._prefix_stats*]* @prefix_stats, i64 0, i64 %9
  %11 = load %struct._prefix_stats*, %struct._prefix_stats** %10, align 8
  store %struct._prefix_stats* %11, %struct._prefix_stats** %2, align 8
  br label %12

12:                                               ; preds = %24, %7
  %13 = load %struct._prefix_stats*, %struct._prefix_stats** %2, align 8
  %14 = icmp ne %struct._prefix_stats* %13, null
  br i1 %14, label %15, label %26

15:                                               ; preds = %12
  %16 = load %struct._prefix_stats*, %struct._prefix_stats** %2, align 8
  %17 = getelementptr inbounds %struct._prefix_stats, %struct._prefix_stats* %16, i32 0, i32 6
  %18 = load %struct._prefix_stats*, %struct._prefix_stats** %17, align 8
  store %struct._prefix_stats* %18, %struct._prefix_stats** %3, align 8
  %19 = load %struct._prefix_stats*, %struct._prefix_stats** %2, align 8
  %20 = getelementptr inbounds %struct._prefix_stats, %struct._prefix_stats* %19, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  call void @free(i8* %21) #14
  %22 = load %struct._prefix_stats*, %struct._prefix_stats** %2, align 8
  %23 = bitcast %struct._prefix_stats* %22 to i8*
  call void @free(i8* %23) #14
  br label %24

24:                                               ; preds = %15
  %25 = load %struct._prefix_stats*, %struct._prefix_stats** %3, align 8
  store %struct._prefix_stats* %25, %struct._prefix_stats** %2, align 8
  br label %12, !llvm.loop !109

26:                                               ; preds = %12
  %27 = load i32, i32* %1, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [256 x %struct._prefix_stats*], [256 x %struct._prefix_stats*]* @prefix_stats, i64 0, i64 %28
  store %struct._prefix_stats* null, %struct._prefix_stats** %29, align 8
  br label %30

30:                                               ; preds = %26
  %31 = load i32, i32* %1, align 4
  %32 = add nsw i32 %31, 1
  store i32 %32, i32* %1, align 4
  br label %4, !llvm.loop !110

33:                                               ; preds = %4
  store i32 0, i32* @num_prefixes, align 4
  store i32 0, i32* @total_prefix_size, align 4
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct._prefix_stats* @stats_prefix_find(i8* %0, i64 %1) #0 {
  %3 = alloca %struct._prefix_stats*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %struct._prefix_stats*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  %9 = alloca i8, align 1
  store i8* %0, i8** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8 1, i8* %9, align 1
  store i64 0, i64* %8, align 8
  br label %10

10:                                               ; preds = %34, %2
  %11 = load i64, i64* %8, align 8
  %12 = load i64, i64* %5, align 8
  %13 = icmp ult i64 %11, %12
  br i1 %13, label %14, label %21

14:                                               ; preds = %10
  %15 = load i8*, i8** %4, align 8
  %16 = load i64, i64* %8, align 8
  %17 = getelementptr inbounds i8, i8* %15, i64 %16
  %18 = load i8, i8* %17, align 1
  %19 = sext i8 %18 to i32
  %20 = icmp ne i32 %19, 0
  br label %21

21:                                               ; preds = %14, %10
  %22 = phi i1 [ false, %10 ], [ %20, %14 ]
  br i1 %22, label %23, label %37

23:                                               ; preds = %21
  %24 = load i8*, i8** %4, align 8
  %25 = load i64, i64* %8, align 8
  %26 = getelementptr inbounds i8, i8* %24, i64 %25
  %27 = load i8, i8* %26, align 1
  %28 = sext i8 %27 to i32
  %29 = load i8, i8* @prefix_delimiter, align 1
  %30 = sext i8 %29 to i32
  %31 = icmp eq i32 %28, %30
  br i1 %31, label %32, label %33

32:                                               ; preds = %23
  store i8 0, i8* %9, align 1
  br label %37

33:                                               ; preds = %23
  br label %34

34:                                               ; preds = %33
  %35 = load i64, i64* %8, align 8
  %36 = add i64 %35, 1
  store i64 %36, i64* %8, align 8
  br label %10, !llvm.loop !111

37:                                               ; preds = %32, %21
  %38 = load i8, i8* %9, align 1
  %39 = trunc i8 %38 to i1
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  store %struct._prefix_stats* null, %struct._prefix_stats** %3, align 8
  br label %121

41:                                               ; preds = %37
  %42 = load i32 (i8*, i64)*, i32 (i8*, i64)** @hash, align 8
  %43 = load i8*, i8** %4, align 8
  %44 = load i64, i64* %8, align 8
  %45 = call i32 %42(i8* %43, i64 %44)
  %46 = urem i32 %45, 256
  store i32 %46, i32* %7, align 4
  %47 = load i32, i32* %7, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds [256 x %struct._prefix_stats*], [256 x %struct._prefix_stats*]* @prefix_stats, i64 0, i64 %48
  %50 = load %struct._prefix_stats*, %struct._prefix_stats** %49, align 8
  store %struct._prefix_stats* %50, %struct._prefix_stats** %6, align 8
  br label %51

51:                                               ; preds = %65, %41
  %52 = load %struct._prefix_stats*, %struct._prefix_stats** %6, align 8
  %53 = icmp ne %struct._prefix_stats* null, %52
  br i1 %53, label %54, label %69

54:                                               ; preds = %51
  %55 = load %struct._prefix_stats*, %struct._prefix_stats** %6, align 8
  %56 = getelementptr inbounds %struct._prefix_stats, %struct._prefix_stats* %55, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = load i8*, i8** %4, align 8
  %59 = load i64, i64* %8, align 8
  %60 = call i32 @strncmp(i8* %57, i8* %58, i64 %59) #16
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %54
  %63 = load %struct._prefix_stats*, %struct._prefix_stats** %6, align 8
  store %struct._prefix_stats* %63, %struct._prefix_stats** %3, align 8
  br label %121

64:                                               ; preds = %54
  br label %65

65:                                               ; preds = %64
  %66 = load %struct._prefix_stats*, %struct._prefix_stats** %6, align 8
  %67 = getelementptr inbounds %struct._prefix_stats, %struct._prefix_stats* %66, i32 0, i32 6
  %68 = load %struct._prefix_stats*, %struct._prefix_stats** %67, align 8
  store %struct._prefix_stats* %68, %struct._prefix_stats** %6, align 8
  br label %51, !llvm.loop !112

69:                                               ; preds = %51
  %70 = call noalias i8* @calloc(i64 56, i64 1) #14
  %71 = bitcast i8* %70 to %struct._prefix_stats*
  store %struct._prefix_stats* %71, %struct._prefix_stats** %6, align 8
  %72 = load %struct._prefix_stats*, %struct._prefix_stats** %6, align 8
  %73 = icmp eq %struct._prefix_stats* null, %72
  br i1 %73, label %74, label %75

74:                                               ; preds = %69
  call void @perror(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.781, i64 0, i64 0))
  store %struct._prefix_stats* null, %struct._prefix_stats** %3, align 8
  br label %121

75:                                               ; preds = %69
  %76 = load i64, i64* %8, align 8
  %77 = add i64 %76, 1
  %78 = call noalias i8* @malloc(i64 %77) #14
  %79 = load %struct._prefix_stats*, %struct._prefix_stats** %6, align 8
  %80 = getelementptr inbounds %struct._prefix_stats, %struct._prefix_stats* %79, i32 0, i32 0
  store i8* %78, i8** %80, align 8
  %81 = load %struct._prefix_stats*, %struct._prefix_stats** %6, align 8
  %82 = getelementptr inbounds %struct._prefix_stats, %struct._prefix_stats* %81, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  %84 = icmp eq i8* null, %83
  br i1 %84, label %85, label %88

85:                                               ; preds = %75
  call void @perror(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.1.782, i64 0, i64 0))
  %86 = load %struct._prefix_stats*, %struct._prefix_stats** %6, align 8
  %87 = bitcast %struct._prefix_stats* %86 to i8*
  call void @free(i8* %87) #14
  store %struct._prefix_stats* null, %struct._prefix_stats** %3, align 8
  br label %121

88:                                               ; preds = %75
  %89 = load %struct._prefix_stats*, %struct._prefix_stats** %6, align 8
  %90 = getelementptr inbounds %struct._prefix_stats, %struct._prefix_stats* %89, i32 0, i32 0
  %91 = load i8*, i8** %90, align 8
  %92 = load i8*, i8** %4, align 8
  %93 = load i64, i64* %8, align 8
  %94 = call i8* @strncpy(i8* %91, i8* %92, i64 %93) #14
  %95 = load %struct._prefix_stats*, %struct._prefix_stats** %6, align 8
  %96 = getelementptr inbounds %struct._prefix_stats, %struct._prefix_stats* %95, i32 0, i32 0
  %97 = load i8*, i8** %96, align 8
  %98 = load i64, i64* %8, align 8
  %99 = getelementptr inbounds i8, i8* %97, i64 %98
  store i8 0, i8* %99, align 1
  %100 = load i64, i64* %8, align 8
  %101 = load %struct._prefix_stats*, %struct._prefix_stats** %6, align 8
  %102 = getelementptr inbounds %struct._prefix_stats, %struct._prefix_stats* %101, i32 0, i32 1
  store i64 %100, i64* %102, align 8
  %103 = load i32, i32* %7, align 4
  %104 = zext i32 %103 to i64
  %105 = getelementptr inbounds [256 x %struct._prefix_stats*], [256 x %struct._prefix_stats*]* @prefix_stats, i64 0, i64 %104
  %106 = load %struct._prefix_stats*, %struct._prefix_stats** %105, align 8
  %107 = load %struct._prefix_stats*, %struct._prefix_stats** %6, align 8
  %108 = getelementptr inbounds %struct._prefix_stats, %struct._prefix_stats* %107, i32 0, i32 6
  store %struct._prefix_stats* %106, %struct._prefix_stats** %108, align 8
  %109 = load %struct._prefix_stats*, %struct._prefix_stats** %6, align 8
  %110 = load i32, i32* %7, align 4
  %111 = zext i32 %110 to i64
  %112 = getelementptr inbounds [256 x %struct._prefix_stats*], [256 x %struct._prefix_stats*]* @prefix_stats, i64 0, i64 %111
  store %struct._prefix_stats* %109, %struct._prefix_stats** %112, align 8
  %113 = load i32, i32* @num_prefixes, align 4
  %114 = add nsw i32 %113, 1
  store i32 %114, i32* @num_prefixes, align 4
  %115 = load i64, i64* %8, align 8
  %116 = load i32, i32* @total_prefix_size, align 4
  %117 = sext i32 %116 to i64
  %118 = add i64 %117, %115
  %119 = trunc i64 %118 to i32
  store i32 %119, i32* @total_prefix_size, align 4
  %120 = load %struct._prefix_stats*, %struct._prefix_stats** %6, align 8
  store %struct._prefix_stats* %120, %struct._prefix_stats** %3, align 8
  br label %121

121:                                              ; preds = %88, %85, %74, %62, %40
  %122 = load %struct._prefix_stats*, %struct._prefix_stats** %3, align 8
  ret %struct._prefix_stats* %122
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @stats_prefix_record_get(i8* %0, i64 %1, i1 zeroext %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8, align 1
  %7 = alloca %struct._prefix_stats*, align 8
  store i8* %0, i8** %4, align 8
  store i64 %1, i64* %5, align 8
  %8 = zext i1 %2 to i8
  store i8 %8, i8* %6, align 1
  call void @STATS_LOCK()
  %9 = load i8*, i8** %4, align 8
  %10 = load i64, i64* %5, align 8
  %11 = call %struct._prefix_stats* @stats_prefix_find(i8* %9, i64 %10)
  store %struct._prefix_stats* %11, %struct._prefix_stats** %7, align 8
  %12 = load %struct._prefix_stats*, %struct._prefix_stats** %7, align 8
  %13 = icmp ne %struct._prefix_stats* null, %12
  br i1 %13, label %14, label %27

14:                                               ; preds = %3
  %15 = load %struct._prefix_stats*, %struct._prefix_stats** %7, align 8
  %16 = getelementptr inbounds %struct._prefix_stats, %struct._prefix_stats* %15, i32 0, i32 2
  %17 = load i64, i64* %16, align 8
  %18 = add i64 %17, 1
  store i64 %18, i64* %16, align 8
  %19 = load i8, i8* %6, align 1
  %20 = trunc i8 %19 to i1
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = load %struct._prefix_stats*, %struct._prefix_stats** %7, align 8
  %23 = getelementptr inbounds %struct._prefix_stats, %struct._prefix_stats* %22, i32 0, i32 5
  %24 = load i64, i64* %23, align 8
  %25 = add i64 %24, 1
  store i64 %25, i64* %23, align 8
  br label %26

26:                                               ; preds = %21, %14
  br label %27

27:                                               ; preds = %26, %3
  call void @STATS_UNLOCK()
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @stats_prefix_record_delete(i8* %0, i64 %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %struct._prefix_stats*, align 8
  store i8* %0, i8** %3, align 8
  store i64 %1, i64* %4, align 8
  call void @STATS_LOCK()
  %6 = load i8*, i8** %3, align 8
  %7 = load i64, i64* %4, align 8
  %8 = call %struct._prefix_stats* @stats_prefix_find(i8* %6, i64 %7)
  store %struct._prefix_stats* %8, %struct._prefix_stats** %5, align 8
  %9 = load %struct._prefix_stats*, %struct._prefix_stats** %5, align 8
  %10 = icmp ne %struct._prefix_stats* null, %9
  br i1 %10, label %11, label %16

11:                                               ; preds = %2
  %12 = load %struct._prefix_stats*, %struct._prefix_stats** %5, align 8
  %13 = getelementptr inbounds %struct._prefix_stats, %struct._prefix_stats* %12, i32 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, 1
  store i64 %15, i64* %13, align 8
  br label %16

16:                                               ; preds = %11, %2
  call void @STATS_UNLOCK()
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @stats_prefix_record_set(i8* %0, i64 %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %struct._prefix_stats*, align 8
  store i8* %0, i8** %3, align 8
  store i64 %1, i64* %4, align 8
  call void @STATS_LOCK()
  %6 = load i8*, i8** %3, align 8
  %7 = load i64, i64* %4, align 8
  %8 = call %struct._prefix_stats* @stats_prefix_find(i8* %6, i64 %7)
  store %struct._prefix_stats* %8, %struct._prefix_stats** %5, align 8
  %9 = load %struct._prefix_stats*, %struct._prefix_stats** %5, align 8
  %10 = icmp ne %struct._prefix_stats* null, %9
  br i1 %10, label %11, label %16

11:                                               ; preds = %2
  %12 = load %struct._prefix_stats*, %struct._prefix_stats** %5, align 8
  %13 = getelementptr inbounds %struct._prefix_stats, %struct._prefix_stats* %12, i32 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, 1
  store i64 %15, i64* %13, align 8
  br label %16

16:                                               ; preds = %11, %2
  call void @STATS_UNLOCK()
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @stats_prefix_dump(i32* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i32*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %struct._prefix_stats*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  store i32* %0, i32** %3, align 8
  store i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.783, i64 0, i64 0), i8** %4, align 8
  store i64 0, i64* %9, align 8
  store i64 0, i64* %10, align 8
  call void @STATS_LOCK()
  %11 = load i8*, i8** %4, align 8
  %12 = call i64 @strlen(i8* %11) #16
  %13 = load i32, i32* @total_prefix_size, align 4
  %14 = sext i32 %13 to i64
  %15 = add i64 %12, %14
  %16 = load i32, i32* @num_prefixes, align 4
  %17 = sext i32 %16 to i64
  %18 = load i8*, i8** %4, align 8
  %19 = call i64 @strlen(i8* %18) #16
  %20 = sub i64 %19, 2
  %21 = add i64 %20, 64
  %22 = mul i64 %17, %21
  %23 = add i64 %15, %22
  %24 = add i64 %23, 6
  store i64 %24, i64* %9, align 8
  %25 = load i64, i64* %9, align 8
  %26 = call noalias i8* @malloc(i64 %25) #14
  store i8* %26, i8** %6, align 8
  %27 = load i8*, i8** %6, align 8
  %28 = icmp eq i8* null, %27
  br i1 %28, label %29, label %30

29:                                               ; preds = %1
  call void @perror(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3.784, i64 0, i64 0))
  call void @STATS_UNLOCK()
  store i8* null, i8** %2, align 8
  br label %91

30:                                               ; preds = %1
  store i32 0, i32* %8, align 4
  store i32 0, i32* %7, align 4
  br label %31

31:                                               ; preds = %79, %30
  %32 = load i32, i32* %7, align 4
  %33 = icmp slt i32 %32, 256
  br i1 %33, label %34, label %82

34:                                               ; preds = %31
  %35 = load i32, i32* %7, align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds [256 x %struct._prefix_stats*], [256 x %struct._prefix_stats*]* @prefix_stats, i64 0, i64 %36
  %38 = load %struct._prefix_stats*, %struct._prefix_stats** %37, align 8
  store %struct._prefix_stats* %38, %struct._prefix_stats** %5, align 8
  br label %39

39:                                               ; preds = %74, %34
  %40 = load %struct._prefix_stats*, %struct._prefix_stats** %5, align 8
  %41 = icmp ne %struct._prefix_stats* null, %40
  br i1 %41, label %42, label %78

42:                                               ; preds = %39
  %43 = load i8*, i8** %6, align 8
  %44 = load i32, i32* %8, align 4
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds i8, i8* %43, i64 %45
  %47 = load i64, i64* %9, align 8
  %48 = load i32, i32* %8, align 4
  %49 = sext i32 %48 to i64
  %50 = sub i64 %47, %49
  %51 = load i8*, i8** %4, align 8
  %52 = load %struct._prefix_stats*, %struct._prefix_stats** %5, align 8
  %53 = getelementptr inbounds %struct._prefix_stats, %struct._prefix_stats* %52, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = load %struct._prefix_stats*, %struct._prefix_stats** %5, align 8
  %56 = getelementptr inbounds %struct._prefix_stats, %struct._prefix_stats* %55, i32 0, i32 2
  %57 = load i64, i64* %56, align 8
  %58 = load %struct._prefix_stats*, %struct._prefix_stats** %5, align 8
  %59 = getelementptr inbounds %struct._prefix_stats, %struct._prefix_stats* %58, i32 0, i32 5
  %60 = load i64, i64* %59, align 8
  %61 = load %struct._prefix_stats*, %struct._prefix_stats** %5, align 8
  %62 = getelementptr inbounds %struct._prefix_stats, %struct._prefix_stats* %61, i32 0, i32 3
  %63 = load i64, i64* %62, align 8
  %64 = load %struct._prefix_stats*, %struct._prefix_stats** %5, align 8
  %65 = getelementptr inbounds %struct._prefix_stats, %struct._prefix_stats* %64, i32 0, i32 4
  %66 = load i64, i64* %65, align 8
  %67 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %46, i64 %50, i8* %51, i8* %54, i64 %57, i64 %60, i64 %63, i64 %66) #14
  %68 = sext i32 %67 to i64
  store i64 %68, i64* %10, align 8
  %69 = load i64, i64* %10, align 8
  %70 = load i32, i32* %8, align 4
  %71 = sext i32 %70 to i64
  %72 = add i64 %71, %69
  %73 = trunc i64 %72 to i32
  store i32 %73, i32* %8, align 4
  br label %74

74:                                               ; preds = %42
  %75 = load %struct._prefix_stats*, %struct._prefix_stats** %5, align 8
  %76 = getelementptr inbounds %struct._prefix_stats, %struct._prefix_stats* %75, i32 0, i32 6
  %77 = load %struct._prefix_stats*, %struct._prefix_stats** %76, align 8
  store %struct._prefix_stats* %77, %struct._prefix_stats** %5, align 8
  br label %39, !llvm.loop !113

78:                                               ; preds = %39
  br label %79

79:                                               ; preds = %78
  %80 = load i32, i32* %7, align 4
  %81 = add nsw i32 %80, 1
  store i32 %81, i32* %7, align 4
  br label %31, !llvm.loop !114

82:                                               ; preds = %31
  call void @STATS_UNLOCK()
  %83 = load i8*, i8** %6, align 8
  %84 = load i32, i32* %8, align 4
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds i8, i8* %83, i64 %85
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %86, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4.785, i64 0, i64 0), i64 6, i1 false)
  %87 = load i32, i32* %8, align 4
  %88 = add nsw i32 %87, 5
  %89 = load i32*, i32** %3, align 8
  store i32 %88, i32* %89, align 4
  %90 = load i8*, i8** %6, align 8
  store i8* %90, i8** %2, align 8
  br label %91

91:                                               ; preds = %82, %29
  %92 = load i8*, i8** %2, align 8
  ret i8* %92
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @uriencode_init() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  store i8* getelementptr inbounds ([768 x i8], [768 x i8]* @uriencode_str, i64 0, i64 0), i8** %2, align 8
  store i32 0, i32* %1, align 4
  br label %3

3:                                                ; preds = %45, %0
  %4 = load i32, i32* %1, align 4
  %5 = icmp slt i32 %4, 256
  br i1 %5, label %6, label %48

6:                                                ; preds = %3
  %7 = call i16** @__ctype_b_loc() #15
  %8 = load i16*, i16** %7, align 8
  %9 = load i32, i32* %1, align 4
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds i16, i16* %8, i64 %10
  %12 = load i16, i16* %11, align 2
  %13 = zext i16 %12 to i32
  %14 = and i32 %13, 8
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %28, label %16

16:                                               ; preds = %6
  %17 = load i32, i32* %1, align 4
  %18 = icmp eq i32 %17, 45
  br i1 %18, label %28, label %19

19:                                               ; preds = %16
  %20 = load i32, i32* %1, align 4
  %21 = icmp eq i32 %20, 46
  br i1 %21, label %28, label %22

22:                                               ; preds = %19
  %23 = load i32, i32* %1, align 4
  %24 = icmp eq i32 %23, 95
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = load i32, i32* %1, align 4
  %27 = icmp eq i32 %26, 126
  br i1 %27, label %28, label %32

28:                                               ; preds = %25, %22, %19, %16, %6
  %29 = load i32, i32* %1, align 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds [256 x i8*], [256 x i8*]* @uriencode_map, i64 0, i64 %30
  store i8* null, i8** %31, align 8
  br label %44

32:                                               ; preds = %25
  %33 = load i8*, i8** %2, align 8
  %34 = load i32, i32* %1, align 4
  %35 = trunc i32 %34 to i8
  %36 = zext i8 %35 to i32
  %37 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %33, i64 4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.788, i64 0, i64 0), i32 %36) #14
  %38 = load i8*, i8** %2, align 8
  %39 = load i32, i32* %1, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds [256 x i8*], [256 x i8*]* @uriencode_map, i64 0, i64 %40
  store i8* %38, i8** %41, align 8
  %42 = load i8*, i8** %2, align 8
  %43 = getelementptr inbounds i8, i8* %42, i64 3
  store i8* %43, i8** %2, align 8
  br label %44

44:                                               ; preds = %32, %28
  br label %45

45:                                               ; preds = %44
  %46 = load i32, i32* %1, align 4
  %47 = add nsw i32 %46, 1
  store i32 %47, i32* %1, align 4
  br label %3, !llvm.loop !115

48:                                               ; preds = %3
  ret void
}

; Function Attrs: nounwind readnone willreturn
declare dso_local i16** @__ctype_b_loc() #5

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @uriencode(i8* %0, i8* %1, i64 %2, i64 %3) #0 {
  %5 = alloca i1, align 1
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = alloca i64, align 8
  store i8* %0, i8** %6, align 8
  store i8* %1, i8** %7, align 8
  store i64 %2, i64* %8, align 8
  store i64 %3, i64* %9, align 8
  store i64 0, i64* %11, align 8
  store i32 0, i32* %10, align 4
  br label %12

12:                                               ; preds = %59, %4
  %13 = load i32, i32* %10, align 4
  %14 = sext i32 %13 to i64
  %15 = load i64, i64* %8, align 8
  %16 = icmp ult i64 %14, %15
  br i1 %16, label %17, label %62

17:                                               ; preds = %12
  %18 = load i64, i64* %11, align 8
  %19 = add i64 %18, 4
  %20 = load i64, i64* %9, align 8
  %21 = icmp ugt i64 %19, %20
  br i1 %21, label %22, label %23

22:                                               ; preds = %17
  store i1 false, i1* %5, align 1
  br label %66

23:                                               ; preds = %17
  %24 = load i8*, i8** %6, align 8
  %25 = load i32, i32* %10, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i8, i8* %24, i64 %26
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i64
  %30 = getelementptr inbounds [256 x i8*], [256 x i8*]* @uriencode_map, i64 0, i64 %29
  %31 = load i8*, i8** %30, align 8
  %32 = icmp ne i8* %31, null
  br i1 %32, label %33, label %47

33:                                               ; preds = %23
  %34 = load i8*, i8** %7, align 8
  %35 = load i64, i64* %11, align 8
  %36 = getelementptr inbounds i8, i8* %34, i64 %35
  %37 = load i8*, i8** %6, align 8
  %38 = load i32, i32* %10, align 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %37, i64 %39
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i64
  %43 = getelementptr inbounds [256 x i8*], [256 x i8*]* @uriencode_map, i64 0, i64 %42
  %44 = load i8*, i8** %43, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %36, i8* align 1 %44, i64 3, i1 false)
  %45 = load i64, i64* %11, align 8
  %46 = add i64 %45, 3
  store i64 %46, i64* %11, align 8
  br label %58

47:                                               ; preds = %23
  %48 = load i8*, i8** %6, align 8
  %49 = load i32, i32* %10, align 4
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i8, i8* %48, i64 %50
  %52 = load i8, i8* %51, align 1
  %53 = load i8*, i8** %7, align 8
  %54 = load i64, i64* %11, align 8
  %55 = getelementptr inbounds i8, i8* %53, i64 %54
  store i8 %52, i8* %55, align 1
  %56 = load i64, i64* %11, align 8
  %57 = add i64 %56, 1
  store i64 %57, i64* %11, align 8
  br label %58

58:                                               ; preds = %47, %33
  br label %59

59:                                               ; preds = %58
  %60 = load i32, i32* %10, align 4
  %61 = add nsw i32 %60, 1
  store i32 %61, i32* %10, align 4
  br label %12, !llvm.loop !116

62:                                               ; preds = %12
  %63 = load i8*, i8** %7, align 8
  %64 = load i64, i64* %11, align 8
  %65 = getelementptr inbounds i8, i8* %63, i64 %64
  store i8 0, i8* %65, align 1
  store i1 true, i1* %5, align 1
  br label %66

66:                                               ; preds = %62, %22
  %67 = load i1, i1* %5, align 1
  ret i1 %67
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @safe_strtoull(i8* %0, i64* %1) #0 {
  %3 = alloca i1, align 1
  %4 = alloca i8*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  store i8* %0, i8** %4, align 8
  store i64* %1, i64** %5, align 8
  %8 = call i32* @__errno_location() #15
  store i32 0, i32* %8, align 4
  %9 = load i64*, i64** %5, align 8
  store i64 0, i64* %9, align 8
  %10 = load i8*, i8** %4, align 8
  %11 = call i64 @strtoull(i8* %10, i8** %6, i32 10) #14
  store i64 %11, i64* %7, align 8
  %12 = call i32* @__errno_location() #15
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 34
  br i1 %14, label %19, label %15

15:                                               ; preds = %2
  %16 = load i8*, i8** %4, align 8
  %17 = load i8*, i8** %6, align 8
  %18 = icmp eq i8* %16, %17
  br i1 %18, label %19, label %20

19:                                               ; preds = %15, %2
  store i1 false, i1* %3, align 1
  br label %54

20:                                               ; preds = %15
  %21 = call i16** @__ctype_b_loc() #15
  %22 = load i16*, i16** %21, align 8
  %23 = load i8*, i8** %6, align 8
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i32
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i16, i16* %22, i64 %26
  %28 = load i16, i16* %27, align 2
  %29 = zext i16 %28 to i32
  %30 = and i32 %29, 8192
  %31 = icmp ne i32 %30, 0
  br i1 %31, label %41, label %32

32:                                               ; preds = %20
  %33 = load i8*, i8** %6, align 8
  %34 = load i8, i8* %33, align 1
  %35 = sext i8 %34 to i32
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %53

37:                                               ; preds = %32
  %38 = load i8*, i8** %6, align 8
  %39 = load i8*, i8** %4, align 8
  %40 = icmp ne i8* %38, %39
  br i1 %40, label %41, label %53

41:                                               ; preds = %37, %20
  %42 = load i64, i64* %7, align 8
  %43 = icmp slt i64 %42, 0
  br i1 %43, label %44, label %50

44:                                               ; preds = %41
  %45 = load i8*, i8** %4, align 8
  %46 = call i8* @strchr(i8* %45, i32 45) #16
  %47 = icmp ne i8* %46, null
  br i1 %47, label %48, label %49

48:                                               ; preds = %44
  store i1 false, i1* %3, align 1
  br label %54

49:                                               ; preds = %44
  br label %50

50:                                               ; preds = %49, %41
  %51 = load i64, i64* %7, align 8
  %52 = load i64*, i64** %5, align 8
  store i64 %51, i64* %52, align 8
  store i1 true, i1* %3, align 1
  br label %54

53:                                               ; preds = %37, %32
  store i1 false, i1* %3, align 1
  br label %54

54:                                               ; preds = %53, %50, %48, %19
  %55 = load i1, i1* %3, align 1
  ret i1 %55
}

; Function Attrs: nounwind
declare dso_local i64 @strtoull(i8*, i8**, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @safe_strtoull_hex(i8* %0, i64* %1) #0 {
  %3 = alloca i1, align 1
  %4 = alloca i8*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  store i8* %0, i8** %4, align 8
  store i64* %1, i64** %5, align 8
  %8 = call i32* @__errno_location() #15
  store i32 0, i32* %8, align 4
  %9 = load i64*, i64** %5, align 8
  store i64 0, i64* %9, align 8
  %10 = load i8*, i8** %4, align 8
  %11 = call i64 @strtoull(i8* %10, i8** %6, i32 16) #14
  store i64 %11, i64* %7, align 8
  %12 = call i32* @__errno_location() #15
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 34
  br i1 %14, label %19, label %15

15:                                               ; preds = %2
  %16 = load i8*, i8** %4, align 8
  %17 = load i8*, i8** %6, align 8
  %18 = icmp eq i8* %16, %17
  br i1 %18, label %19, label %20

19:                                               ; preds = %15, %2
  store i1 false, i1* %3, align 1
  br label %54

20:                                               ; preds = %15
  %21 = call i16** @__ctype_b_loc() #15
  %22 = load i16*, i16** %21, align 8
  %23 = load i8*, i8** %6, align 8
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i32
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i16, i16* %22, i64 %26
  %28 = load i16, i16* %27, align 2
  %29 = zext i16 %28 to i32
  %30 = and i32 %29, 8192
  %31 = icmp ne i32 %30, 0
  br i1 %31, label %41, label %32

32:                                               ; preds = %20
  %33 = load i8*, i8** %6, align 8
  %34 = load i8, i8* %33, align 1
  %35 = sext i8 %34 to i32
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %53

37:                                               ; preds = %32
  %38 = load i8*, i8** %6, align 8
  %39 = load i8*, i8** %4, align 8
  %40 = icmp ne i8* %38, %39
  br i1 %40, label %41, label %53

41:                                               ; preds = %37, %20
  %42 = load i64, i64* %7, align 8
  %43 = icmp slt i64 %42, 0
  br i1 %43, label %44, label %50

44:                                               ; preds = %41
  %45 = load i8*, i8** %4, align 8
  %46 = call i8* @strchr(i8* %45, i32 45) #16
  %47 = icmp ne i8* %46, null
  br i1 %47, label %48, label %49

48:                                               ; preds = %44
  store i1 false, i1* %3, align 1
  br label %54

49:                                               ; preds = %44
  br label %50

50:                                               ; preds = %49, %41
  %51 = load i64, i64* %7, align 8
  %52 = load i64*, i64** %5, align 8
  store i64 %51, i64* %52, align 8
  store i1 true, i1* %3, align 1
  br label %54

53:                                               ; preds = %37, %32
  store i1 false, i1* %3, align 1
  br label %54

54:                                               ; preds = %53, %50, %48, %19
  %55 = load i1, i1* %3, align 1
  ret i1 %55
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @safe_strtoll(i8* %0, i64* %1) #0 {
  %3 = alloca i1, align 1
  %4 = alloca i8*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  store i8* %0, i8** %4, align 8
  store i64* %1, i64** %5, align 8
  %8 = call i32* @__errno_location() #15
  store i32 0, i32* %8, align 4
  %9 = load i64*, i64** %5, align 8
  store i64 0, i64* %9, align 8
  %10 = load i8*, i8** %4, align 8
  %11 = call i64 @strtoll(i8* %10, i8** %6, i32 10) #14
  store i64 %11, i64* %7, align 8
  %12 = call i32* @__errno_location() #15
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 34
  br i1 %14, label %19, label %15

15:                                               ; preds = %2
  %16 = load i8*, i8** %4, align 8
  %17 = load i8*, i8** %6, align 8
  %18 = icmp eq i8* %16, %17
  br i1 %18, label %19, label %20

19:                                               ; preds = %15, %2
  store i1 false, i1* %3, align 1
  br label %45

20:                                               ; preds = %15
  %21 = call i16** @__ctype_b_loc() #15
  %22 = load i16*, i16** %21, align 8
  %23 = load i8*, i8** %6, align 8
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i32
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i16, i16* %22, i64 %26
  %28 = load i16, i16* %27, align 2
  %29 = zext i16 %28 to i32
  %30 = and i32 %29, 8192
  %31 = icmp ne i32 %30, 0
  br i1 %31, label %41, label %32

32:                                               ; preds = %20
  %33 = load i8*, i8** %6, align 8
  %34 = load i8, i8* %33, align 1
  %35 = sext i8 %34 to i32
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %44

37:                                               ; preds = %32
  %38 = load i8*, i8** %6, align 8
  %39 = load i8*, i8** %4, align 8
  %40 = icmp ne i8* %38, %39
  br i1 %40, label %41, label %44

41:                                               ; preds = %37, %20
  %42 = load i64, i64* %7, align 8
  %43 = load i64*, i64** %5, align 8
  store i64 %42, i64* %43, align 8
  store i1 true, i1* %3, align 1
  br label %45

44:                                               ; preds = %37, %32
  store i1 false, i1* %3, align 1
  br label %45

45:                                               ; preds = %44, %41, %19
  %46 = load i1, i1* %3, align 1
  ret i1 %46
}

; Function Attrs: nounwind
declare dso_local i64 @strtoll(i8*, i8**, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @safe_strtoul(i8* %0, i32* %1) #0 {
  %3 = alloca i1, align 1
  %4 = alloca i8*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  store i8* %0, i8** %4, align 8
  store i32* %1, i32** %5, align 8
  store i8* null, i8** %6, align 8
  store i64 0, i64* %7, align 8
  %8 = load i32*, i32** %5, align 8
  store i32 0, i32* %8, align 4
  %9 = call i32* @__errno_location() #15
  store i32 0, i32* %9, align 4
  %10 = load i8*, i8** %4, align 8
  %11 = call i64 @strtoul(i8* %10, i8** %6, i32 10) #14
  store i64 %11, i64* %7, align 8
  %12 = call i32* @__errno_location() #15
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 34
  br i1 %14, label %19, label %15

15:                                               ; preds = %2
  %16 = load i8*, i8** %4, align 8
  %17 = load i8*, i8** %6, align 8
  %18 = icmp eq i8* %16, %17
  br i1 %18, label %19, label %20

19:                                               ; preds = %15, %2
  store i1 false, i1* %3, align 1
  br label %55

20:                                               ; preds = %15
  %21 = call i16** @__ctype_b_loc() #15
  %22 = load i16*, i16** %21, align 8
  %23 = load i8*, i8** %6, align 8
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i32
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i16, i16* %22, i64 %26
  %28 = load i16, i16* %27, align 2
  %29 = zext i16 %28 to i32
  %30 = and i32 %29, 8192
  %31 = icmp ne i32 %30, 0
  br i1 %31, label %41, label %32

32:                                               ; preds = %20
  %33 = load i8*, i8** %6, align 8
  %34 = load i8, i8* %33, align 1
  %35 = sext i8 %34 to i32
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %54

37:                                               ; preds = %32
  %38 = load i8*, i8** %6, align 8
  %39 = load i8*, i8** %4, align 8
  %40 = icmp ne i8* %38, %39
  br i1 %40, label %41, label %54

41:                                               ; preds = %37, %20
  %42 = load i64, i64* %7, align 8
  %43 = icmp slt i64 %42, 0
  br i1 %43, label %44, label %50

44:                                               ; preds = %41
  %45 = load i8*, i8** %4, align 8
  %46 = call i8* @strchr(i8* %45, i32 45) #16
  %47 = icmp ne i8* %46, null
  br i1 %47, label %48, label %49

48:                                               ; preds = %44
  store i1 false, i1* %3, align 1
  br label %55

49:                                               ; preds = %44
  br label %50

50:                                               ; preds = %49, %41
  %51 = load i64, i64* %7, align 8
  %52 = trunc i64 %51 to i32
  %53 = load i32*, i32** %5, align 8
  store i32 %52, i32* %53, align 4
  store i1 true, i1* %3, align 1
  br label %55

54:                                               ; preds = %37, %32
  store i1 false, i1* %3, align 1
  br label %55

55:                                               ; preds = %54, %50, %48, %19
  %56 = load i1, i1* %3, align 1
  ret i1 %56
}

; Function Attrs: nounwind
declare dso_local i64 @strtoul(i8*, i8**, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @safe_strtol(i8* %0, i32* %1) #0 {
  %3 = alloca i1, align 1
  %4 = alloca i8*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  store i8* %0, i8** %4, align 8
  store i32* %1, i32** %5, align 8
  %8 = call i32* @__errno_location() #15
  store i32 0, i32* %8, align 4
  %9 = load i32*, i32** %5, align 8
  store i32 0, i32* %9, align 4
  %10 = load i8*, i8** %4, align 8
  %11 = call i64 @strtol(i8* %10, i8** %6, i32 10) #14
  store i64 %11, i64* %7, align 8
  %12 = call i32* @__errno_location() #15
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 34
  br i1 %14, label %19, label %15

15:                                               ; preds = %2
  %16 = load i8*, i8** %4, align 8
  %17 = load i8*, i8** %6, align 8
  %18 = icmp eq i8* %16, %17
  br i1 %18, label %19, label %20

19:                                               ; preds = %15, %2
  store i1 false, i1* %3, align 1
  br label %46

20:                                               ; preds = %15
  %21 = call i16** @__ctype_b_loc() #15
  %22 = load i16*, i16** %21, align 8
  %23 = load i8*, i8** %6, align 8
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i32
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i16, i16* %22, i64 %26
  %28 = load i16, i16* %27, align 2
  %29 = zext i16 %28 to i32
  %30 = and i32 %29, 8192
  %31 = icmp ne i32 %30, 0
  br i1 %31, label %41, label %32

32:                                               ; preds = %20
  %33 = load i8*, i8** %6, align 8
  %34 = load i8, i8* %33, align 1
  %35 = sext i8 %34 to i32
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %45

37:                                               ; preds = %32
  %38 = load i8*, i8** %6, align 8
  %39 = load i8*, i8** %4, align 8
  %40 = icmp ne i8* %38, %39
  br i1 %40, label %41, label %45

41:                                               ; preds = %37, %20
  %42 = load i64, i64* %7, align 8
  %43 = trunc i64 %42 to i32
  %44 = load i32*, i32** %5, align 8
  store i32 %43, i32* %44, align 4
  store i1 true, i1* %3, align 1
  br label %46

45:                                               ; preds = %37, %32
  store i1 false, i1* %3, align 1
  br label %46

46:                                               ; preds = %45, %41, %19
  %47 = load i1, i1* %3, align 1
  ret i1 %47
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @safe_strtod(i8* %0, double* %1) #0 {
  %3 = alloca i1, align 1
  %4 = alloca i8*, align 8
  %5 = alloca double*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca double, align 8
  store i8* %0, i8** %4, align 8
  store double* %1, double** %5, align 8
  %8 = call i32* @__errno_location() #15
  store i32 0, i32* %8, align 4
  %9 = load double*, double** %5, align 8
  store double 0.000000e+00, double* %9, align 8
  %10 = load i8*, i8** %4, align 8
  %11 = call double @strtod(i8* %10, i8** %6) #14
  store double %11, double* %7, align 8
  %12 = call i32* @__errno_location() #15
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 34
  br i1 %14, label %19, label %15

15:                                               ; preds = %2
  %16 = load i8*, i8** %4, align 8
  %17 = load i8*, i8** %6, align 8
  %18 = icmp eq i8* %16, %17
  br i1 %18, label %19, label %20

19:                                               ; preds = %15, %2
  store i1 false, i1* %3, align 1
  br label %45

20:                                               ; preds = %15
  %21 = call i16** @__ctype_b_loc() #15
  %22 = load i16*, i16** %21, align 8
  %23 = load i8*, i8** %6, align 8
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i32
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i16, i16* %22, i64 %26
  %28 = load i16, i16* %27, align 2
  %29 = zext i16 %28 to i32
  %30 = and i32 %29, 8192
  %31 = icmp ne i32 %30, 0
  br i1 %31, label %41, label %32

32:                                               ; preds = %20
  %33 = load i8*, i8** %6, align 8
  %34 = load i8, i8* %33, align 1
  %35 = sext i8 %34 to i32
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %44

37:                                               ; preds = %32
  %38 = load i8*, i8** %6, align 8
  %39 = load i8*, i8** %4, align 8
  %40 = icmp ne i8* %38, %39
  br i1 %40, label %41, label %44

41:                                               ; preds = %37, %20
  %42 = load double, double* %7, align 8
  %43 = load double*, double** %5, align 8
  store double %42, double* %43, align 8
  store i1 true, i1* %3, align 1
  br label %45

44:                                               ; preds = %37, %32
  store i1 false, i1* %3, align 1
  br label %45

45:                                               ; preds = %44, %41, %19
  %46 = load i1, i1* %3, align 1
  ret i1 %46
}

; Function Attrs: nounwind
declare dso_local double @strtod(i8*, i8**) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @safe_strcpy(i8* %0, i8* %1, i64 %2) #0 {
  %4 = alloca i1, align 1
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  store i8* %0, i8** %5, align 8
  store i8* %1, i8** %6, align 8
  store i64 %2, i64* %7, align 8
  store i64 0, i64* %8, align 8
  br label %9

9:                                                ; preds = %31, %3
  %10 = load i64, i64* %8, align 8
  %11 = load i64, i64* %7, align 8
  %12 = sub i64 %11, 1
  %13 = icmp ult i64 %10, %12
  br i1 %13, label %14, label %21

14:                                               ; preds = %9
  %15 = load i8*, i8** %6, align 8
  %16 = load i64, i64* %8, align 8
  %17 = getelementptr inbounds i8, i8* %15, i64 %16
  %18 = load i8, i8* %17, align 1
  %19 = sext i8 %18 to i32
  %20 = icmp ne i32 %19, 0
  br label %21

21:                                               ; preds = %14, %9
  %22 = phi i1 [ false, %9 ], [ %20, %14 ]
  br i1 %22, label %23, label %34

23:                                               ; preds = %21
  %24 = load i8*, i8** %6, align 8
  %25 = load i64, i64* %8, align 8
  %26 = getelementptr inbounds i8, i8* %24, i64 %25
  %27 = load i8, i8* %26, align 1
  %28 = load i8*, i8** %5, align 8
  %29 = load i64, i64* %8, align 8
  %30 = getelementptr inbounds i8, i8* %28, i64 %29
  store i8 %27, i8* %30, align 1
  br label %31

31:                                               ; preds = %23
  %32 = load i64, i64* %8, align 8
  %33 = add i64 %32, 1
  store i64 %33, i64* %8, align 8
  br label %9, !llvm.loop !117

34:                                               ; preds = %21
  %35 = load i8*, i8** %5, align 8
  %36 = load i64, i64* %8, align 8
  %37 = getelementptr inbounds i8, i8* %35, i64 %36
  store i8 0, i8* %37, align 1
  %38 = load i8*, i8** %6, align 8
  %39 = load i64, i64* %8, align 8
  %40 = getelementptr inbounds i8, i8* %38, i64 %39
  %41 = load i8, i8* %40, align 1
  %42 = sext i8 %41 to i32
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %34
  store i1 true, i1* %4, align 1
  br label %46

45:                                               ; preds = %34
  store i1 false, i1* %4, align 1
  br label %46

46:                                               ; preds = %45, %44
  %47 = load i1, i1* %4, align 1
  ret i1 %47
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @safe_memcmp(i8* %0, i8* %1, i64 %2) #0 {
  %4 = alloca i1, align 1
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i64, align 8
  store i8* %0, i8** %5, align 8
  store i8* %1, i8** %6, align 8
  store i64 %2, i64* %7, align 8
  %12 = load i8*, i8** %5, align 8
  store i8* %12, i8** %8, align 8
  %13 = load i8*, i8** %6, align 8
  store i8* %13, i8** %9, align 8
  store i32 0, i32* %10, align 4
  store i64 0, i64* %11, align 8
  br label %14

14:                                               ; preds = %32, %3
  %15 = load i64, i64* %11, align 8
  %16 = load i64, i64* %7, align 8
  %17 = icmp ult i64 %15, %16
  br i1 %17, label %18, label %35

18:                                               ; preds = %14
  %19 = load i8*, i8** %8, align 8
  %20 = load i64, i64* %11, align 8
  %21 = getelementptr inbounds i8, i8* %19, i64 %20
  %22 = load volatile i8, i8* %21, align 1
  %23 = zext i8 %22 to i32
  %24 = load i8*, i8** %9, align 8
  %25 = load i64, i64* %11, align 8
  %26 = getelementptr inbounds i8, i8* %24, i64 %25
  %27 = load volatile i8, i8* %26, align 1
  %28 = zext i8 %27 to i32
  %29 = xor i32 %23, %28
  %30 = load i32, i32* %10, align 4
  %31 = or i32 %30, %29
  store i32 %31, i32* %10, align 4
  br label %32

32:                                               ; preds = %18
  %33 = load i64, i64* %11, align 8
  %34 = add i64 %33, 1
  store i64 %34, i64* %11, align 8
  br label %14, !llvm.loop !118

35:                                               ; preds = %14
  %36 = load i32, i32* %10, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %35
  store i1 true, i1* %4, align 1
  br label %40

39:                                               ; preds = %35
  store i1 false, i1* %4, align 1
  br label %40

40:                                               ; preds = %39, %38
  %41 = load i1, i1* %4, align 1
  ret i1 %41
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @vperror(i8* %0, ...) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  %4 = alloca [1024 x i8], align 16
  %5 = alloca [1 x %struct.__va_list_tag], align 16
  store i8* %0, i8** %2, align 8
  %6 = call i32* @__errno_location() #15
  %7 = load i32, i32* %6, align 4
  store i32 %7, i32* %3, align 4
  %8 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %5, i64 0, i64 0
  %9 = bitcast %struct.__va_list_tag* %8 to i8*
  call void @llvm.va_start(i8* %9)
  %10 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i64 0, i64 0
  %11 = load i8*, i8** %2, align 8
  %12 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %5, i64 0, i64 0
  %13 = call i32 @vsnprintf(i8* %10, i64 1024, i8* %11, %struct.__va_list_tag* %12) #14
  %14 = icmp eq i32 %13, -1
  br i1 %14, label %15, label %17

15:                                               ; preds = %1
  %16 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i64 0, i64 1023
  store i8 0, i8* %16, align 1
  br label %17

17:                                               ; preds = %15, %1
  %18 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %5, i64 0, i64 0
  %19 = bitcast %struct.__va_list_tag* %18 to i8*
  call void @llvm.va_end(i8* %19)
  %20 = load i32, i32* %3, align 4
  %21 = call i32* @__errno_location() #15
  store i32 %20, i32* %21, align 4
  %22 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i64 0, i64 0
  call void @perror(i8* %22)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @ntohll(i64 %0) #0 {
  %2 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  %3 = load i64, i64* %2, align 8
  %4 = call i64 @mc_swap64(i64 %3)
  ret i64 %4
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @mc_swap64(i64 %0) #0 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  store i64 %0, i64* %2, align 8
  store i64 0, i64* %3, align 8
  store i32 0, i32* %4, align 4
  store i32 0, i32* %4, align 4
  br label %5

5:                                                ; preds = %16, %1
  %6 = load i32, i32* %4, align 4
  %7 = icmp slt i32 %6, 8
  br i1 %7, label %8, label %19

8:                                                ; preds = %5
  %9 = load i64, i64* %3, align 8
  %10 = shl i64 %9, 8
  %11 = load i64, i64* %2, align 8
  %12 = and i64 %11, 255
  %13 = or i64 %10, %12
  store i64 %13, i64* %3, align 8
  %14 = load i64, i64* %2, align 8
  %15 = lshr i64 %14, 8
  store i64 %15, i64* %2, align 8
  br label %16

16:                                               ; preds = %8
  %17 = load i32, i32* %4, align 4
  %18 = add nsw i32 %17, 1
  store i32 %18, i32* %4, align 4
  br label %5, !llvm.loop !119

19:                                               ; preds = %5
  %20 = load i64, i64* %3, align 8
  ret i64 %20
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @htonll(i64 %0) #0 {
  %2 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  %3 = load i64, i64* %2, align 8
  %4 = call i64 @mc_swap64(i64 %3)
  ret i64 %4
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.cache_t* @cache_create(i8* %0, i64 %1, i64 %2) #0 {
  %4 = alloca %struct.cache_t*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca %struct.cache_t*, align 8
  %9 = alloca i8*, align 8
  store i8* %0, i8** %5, align 8
  store i64 %1, i64* %6, align 8
  store i64 %2, i64* %7, align 8
  %10 = call noalias i8* @calloc(i64 1, i64 88) #14
  %11 = bitcast i8* %10 to %struct.cache_t*
  store %struct.cache_t* %11, %struct.cache_t** %8, align 8
  %12 = load i8*, i8** %5, align 8
  %13 = call noalias i8* @strdup(i8* %12) #14
  store i8* %13, i8** %9, align 8
  %14 = load %struct.cache_t*, %struct.cache_t** %8, align 8
  %15 = icmp eq %struct.cache_t* %14, null
  br i1 %15, label %24, label %16

16:                                               ; preds = %3
  %17 = load i8*, i8** %9, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %16
  %20 = load %struct.cache_t*, %struct.cache_t** %8, align 8
  %21 = getelementptr inbounds %struct.cache_t, %struct.cache_t* %20, i32 0, i32 0
  %22 = call i32 @pthread_mutex_init(%union.pthread_mutex_t* %21, %struct.in_addr* null) #14
  %23 = icmp eq i32 %22, -1
  br i1 %23, label %24, label %28

24:                                               ; preds = %19, %16, %3
  %25 = load %struct.cache_t*, %struct.cache_t** %8, align 8
  %26 = bitcast %struct.cache_t* %25 to i8*
  call void @free(i8* %26) #14
  %27 = load i8*, i8** %9, align 8
  call void @free(i8* %27) #14
  store %struct.cache_t* null, %struct.cache_t** %4, align 8
  br label %47

28:                                               ; preds = %19
  %29 = load i8*, i8** %9, align 8
  %30 = load %struct.cache_t*, %struct.cache_t** %8, align 8
  %31 = getelementptr inbounds %struct.cache_t, %struct.cache_t* %30, i32 0, i32 1
  store i8* %29, i8** %31, align 8
  br label %32

32:                                               ; preds = %28
  %33 = load %struct.cache_t*, %struct.cache_t** %8, align 8
  %34 = getelementptr inbounds %struct.cache_t, %struct.cache_t* %33, i32 0, i32 2
  %35 = getelementptr inbounds %struct.cache_head, %struct.cache_head* %34, i32 0, i32 0
  store %struct.cache_free_s* null, %struct.cache_free_s** %35, align 8
  %36 = load %struct.cache_t*, %struct.cache_t** %8, align 8
  %37 = getelementptr inbounds %struct.cache_t, %struct.cache_t* %36, i32 0, i32 2
  %38 = getelementptr inbounds %struct.cache_head, %struct.cache_head* %37, i32 0, i32 0
  %39 = load %struct.cache_t*, %struct.cache_t** %8, align 8
  %40 = getelementptr inbounds %struct.cache_t, %struct.cache_t* %39, i32 0, i32 2
  %41 = getelementptr inbounds %struct.cache_head, %struct.cache_head* %40, i32 0, i32 1
  store %struct.cache_free_s** %38, %struct.cache_free_s*** %41, align 8
  br label %42

42:                                               ; preds = %32
  %43 = load i64, i64* %6, align 8
  %44 = load %struct.cache_t*, %struct.cache_t** %8, align 8
  %45 = getelementptr inbounds %struct.cache_t, %struct.cache_t* %44, i32 0, i32 3
  store i64 %43, i64* %45, align 8
  %46 = load %struct.cache_t*, %struct.cache_t** %8, align 8
  store %struct.cache_t* %46, %struct.cache_t** %4, align 8
  br label %47

47:                                               ; preds = %42, %24
  %48 = load %struct.cache_t*, %struct.cache_t** %4, align 8
  ret %struct.cache_t* %48
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @cache_set_limit(%struct.cache_t* %0, i32 %1) #0 {
  %3 = alloca %struct.cache_t*, align 8
  %4 = alloca i32, align 4
  store %struct.cache_t* %0, %struct.cache_t** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %struct.cache_t*, %struct.cache_t** %3, align 8
  %6 = getelementptr inbounds %struct.cache_t, %struct.cache_t* %5, i32 0, i32 0
  %7 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %6) #14
  %8 = load i32, i32* %4, align 4
  %9 = load %struct.cache_t*, %struct.cache_t** %3, align 8
  %10 = getelementptr inbounds %struct.cache_t, %struct.cache_t* %9, i32 0, i32 7
  store i32 %8, i32* %10, align 4
  %11 = load %struct.cache_t*, %struct.cache_t** %3, align 8
  %12 = getelementptr inbounds %struct.cache_t, %struct.cache_t* %11, i32 0, i32 0
  %13 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %12) #14
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @cache_destroy(%struct.cache_t* %0) #0 {
  %2 = alloca %struct.cache_t*, align 8
  %3 = alloca %struct.cache_free_s*, align 8
  store %struct.cache_t* %0, %struct.cache_t** %2, align 8
  br label %4

4:                                                ; preds = %36, %1
  %5 = load %struct.cache_t*, %struct.cache_t** %2, align 8
  %6 = getelementptr inbounds %struct.cache_t, %struct.cache_t* %5, i32 0, i32 2
  %7 = getelementptr inbounds %struct.cache_head, %struct.cache_head* %6, i32 0, i32 0
  %8 = load %struct.cache_free_s*, %struct.cache_free_s** %7, align 8
  %9 = icmp eq %struct.cache_free_s* %8, null
  %10 = xor i1 %9, true
  br i1 %10, label %11, label %39

11:                                               ; preds = %4
  %12 = load %struct.cache_t*, %struct.cache_t** %2, align 8
  %13 = getelementptr inbounds %struct.cache_t, %struct.cache_t* %12, i32 0, i32 2
  %14 = getelementptr inbounds %struct.cache_head, %struct.cache_head* %13, i32 0, i32 0
  %15 = load %struct.cache_free_s*, %struct.cache_free_s** %14, align 8
  store %struct.cache_free_s* %15, %struct.cache_free_s** %3, align 8
  br label %16

16:                                               ; preds = %11
  %17 = load %struct.cache_t*, %struct.cache_t** %2, align 8
  %18 = getelementptr inbounds %struct.cache_t, %struct.cache_t* %17, i32 0, i32 2
  %19 = getelementptr inbounds %struct.cache_head, %struct.cache_head* %18, i32 0, i32 0
  %20 = load %struct.cache_free_s*, %struct.cache_free_s** %19, align 8
  %21 = getelementptr inbounds %struct.cache_free_s, %struct.cache_free_s* %20, i32 0, i32 0
  %22 = getelementptr inbounds %struct.anon.8, %struct.anon.8* %21, i32 0, i32 0
  %23 = load %struct.cache_free_s*, %struct.cache_free_s** %22, align 8
  %24 = load %struct.cache_t*, %struct.cache_t** %2, align 8
  %25 = getelementptr inbounds %struct.cache_t, %struct.cache_t* %24, i32 0, i32 2
  %26 = getelementptr inbounds %struct.cache_head, %struct.cache_head* %25, i32 0, i32 0
  store %struct.cache_free_s* %23, %struct.cache_free_s** %26, align 8
  %27 = icmp eq %struct.cache_free_s* %23, null
  br i1 %27, label %28, label %35

28:                                               ; preds = %16
  %29 = load %struct.cache_t*, %struct.cache_t** %2, align 8
  %30 = getelementptr inbounds %struct.cache_t, %struct.cache_t* %29, i32 0, i32 2
  %31 = getelementptr inbounds %struct.cache_head, %struct.cache_head* %30, i32 0, i32 0
  %32 = load %struct.cache_t*, %struct.cache_t** %2, align 8
  %33 = getelementptr inbounds %struct.cache_t, %struct.cache_t* %32, i32 0, i32 2
  %34 = getelementptr inbounds %struct.cache_head, %struct.cache_head* %33, i32 0, i32 1
  store %struct.cache_free_s** %31, %struct.cache_free_s*** %34, align 8
  br label %35

35:                                               ; preds = %28, %16
  br label %36

36:                                               ; preds = %35
  %37 = load %struct.cache_free_s*, %struct.cache_free_s** %3, align 8
  %38 = bitcast %struct.cache_free_s* %37 to i8*
  call void @free(i8* %38) #14
  br label %4, !llvm.loop !120

39:                                               ; preds = %4
  %40 = load %struct.cache_t*, %struct.cache_t** %2, align 8
  %41 = getelementptr inbounds %struct.cache_t, %struct.cache_t* %40, i32 0, i32 1
  %42 = load i8*, i8** %41, align 8
  call void @free(i8* %42) #14
  %43 = load %struct.cache_t*, %struct.cache_t** %2, align 8
  %44 = getelementptr inbounds %struct.cache_t, %struct.cache_t* %43, i32 0, i32 0
  %45 = call i32 @pthread_mutex_destroy(%union.pthread_mutex_t* %44) #14
  %46 = load %struct.cache_t*, %struct.cache_t** %2, align 8
  %47 = bitcast %struct.cache_t* %46 to i8*
  call void @free(i8* %47) #14
  ret void
}

; Function Attrs: nounwind
declare dso_local i32 @pthread_mutex_destroy(%union.pthread_mutex_t*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @cache_alloc(%struct.cache_t* %0) #0 {
  %2 = alloca %struct.cache_t*, align 8
  %3 = alloca i8*, align 8
  store %struct.cache_t* %0, %struct.cache_t** %2, align 8
  %4 = load %struct.cache_t*, %struct.cache_t** %2, align 8
  %5 = getelementptr inbounds %struct.cache_t, %struct.cache_t* %4, i32 0, i32 0
  %6 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %5) #14
  %7 = load %struct.cache_t*, %struct.cache_t** %2, align 8
  %8 = call i8* @do_cache_alloc(%struct.cache_t* %7)
  store i8* %8, i8** %3, align 8
  %9 = load %struct.cache_t*, %struct.cache_t** %2, align 8
  %10 = getelementptr inbounds %struct.cache_t, %struct.cache_t* %9, i32 0, i32 0
  %11 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %10) #14
  %12 = load i8*, i8** %3, align 8
  ret i8* %12
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @do_cache_alloc(%struct.cache_t* %0) #0 {
  %2 = alloca %struct.cache_t*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store %struct.cache_t* %0, %struct.cache_t** %2, align 8
  %5 = load %struct.cache_t*, %struct.cache_t** %2, align 8
  %6 = getelementptr inbounds %struct.cache_t, %struct.cache_t* %5, i32 0, i32 6
  %7 = load i32, i32* %6, align 8
  %8 = icmp sgt i32 %7, 0
  br i1 %8, label %9, label %42

9:                                                ; preds = %1
  %10 = load %struct.cache_t*, %struct.cache_t** %2, align 8
  %11 = getelementptr inbounds %struct.cache_t, %struct.cache_t* %10, i32 0, i32 2
  %12 = getelementptr inbounds %struct.cache_head, %struct.cache_head* %11, i32 0, i32 0
  %13 = load %struct.cache_free_s*, %struct.cache_free_s** %12, align 8
  %14 = bitcast %struct.cache_free_s* %13 to i8*
  store i8* %14, i8** %3, align 8
  br label %15

15:                                               ; preds = %9
  %16 = load %struct.cache_t*, %struct.cache_t** %2, align 8
  %17 = getelementptr inbounds %struct.cache_t, %struct.cache_t* %16, i32 0, i32 2
  %18 = getelementptr inbounds %struct.cache_head, %struct.cache_head* %17, i32 0, i32 0
  %19 = load %struct.cache_free_s*, %struct.cache_free_s** %18, align 8
  %20 = getelementptr inbounds %struct.cache_free_s, %struct.cache_free_s* %19, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon.8, %struct.anon.8* %20, i32 0, i32 0
  %22 = load %struct.cache_free_s*, %struct.cache_free_s** %21, align 8
  %23 = load %struct.cache_t*, %struct.cache_t** %2, align 8
  %24 = getelementptr inbounds %struct.cache_t, %struct.cache_t* %23, i32 0, i32 2
  %25 = getelementptr inbounds %struct.cache_head, %struct.cache_head* %24, i32 0, i32 0
  store %struct.cache_free_s* %22, %struct.cache_free_s** %25, align 8
  %26 = icmp eq %struct.cache_free_s* %22, null
  br i1 %26, label %27, label %34

27:                                               ; preds = %15
  %28 = load %struct.cache_t*, %struct.cache_t** %2, align 8
  %29 = getelementptr inbounds %struct.cache_t, %struct.cache_t* %28, i32 0, i32 2
  %30 = getelementptr inbounds %struct.cache_head, %struct.cache_head* %29, i32 0, i32 0
  %31 = load %struct.cache_t*, %struct.cache_t** %2, align 8
  %32 = getelementptr inbounds %struct.cache_t, %struct.cache_t* %31, i32 0, i32 2
  %33 = getelementptr inbounds %struct.cache_head, %struct.cache_head* %32, i32 0, i32 1
  store %struct.cache_free_s** %30, %struct.cache_free_s*** %33, align 8
  br label %34

34:                                               ; preds = %27, %15
  br label %35

35:                                               ; preds = %34
  %36 = load i8*, i8** %3, align 8
  %37 = call i8* @get_object(i8* %36)
  store i8* %37, i8** %4, align 8
  %38 = load %struct.cache_t*, %struct.cache_t** %2, align 8
  %39 = getelementptr inbounds %struct.cache_t, %struct.cache_t* %38, i32 0, i32 6
  %40 = load i32, i32* %39, align 8
  %41 = add nsw i32 %40, -1
  store i32 %41, i32* %39, align 8
  br label %72

42:                                               ; preds = %1
  %43 = load %struct.cache_t*, %struct.cache_t** %2, align 8
  %44 = getelementptr inbounds %struct.cache_t, %struct.cache_t* %43, i32 0, i32 7
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = load %struct.cache_t*, %struct.cache_t** %2, align 8
  %49 = getelementptr inbounds %struct.cache_t, %struct.cache_t* %48, i32 0, i32 5
  %50 = load i32, i32* %49, align 4
  %51 = load %struct.cache_t*, %struct.cache_t** %2, align 8
  %52 = getelementptr inbounds %struct.cache_t, %struct.cache_t* %51, i32 0, i32 7
  %53 = load i32, i32* %52, align 4
  %54 = icmp slt i32 %50, %53
  br i1 %54, label %55, label %70

55:                                               ; preds = %47, %42
  %56 = load %struct.cache_t*, %struct.cache_t** %2, align 8
  %57 = getelementptr inbounds %struct.cache_t, %struct.cache_t* %56, i32 0, i32 3
  %58 = load i64, i64* %57, align 8
  %59 = call noalias i8* @malloc(i64 %58) #14
  store i8* %59, i8** %3, align 8
  store i8* %59, i8** %4, align 8
  %60 = load i8*, i8** %3, align 8
  %61 = icmp ne i8* %60, null
  br i1 %61, label %62, label %69

62:                                               ; preds = %55
  %63 = load i8*, i8** %3, align 8
  %64 = call i8* @get_object(i8* %63)
  store i8* %64, i8** %4, align 8
  %65 = load %struct.cache_t*, %struct.cache_t** %2, align 8
  %66 = getelementptr inbounds %struct.cache_t, %struct.cache_t* %65, i32 0, i32 5
  %67 = load i32, i32* %66, align 4
  %68 = add nsw i32 %67, 1
  store i32 %68, i32* %66, align 4
  br label %69

69:                                               ; preds = %62, %55
  br label %71

70:                                               ; preds = %47
  store i8* null, i8** %4, align 8
  br label %71

71:                                               ; preds = %70, %69
  br label %72

72:                                               ; preds = %71, %35
  %73 = load i8*, i8** %4, align 8
  ret i8* %73
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @get_object(i8* %0) #0 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @cache_free(%struct.cache_t* %0, i8* %1) #0 {
  %3 = alloca %struct.cache_t*, align 8
  %4 = alloca i8*, align 8
  store %struct.cache_t* %0, %struct.cache_t** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load %struct.cache_t*, %struct.cache_t** %3, align 8
  %6 = getelementptr inbounds %struct.cache_t, %struct.cache_t* %5, i32 0, i32 0
  %7 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %6) #14
  %8 = load %struct.cache_t*, %struct.cache_t** %3, align 8
  %9 = load i8*, i8** %4, align 8
  call void @do_cache_free(%struct.cache_t* %8, i8* %9)
  %10 = load %struct.cache_t*, %struct.cache_t** %3, align 8
  %11 = getelementptr inbounds %struct.cache_t, %struct.cache_t* %10, i32 0, i32 0
  %12 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %11) #14
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @do_cache_free(%struct.cache_t* %0, i8* %1) #0 {
  %3 = alloca %struct.cache_t*, align 8
  %4 = alloca i8*, align 8
  store %struct.cache_t* %0, %struct.cache_t** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load %struct.cache_t*, %struct.cache_t** %3, align 8
  %6 = getelementptr inbounds %struct.cache_t, %struct.cache_t* %5, i32 0, i32 7
  %7 = load i32, i32* %6, align 4
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %9, label %23

9:                                                ; preds = %2
  %10 = load %struct.cache_t*, %struct.cache_t** %3, align 8
  %11 = getelementptr inbounds %struct.cache_t, %struct.cache_t* %10, i32 0, i32 7
  %12 = load i32, i32* %11, align 4
  %13 = load %struct.cache_t*, %struct.cache_t** %3, align 8
  %14 = getelementptr inbounds %struct.cache_t, %struct.cache_t* %13, i32 0, i32 5
  %15 = load i32, i32* %14, align 4
  %16 = icmp slt i32 %12, %15
  br i1 %16, label %17, label %23

17:                                               ; preds = %9
  %18 = load i8*, i8** %4, align 8
  call void @free(i8* %18) #14
  %19 = load %struct.cache_t*, %struct.cache_t** %3, align 8
  %20 = getelementptr inbounds %struct.cache_t, %struct.cache_t* %19, i32 0, i32 5
  %21 = load i32, i32* %20, align 4
  %22 = add nsw i32 %21, -1
  store i32 %22, i32* %20, align 4
  br label %53

23:                                               ; preds = %9, %2
  br label %24

24:                                               ; preds = %23
  %25 = load %struct.cache_t*, %struct.cache_t** %3, align 8
  %26 = getelementptr inbounds %struct.cache_t, %struct.cache_t* %25, i32 0, i32 2
  %27 = getelementptr inbounds %struct.cache_head, %struct.cache_head* %26, i32 0, i32 0
  %28 = load %struct.cache_free_s*, %struct.cache_free_s** %27, align 8
  %29 = load i8*, i8** %4, align 8
  %30 = bitcast i8* %29 to %struct.cache_free_s*
  %31 = getelementptr inbounds %struct.cache_free_s, %struct.cache_free_s* %30, i32 0, i32 0
  %32 = getelementptr inbounds %struct.anon.8, %struct.anon.8* %31, i32 0, i32 0
  store %struct.cache_free_s* %28, %struct.cache_free_s** %32, align 8
  %33 = icmp eq %struct.cache_free_s* %28, null
  br i1 %33, label %34, label %42

34:                                               ; preds = %24
  %35 = load i8*, i8** %4, align 8
  %36 = bitcast i8* %35 to %struct.cache_free_s*
  %37 = getelementptr inbounds %struct.cache_free_s, %struct.cache_free_s* %36, i32 0, i32 0
  %38 = getelementptr inbounds %struct.anon.8, %struct.anon.8* %37, i32 0, i32 0
  %39 = load %struct.cache_t*, %struct.cache_t** %3, align 8
  %40 = getelementptr inbounds %struct.cache_t, %struct.cache_t* %39, i32 0, i32 2
  %41 = getelementptr inbounds %struct.cache_head, %struct.cache_head* %40, i32 0, i32 1
  store %struct.cache_free_s** %38, %struct.cache_free_s*** %41, align 8
  br label %42

42:                                               ; preds = %34, %24
  %43 = load i8*, i8** %4, align 8
  %44 = bitcast i8* %43 to %struct.cache_free_s*
  %45 = load %struct.cache_t*, %struct.cache_t** %3, align 8
  %46 = getelementptr inbounds %struct.cache_t, %struct.cache_t* %45, i32 0, i32 2
  %47 = getelementptr inbounds %struct.cache_head, %struct.cache_head* %46, i32 0, i32 0
  store %struct.cache_free_s* %44, %struct.cache_free_s** %47, align 8
  br label %48

48:                                               ; preds = %42
  %49 = load %struct.cache_t*, %struct.cache_t** %3, align 8
  %50 = getelementptr inbounds %struct.cache_t, %struct.cache_t* %49, i32 0, i32 6
  %51 = load i32, i32* %50, align 8
  %52 = add nsw i32 %51, 1
  store i32 %52, i32* %50, align 8
  br label %53

53:                                               ; preds = %48, %17
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @bipbuf_unused(%struct.bipbuf_t* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.bipbuf_t*, align 8
  store %struct.bipbuf_t* %0, %struct.bipbuf_t** %3, align 8
  %4 = load %struct.bipbuf_t*, %struct.bipbuf_t** %3, align 8
  %5 = getelementptr inbounds %struct.bipbuf_t, %struct.bipbuf_t* %4, i32 0, i32 4
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 1, %6
  br i1 %7, label %8, label %16

8:                                                ; preds = %1
  %9 = load %struct.bipbuf_t*, %struct.bipbuf_t** %3, align 8
  %10 = getelementptr inbounds %struct.bipbuf_t, %struct.bipbuf_t* %9, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = load %struct.bipbuf_t*, %struct.bipbuf_t** %3, align 8
  %13 = getelementptr inbounds %struct.bipbuf_t, %struct.bipbuf_t* %12, i32 0, i32 3
  %14 = load i32, i32* %13, align 8
  %15 = sub i32 %11, %14
  store i32 %15, i32* %2, align 4
  br label %26

16:                                               ; preds = %1
  %17 = load %struct.bipbuf_t*, %struct.bipbuf_t** %3, align 8
  %18 = getelementptr inbounds %struct.bipbuf_t, %struct.bipbuf_t* %17, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = load %struct.bipbuf_t*, %struct.bipbuf_t** %3, align 8
  %21 = getelementptr inbounds %struct.bipbuf_t, %struct.bipbuf_t* %20, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i64
  %24 = sub i64 %19, %23
  %25 = trunc i64 %24 to i32
  store i32 %25, i32* %2, align 4
  br label %26

26:                                               ; preds = %16, %8
  %27 = load i32, i32* %2, align 4
  ret i32 %27
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @bipbuf_size(%struct.bipbuf_t* %0) #0 {
  %2 = alloca %struct.bipbuf_t*, align 8
  store %struct.bipbuf_t* %0, %struct.bipbuf_t** %2, align 8
  %3 = load %struct.bipbuf_t*, %struct.bipbuf_t** %2, align 8
  %4 = getelementptr inbounds %struct.bipbuf_t, %struct.bipbuf_t* %3, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = trunc i64 %5 to i32
  ret i32 %6
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @bipbuf_used(%struct.bipbuf_t* %0) #0 {
  %2 = alloca %struct.bipbuf_t*, align 8
  store %struct.bipbuf_t* %0, %struct.bipbuf_t** %2, align 8
  %3 = load %struct.bipbuf_t*, %struct.bipbuf_t** %2, align 8
  %4 = getelementptr inbounds %struct.bipbuf_t, %struct.bipbuf_t* %3, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = load %struct.bipbuf_t*, %struct.bipbuf_t** %2, align 8
  %7 = getelementptr inbounds %struct.bipbuf_t, %struct.bipbuf_t* %6, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = sub i32 %5, %8
  %10 = load %struct.bipbuf_t*, %struct.bipbuf_t** %2, align 8
  %11 = getelementptr inbounds %struct.bipbuf_t, %struct.bipbuf_t* %10, i32 0, i32 3
  %12 = load i32, i32* %11, align 8
  %13 = add i32 %9, %12
  ret i32 %13
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @bipbuf_init(%struct.bipbuf_t* %0, i32 %1) #0 {
  %3 = alloca %struct.bipbuf_t*, align 8
  %4 = alloca i32, align 4
  store %struct.bipbuf_t* %0, %struct.bipbuf_t** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %struct.bipbuf_t*, %struct.bipbuf_t** %3, align 8
  %6 = getelementptr inbounds %struct.bipbuf_t, %struct.bipbuf_t* %5, i32 0, i32 3
  store i32 0, i32* %6, align 8
  %7 = load %struct.bipbuf_t*, %struct.bipbuf_t** %3, align 8
  %8 = getelementptr inbounds %struct.bipbuf_t, %struct.bipbuf_t* %7, i32 0, i32 2
  store i32 0, i32* %8, align 4
  %9 = load %struct.bipbuf_t*, %struct.bipbuf_t** %3, align 8
  %10 = getelementptr inbounds %struct.bipbuf_t, %struct.bipbuf_t* %9, i32 0, i32 1
  store i32 0, i32* %10, align 8
  %11 = load i32, i32* %4, align 4
  %12 = zext i32 %11 to i64
  %13 = load %struct.bipbuf_t*, %struct.bipbuf_t** %3, align 8
  %14 = getelementptr inbounds %struct.bipbuf_t, %struct.bipbuf_t* %13, i32 0, i32 0
  store i64 %12, i64* %14, align 8
  %15 = load %struct.bipbuf_t*, %struct.bipbuf_t** %3, align 8
  %16 = getelementptr inbounds %struct.bipbuf_t, %struct.bipbuf_t* %15, i32 0, i32 4
  store i32 0, i32* %16, align 4
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.bipbuf_t* @bipbuf_new(i32 %0) #0 {
  %2 = alloca %struct.bipbuf_t*, align 8
  %3 = alloca i32, align 4
  %4 = alloca %struct.bipbuf_t*, align 8
  store i32 %0, i32* %3, align 4
  %5 = load i32, i32* %3, align 4
  %6 = call i64 @bipbuf_sizeof(i32 %5)
  %7 = call noalias i8* @malloc(i64 %6) #14
  %8 = bitcast i8* %7 to %struct.bipbuf_t*
  store %struct.bipbuf_t* %8, %struct.bipbuf_t** %4, align 8
  %9 = load %struct.bipbuf_t*, %struct.bipbuf_t** %4, align 8
  %10 = icmp ne %struct.bipbuf_t* %9, null
  br i1 %10, label %12, label %11

11:                                               ; preds = %1
  store %struct.bipbuf_t* null, %struct.bipbuf_t** %2, align 8
  br label %16

12:                                               ; preds = %1
  %13 = load %struct.bipbuf_t*, %struct.bipbuf_t** %4, align 8
  %14 = load i32, i32* %3, align 4
  call void @bipbuf_init(%struct.bipbuf_t* %13, i32 %14)
  %15 = load %struct.bipbuf_t*, %struct.bipbuf_t** %4, align 8
  store %struct.bipbuf_t* %15, %struct.bipbuf_t** %2, align 8
  br label %16

16:                                               ; preds = %12, %11
  %17 = load %struct.bipbuf_t*, %struct.bipbuf_t** %2, align 8
  ret %struct.bipbuf_t* %17
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @bipbuf_sizeof(i32 %0) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = zext i32 %3 to i64
  %5 = add i64 24, %4
  ret i64 %5
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @bipbuf_free(%struct.bipbuf_t* %0) #0 {
  %2 = alloca %struct.bipbuf_t*, align 8
  store %struct.bipbuf_t* %0, %struct.bipbuf_t** %2, align 8
  %3 = load %struct.bipbuf_t*, %struct.bipbuf_t** %2, align 8
  %4 = bitcast %struct.bipbuf_t* %3 to i8*
  call void @free(i8* %4) #14
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @bipbuf_is_empty(%struct.bipbuf_t* %0) #0 {
  %2 = alloca %struct.bipbuf_t*, align 8
  store %struct.bipbuf_t* %0, %struct.bipbuf_t** %2, align 8
  %3 = load %struct.bipbuf_t*, %struct.bipbuf_t** %2, align 8
  %4 = getelementptr inbounds %struct.bipbuf_t, %struct.bipbuf_t* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = load %struct.bipbuf_t*, %struct.bipbuf_t** %2, align 8
  %7 = getelementptr inbounds %struct.bipbuf_t, %struct.bipbuf_t* %6, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %5, %8
  %10 = zext i1 %9 to i32
  ret i32 %10
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @bipbuf_request(%struct.bipbuf_t* %0, i32 %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct.bipbuf_t*, align 8
  %5 = alloca i32, align 4
  store %struct.bipbuf_t* %0, %struct.bipbuf_t** %4, align 8
  store i32 %1, i32* %5, align 4
  %6 = load %struct.bipbuf_t*, %struct.bipbuf_t** %4, align 8
  %7 = call i32 @bipbuf_unused(%struct.bipbuf_t* %6)
  %8 = load i32, i32* %5, align 4
  %9 = icmp slt i32 %7, %8
  br i1 %9, label %10, label %11

10:                                               ; preds = %2
  store i8* null, i8** %3, align 8
  br label %34

11:                                               ; preds = %2
  %12 = load %struct.bipbuf_t*, %struct.bipbuf_t** %4, align 8
  %13 = getelementptr inbounds %struct.bipbuf_t, %struct.bipbuf_t* %12, i32 0, i32 4
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 1, %14
  br i1 %15, label %16, label %25

16:                                               ; preds = %11
  %17 = load %struct.bipbuf_t*, %struct.bipbuf_t** %4, align 8
  %18 = getelementptr inbounds %struct.bipbuf_t, %struct.bipbuf_t* %17, i32 0, i32 5
  %19 = getelementptr inbounds [0 x i8], [0 x i8]* %18, i64 0, i64 0
  %20 = load %struct.bipbuf_t*, %struct.bipbuf_t** %4, align 8
  %21 = getelementptr inbounds %struct.bipbuf_t, %struct.bipbuf_t* %20, i32 0, i32 3
  %22 = load i32, i32* %21, align 8
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds i8, i8* %19, i64 %23
  store i8* %24, i8** %3, align 8
  br label %34

25:                                               ; preds = %11
  %26 = load %struct.bipbuf_t*, %struct.bipbuf_t** %4, align 8
  %27 = getelementptr inbounds %struct.bipbuf_t, %struct.bipbuf_t* %26, i32 0, i32 5
  %28 = getelementptr inbounds [0 x i8], [0 x i8]* %27, i64 0, i64 0
  %29 = load %struct.bipbuf_t*, %struct.bipbuf_t** %4, align 8
  %30 = getelementptr inbounds %struct.bipbuf_t, %struct.bipbuf_t* %29, i32 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i8, i8* %28, i64 %32
  store i8* %33, i8** %3, align 8
  br label %34

34:                                               ; preds = %25, %16, %10
  %35 = load i8*, i8** %3, align 8
  ret i8* %35
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @bipbuf_push(%struct.bipbuf_t* %0, i32 %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.bipbuf_t*, align 8
  %5 = alloca i32, align 4
  store %struct.bipbuf_t* %0, %struct.bipbuf_t** %4, align 8
  store i32 %1, i32* %5, align 4
  %6 = load %struct.bipbuf_t*, %struct.bipbuf_t** %4, align 8
  %7 = call i32 @bipbuf_unused(%struct.bipbuf_t* %6)
  %8 = load i32, i32* %5, align 4
  %9 = icmp slt i32 %7, %8
  br i1 %9, label %10, label %11

10:                                               ; preds = %2
  store i32 0, i32* %3, align 4
  br label %31

11:                                               ; preds = %2
  %12 = load %struct.bipbuf_t*, %struct.bipbuf_t** %4, align 8
  %13 = getelementptr inbounds %struct.bipbuf_t, %struct.bipbuf_t* %12, i32 0, i32 4
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 1, %14
  br i1 %15, label %16, label %22

16:                                               ; preds = %11
  %17 = load i32, i32* %5, align 4
  %18 = load %struct.bipbuf_t*, %struct.bipbuf_t** %4, align 8
  %19 = getelementptr inbounds %struct.bipbuf_t, %struct.bipbuf_t* %18, i32 0, i32 3
  %20 = load i32, i32* %19, align 8
  %21 = add i32 %20, %17
  store i32 %21, i32* %19, align 8
  br label %28

22:                                               ; preds = %11
  %23 = load i32, i32* %5, align 4
  %24 = load %struct.bipbuf_t*, %struct.bipbuf_t** %4, align 8
  %25 = getelementptr inbounds %struct.bipbuf_t, %struct.bipbuf_t* %24, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = add i32 %26, %23
  store i32 %27, i32* %25, align 4
  br label %28

28:                                               ; preds = %22, %16
  %29 = load %struct.bipbuf_t*, %struct.bipbuf_t** %4, align 8
  call void @__check_for_switch_to_b(%struct.bipbuf_t* %29)
  %30 = load i32, i32* %5, align 4
  store i32 %30, i32* %3, align 4
  br label %31

31:                                               ; preds = %28, %10
  %32 = load i32, i32* %3, align 4
  ret i32 %32
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @__check_for_switch_to_b(%struct.bipbuf_t* %0) #0 {
  %2 = alloca %struct.bipbuf_t*, align 8
  store %struct.bipbuf_t* %0, %struct.bipbuf_t** %2, align 8
  %3 = load %struct.bipbuf_t*, %struct.bipbuf_t** %2, align 8
  %4 = getelementptr inbounds %struct.bipbuf_t, %struct.bipbuf_t* %3, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = load %struct.bipbuf_t*, %struct.bipbuf_t** %2, align 8
  %7 = getelementptr inbounds %struct.bipbuf_t, %struct.bipbuf_t* %6, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = sub i64 %5, %9
  %11 = load %struct.bipbuf_t*, %struct.bipbuf_t** %2, align 8
  %12 = getelementptr inbounds %struct.bipbuf_t, %struct.bipbuf_t* %11, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = load %struct.bipbuf_t*, %struct.bipbuf_t** %2, align 8
  %15 = getelementptr inbounds %struct.bipbuf_t, %struct.bipbuf_t* %14, i32 0, i32 3
  %16 = load i32, i32* %15, align 8
  %17 = sub i32 %13, %16
  %18 = zext i32 %17 to i64
  %19 = icmp ult i64 %10, %18
  br i1 %19, label %20, label %23

20:                                               ; preds = %1
  %21 = load %struct.bipbuf_t*, %struct.bipbuf_t** %2, align 8
  %22 = getelementptr inbounds %struct.bipbuf_t, %struct.bipbuf_t* %21, i32 0, i32 4
  store i32 1, i32* %22, align 4
  br label %23

23:                                               ; preds = %20, %1
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @bipbuf_offer(%struct.bipbuf_t* %0, i8* %1, i32 %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.bipbuf_t*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  store %struct.bipbuf_t* %0, %struct.bipbuf_t** %5, align 8
  store i8* %1, i8** %6, align 8
  store i32 %2, i32* %7, align 4
  %8 = load %struct.bipbuf_t*, %struct.bipbuf_t** %5, align 8
  %9 = call i32 @bipbuf_unused(%struct.bipbuf_t* %8)
  %10 = load i32, i32* %7, align 4
  %11 = icmp slt i32 %9, %10
  br i1 %11, label %12, label %13

12:                                               ; preds = %3
  store i32 0, i32* %4, align 4
  br label %55

13:                                               ; preds = %3
  %14 = load %struct.bipbuf_t*, %struct.bipbuf_t** %5, align 8
  %15 = getelementptr inbounds %struct.bipbuf_t, %struct.bipbuf_t* %14, i32 0, i32 4
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 1, %16
  br i1 %17, label %18, label %35

18:                                               ; preds = %13
  %19 = load %struct.bipbuf_t*, %struct.bipbuf_t** %5, align 8
  %20 = getelementptr inbounds %struct.bipbuf_t, %struct.bipbuf_t* %19, i32 0, i32 5
  %21 = getelementptr inbounds [0 x i8], [0 x i8]* %20, i64 0, i64 0
  %22 = load %struct.bipbuf_t*, %struct.bipbuf_t** %5, align 8
  %23 = getelementptr inbounds %struct.bipbuf_t, %struct.bipbuf_t* %22, i32 0, i32 3
  %24 = load i32, i32* %23, align 8
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %21, i64 %25
  %27 = load i8*, i8** %6, align 8
  %28 = load i32, i32* %7, align 4
  %29 = sext i32 %28 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %26, i8* align 1 %27, i64 %29, i1 false)
  %30 = load i32, i32* %7, align 4
  %31 = load %struct.bipbuf_t*, %struct.bipbuf_t** %5, align 8
  %32 = getelementptr inbounds %struct.bipbuf_t, %struct.bipbuf_t* %31, i32 0, i32 3
  %33 = load i32, i32* %32, align 8
  %34 = add i32 %33, %30
  store i32 %34, i32* %32, align 8
  br label %52

35:                                               ; preds = %13
  %36 = load %struct.bipbuf_t*, %struct.bipbuf_t** %5, align 8
  %37 = getelementptr inbounds %struct.bipbuf_t, %struct.bipbuf_t* %36, i32 0, i32 5
  %38 = getelementptr inbounds [0 x i8], [0 x i8]* %37, i64 0, i64 0
  %39 = load %struct.bipbuf_t*, %struct.bipbuf_t** %5, align 8
  %40 = getelementptr inbounds %struct.bipbuf_t, %struct.bipbuf_t* %39, i32 0, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds i8, i8* %38, i64 %42
  %44 = load i8*, i8** %6, align 8
  %45 = load i32, i32* %7, align 4
  %46 = sext i32 %45 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %43, i8* align 1 %44, i64 %46, i1 false)
  %47 = load i32, i32* %7, align 4
  %48 = load %struct.bipbuf_t*, %struct.bipbuf_t** %5, align 8
  %49 = getelementptr inbounds %struct.bipbuf_t, %struct.bipbuf_t* %48, i32 0, i32 2
  %50 = load i32, i32* %49, align 4
  %51 = add i32 %50, %47
  store i32 %51, i32* %49, align 4
  br label %52

52:                                               ; preds = %35, %18
  %53 = load %struct.bipbuf_t*, %struct.bipbuf_t** %5, align 8
  call void @__check_for_switch_to_b(%struct.bipbuf_t* %53)
  %54 = load i32, i32* %7, align 4
  store i32 %54, i32* %4, align 4
  br label %55

55:                                               ; preds = %52, %12
  %56 = load i32, i32* %4, align 4
  ret i32 %56
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @bipbuf_peek(%struct.bipbuf_t* %0, i32 %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct.bipbuf_t*, align 8
  %5 = alloca i32, align 4
  store %struct.bipbuf_t* %0, %struct.bipbuf_t** %4, align 8
  store i32 %1, i32* %5, align 4
  %6 = load %struct.bipbuf_t*, %struct.bipbuf_t** %4, align 8
  %7 = getelementptr inbounds %struct.bipbuf_t, %struct.bipbuf_t* %6, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = load %struct.bipbuf_t*, %struct.bipbuf_t** %4, align 8
  %10 = getelementptr inbounds %struct.bipbuf_t, %struct.bipbuf_t* %9, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = load i32, i32* %5, align 4
  %13 = add i32 %11, %12
  %14 = zext i32 %13 to i64
  %15 = icmp ult i64 %8, %14
  br i1 %15, label %16, label %17

16:                                               ; preds = %2
  store i8* null, i8** %3, align 8
  br label %31

17:                                               ; preds = %2
  %18 = load %struct.bipbuf_t*, %struct.bipbuf_t** %4, align 8
  %19 = call i32 @bipbuf_is_empty(%struct.bipbuf_t* %18)
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %17
  store i8* null, i8** %3, align 8
  br label %31

22:                                               ; preds = %17
  %23 = load %struct.bipbuf_t*, %struct.bipbuf_t** %4, align 8
  %24 = getelementptr inbounds %struct.bipbuf_t, %struct.bipbuf_t* %23, i32 0, i32 5
  %25 = getelementptr inbounds [0 x i8], [0 x i8]* %24, i64 0, i64 0
  %26 = load %struct.bipbuf_t*, %struct.bipbuf_t** %4, align 8
  %27 = getelementptr inbounds %struct.bipbuf_t, %struct.bipbuf_t* %26, i32 0, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds i8, i8* %25, i64 %29
  store i8* %30, i8** %3, align 8
  br label %31

31:                                               ; preds = %22, %21, %16
  %32 = load i8*, i8** %3, align 8
  ret i8* %32
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @bipbuf_peek_all(%struct.bipbuf_t* %0, i32* %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct.bipbuf_t*, align 8
  %5 = alloca i32*, align 8
  store %struct.bipbuf_t* %0, %struct.bipbuf_t** %4, align 8
  store i32* %1, i32** %5, align 8
  %6 = load %struct.bipbuf_t*, %struct.bipbuf_t** %4, align 8
  %7 = call i32 @bipbuf_is_empty(%struct.bipbuf_t* %6)
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %2
  store i8* null, i8** %3, align 8
  br label %27

10:                                               ; preds = %2
  %11 = load %struct.bipbuf_t*, %struct.bipbuf_t** %4, align 8
  %12 = getelementptr inbounds %struct.bipbuf_t, %struct.bipbuf_t* %11, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = load %struct.bipbuf_t*, %struct.bipbuf_t** %4, align 8
  %15 = getelementptr inbounds %struct.bipbuf_t, %struct.bipbuf_t* %14, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = sub i32 %13, %16
  %18 = load i32*, i32** %5, align 8
  store i32 %17, i32* %18, align 4
  %19 = load %struct.bipbuf_t*, %struct.bipbuf_t** %4, align 8
  %20 = getelementptr inbounds %struct.bipbuf_t, %struct.bipbuf_t* %19, i32 0, i32 5
  %21 = getelementptr inbounds [0 x i8], [0 x i8]* %20, i64 0, i64 0
  %22 = load %struct.bipbuf_t*, %struct.bipbuf_t** %4, align 8
  %23 = getelementptr inbounds %struct.bipbuf_t, %struct.bipbuf_t* %22, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %21, i64 %25
  store i8* %26, i8** %3, align 8
  br label %27

27:                                               ; preds = %10, %9
  %28 = load i8*, i8** %3, align 8
  ret i8* %28
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @bipbuf_poll(%struct.bipbuf_t* %0, i32 %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct.bipbuf_t*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  store %struct.bipbuf_t* %0, %struct.bipbuf_t** %4, align 8
  store i32 %1, i32* %5, align 4
  %7 = load %struct.bipbuf_t*, %struct.bipbuf_t** %4, align 8
  %8 = call i32 @bipbuf_is_empty(%struct.bipbuf_t* %7)
  %9 = icmp ne i32 %8, 0
  br i1 %9, label %10, label %11

10:                                               ; preds = %2
  store i8* null, i8** %3, align 8
  br label %70

11:                                               ; preds = %2
  %12 = load %struct.bipbuf_t*, %struct.bipbuf_t** %4, align 8
  %13 = getelementptr inbounds %struct.bipbuf_t, %struct.bipbuf_t* %12, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = load %struct.bipbuf_t*, %struct.bipbuf_t** %4, align 8
  %16 = getelementptr inbounds %struct.bipbuf_t, %struct.bipbuf_t* %15, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = load i32, i32* %5, align 4
  %19 = add i32 %17, %18
  %20 = zext i32 %19 to i64
  %21 = icmp ult i64 %14, %20
  br i1 %21, label %22, label %23

22:                                               ; preds = %11
  store i8* null, i8** %3, align 8
  br label %70

23:                                               ; preds = %11
  %24 = load %struct.bipbuf_t*, %struct.bipbuf_t** %4, align 8
  %25 = getelementptr inbounds %struct.bipbuf_t, %struct.bipbuf_t* %24, i32 0, i32 5
  %26 = getelementptr inbounds [0 x i8], [0 x i8]* %25, i64 0, i64 0
  %27 = load %struct.bipbuf_t*, %struct.bipbuf_t** %4, align 8
  %28 = getelementptr inbounds %struct.bipbuf_t, %struct.bipbuf_t* %27, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds i8, i8* %26, i64 %30
  store i8* %31, i8** %6, align 8
  %32 = load i32, i32* %5, align 4
  %33 = load %struct.bipbuf_t*, %struct.bipbuf_t** %4, align 8
  %34 = getelementptr inbounds %struct.bipbuf_t, %struct.bipbuf_t* %33, i32 0, i32 1
  %35 = load i32, i32* %34, align 8
  %36 = add i32 %35, %32
  store i32 %36, i32* %34, align 8
  %37 = load %struct.bipbuf_t*, %struct.bipbuf_t** %4, align 8
  %38 = getelementptr inbounds %struct.bipbuf_t, %struct.bipbuf_t* %37, i32 0, i32 1
  %39 = load i32, i32* %38, align 8
  %40 = load %struct.bipbuf_t*, %struct.bipbuf_t** %4, align 8
  %41 = getelementptr inbounds %struct.bipbuf_t, %struct.bipbuf_t* %40, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %39, %42
  br i1 %43, label %44, label %67

44:                                               ; preds = %23
  %45 = load %struct.bipbuf_t*, %struct.bipbuf_t** %4, align 8
  %46 = getelementptr inbounds %struct.bipbuf_t, %struct.bipbuf_t* %45, i32 0, i32 4
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 1, %47
  br i1 %48, label %49, label %61

49:                                               ; preds = %44
  %50 = load %struct.bipbuf_t*, %struct.bipbuf_t** %4, align 8
  %51 = getelementptr inbounds %struct.bipbuf_t, %struct.bipbuf_t* %50, i32 0, i32 1
  store i32 0, i32* %51, align 8
  %52 = load %struct.bipbuf_t*, %struct.bipbuf_t** %4, align 8
  %53 = getelementptr inbounds %struct.bipbuf_t, %struct.bipbuf_t* %52, i32 0, i32 3
  %54 = load i32, i32* %53, align 8
  %55 = load %struct.bipbuf_t*, %struct.bipbuf_t** %4, align 8
  %56 = getelementptr inbounds %struct.bipbuf_t, %struct.bipbuf_t* %55, i32 0, i32 2
  store i32 %54, i32* %56, align 4
  %57 = load %struct.bipbuf_t*, %struct.bipbuf_t** %4, align 8
  %58 = getelementptr inbounds %struct.bipbuf_t, %struct.bipbuf_t* %57, i32 0, i32 4
  store i32 0, i32* %58, align 4
  %59 = load %struct.bipbuf_t*, %struct.bipbuf_t** %4, align 8
  %60 = getelementptr inbounds %struct.bipbuf_t, %struct.bipbuf_t* %59, i32 0, i32 3
  store i32 0, i32* %60, align 8
  br label %66

61:                                               ; preds = %44
  %62 = load %struct.bipbuf_t*, %struct.bipbuf_t** %4, align 8
  %63 = getelementptr inbounds %struct.bipbuf_t, %struct.bipbuf_t* %62, i32 0, i32 2
  store i32 0, i32* %63, align 4
  %64 = load %struct.bipbuf_t*, %struct.bipbuf_t** %4, align 8
  %65 = getelementptr inbounds %struct.bipbuf_t, %struct.bipbuf_t* %64, i32 0, i32 1
  store i32 0, i32* %65, align 8
  br label %66

66:                                               ; preds = %61, %49
  br label %67

67:                                               ; preds = %66, %23
  %68 = load %struct.bipbuf_t*, %struct.bipbuf_t** %4, align 8
  call void @__check_for_switch_to_b(%struct.bipbuf_t* %68)
  %69 = load i8*, i8** %6, align 8
  store i8* %69, i8** %3, align 8
  br label %70

70:                                               ; preds = %67, %22, %10
  %71 = load i8*, i8** %3, align 8
  ret i8* %71
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @base64_encode(i8* %0, i64 %1, i8* %2, i64 %3) #0 {
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i64, align 8
  store i8* %0, i8** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  store i64 %3, i64* %9, align 8
  %14 = load i64, i64* %7, align 8
  %15 = mul i64 %14, 4
  %16 = udiv i64 %15, 3
  %17 = add i64 %16, 4
  store i64 %17, i64* %13, align 8
  %18 = load i64, i64* %13, align 8
  %19 = udiv i64 %18, 72
  %20 = load i64, i64* %13, align 8
  %21 = add i64 %20, %19
  store i64 %21, i64* %13, align 8
  %22 = load i64, i64* %13, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %13, align 8
  %24 = load i64, i64* %13, align 8
  %25 = load i64, i64* %7, align 8
  %26 = icmp ult i64 %24, %25
  br i1 %26, label %27, label %28

27:                                               ; preds = %4
  store i64 0, i64* %5, align 8
  br label %184

28:                                               ; preds = %4
  %29 = load i64, i64* %13, align 8
  %30 = load i64, i64* %9, align 8
  %31 = icmp ugt i64 %29, %30
  br i1 %31, label %32, label %33

32:                                               ; preds = %28
  store i64 0, i64* %5, align 8
  br label %184

33:                                               ; preds = %28
  %34 = load i8*, i8** %8, align 8
  %35 = icmp eq i8* %34, null
  br i1 %35, label %36, label %37

36:                                               ; preds = %33
  store i64 0, i64* %5, align 8
  br label %184

37:                                               ; preds = %33
  %38 = load i8*, i8** %6, align 8
  %39 = load i64, i64* %7, align 8
  %40 = getelementptr inbounds i8, i8* %38, i64 %39
  store i8* %40, i8** %11, align 8
  %41 = load i8*, i8** %6, align 8
  store i8* %41, i8** %12, align 8
  %42 = load i8*, i8** %8, align 8
  store i8* %42, i8** %10, align 8
  br label %43

43:                                               ; preds = %50, %37
  %44 = load i8*, i8** %11, align 8
  %45 = load i8*, i8** %12, align 8
  %46 = ptrtoint i8* %44 to i64
  %47 = ptrtoint i8* %45 to i64
  %48 = sub i64 %46, %47
  %49 = icmp sge i64 %48, 3
  br i1 %49, label %50, label %107

50:                                               ; preds = %43
  %51 = load i8*, i8** %12, align 8
  %52 = getelementptr inbounds i8, i8* %51, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i32
  %55 = ashr i32 %54, 2
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds [65 x i8], [65 x i8]* @base64_table, i64 0, i64 %56
  %58 = load i8, i8* %57, align 1
  %59 = load i8*, i8** %10, align 8
  %60 = getelementptr inbounds i8, i8* %59, i32 1
  store i8* %60, i8** %10, align 8
  store i8 %58, i8* %59, align 1
  %61 = load i8*, i8** %12, align 8
  %62 = getelementptr inbounds i8, i8* %61, i64 0
  %63 = load i8, i8* %62, align 1
  %64 = zext i8 %63 to i32
  %65 = and i32 %64, 3
  %66 = shl i32 %65, 4
  %67 = load i8*, i8** %12, align 8
  %68 = getelementptr inbounds i8, i8* %67, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i32
  %71 = ashr i32 %70, 4
  %72 = or i32 %66, %71
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds [65 x i8], [65 x i8]* @base64_table, i64 0, i64 %73
  %75 = load i8, i8* %74, align 1
  %76 = load i8*, i8** %10, align 8
  %77 = getelementptr inbounds i8, i8* %76, i32 1
  store i8* %77, i8** %10, align 8
  store i8 %75, i8* %76, align 1
  %78 = load i8*, i8** %12, align 8
  %79 = getelementptr inbounds i8, i8* %78, i64 1
  %80 = load i8, i8* %79, align 1
  %81 = zext i8 %80 to i32
  %82 = and i32 %81, 15
  %83 = shl i32 %82, 2
  %84 = load i8*, i8** %12, align 8
  %85 = getelementptr inbounds i8, i8* %84, i64 2
  %86 = load i8, i8* %85, align 1
  %87 = zext i8 %86 to i32
  %88 = ashr i32 %87, 6
  %89 = or i32 %83, %88
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds [65 x i8], [65 x i8]* @base64_table, i64 0, i64 %90
  %92 = load i8, i8* %91, align 1
  %93 = load i8*, i8** %10, align 8
  %94 = getelementptr inbounds i8, i8* %93, i32 1
  store i8* %94, i8** %10, align 8
  store i8 %92, i8* %93, align 1
  %95 = load i8*, i8** %12, align 8
  %96 = getelementptr inbounds i8, i8* %95, i64 2
  %97 = load i8, i8* %96, align 1
  %98 = zext i8 %97 to i32
  %99 = and i32 %98, 63
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds [65 x i8], [65 x i8]* @base64_table, i64 0, i64 %100
  %102 = load i8, i8* %101, align 1
  %103 = load i8*, i8** %10, align 8
  %104 = getelementptr inbounds i8, i8* %103, i32 1
  store i8* %104, i8** %10, align 8
  store i8 %102, i8* %103, align 1
  %105 = load i8*, i8** %12, align 8
  %106 = getelementptr inbounds i8, i8* %105, i64 3
  store i8* %106, i8** %12, align 8
  br label %43, !llvm.loop !121

107:                                              ; preds = %43
  %108 = load i8*, i8** %11, align 8
  %109 = load i8*, i8** %12, align 8
  %110 = ptrtoint i8* %108 to i64
  %111 = ptrtoint i8* %109 to i64
  %112 = sub i64 %110, %111
  %113 = icmp ne i64 %112, 0
  br i1 %113, label %114, label %177

114:                                              ; preds = %107
  %115 = load i8*, i8** %12, align 8
  %116 = getelementptr inbounds i8, i8* %115, i64 0
  %117 = load i8, i8* %116, align 1
  %118 = zext i8 %117 to i32
  %119 = ashr i32 %118, 2
  %120 = sext i32 %119 to i64
  %121 = getelementptr inbounds [65 x i8], [65 x i8]* @base64_table, i64 0, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = load i8*, i8** %10, align 8
  %124 = getelementptr inbounds i8, i8* %123, i32 1
  store i8* %124, i8** %10, align 8
  store i8 %122, i8* %123, align 1
  %125 = load i8*, i8** %11, align 8
  %126 = load i8*, i8** %12, align 8
  %127 = ptrtoint i8* %125 to i64
  %128 = ptrtoint i8* %126 to i64
  %129 = sub i64 %127, %128
  %130 = icmp eq i64 %129, 1
  br i1 %130, label %131, label %145

131:                                              ; preds = %114
  %132 = load i8*, i8** %12, align 8
  %133 = getelementptr inbounds i8, i8* %132, i64 0
  %134 = load i8, i8* %133, align 1
  %135 = zext i8 %134 to i32
  %136 = and i32 %135, 3
  %137 = shl i32 %136, 4
  %138 = sext i32 %137 to i64
  %139 = getelementptr inbounds [65 x i8], [65 x i8]* @base64_table, i64 0, i64 %138
  %140 = load i8, i8* %139, align 1
  %141 = load i8*, i8** %10, align 8
  %142 = getelementptr inbounds i8, i8* %141, i32 1
  store i8* %142, i8** %10, align 8
  store i8 %140, i8* %141, align 1
  %143 = load i8*, i8** %10, align 8
  %144 = getelementptr inbounds i8, i8* %143, i32 1
  store i8* %144, i8** %10, align 8
  store i8 61, i8* %143, align 1
  br label %174

145:                                              ; preds = %114
  %146 = load i8*, i8** %12, align 8
  %147 = getelementptr inbounds i8, i8* %146, i64 0
  %148 = load i8, i8* %147, align 1
  %149 = zext i8 %148 to i32
  %150 = and i32 %149, 3
  %151 = shl i32 %150, 4
  %152 = load i8*, i8** %12, align 8
  %153 = getelementptr inbounds i8, i8* %152, i64 1
  %154 = load i8, i8* %153, align 1
  %155 = zext i8 %154 to i32
  %156 = ashr i32 %155, 4
  %157 = or i32 %151, %156
  %158 = sext i32 %157 to i64
  %159 = getelementptr inbounds [65 x i8], [65 x i8]* @base64_table, i64 0, i64 %158
  %160 = load i8, i8* %159, align 1
  %161 = load i8*, i8** %10, align 8
  %162 = getelementptr inbounds i8, i8* %161, i32 1
  store i8* %162, i8** %10, align 8
  store i8 %160, i8* %161, align 1
  %163 = load i8*, i8** %12, align 8
  %164 = getelementptr inbounds i8, i8* %163, i64 1
  %165 = load i8, i8* %164, align 1
  %166 = zext i8 %165 to i32
  %167 = and i32 %166, 15
  %168 = shl i32 %167, 2
  %169 = sext i32 %168 to i64
  %170 = getelementptr inbounds [65 x i8], [65 x i8]* @base64_table, i64 0, i64 %169
  %171 = load i8, i8* %170, align 1
  %172 = load i8*, i8** %10, align 8
  %173 = getelementptr inbounds i8, i8* %172, i32 1
  store i8* %173, i8** %10, align 8
  store i8 %171, i8* %172, align 1
  br label %174

174:                                              ; preds = %145, %131
  %175 = load i8*, i8** %10, align 8
  %176 = getelementptr inbounds i8, i8* %175, i32 1
  store i8* %176, i8** %10, align 8
  store i8 61, i8* %175, align 1
  br label %177

177:                                              ; preds = %174, %107
  %178 = load i8*, i8** %10, align 8
  store i8 0, i8* %178, align 1
  %179 = load i8*, i8** %10, align 8
  %180 = load i8*, i8** %8, align 8
  %181 = ptrtoint i8* %179 to i64
  %182 = ptrtoint i8* %180 to i64
  %183 = sub i64 %181, %182
  store i64 %183, i64* %5, align 8
  br label %184

184:                                              ; preds = %177, %36, %32, %27
  %185 = load i64, i64* %5, align 8
  ret i64 %185
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @base64_decode(i8* %0, i64 %1, i8* %2, i64 %3) #0 {
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i8*, align 8
  %11 = alloca [4 x i8], align 1
  %12 = alloca i8, align 1
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  %16 = alloca i32, align 4
  store i8* %0, i8** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  store i64 %3, i64* %9, align 8
  store i32 0, i32* %16, align 4
  store i64 0, i64* %14, align 8
  store i64 0, i64* %13, align 8
  br label %17

17:                                               ; preds = %35, %4
  %18 = load i64, i64* %13, align 8
  %19 = load i64, i64* %7, align 8
  %20 = icmp ult i64 %18, %19
  br i1 %20, label %21, label %38

21:                                               ; preds = %17
  %22 = load i8*, i8** %6, align 8
  %23 = load i64, i64* %13, align 8
  %24 = getelementptr inbounds i8, i8* %22, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i64
  %27 = getelementptr inbounds [256 x i8], [256 x i8]* @dtable, i64 0, i64 %26
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = icmp ne i32 %29, 128
  br i1 %30, label %31, label %34

31:                                               ; preds = %21
  %32 = load i64, i64* %14, align 8
  %33 = add i64 %32, 1
  store i64 %33, i64* %14, align 8
  br label %34

34:                                               ; preds = %31, %21
  br label %35

35:                                               ; preds = %34
  %36 = load i64, i64* %13, align 8
  %37 = add i64 %36, 1
  store i64 %37, i64* %13, align 8
  br label %17, !llvm.loop !122

38:                                               ; preds = %17
  %39 = load i64, i64* %14, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %45, label %41

41:                                               ; preds = %38
  %42 = load i64, i64* %14, align 8
  %43 = urem i64 %42, 4
  %44 = icmp ne i64 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %41, %38
  store i64 0, i64* %5, align 8
  br label %158

46:                                               ; preds = %41
  %47 = load i64, i64* %14, align 8
  %48 = udiv i64 %47, 4
  %49 = mul i64 %48, 3
  store i64 %49, i64* %15, align 8
  %50 = load i64, i64* %15, align 8
  %51 = load i64, i64* %9, align 8
  %52 = icmp ugt i64 %50, %51
  br i1 %52, label %53, label %54

53:                                               ; preds = %46
  store i64 0, i64* %5, align 8
  br label %158

54:                                               ; preds = %46
  %55 = load i8*, i8** %8, align 8
  store i8* %55, i8** %10, align 8
  %56 = load i8*, i8** %8, align 8
  %57 = icmp eq i8* %56, null
  br i1 %57, label %58, label %59

58:                                               ; preds = %54
  store i64 0, i64* %5, align 8
  br label %158

59:                                               ; preds = %54
  store i64 0, i64* %14, align 8
  store i64 0, i64* %13, align 8
  br label %60

60:                                               ; preds = %149, %59
  %61 = load i64, i64* %13, align 8
  %62 = load i64, i64* %7, align 8
  %63 = icmp ult i64 %61, %62
  br i1 %63, label %64, label %152

64:                                               ; preds = %60
  %65 = load i8*, i8** %6, align 8
  %66 = load i64, i64* %13, align 8
  %67 = getelementptr inbounds i8, i8* %65, i64 %66
  %68 = load i8, i8* %67, align 1
  %69 = zext i8 %68 to i64
  %70 = getelementptr inbounds [256 x i8], [256 x i8]* @dtable, i64 0, i64 %69
  %71 = load i8, i8* %70, align 1
  store i8 %71, i8* %12, align 1
  %72 = load i8, i8* %12, align 1
  %73 = zext i8 %72 to i32
  %74 = icmp eq i32 %73, 128
  br i1 %74, label %75, label %76

75:                                               ; preds = %64
  br label %149

76:                                               ; preds = %64
  %77 = load i8*, i8** %6, align 8
  %78 = load i64, i64* %13, align 8
  %79 = getelementptr inbounds i8, i8* %77, i64 %78
  %80 = load i8, i8* %79, align 1
  %81 = zext i8 %80 to i32
  %82 = icmp eq i32 %81, 61
  br i1 %82, label %83, label %86

83:                                               ; preds = %76
  %84 = load i32, i32* %16, align 4
  %85 = add nsw i32 %84, 1
  store i32 %85, i32* %16, align 4
  br label %86

86:                                               ; preds = %83, %76
  %87 = load i8, i8* %12, align 1
  %88 = load i64, i64* %14, align 8
  %89 = getelementptr inbounds [4 x i8], [4 x i8]* %11, i64 0, i64 %88
  store i8 %87, i8* %89, align 1
  %90 = load i64, i64* %14, align 8
  %91 = add i64 %90, 1
  store i64 %91, i64* %14, align 8
  %92 = load i64, i64* %14, align 8
  %93 = icmp eq i64 %92, 4
  br i1 %93, label %94, label %148

94:                                               ; preds = %86
  %95 = getelementptr inbounds [4 x i8], [4 x i8]* %11, i64 0, i64 0
  %96 = load i8, i8* %95, align 1
  %97 = zext i8 %96 to i32
  %98 = shl i32 %97, 2
  %99 = getelementptr inbounds [4 x i8], [4 x i8]* %11, i64 0, i64 1
  %100 = load i8, i8* %99, align 1
  %101 = zext i8 %100 to i32
  %102 = ashr i32 %101, 4
  %103 = or i32 %98, %102
  %104 = trunc i32 %103 to i8
  %105 = load i8*, i8** %10, align 8
  %106 = getelementptr inbounds i8, i8* %105, i32 1
  store i8* %106, i8** %10, align 8
  store i8 %104, i8* %105, align 1
  %107 = getelementptr inbounds [4 x i8], [4 x i8]* %11, i64 0, i64 1
  %108 = load i8, i8* %107, align 1
  %109 = zext i8 %108 to i32
  %110 = shl i32 %109, 4
  %111 = getelementptr inbounds [4 x i8], [4 x i8]* %11, i64 0, i64 2
  %112 = load i8, i8* %111, align 1
  %113 = zext i8 %112 to i32
  %114 = ashr i32 %113, 2
  %115 = or i32 %110, %114
  %116 = trunc i32 %115 to i8
  %117 = load i8*, i8** %10, align 8
  %118 = getelementptr inbounds i8, i8* %117, i32 1
  store i8* %118, i8** %10, align 8
  store i8 %116, i8* %117, align 1
  %119 = getelementptr inbounds [4 x i8], [4 x i8]* %11, i64 0, i64 2
  %120 = load i8, i8* %119, align 1
  %121 = zext i8 %120 to i32
  %122 = shl i32 %121, 6
  %123 = getelementptr inbounds [4 x i8], [4 x i8]* %11, i64 0, i64 3
  %124 = load i8, i8* %123, align 1
  %125 = zext i8 %124 to i32
  %126 = or i32 %122, %125
  %127 = trunc i32 %126 to i8
  %128 = load i8*, i8** %10, align 8
  %129 = getelementptr inbounds i8, i8* %128, i32 1
  store i8* %129, i8** %10, align 8
  store i8 %127, i8* %128, align 1
  store i64 0, i64* %14, align 8
  %130 = load i32, i32* %16, align 4
  %131 = icmp ne i32 %130, 0
  br i1 %131, label %132, label %147

132:                                              ; preds = %94
  %133 = load i32, i32* %16, align 4
  %134 = icmp eq i32 %133, 1
  br i1 %134, label %135, label %138

135:                                              ; preds = %132
  %136 = load i8*, i8** %10, align 8
  %137 = getelementptr inbounds i8, i8* %136, i32 -1
  store i8* %137, i8** %10, align 8
  br label %146

138:                                              ; preds = %132
  %139 = load i32, i32* %16, align 4
  %140 = icmp eq i32 %139, 2
  br i1 %140, label %141, label %144

141:                                              ; preds = %138
  %142 = load i8*, i8** %10, align 8
  %143 = getelementptr inbounds i8, i8* %142, i64 -2
  store i8* %143, i8** %10, align 8
  br label %145

144:                                              ; preds = %138
  store i64 0, i64* %5, align 8
  br label %158

145:                                              ; preds = %141
  br label %146

146:                                              ; preds = %145, %135
  br label %152

147:                                              ; preds = %94
  br label %148

148:                                              ; preds = %147, %86
  br label %149

149:                                              ; preds = %148, %75
  %150 = load i64, i64* %13, align 8
  %151 = add i64 %150, 1
  store i64 %151, i64* %13, align 8
  br label %60, !llvm.loop !123

152:                                              ; preds = %146, %60
  %153 = load i8*, i8** %10, align 8
  %154 = load i8*, i8** %8, align 8
  %155 = ptrtoint i8* %153 to i64
  %156 = ptrtoint i8* %154 to i64
  %157 = sub i64 %155, %156
  store i64 %157, i64* %5, align 8
  br label %158

158:                                              ; preds = %152, %144, %58, %53, %45
  %159 = load i64, i64* %5, align 8
  ret i64 %159
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @logger_get_gid() #0 {
  %1 = atomicrmw add i64* @logger_gid, i64 1 seq_cst
  %2 = add i64 %1, 1
  ret i64 %2
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @logger_set_gid(i64 %0) #0 {
  %2 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  %3 = load i64, i64* %2, align 8
  %4 = atomicrmw add i64* @logger_gid, i64 %3 seq_cst
  %5 = add i64 %4, %3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @logger_init() #0 {
  store %struct._logger* null, %struct._logger** @logger_stack_head, align 8
  store %struct._logger* null, %struct._logger** @logger_stack_tail, align 8
  %1 = call i32 @pthread_key_create(i32* @logger_key, void (i8*)* null) #14
  %2 = call i32 @start_logger_thread()
  %3 = icmp ne i32 %2, 0
  br i1 %3, label %4, label %5

4:                                                ; preds = %0
  call void @abort() #17
  unreachable

5:                                                ; preds = %0
  ret void
}

; Function Attrs: nounwind
declare dso_local i32 @pthread_key_create(i32*, void (i8*)*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @start_logger_thread() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  store volatile i32 1, i32* @do_run_logger_thread, align 4
  %3 = call i32 @pthread_create(i64* @logger_tid, %union.pthread_attr_t* null, i8* (i8*)* @logger_thread, i8* null) #14
  store i32 %3, i32* %2, align 4
  %4 = icmp ne i32 %3, 0
  br i1 %4, label %5, label %10

5:                                                ; preds = %0
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %7 = load i32, i32* %2, align 4
  %8 = call i8* @strerror(i32 %7) #14
  %9 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2.831, i64 0, i64 0), i8* %8)
  store i32 -1, i32* %1, align 4
  br label %11

10:                                               ; preds = %0
  store i32 0, i32* %1, align 4
  br label %11

11:                                               ; preds = %10, %5
  %12 = load i32, i32* %1, align 4
  ret i32 %12
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @logger_thread(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct._logger*, align 8
  %6 = alloca %struct.logger_stats, align 8
  store i8* %0, i8** %2, align 8
  store i32 1000, i32* %3, align 4
  br label %7

7:                                                ; preds = %65, %1
  %8 = load volatile i32, i32* @do_run_logger_thread, align 4
  %9 = icmp ne i32 %8, 0
  br i1 %9, label %10, label %66

10:                                               ; preds = %7
  store i32 0, i32* %4, align 4
  %11 = bitcast %struct.logger_stats* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 40, i1 false)
  %12 = load i32, i32* %3, align 4
  %13 = icmp ugt i32 %12, 1000
  br i1 %13, label %14, label %17

14:                                               ; preds = %10
  %15 = load i32, i32* %3, align 4
  %16 = call i32 @usleep(i32 %15)
  br label %17

17:                                               ; preds = %14, %10
  %18 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @logger_stack_lock) #14
  %19 = load i32, i32* @watcher_count, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %17
  %22 = call i32 @pthread_cond_wait(%union.pthread_cond_t* @logger_stack_cond, %union.pthread_mutex_t* @logger_stack_lock)
  br label %23

23:                                               ; preds = %21, %17
  %24 = load %struct._logger*, %struct._logger** @logger_stack_head, align 8
  store %struct._logger* %24, %struct._logger** %5, align 8
  br label %25

25:                                               ; preds = %33, %23
  %26 = load %struct._logger*, %struct._logger** %5, align 8
  %27 = icmp ne %struct._logger* %26, null
  br i1 %27, label %28, label %37

28:                                               ; preds = %25
  %29 = load %struct._logger*, %struct._logger** %5, align 8
  %30 = call i32 @logger_thread_read(%struct._logger* %29, %struct.logger_stats* %6)
  %31 = load i32, i32* %4, align 4
  %32 = add nsw i32 %31, %30
  store i32 %32, i32* %4, align 4
  br label %33

33:                                               ; preds = %28
  %34 = load %struct._logger*, %struct._logger** %5, align 8
  %35 = getelementptr inbounds %struct._logger, %struct._logger* %34, i32 0, i32 1
  %36 = load %struct._logger*, %struct._logger** %35, align 8
  store %struct._logger* %36, %struct._logger** %5, align 8
  br label %25, !llvm.loop !124

37:                                               ; preds = %25
  %38 = call i32 @logger_thread_poll_watchers(i32 1, i32 -1)
  %39 = load i32, i32* @watcher_count, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds %struct.logger_stats, %struct.logger_stats* %6, i32 0, i32 4
  store i64 %40, i64* %41, align 8
  %42 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @logger_stack_lock) #14
  %43 = load i32, i32* %4, align 4
  %44 = icmp ne i32 %43, 0
  br i1 %44, label %58, label %45

45:                                               ; preds = %37
  %46 = load i32, i32* %3, align 4
  %47 = icmp ult i32 %46, 1000000
  br i1 %47, label %48, label %53

48:                                               ; preds = %45
  %49 = load i32, i32* %3, align 4
  %50 = udiv i32 %49, 8
  %51 = load i32, i32* %3, align 4
  %52 = add i32 %51, %50
  store i32 %52, i32* %3, align 4
  br label %53

53:                                               ; preds = %48, %45
  %54 = load i32, i32* %3, align 4
  %55 = icmp ugt i32 %54, 1000000
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  store i32 1000000, i32* %3, align 4
  br label %57

57:                                               ; preds = %56, %53
  br label %65

58:                                               ; preds = %37
  %59 = load i32, i32* %3, align 4
  %60 = udiv i32 %59, 2
  store i32 %60, i32* %3, align 4
  %61 = load i32, i32* %3, align 4
  %62 = icmp ult i32 %61, 1000
  br i1 %62, label %63, label %64

63:                                               ; preds = %58
  store i32 1000, i32* %3, align 4
  br label %64

64:                                               ; preds = %63, %58
  br label %65

65:                                               ; preds = %64, %57
  call void @logger_thread_flush_stats(%struct.logger_stats* %6)
  br label %7, !llvm.loop !125

66:                                               ; preds = %7
  ret i8* null
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @logger_thread_read(%struct._logger* %0, %struct.logger_stats* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct._logger*, align 8
  %5 = alloca %struct.logger_stats*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca [4096 x i8], align 16
  %10 = alloca %struct._logentry*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store %struct._logger* %0, %struct._logger** %4, align 8
  store %struct.logger_stats* %1, %struct.logger_stats** %5, align 8
  store i32 0, i32* %7, align 4
  %13 = load %struct._logger*, %struct._logger** %4, align 8
  %14 = getelementptr inbounds %struct._logger, %struct._logger* %13, i32 0, i32 2
  %15 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %14) #14
  %16 = load %struct._logger*, %struct._logger** %4, align 8
  %17 = getelementptr inbounds %struct._logger, %struct._logger* %16, i32 0, i32 9
  %18 = load %struct.bipbuf_t*, %struct.bipbuf_t** %17, align 8
  %19 = call i8* @bipbuf_peek_all(%struct.bipbuf_t* %18, i32* %6)
  store i8* %19, i8** %8, align 8
  %20 = load %struct._logger*, %struct._logger** %4, align 8
  %21 = getelementptr inbounds %struct._logger, %struct._logger* %20, i32 0, i32 2
  %22 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %21) #14
  %23 = load i8*, i8** %8, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %25, label %26

25:                                               ; preds = %2
  store i32 0, i32* %3, align 4
  br label %108

26:                                               ; preds = %2
  br label %27

27:                                               ; preds = %56, %26
  %28 = load i32, i32* %7, align 4
  %29 = load i32, i32* %6, align 4
  %30 = icmp ult i32 %28, %29
  br i1 %30, label %31, label %34

31:                                               ; preds = %27
  %32 = load i32, i32* @watcher_count, align 4
  %33 = icmp sgt i32 %32, 0
  br label %34

34:                                               ; preds = %31, %27
  %35 = phi i1 [ false, %27 ], [ %33, %31 ]
  br i1 %35, label %36, label %71

36:                                               ; preds = %34
  store i32 0, i32* %12, align 4
  %37 = load i8*, i8** %8, align 8
  %38 = load i32, i32* %7, align 4
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %37, i64 %39
  %41 = bitcast i8* %40 to %struct._logentry*
  store %struct._logentry* %41, %struct._logentry** %10, align 8
  %42 = load %struct._logentry*, %struct._logentry** %10, align 8
  %43 = load %struct.logger_stats*, %struct.logger_stats** %5, align 8
  %44 = getelementptr inbounds [4096 x i8], [4096 x i8]* %9, i64 0, i64 0
  %45 = call i32 @logger_thread_parse_entry(%struct._logentry* %42, %struct.logger_stats* %43, i8* %44, i32* %12)
  store i32 %45, i32* %11, align 4
  %46 = load i32, i32* %11, align 4
  %47 = icmp ne i32 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %36
  %49 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %50 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %49, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.3.833, i64 0, i64 0))
  br label %56

51:                                               ; preds = %36
  %52 = load %struct._logentry*, %struct._logentry** %10, align 8
  %53 = load %struct.logger_stats*, %struct.logger_stats** %5, align 8
  %54 = getelementptr inbounds [4096 x i8], [4096 x i8]* %9, i64 0, i64 0
  %55 = load i32, i32* %12, align 4
  call void @logger_thread_write_entry(%struct._logentry* %52, %struct.logger_stats* %53, i8* %54, i32 %55)
  br label %56

56:                                               ; preds = %51, %48
  %57 = load %struct._logentry*, %struct._logentry** %10, align 8
  %58 = getelementptr inbounds %struct._logentry, %struct._logentry* %57, i32 0, i32 5
  %59 = load i32, i32* %58, align 8
  %60 = sext i32 %59 to i64
  %61 = add i64 40, %60
  %62 = load %struct._logentry*, %struct._logentry** %10, align 8
  %63 = getelementptr inbounds %struct._logentry, %struct._logentry* %62, i32 0, i32 1
  %64 = load i8, i8* %63, align 4
  %65 = zext i8 %64 to i64
  %66 = add i64 %61, %65
  %67 = load i32, i32* %7, align 4
  %68 = zext i32 %67 to i64
  %69 = add i64 %68, %66
  %70 = trunc i64 %69 to i32
  store i32 %70, i32* %7, align 4
  br label %27, !llvm.loop !126

71:                                               ; preds = %34
  %72 = load %struct._logger*, %struct._logger** %4, align 8
  %73 = getelementptr inbounds %struct._logger, %struct._logger* %72, i32 0, i32 2
  %74 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %73) #14
  %75 = load %struct._logger*, %struct._logger** %4, align 8
  %76 = getelementptr inbounds %struct._logger, %struct._logger* %75, i32 0, i32 9
  %77 = load %struct.bipbuf_t*, %struct.bipbuf_t** %76, align 8
  %78 = load i32, i32* %6, align 4
  %79 = call i8* @bipbuf_poll(%struct.bipbuf_t* %77, i32 %78)
  store i8* %79, i8** %8, align 8
  %80 = load %struct._logger*, %struct._logger** %4, align 8
  %81 = getelementptr inbounds %struct._logger, %struct._logger* %80, i32 0, i32 3
  %82 = load i64, i64* %81, align 8
  %83 = load %struct.logger_stats*, %struct.logger_stats** %5, align 8
  %84 = getelementptr inbounds %struct.logger_stats, %struct.logger_stats* %83, i32 0, i32 1
  %85 = load i64, i64* %84, align 8
  %86 = add i64 %85, %82
  store i64 %86, i64* %84, align 8
  %87 = load %struct._logger*, %struct._logger** %4, align 8
  %88 = getelementptr inbounds %struct._logger, %struct._logger* %87, i32 0, i32 4
  %89 = load i64, i64* %88, align 8
  %90 = load %struct.logger_stats*, %struct.logger_stats** %5, align 8
  %91 = getelementptr inbounds %struct.logger_stats, %struct.logger_stats* %90, i32 0, i32 0
  %92 = load i64, i64* %91, align 8
  %93 = add i64 %92, %89
  store i64 %93, i64* %91, align 8
  %94 = load %struct._logger*, %struct._logger** %4, align 8
  %95 = getelementptr inbounds %struct._logger, %struct._logger* %94, i32 0, i32 3
  store i64 0, i64* %95, align 8
  %96 = load %struct._logger*, %struct._logger** %4, align 8
  %97 = getelementptr inbounds %struct._logger, %struct._logger* %96, i32 0, i32 4
  store i64 0, i64* %97, align 8
  %98 = load %struct._logger*, %struct._logger** %4, align 8
  %99 = getelementptr inbounds %struct._logger, %struct._logger* %98, i32 0, i32 2
  %100 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %99) #14
  %101 = load i8*, i8** %8, align 8
  %102 = icmp eq i8* %101, null
  br i1 %102, label %103, label %106

103:                                              ; preds = %71
  %104 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %105 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %104, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.4.834, i64 0, i64 0))
  br label %106

106:                                              ; preds = %103, %71
  %107 = load i32, i32* %6, align 4
  store i32 %107, i32* %3, align 4
  br label %108

108:                                              ; preds = %106, %25
  %109 = load i32, i32* %3, align 4
  ret i32 %109
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @logger_thread_poll_watchers(i32 %0, i32 %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct.logger_watcher*, align 8
  %12 = alloca i32, align 4
  %13 = alloca %struct.logger_watcher*, align 8
  %14 = alloca [1 x i8], align 1
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  store i32 %1, i32* %5, align 4
  store i32 0, i32* %7, align 4
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 4
  store i32 0, i32* %6, align 4
  br label %17

17:                                               ; preds = %77, %2
  %18 = load i32, i32* %6, align 4
  %19 = icmp slt i32 %18, 20
  br i1 %19, label %20, label %80

20:                                               ; preds = %17
  %21 = load i32, i32* %6, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds [20 x %struct.logger_watcher*], [20 x %struct.logger_watcher*]* @watchers, i64 0, i64 %22
  %24 = load %struct.logger_watcher*, %struct.logger_watcher** %23, align 8
  store %struct.logger_watcher* %24, %struct.logger_watcher** %11, align 8
  %25 = load %struct.logger_watcher*, %struct.logger_watcher** %11, align 8
  %26 = icmp eq %struct.logger_watcher* %25, null
  br i1 %26, label %34, label %27

27:                                               ; preds = %20
  %28 = load i32, i32* %5, align 4
  %29 = icmp ne i32 %28, -1
  br i1 %29, label %30, label %35

30:                                               ; preds = %27
  %31 = load i32, i32* %6, align 4
  %32 = load i32, i32* %5, align 4
  %33 = icmp ne i32 %31, %32
  br i1 %33, label %34, label %35

34:                                               ; preds = %30, %20
  br label %77

35:                                               ; preds = %30, %27
  %36 = load %struct.logger_watcher*, %struct.logger_watcher** %11, align 8
  %37 = getelementptr inbounds %struct.logger_watcher, %struct.logger_watcher* %36, i32 0, i32 8
  %38 = load %struct.bipbuf_t*, %struct.bipbuf_t** %37, align 8
  %39 = call i8* @bipbuf_peek_all(%struct.bipbuf_t* %38, i32* %9)
  store i8* %39, i8** %8, align 8
  %40 = load i8*, i8** %8, align 8
  %41 = icmp ne i8* %40, null
  br i1 %41, label %42, label %56

42:                                               ; preds = %35
  %43 = load %struct.logger_watcher*, %struct.logger_watcher** %11, align 8
  %44 = getelementptr inbounds %struct.logger_watcher, %struct.logger_watcher* %43, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = load i32, i32* %7, align 4
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds [20 x %struct.pollfd], [20 x %struct.pollfd]* @watchers_pollfds, i64 0, i64 %47
  %49 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %48, i32 0, i32 0
  store i32 %45, i32* %49, align 8
  %50 = load i32, i32* %7, align 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds [20 x %struct.pollfd], [20 x %struct.pollfd]* @watchers_pollfds, i64 0, i64 %51
  %53 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %52, i32 0, i32 1
  store i16 4, i16* %53, align 4
  %54 = load i32, i32* %7, align 4
  %55 = add nsw i32 %54, 1
  store i32 %55, i32* %7, align 4
  br label %74

56:                                               ; preds = %35
  %57 = load i32, i32* %4, align 4
  %58 = icmp ne i32 %57, 0
  br i1 %58, label %59, label %73

59:                                               ; preds = %56
  %60 = load %struct.logger_watcher*, %struct.logger_watcher** %11, align 8
  %61 = getelementptr inbounds %struct.logger_watcher, %struct.logger_watcher* %60, i32 0, i32 1
  %62 = load i32, i32* %61, align 8
  %63 = load i32, i32* %7, align 4
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds [20 x %struct.pollfd], [20 x %struct.pollfd]* @watchers_pollfds, i64 0, i64 %64
  %66 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %65, i32 0, i32 0
  store i32 %62, i32* %66, align 8
  %67 = load i32, i32* %7, align 4
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds [20 x %struct.pollfd], [20 x %struct.pollfd]* @watchers_pollfds, i64 0, i64 %68
  %70 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %69, i32 0, i32 1
  store i16 1, i16* %70, align 4
  %71 = load i32, i32* %7, align 4
  %72 = add nsw i32 %71, 1
  store i32 %72, i32* %7, align 4
  br label %73

73:                                               ; preds = %59, %56
  br label %74

74:                                               ; preds = %73, %42
  %75 = load %struct.logger_watcher*, %struct.logger_watcher** %11, align 8
  %76 = getelementptr inbounds %struct.logger_watcher, %struct.logger_watcher* %75, i32 0, i32 5
  store i8 0, i8* %76, align 8
  br label %77

77:                                               ; preds = %74, %34
  %78 = load i32, i32* %6, align 4
  %79 = add nsw i32 %78, 1
  store i32 %79, i32* %6, align 4
  br label %17, !llvm.loop !127

80:                                               ; preds = %17
  %81 = load i32, i32* %7, align 4
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  store i32 0, i32* %3, align 4
  br label %244

84:                                               ; preds = %80
  %85 = load i32, i32* %7, align 4
  %86 = sext i32 %85 to i64
  %87 = call i32 @poll(%struct.pollfd* getelementptr inbounds ([20 x %struct.pollfd], [20 x %struct.pollfd]* @watchers_pollfds, i64 0, i64 0), i64 %86, i32 0)
  store i32 %87, i32* %12, align 4
  %88 = load i32, i32* %12, align 4
  %89 = icmp slt i32 %88, 0
  br i1 %89, label %90, label %91

90:                                               ; preds = %84
  call void @perror(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6.832, i64 0, i64 0))
  store i32 -1, i32* %3, align 4
  br label %244

91:                                               ; preds = %84
  store i32 0, i32* %7, align 4
  store i32 0, i32* %6, align 4
  br label %92

92:                                               ; preds = %239, %91
  %93 = load i32, i32* %6, align 4
  %94 = icmp slt i32 %93, 20
  br i1 %94, label %95, label %242

95:                                               ; preds = %92
  %96 = load i32, i32* %6, align 4
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds [20 x %struct.logger_watcher*], [20 x %struct.logger_watcher*]* @watchers, i64 0, i64 %97
  %99 = load %struct.logger_watcher*, %struct.logger_watcher** %98, align 8
  store %struct.logger_watcher* %99, %struct.logger_watcher** %13, align 8
  %100 = load %struct.logger_watcher*, %struct.logger_watcher** %13, align 8
  %101 = icmp eq %struct.logger_watcher* %100, null
  br i1 %101, label %109, label %102

102:                                              ; preds = %95
  %103 = load i32, i32* %5, align 4
  %104 = icmp ne i32 %103, -1
  br i1 %104, label %105, label %110

105:                                              ; preds = %102
  %106 = load i32, i32* %6, align 4
  %107 = load i32, i32* %5, align 4
  %108 = icmp ne i32 %106, %107
  br i1 %108, label %109, label %110

109:                                              ; preds = %105, %95
  br label %239

110:                                              ; preds = %105, %102
  store i32 0, i32* %9, align 4
  %111 = load i32, i32* %7, align 4
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds [20 x %struct.pollfd], [20 x %struct.pollfd]* @watchers_pollfds, i64 0, i64 %112
  %114 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %113, i32 0, i32 2
  %115 = load i16, i16* %114, align 2
  %116 = sext i16 %115 to i32
  %117 = and i32 %116, 1
  %118 = icmp ne i32 %117, 0
  br i1 %118, label %119, label %151

119:                                              ; preds = %110
  %120 = load %struct.logger_watcher*, %struct.logger_watcher** %13, align 8
  %121 = getelementptr inbounds %struct.logger_watcher, %struct.logger_watcher* %120, i32 0, i32 0
  %122 = load i8*, i8** %121, align 8
  %123 = bitcast i8* %122 to %struct.conn*
  %124 = getelementptr inbounds %struct.conn, %struct.conn* %123, i32 0, i32 44
  %125 = load i64 (%struct.conn*, i8*, i64)*, i64 (%struct.conn*, i8*, i64)** %124, align 8
  %126 = load %struct.logger_watcher*, %struct.logger_watcher** %13, align 8
  %127 = getelementptr inbounds %struct.logger_watcher, %struct.logger_watcher* %126, i32 0, i32 0
  %128 = load i8*, i8** %127, align 8
  %129 = bitcast i8* %128 to %struct.conn*
  %130 = getelementptr inbounds [1 x i8], [1 x i8]* %14, i64 0, i64 0
  %131 = call i64 %125(%struct.conn* %129, i8* %130, i64 1)
  %132 = trunc i64 %131 to i32
  store i32 %132, i32* %15, align 4
  %133 = load i32, i32* %15, align 4
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %146, label %135

135:                                              ; preds = %119
  %136 = load i32, i32* %15, align 4
  %137 = icmp eq i32 %136, -1
  br i1 %137, label %138, label %150

138:                                              ; preds = %135
  %139 = call i32* @__errno_location() #15
  %140 = load i32, i32* %139, align 4
  %141 = icmp ne i32 %140, 11
  br i1 %141, label %142, label %150

142:                                              ; preds = %138
  %143 = call i32* @__errno_location() #15
  %144 = load i32, i32* %143, align 4
  %145 = icmp ne i32 %144, 11
  br i1 %145, label %146, label %150

146:                                              ; preds = %142, %119
  %147 = load %struct.logger_watcher*, %struct.logger_watcher** %13, align 8
  call void @logger_thread_close_watcher(%struct.logger_watcher* %147)
  %148 = load i32, i32* %7, align 4
  %149 = add nsw i32 %148, 1
  store i32 %149, i32* %7, align 4
  br label %239

150:                                              ; preds = %142, %138, %135
  br label %151

151:                                              ; preds = %150, %110
  %152 = load %struct.logger_watcher*, %struct.logger_watcher** %13, align 8
  %153 = getelementptr inbounds %struct.logger_watcher, %struct.logger_watcher* %152, i32 0, i32 8
  %154 = load %struct.bipbuf_t*, %struct.bipbuf_t** %153, align 8
  %155 = call i8* @bipbuf_peek_all(%struct.bipbuf_t* %154, i32* %9)
  store i8* %155, i8** %8, align 8
  %156 = icmp ne i8* %155, null
  br i1 %156, label %157, label %236

157:                                              ; preds = %151
  %158 = load i32, i32* %7, align 4
  %159 = sext i32 %158 to i64
  %160 = getelementptr inbounds [20 x %struct.pollfd], [20 x %struct.pollfd]* @watchers_pollfds, i64 0, i64 %159
  %161 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %160, i32 0, i32 2
  %162 = load i16, i16* %161, align 2
  %163 = sext i16 %162 to i32
  %164 = and i32 %163, 24
  %165 = icmp ne i32 %164, 0
  br i1 %165, label %166, label %168

166:                                              ; preds = %157
  %167 = load %struct.logger_watcher*, %struct.logger_watcher** %13, align 8
  call void @logger_thread_close_watcher(%struct.logger_watcher* %167)
  br label %235

168:                                              ; preds = %157
  %169 = load i32, i32* %7, align 4
  %170 = sext i32 %169 to i64
  %171 = getelementptr inbounds [20 x %struct.pollfd], [20 x %struct.pollfd]* @watchers_pollfds, i64 0, i64 %170
  %172 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %171, i32 0, i32 2
  %173 = load i16, i16* %172, align 2
  %174 = sext i16 %173 to i32
  %175 = and i32 %174, 4
  %176 = icmp ne i32 %175, 0
  br i1 %176, label %177, label %234

177:                                              ; preds = %168
  store i32 0, i32* %16, align 4
  %178 = load %struct.logger_watcher*, %struct.logger_watcher** %13, align 8
  %179 = getelementptr inbounds %struct.logger_watcher, %struct.logger_watcher* %178, i32 0, i32 6
  %180 = load i32, i32* %179, align 4
  switch i32 %180, label %204 [
    i32 0, label %181
    i32 1, label %188
  ]

181:                                              ; preds = %177
  %182 = load i8*, i8** %8, align 8
  %183 = load i32, i32* %9, align 4
  %184 = zext i32 %183 to i64
  %185 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %186 = call i64 @fwrite(i8* %182, i64 1, i64 %184, %struct._IO_FILE* %185)
  %187 = trunc i64 %186 to i32
  store i32 %187, i32* %16, align 4
  br label %204

188:                                              ; preds = %177
  %189 = load %struct.logger_watcher*, %struct.logger_watcher** %13, align 8
  %190 = getelementptr inbounds %struct.logger_watcher, %struct.logger_watcher* %189, i32 0, i32 0
  %191 = load i8*, i8** %190, align 8
  %192 = bitcast i8* %191 to %struct.conn*
  %193 = getelementptr inbounds %struct.conn, %struct.conn* %192, i32 0, i32 46
  %194 = load i64 (%struct.conn*, i8*, i64)*, i64 (%struct.conn*, i8*, i64)** %193, align 8
  %195 = load %struct.logger_watcher*, %struct.logger_watcher** %13, align 8
  %196 = getelementptr inbounds %struct.logger_watcher, %struct.logger_watcher* %195, i32 0, i32 0
  %197 = load i8*, i8** %196, align 8
  %198 = bitcast i8* %197 to %struct.conn*
  %199 = load i8*, i8** %8, align 8
  %200 = load i32, i32* %9, align 4
  %201 = zext i32 %200 to i64
  %202 = call i64 %194(%struct.conn* %198, i8* %199, i64 %201)
  %203 = trunc i64 %202 to i32
  store i32 %203, i32* %16, align 4
  br label %204

204:                                              ; preds = %177, %188, %181
  %205 = load i32, i32* %16, align 4
  %206 = icmp eq i32 %205, -1
  br i1 %206, label %207, label %218

207:                                              ; preds = %204
  %208 = call i32* @__errno_location() #15
  %209 = load i32, i32* %208, align 4
  %210 = icmp ne i32 %209, 11
  br i1 %210, label %211, label %217

211:                                              ; preds = %207
  %212 = call i32* @__errno_location() #15
  %213 = load i32, i32* %212, align 4
  %214 = icmp ne i32 %213, 11
  br i1 %214, label %215, label %217

215:                                              ; preds = %211
  %216 = load %struct.logger_watcher*, %struct.logger_watcher** %13, align 8
  call void @logger_thread_close_watcher(%struct.logger_watcher* %216)
  br label %217

217:                                              ; preds = %215, %211, %207
  br label %233

218:                                              ; preds = %204
  %219 = load i32, i32* %16, align 4
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %221, label %223

221:                                              ; preds = %218
  %222 = load %struct.logger_watcher*, %struct.logger_watcher** %13, align 8
  call void @logger_thread_close_watcher(%struct.logger_watcher* %222)
  br label %232

223:                                              ; preds = %218
  %224 = load %struct.logger_watcher*, %struct.logger_watcher** %13, align 8
  %225 = getelementptr inbounds %struct.logger_watcher, %struct.logger_watcher* %224, i32 0, i32 8
  %226 = load %struct.bipbuf_t*, %struct.bipbuf_t** %225, align 8
  %227 = load i32, i32* %16, align 4
  %228 = call i8* @bipbuf_poll(%struct.bipbuf_t* %226, i32 %227)
  %229 = load i32, i32* %16, align 4
  %230 = load i32, i32* %10, align 4
  %231 = add nsw i32 %230, %229
  store i32 %231, i32* %10, align 4
  br label %232

232:                                              ; preds = %223, %221
  br label %233

233:                                              ; preds = %232, %217
  br label %234

234:                                              ; preds = %233, %168
  br label %235

235:                                              ; preds = %234, %166
  br label %236

236:                                              ; preds = %235, %151
  %237 = load i32, i32* %7, align 4
  %238 = add nsw i32 %237, 1
  store i32 %238, i32* %7, align 4
  br label %239

239:                                              ; preds = %236, %146, %109
  %240 = load i32, i32* %6, align 4
  %241 = add nsw i32 %240, 1
  store i32 %241, i32* %6, align 4
  br label %92, !llvm.loop !128

242:                                              ; preds = %92
  %243 = load i32, i32* %10, align 4
  store i32 %243, i32* %3, align 4
  br label %244

244:                                              ; preds = %242, %90, %83
  %245 = load i32, i32* %3, align 4
  ret i32 %245
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @logger_thread_flush_stats(%struct.logger_stats* %0) #0 {
  %2 = alloca %struct.logger_stats*, align 8
  store %struct.logger_stats* %0, %struct.logger_stats** %2, align 8
  call void @STATS_LOCK()
  %3 = load %struct.logger_stats*, %struct.logger_stats** %2, align 8
  %4 = getelementptr inbounds %struct.logger_stats, %struct.logger_stats* %3, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 15), align 8
  %7 = add i64 %6, %5
  store i64 %7, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 15), align 8
  %8 = load %struct.logger_stats*, %struct.logger_stats** %2, align 8
  %9 = getelementptr inbounds %struct.logger_stats, %struct.logger_stats* %8, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 16), align 8
  %12 = add i64 %11, %10
  store i64 %12, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 16), align 8
  %13 = load %struct.logger_stats*, %struct.logger_stats** %2, align 8
  %14 = getelementptr inbounds %struct.logger_stats, %struct.logger_stats* %13, i32 0, i32 2
  %15 = load i64, i64* %14, align 8
  %16 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 17), align 8
  %17 = add i64 %16, %15
  store i64 %17, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 17), align 8
  %18 = load %struct.logger_stats*, %struct.logger_stats** %2, align 8
  %19 = getelementptr inbounds %struct.logger_stats, %struct.logger_stats* %18, i32 0, i32 3
  %20 = load i64, i64* %19, align 8
  %21 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 18), align 8
  %22 = add i64 %21, %20
  store i64 %22, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 18), align 8
  %23 = load %struct.logger_stats*, %struct.logger_stats** %2, align 8
  %24 = getelementptr inbounds %struct.logger_stats, %struct.logger_stats* %23, i32 0, i32 4
  %25 = load i64, i64* %24, align 8
  %26 = trunc i64 %25 to i32
  store i32 %26, i32* getelementptr inbounds (%struct.stats_state, %struct.stats_state* @stats_state, i32 0, i32 7), align 4
  call void @STATS_UNLOCK()
  ret void
}

declare dso_local i32 @poll(%struct.pollfd*, i64, i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @logger_thread_close_watcher(%struct.logger_watcher* %0) #0 {
  %2 = alloca %struct.logger_watcher*, align 8
  store %struct.logger_watcher* %0, %struct.logger_watcher** %2, align 8
  %3 = load %struct.logger_watcher*, %struct.logger_watcher** %2, align 8
  %4 = getelementptr inbounds %struct.logger_watcher, %struct.logger_watcher* %3, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds [20 x %struct.logger_watcher*], [20 x %struct.logger_watcher*]* @watchers, i64 0, i64 %6
  store %struct.logger_watcher* null, %struct.logger_watcher** %7, align 8
  %8 = load %struct.logger_watcher*, %struct.logger_watcher** %2, align 8
  %9 = getelementptr inbounds %struct.logger_watcher, %struct.logger_watcher* %8, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = bitcast i8* %10 to %struct.conn*
  call void @sidethread_conn_close(%struct.conn* %11)
  %12 = load i32, i32* @watcher_count, align 4
  %13 = add nsw i32 %12, -1
  store i32 %13, i32* @watcher_count, align 4
  %14 = load %struct.logger_watcher*, %struct.logger_watcher** %2, align 8
  %15 = getelementptr inbounds %struct.logger_watcher, %struct.logger_watcher* %14, i32 0, i32 8
  %16 = load %struct.bipbuf_t*, %struct.bipbuf_t** %15, align 8
  call void @bipbuf_free(%struct.bipbuf_t* %16)
  %17 = load %struct.logger_watcher*, %struct.logger_watcher** %2, align 8
  %18 = bitcast %struct.logger_watcher* %17 to i8*
  call void @free(i8* %18) #14
  call void @logger_set_flags()
  ret void
}

declare dso_local i64 @fwrite(i8*, i64, i64, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @logger_set_flags() #0 {
  %1 = alloca %struct._logger*, align 8
  %2 = alloca i32, align 4
  %3 = alloca i16, align 2
  %4 = alloca %struct.logger_watcher*, align 8
  store %struct._logger* null, %struct._logger** %1, align 8
  store i32 0, i32* %2, align 4
  store i16 0, i16* %3, align 2
  store i32 0, i32* %2, align 4
  br label %5

5:                                                ; preds = %25, %0
  %6 = load i32, i32* %2, align 4
  %7 = icmp slt i32 %6, 20
  br i1 %7, label %8, label %28

8:                                                ; preds = %5
  %9 = load i32, i32* %2, align 4
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds [20 x %struct.logger_watcher*], [20 x %struct.logger_watcher*]* @watchers, i64 0, i64 %10
  %12 = load %struct.logger_watcher*, %struct.logger_watcher** %11, align 8
  store %struct.logger_watcher* %12, %struct.logger_watcher** %4, align 8
  %13 = load %struct.logger_watcher*, %struct.logger_watcher** %4, align 8
  %14 = icmp eq %struct.logger_watcher* %13, null
  br i1 %14, label %15, label %16

15:                                               ; preds = %8
  br label %25

16:                                               ; preds = %8
  %17 = load %struct.logger_watcher*, %struct.logger_watcher** %4, align 8
  %18 = getelementptr inbounds %struct.logger_watcher, %struct.logger_watcher* %17, i32 0, i32 7
  %19 = load i16, i16* %18, align 8
  %20 = zext i16 %19 to i32
  %21 = load i16, i16* %3, align 2
  %22 = zext i16 %21 to i32
  %23 = or i32 %22, %20
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* %3, align 2
  br label %25

25:                                               ; preds = %16, %15
  %26 = load i32, i32* %2, align 4
  %27 = add nsw i32 %26, 1
  store i32 %27, i32* %2, align 4
  br label %5, !llvm.loop !129

28:                                               ; preds = %5
  %29 = load %struct._logger*, %struct._logger** @logger_stack_head, align 8
  store %struct._logger* %29, %struct._logger** %1, align 8
  br label %30

30:                                               ; preds = %43, %28
  %31 = load %struct._logger*, %struct._logger** %1, align 8
  %32 = icmp ne %struct._logger* %31, null
  br i1 %32, label %33, label %47

33:                                               ; preds = %30
  %34 = load %struct._logger*, %struct._logger** %1, align 8
  %35 = getelementptr inbounds %struct._logger, %struct._logger* %34, i32 0, i32 2
  %36 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %35) #14
  %37 = load i16, i16* %3, align 2
  %38 = load %struct._logger*, %struct._logger** %1, align 8
  %39 = getelementptr inbounds %struct._logger, %struct._logger* %38, i32 0, i32 8
  store i16 %37, i16* %39, align 4
  %40 = load %struct._logger*, %struct._logger** %1, align 8
  %41 = getelementptr inbounds %struct._logger, %struct._logger* %40, i32 0, i32 2
  %42 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %41) #14
  br label %43

43:                                               ; preds = %33
  %44 = load %struct._logger*, %struct._logger** %1, align 8
  %45 = getelementptr inbounds %struct._logger, %struct._logger* %44, i32 0, i32 1
  %46 = load %struct._logger*, %struct._logger** %45, align 8
  store %struct._logger* %46, %struct._logger** %1, align 8
  br label %30, !llvm.loop !130

47:                                               ; preds = %30
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @logger_thread_parse_entry(%struct._logentry* %0, %struct.logger_stats* %1, i8* %2, i32* %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca %struct._logentry*, align 8
  %7 = alloca %struct.logger_stats*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i32, align 4
  %11 = alloca %struct._entry_details*, align 8
  store %struct._logentry* %0, %struct._logentry** %6, align 8
  store %struct.logger_stats* %1, %struct.logger_stats** %7, align 8
  store i8* %2, i8** %8, align 8
  store i32* %3, i32** %9, align 8
  store i32 0, i32* %10, align 4
  %12 = load %struct._logentry*, %struct._logentry** %6, align 8
  %13 = getelementptr inbounds %struct._logentry, %struct._logentry* %12, i32 0, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds [15 x %struct._entry_details], [15 x %struct._entry_details]* @default_entries, i64 0, i64 %15
  store %struct._entry_details* %16, %struct._entry_details** %11, align 8
  %17 = load %struct._entry_details*, %struct._entry_details** %11, align 8
  %18 = getelementptr inbounds %struct._entry_details, %struct._entry_details* %17, i32 0, i32 3
  %19 = load i32 (%struct._logentry*, i8*)*, i32 (%struct._logentry*, i8*)** %18, align 8
  %20 = load %struct._logentry*, %struct._logentry** %6, align 8
  %21 = load i8*, i8** %8, align 8
  %22 = call i32 %19(%struct._logentry* %20, i8* %21)
  store i32 %22, i32* %10, align 4
  %23 = load i32, i32* %10, align 4
  %24 = icmp sge i32 %23, 4096
  br i1 %24, label %28, label %25

25:                                               ; preds = %4
  %26 = load i32, i32* %10, align 4
  %27 = icmp sle i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25, %4
  store i32 2, i32* %5, align 4
  br label %33

29:                                               ; preds = %25
  %30 = load i32, i32* %10, align 4
  %31 = load i32*, i32** %9, align 8
  store i32 %30, i32* %31, align 4
  br label %32

32:                                               ; preds = %29
  store i32 0, i32* %5, align 4
  br label %33

33:                                               ; preds = %32, %28
  %34 = load i32, i32* %5, align 4
  ret i32 %34
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @logger_thread_write_entry(%struct._logentry* %0, %struct.logger_stats* %1, i8* %2, i32 %3) #0 {
  %5 = alloca %struct._logentry*, align 8
  %6 = alloca %struct.logger_stats*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct.logger_watcher*, align 8
  %12 = alloca i8*, align 8
  store %struct._logentry* %0, %struct._logentry** %5, align 8
  store %struct.logger_stats* %1, %struct.logger_stats** %6, align 8
  store i8* %2, i8** %7, align 8
  store i32 %3, i32* %8, align 4
  store i32 0, i32* %9, align 4
  br label %13

13:                                               ; preds = %125, %4
  %14 = load i32, i32* %9, align 4
  %15 = icmp slt i32 %14, 20
  br i1 %15, label %16, label %128

16:                                               ; preds = %13
  %17 = load i32, i32* %9, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [20 x %struct.logger_watcher*], [20 x %struct.logger_watcher*]* @watchers, i64 0, i64 %18
  %20 = load %struct.logger_watcher*, %struct.logger_watcher** %19, align 8
  store %struct.logger_watcher* %20, %struct.logger_watcher** %11, align 8
  store i8* null, i8** %12, align 8
  %21 = load %struct.logger_watcher*, %struct.logger_watcher** %11, align 8
  %22 = icmp eq %struct.logger_watcher* %21, null
  br i1 %22, label %42, label %23

23:                                               ; preds = %16
  %24 = load %struct._logentry*, %struct._logentry** %5, align 8
  %25 = getelementptr inbounds %struct._logentry, %struct._logentry* %24, i32 0, i32 2
  %26 = load i16, i16* %25, align 2
  %27 = zext i16 %26 to i32
  %28 = load %struct.logger_watcher*, %struct.logger_watcher** %11, align 8
  %29 = getelementptr inbounds %struct.logger_watcher, %struct.logger_watcher* %28, i32 0, i32 7
  %30 = load i16, i16* %29, align 8
  %31 = zext i16 %30 to i32
  %32 = and i32 %27, %31
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %42, label %34

34:                                               ; preds = %23
  %35 = load %struct._logentry*, %struct._logentry** %5, align 8
  %36 = getelementptr inbounds %struct._logentry, %struct._logentry* %35, i32 0, i32 3
  %37 = load i64, i64* %36, align 8
  %38 = load %struct.logger_watcher*, %struct.logger_watcher** %11, align 8
  %39 = getelementptr inbounds %struct.logger_watcher, %struct.logger_watcher* %38, i32 0, i32 4
  %40 = load i64, i64* %39, align 8
  %41 = icmp ult i64 %37, %40
  br i1 %41, label %42, label %43

42:                                               ; preds = %34, %23, %16
  br label %125

43:                                               ; preds = %34
  br label %44

44:                                               ; preds = %66, %43
  %45 = load %struct.logger_watcher*, %struct.logger_watcher** %11, align 8
  %46 = getelementptr inbounds %struct.logger_watcher, %struct.logger_watcher* %45, i32 0, i32 5
  %47 = load i8, i8* %46, align 8
  %48 = trunc i8 %47 to i1
  br i1 %48, label %57, label %49

49:                                               ; preds = %44
  %50 = load %struct.logger_watcher*, %struct.logger_watcher** %11, align 8
  %51 = getelementptr inbounds %struct.logger_watcher, %struct.logger_watcher* %50, i32 0, i32 8
  %52 = load %struct.bipbuf_t*, %struct.bipbuf_t** %51, align 8
  %53 = load i32, i32* %8, align 4
  %54 = add nsw i32 %53, 128
  %55 = call i8* @bipbuf_request(%struct.bipbuf_t* %52, i32 %54)
  store i8* %55, i8** %12, align 8
  %56 = icmp eq i8* %55, null
  br label %57

57:                                               ; preds = %49, %44
  %58 = phi i1 [ false, %44 ], [ %56, %49 ]
  br i1 %58, label %59, label %67

59:                                               ; preds = %57
  %60 = load i32, i32* %9, align 4
  %61 = call i32 @logger_thread_poll_watchers(i32 0, i32 %60)
  %62 = icmp sle i32 %61, 0
  br i1 %62, label %63, label %66

63:                                               ; preds = %59
  %64 = load %struct.logger_watcher*, %struct.logger_watcher** %11, align 8
  %65 = getelementptr inbounds %struct.logger_watcher, %struct.logger_watcher* %64, i32 0, i32 5
  store i8 1, i8* %65, align 8
  br label %66

66:                                               ; preds = %63, %59
  br label %44, !llvm.loop !131

67:                                               ; preds = %57
  %68 = load %struct.logger_watcher*, %struct.logger_watcher** %11, align 8
  %69 = getelementptr inbounds %struct.logger_watcher, %struct.logger_watcher* %68, i32 0, i32 5
  %70 = load i8, i8* %69, align 8
  %71 = trunc i8 %70 to i1
  br i1 %71, label %72, label %81

72:                                               ; preds = %67
  %73 = load %struct.logger_watcher*, %struct.logger_watcher** %11, align 8
  %74 = getelementptr inbounds %struct.logger_watcher, %struct.logger_watcher* %73, i32 0, i32 3
  %75 = load i64, i64* %74, align 8
  %76 = add i64 %75, 1
  store i64 %76, i64* %74, align 8
  %77 = load %struct.logger_stats*, %struct.logger_stats** %6, align 8
  %78 = getelementptr inbounds %struct.logger_stats, %struct.logger_stats* %77, i32 0, i32 2
  %79 = load i64, i64* %78, align 8
  %80 = add i64 %79, 1
  store i64 %80, i64* %78, align 8
  br label %125

81:                                               ; preds = %67
  %82 = load %struct.logger_watcher*, %struct.logger_watcher** %11, align 8
  %83 = getelementptr inbounds %struct.logger_watcher, %struct.logger_watcher* %82, i32 0, i32 3
  %84 = load i64, i64* %83, align 8
  %85 = icmp ugt i64 %84, 0
  br i1 %85, label %86, label %114

86:                                               ; preds = %81
  %87 = load i8*, i8** %12, align 8
  %88 = load %struct.logger_watcher*, %struct.logger_watcher** %11, align 8
  %89 = getelementptr inbounds %struct.logger_watcher, %struct.logger_watcher* %88, i32 0, i32 3
  %90 = load i64, i64* %89, align 8
  %91 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %87, i64 128, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.835, i64 0, i64 0), i64 %90) #14
  store i32 %91, i32* %10, align 4
  %92 = load i32, i32* %10, align 4
  %93 = icmp sge i32 %92, 128
  br i1 %93, label %97, label %94

94:                                               ; preds = %86
  %95 = load i32, i32* %10, align 4
  %96 = icmp sle i32 %95, 0
  br i1 %96, label %97, label %106

97:                                               ; preds = %94, %86
  %98 = load %struct.logger_watcher*, %struct.logger_watcher** %11, align 8
  %99 = getelementptr inbounds %struct.logger_watcher, %struct.logger_watcher* %98, i32 0, i32 3
  %100 = load i64, i64* %99, align 8
  %101 = add i64 %100, 1
  store i64 %101, i64* %99, align 8
  %102 = load %struct.logger_stats*, %struct.logger_stats** %6, align 8
  %103 = getelementptr inbounds %struct.logger_stats, %struct.logger_stats* %102, i32 0, i32 2
  %104 = load i64, i64* %103, align 8
  %105 = add i64 %104, 1
  store i64 %105, i64* %103, align 8
  br label %125

106:                                              ; preds = %94
  %107 = load %struct.logger_watcher*, %struct.logger_watcher** %11, align 8
  %108 = getelementptr inbounds %struct.logger_watcher, %struct.logger_watcher* %107, i32 0, i32 8
  %109 = load %struct.bipbuf_t*, %struct.bipbuf_t** %108, align 8
  %110 = load i32, i32* %10, align 4
  %111 = call i32 @bipbuf_push(%struct.bipbuf_t* %109, i32 %110)
  %112 = load %struct.logger_watcher*, %struct.logger_watcher** %11, align 8
  %113 = getelementptr inbounds %struct.logger_watcher, %struct.logger_watcher* %112, i32 0, i32 3
  store i64 0, i64* %113, align 8
  br label %114

114:                                              ; preds = %106, %81
  %115 = load %struct.logger_watcher*, %struct.logger_watcher** %11, align 8
  %116 = getelementptr inbounds %struct.logger_watcher, %struct.logger_watcher* %115, i32 0, i32 8
  %117 = load %struct.bipbuf_t*, %struct.bipbuf_t** %116, align 8
  %118 = load i8*, i8** %7, align 8
  %119 = load i32, i32* %8, align 4
  %120 = call i32 @bipbuf_offer(%struct.bipbuf_t* %117, i8* %118, i32 %119)
  %121 = load %struct.logger_stats*, %struct.logger_stats** %6, align 8
  %122 = getelementptr inbounds %struct.logger_stats, %struct.logger_stats* %121, i32 0, i32 3
  %123 = load i64, i64* %122, align 8
  %124 = add i64 %123, 1
  store i64 %124, i64* %122, align 8
  br label %125

125:                                              ; preds = %114, %97, %72, %42
  %126 = load i32, i32* %9, align 4
  %127 = add nsw i32 %126, 1
  store i32 %127, i32* %9, align 4
  br label %13, !llvm.loop !132

128:                                              ; preds = %13
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @_logger_log_text(%struct._logentry* %0, %struct._entry_details* %1, i8* %2, %struct.__va_list_tag* %3) #0 {
  %5 = alloca %struct._logentry*, align 8
  %6 = alloca %struct._entry_details*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca %struct.__va_list_tag*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store %struct._logentry* %0, %struct._logentry** %5, align 8
  store %struct._entry_details* %1, %struct._entry_details** %6, align 8
  store i8* %2, i8** %7, align 8
  store %struct.__va_list_tag* %3, %struct.__va_list_tag** %8, align 8
  %11 = load %struct._entry_details*, %struct._entry_details** %6, align 8
  %12 = getelementptr inbounds %struct._entry_details, %struct._entry_details* %11, i32 0, i32 0
  %13 = load i32, i32* %12, align 8
  store i32 %13, i32* %9, align 4
  %14 = load %struct._logentry*, %struct._logentry** %5, align 8
  %15 = getelementptr inbounds %struct._logentry, %struct._logentry* %14, i32 0, i32 6
  %16 = getelementptr inbounds [0 x %union.anon.9], [0 x %union.anon.9]* %15, i64 0, i64 0
  %17 = bitcast %union.anon.9* %16 to i8*
  %18 = load i32, i32* %9, align 4
  %19 = sext i32 %18 to i64
  %20 = load %struct._entry_details*, %struct._entry_details** %6, align 8
  %21 = getelementptr inbounds %struct._entry_details, %struct._entry_details* %20, i32 0, i32 4
  %22 = load i8*, i8** %21, align 8
  %23 = load %struct.__va_list_tag*, %struct.__va_list_tag** %8, align 8
  %24 = call i32 @vsnprintf(i8* %17, i64 %19, i8* %22, %struct.__va_list_tag* %23) #14
  store i32 %24, i32* %10, align 4
  %25 = load i32, i32* %10, align 4
  %26 = icmp sle i32 %25, 0
  br i1 %26, label %27, label %31

27:                                               ; preds = %4
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %29 = load i32, i32* %10, align 4
  %30 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %28, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.16.879, i64 0, i64 0), i32 %29)
  br label %31

31:                                               ; preds = %27, %4
  %32 = load i32, i32* %10, align 4
  %33 = add nsw i32 %32, 1
  %34 = load %struct._logentry*, %struct._logentry** %5, align 8
  %35 = getelementptr inbounds %struct._logentry, %struct._logentry* %34, i32 0, i32 5
  store i32 %33, i32* %35, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @_logger_parse_text(%struct._logentry* %0, i8* %1) #0 {
  %3 = alloca %struct._logentry*, align 8
  %4 = alloca i8*, align 8
  store %struct._logentry* %0, %struct._logentry** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load i8*, i8** %4, align 8
  %6 = load %struct._logentry*, %struct._logentry** %3, align 8
  %7 = getelementptr inbounds %struct._logentry, %struct._logentry* %6, i32 0, i32 4
  %8 = getelementptr inbounds %struct.timeval, %struct.timeval* %7, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = trunc i64 %9 to i32
  %11 = load %struct._logentry*, %struct._logentry** %3, align 8
  %12 = getelementptr inbounds %struct._logentry, %struct._logentry* %11, i32 0, i32 4
  %13 = getelementptr inbounds %struct.timeval, %struct.timeval* %12, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = trunc i64 %14 to i32
  %16 = load %struct._logentry*, %struct._logentry** %3, align 8
  %17 = getelementptr inbounds %struct._logentry, %struct._logentry* %16, i32 0, i32 3
  %18 = load i64, i64* %17, align 8
  %19 = load %struct._logentry*, %struct._logentry** %3, align 8
  %20 = getelementptr inbounds %struct._logentry, %struct._logentry* %19, i32 0, i32 6
  %21 = getelementptr inbounds [0 x %union.anon.9], [0 x %union.anon.9]* %20, i64 0, i64 0
  %22 = bitcast %union.anon.9* %21 to i8*
  %23 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %5, i64 4096, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.17.878, i64 0, i64 0), i32 %10, i32 %15, i64 %18, i8* %22) #14
  ret i32 %23
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @_logger_log_evictions(%struct._logentry* %0, %struct._entry_details* %1, i8* %2, %struct.__va_list_tag* %3) #0 {
  %5 = alloca %struct._logentry*, align 8
  %6 = alloca %struct._entry_details*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca %struct.__va_list_tag*, align 8
  %9 = alloca %struct._stritem*, align 8
  %10 = alloca %struct.logentry_eviction*, align 8
  store %struct._logentry* %0, %struct._logentry** %5, align 8
  store %struct._entry_details* %1, %struct._entry_details** %6, align 8
  store i8* %2, i8** %7, align 8
  store %struct.__va_list_tag* %3, %struct.__va_list_tag** %8, align 8
  %11 = load i8*, i8** %7, align 8
  %12 = bitcast i8* %11 to %struct._stritem*
  store %struct._stritem* %12, %struct._stritem** %9, align 8
  %13 = load %struct._logentry*, %struct._logentry** %5, align 8
  %14 = getelementptr inbounds %struct._logentry, %struct._logentry* %13, i32 0, i32 6
  %15 = getelementptr inbounds [0 x %union.anon.9], [0 x %union.anon.9]* %14, i64 0, i64 0
  %16 = bitcast %union.anon.9* %15 to %struct.logentry_eviction*
  store %struct.logentry_eviction* %16, %struct.logentry_eviction** %10, align 8
  %17 = load %struct._stritem*, %struct._stritem** %9, align 8
  %18 = getelementptr inbounds %struct._stritem, %struct._stritem* %17, i32 0, i32 4
  %19 = load i32, i32* %18, align 4
  %20 = icmp ugt i32 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %4
  %22 = load %struct._stritem*, %struct._stritem** %9, align 8
  %23 = getelementptr inbounds %struct._stritem, %struct._stritem* %22, i32 0, i32 4
  %24 = load i32, i32* %23, align 4
  %25 = load volatile i32, i32* @current_time, align 4
  %26 = sub i32 %24, %25
  %27 = zext i32 %26 to i64
  br label %29

28:                                               ; preds = %4
  br label %29

29:                                               ; preds = %28, %21
  %30 = phi i64 [ %27, %21 ], [ -1, %28 ]
  %31 = load %struct.logentry_eviction*, %struct.logentry_eviction** %10, align 8
  %32 = getelementptr inbounds %struct.logentry_eviction, %struct.logentry_eviction* %31, i32 0, i32 0
  store i64 %30, i64* %32, align 8
  %33 = load volatile i32, i32* @current_time, align 4
  %34 = load %struct._stritem*, %struct._stritem** %9, align 8
  %35 = getelementptr inbounds %struct._stritem, %struct._stritem* %34, i32 0, i32 3
  %36 = load i32, i32* %35, align 8
  %37 = sub i32 %33, %36
  %38 = load %struct.logentry_eviction*, %struct.logentry_eviction** %10, align 8
  %39 = getelementptr inbounds %struct.logentry_eviction, %struct.logentry_eviction* %38, i32 0, i32 2
  store i32 %37, i32* %39, align 4
  %40 = load %struct._stritem*, %struct._stritem** %9, align 8
  %41 = getelementptr inbounds %struct._stritem, %struct._stritem* %40, i32 0, i32 7
  %42 = load i16, i16* %41, align 2
  %43 = load %struct.logentry_eviction*, %struct.logentry_eviction** %10, align 8
  %44 = getelementptr inbounds %struct.logentry_eviction, %struct.logentry_eviction* %43, i32 0, i32 3
  store i16 %42, i16* %44, align 8
  %45 = load %struct._stritem*, %struct._stritem** %9, align 8
  %46 = getelementptr inbounds %struct._stritem, %struct._stritem* %45, i32 0, i32 9
  %47 = load i8, i8* %46, align 1
  %48 = load %struct.logentry_eviction*, %struct.logentry_eviction** %10, align 8
  %49 = getelementptr inbounds %struct.logentry_eviction, %struct.logentry_eviction* %48, i32 0, i32 4
  store i8 %47, i8* %49, align 2
  %50 = load %struct._stritem*, %struct._stritem** %9, align 8
  %51 = getelementptr inbounds %struct._stritem, %struct._stritem* %50, i32 0, i32 5
  %52 = load i32, i32* %51, align 8
  %53 = load %struct.logentry_eviction*, %struct.logentry_eviction** %10, align 8
  %54 = getelementptr inbounds %struct.logentry_eviction, %struct.logentry_eviction* %53, i32 0, i32 1
  store i32 %52, i32* %54, align 8
  %55 = load %struct._stritem*, %struct._stritem** %9, align 8
  %56 = getelementptr inbounds %struct._stritem, %struct._stritem* %55, i32 0, i32 8
  %57 = load i8, i8* %56, align 8
  %58 = zext i8 %57 to i32
  %59 = and i32 %58, -193
  %60 = trunc i32 %59 to i8
  %61 = load %struct.logentry_eviction*, %struct.logentry_eviction** %10, align 8
  %62 = getelementptr inbounds %struct.logentry_eviction, %struct.logentry_eviction* %61, i32 0, i32 5
  store i8 %60, i8* %62, align 1
  %63 = load %struct.logentry_eviction*, %struct.logentry_eviction** %10, align 8
  %64 = getelementptr inbounds %struct.logentry_eviction, %struct.logentry_eviction* %63, i32 0, i32 6
  %65 = getelementptr inbounds [0 x i8], [0 x i8]* %64, i64 0, i64 0
  %66 = load %struct._stritem*, %struct._stritem** %9, align 8
  %67 = getelementptr inbounds %struct._stritem, %struct._stritem* %66, i32 0, i32 10
  %68 = bitcast [0 x %union.anon.10]* %67 to i8*
  %69 = load %struct._stritem*, %struct._stritem** %9, align 8
  %70 = getelementptr inbounds %struct._stritem, %struct._stritem* %69, i32 0, i32 7
  %71 = load i16, i16* %70, align 2
  %72 = zext i16 %71 to i32
  %73 = and i32 %72, 2
  %74 = icmp ne i32 %73, 0
  %75 = zext i1 %74 to i64
  %76 = select i1 %74, i64 8, i64 0
  %77 = getelementptr inbounds i8, i8* %68, i64 %76
  %78 = load %struct._stritem*, %struct._stritem** %9, align 8
  %79 = getelementptr inbounds %struct._stritem, %struct._stritem* %78, i32 0, i32 9
  %80 = load i8, i8* %79, align 1
  %81 = zext i8 %80 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %65, i8* align 1 %77, i64 %81, i1 false)
  %82 = load %struct.logentry_eviction*, %struct.logentry_eviction** %10, align 8
  %83 = getelementptr inbounds %struct.logentry_eviction, %struct.logentry_eviction* %82, i32 0, i32 4
  %84 = load i8, i8* %83, align 2
  %85 = zext i8 %84 to i64
  %86 = add i64 24, %85
  %87 = trunc i64 %86 to i32
  %88 = load %struct._logentry*, %struct._logentry** %5, align 8
  %89 = getelementptr inbounds %struct._logentry, %struct._logentry* %88, i32 0, i32 5
  store i32 %87, i32* %89, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @_logger_parse_ee(%struct._logentry* %0, i8* %1) #0 {
  %3 = alloca %struct._logentry*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca [751 x i8], align 16
  %7 = alloca %struct.logentry_eviction*, align 8
  store %struct._logentry* %0, %struct._logentry** %3, align 8
  store i8* %1, i8** %4, align 8
  %8 = load %struct._logentry*, %struct._logentry** %3, align 8
  %9 = getelementptr inbounds %struct._logentry, %struct._logentry* %8, i32 0, i32 6
  %10 = getelementptr inbounds [0 x %union.anon.9], [0 x %union.anon.9]* %9, i64 0, i64 0
  %11 = bitcast %union.anon.9* %10 to %struct.logentry_eviction*
  store %struct.logentry_eviction* %11, %struct.logentry_eviction** %7, align 8
  %12 = load %struct.logentry_eviction*, %struct.logentry_eviction** %7, align 8
  %13 = getelementptr inbounds %struct.logentry_eviction, %struct.logentry_eviction* %12, i32 0, i32 6
  %14 = getelementptr inbounds [0 x i8], [0 x i8]* %13, i64 0, i64 0
  %15 = getelementptr inbounds [751 x i8], [751 x i8]* %6, i64 0, i64 0
  %16 = load %struct.logentry_eviction*, %struct.logentry_eviction** %7, align 8
  %17 = getelementptr inbounds %struct.logentry_eviction, %struct.logentry_eviction* %16, i32 0, i32 4
  %18 = load i8, i8* %17, align 2
  %19 = zext i8 %18 to i64
  %20 = call zeroext i1 @uriencode(i8* %14, i8* %15, i64 %19, i64 751)
  %21 = load i8*, i8** %4, align 8
  %22 = load %struct._logentry*, %struct._logentry** %3, align 8
  %23 = getelementptr inbounds %struct._logentry, %struct._logentry* %22, i32 0, i32 4
  %24 = getelementptr inbounds %struct.timeval, %struct.timeval* %23, i32 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = trunc i64 %25 to i32
  %27 = load %struct._logentry*, %struct._logentry** %3, align 8
  %28 = getelementptr inbounds %struct._logentry, %struct._logentry* %27, i32 0, i32 4
  %29 = getelementptr inbounds %struct.timeval, %struct.timeval* %28, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = trunc i64 %30 to i32
  %32 = load %struct._logentry*, %struct._logentry** %3, align 8
  %33 = getelementptr inbounds %struct._logentry, %struct._logentry* %32, i32 0, i32 3
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds [751 x i8], [751 x i8]* %6, i64 0, i64 0
  %36 = load %struct.logentry_eviction*, %struct.logentry_eviction** %7, align 8
  %37 = getelementptr inbounds %struct.logentry_eviction, %struct.logentry_eviction* %36, i32 0, i32 3
  %38 = load i16, i16* %37, align 8
  %39 = zext i16 %38 to i32
  %40 = and i32 %39, 8
  %41 = icmp ne i32 %40, 0
  %42 = zext i1 %41 to i64
  %43 = select i1 %41, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19.845, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20.846, i64 0, i64 0)
  %44 = load %struct.logentry_eviction*, %struct.logentry_eviction** %7, align 8
  %45 = getelementptr inbounds %struct.logentry_eviction, %struct.logentry_eviction* %44, i32 0, i32 0
  %46 = load i64, i64* %45, align 8
  %47 = load %struct.logentry_eviction*, %struct.logentry_eviction** %7, align 8
  %48 = getelementptr inbounds %struct.logentry_eviction, %struct.logentry_eviction* %47, i32 0, i32 2
  %49 = load i32, i32* %48, align 4
  %50 = load %struct.logentry_eviction*, %struct.logentry_eviction** %7, align 8
  %51 = getelementptr inbounds %struct.logentry_eviction, %struct.logentry_eviction* %50, i32 0, i32 5
  %52 = load i8, i8* %51, align 1
  %53 = zext i8 %52 to i32
  %54 = load %struct.logentry_eviction*, %struct.logentry_eviction** %7, align 8
  %55 = getelementptr inbounds %struct.logentry_eviction, %struct.logentry_eviction* %54, i32 0, i32 1
  %56 = load i32, i32* %55, align 8
  %57 = icmp sgt i32 %56, 0
  br i1 %57, label %58, label %63

58:                                               ; preds = %2
  %59 = load %struct.logentry_eviction*, %struct.logentry_eviction** %7, align 8
  %60 = getelementptr inbounds %struct.logentry_eviction, %struct.logentry_eviction* %59, i32 0, i32 1
  %61 = load i32, i32* %60, align 8
  %62 = sub nsw i32 %61, 2
  br label %64

63:                                               ; preds = %2
  br label %64

64:                                               ; preds = %63, %58
  %65 = phi i32 [ %62, %58 ], [ 0, %63 ]
  %66 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %21, i64 4096, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.18.877, i64 0, i64 0), i32 %26, i32 %31, i64 %34, i8* %35, i8* %43, i64 %46, i32 %49, i32 %53, i32 %65) #14
  store i32 %66, i32* %5, align 4
  %67 = load i32, i32* %5, align 4
  ret i32 %67
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @_logger_log_item_get(%struct._logentry* %0, %struct._entry_details* %1, i8* %2, %struct.__va_list_tag* %3) #0 {
  %5 = alloca %struct._logentry*, align 8
  %6 = alloca %struct._entry_details*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca %struct.__va_list_tag*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i32, align 4
  %13 = alloca i8, align 1
  %14 = alloca i32, align 4
  %15 = alloca %struct.logentry_item_get*, align 8
  store %struct._logentry* %0, %struct._logentry** %5, align 8
  store %struct._entry_details* %1, %struct._entry_details** %6, align 8
  store i8* %2, i8** %7, align 8
  store %struct.__va_list_tag* %3, %struct.__va_list_tag** %8, align 8
  %16 = load %struct.__va_list_tag*, %struct.__va_list_tag** %8, align 8
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %16, i32 0, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = icmp ule i32 %18, 40
  br i1 %19, label %20, label %26

20:                                               ; preds = %4
  %21 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %16, i32 0, i32 3
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr i8, i8* %22, i32 %18
  %24 = bitcast i8* %23 to i32*
  %25 = add i32 %18, 8
  store i32 %25, i32* %17, align 8
  br label %31

26:                                               ; preds = %4
  %27 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %16, i32 0, i32 2
  %28 = load i8*, i8** %27, align 8
  %29 = bitcast i8* %28 to i32*
  %30 = getelementptr i8, i8* %28, i32 8
  store i8* %30, i8** %27, align 8
  br label %31

31:                                               ; preds = %26, %20
  %32 = phi i32* [ %24, %20 ], [ %29, %26 ]
  %33 = load i32, i32* %32, align 4
  store i32 %33, i32* %9, align 4
  %34 = load %struct.__va_list_tag*, %struct.__va_list_tag** %8, align 8
  %35 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %34, i32 0, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = icmp ule i32 %36, 40
  br i1 %37, label %38, label %44

38:                                               ; preds = %31
  %39 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %34, i32 0, i32 3
  %40 = load i8*, i8** %39, align 8
  %41 = getelementptr i8, i8* %40, i32 %36
  %42 = bitcast i8* %41 to i8**
  %43 = add i32 %36, 8
  store i32 %43, i32* %35, align 8
  br label %49

44:                                               ; preds = %31
  %45 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %34, i32 0, i32 2
  %46 = load i8*, i8** %45, align 8
  %47 = bitcast i8* %46 to i8**
  %48 = getelementptr i8, i8* %46, i32 8
  store i8* %48, i8** %45, align 8
  br label %49

49:                                               ; preds = %44, %38
  %50 = phi i8** [ %42, %38 ], [ %47, %44 ]
  %51 = load i8*, i8** %50, align 8
  store i8* %51, i8** %10, align 8
  %52 = load %struct.__va_list_tag*, %struct.__va_list_tag** %8, align 8
  %53 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %52, i32 0, i32 0
  %54 = load i32, i32* %53, align 8
  %55 = icmp ule i32 %54, 40
  br i1 %55, label %56, label %62

56:                                               ; preds = %49
  %57 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %52, i32 0, i32 3
  %58 = load i8*, i8** %57, align 8
  %59 = getelementptr i8, i8* %58, i32 %54
  %60 = bitcast i8* %59 to i64*
  %61 = add i32 %54, 8
  store i32 %61, i32* %53, align 8
  br label %67

62:                                               ; preds = %49
  %63 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %52, i32 0, i32 2
  %64 = load i8*, i8** %63, align 8
  %65 = bitcast i8* %64 to i64*
  %66 = getelementptr i8, i8* %64, i32 8
  store i8* %66, i8** %63, align 8
  br label %67

67:                                               ; preds = %62, %56
  %68 = phi i64* [ %60, %56 ], [ %65, %62 ]
  %69 = load i64, i64* %68, align 8
  store i64 %69, i64* %11, align 8
  %70 = load %struct.__va_list_tag*, %struct.__va_list_tag** %8, align 8
  %71 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %70, i32 0, i32 0
  %72 = load i32, i32* %71, align 8
  %73 = icmp ule i32 %72, 40
  br i1 %73, label %74, label %80

74:                                               ; preds = %67
  %75 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %70, i32 0, i32 3
  %76 = load i8*, i8** %75, align 8
  %77 = getelementptr i8, i8* %76, i32 %72
  %78 = bitcast i8* %77 to i32*
  %79 = add i32 %72, 8
  store i32 %79, i32* %71, align 8
  br label %85

80:                                               ; preds = %67
  %81 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %70, i32 0, i32 2
  %82 = load i8*, i8** %81, align 8
  %83 = bitcast i8* %82 to i32*
  %84 = getelementptr i8, i8* %82, i32 8
  store i8* %84, i8** %81, align 8
  br label %85

85:                                               ; preds = %80, %74
  %86 = phi i32* [ %78, %74 ], [ %83, %80 ]
  %87 = load i32, i32* %86, align 4
  store i32 %87, i32* %12, align 4
  %88 = load %struct.__va_list_tag*, %struct.__va_list_tag** %8, align 8
  %89 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %88, i32 0, i32 0
  %90 = load i32, i32* %89, align 8
  %91 = icmp ule i32 %90, 40
  br i1 %91, label %92, label %98

92:                                               ; preds = %85
  %93 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %88, i32 0, i32 3
  %94 = load i8*, i8** %93, align 8
  %95 = getelementptr i8, i8* %94, i32 %90
  %96 = bitcast i8* %95 to i32*
  %97 = add i32 %90, 8
  store i32 %97, i32* %89, align 8
  br label %103

98:                                               ; preds = %85
  %99 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %88, i32 0, i32 2
  %100 = load i8*, i8** %99, align 8
  %101 = bitcast i8* %100 to i32*
  %102 = getelementptr i8, i8* %100, i32 8
  store i8* %102, i8** %99, align 8
  br label %103

103:                                              ; preds = %98, %92
  %104 = phi i32* [ %96, %92 ], [ %101, %98 ]
  %105 = load i32, i32* %104, align 4
  %106 = trunc i32 %105 to i8
  store i8 %106, i8* %13, align 1
  %107 = load %struct.__va_list_tag*, %struct.__va_list_tag** %8, align 8
  %108 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %107, i32 0, i32 0
  %109 = load i32, i32* %108, align 8
  %110 = icmp ule i32 %109, 40
  br i1 %110, label %111, label %117

111:                                              ; preds = %103
  %112 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %107, i32 0, i32 3
  %113 = load i8*, i8** %112, align 8
  %114 = getelementptr i8, i8* %113, i32 %109
  %115 = bitcast i8* %114 to i32*
  %116 = add i32 %109, 8
  store i32 %116, i32* %108, align 8
  br label %122

117:                                              ; preds = %103
  %118 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %107, i32 0, i32 2
  %119 = load i8*, i8** %118, align 8
  %120 = bitcast i8* %119 to i32*
  %121 = getelementptr i8, i8* %119, i32 8
  store i8* %121, i8** %118, align 8
  br label %122

122:                                              ; preds = %117, %111
  %123 = phi i32* [ %115, %111 ], [ %120, %117 ]
  %124 = load i32, i32* %123, align 4
  store i32 %124, i32* %14, align 4
  %125 = load %struct._logentry*, %struct._logentry** %5, align 8
  %126 = getelementptr inbounds %struct._logentry, %struct._logentry* %125, i32 0, i32 6
  %127 = getelementptr inbounds [0 x %union.anon.9], [0 x %union.anon.9]* %126, i64 0, i64 0
  %128 = bitcast %union.anon.9* %127 to %struct.logentry_item_get*
  store %struct.logentry_item_get* %128, %struct.logentry_item_get** %15, align 8
  %129 = load i32, i32* %9, align 4
  %130 = trunc i32 %129 to i8
  %131 = load %struct.logentry_item_get*, %struct.logentry_item_get** %15, align 8
  %132 = getelementptr inbounds %struct.logentry_item_get, %struct.logentry_item_get* %131, i32 0, i32 0
  store i8 %130, i8* %132, align 4
  %133 = load i64, i64* %11, align 8
  %134 = trunc i64 %133 to i8
  %135 = load %struct.logentry_item_get*, %struct.logentry_item_get** %15, align 8
  %136 = getelementptr inbounds %struct.logentry_item_get, %struct.logentry_item_get* %135, i32 0, i32 1
  store i8 %134, i8* %136, align 1
  %137 = load i32, i32* %12, align 4
  %138 = load %struct.logentry_item_get*, %struct.logentry_item_get** %15, align 8
  %139 = getelementptr inbounds %struct.logentry_item_get, %struct.logentry_item_get* %138, i32 0, i32 3
  store i32 %137, i32* %139, align 4
  %140 = load i8, i8* %13, align 1
  %141 = load %struct.logentry_item_get*, %struct.logentry_item_get** %15, align 8
  %142 = getelementptr inbounds %struct.logentry_item_get, %struct.logentry_item_get* %141, i32 0, i32 2
  store i8 %140, i8* %142, align 2
  %143 = load %struct.logentry_item_get*, %struct.logentry_item_get** %15, align 8
  %144 = getelementptr inbounds %struct.logentry_item_get, %struct.logentry_item_get* %143, i32 0, i32 5
  %145 = getelementptr inbounds [0 x i8], [0 x i8]* %144, i64 0, i64 0
  %146 = load i8*, i8** %10, align 8
  %147 = load i64, i64* %11, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %145, i8* align 1 %146, i64 %147, i1 false)
  %148 = load i32, i32* %14, align 4
  %149 = load %struct.logentry_item_get*, %struct.logentry_item_get** %15, align 8
  %150 = getelementptr inbounds %struct.logentry_item_get, %struct.logentry_item_get* %149, i32 0, i32 4
  store i32 %148, i32* %150, align 4
  %151 = load i64, i64* %11, align 8
  %152 = add i64 12, %151
  %153 = trunc i64 %152 to i32
  %154 = load %struct._logentry*, %struct._logentry** %5, align 8
  %155 = getelementptr inbounds %struct._logentry, %struct._logentry* %154, i32 0, i32 5
  store i32 %153, i32* %155, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @_logger_parse_ige(%struct._logentry* %0, i8* %1) #0 {
  %3 = alloca %struct._logentry*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.logentry_item_get*, align 8
  %7 = alloca [751 x i8], align 16
  %8 = alloca [4 x i8*], align 16
  store %struct._logentry* %0, %struct._logentry** %3, align 8
  store i8* %1, i8** %4, align 8
  %9 = load %struct._logentry*, %struct._logentry** %3, align 8
  %10 = getelementptr inbounds %struct._logentry, %struct._logentry* %9, i32 0, i32 6
  %11 = getelementptr inbounds [0 x %union.anon.9], [0 x %union.anon.9]* %10, i64 0, i64 0
  %12 = bitcast %union.anon.9* %11 to %struct.logentry_item_get*
  store %struct.logentry_item_get* %12, %struct.logentry_item_get** %6, align 8
  %13 = bitcast [4 x i8*]* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %13, i8* align 16 bitcast ([4 x i8*]* @__const._logger_parse_ige.was_found_map to i8*), i64 32, i1 false)
  %14 = load %struct.logentry_item_get*, %struct.logentry_item_get** %6, align 8
  %15 = getelementptr inbounds %struct.logentry_item_get, %struct.logentry_item_get* %14, i32 0, i32 5
  %16 = getelementptr inbounds [0 x i8], [0 x i8]* %15, i64 0, i64 0
  %17 = getelementptr inbounds [751 x i8], [751 x i8]* %7, i64 0, i64 0
  %18 = load %struct.logentry_item_get*, %struct.logentry_item_get** %6, align 8
  %19 = getelementptr inbounds %struct.logentry_item_get, %struct.logentry_item_get* %18, i32 0, i32 1
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i64
  %22 = call zeroext i1 @uriencode(i8* %16, i8* %17, i64 %21, i64 751)
  %23 = load i8*, i8** %4, align 8
  %24 = load %struct._logentry*, %struct._logentry** %3, align 8
  %25 = getelementptr inbounds %struct._logentry, %struct._logentry* %24, i32 0, i32 4
  %26 = getelementptr inbounds %struct.timeval, %struct.timeval* %25, i32 0, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = trunc i64 %27 to i32
  %29 = load %struct._logentry*, %struct._logentry** %3, align 8
  %30 = getelementptr inbounds %struct._logentry, %struct._logentry* %29, i32 0, i32 4
  %31 = getelementptr inbounds %struct.timeval, %struct.timeval* %30, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = trunc i64 %32 to i32
  %34 = load %struct._logentry*, %struct._logentry** %3, align 8
  %35 = getelementptr inbounds %struct._logentry, %struct._logentry* %34, i32 0, i32 3
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds [751 x i8], [751 x i8]* %7, i64 0, i64 0
  %38 = load %struct.logentry_item_get*, %struct.logentry_item_get** %6, align 8
  %39 = getelementptr inbounds %struct.logentry_item_get, %struct.logentry_item_get* %38, i32 0, i32 0
  %40 = load i8, i8* %39, align 4
  %41 = zext i8 %40 to i64
  %42 = getelementptr inbounds [4 x i8*], [4 x i8*]* %8, i64 0, i64 %41
  %43 = load i8*, i8** %42, align 8
  %44 = load %struct.logentry_item_get*, %struct.logentry_item_get** %6, align 8
  %45 = getelementptr inbounds %struct.logentry_item_get, %struct.logentry_item_get* %44, i32 0, i32 2
  %46 = load i8, i8* %45, align 2
  %47 = zext i8 %46 to i32
  %48 = load %struct.logentry_item_get*, %struct.logentry_item_get** %6, align 8
  %49 = getelementptr inbounds %struct.logentry_item_get, %struct.logentry_item_get* %48, i32 0, i32 4
  %50 = load i32, i32* %49, align 4
  %51 = load %struct.logentry_item_get*, %struct.logentry_item_get** %6, align 8
  %52 = getelementptr inbounds %struct.logentry_item_get, %struct.logentry_item_get* %51, i32 0, i32 3
  %53 = load i32, i32* %52, align 4
  %54 = icmp sgt i32 %53, 0
  br i1 %54, label %55, label %60

55:                                               ; preds = %2
  %56 = load %struct.logentry_item_get*, %struct.logentry_item_get** %6, align 8
  %57 = getelementptr inbounds %struct.logentry_item_get, %struct.logentry_item_get* %56, i32 0, i32 3
  %58 = load i32, i32* %57, align 4
  %59 = sub nsw i32 %58, 2
  br label %61

60:                                               ; preds = %2
  br label %61

61:                                               ; preds = %60, %55
  %62 = phi i32 [ %59, %55 ], [ 0, %60 ]
  %63 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %23, i64 4096, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.25.873, i64 0, i64 0), i32 %28, i32 %33, i64 %36, i8* %37, i8* %43, i32 %47, i32 %50, i32 %62) #14
  store i32 %63, i32* %5, align 4
  %64 = load i32, i32* %5, align 4
  ret i32 %64
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @_logger_log_item_store(%struct._logentry* %0, %struct._entry_details* %1, i8* %2, %struct.__va_list_tag* %3) #0 {
  %5 = alloca %struct._logentry*, align 8
  %6 = alloca %struct._entry_details*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca %struct.__va_list_tag*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i8, align 1
  %16 = alloca i32, align 4
  %17 = alloca %struct.logentry_item_store*, align 8
  store %struct._logentry* %0, %struct._logentry** %5, align 8
  store %struct._entry_details* %1, %struct._entry_details** %6, align 8
  store i8* %2, i8** %7, align 8
  store %struct.__va_list_tag* %3, %struct.__va_list_tag** %8, align 8
  %18 = load %struct.__va_list_tag*, %struct.__va_list_tag** %8, align 8
  %19 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %18, i32 0, i32 0
  %20 = load i32, i32* %19, align 8
  %21 = icmp ule i32 %20, 40
  br i1 %21, label %22, label %28

22:                                               ; preds = %4
  %23 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %18, i32 0, i32 3
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr i8, i8* %24, i32 %20
  %26 = bitcast i8* %25 to i32*
  %27 = add i32 %20, 8
  store i32 %27, i32* %19, align 8
  br label %33

28:                                               ; preds = %4
  %29 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %18, i32 0, i32 2
  %30 = load i8*, i8** %29, align 8
  %31 = bitcast i8* %30 to i32*
  %32 = getelementptr i8, i8* %30, i32 8
  store i8* %32, i8** %29, align 8
  br label %33

33:                                               ; preds = %28, %22
  %34 = phi i32* [ %26, %22 ], [ %31, %28 ]
  %35 = load i32, i32* %34, align 4
  store i32 %35, i32* %9, align 4
  %36 = load %struct.__va_list_tag*, %struct.__va_list_tag** %8, align 8
  %37 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %36, i32 0, i32 0
  %38 = load i32, i32* %37, align 8
  %39 = icmp ule i32 %38, 40
  br i1 %39, label %40, label %46

40:                                               ; preds = %33
  %41 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %36, i32 0, i32 3
  %42 = load i8*, i8** %41, align 8
  %43 = getelementptr i8, i8* %42, i32 %38
  %44 = bitcast i8* %43 to i32*
  %45 = add i32 %38, 8
  store i32 %45, i32* %37, align 8
  br label %51

46:                                               ; preds = %33
  %47 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %36, i32 0, i32 2
  %48 = load i8*, i8** %47, align 8
  %49 = bitcast i8* %48 to i32*
  %50 = getelementptr i8, i8* %48, i32 8
  store i8* %50, i8** %47, align 8
  br label %51

51:                                               ; preds = %46, %40
  %52 = phi i32* [ %44, %40 ], [ %49, %46 ]
  %53 = load i32, i32* %52, align 4
  store i32 %53, i32* %10, align 4
  %54 = load %struct.__va_list_tag*, %struct.__va_list_tag** %8, align 8
  %55 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %54, i32 0, i32 0
  %56 = load i32, i32* %55, align 8
  %57 = icmp ule i32 %56, 40
  br i1 %57, label %58, label %64

58:                                               ; preds = %51
  %59 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %54, i32 0, i32 3
  %60 = load i8*, i8** %59, align 8
  %61 = getelementptr i8, i8* %60, i32 %56
  %62 = bitcast i8* %61 to i8**
  %63 = add i32 %56, 8
  store i32 %63, i32* %55, align 8
  br label %69

64:                                               ; preds = %51
  %65 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %54, i32 0, i32 2
  %66 = load i8*, i8** %65, align 8
  %67 = bitcast i8* %66 to i8**
  %68 = getelementptr i8, i8* %66, i32 8
  store i8* %68, i8** %65, align 8
  br label %69

69:                                               ; preds = %64, %58
  %70 = phi i8** [ %62, %58 ], [ %67, %64 ]
  %71 = load i8*, i8** %70, align 8
  store i8* %71, i8** %11, align 8
  %72 = load %struct.__va_list_tag*, %struct.__va_list_tag** %8, align 8
  %73 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %72, i32 0, i32 0
  %74 = load i32, i32* %73, align 8
  %75 = icmp ule i32 %74, 40
  br i1 %75, label %76, label %82

76:                                               ; preds = %69
  %77 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %72, i32 0, i32 3
  %78 = load i8*, i8** %77, align 8
  %79 = getelementptr i8, i8* %78, i32 %74
  %80 = bitcast i8* %79 to i64*
  %81 = add i32 %74, 8
  store i32 %81, i32* %73, align 8
  br label %87

82:                                               ; preds = %69
  %83 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %72, i32 0, i32 2
  %84 = load i8*, i8** %83, align 8
  %85 = bitcast i8* %84 to i64*
  %86 = getelementptr i8, i8* %84, i32 8
  store i8* %86, i8** %83, align 8
  br label %87

87:                                               ; preds = %82, %76
  %88 = phi i64* [ %80, %76 ], [ %85, %82 ]
  %89 = load i64, i64* %88, align 8
  store i64 %89, i64* %12, align 8
  %90 = load %struct.__va_list_tag*, %struct.__va_list_tag** %8, align 8
  %91 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %90, i32 0, i32 0
  %92 = load i32, i32* %91, align 8
  %93 = icmp ule i32 %92, 40
  br i1 %93, label %94, label %100

94:                                               ; preds = %87
  %95 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %90, i32 0, i32 3
  %96 = load i8*, i8** %95, align 8
  %97 = getelementptr i8, i8* %96, i32 %92
  %98 = bitcast i8* %97 to i32*
  %99 = add i32 %92, 8
  store i32 %99, i32* %91, align 8
  br label %105

100:                                              ; preds = %87
  %101 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %90, i32 0, i32 2
  %102 = load i8*, i8** %101, align 8
  %103 = bitcast i8* %102 to i32*
  %104 = getelementptr i8, i8* %102, i32 8
  store i8* %104, i8** %101, align 8
  br label %105

105:                                              ; preds = %100, %94
  %106 = phi i32* [ %98, %94 ], [ %103, %100 ]
  %107 = load i32, i32* %106, align 4
  store i32 %107, i32* %13, align 4
  %108 = load %struct.__va_list_tag*, %struct.__va_list_tag** %8, align 8
  %109 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %108, i32 0, i32 0
  %110 = load i32, i32* %109, align 8
  %111 = icmp ule i32 %110, 40
  br i1 %111, label %112, label %118

112:                                              ; preds = %105
  %113 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %108, i32 0, i32 3
  %114 = load i8*, i8** %113, align 8
  %115 = getelementptr i8, i8* %114, i32 %110
  %116 = bitcast i8* %115 to i32*
  %117 = add i32 %110, 8
  store i32 %117, i32* %109, align 8
  br label %123

118:                                              ; preds = %105
  %119 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %108, i32 0, i32 2
  %120 = load i8*, i8** %119, align 8
  %121 = bitcast i8* %120 to i32*
  %122 = getelementptr i8, i8* %120, i32 8
  store i8* %122, i8** %119, align 8
  br label %123

123:                                              ; preds = %118, %112
  %124 = phi i32* [ %116, %112 ], [ %121, %118 ]
  %125 = load i32, i32* %124, align 4
  store i32 %125, i32* %14, align 4
  %126 = load %struct.__va_list_tag*, %struct.__va_list_tag** %8, align 8
  %127 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %126, i32 0, i32 0
  %128 = load i32, i32* %127, align 8
  %129 = icmp ule i32 %128, 40
  br i1 %129, label %130, label %136

130:                                              ; preds = %123
  %131 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %126, i32 0, i32 3
  %132 = load i8*, i8** %131, align 8
  %133 = getelementptr i8, i8* %132, i32 %128
  %134 = bitcast i8* %133 to i32*
  %135 = add i32 %128, 8
  store i32 %135, i32* %127, align 8
  br label %141

136:                                              ; preds = %123
  %137 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %126, i32 0, i32 2
  %138 = load i8*, i8** %137, align 8
  %139 = bitcast i8* %138 to i32*
  %140 = getelementptr i8, i8* %138, i32 8
  store i8* %140, i8** %137, align 8
  br label %141

141:                                              ; preds = %136, %130
  %142 = phi i32* [ %134, %130 ], [ %139, %136 ]
  %143 = load i32, i32* %142, align 4
  %144 = trunc i32 %143 to i8
  store i8 %144, i8* %15, align 1
  %145 = load %struct.__va_list_tag*, %struct.__va_list_tag** %8, align 8
  %146 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %145, i32 0, i32 0
  %147 = load i32, i32* %146, align 8
  %148 = icmp ule i32 %147, 40
  br i1 %148, label %149, label %155

149:                                              ; preds = %141
  %150 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %145, i32 0, i32 3
  %151 = load i8*, i8** %150, align 8
  %152 = getelementptr i8, i8* %151, i32 %147
  %153 = bitcast i8* %152 to i32*
  %154 = add i32 %147, 8
  store i32 %154, i32* %146, align 8
  br label %160

155:                                              ; preds = %141
  %156 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %145, i32 0, i32 2
  %157 = load i8*, i8** %156, align 8
  %158 = bitcast i8* %157 to i32*
  %159 = getelementptr i8, i8* %157, i32 8
  store i8* %159, i8** %156, align 8
  br label %160

160:                                              ; preds = %155, %149
  %161 = phi i32* [ %153, %149 ], [ %158, %155 ]
  %162 = load i32, i32* %161, align 4
  store i32 %162, i32* %16, align 4
  %163 = load %struct._logentry*, %struct._logentry** %5, align 8
  %164 = getelementptr inbounds %struct._logentry, %struct._logentry* %163, i32 0, i32 6
  %165 = getelementptr inbounds [0 x %union.anon.9], [0 x %union.anon.9]* %164, i64 0, i64 0
  %166 = bitcast %union.anon.9* %165 to %struct.logentry_item_store*
  store %struct.logentry_item_store* %166, %struct.logentry_item_store** %17, align 8
  %167 = load i32, i32* %9, align 4
  %168 = load %struct.logentry_item_store*, %struct.logentry_item_store** %17, align 8
  %169 = getelementptr inbounds %struct.logentry_item_store, %struct.logentry_item_store* %168, i32 0, i32 0
  store i32 %167, i32* %169, align 4
  %170 = load i32, i32* %10, align 4
  %171 = load %struct.logentry_item_store*, %struct.logentry_item_store** %17, align 8
  %172 = getelementptr inbounds %struct.logentry_item_store, %struct.logentry_item_store* %171, i32 0, i32 1
  store i32 %170, i32* %172, align 4
  %173 = load i64, i64* %12, align 8
  %174 = trunc i64 %173 to i8
  %175 = load %struct.logentry_item_store*, %struct.logentry_item_store** %17, align 8
  %176 = getelementptr inbounds %struct.logentry_item_store, %struct.logentry_item_store* %175, i32 0, i32 3
  store i8 %174, i8* %176, align 4
  %177 = load i32, i32* %13, align 4
  %178 = load %struct.logentry_item_store*, %struct.logentry_item_store** %17, align 8
  %179 = getelementptr inbounds %struct.logentry_item_store, %struct.logentry_item_store* %178, i32 0, i32 5
  store i32 %177, i32* %179, align 4
  %180 = load i8, i8* %15, align 1
  %181 = load %struct.logentry_item_store*, %struct.logentry_item_store** %17, align 8
  %182 = getelementptr inbounds %struct.logentry_item_store, %struct.logentry_item_store* %181, i32 0, i32 4
  store i8 %180, i8* %182, align 1
  %183 = load i32, i32* %14, align 4
  %184 = icmp ne i32 %183, 0
  br i1 %184, label %185, label %191

185:                                              ; preds = %160
  %186 = load i32, i32* %14, align 4
  %187 = load volatile i32, i32* @current_time, align 4
  %188 = sub i32 %186, %187
  %189 = load %struct.logentry_item_store*, %struct.logentry_item_store** %17, align 8
  %190 = getelementptr inbounds %struct.logentry_item_store, %struct.logentry_item_store* %189, i32 0, i32 2
  store i32 %188, i32* %190, align 4
  br label %194

191:                                              ; preds = %160
  %192 = load %struct.logentry_item_store*, %struct.logentry_item_store** %17, align 8
  %193 = getelementptr inbounds %struct.logentry_item_store, %struct.logentry_item_store* %192, i32 0, i32 2
  store i32 0, i32* %193, align 4
  br label %194

194:                                              ; preds = %191, %185
  %195 = load %struct.logentry_item_store*, %struct.logentry_item_store** %17, align 8
  %196 = getelementptr inbounds %struct.logentry_item_store, %struct.logentry_item_store* %195, i32 0, i32 7
  %197 = getelementptr inbounds [0 x i8], [0 x i8]* %196, i64 0, i64 0
  %198 = load i8*, i8** %11, align 8
  %199 = load i64, i64* %12, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %197, i8* align 1 %198, i64 %199, i1 false)
  %200 = load i32, i32* %16, align 4
  %201 = load %struct.logentry_item_store*, %struct.logentry_item_store** %17, align 8
  %202 = getelementptr inbounds %struct.logentry_item_store, %struct.logentry_item_store* %201, i32 0, i32 6
  store i32 %200, i32* %202, align 4
  %203 = load i64, i64* %12, align 8
  %204 = add i64 24, %203
  %205 = trunc i64 %204 to i32
  %206 = load %struct._logentry*, %struct._logentry** %5, align 8
  %207 = getelementptr inbounds %struct._logentry, %struct._logentry* %206, i32 0, i32 5
  store i32 %205, i32* %207, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @_logger_parse_ise(%struct._logentry* %0, i8* %1) #0 {
  %3 = alloca %struct._logentry*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca [751 x i8], align 16
  %8 = alloca %struct.logentry_item_store*, align 8
  %9 = alloca [6 x i8*], align 16
  %10 = alloca [7 x i8*], align 16
  store %struct._logentry* %0, %struct._logentry** %3, align 8
  store i8* %1, i8** %4, align 8
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26.858, i64 0, i64 0), i8** %6, align 8
  %11 = load %struct._logentry*, %struct._logentry** %3, align 8
  %12 = getelementptr inbounds %struct._logentry, %struct._logentry* %11, i32 0, i32 6
  %13 = getelementptr inbounds [0 x %union.anon.9], [0 x %union.anon.9]* %12, i64 0, i64 0
  %14 = bitcast %union.anon.9* %13 to %struct.logentry_item_store*
  store %struct.logentry_item_store* %14, %struct.logentry_item_store** %8, align 8
  %15 = bitcast [6 x i8*]* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %15, i8 0, i64 48, i1 false)
  %16 = bitcast i8* %15 to [6 x i8*]*
  %17 = getelementptr inbounds [6 x i8*], [6 x i8*]* %16, i32 0, i32 0
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.27.859, i32 0, i32 0), i8** %17, align 16
  %18 = getelementptr inbounds [6 x i8*], [6 x i8*]* %16, i32 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.28.860, i32 0, i32 0), i8** %18, align 8
  %19 = getelementptr inbounds [6 x i8*], [6 x i8*]* %16, i32 0, i32 2
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.29.861, i32 0, i32 0), i8** %19, align 16
  %20 = getelementptr inbounds [6 x i8*], [6 x i8*]* %16, i32 0, i32 3
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.21.862, i32 0, i32 0), i8** %20, align 8
  %21 = getelementptr inbounds [6 x i8*], [6 x i8*]* %16, i32 0, i32 4
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.30.863, i32 0, i32 0), i8** %21, align 16
  %22 = getelementptr inbounds [6 x i8*], [6 x i8*]* %16, i32 0, i32 5
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.31.864, i32 0, i32 0), i8** %22, align 8
  %23 = bitcast [7 x i8*]* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %23, i8* align 16 bitcast ([7 x i8*]* @__const._logger_parse_ise.cmd_map to i8*), i64 56, i1 false)
  %24 = load %struct.logentry_item_store*, %struct.logentry_item_store** %8, align 8
  %25 = getelementptr inbounds %struct.logentry_item_store, %struct.logentry_item_store* %24, i32 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = icmp sle i32 %26, 6
  br i1 %27, label %28, label %35

28:                                               ; preds = %2
  %29 = load %struct.logentry_item_store*, %struct.logentry_item_store** %8, align 8
  %30 = getelementptr inbounds %struct.logentry_item_store, %struct.logentry_item_store* %29, i32 0, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds [7 x i8*], [7 x i8*]* %10, i64 0, i64 %32
  %34 = load i8*, i8** %33, align 8
  store i8* %34, i8** %6, align 8
  br label %35

35:                                               ; preds = %28, %2
  %36 = load %struct.logentry_item_store*, %struct.logentry_item_store** %8, align 8
  %37 = getelementptr inbounds %struct.logentry_item_store, %struct.logentry_item_store* %36, i32 0, i32 7
  %38 = getelementptr inbounds [0 x i8], [0 x i8]* %37, i64 0, i64 0
  %39 = getelementptr inbounds [751 x i8], [751 x i8]* %7, i64 0, i64 0
  %40 = load %struct.logentry_item_store*, %struct.logentry_item_store** %8, align 8
  %41 = getelementptr inbounds %struct.logentry_item_store, %struct.logentry_item_store* %40, i32 0, i32 3
  %42 = load i8, i8* %41, align 4
  %43 = zext i8 %42 to i64
  %44 = call zeroext i1 @uriencode(i8* %38, i8* %39, i64 %43, i64 751)
  %45 = load i8*, i8** %4, align 8
  %46 = load %struct._logentry*, %struct._logentry** %3, align 8
  %47 = getelementptr inbounds %struct._logentry, %struct._logentry* %46, i32 0, i32 4
  %48 = getelementptr inbounds %struct.timeval, %struct.timeval* %47, i32 0, i32 0
  %49 = load i64, i64* %48, align 8
  %50 = trunc i64 %49 to i32
  %51 = load %struct._logentry*, %struct._logentry** %3, align 8
  %52 = getelementptr inbounds %struct._logentry, %struct._logentry* %51, i32 0, i32 4
  %53 = getelementptr inbounds %struct.timeval, %struct.timeval* %52, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = trunc i64 %54 to i32
  %56 = load %struct._logentry*, %struct._logentry** %3, align 8
  %57 = getelementptr inbounds %struct._logentry, %struct._logentry* %56, i32 0, i32 3
  %58 = load i64, i64* %57, align 8
  %59 = getelementptr inbounds [751 x i8], [751 x i8]* %7, i64 0, i64 0
  %60 = load %struct.logentry_item_store*, %struct.logentry_item_store** %8, align 8
  %61 = getelementptr inbounds %struct.logentry_item_store, %struct.logentry_item_store* %60, i32 0, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds [6 x i8*], [6 x i8*]* %9, i64 0, i64 %63
  %65 = load i8*, i8** %64, align 8
  %66 = load i8*, i8** %6, align 8
  %67 = load %struct.logentry_item_store*, %struct.logentry_item_store** %8, align 8
  %68 = getelementptr inbounds %struct.logentry_item_store, %struct.logentry_item_store* %67, i32 0, i32 2
  %69 = load i32, i32* %68, align 4
  %70 = load %struct.logentry_item_store*, %struct.logentry_item_store** %8, align 8
  %71 = getelementptr inbounds %struct.logentry_item_store, %struct.logentry_item_store* %70, i32 0, i32 4
  %72 = load i8, i8* %71, align 1
  %73 = zext i8 %72 to i32
  %74 = load %struct.logentry_item_store*, %struct.logentry_item_store** %8, align 8
  %75 = getelementptr inbounds %struct.logentry_item_store, %struct.logentry_item_store* %74, i32 0, i32 6
  %76 = load i32, i32* %75, align 4
  %77 = load %struct.logentry_item_store*, %struct.logentry_item_store** %8, align 8
  %78 = getelementptr inbounds %struct.logentry_item_store, %struct.logentry_item_store* %77, i32 0, i32 5
  %79 = load i32, i32* %78, align 4
  %80 = icmp sgt i32 %79, 0
  br i1 %80, label %81, label %86

81:                                               ; preds = %35
  %82 = load %struct.logentry_item_store*, %struct.logentry_item_store** %8, align 8
  %83 = getelementptr inbounds %struct.logentry_item_store, %struct.logentry_item_store* %82, i32 0, i32 5
  %84 = load i32, i32* %83, align 4
  %85 = sub nsw i32 %84, 2
  br label %87

86:                                               ; preds = %35
  br label %87

87:                                               ; preds = %86, %81
  %88 = phi i32 [ %85, %81 ], [ 0, %86 ]
  %89 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %45, i64 4096, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.39.865, i64 0, i64 0), i32 %50, i32 %55, i64 %58, i8* %59, i8* %65, i8* %66, i32 %69, i32 %73, i32 %76, i32 %88) #14
  store i32 %89, i32* %5, align 4
  %90 = load i32, i32* %5, align 4
  ret i32 %90
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @_logger_log_conn_event(%struct._logentry* %0, %struct._entry_details* %1, i8* %2, %struct.__va_list_tag* %3) #0 {
  %5 = alloca %struct._logentry*, align 8
  %6 = alloca %struct._entry_details*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca %struct.__va_list_tag*, align 8
  %9 = alloca %struct.sockaddr_in6*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %struct.logentry_conn_event*, align 8
  store %struct._logentry* %0, %struct._logentry** %5, align 8
  store %struct._entry_details* %1, %struct._entry_details** %6, align 8
  store i8* %2, i8** %7, align 8
  store %struct.__va_list_tag* %3, %struct.__va_list_tag** %8, align 8
  %15 = load %struct.__va_list_tag*, %struct.__va_list_tag** %8, align 8
  %16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %15, i32 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = icmp ule i32 %17, 40
  br i1 %18, label %19, label %25

19:                                               ; preds = %4
  %20 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %15, i32 0, i32 3
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr i8, i8* %21, i32 %17
  %23 = bitcast i8* %22 to %struct.sockaddr_in6**
  %24 = add i32 %17, 8
  store i32 %24, i32* %16, align 8
  br label %30

25:                                               ; preds = %4
  %26 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %15, i32 0, i32 2
  %27 = load i8*, i8** %26, align 8
  %28 = bitcast i8* %27 to %struct.sockaddr_in6**
  %29 = getelementptr i8, i8* %27, i32 8
  store i8* %29, i8** %26, align 8
  br label %30

30:                                               ; preds = %25, %19
  %31 = phi %struct.sockaddr_in6** [ %23, %19 ], [ %28, %25 ]
  %32 = load %struct.sockaddr_in6*, %struct.sockaddr_in6** %31, align 8
  store %struct.sockaddr_in6* %32, %struct.sockaddr_in6** %9, align 8
  %33 = load %struct.__va_list_tag*, %struct.__va_list_tag** %8, align 8
  %34 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %33, i32 0, i32 0
  %35 = load i32, i32* %34, align 8
  %36 = icmp ule i32 %35, 40
  br i1 %36, label %37, label %43

37:                                               ; preds = %30
  %38 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %33, i32 0, i32 3
  %39 = load i8*, i8** %38, align 8
  %40 = getelementptr i8, i8* %39, i32 %35
  %41 = bitcast i8* %40 to i32*
  %42 = add i32 %35, 8
  store i32 %42, i32* %34, align 8
  br label %48

43:                                               ; preds = %30
  %44 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %33, i32 0, i32 2
  %45 = load i8*, i8** %44, align 8
  %46 = bitcast i8* %45 to i32*
  %47 = getelementptr i8, i8* %45, i32 8
  store i8* %47, i8** %44, align 8
  br label %48

48:                                               ; preds = %43, %37
  %49 = phi i32* [ %41, %37 ], [ %46, %43 ]
  %50 = load i32, i32* %49, align 4
  store i32 %50, i32* %10, align 4
  %51 = load %struct.__va_list_tag*, %struct.__va_list_tag** %8, align 8
  %52 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %51, i32 0, i32 0
  %53 = load i32, i32* %52, align 8
  %54 = icmp ule i32 %53, 40
  br i1 %54, label %55, label %61

55:                                               ; preds = %48
  %56 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %51, i32 0, i32 3
  %57 = load i8*, i8** %56, align 8
  %58 = getelementptr i8, i8* %57, i32 %53
  %59 = bitcast i8* %58 to i32*
  %60 = add i32 %53, 8
  store i32 %60, i32* %52, align 8
  br label %66

61:                                               ; preds = %48
  %62 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %51, i32 0, i32 2
  %63 = load i8*, i8** %62, align 8
  %64 = bitcast i8* %63 to i32*
  %65 = getelementptr i8, i8* %63, i32 8
  store i8* %65, i8** %62, align 8
  br label %66

66:                                               ; preds = %61, %55
  %67 = phi i32* [ %59, %55 ], [ %64, %61 ]
  %68 = load i32, i32* %67, align 4
  store i32 %68, i32* %11, align 4
  %69 = load %struct.__va_list_tag*, %struct.__va_list_tag** %8, align 8
  %70 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %69, i32 0, i32 0
  %71 = load i32, i32* %70, align 8
  %72 = icmp ule i32 %71, 40
  br i1 %72, label %73, label %79

73:                                               ; preds = %66
  %74 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %69, i32 0, i32 3
  %75 = load i8*, i8** %74, align 8
  %76 = getelementptr i8, i8* %75, i32 %71
  %77 = bitcast i8* %76 to i32*
  %78 = add i32 %71, 8
  store i32 %78, i32* %70, align 8
  br label %84

79:                                               ; preds = %66
  %80 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %69, i32 0, i32 2
  %81 = load i8*, i8** %80, align 8
  %82 = bitcast i8* %81 to i32*
  %83 = getelementptr i8, i8* %81, i32 8
  store i8* %83, i8** %80, align 8
  br label %84

84:                                               ; preds = %79, %73
  %85 = phi i32* [ %77, %73 ], [ %82, %79 ]
  %86 = load i32, i32* %85, align 4
  store i32 %86, i32* %12, align 4
  %87 = load %struct.__va_list_tag*, %struct.__va_list_tag** %8, align 8
  %88 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %87, i32 0, i32 0
  %89 = load i32, i32* %88, align 8
  %90 = icmp ule i32 %89, 40
  br i1 %90, label %91, label %97

91:                                               ; preds = %84
  %92 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %87, i32 0, i32 3
  %93 = load i8*, i8** %92, align 8
  %94 = getelementptr i8, i8* %93, i32 %89
  %95 = bitcast i8* %94 to i32*
  %96 = add i32 %89, 8
  store i32 %96, i32* %88, align 8
  br label %102

97:                                               ; preds = %84
  %98 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %87, i32 0, i32 2
  %99 = load i8*, i8** %98, align 8
  %100 = bitcast i8* %99 to i32*
  %101 = getelementptr i8, i8* %99, i32 8
  store i8* %101, i8** %98, align 8
  br label %102

102:                                              ; preds = %97, %91
  %103 = phi i32* [ %95, %91 ], [ %100, %97 ]
  %104 = load i32, i32* %103, align 4
  store i32 %104, i32* %13, align 4
  %105 = load %struct._logentry*, %struct._logentry** %5, align 8
  %106 = getelementptr inbounds %struct._logentry, %struct._logentry* %105, i32 0, i32 6
  %107 = getelementptr inbounds [0 x %union.anon.9], [0 x %union.anon.9]* %106, i64 0, i64 0
  %108 = bitcast %union.anon.9* %107 to %struct.logentry_conn_event*
  store %struct.logentry_conn_event* %108, %struct.logentry_conn_event** %14, align 8
  %109 = load %struct.logentry_conn_event*, %struct.logentry_conn_event** %14, align 8
  %110 = getelementptr inbounds %struct.logentry_conn_event, %struct.logentry_conn_event* %109, i32 0, i32 3
  %111 = bitcast %struct.sockaddr_in6* %110 to i8*
  %112 = load %struct.sockaddr_in6*, %struct.sockaddr_in6** %9, align 8
  %113 = bitcast %struct.sockaddr_in6* %112 to i8*
  %114 = load i32, i32* %10, align 4
  %115 = zext i32 %114 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %111, i8* align 4 %113, i64 %115, i1 false)
  %116 = load i32, i32* %13, align 4
  %117 = load %struct.logentry_conn_event*, %struct.logentry_conn_event** %14, align 8
  %118 = getelementptr inbounds %struct.logentry_conn_event, %struct.logentry_conn_event* %117, i32 0, i32 2
  store i32 %116, i32* %118, align 4
  %119 = load i32, i32* %11, align 4
  %120 = load %struct.logentry_conn_event*, %struct.logentry_conn_event** %14, align 8
  %121 = getelementptr inbounds %struct.logentry_conn_event, %struct.logentry_conn_event* %120, i32 0, i32 0
  store i32 %119, i32* %121, align 4
  %122 = load i32, i32* %12, align 4
  %123 = load %struct.logentry_conn_event*, %struct.logentry_conn_event** %14, align 8
  %124 = getelementptr inbounds %struct.logentry_conn_event, %struct.logentry_conn_event* %123, i32 0, i32 1
  store i32 %122, i32* %124, align 4
  %125 = load %struct._logentry*, %struct._logentry** %5, align 8
  %126 = getelementptr inbounds %struct._logentry, %struct._logentry* %125, i32 0, i32 5
  store i32 40, i32* %126, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @_logger_parse_cne(%struct._logentry* %0, i8* %1) #0 {
  %3 = alloca %struct._logentry*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i16, align 2
  %7 = alloca [64 x i8], align 16
  %8 = alloca %struct.logentry_conn_event*, align 8
  %9 = alloca [3 x i8*], align 16
  store %struct._logentry* %0, %struct._logentry** %3, align 8
  store i8* %1, i8** %4, align 8
  %10 = load %struct._logentry*, %struct._logentry** %3, align 8
  %11 = getelementptr inbounds %struct._logentry, %struct._logentry* %10, i32 0, i32 6
  %12 = getelementptr inbounds [0 x %union.anon.9], [0 x %union.anon.9]* %11, i64 0, i64 0
  %13 = bitcast %union.anon.9* %12 to %struct.logentry_conn_event*
  store %struct.logentry_conn_event* %13, %struct.logentry_conn_event** %8, align 8
  %14 = bitcast [3 x i8*]* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %14, i8* align 16 bitcast ([3 x i8*]* @__const._logger_parse_cne.transport_map to i8*), i64 24, i1 false)
  %15 = load %struct.logentry_conn_event*, %struct.logentry_conn_event** %8, align 8
  %16 = getelementptr inbounds %struct.logentry_conn_event, %struct.logentry_conn_event* %15, i32 0, i32 3
  %17 = getelementptr inbounds [64 x i8], [64 x i8]* %7, i64 0, i64 0
  %18 = call i32 @_logger_util_addr_endpoint(%struct.sockaddr_in6* %16, i8* %17, i64 64, i16* %6)
  %19 = load i8*, i8** %4, align 8
  %20 = load %struct._logentry*, %struct._logentry** %3, align 8
  %21 = getelementptr inbounds %struct._logentry, %struct._logentry* %20, i32 0, i32 4
  %22 = getelementptr inbounds %struct.timeval, %struct.timeval* %21, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = trunc i64 %23 to i32
  %25 = load %struct._logentry*, %struct._logentry** %3, align 8
  %26 = getelementptr inbounds %struct._logentry, %struct._logentry* %25, i32 0, i32 4
  %27 = getelementptr inbounds %struct.timeval, %struct.timeval* %26, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = trunc i64 %28 to i32
  %30 = load %struct._logentry*, %struct._logentry** %3, align 8
  %31 = getelementptr inbounds %struct._logentry, %struct._logentry* %30, i32 0, i32 3
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds [64 x i8], [64 x i8]* %7, i64 0, i64 0
  %34 = load i16, i16* %6, align 2
  %35 = zext i16 %34 to i32
  %36 = load %struct.logentry_conn_event*, %struct.logentry_conn_event** %8, align 8
  %37 = getelementptr inbounds %struct.logentry_conn_event, %struct.logentry_conn_event* %36, i32 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds [3 x i8*], [3 x i8*]* %9, i64 0, i64 %39
  %41 = load i8*, i8** %40, align 8
  %42 = load %struct.logentry_conn_event*, %struct.logentry_conn_event** %8, align 8
  %43 = getelementptr inbounds %struct.logentry_conn_event, %struct.logentry_conn_event* %42, i32 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %19, i64 4096, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.43.857, i64 0, i64 0), i32 %24, i32 %29, i64 %32, i8* %33, i32 %35, i8* %41, i32 %44) #14
  store i32 %45, i32* %5, align 4
  %46 = load i32, i32* %5, align 4
  ret i32 %46
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @_logger_parse_cce(%struct._logentry* %0, i8* %1) #0 {
  %3 = alloca %struct._logentry*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i16, align 2
  %7 = alloca [64 x i8], align 16
  %8 = alloca %struct.logentry_conn_event*, align 8
  %9 = alloca [3 x i8*], align 16
  %10 = alloca [4 x i8*], align 16
  store %struct._logentry* %0, %struct._logentry** %3, align 8
  store i8* %1, i8** %4, align 8
  %11 = load %struct._logentry*, %struct._logentry** %3, align 8
  %12 = getelementptr inbounds %struct._logentry, %struct._logentry* %11, i32 0, i32 6
  %13 = getelementptr inbounds [0 x %union.anon.9], [0 x %union.anon.9]* %12, i64 0, i64 0
  %14 = bitcast %union.anon.9* %13 to %struct.logentry_conn_event*
  store %struct.logentry_conn_event* %14, %struct.logentry_conn_event** %8, align 8
  %15 = bitcast [3 x i8*]* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %15, i8* align 16 bitcast ([3 x i8*]* @__const._logger_parse_cce.transport_map to i8*), i64 24, i1 false)
  %16 = bitcast [4 x i8*]* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %16, i8* align 16 bitcast ([4 x i8*]* @__const._logger_parse_cce.reason_map to i8*), i64 32, i1 false)
  %17 = load %struct.logentry_conn_event*, %struct.logentry_conn_event** %8, align 8
  %18 = getelementptr inbounds %struct.logentry_conn_event, %struct.logentry_conn_event* %17, i32 0, i32 3
  %19 = getelementptr inbounds [64 x i8], [64 x i8]* %7, i64 0, i64 0
  %20 = call i32 @_logger_util_addr_endpoint(%struct.sockaddr_in6* %18, i8* %19, i64 64, i16* %6)
  %21 = load i8*, i8** %4, align 8
  %22 = load %struct._logentry*, %struct._logentry** %3, align 8
  %23 = getelementptr inbounds %struct._logentry, %struct._logentry* %22, i32 0, i32 4
  %24 = getelementptr inbounds %struct.timeval, %struct.timeval* %23, i32 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = trunc i64 %25 to i32
  %27 = load %struct._logentry*, %struct._logentry** %3, align 8
  %28 = getelementptr inbounds %struct._logentry, %struct._logentry* %27, i32 0, i32 4
  %29 = getelementptr inbounds %struct.timeval, %struct.timeval* %28, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = trunc i64 %30 to i32
  %32 = load %struct._logentry*, %struct._logentry** %3, align 8
  %33 = getelementptr inbounds %struct._logentry, %struct._logentry* %32, i32 0, i32 3
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds [64 x i8], [64 x i8]* %7, i64 0, i64 0
  %36 = load i16, i16* %6, align 2
  %37 = zext i16 %36 to i32
  %38 = load %struct.logentry_conn_event*, %struct.logentry_conn_event** %8, align 8
  %39 = getelementptr inbounds %struct.logentry_conn_event, %struct.logentry_conn_event* %38, i32 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds [3 x i8*], [3 x i8*]* %9, i64 0, i64 %41
  %43 = load i8*, i8** %42, align 8
  %44 = load %struct.logentry_conn_event*, %struct.logentry_conn_event** %8, align 8
  %45 = getelementptr inbounds %struct.logentry_conn_event, %struct.logentry_conn_event* %44, i32 0, i32 1
  %46 = load i32, i32* %45, align 4
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds [4 x i8*], [4 x i8*]* %10, i64 0, i64 %47
  %49 = load i8*, i8** %48, align 8
  %50 = load %struct.logentry_conn_event*, %struct.logentry_conn_event** %8, align 8
  %51 = getelementptr inbounds %struct.logentry_conn_event, %struct.logentry_conn_event* %50, i32 0, i32 2
  %52 = load i32, i32* %51, align 4
  %53 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %21, i64 4096, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.49.848, i64 0, i64 0), i32 %26, i32 %31, i64 %34, i8* %35, i32 %37, i8* %43, i8* %49, i32 %52) #14
  store i32 %53, i32* %5, align 4
  %54 = load i32, i32* %5, align 4
  ret i32 %54
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @_logger_log_ext_write(%struct._logentry* %0, %struct._entry_details* %1, i8* %2, %struct.__va_list_tag* %3) #0 {
  %5 = alloca %struct._logentry*, align 8
  %6 = alloca %struct._entry_details*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca %struct.__va_list_tag*, align 8
  %9 = alloca %struct._stritem*, align 8
  %10 = alloca i32, align 4
  %11 = alloca %struct.logentry_ext_write*, align 8
  store %struct._logentry* %0, %struct._logentry** %5, align 8
  store %struct._entry_details* %1, %struct._entry_details** %6, align 8
  store i8* %2, i8** %7, align 8
  store %struct.__va_list_tag* %3, %struct.__va_list_tag** %8, align 8
  %12 = load i8*, i8** %7, align 8
  %13 = bitcast i8* %12 to %struct._stritem*
  store %struct._stritem* %13, %struct._stritem** %9, align 8
  %14 = load %struct.__va_list_tag*, %struct.__va_list_tag** %8, align 8
  %15 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %14, i32 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = icmp ule i32 %16, 40
  br i1 %17, label %18, label %24

18:                                               ; preds = %4
  %19 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %14, i32 0, i32 3
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr i8, i8* %20, i32 %16
  %22 = bitcast i8* %21 to i32*
  %23 = add i32 %16, 8
  store i32 %23, i32* %15, align 8
  br label %29

24:                                               ; preds = %4
  %25 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %14, i32 0, i32 2
  %26 = load i8*, i8** %25, align 8
  %27 = bitcast i8* %26 to i32*
  %28 = getelementptr i8, i8* %26, i32 8
  store i8* %28, i8** %25, align 8
  br label %29

29:                                               ; preds = %24, %18
  %30 = phi i32* [ %22, %18 ], [ %27, %24 ]
  %31 = load i32, i32* %30, align 4
  store i32 %31, i32* %10, align 4
  %32 = load %struct._logentry*, %struct._logentry** %5, align 8
  %33 = getelementptr inbounds %struct._logentry, %struct._logentry* %32, i32 0, i32 6
  %34 = getelementptr inbounds [0 x %union.anon.9], [0 x %union.anon.9]* %33, i64 0, i64 0
  %35 = bitcast %union.anon.9* %34 to %struct.logentry_ext_write*
  store %struct.logentry_ext_write* %35, %struct.logentry_ext_write** %11, align 8
  %36 = load %struct._stritem*, %struct._stritem** %9, align 8
  %37 = getelementptr inbounds %struct._stritem, %struct._stritem* %36, i32 0, i32 4
  %38 = load i32, i32* %37, align 4
  %39 = icmp ugt i32 %38, 0
  br i1 %39, label %40, label %47

40:                                               ; preds = %29
  %41 = load %struct._stritem*, %struct._stritem** %9, align 8
  %42 = getelementptr inbounds %struct._stritem, %struct._stritem* %41, i32 0, i32 4
  %43 = load i32, i32* %42, align 4
  %44 = load volatile i32, i32* @current_time, align 4
  %45 = sub i32 %43, %44
  %46 = zext i32 %45 to i64
  br label %48

47:                                               ; preds = %29
  br label %48

48:                                               ; preds = %47, %40
  %49 = phi i64 [ %46, %40 ], [ -1, %47 ]
  %50 = load %struct.logentry_ext_write*, %struct.logentry_ext_write** %11, align 8
  %51 = getelementptr inbounds %struct.logentry_ext_write, %struct.logentry_ext_write* %50, i32 0, i32 0
  store i64 %49, i64* %51, align 8
  %52 = load volatile i32, i32* @current_time, align 4
  %53 = load %struct._stritem*, %struct._stritem** %9, align 8
  %54 = getelementptr inbounds %struct._stritem, %struct._stritem* %53, i32 0, i32 3
  %55 = load i32, i32* %54, align 8
  %56 = sub i32 %52, %55
  %57 = load %struct.logentry_ext_write*, %struct.logentry_ext_write** %11, align 8
  %58 = getelementptr inbounds %struct.logentry_ext_write, %struct.logentry_ext_write* %57, i32 0, i32 1
  store i32 %56, i32* %58, align 8
  %59 = load %struct._stritem*, %struct._stritem** %9, align 8
  %60 = getelementptr inbounds %struct._stritem, %struct._stritem* %59, i32 0, i32 7
  %61 = load i16, i16* %60, align 2
  %62 = load %struct.logentry_ext_write*, %struct.logentry_ext_write** %11, align 8
  %63 = getelementptr inbounds %struct.logentry_ext_write, %struct.logentry_ext_write* %62, i32 0, i32 2
  store i16 %61, i16* %63, align 4
  %64 = load %struct._stritem*, %struct._stritem** %9, align 8
  %65 = getelementptr inbounds %struct._stritem, %struct._stritem* %64, i32 0, i32 9
  %66 = load i8, i8* %65, align 1
  %67 = load %struct.logentry_ext_write*, %struct.logentry_ext_write** %11, align 8
  %68 = getelementptr inbounds %struct.logentry_ext_write, %struct.logentry_ext_write* %67, i32 0, i32 3
  store i8 %66, i8* %68, align 2
  %69 = load %struct._stritem*, %struct._stritem** %9, align 8
  %70 = getelementptr inbounds %struct._stritem, %struct._stritem* %69, i32 0, i32 8
  %71 = load i8, i8* %70, align 8
  %72 = zext i8 %71 to i32
  %73 = and i32 %72, -193
  %74 = trunc i32 %73 to i8
  %75 = load %struct.logentry_ext_write*, %struct.logentry_ext_write** %11, align 8
  %76 = getelementptr inbounds %struct.logentry_ext_write, %struct.logentry_ext_write* %75, i32 0, i32 4
  store i8 %74, i8* %76, align 1
  %77 = load i32, i32* %10, align 4
  %78 = trunc i32 %77 to i8
  %79 = load %struct.logentry_ext_write*, %struct.logentry_ext_write** %11, align 8
  %80 = getelementptr inbounds %struct.logentry_ext_write, %struct.logentry_ext_write* %79, i32 0, i32 5
  store i8 %78, i8* %80, align 8
  %81 = load %struct.logentry_ext_write*, %struct.logentry_ext_write** %11, align 8
  %82 = getelementptr inbounds %struct.logentry_ext_write, %struct.logentry_ext_write* %81, i32 0, i32 6
  %83 = getelementptr inbounds [0 x i8], [0 x i8]* %82, i64 0, i64 0
  %84 = load %struct._stritem*, %struct._stritem** %9, align 8
  %85 = getelementptr inbounds %struct._stritem, %struct._stritem* %84, i32 0, i32 10
  %86 = bitcast [0 x %union.anon.10]* %85 to i8*
  %87 = load %struct._stritem*, %struct._stritem** %9, align 8
  %88 = getelementptr inbounds %struct._stritem, %struct._stritem* %87, i32 0, i32 7
  %89 = load i16, i16* %88, align 2
  %90 = zext i16 %89 to i32
  %91 = and i32 %90, 2
  %92 = icmp ne i32 %91, 0
  %93 = zext i1 %92 to i64
  %94 = select i1 %92, i64 8, i64 0
  %95 = getelementptr inbounds i8, i8* %86, i64 %94
  %96 = load %struct._stritem*, %struct._stritem** %9, align 8
  %97 = getelementptr inbounds %struct._stritem, %struct._stritem* %96, i32 0, i32 9
  %98 = load i8, i8* %97, align 1
  %99 = zext i8 %98 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %83, i8* align 1 %95, i64 %99, i1 false)
  %100 = load %struct.logentry_ext_write*, %struct.logentry_ext_write** %11, align 8
  %101 = getelementptr inbounds %struct.logentry_ext_write, %struct.logentry_ext_write* %100, i32 0, i32 3
  %102 = load i8, i8* %101, align 2
  %103 = zext i8 %102 to i64
  %104 = add i64 24, %103
  %105 = trunc i64 %104 to i32
  %106 = load %struct._logentry*, %struct._logentry** %5, align 8
  %107 = getelementptr inbounds %struct._logentry, %struct._logentry* %106, i32 0, i32 5
  store i32 %105, i32* %107, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @_logger_parse_extw(%struct._logentry* %0, i8* %1) #0 {
  %3 = alloca %struct._logentry*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca [751 x i8], align 16
  %7 = alloca %struct.logentry_ext_write*, align 8
  store %struct._logentry* %0, %struct._logentry** %3, align 8
  store i8* %1, i8** %4, align 8
  %8 = load %struct._logentry*, %struct._logentry** %3, align 8
  %9 = getelementptr inbounds %struct._logentry, %struct._logentry* %8, i32 0, i32 6
  %10 = getelementptr inbounds [0 x %union.anon.9], [0 x %union.anon.9]* %9, i64 0, i64 0
  %11 = bitcast %union.anon.9* %10 to %struct.logentry_ext_write*
  store %struct.logentry_ext_write* %11, %struct.logentry_ext_write** %7, align 8
  %12 = load %struct.logentry_ext_write*, %struct.logentry_ext_write** %7, align 8
  %13 = getelementptr inbounds %struct.logentry_ext_write, %struct.logentry_ext_write* %12, i32 0, i32 6
  %14 = getelementptr inbounds [0 x i8], [0 x i8]* %13, i64 0, i64 0
  %15 = getelementptr inbounds [751 x i8], [751 x i8]* %6, i64 0, i64 0
  %16 = load %struct.logentry_ext_write*, %struct.logentry_ext_write** %7, align 8
  %17 = getelementptr inbounds %struct.logentry_ext_write, %struct.logentry_ext_write* %16, i32 0, i32 3
  %18 = load i8, i8* %17, align 2
  %19 = zext i8 %18 to i64
  %20 = call zeroext i1 @uriencode(i8* %14, i8* %15, i64 %19, i64 751)
  %21 = load i8*, i8** %4, align 8
  %22 = load %struct._logentry*, %struct._logentry** %3, align 8
  %23 = getelementptr inbounds %struct._logentry, %struct._logentry* %22, i32 0, i32 4
  %24 = getelementptr inbounds %struct.timeval, %struct.timeval* %23, i32 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = trunc i64 %25 to i32
  %27 = load %struct._logentry*, %struct._logentry** %3, align 8
  %28 = getelementptr inbounds %struct._logentry, %struct._logentry* %27, i32 0, i32 4
  %29 = getelementptr inbounds %struct.timeval, %struct.timeval* %28, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = trunc i64 %30 to i32
  %32 = load %struct._logentry*, %struct._logentry** %3, align 8
  %33 = getelementptr inbounds %struct._logentry, %struct._logentry* %32, i32 0, i32 3
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds [751 x i8], [751 x i8]* %6, i64 0, i64 0
  %36 = load %struct.logentry_ext_write*, %struct.logentry_ext_write** %7, align 8
  %37 = getelementptr inbounds %struct.logentry_ext_write, %struct.logentry_ext_write* %36, i32 0, i32 2
  %38 = load i16, i16* %37, align 4
  %39 = zext i16 %38 to i32
  %40 = and i32 %39, 8
  %41 = icmp ne i32 %40, 0
  %42 = zext i1 %41 to i64
  %43 = select i1 %41, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19.845, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20.846, i64 0, i64 0)
  %44 = load %struct.logentry_ext_write*, %struct.logentry_ext_write** %7, align 8
  %45 = getelementptr inbounds %struct.logentry_ext_write, %struct.logentry_ext_write* %44, i32 0, i32 0
  %46 = load i64, i64* %45, align 8
  %47 = load %struct.logentry_ext_write*, %struct.logentry_ext_write** %7, align 8
  %48 = getelementptr inbounds %struct.logentry_ext_write, %struct.logentry_ext_write* %47, i32 0, i32 1
  %49 = load i32, i32* %48, align 8
  %50 = load %struct.logentry_ext_write*, %struct.logentry_ext_write** %7, align 8
  %51 = getelementptr inbounds %struct.logentry_ext_write, %struct.logentry_ext_write* %50, i32 0, i32 4
  %52 = load i8, i8* %51, align 1
  %53 = zext i8 %52 to i32
  %54 = load %struct.logentry_ext_write*, %struct.logentry_ext_write** %7, align 8
  %55 = getelementptr inbounds %struct.logentry_ext_write, %struct.logentry_ext_write* %54, i32 0, i32 5
  %56 = load i8, i8* %55, align 8
  %57 = zext i8 %56 to i32
  %58 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %21, i64 4096, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.50.847, i64 0, i64 0), i32 %26, i32 %31, i64 %34, i8* %35, i8* %43, i64 %46, i32 %49, i32 %53, i32 %57) #14
  store i32 %58, i32* %5, align 4
  %59 = load i32, i32* %5, align 4
  ret i32 %59
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @_logger_util_addr_endpoint(%struct.sockaddr_in6* %0, i8* %1, i64 %2, i16* %3) #0 {
  %5 = alloca %struct.sockaddr_in6*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i16*, align 8
  store %struct.sockaddr_in6* %0, %struct.sockaddr_in6** %5, align 8
  store i8* %1, i8** %6, align 8
  store i64 %2, i64* %7, align 8
  store i16* %3, i16** %8, align 8
  %9 = load i8*, i8** %6, align 8
  %10 = load i64, i64* %7, align 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %9, i8 0, i64 %10, i1 false)
  %11 = load %struct.sockaddr_in6*, %struct.sockaddr_in6** %5, align 8
  %12 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %11, i32 0, i32 0
  %13 = load i16, i16* %12, align 4
  %14 = zext i16 %13 to i32
  switch i32 %14, label %49 [
    i32 2, label %15
    i32 10, label %31
    i32 0, label %45
    i32 1, label %45
  ]

15:                                               ; preds = %4
  %16 = load %struct.sockaddr_in6*, %struct.sockaddr_in6** %5, align 8
  %17 = bitcast %struct.sockaddr_in6* %16 to %struct.sockaddr_in*
  %18 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %17, i32 0, i32 2
  %19 = bitcast %struct.in_addr* %18 to i8*
  %20 = load i8*, i8** %6, align 8
  %21 = load i64, i64* %7, align 8
  %22 = sub i64 %21, 1
  %23 = trunc i64 %22 to i32
  %24 = call i8* @inet_ntop(i32 2, i8* %19, i8* %20, i32 %23) #14
  %25 = load %struct.sockaddr_in6*, %struct.sockaddr_in6** %5, align 8
  %26 = bitcast %struct.sockaddr_in6* %25 to %struct.sockaddr_in*
  %27 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %26, i32 0, i32 1
  %28 = load i16, i16* %27, align 2
  %29 = call zeroext i16 @ntohs(i16 zeroext %28) #15
  %30 = load i16*, i16** %8, align 8
  store i16 %29, i16* %30, align 2
  br label %49

31:                                               ; preds = %4
  %32 = load %struct.sockaddr_in6*, %struct.sockaddr_in6** %5, align 8
  %33 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %32, i32 0, i32 3
  %34 = bitcast %struct.in6_addr* %33 to i8*
  %35 = load i8*, i8** %6, align 8
  %36 = load i64, i64* %7, align 8
  %37 = sub i64 %36, 1
  %38 = trunc i64 %37 to i32
  %39 = call i8* @inet_ntop(i32 10, i8* %34, i8* %35, i32 %38) #14
  %40 = load %struct.sockaddr_in6*, %struct.sockaddr_in6** %5, align 8
  %41 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %40, i32 0, i32 1
  %42 = load i16, i16* %41, align 2
  %43 = call zeroext i16 @ntohs(i16 zeroext %42) #15
  %44 = load i16*, i16** %8, align 8
  store i16 %43, i16* %44, align 2
  br label %49

45:                                               ; preds = %4, %4
  %46 = load i8*, i8** %6, align 8
  %47 = call i8* @strncpy(i8* %46, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.44.849, i64 0, i64 0), i64 5) #14
  %48 = load i16*, i16** %8, align 8
  store i16 0, i16* %48, align 2
  br label %49

49:                                               ; preds = %4, %45, %31, %15
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @logger_stop() #0 {
  %1 = call i32 @stop_logger_thread()
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @stop_logger_thread() #0 {
  store volatile i32 0, i32* @do_run_logger_thread, align 4
  %1 = call i32 @pthread_cond_signal(%union.pthread_cond_t* @logger_stack_cond) #14
  %2 = load i64, i64* @logger_tid, align 8
  %3 = call i32 @pthread_join(i64 %2, i8** null)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct._logger* @logger_create() #0 {
  %1 = alloca %struct._logger*, align 8
  %2 = alloca %struct._logger*, align 8
  %3 = call noalias i8* @calloc(i64 1, i64 104) #14
  %4 = bitcast i8* %3 to %struct._logger*
  store %struct._logger* %4, %struct._logger** %2, align 8
  %5 = load %struct._logger*, %struct._logger** %2, align 8
  %6 = icmp eq %struct._logger* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %0
  store %struct._logger* null, %struct._logger** %1, align 8
  br label %32

8:                                                ; preds = %0
  %9 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 52), align 4
  %10 = call %struct.bipbuf_t* @bipbuf_new(i32 %9)
  %11 = load %struct._logger*, %struct._logger** %2, align 8
  %12 = getelementptr inbounds %struct._logger, %struct._logger* %11, i32 0, i32 9
  store %struct.bipbuf_t* %10, %struct.bipbuf_t** %12, align 8
  %13 = load %struct._logger*, %struct._logger** %2, align 8
  %14 = getelementptr inbounds %struct._logger, %struct._logger* %13, i32 0, i32 9
  %15 = load %struct.bipbuf_t*, %struct.bipbuf_t** %14, align 8
  %16 = icmp eq %struct.bipbuf_t* %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %8
  %18 = load %struct._logger*, %struct._logger** %2, align 8
  %19 = bitcast %struct._logger* %18 to i8*
  call void @free(i8* %19) #14
  store %struct._logger* null, %struct._logger** %1, align 8
  br label %32

20:                                               ; preds = %8
  %21 = load %struct._logger*, %struct._logger** %2, align 8
  %22 = getelementptr inbounds %struct._logger, %struct._logger* %21, i32 0, i32 10
  store %struct._entry_details* getelementptr inbounds ([15 x %struct._entry_details], [15 x %struct._entry_details]* @default_entries, i64 0, i64 0), %struct._entry_details** %22, align 8
  %23 = load %struct._logger*, %struct._logger** %2, align 8
  %24 = getelementptr inbounds %struct._logger, %struct._logger* %23, i32 0, i32 2
  %25 = call i32 @pthread_mutex_init(%union.pthread_mutex_t* %24, %struct.in_addr* null) #14
  %26 = load i32, i32* @logger_key, align 4
  %27 = load %struct._logger*, %struct._logger** %2, align 8
  %28 = bitcast %struct._logger* %27 to i8*
  %29 = call i32 @pthread_setspecific(i32 %26, i8* %28) #14
  %30 = load %struct._logger*, %struct._logger** %2, align 8
  call void @logger_link_q(%struct._logger* %30)
  %31 = load %struct._logger*, %struct._logger** %2, align 8
  store %struct._logger* %31, %struct._logger** %1, align 8
  br label %32

32:                                               ; preds = %20, %17, %7
  %33 = load %struct._logger*, %struct._logger** %1, align 8
  ret %struct._logger* %33
}

; Function Attrs: nounwind
declare dso_local i32 @pthread_setspecific(i32, i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @logger_link_q(%struct._logger* %0) #0 {
  %2 = alloca %struct._logger*, align 8
  store %struct._logger* %0, %struct._logger** %2, align 8
  %3 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @logger_stack_lock) #14
  %4 = load %struct._logger*, %struct._logger** %2, align 8
  %5 = getelementptr inbounds %struct._logger, %struct._logger* %4, i32 0, i32 0
  store %struct._logger* null, %struct._logger** %5, align 8
  %6 = load %struct._logger*, %struct._logger** @logger_stack_head, align 8
  %7 = load %struct._logger*, %struct._logger** %2, align 8
  %8 = getelementptr inbounds %struct._logger, %struct._logger* %7, i32 0, i32 1
  store %struct._logger* %6, %struct._logger** %8, align 8
  %9 = load %struct._logger*, %struct._logger** %2, align 8
  %10 = getelementptr inbounds %struct._logger, %struct._logger* %9, i32 0, i32 1
  %11 = load %struct._logger*, %struct._logger** %10, align 8
  %12 = icmp ne %struct._logger* %11, null
  br i1 %12, label %13, label %19

13:                                               ; preds = %1
  %14 = load %struct._logger*, %struct._logger** %2, align 8
  %15 = load %struct._logger*, %struct._logger** %2, align 8
  %16 = getelementptr inbounds %struct._logger, %struct._logger* %15, i32 0, i32 1
  %17 = load %struct._logger*, %struct._logger** %16, align 8
  %18 = getelementptr inbounds %struct._logger, %struct._logger* %17, i32 0, i32 0
  store %struct._logger* %14, %struct._logger** %18, align 8
  br label %19

19:                                               ; preds = %13, %1
  %20 = load %struct._logger*, %struct._logger** %2, align 8
  store %struct._logger* %20, %struct._logger** @logger_stack_head, align 8
  %21 = load %struct._logger*, %struct._logger** @logger_stack_tail, align 8
  %22 = icmp eq %struct._logger* %21, null
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = load %struct._logger*, %struct._logger** %2, align 8
  store %struct._logger* %24, %struct._logger** @logger_stack_tail, align 8
  br label %25

25:                                               ; preds = %23, %19
  %26 = load i32, i32* @logger_count, align 4
  %27 = add i32 %26, 1
  store i32 %27, i32* @logger_count, align 4
  %28 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @logger_stack_lock) #14
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @logger_log(%struct._logger* %0, i32 %1, i8* %2, ...) #0 {
  %4 = alloca i32, align 4
  %5 = alloca %struct._logger*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca %struct.bipbuf_t*, align 8
  %9 = alloca i8, align 1
  %10 = alloca [1 x %struct.__va_list_tag], align 16
  %11 = alloca %struct._logentry*, align 8
  %12 = alloca %struct._entry_details*, align 8
  %13 = alloca i32, align 4
  store %struct._logger* %0, %struct._logger** %5, align 8
  store i32 %1, i32* %6, align 4
  store i8* %2, i8** %7, align 8
  %14 = load %struct._logger*, %struct._logger** %5, align 8
  %15 = getelementptr inbounds %struct._logger, %struct._logger* %14, i32 0, i32 9
  %16 = load %struct.bipbuf_t*, %struct.bipbuf_t** %15, align 8
  store %struct.bipbuf_t* %16, %struct.bipbuf_t** %8, align 8
  store i8 0, i8* %9, align 1
  %17 = load %struct._logger*, %struct._logger** %5, align 8
  %18 = getelementptr inbounds %struct._logger, %struct._logger* %17, i32 0, i32 10
  %19 = load %struct._entry_details*, %struct._entry_details** %18, align 8
  %20 = load i32, i32* %6, align 4
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds %struct._entry_details, %struct._entry_details* %19, i64 %21
  store %struct._entry_details* %22, %struct._entry_details** %12, align 8
  %23 = load %struct._entry_details*, %struct._entry_details** %12, align 8
  %24 = getelementptr inbounds %struct._entry_details, %struct._entry_details* %23, i32 0, i32 0
  %25 = load i32, i32* %24, align 8
  store i32 %25, i32* %13, align 4
  %26 = load %struct._logger*, %struct._logger** %5, align 8
  %27 = getelementptr inbounds %struct._logger, %struct._logger* %26, i32 0, i32 2
  %28 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %27) #14
  %29 = load %struct.bipbuf_t*, %struct.bipbuf_t** %8, align 8
  %30 = load i32, i32* %13, align 4
  %31 = sext i32 %30 to i64
  %32 = add i64 40, %31
  %33 = trunc i64 %32 to i32
  %34 = call i8* @bipbuf_request(%struct.bipbuf_t* %29, i32 %33)
  %35 = bitcast i8* %34 to %struct._logentry*
  store %struct._logentry* %35, %struct._logentry** %11, align 8
  %36 = load %struct._logentry*, %struct._logentry** %11, align 8
  %37 = icmp eq %struct._logentry* %36, null
  br i1 %37, label %38, label %46

38:                                               ; preds = %3
  %39 = load %struct._logger*, %struct._logger** %5, align 8
  %40 = getelementptr inbounds %struct._logger, %struct._logger* %39, i32 0, i32 2
  %41 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %40) #14
  %42 = load %struct._logger*, %struct._logger** %5, align 8
  %43 = getelementptr inbounds %struct._logger, %struct._logger* %42, i32 0, i32 4
  %44 = load i64, i64* %43, align 8
  %45 = add i64 %44, 1
  store i64 %45, i64* %43, align 8
  store i32 1, i32* %4, align 4
  br label %106

46:                                               ; preds = %3
  %47 = load i32, i32* %6, align 4
  %48 = load %struct._logentry*, %struct._logentry** %11, align 8
  %49 = getelementptr inbounds %struct._logentry, %struct._logentry* %48, i32 0, i32 0
  store i32 %47, i32* %49, align 8
  %50 = load %struct._logentry*, %struct._logentry** %11, align 8
  %51 = getelementptr inbounds %struct._logentry, %struct._logentry* %50, i32 0, i32 1
  store i8 0, i8* %51, align 4
  %52 = call i64 @logger_get_gid()
  %53 = load %struct._logentry*, %struct._logentry** %11, align 8
  %54 = getelementptr inbounds %struct._logentry, %struct._logentry* %53, i32 0, i32 3
  store i64 %52, i64* %54, align 8
  %55 = load %struct._entry_details*, %struct._entry_details** %12, align 8
  %56 = getelementptr inbounds %struct._entry_details, %struct._entry_details* %55, i32 0, i32 1
  %57 = load i16, i16* %56, align 4
  %58 = load %struct._logentry*, %struct._logentry** %11, align 8
  %59 = getelementptr inbounds %struct._logentry, %struct._logentry* %58, i32 0, i32 2
  store i16 %57, i16* %59, align 2
  %60 = load %struct._logentry*, %struct._logentry** %11, align 8
  %61 = getelementptr inbounds %struct._logentry, %struct._logentry* %60, i32 0, i32 4
  %62 = call i32 @gettimeofday(%struct.timeval* %61, %struct.timezone* null) #14
  %63 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %10, i64 0, i64 0
  %64 = bitcast %struct.__va_list_tag* %63 to i8*
  call void @llvm.va_start(i8* %64)
  %65 = load %struct._entry_details*, %struct._entry_details** %12, align 8
  %66 = getelementptr inbounds %struct._entry_details, %struct._entry_details* %65, i32 0, i32 2
  %67 = load void (%struct._logentry*, %struct._entry_details*, i8*, %struct.__va_list_tag*)*, void (%struct._logentry*, %struct._entry_details*, i8*, %struct.__va_list_tag*)** %66, align 8
  %68 = load %struct._logentry*, %struct._logentry** %11, align 8
  %69 = load %struct._entry_details*, %struct._entry_details** %12, align 8
  %70 = load i8*, i8** %7, align 8
  %71 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %10, i64 0, i64 0
  call void %67(%struct._logentry* %68, %struct._entry_details* %69, i8* %70, %struct.__va_list_tag* %71)
  %72 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %10, i64 0, i64 0
  %73 = bitcast %struct.__va_list_tag* %72 to i8*
  call void @llvm.va_end(i8* %73)
  %74 = load %struct.bipbuf_t*, %struct.bipbuf_t** %8, align 8
  %75 = load %struct._logentry*, %struct._logentry** %11, align 8
  %76 = getelementptr inbounds %struct._logentry, %struct._logentry* %75, i32 0, i32 5
  %77 = load i32, i32* %76, align 8
  %78 = sext i32 %77 to i64
  %79 = add i64 40, %78
  %80 = load %struct._logentry*, %struct._logentry** %11, align 8
  %81 = getelementptr inbounds %struct._logentry, %struct._logentry* %80, i32 0, i32 1
  %82 = load i8, i8* %81, align 4
  %83 = zext i8 %82 to i64
  %84 = add i64 %79, %83
  %85 = trunc i64 %84 to i32
  %86 = call i32 @bipbuf_push(%struct.bipbuf_t* %74, i32 %85)
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %94

88:                                               ; preds = %46
  %89 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %90 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %89, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.886, i64 0, i64 0))
  %91 = load %struct._logger*, %struct._logger** %5, align 8
  %92 = getelementptr inbounds %struct._logger, %struct._logger* %91, i32 0, i32 2
  %93 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %92) #14
  store i32 2, i32* %4, align 4
  br label %106

94:                                               ; preds = %46
  %95 = load %struct._logger*, %struct._logger** %5, align 8
  %96 = getelementptr inbounds %struct._logger, %struct._logger* %95, i32 0, i32 3
  %97 = load i64, i64* %96, align 8
  %98 = add i64 %97, 1
  store i64 %98, i64* %96, align 8
  %99 = load %struct._logger*, %struct._logger** %5, align 8
  %100 = getelementptr inbounds %struct._logger, %struct._logger* %99, i32 0, i32 2
  %101 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %100) #14
  %102 = load i8, i8* %9, align 1
  %103 = trunc i8 %102 to i1
  br i1 %103, label %104, label %105

104:                                              ; preds = %94
  store i32 1, i32* %4, align 4
  br label %106

105:                                              ; preds = %94
  store i32 0, i32* %4, align 4
  br label %106

106:                                              ; preds = %105, %104, %88, %38
  %107 = load i32, i32* %4, align 4
  ret i32 %107
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @logger_add_watcher(i8* %0, i32 %1, i16 zeroext %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i16, align 2
  %8 = alloca i32, align 4
  %9 = alloca %struct.logger_watcher*, align 8
  store i8* %0, i8** %5, align 8
  store i32 %1, i32* %6, align 4
  store i16 %2, i16* %7, align 2
  store %struct.logger_watcher* null, %struct.logger_watcher** %9, align 8
  %10 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @logger_stack_lock) #14
  %11 = load i32, i32* @watcher_count, align 4
  %12 = icmp sge i32 %11, 20
  br i1 %12, label %13, label %15

13:                                               ; preds = %3
  %14 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @logger_stack_lock) #14
  store i32 0, i32* %4, align 4
  br label %90

15:                                               ; preds = %3
  store i32 0, i32* %8, align 4
  br label %16

16:                                               ; preds = %27, %15
  %17 = load i32, i32* %8, align 4
  %18 = icmp slt i32 %17, 19
  br i1 %18, label %19, label %30

19:                                               ; preds = %16
  %20 = load i32, i32* %8, align 4
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds [20 x %struct.logger_watcher*], [20 x %struct.logger_watcher*]* @watchers, i64 0, i64 %21
  %23 = load %struct.logger_watcher*, %struct.logger_watcher** %22, align 8
  %24 = icmp eq %struct.logger_watcher* %23, null
  br i1 %24, label %25, label %26

25:                                               ; preds = %19
  br label %30

26:                                               ; preds = %19
  br label %27

27:                                               ; preds = %26
  %28 = load i32, i32* %8, align 4
  %29 = add nsw i32 %28, 1
  store i32 %29, i32* %8, align 4
  br label %16, !llvm.loop !133

30:                                               ; preds = %25, %16
  %31 = call noalias i8* @calloc(i64 1, i64 56) #14
  %32 = bitcast i8* %31 to %struct.logger_watcher*
  store %struct.logger_watcher* %32, %struct.logger_watcher** %9, align 8
  %33 = load %struct.logger_watcher*, %struct.logger_watcher** %9, align 8
  %34 = icmp eq %struct.logger_watcher* %33, null
  br i1 %34, label %35, label %37

35:                                               ; preds = %30
  %36 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @logger_stack_lock) #14
  store i32 2, i32* %4, align 4
  br label %90

37:                                               ; preds = %30
  %38 = load i8*, i8** %5, align 8
  %39 = load %struct.logger_watcher*, %struct.logger_watcher** %9, align 8
  %40 = getelementptr inbounds %struct.logger_watcher, %struct.logger_watcher* %39, i32 0, i32 0
  store i8* %38, i8** %40, align 8
  %41 = load i32, i32* %6, align 4
  %42 = load %struct.logger_watcher*, %struct.logger_watcher** %9, align 8
  %43 = getelementptr inbounds %struct.logger_watcher, %struct.logger_watcher* %42, i32 0, i32 1
  store i32 %41, i32* %43, align 8
  %44 = load i32, i32* %6, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %52

46:                                               ; preds = %37
  %47 = load i8*, i8** %5, align 8
  %48 = icmp eq i8* %47, null
  br i1 %48, label %49, label %52

49:                                               ; preds = %46
  %50 = load %struct.logger_watcher*, %struct.logger_watcher** %9, align 8
  %51 = getelementptr inbounds %struct.logger_watcher, %struct.logger_watcher* %50, i32 0, i32 6
  store i32 0, i32* %51, align 4
  br label %55

52:                                               ; preds = %46, %37
  %53 = load %struct.logger_watcher*, %struct.logger_watcher** %9, align 8
  %54 = getelementptr inbounds %struct.logger_watcher, %struct.logger_watcher* %53, i32 0, i32 6
  store i32 1, i32* %54, align 4
  br label %55

55:                                               ; preds = %52, %49
  %56 = load i32, i32* %8, align 4
  %57 = load %struct.logger_watcher*, %struct.logger_watcher** %9, align 8
  %58 = getelementptr inbounds %struct.logger_watcher, %struct.logger_watcher* %57, i32 0, i32 2
  store i32 %56, i32* %58, align 4
  %59 = load i16, i16* %7, align 2
  %60 = load %struct.logger_watcher*, %struct.logger_watcher** %9, align 8
  %61 = getelementptr inbounds %struct.logger_watcher, %struct.logger_watcher* %60, i32 0, i32 7
  store i16 %59, i16* %61, align 8
  %62 = call i64 @logger_get_gid()
  %63 = load %struct.logger_watcher*, %struct.logger_watcher** %9, align 8
  %64 = getelementptr inbounds %struct.logger_watcher, %struct.logger_watcher* %63, i32 0, i32 4
  store i64 %62, i64* %64, align 8
  %65 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 51), align 8
  %66 = call %struct.bipbuf_t* @bipbuf_new(i32 %65)
  %67 = load %struct.logger_watcher*, %struct.logger_watcher** %9, align 8
  %68 = getelementptr inbounds %struct.logger_watcher, %struct.logger_watcher* %67, i32 0, i32 8
  store %struct.bipbuf_t* %66, %struct.bipbuf_t** %68, align 8
  %69 = load %struct.logger_watcher*, %struct.logger_watcher** %9, align 8
  %70 = getelementptr inbounds %struct.logger_watcher, %struct.logger_watcher* %69, i32 0, i32 8
  %71 = load %struct.bipbuf_t*, %struct.bipbuf_t** %70, align 8
  %72 = icmp eq %struct.bipbuf_t* %71, null
  br i1 %72, label %73, label %77

73:                                               ; preds = %55
  %74 = load %struct.logger_watcher*, %struct.logger_watcher** %9, align 8
  %75 = bitcast %struct.logger_watcher* %74 to i8*
  call void @free(i8* %75) #14
  %76 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @logger_stack_lock) #14
  store i32 2, i32* %4, align 4
  br label %90

77:                                               ; preds = %55
  %78 = load %struct.logger_watcher*, %struct.logger_watcher** %9, align 8
  %79 = getelementptr inbounds %struct.logger_watcher, %struct.logger_watcher* %78, i32 0, i32 8
  %80 = load %struct.bipbuf_t*, %struct.bipbuf_t** %79, align 8
  %81 = call i32 @bipbuf_offer(%struct.bipbuf_t* %80, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.887, i64 0, i64 0), i32 4)
  %82 = load %struct.logger_watcher*, %struct.logger_watcher** %9, align 8
  %83 = load i32, i32* %8, align 4
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds [20 x %struct.logger_watcher*], [20 x %struct.logger_watcher*]* @watchers, i64 0, i64 %84
  store %struct.logger_watcher* %82, %struct.logger_watcher** %85, align 8
  %86 = load i32, i32* @watcher_count, align 4
  %87 = add nsw i32 %86, 1
  store i32 %87, i32* @watcher_count, align 4
  call void @logger_set_flags()
  %88 = call i32 @pthread_cond_signal(%union.pthread_cond_t* @logger_stack_cond) #14
  %89 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @logger_stack_lock) #14
  store i32 1, i32* %4, align 4
  br label %90

90:                                               ; preds = %77, %73, %35, %13
  %91 = load i32, i32* %4, align 4
  ret i32 %91
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @crawler_expired_init(%struct._crawler_module_t* %0, i8* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct._crawler_module_t*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct.crawler_expired_data*, align 8
  %7 = alloca i32, align 4
  store %struct._crawler_module_t* %0, %struct._crawler_module_t** %4, align 8
  store i8* %1, i8** %5, align 8
  %8 = load i8*, i8** %5, align 8
  %9 = icmp ne i8* %8, null
  br i1 %9, label %10, label %18

10:                                               ; preds = %2
  %11 = load i8*, i8** %5, align 8
  %12 = bitcast i8* %11 to %struct.crawler_expired_data*
  store %struct.crawler_expired_data* %12, %struct.crawler_expired_data** %6, align 8
  %13 = load %struct.crawler_expired_data*, %struct.crawler_expired_data** %6, align 8
  %14 = getelementptr inbounds %struct.crawler_expired_data, %struct.crawler_expired_data* %13, i32 0, i32 5
  store i8 1, i8* %14, align 1
  %15 = load i8*, i8** %5, align 8
  %16 = load %struct._crawler_module_t*, %struct._crawler_module_t** %4, align 8
  %17 = getelementptr inbounds %struct._crawler_module_t, %struct._crawler_module_t* %16, i32 0, i32 0
  store i8* %15, i8** %17, align 8
  br label %37

18:                                               ; preds = %2
  %19 = call noalias i8* @calloc(i64 1, i64 137272) #14
  %20 = bitcast i8* %19 to %struct.crawler_expired_data*
  store %struct.crawler_expired_data* %20, %struct.crawler_expired_data** %6, align 8
  %21 = load %struct.crawler_expired_data*, %struct.crawler_expired_data** %6, align 8
  %22 = icmp eq %struct.crawler_expired_data* %21, null
  br i1 %22, label %23, label %24

23:                                               ; preds = %18
  store i32 -1, i32* %3, align 4
  br label %68

24:                                               ; preds = %18
  %25 = load %struct.crawler_expired_data*, %struct.crawler_expired_data** %6, align 8
  %26 = getelementptr inbounds %struct.crawler_expired_data, %struct.crawler_expired_data* %25, i32 0, i32 0
  %27 = call i32 @pthread_mutex_init(%union.pthread_mutex_t* %26, %struct.in_addr* null) #14
  %28 = load %struct.crawler_expired_data*, %struct.crawler_expired_data** %6, align 8
  %29 = getelementptr inbounds %struct.crawler_expired_data, %struct.crawler_expired_data* %28, i32 0, i32 5
  store i8 0, i8* %29, align 1
  %30 = load volatile i32, i32* @current_time, align 4
  %31 = load %struct.crawler_expired_data*, %struct.crawler_expired_data** %6, align 8
  %32 = getelementptr inbounds %struct.crawler_expired_data, %struct.crawler_expired_data* %31, i32 0, i32 2
  store i32 %30, i32* %32, align 8
  %33 = load %struct.crawler_expired_data*, %struct.crawler_expired_data** %6, align 8
  %34 = bitcast %struct.crawler_expired_data* %33 to i8*
  %35 = load %struct._crawler_module_t*, %struct._crawler_module_t** %4, align 8
  %36 = getelementptr inbounds %struct._crawler_module_t, %struct._crawler_module_t* %35, i32 0, i32 0
  store i8* %34, i8** %36, align 8
  br label %37

37:                                               ; preds = %24, %10
  %38 = load %struct.crawler_expired_data*, %struct.crawler_expired_data** %6, align 8
  %39 = getelementptr inbounds %struct.crawler_expired_data, %struct.crawler_expired_data* %38, i32 0, i32 0
  %40 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %39) #14
  %41 = load %struct.crawler_expired_data*, %struct.crawler_expired_data** %6, align 8
  %42 = getelementptr inbounds %struct.crawler_expired_data, %struct.crawler_expired_data* %41, i32 0, i32 1
  %43 = bitcast [256 x %struct.crawlerstats_t]* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 137216, i1 false)
  store i32 0, i32* %7, align 4
  br label %44

44:                                               ; preds = %61, %37
  %45 = load i32, i32* %7, align 4
  %46 = icmp slt i32 %45, 256
  br i1 %46, label %47, label %64

47:                                               ; preds = %44
  %48 = load volatile i32, i32* @current_time, align 4
  %49 = load %struct.crawler_expired_data*, %struct.crawler_expired_data** %6, align 8
  %50 = getelementptr inbounds %struct.crawler_expired_data, %struct.crawler_expired_data* %49, i32 0, i32 1
  %51 = load i32, i32* %7, align 4
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds [256 x %struct.crawlerstats_t], [256 x %struct.crawlerstats_t]* %50, i64 0, i64 %52
  %54 = getelementptr inbounds %struct.crawlerstats_t, %struct.crawlerstats_t* %53, i32 0, i32 5
  store i32 %48, i32* %54, align 8
  %55 = load %struct.crawler_expired_data*, %struct.crawler_expired_data** %6, align 8
  %56 = getelementptr inbounds %struct.crawler_expired_data, %struct.crawler_expired_data* %55, i32 0, i32 1
  %57 = load i32, i32* %7, align 4
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds [256 x %struct.crawlerstats_t], [256 x %struct.crawlerstats_t]* %56, i64 0, i64 %58
  %60 = getelementptr inbounds %struct.crawlerstats_t, %struct.crawlerstats_t* %59, i32 0, i32 7
  store i8 0, i8* %60, align 8
  br label %61

61:                                               ; preds = %47
  %62 = load i32, i32* %7, align 4
  %63 = add nsw i32 %62, 1
  store i32 %63, i32* %7, align 4
  br label %44, !llvm.loop !134

64:                                               ; preds = %44
  %65 = load %struct.crawler_expired_data*, %struct.crawler_expired_data** %6, align 8
  %66 = getelementptr inbounds %struct.crawler_expired_data, %struct.crawler_expired_data* %65, i32 0, i32 0
  %67 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %66) #14
  store i32 0, i32* %3, align 4
  br label %68

68:                                               ; preds = %64, %23
  %69 = load i32, i32* %3, align 4
  ret i32 %69
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @crawler_expired_eval(%struct._crawler_module_t* %0, %struct._stritem* %1, i32 %2, i32 %3) #0 {
  %5 = alloca %struct._crawler_module_t*, align 8
  %6 = alloca %struct._stritem*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct.crawler_expired_data*, align 8
  %10 = alloca %struct.crawlerstats_t*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i8, align 1
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  store %struct._crawler_module_t* %0, %struct._crawler_module_t** %5, align 8
  store %struct._stritem* %1, %struct._stritem** %6, align 8
  store i32 %2, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  %17 = load %struct._crawler_module_t*, %struct._crawler_module_t** %5, align 8
  %18 = getelementptr inbounds %struct._crawler_module_t, %struct._crawler_module_t* %17, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = bitcast i8* %19 to %struct.crawler_expired_data*
  store %struct.crawler_expired_data* %20, %struct.crawler_expired_data** %9, align 8
  %21 = load %struct.crawler_expired_data*, %struct.crawler_expired_data** %9, align 8
  %22 = getelementptr inbounds %struct.crawler_expired_data, %struct.crawler_expired_data* %21, i32 0, i32 0
  %23 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %22) #14
  %24 = load %struct.crawler_expired_data*, %struct.crawler_expired_data** %9, align 8
  %25 = getelementptr inbounds %struct.crawler_expired_data, %struct.crawler_expired_data* %24, i32 0, i32 1
  %26 = load i32, i32* %8, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [256 x %struct.crawlerstats_t], [256 x %struct.crawlerstats_t]* %25, i64 0, i64 %27
  store %struct.crawlerstats_t* %28, %struct.crawlerstats_t** %10, align 8
  %29 = load %struct._stritem*, %struct._stritem** %6, align 8
  %30 = call i32 @item_is_flushed(%struct._stritem* %29)
  store i32 %30, i32* %11, align 4
  store i8 1, i8* %12, align 1
  %31 = load %struct._stritem*, %struct._stritem** %6, align 8
  %32 = getelementptr inbounds %struct._stritem, %struct._stritem* %31, i32 0, i32 7
  %33 = load i16, i16* %32, align 2
  %34 = zext i16 %33 to i32
  %35 = and i32 %34, 128
  %36 = icmp ne i32 %35, 0
  br i1 %36, label %37, label %42

37:                                               ; preds = %4
  %38 = load i8*, i8** @storage.888, align 8
  %39 = load %struct._stritem*, %struct._stritem** %6, align 8
  %40 = call zeroext i1 @storage_validate_item(i8* %38, %struct._stritem* %39)
  %41 = zext i1 %40 to i8
  store i8 %41, i8* %12, align 1
  br label %42

42:                                               ; preds = %37, %4
  %43 = load %struct._stritem*, %struct._stritem** %6, align 8
  %44 = getelementptr inbounds %struct._stritem, %struct._stritem* %43, i32 0, i32 4
  %45 = load i32, i32* %44, align 4
  %46 = icmp ne i32 %45, 0
  br i1 %46, label %47, label %53

47:                                               ; preds = %42
  %48 = load %struct._stritem*, %struct._stritem** %6, align 8
  %49 = getelementptr inbounds %struct._stritem, %struct._stritem* %48, i32 0, i32 4
  %50 = load i32, i32* %49, align 4
  %51 = load volatile i32, i32* @current_time, align 4
  %52 = icmp ult i32 %50, %51
  br i1 %52, label %59, label %53

53:                                               ; preds = %47, %42
  %54 = load i32, i32* %11, align 4
  %55 = icmp ne i32 %54, 0
  br i1 %55, label %59, label %56

56:                                               ; preds = %53
  %57 = load i8, i8* %12, align 1
  %58 = trunc i8 %57 to i1
  br i1 %58, label %142, label %59

59:                                               ; preds = %56, %53, %47
  %60 = load i32, i32* %8, align 4
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds [256 x %struct.crawler], [256 x %struct.crawler]* @crawlers, i64 0, i64 %61
  %63 = getelementptr inbounds %struct.crawler, %struct.crawler* %62, i32 0, i32 11
  %64 = load i64, i64* %63, align 8
  %65 = add i64 %64, 1
  store i64 %65, i64* %63, align 8
  %66 = load %struct.crawlerstats_t*, %struct.crawlerstats_t** %10, align 8
  %67 = getelementptr inbounds %struct.crawlerstats_t, %struct.crawlerstats_t* %66, i32 0, i32 3
  %68 = load i64, i64* %67, align 8
  %69 = add i64 %68, 1
  store i64 %69, i64* %67, align 8
  %70 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %71 = icmp sgt i32 %70, 1
  br i1 %71, label %72, label %117

72:                                               ; preds = %59
  %73 = load %struct._stritem*, %struct._stritem** %6, align 8
  %74 = getelementptr inbounds %struct._stritem, %struct._stritem* %73, i32 0, i32 10
  %75 = bitcast [0 x %union.anon.10]* %74 to i8*
  %76 = load %struct._stritem*, %struct._stritem** %6, align 8
  %77 = getelementptr inbounds %struct._stritem, %struct._stritem* %76, i32 0, i32 7
  %78 = load i16, i16* %77, align 2
  %79 = zext i16 %78 to i32
  %80 = and i32 %79, 2
  %81 = icmp ne i32 %80, 0
  %82 = zext i1 %81 to i64
  %83 = select i1 %81, i64 8, i64 0
  %84 = getelementptr inbounds i8, i8* %75, i64 %83
  store i8* %84, i8** %14, align 8
  %85 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %86 = load %struct._stritem*, %struct._stritem** %6, align 8
  %87 = getelementptr inbounds %struct._stritem, %struct._stritem* %86, i32 0, i32 7
  %88 = load i16, i16* %87, align 2
  %89 = zext i16 %88 to i32
  %90 = load %struct._stritem*, %struct._stritem** %6, align 8
  %91 = getelementptr inbounds %struct._stritem, %struct._stritem* %90, i32 0, i32 8
  %92 = load i8, i8* %91, align 8
  %93 = zext i8 %92 to i32
  %94 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %85, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5.889, i64 0, i64 0), i32 %89, i32 %93)
  store i32 0, i32* %13, align 4
  br label %95

95:                                               ; preds = %111, %72
  %96 = load i32, i32* %13, align 4
  %97 = load %struct._stritem*, %struct._stritem** %6, align 8
  %98 = getelementptr inbounds %struct._stritem, %struct._stritem* %97, i32 0, i32 9
  %99 = load i8, i8* %98, align 1
  %100 = zext i8 %99 to i32
  %101 = icmp slt i32 %96, %100
  br i1 %101, label %102, label %114

102:                                              ; preds = %95
  %103 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %104 = load i8*, i8** %14, align 8
  %105 = load i32, i32* %13, align 4
  %106 = sext i32 %105 to i64
  %107 = getelementptr inbounds i8, i8* %104, i64 %106
  %108 = load i8, i8* %107, align 1
  %109 = sext i8 %108 to i32
  %110 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %103, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6.890, i64 0, i64 0), i32 %109)
  br label %111

111:                                              ; preds = %102
  %112 = load i32, i32* %13, align 4
  %113 = add nsw i32 %112, 1
  store i32 %113, i32* %13, align 4
  br label %95, !llvm.loop !135

114:                                              ; preds = %95
  %115 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %116 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %115, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7.891, i64 0, i64 0))
  br label %117

117:                                              ; preds = %114, %59
  %118 = load %struct._stritem*, %struct._stritem** %6, align 8
  %119 = getelementptr inbounds %struct._stritem, %struct._stritem* %118, i32 0, i32 7
  %120 = load i16, i16* %119, align 2
  %121 = zext i16 %120 to i32
  %122 = and i32 %121, 8
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %134

124:                                              ; preds = %117
  %125 = load i32, i32* %11, align 4
  %126 = icmp ne i32 %125, 0
  br i1 %126, label %134, label %127

127:                                              ; preds = %124
  %128 = load i32, i32* %8, align 4
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds [256 x %struct.crawler], [256 x %struct.crawler]* @crawlers, i64 0, i64 %129
  %131 = getelementptr inbounds %struct.crawler, %struct.crawler* %130, i32 0, i32 12
  %132 = load i64, i64* %131, align 8
  %133 = add i64 %132, 1
  store i64 %133, i64* %131, align 8
  br label %134

134:                                              ; preds = %127, %124, %117
  br label %135

135:                                              ; preds = %134
  %136 = load i8*, i8** @storage.888, align 8
  %137 = load %struct._stritem*, %struct._stritem** %6, align 8
  call void @storage_delete(i8* %136, %struct._stritem* %137)
  br label %138

138:                                              ; preds = %135
  %139 = load %struct._stritem*, %struct._stritem** %6, align 8
  %140 = load i32, i32* %7, align 4
  call void @do_item_unlink_nolock(%struct._stritem* %139, i32 %140)
  %141 = load %struct._stritem*, %struct._stritem** %6, align 8
  call void @do_item_remove(%struct._stritem* %141)
  br label %193

142:                                              ; preds = %56
  %143 = load %struct.crawlerstats_t*, %struct.crawlerstats_t** %10, align 8
  %144 = getelementptr inbounds %struct.crawlerstats_t, %struct.crawlerstats_t* %143, i32 0, i32 4
  %145 = load i64, i64* %144, align 8
  %146 = add i64 %145, 1
  store i64 %146, i64* %144, align 8
  %147 = load %struct._stritem*, %struct._stritem** %6, align 8
  %148 = getelementptr inbounds %struct._stritem, %struct._stritem* %147, i32 0, i32 6
  %149 = load i16, i16* %148, align 4
  %150 = add i16 %149, -1
  store i16 %150, i16* %148, align 4
  %151 = load %struct._stritem*, %struct._stritem** %6, align 8
  %152 = getelementptr inbounds %struct._stritem, %struct._stritem* %151, i32 0, i32 4
  %153 = load i32, i32* %152, align 4
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %160

155:                                              ; preds = %142
  %156 = load %struct.crawlerstats_t*, %struct.crawlerstats_t** %10, align 8
  %157 = getelementptr inbounds %struct.crawlerstats_t, %struct.crawlerstats_t* %156, i32 0, i32 2
  %158 = load i64, i64* %157, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %157, align 8
  br label %192

160:                                              ; preds = %142
  %161 = load %struct._stritem*, %struct._stritem** %6, align 8
  %162 = getelementptr inbounds %struct._stritem, %struct._stritem* %161, i32 0, i32 4
  %163 = load i32, i32* %162, align 4
  %164 = load volatile i32, i32* @current_time, align 4
  %165 = sub i32 %163, %164
  %166 = icmp ugt i32 %165, 3599
  br i1 %166, label %167, label %172

167:                                              ; preds = %160
  %168 = load %struct.crawlerstats_t*, %struct.crawlerstats_t** %10, align 8
  %169 = getelementptr inbounds %struct.crawlerstats_t, %struct.crawlerstats_t* %168, i32 0, i32 1
  %170 = load i64, i64* %169, align 8
  %171 = add i64 %170, 1
  store i64 %171, i64* %169, align 8
  br label %191

172:                                              ; preds = %160
  %173 = load %struct._stritem*, %struct._stritem** %6, align 8
  %174 = getelementptr inbounds %struct._stritem, %struct._stritem* %173, i32 0, i32 4
  %175 = load i32, i32* %174, align 4
  %176 = load volatile i32, i32* @current_time, align 4
  %177 = sub i32 %175, %176
  store i32 %177, i32* %15, align 4
  %178 = load i32, i32* %15, align 4
  %179 = udiv i32 %178, 60
  store i32 %179, i32* %16, align 4
  %180 = load i32, i32* %16, align 4
  %181 = icmp sle i32 %180, 60
  br i1 %181, label %182, label %190

182:                                              ; preds = %172
  %183 = load %struct.crawlerstats_t*, %struct.crawlerstats_t** %10, align 8
  %184 = getelementptr inbounds %struct.crawlerstats_t, %struct.crawlerstats_t* %183, i32 0, i32 0
  %185 = load i32, i32* %16, align 4
  %186 = sext i32 %185 to i64
  %187 = getelementptr inbounds [61 x i64], [61 x i64]* %184, i64 0, i64 %186
  %188 = load i64, i64* %187, align 8
  %189 = add i64 %188, 1
  store i64 %189, i64* %187, align 8
  br label %190

190:                                              ; preds = %182, %172
  br label %191

191:                                              ; preds = %190, %167
  br label %192

192:                                              ; preds = %191, %155
  br label %193

193:                                              ; preds = %192, %138
  %194 = load %struct.crawler_expired_data*, %struct.crawler_expired_data** %9, align 8
  %195 = getelementptr inbounds %struct.crawler_expired_data, %struct.crawler_expired_data* %194, i32 0, i32 0
  %196 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %195) #14
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @crawler_expired_doneclass(%struct._crawler_module_t* %0, i32 %1) #0 {
  %3 = alloca %struct._crawler_module_t*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.crawler_expired_data*, align 8
  store %struct._crawler_module_t* %0, %struct._crawler_module_t** %3, align 8
  store i32 %1, i32* %4, align 4
  %6 = load %struct._crawler_module_t*, %struct._crawler_module_t** %3, align 8
  %7 = getelementptr inbounds %struct._crawler_module_t, %struct._crawler_module_t* %6, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = bitcast i8* %8 to %struct.crawler_expired_data*
  store %struct.crawler_expired_data* %9, %struct.crawler_expired_data** %5, align 8
  %10 = load %struct.crawler_expired_data*, %struct.crawler_expired_data** %5, align 8
  %11 = getelementptr inbounds %struct.crawler_expired_data, %struct.crawler_expired_data* %10, i32 0, i32 0
  %12 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %11) #14
  %13 = load volatile i32, i32* @current_time, align 4
  %14 = load %struct.crawler_expired_data*, %struct.crawler_expired_data** %5, align 8
  %15 = getelementptr inbounds %struct.crawler_expired_data, %struct.crawler_expired_data* %14, i32 0, i32 1
  %16 = load i32, i32* %4, align 4
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds [256 x %struct.crawlerstats_t], [256 x %struct.crawlerstats_t]* %15, i64 0, i64 %17
  %19 = getelementptr inbounds %struct.crawlerstats_t, %struct.crawlerstats_t* %18, i32 0, i32 6
  store i32 %13, i32* %19, align 4
  %20 = load %struct.crawler_expired_data*, %struct.crawler_expired_data** %5, align 8
  %21 = getelementptr inbounds %struct.crawler_expired_data, %struct.crawler_expired_data* %20, i32 0, i32 1
  %22 = load i32, i32* %4, align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds [256 x %struct.crawlerstats_t], [256 x %struct.crawlerstats_t]* %21, i64 0, i64 %23
  %25 = getelementptr inbounds %struct.crawlerstats_t, %struct.crawlerstats_t* %24, i32 0, i32 7
  store i8 1, i8* %25, align 8
  %26 = load %struct.crawler_expired_data*, %struct.crawler_expired_data** %5, align 8
  %27 = getelementptr inbounds %struct.crawler_expired_data, %struct.crawler_expired_data* %26, i32 0, i32 0
  %28 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %27) #14
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @crawler_expired_finalize(%struct._crawler_module_t* %0) #0 {
  %2 = alloca %struct._crawler_module_t*, align 8
  %3 = alloca %struct.crawler_expired_data*, align 8
  store %struct._crawler_module_t* %0, %struct._crawler_module_t** %2, align 8
  %4 = load %struct._crawler_module_t*, %struct._crawler_module_t** %2, align 8
  %5 = getelementptr inbounds %struct._crawler_module_t, %struct._crawler_module_t* %4, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = bitcast i8* %6 to %struct.crawler_expired_data*
  store %struct.crawler_expired_data* %7, %struct.crawler_expired_data** %3, align 8
  %8 = load %struct.crawler_expired_data*, %struct.crawler_expired_data** %3, align 8
  %9 = getelementptr inbounds %struct.crawler_expired_data, %struct.crawler_expired_data* %8, i32 0, i32 0
  %10 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %9) #14
  %11 = load volatile i32, i32* @current_time, align 4
  %12 = load %struct.crawler_expired_data*, %struct.crawler_expired_data** %3, align 8
  %13 = getelementptr inbounds %struct.crawler_expired_data, %struct.crawler_expired_data* %12, i32 0, i32 3
  store i32 %11, i32* %13, align 4
  %14 = load %struct.crawler_expired_data*, %struct.crawler_expired_data** %3, align 8
  %15 = getelementptr inbounds %struct.crawler_expired_data, %struct.crawler_expired_data* %14, i32 0, i32 4
  store i8 1, i8* %15, align 8
  %16 = load %struct.crawler_expired_data*, %struct.crawler_expired_data** %3, align 8
  %17 = getelementptr inbounds %struct.crawler_expired_data, %struct.crawler_expired_data* %16, i32 0, i32 0
  %18 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %17) #14
  %19 = load %struct.crawler_expired_data*, %struct.crawler_expired_data** %3, align 8
  %20 = getelementptr inbounds %struct.crawler_expired_data, %struct.crawler_expired_data* %19, i32 0, i32 5
  %21 = load i8, i8* %20, align 1
  %22 = trunc i8 %21 to i1
  br i1 %22, label %26, label %23

23:                                               ; preds = %1
  %24 = load %struct.crawler_expired_data*, %struct.crawler_expired_data** %3, align 8
  %25 = bitcast %struct.crawler_expired_data* %24 to i8*
  call void @free(i8* %25) #14
  br label %26

26:                                               ; preds = %23, %1
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @crawler_metadump_eval(%struct._crawler_module_t* %0, %struct._stritem* %1, i32 %2, i32 %3) #0 {
  %5 = alloca %struct._crawler_module_t*, align 8
  %6 = alloca %struct._stritem*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca [751 x i8], align 16
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store %struct._crawler_module_t* %0, %struct._crawler_module_t** %5, align 8
  store %struct._stritem* %1, %struct._stritem** %6, align 8
  store i32 %2, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  %12 = load %struct._stritem*, %struct._stritem** %6, align 8
  %13 = call i32 @item_is_flushed(%struct._stritem* %12)
  store i32 %13, i32* %10, align 4
  %14 = load %struct._stritem*, %struct._stritem** %6, align 8
  %15 = getelementptr inbounds %struct._stritem, %struct._stritem* %14, i32 0, i32 4
  %16 = load i32, i32* %15, align 4
  %17 = icmp ne i32 %16, 0
  br i1 %17, label %18, label %24

18:                                               ; preds = %4
  %19 = load %struct._stritem*, %struct._stritem** %6, align 8
  %20 = getelementptr inbounds %struct._stritem, %struct._stritem* %19, i32 0, i32 4
  %21 = load i32, i32* %20, align 4
  %22 = load volatile i32, i32* @current_time, align 4
  %23 = icmp ult i32 %21, %22
  br i1 %23, label %27, label %24

24:                                               ; preds = %18, %4
  %25 = load i32, i32* %10, align 4
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %27, label %32

27:                                               ; preds = %24, %18
  %28 = load %struct._stritem*, %struct._stritem** %6, align 8
  %29 = getelementptr inbounds %struct._stritem, %struct._stritem* %28, i32 0, i32 6
  %30 = load i16, i16* %29, align 4
  %31 = add i16 %30, -1
  store i16 %31, i16* %29, align 4
  br label %151

32:                                               ; preds = %24
  %33 = load %struct._stritem*, %struct._stritem** %6, align 8
  %34 = getelementptr inbounds %struct._stritem, %struct._stritem* %33, i32 0, i32 10
  %35 = bitcast [0 x %union.anon.10]* %34 to i8*
  %36 = load %struct._stritem*, %struct._stritem** %6, align 8
  %37 = getelementptr inbounds %struct._stritem, %struct._stritem* %36, i32 0, i32 7
  %38 = load i16, i16* %37, align 2
  %39 = zext i16 %38 to i32
  %40 = and i32 %39, 2
  %41 = icmp ne i32 %40, 0
  %42 = zext i1 %41 to i64
  %43 = select i1 %41, i64 8, i64 0
  %44 = getelementptr inbounds i8, i8* %35, i64 %43
  %45 = getelementptr inbounds [751 x i8], [751 x i8]* %9, i64 0, i64 0
  %46 = load %struct._stritem*, %struct._stritem** %6, align 8
  %47 = getelementptr inbounds %struct._stritem, %struct._stritem* %46, i32 0, i32 9
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i64
  %50 = call zeroext i1 @uriencode(i8* %44, i8* %45, i64 %49, i64 751)
  %51 = load %struct._crawler_module_t*, %struct._crawler_module_t** %5, align 8
  %52 = getelementptr inbounds %struct._crawler_module_t, %struct._crawler_module_t* %51, i32 0, i32 1
  %53 = getelementptr inbounds %struct.crawler_client_t, %struct.crawler_client_t* %52, i32 0, i32 3
  %54 = load i8*, i8** %53, align 8
  %55 = getelementptr inbounds [751 x i8], [751 x i8]* %9, i64 0, i64 0
  %56 = load %struct._stritem*, %struct._stritem** %6, align 8
  %57 = getelementptr inbounds %struct._stritem, %struct._stritem* %56, i32 0, i32 4
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %32
  br label %68

61:                                               ; preds = %32
  %62 = load %struct._stritem*, %struct._stritem** %6, align 8
  %63 = getelementptr inbounds %struct._stritem, %struct._stritem* %62, i32 0, i32 4
  %64 = load i32, i32* %63, align 4
  %65 = zext i32 %64 to i64
  %66 = load i64, i64* @process_started, align 8
  %67 = add nsw i64 %65, %66
  br label %68

68:                                               ; preds = %61, %60
  %69 = phi i64 [ -1, %60 ], [ %67, %61 ]
  %70 = load %struct._stritem*, %struct._stritem** %6, align 8
  %71 = getelementptr inbounds %struct._stritem, %struct._stritem* %70, i32 0, i32 3
  %72 = load i32, i32* %71, align 8
  %73 = zext i32 %72 to i64
  %74 = load i64, i64* @process_started, align 8
  %75 = add nsw i64 %73, %74
  %76 = load %struct._stritem*, %struct._stritem** %6, align 8
  %77 = getelementptr inbounds %struct._stritem, %struct._stritem* %76, i32 0, i32 7
  %78 = load i16, i16* %77, align 2
  %79 = zext i16 %78 to i32
  %80 = and i32 %79, 2
  %81 = icmp ne i32 %80, 0
  br i1 %81, label %82, label %88

82:                                               ; preds = %68
  %83 = load %struct._stritem*, %struct._stritem** %6, align 8
  %84 = getelementptr inbounds %struct._stritem, %struct._stritem* %83, i32 0, i32 10
  %85 = getelementptr inbounds [0 x %union.anon.10], [0 x %union.anon.10]* %84, i64 0, i64 0
  %86 = bitcast %union.anon.10* %85 to i64*
  %87 = load i64, i64* %86, align 8
  br label %89

88:                                               ; preds = %68
  br label %89

89:                                               ; preds = %88, %82
  %90 = phi i64 [ %87, %82 ], [ 0, %88 ]
  %91 = load %struct._stritem*, %struct._stritem** %6, align 8
  %92 = getelementptr inbounds %struct._stritem, %struct._stritem* %91, i32 0, i32 7
  %93 = load i16, i16* %92, align 2
  %94 = zext i16 %93 to i32
  %95 = and i32 %94, 8
  %96 = icmp ne i32 %95, 0
  %97 = zext i1 %96 to i64
  %98 = select i1 %96, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9.893, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.894, i64 0, i64 0)
  %99 = load %struct._stritem*, %struct._stritem** %6, align 8
  %100 = getelementptr inbounds %struct._stritem, %struct._stritem* %99, i32 0, i32 8
  %101 = load i8, i8* %100, align 8
  %102 = zext i8 %101 to i32
  %103 = and i32 %102, -193
  %104 = load %struct._stritem*, %struct._stritem** %6, align 8
  %105 = getelementptr inbounds %struct._stritem, %struct._stritem* %104, i32 0, i32 9
  %106 = load i8, i8* %105, align 1
  %107 = zext i8 %106 to i64
  %108 = add i64 48, %107
  %109 = add i64 %108, 1
  %110 = load %struct._stritem*, %struct._stritem** %6, align 8
  %111 = getelementptr inbounds %struct._stritem, %struct._stritem* %110, i32 0, i32 5
  %112 = load i32, i32* %111, align 8
  %113 = sext i32 %112 to i64
  %114 = add i64 %109, %113
  %115 = load %struct._stritem*, %struct._stritem** %6, align 8
  %116 = getelementptr inbounds %struct._stritem, %struct._stritem* %115, i32 0, i32 7
  %117 = load i16, i16* %116, align 2
  %118 = zext i16 %117 to i32
  %119 = and i32 %118, 256
  %120 = icmp ne i32 %119, 0
  %121 = zext i1 %120 to i64
  %122 = select i1 %120, i64 4, i64 0
  %123 = add i64 %114, %122
  %124 = load %struct._stritem*, %struct._stritem** %6, align 8
  %125 = getelementptr inbounds %struct._stritem, %struct._stritem* %124, i32 0, i32 7
  %126 = load i16, i16* %125, align 2
  %127 = zext i16 %126 to i32
  %128 = and i32 %127, 2
  %129 = icmp ne i32 %128, 0
  %130 = zext i1 %129 to i64
  %131 = select i1 %129, i64 8, i64 0
  %132 = add i64 %123, %131
  %133 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %54, i64 4096, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.8.895, i64 0, i64 0), i8* %55, i64 %69, i64 %75, i64 %90, i8* %98, i32 %103, i64 %132) #14
  store i32 %133, i32* %11, align 4
  %134 = load %struct._stritem*, %struct._stritem** %6, align 8
  %135 = getelementptr inbounds %struct._stritem, %struct._stritem* %134, i32 0, i32 6
  %136 = load i16, i16* %135, align 4
  %137 = add i16 %136, -1
  store i16 %137, i16* %135, align 4
  %138 = load i32, i32* %11, align 4
  %139 = icmp sge i32 %138, 8191
  br i1 %139, label %143, label %140

140:                                              ; preds = %89
  %141 = load i32, i32* %11, align 4
  %142 = icmp sle i32 %141, 0
  br i1 %142, label %143, label %144

143:                                              ; preds = %140, %89
  br label %151

144:                                              ; preds = %140
  %145 = load %struct._crawler_module_t*, %struct._crawler_module_t** %5, align 8
  %146 = getelementptr inbounds %struct._crawler_module_t, %struct._crawler_module_t* %145, i32 0, i32 1
  %147 = getelementptr inbounds %struct.crawler_client_t, %struct.crawler_client_t* %146, i32 0, i32 2
  %148 = load %struct.bipbuf_t*, %struct.bipbuf_t** %147, align 8
  %149 = load i32, i32* %11, align 4
  %150 = call i32 @bipbuf_push(%struct.bipbuf_t* %148, i32 %149)
  br label %151

151:                                              ; preds = %144, %143, %27
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @crawler_metadump_finalize(%struct._crawler_module_t* %0) #0 {
  %2 = alloca %struct._crawler_module_t*, align 8
  store %struct._crawler_module_t* %0, %struct._crawler_module_t** %2, align 8
  %3 = load %struct._crawler_module_t*, %struct._crawler_module_t** %2, align 8
  %4 = getelementptr inbounds %struct._crawler_module_t, %struct._crawler_module_t* %3, i32 0, i32 1
  %5 = getelementptr inbounds %struct.crawler_client_t, %struct.crawler_client_t* %4, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ne i8* %6, null
  br i1 %7, label %8, label %21

8:                                                ; preds = %1
  %9 = load %struct._crawler_module_t*, %struct._crawler_module_t** %2, align 8
  %10 = getelementptr inbounds %struct._crawler_module_t, %struct._crawler_module_t* %9, i32 0, i32 1
  %11 = call i32 @lru_crawler_client_getbuf(%struct.crawler_client_t* %10)
  %12 = load %struct._crawler_module_t*, %struct._crawler_module_t** %2, align 8
  %13 = getelementptr inbounds %struct._crawler_module_t, %struct._crawler_module_t* %12, i32 0, i32 1
  %14 = getelementptr inbounds %struct.crawler_client_t, %struct.crawler_client_t* %13, i32 0, i32 3
  %15 = load i8*, i8** %14, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %15, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11.892, i64 0, i64 0), i64 5, i1 false)
  %16 = load %struct._crawler_module_t*, %struct._crawler_module_t** %2, align 8
  %17 = getelementptr inbounds %struct._crawler_module_t, %struct._crawler_module_t* %16, i32 0, i32 1
  %18 = getelementptr inbounds %struct.crawler_client_t, %struct.crawler_client_t* %17, i32 0, i32 2
  %19 = load %struct.bipbuf_t*, %struct.bipbuf_t** %18, align 8
  %20 = call i32 @bipbuf_push(%struct.bipbuf_t* %19, i32 5)
  br label %21

21:                                               ; preds = %8, %1
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @lru_crawler_client_getbuf(%struct.crawler_client_t* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.crawler_client_t*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  store %struct.crawler_client_t* %0, %struct.crawler_client_t** %3, align 8
  store i8* null, i8** %4, align 8
  %6 = load %struct.crawler_client_t*, %struct.crawler_client_t** %3, align 8
  %7 = getelementptr inbounds %struct.crawler_client_t, %struct.crawler_client_t* %6, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %11

10:                                               ; preds = %1
  store i32 -1, i32* %2, align 4
  br label %30

11:                                               ; preds = %1
  br label %12

12:                                               ; preds = %25, %11
  %13 = load %struct.crawler_client_t*, %struct.crawler_client_t** %3, align 8
  %14 = getelementptr inbounds %struct.crawler_client_t, %struct.crawler_client_t* %13, i32 0, i32 2
  %15 = load %struct.bipbuf_t*, %struct.bipbuf_t** %14, align 8
  %16 = call i8* @bipbuf_request(%struct.bipbuf_t* %15, i32 8192)
  store i8* %16, i8** %4, align 8
  %17 = icmp eq i8* %16, null
  br i1 %17, label %18, label %26

18:                                               ; preds = %12
  %19 = load %struct.crawler_client_t*, %struct.crawler_client_t** %3, align 8
  %20 = call i32 @lru_crawler_poll(%struct.crawler_client_t* %19)
  store i32 %20, i32* %5, align 4
  %21 = load i32, i32* %5, align 4
  %22 = icmp slt i32 %21, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %18
  %24 = load i32, i32* %5, align 4
  store i32 %24, i32* %2, align 4
  br label %30

25:                                               ; preds = %18
  br label %12, !llvm.loop !136

26:                                               ; preds = %12
  %27 = load i8*, i8** %4, align 8
  %28 = load %struct.crawler_client_t*, %struct.crawler_client_t** %3, align 8
  %29 = getelementptr inbounds %struct.crawler_client_t, %struct.crawler_client_t* %28, i32 0, i32 3
  store i8* %27, i8** %29, align 8
  store i32 0, i32* %2, align 4
  br label %30

30:                                               ; preds = %26, %23, %10
  %31 = load i32, i32* %2, align 4
  ret i32 %31
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @lru_crawler_poll(%struct.crawler_client_t* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.crawler_client_t*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca [1 x %struct.pollfd], align 4
  %7 = alloca i32, align 4
  %8 = alloca [1 x i8], align 1
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store %struct.crawler_client_t* %0, %struct.crawler_client_t** %3, align 8
  store i32 0, i32* %5, align 4
  %11 = load %struct.crawler_client_t*, %struct.crawler_client_t** %3, align 8
  %12 = getelementptr inbounds %struct.crawler_client_t, %struct.crawler_client_t* %11, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds [1 x %struct.pollfd], [1 x %struct.pollfd]* %6, i64 0, i64 0
  %15 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %14, i32 0, i32 0
  store i32 %13, i32* %15, align 4
  %16 = getelementptr inbounds [1 x %struct.pollfd], [1 x %struct.pollfd]* %6, i64 0, i64 0
  %17 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %16, i32 0, i32 1
  store i16 4, i16* %17, align 4
  %18 = getelementptr inbounds [1 x %struct.pollfd], [1 x %struct.pollfd]* %6, i64 0, i64 0
  %19 = call i32 @poll(%struct.pollfd* %18, i64 1, i32 1000)
  store i32 %19, i32* %7, align 4
  %20 = load i32, i32* %7, align 4
  %21 = icmp slt i32 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %1
  store i32 -1, i32* %2, align 4
  br label %131

23:                                               ; preds = %1
  %24 = load i32, i32* %7, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %23
  store i32 0, i32* %2, align 4
  br label %131

27:                                               ; preds = %23
  %28 = getelementptr inbounds [1 x %struct.pollfd], [1 x %struct.pollfd]* %6, i64 0, i64 0
  %29 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %28, i32 0, i32 2
  %30 = load i16, i16* %29, align 2
  %31 = sext i16 %30 to i32
  %32 = and i32 %31, 1
  %33 = icmp ne i32 %32, 0
  br i1 %33, label %34, label %64

34:                                               ; preds = %27
  %35 = load %struct.crawler_client_t*, %struct.crawler_client_t** %3, align 8
  %36 = getelementptr inbounds %struct.crawler_client_t, %struct.crawler_client_t* %35, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = bitcast i8* %37 to %struct.conn*
  %39 = getelementptr inbounds %struct.conn, %struct.conn* %38, i32 0, i32 44
  %40 = load i64 (%struct.conn*, i8*, i64)*, i64 (%struct.conn*, i8*, i64)** %39, align 8
  %41 = load %struct.crawler_client_t*, %struct.crawler_client_t** %3, align 8
  %42 = getelementptr inbounds %struct.crawler_client_t, %struct.crawler_client_t* %41, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  %44 = bitcast i8* %43 to %struct.conn*
  %45 = getelementptr inbounds [1 x i8], [1 x i8]* %8, i64 0, i64 0
  %46 = call i64 %40(%struct.conn* %44, i8* %45, i64 1)
  %47 = trunc i64 %46 to i32
  store i32 %47, i32* %9, align 4
  %48 = load i32, i32* %9, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %61, label %50

50:                                               ; preds = %34
  %51 = load i32, i32* %9, align 4
  %52 = icmp eq i32 %51, -1
  br i1 %52, label %53, label %63

53:                                               ; preds = %50
  %54 = call i32* @__errno_location() #15
  %55 = load i32, i32* %54, align 4
  %56 = icmp ne i32 %55, 11
  br i1 %56, label %57, label %63

57:                                               ; preds = %53
  %58 = call i32* @__errno_location() #15
  %59 = load i32, i32* %58, align 4
  %60 = icmp ne i32 %59, 11
  br i1 %60, label %61, label %63

61:                                               ; preds = %57, %34
  %62 = load %struct.crawler_client_t*, %struct.crawler_client_t** %3, align 8
  call void @lru_crawler_close_client(%struct.crawler_client_t* %62)
  store i32 -1, i32* %2, align 4
  br label %131

63:                                               ; preds = %57, %53, %50
  br label %64

64:                                               ; preds = %63, %27
  %65 = load %struct.crawler_client_t*, %struct.crawler_client_t** %3, align 8
  %66 = getelementptr inbounds %struct.crawler_client_t, %struct.crawler_client_t* %65, i32 0, i32 2
  %67 = load %struct.bipbuf_t*, %struct.bipbuf_t** %66, align 8
  %68 = call i8* @bipbuf_peek_all(%struct.bipbuf_t* %67, i32* %5)
  store i8* %68, i8** %4, align 8
  %69 = icmp ne i8* %68, null
  br i1 %69, label %70, label %130

70:                                               ; preds = %64
  %71 = getelementptr inbounds [1 x %struct.pollfd], [1 x %struct.pollfd]* %6, i64 0, i64 0
  %72 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %71, i32 0, i32 2
  %73 = load i16, i16* %72, align 2
  %74 = sext i16 %73 to i32
  %75 = and i32 %74, 24
  %76 = icmp ne i32 %75, 0
  br i1 %76, label %77, label %79

77:                                               ; preds = %70
  %78 = load %struct.crawler_client_t*, %struct.crawler_client_t** %3, align 8
  call void @lru_crawler_close_client(%struct.crawler_client_t* %78)
  store i32 -1, i32* %2, align 4
  br label %131

79:                                               ; preds = %70
  %80 = getelementptr inbounds [1 x %struct.pollfd], [1 x %struct.pollfd]* %6, i64 0, i64 0
  %81 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %80, i32 0, i32 2
  %82 = load i16, i16* %81, align 2
  %83 = sext i16 %82 to i32
  %84 = and i32 %83, 4
  %85 = icmp ne i32 %84, 0
  br i1 %85, label %86, label %128

86:                                               ; preds = %79
  %87 = load %struct.crawler_client_t*, %struct.crawler_client_t** %3, align 8
  %88 = getelementptr inbounds %struct.crawler_client_t, %struct.crawler_client_t* %87, i32 0, i32 0
  %89 = load i8*, i8** %88, align 8
  %90 = bitcast i8* %89 to %struct.conn*
  %91 = getelementptr inbounds %struct.conn, %struct.conn* %90, i32 0, i32 46
  %92 = load i64 (%struct.conn*, i8*, i64)*, i64 (%struct.conn*, i8*, i64)** %91, align 8
  %93 = load %struct.crawler_client_t*, %struct.crawler_client_t** %3, align 8
  %94 = getelementptr inbounds %struct.crawler_client_t, %struct.crawler_client_t* %93, i32 0, i32 0
  %95 = load i8*, i8** %94, align 8
  %96 = bitcast i8* %95 to %struct.conn*
  %97 = load i8*, i8** %4, align 8
  %98 = load i32, i32* %5, align 4
  %99 = zext i32 %98 to i64
  %100 = call i64 %92(%struct.conn* %96, i8* %97, i64 %99)
  %101 = trunc i64 %100 to i32
  store i32 %101, i32* %10, align 4
  %102 = load i32, i32* %10, align 4
  %103 = icmp eq i32 %102, -1
  br i1 %103, label %104, label %115

104:                                              ; preds = %86
  %105 = call i32* @__errno_location() #15
  %106 = load i32, i32* %105, align 4
  %107 = icmp ne i32 %106, 11
  br i1 %107, label %108, label %114

108:                                              ; preds = %104
  %109 = call i32* @__errno_location() #15
  %110 = load i32, i32* %109, align 4
  %111 = icmp ne i32 %110, 11
  br i1 %111, label %112, label %114

112:                                              ; preds = %108
  %113 = load %struct.crawler_client_t*, %struct.crawler_client_t** %3, align 8
  call void @lru_crawler_close_client(%struct.crawler_client_t* %113)
  store i32 -1, i32* %2, align 4
  br label %131

114:                                              ; preds = %108, %104
  br label %127

115:                                              ; preds = %86
  %116 = load i32, i32* %10, align 4
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %120

118:                                              ; preds = %115
  %119 = load %struct.crawler_client_t*, %struct.crawler_client_t** %3, align 8
  call void @lru_crawler_close_client(%struct.crawler_client_t* %119)
  store i32 -1, i32* %2, align 4
  br label %131

120:                                              ; preds = %115
  %121 = load %struct.crawler_client_t*, %struct.crawler_client_t** %3, align 8
  %122 = getelementptr inbounds %struct.crawler_client_t, %struct.crawler_client_t* %121, i32 0, i32 2
  %123 = load %struct.bipbuf_t*, %struct.bipbuf_t** %122, align 8
  %124 = load i32, i32* %10, align 4
  %125 = call i8* @bipbuf_poll(%struct.bipbuf_t* %123, i32 %124)
  br label %126

126:                                              ; preds = %120
  br label %127

127:                                              ; preds = %126, %114
  br label %128

128:                                              ; preds = %127, %79
  br label %129

129:                                              ; preds = %128
  br label %130

130:                                              ; preds = %129, %64
  store i32 0, i32* %2, align 4
  br label %131

131:                                              ; preds = %130, %118, %112, %77, %61, %26, %22
  %132 = load i32, i32* %2, align 4
  ret i32 %132
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @lru_crawler_close_client(%struct.crawler_client_t* %0) #0 {
  %2 = alloca %struct.crawler_client_t*, align 8
  store %struct.crawler_client_t* %0, %struct.crawler_client_t** %2, align 8
  %3 = load %struct.crawler_client_t*, %struct.crawler_client_t** %2, align 8
  %4 = getelementptr inbounds %struct.crawler_client_t, %struct.crawler_client_t* %3, i32 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = bitcast i8* %5 to %struct.conn*
  call void @sidethread_conn_close(%struct.conn* %6)
  %7 = load %struct.crawler_client_t*, %struct.crawler_client_t** %2, align 8
  %8 = getelementptr inbounds %struct.crawler_client_t, %struct.crawler_client_t* %7, i32 0, i32 0
  store i8* null, i8** %8, align 8
  %9 = load %struct.crawler_client_t*, %struct.crawler_client_t** %2, align 8
  %10 = getelementptr inbounds %struct.crawler_client_t, %struct.crawler_client_t* %9, i32 0, i32 3
  store i8* null, i8** %10, align 8
  %11 = load %struct.crawler_client_t*, %struct.crawler_client_t** %2, align 8
  %12 = getelementptr inbounds %struct.crawler_client_t, %struct.crawler_client_t* %11, i32 0, i32 2
  %13 = load %struct.bipbuf_t*, %struct.bipbuf_t** %12, align 8
  call void @bipbuf_free(%struct.bipbuf_t* %13)
  %14 = load %struct.crawler_client_t*, %struct.crawler_client_t** %2, align 8
  %15 = getelementptr inbounds %struct.crawler_client_t, %struct.crawler_client_t* %14, i32 0, i32 2
  store %struct.bipbuf_t* null, %struct.bipbuf_t** %15, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @stop_item_crawler_thread(i1 zeroext %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i8, align 1
  %4 = alloca i32, align 4
  %5 = zext i1 %0 to i8
  store i8 %5, i8* %3, align 1
  %6 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @lru_crawler_lock) #14
  %7 = load volatile i32, i32* @do_run_lru_crawler_thread, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %11

9:                                                ; preds = %1
  %10 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @lru_crawler_lock) #14
  store i32 0, i32* %2, align 4
  br label %26

11:                                               ; preds = %1
  store volatile i32 0, i32* @do_run_lru_crawler_thread, align 4
  %12 = call i32 @pthread_cond_signal(%union.pthread_cond_t* @lru_crawler_cond) #14
  %13 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @lru_crawler_lock) #14
  %14 = load i8, i8* %3, align 1
  %15 = trunc i8 %14 to i1
  br i1 %15, label %16, label %25

16:                                               ; preds = %11
  %17 = load i64, i64* @item_crawler_tid, align 8
  %18 = call i32 @pthread_join(i64 %17, i8** null)
  store i32 %18, i32* %4, align 4
  %19 = icmp ne i32 %18, 0
  br i1 %19, label %20, label %25

20:                                               ; preds = %16
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %22 = load i32, i32* %4, align 4
  %23 = call i8* @strerror(i32 %22) #14
  %24 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %21, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.898, i64 0, i64 0), i8* %23)
  store i32 -1, i32* %2, align 4
  br label %26

25:                                               ; preds = %16, %11
  store i32 0, i32* %2, align 4
  br label %26

26:                                               ; preds = %25, %20, %9
  %27 = load i32, i32* %2, align 4
  ret i32 %27
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @start_item_crawler_thread() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 28), align 2
  %4 = trunc i8 %3 to i1
  br i1 %4, label %5, label %6

5:                                                ; preds = %0
  store i32 -1, i32* %1, align 4
  br label %19

6:                                                ; preds = %0
  %7 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @lru_crawler_lock) #14
  store volatile i32 1, i32* @do_run_lru_crawler_thread, align 4
  %8 = call i32 @pthread_create(i64* @item_crawler_tid, %union.pthread_attr_t* null, i8* (i8*)* @item_crawler_thread, i8* null) #14
  store i32 %8, i32* %2, align 4
  %9 = icmp ne i32 %8, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %12 = load i32, i32* %2, align 4
  %13 = call i8* @strerror(i32 %12) #14
  %14 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1.901, i64 0, i64 0), i8* %13)
  %15 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @lru_crawler_lock) #14
  store i32 -1, i32* %1, align 4
  br label %19

16:                                               ; preds = %6
  %17 = call i32 @pthread_cond_wait(%union.pthread_cond_t* @lru_crawler_cond, %union.pthread_mutex_t* @lru_crawler_lock)
  %18 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @lru_crawler_lock) #14
  store i32 0, i32* %1, align 4
  br label %19

19:                                               ; preds = %16, %10, %5
  %20 = load i32, i32* %1, align 4
  ret i32 %20
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @item_crawler_thread(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct._stritem*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  %9 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 47), align 8
  store i32 %9, i32* %4, align 4
  %10 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @lru_crawler_lock) #14
  %11 = call i32 @pthread_cond_signal(%union.pthread_cond_t* @lru_crawler_cond) #14
  store i8 1, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 28), align 2
  %12 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %13 = icmp sgt i32 %12, 2
  br i1 %13, label %14, label %17

14:                                               ; preds = %1
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %16 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %15, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.12.902, i64 0, i64 0))
  br label %17

17:                                               ; preds = %14, %1
  br label %18

18:                                               ; preds = %243, %17
  %19 = load volatile i32, i32* @do_run_lru_crawler_thread, align 4
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %21, label %244

21:                                               ; preds = %18
  %22 = call i32 @pthread_cond_wait(%union.pthread_cond_t* @lru_crawler_cond, %union.pthread_mutex_t* @lru_crawler_lock)
  %23 = load i32, i32* @crawler_count, align 4
  %24 = icmp eq i32 %23, -1
  br i1 %24, label %25, label %26

25:                                               ; preds = %21
  call void @item_crawl_hash()
  store i32 0, i32* @crawler_count, align 4
  br label %208

26:                                               ; preds = %21
  br label %27

27:                                               ; preds = %206, %26
  %28 = load i32, i32* @crawler_count, align 4
  %29 = icmp ne i32 %28, 0
  br i1 %29, label %30, label %207

30:                                               ; preds = %27
  store %struct._stritem* null, %struct._stritem** %5, align 8
  store i8* null, i8** %6, align 8
  store i32 1, i32* %3, align 4
  br label %31

31:                                               ; preds = %203, %30
  %32 = load i32, i32* %3, align 4
  %33 = icmp slt i32 %32, 256
  br i1 %33, label %34, label %206

34:                                               ; preds = %31
  %35 = load i32, i32* %3, align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds [256 x %struct.crawler], [256 x %struct.crawler]* @crawlers, i64 0, i64 %36
  %38 = getelementptr inbounds %struct.crawler, %struct.crawler* %37, i32 0, i32 7
  %39 = load i16, i16* %38, align 2
  %40 = zext i16 %39 to i32
  %41 = icmp ne i32 %40, 1
  br i1 %41, label %42, label %43

42:                                               ; preds = %34
  br label %203

43:                                               ; preds = %34
  %44 = load i8*, i8** getelementptr inbounds (%struct._crawler_module_t, %struct._crawler_module_t* @active_crawler_mod, i32 0, i32 1, i32 0), align 8
  %45 = icmp ne i8* %44, null
  br i1 %45, label %46, label %53

46:                                               ; preds = %43
  %47 = call i32 @lru_crawler_client_getbuf(%struct.crawler_client_t* getelementptr inbounds (%struct._crawler_module_t, %struct._crawler_module_t* @active_crawler_mod, i32 0, i32 1))
  store i32 %47, i32* %7, align 4
  %48 = load i32, i32* %7, align 4
  %49 = icmp ne i32 %48, 0
  br i1 %49, label %50, label %52

50:                                               ; preds = %46
  %51 = load i32, i32* %3, align 4
  call void @lru_crawler_class_done(i32 %51)
  br label %203

52:                                               ; preds = %46
  br label %61

53:                                               ; preds = %43
  %54 = load %struct.crawler_module_reg_t*, %struct.crawler_module_reg_t** getelementptr inbounds (%struct._crawler_module_t, %struct._crawler_module_t* @active_crawler_mod, i32 0, i32 2), align 8
  %55 = getelementptr inbounds %struct.crawler_module_reg_t, %struct.crawler_module_reg_t* %54, i32 0, i32 5
  %56 = load i8, i8* %55, align 1
  %57 = trunc i8 %56 to i1
  br i1 %57, label %58, label %60

58:                                               ; preds = %53
  %59 = load i32, i32* %3, align 4
  call void @lru_crawler_class_done(i32 %59)
  br label %203

60:                                               ; preds = %53
  br label %61

61:                                               ; preds = %60, %52
  %62 = load i32, i32* %3, align 4
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds [256 x %union.pthread_mutex_t], [256 x %union.pthread_mutex_t]* @lru_locks, i64 0, i64 %63
  %65 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %64) #14
  %66 = load i32, i32* %3, align 4
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds [256 x %struct.crawler], [256 x %struct.crawler]* @crawlers, i64 0, i64 %67
  %69 = bitcast %struct.crawler* %68 to %struct._stritem*
  %70 = call %struct._stritem* @do_item_crawl_q(%struct._stritem* %69)
  store %struct._stritem* %70, %struct._stritem** %5, align 8
  %71 = load %struct._stritem*, %struct._stritem** %5, align 8
  %72 = icmp eq %struct._stritem* %71, null
  br i1 %72, label %88, label %73

73:                                               ; preds = %61
  %74 = load i32, i32* %3, align 4
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds [256 x %struct.crawler], [256 x %struct.crawler]* @crawlers, i64 0, i64 %75
  %77 = getelementptr inbounds %struct.crawler, %struct.crawler* %76, i32 0, i32 10
  %78 = load i32, i32* %77, align 4
  %79 = icmp ne i32 %78, 0
  br i1 %79, label %80, label %97

80:                                               ; preds = %73
  %81 = load i32, i32* %3, align 4
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds [256 x %struct.crawler], [256 x %struct.crawler]* @crawlers, i64 0, i64 %82
  %84 = getelementptr inbounds %struct.crawler, %struct.crawler* %83, i32 0, i32 10
  %85 = load i32, i32* %84, align 4
  %86 = add i32 %85, -1
  store i32 %86, i32* %84, align 4
  %87 = icmp ult i32 %86, 1
  br i1 %87, label %88, label %97

88:                                               ; preds = %80, %61
  %89 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %90 = icmp sgt i32 %89, 2
  br i1 %90, label %91, label %95

91:                                               ; preds = %88
  %92 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %93 = load i32, i32* %3, align 4
  %94 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %92, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.13.903, i64 0, i64 0), i32 %93)
  br label %95

95:                                               ; preds = %91, %88
  %96 = load i32, i32* %3, align 4
  call void @lru_crawler_class_done(i32 %96)
  br label %203

97:                                               ; preds = %80, %73
  %98 = load i32 (i8*, i64)*, i32 (i8*, i64)** @hash, align 8
  %99 = load %struct._stritem*, %struct._stritem** %5, align 8
  %100 = getelementptr inbounds %struct._stritem, %struct._stritem* %99, i32 0, i32 10
  %101 = bitcast [0 x %union.anon.10]* %100 to i8*
  %102 = load %struct._stritem*, %struct._stritem** %5, align 8
  %103 = getelementptr inbounds %struct._stritem, %struct._stritem* %102, i32 0, i32 7
  %104 = load i16, i16* %103, align 2
  %105 = zext i16 %104 to i32
  %106 = and i32 %105, 2
  %107 = icmp ne i32 %106, 0
  %108 = zext i1 %107 to i64
  %109 = select i1 %107, i64 8, i64 0
  %110 = getelementptr inbounds i8, i8* %101, i64 %109
  %111 = load %struct._stritem*, %struct._stritem** %5, align 8
  %112 = getelementptr inbounds %struct._stritem, %struct._stritem* %111, i32 0, i32 9
  %113 = load i8, i8* %112, align 1
  %114 = zext i8 %113 to i64
  %115 = call i32 %98(i8* %110, i64 %114)
  store i32 %115, i32* %8, align 4
  %116 = load i32, i32* %8, align 4
  %117 = call i8* @item_trylock(i32 %116)
  store i8* %117, i8** %6, align 8
  %118 = icmp eq i8* %117, null
  br i1 %118, label %119, label %124

119:                                              ; preds = %97
  %120 = load i32, i32* %3, align 4
  %121 = sext i32 %120 to i64
  %122 = getelementptr inbounds [256 x %union.pthread_mutex_t], [256 x %union.pthread_mutex_t]* @lru_locks, i64 0, i64 %121
  %123 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %122) #14
  br label %203

124:                                              ; preds = %97
  %125 = load %struct._stritem*, %struct._stritem** %5, align 8
  %126 = getelementptr inbounds %struct._stritem, %struct._stritem* %125, i32 0, i32 6
  %127 = load i16, i16* %126, align 4
  %128 = add i16 %127, 1
  store i16 %128, i16* %126, align 4
  %129 = zext i16 %128 to i32
  %130 = icmp ne i32 %129, 2
  br i1 %130, label %131, label %145

131:                                              ; preds = %124
  %132 = load %struct._stritem*, %struct._stritem** %5, align 8
  %133 = getelementptr inbounds %struct._stritem, %struct._stritem* %132, i32 0, i32 6
  %134 = load i16, i16* %133, align 4
  %135 = add i16 %134, -1
  store i16 %135, i16* %133, align 4
  %136 = load i8*, i8** %6, align 8
  %137 = icmp ne i8* %136, null
  br i1 %137, label %138, label %140

138:                                              ; preds = %131
  %139 = load i8*, i8** %6, align 8
  call void @item_trylock_unlock(i8* %139)
  br label %140

140:                                              ; preds = %138, %131
  %141 = load i32, i32* %3, align 4
  %142 = sext i32 %141 to i64
  %143 = getelementptr inbounds [256 x %union.pthread_mutex_t], [256 x %union.pthread_mutex_t]* @lru_locks, i64 0, i64 %142
  %144 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %143) #14
  br label %203

145:                                              ; preds = %124
  %146 = load i32, i32* %3, align 4
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds [256 x %struct.crawler], [256 x %struct.crawler]* @crawlers, i64 0, i64 %147
  %149 = getelementptr inbounds %struct.crawler, %struct.crawler* %148, i32 0, i32 13
  %150 = load i64, i64* %149, align 8
  %151 = add i64 %150, 1
  store i64 %151, i64* %149, align 8
  %152 = load %struct.crawler_module_reg_t*, %struct.crawler_module_reg_t** getelementptr inbounds (%struct._crawler_module_t, %struct._crawler_module_t* @active_crawler_mod, i32 0, i32 2), align 8
  %153 = getelementptr inbounds %struct.crawler_module_reg_t, %struct.crawler_module_reg_t* %152, i32 0, i32 4
  %154 = load i8, i8* %153, align 8
  %155 = trunc i8 %154 to i1
  br i1 %155, label %161, label %156

156:                                              ; preds = %145
  %157 = load i32, i32* %3, align 4
  %158 = sext i32 %157 to i64
  %159 = getelementptr inbounds [256 x %union.pthread_mutex_t], [256 x %union.pthread_mutex_t]* @lru_locks, i64 0, i64 %158
  %160 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %159) #14
  br label %161

161:                                              ; preds = %156, %145
  %162 = load %struct.crawler_module_reg_t*, %struct.crawler_module_reg_t** getelementptr inbounds (%struct._crawler_module_t, %struct._crawler_module_t* @active_crawler_mod, i32 0, i32 2), align 8
  %163 = getelementptr inbounds %struct.crawler_module_reg_t, %struct.crawler_module_reg_t* %162, i32 0, i32 1
  %164 = load void (%struct._crawler_module_t*, %struct._stritem*, i32, i32)*, void (%struct._crawler_module_t*, %struct._stritem*, i32, i32)** %163, align 8
  %165 = load %struct._stritem*, %struct._stritem** %5, align 8
  %166 = load i32, i32* %8, align 4
  %167 = load i32, i32* %3, align 4
  call void %164(%struct._crawler_module_t* @active_crawler_mod, %struct._stritem* %165, i32 %166, i32 %167)
  %168 = load i8*, i8** %6, align 8
  %169 = icmp ne i8* %168, null
  br i1 %169, label %170, label %172

170:                                              ; preds = %161
  %171 = load i8*, i8** %6, align 8
  call void @item_trylock_unlock(i8* %171)
  br label %172

172:                                              ; preds = %170, %161
  %173 = load %struct.crawler_module_reg_t*, %struct.crawler_module_reg_t** getelementptr inbounds (%struct._crawler_module_t, %struct._crawler_module_t* @active_crawler_mod, i32 0, i32 2), align 8
  %174 = getelementptr inbounds %struct.crawler_module_reg_t, %struct.crawler_module_reg_t* %173, i32 0, i32 4
  %175 = load i8, i8* %174, align 8
  %176 = trunc i8 %175 to i1
  br i1 %176, label %177, label %182

177:                                              ; preds = %172
  %178 = load i32, i32* %3, align 4
  %179 = sext i32 %178 to i64
  %180 = getelementptr inbounds [256 x %union.pthread_mutex_t], [256 x %union.pthread_mutex_t]* @lru_locks, i64 0, i64 %179
  %181 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %180) #14
  br label %182

182:                                              ; preds = %177, %172
  %183 = load i32, i32* %4, align 4
  %184 = add nsw i32 %183, -1
  store i32 %184, i32* %4, align 4
  %185 = icmp sle i32 %183, 0
  br i1 %185, label %186, label %195

186:                                              ; preds = %182
  %187 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 41), align 8
  %188 = icmp ne i32 %187, 0
  br i1 %188, label %189, label %195

189:                                              ; preds = %186
  %190 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @lru_crawler_lock) #14
  %191 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 41), align 8
  %192 = call i32 @usleep(i32 %191)
  %193 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @lru_crawler_lock) #14
  %194 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 47), align 8
  store i32 %194, i32* %4, align 4
  br label %202

195:                                              ; preds = %186, %182
  %196 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 41), align 8
  %197 = icmp ne i32 %196, 0
  br i1 %197, label %201, label %198

198:                                              ; preds = %195
  %199 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @lru_crawler_lock) #14
  %200 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @lru_crawler_lock) #14
  br label %201

201:                                              ; preds = %198, %195
  br label %202

202:                                              ; preds = %201, %189
  br label %203

203:                                              ; preds = %202, %140, %119, %95, %58, %50, %42
  %204 = load i32, i32* %3, align 4
  %205 = add nsw i32 %204, 1
  store i32 %205, i32* %3, align 4
  br label %31, !llvm.loop !137

206:                                              ; preds = %31
  br label %27, !llvm.loop !138

207:                                              ; preds = %27
  br label %208

208:                                              ; preds = %207, %25
  %209 = load %struct.crawler_module_reg_t*, %struct.crawler_module_reg_t** getelementptr inbounds (%struct._crawler_module_t, %struct._crawler_module_t* @active_crawler_mod, i32 0, i32 2), align 8
  %210 = icmp ne %struct.crawler_module_reg_t* %209, null
  br i1 %210, label %211, label %237

211:                                              ; preds = %208
  %212 = load %struct.crawler_module_reg_t*, %struct.crawler_module_reg_t** getelementptr inbounds (%struct._crawler_module_t, %struct._crawler_module_t* @active_crawler_mod, i32 0, i32 2), align 8
  %213 = getelementptr inbounds %struct.crawler_module_reg_t, %struct.crawler_module_reg_t* %212, i32 0, i32 3
  %214 = load void (%struct._crawler_module_t*)*, void (%struct._crawler_module_t*)** %213, align 8
  %215 = icmp ne void (%struct._crawler_module_t*)* %214, null
  br i1 %215, label %216, label %220

216:                                              ; preds = %211
  %217 = load %struct.crawler_module_reg_t*, %struct.crawler_module_reg_t** getelementptr inbounds (%struct._crawler_module_t, %struct._crawler_module_t* @active_crawler_mod, i32 0, i32 2), align 8
  %218 = getelementptr inbounds %struct.crawler_module_reg_t, %struct.crawler_module_reg_t* %217, i32 0, i32 3
  %219 = load void (%struct._crawler_module_t*)*, void (%struct._crawler_module_t*)** %218, align 8
  call void %219(%struct._crawler_module_t* @active_crawler_mod)
  br label %220

220:                                              ; preds = %216, %211
  br label %221

221:                                              ; preds = %230, %220
  %222 = load i8*, i8** getelementptr inbounds (%struct._crawler_module_t, %struct._crawler_module_t* @active_crawler_mod, i32 0, i32 1, i32 0), align 8
  %223 = icmp ne i8* %222, null
  br i1 %223, label %224, label %228

224:                                              ; preds = %221
  %225 = load %struct.bipbuf_t*, %struct.bipbuf_t** getelementptr inbounds (%struct._crawler_module_t, %struct._crawler_module_t* @active_crawler_mod, i32 0, i32 1, i32 2), align 8
  %226 = call i32 @bipbuf_used(%struct.bipbuf_t* %225)
  %227 = icmp ne i32 %226, 0
  br label %228

228:                                              ; preds = %224, %221
  %229 = phi i1 [ false, %221 ], [ %227, %224 ]
  br i1 %229, label %230, label %232

230:                                              ; preds = %228
  %231 = call i32 @lru_crawler_poll(%struct.crawler_client_t* getelementptr inbounds (%struct._crawler_module_t, %struct._crawler_module_t* @active_crawler_mod, i32 0, i32 1))
  br label %221, !llvm.loop !139

232:                                              ; preds = %228
  %233 = load i8*, i8** getelementptr inbounds (%struct._crawler_module_t, %struct._crawler_module_t* @active_crawler_mod, i32 0, i32 1, i32 0), align 8
  %234 = icmp ne i8* %233, null
  br i1 %234, label %235, label %236

235:                                              ; preds = %232
  call void @lru_crawler_release_client(%struct.crawler_client_t* getelementptr inbounds (%struct._crawler_module_t, %struct._crawler_module_t* @active_crawler_mod, i32 0, i32 1))
  br label %236

236:                                              ; preds = %235, %232
  store %struct.crawler_module_reg_t* null, %struct.crawler_module_reg_t** getelementptr inbounds (%struct._crawler_module_t, %struct._crawler_module_t* @active_crawler_mod, i32 0, i32 2), align 8
  br label %237

237:                                              ; preds = %236, %208
  %238 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %239 = icmp sgt i32 %238, 2
  br i1 %239, label %240, label %243

240:                                              ; preds = %237
  %241 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %242 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %241, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.14.904, i64 0, i64 0))
  br label %243

243:                                              ; preds = %240, %237
  call void @STATS_LOCK()
  store i8 0, i8* getelementptr inbounds (%struct.stats_state, %struct.stats_state* @stats_state, i32 0, i32 11), align 1
  call void @STATS_UNLOCK()
  br label %18, !llvm.loop !140

244:                                              ; preds = %18
  %245 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @lru_crawler_lock) #14
  %246 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %247 = icmp sgt i32 %246, 2
  br i1 %247, label %248, label %251

248:                                              ; preds = %244
  %249 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %250 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %249, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.15.905, i64 0, i64 0))
  br label %251

251:                                              ; preds = %248, %244
  store i8 0, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 28), align 2
  ret i8* null
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @item_crawl_hash() #0 {
  %1 = alloca i8*, align 8
  %2 = alloca i32, align 4
  %3 = alloca %struct._stritem*, align 8
  %4 = alloca i32, align 4
  %5 = call i8* @assoc_get_iterator()
  store i8* %5, i8** %1, align 8
  %6 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 47), align 8
  store i32 %6, i32* %2, align 4
  store %struct._stritem* null, %struct._stritem** %3, align 8
  br label %7

7:                                                ; preds = %62, %57, %33, %0
  %8 = load i8*, i8** %1, align 8
  %9 = call zeroext i1 @assoc_iterate(i8* %8, %struct._stritem** %3)
  br i1 %9, label %10, label %67

10:                                               ; preds = %7
  %11 = load %struct._stritem*, %struct._stritem** %3, align 8
  %12 = icmp eq %struct._stritem* %11, null
  br i1 %12, label %13, label %34

13:                                               ; preds = %10
  %14 = load i32, i32* %2, align 4
  %15 = add nsw i32 %14, -1
  store i32 %15, i32* %2, align 4
  %16 = icmp sle i32 %14, 0
  br i1 %16, label %17, label %26

17:                                               ; preds = %13
  %18 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 41), align 8
  %19 = icmp ne i32 %18, 0
  br i1 %19, label %20, label %26

20:                                               ; preds = %17
  %21 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @lru_crawler_lock) #14
  %22 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 41), align 8
  %23 = call i32 @usleep(i32 %22)
  %24 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @lru_crawler_lock) #14
  %25 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 47), align 8
  store i32 %25, i32* %2, align 4
  br label %33

26:                                               ; preds = %17, %13
  %27 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 41), align 8
  %28 = icmp ne i32 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %26
  %30 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @lru_crawler_lock) #14
  %31 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @lru_crawler_lock) #14
  br label %32

32:                                               ; preds = %29, %26
  br label %33

33:                                               ; preds = %32, %20
  br label %7, !llvm.loop !141

34:                                               ; preds = %10
  %35 = load i8*, i8** getelementptr inbounds (%struct._crawler_module_t, %struct._crawler_module_t* @active_crawler_mod, i32 0, i32 1, i32 0), align 8
  %36 = icmp ne i8* %35, null
  br i1 %36, label %37, label %43

37:                                               ; preds = %34
  %38 = call i32 @lru_crawler_client_getbuf(%struct.crawler_client_t* getelementptr inbounds (%struct._crawler_module_t, %struct._crawler_module_t* @active_crawler_mod, i32 0, i32 1))
  store i32 %38, i32* %4, align 4
  %39 = load i32, i32* %4, align 4
  %40 = icmp ne i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %37
  br label %67

42:                                               ; preds = %37
  br label %50

43:                                               ; preds = %34
  %44 = load %struct.crawler_module_reg_t*, %struct.crawler_module_reg_t** getelementptr inbounds (%struct._crawler_module_t, %struct._crawler_module_t* @active_crawler_mod, i32 0, i32 2), align 8
  %45 = getelementptr inbounds %struct.crawler_module_reg_t, %struct.crawler_module_reg_t* %44, i32 0, i32 5
  %46 = load i8, i8* %45, align 1
  %47 = trunc i8 %46 to i1
  br i1 %47, label %48, label %49

48:                                               ; preds = %43
  br label %67

49:                                               ; preds = %43
  br label %50

50:                                               ; preds = %49, %42
  %51 = load %struct._stritem*, %struct._stritem** %3, align 8
  %52 = getelementptr inbounds %struct._stritem, %struct._stritem* %51, i32 0, i32 6
  %53 = load i16, i16* %52, align 4
  %54 = add i16 %53, 1
  store i16 %54, i16* %52, align 4
  %55 = zext i16 %54 to i32
  %56 = icmp slt i32 %55, 2
  br i1 %56, label %57, label %62

57:                                               ; preds = %50
  %58 = load %struct._stritem*, %struct._stritem** %3, align 8
  %59 = getelementptr inbounds %struct._stritem, %struct._stritem* %58, i32 0, i32 6
  %60 = load i16, i16* %59, align 4
  %61 = add i16 %60, -1
  store i16 %61, i16* %59, align 4
  br label %7, !llvm.loop !141

62:                                               ; preds = %50
  %63 = load %struct.crawler_module_reg_t*, %struct.crawler_module_reg_t** getelementptr inbounds (%struct._crawler_module_t, %struct._crawler_module_t* @active_crawler_mod, i32 0, i32 2), align 8
  %64 = getelementptr inbounds %struct.crawler_module_reg_t, %struct.crawler_module_reg_t* %63, i32 0, i32 1
  %65 = load void (%struct._crawler_module_t*, %struct._stritem*, i32, i32)*, void (%struct._crawler_module_t*, %struct._stritem*, i32, i32)** %64, align 8
  %66 = load %struct._stritem*, %struct._stritem** %3, align 8
  call void %65(%struct._crawler_module_t* @active_crawler_mod, %struct._stritem* %66, i32 0, i32 0)
  br label %7, !llvm.loop !141

67:                                               ; preds = %48, %41, %7
  %68 = load i8*, i8** %1, align 8
  call void @assoc_iterate_final(i8* %68)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @lru_crawler_class_done(i32 %0) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = sext i32 %3 to i64
  %5 = getelementptr inbounds [256 x %struct.crawler], [256 x %struct.crawler]* @crawlers, i64 0, i64 %4
  %6 = getelementptr inbounds %struct.crawler, %struct.crawler* %5, i32 0, i32 7
  store i16 0, i16* %6, align 2
  %7 = load i32, i32* @crawler_count, align 4
  %8 = add nsw i32 %7, -1
  store i32 %8, i32* @crawler_count, align 4
  %9 = load i32, i32* %2, align 4
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds [256 x %struct.crawler], [256 x %struct.crawler]* @crawlers, i64 0, i64 %10
  %12 = bitcast %struct.crawler* %11 to %struct._stritem*
  call void @do_item_unlinktail_q(%struct._stritem* %12)
  %13 = load i32, i32* %2, align 4
  %14 = load i32, i32* %2, align 4
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds [256 x %struct.crawler], [256 x %struct.crawler]* @crawlers, i64 0, i64 %15
  %17 = getelementptr inbounds %struct.crawler, %struct.crawler* %16, i32 0, i32 11
  %18 = load i64, i64* %17, align 8
  %19 = load i32, i32* %2, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds [256 x %struct.crawler], [256 x %struct.crawler]* @crawlers, i64 0, i64 %20
  %22 = getelementptr inbounds %struct.crawler, %struct.crawler* %21, i32 0, i32 12
  %23 = load i64, i64* %22, align 8
  %24 = load i32, i32* %2, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [256 x %struct.crawler], [256 x %struct.crawler]* @crawlers, i64 0, i64 %25
  %27 = getelementptr inbounds %struct.crawler, %struct.crawler* %26, i32 0, i32 13
  %28 = load i64, i64* %27, align 8
  call void @do_item_stats_add_crawl(i32 %13, i64 %18, i64 %23, i64 %28)
  %29 = load i32, i32* %2, align 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds [256 x %union.pthread_mutex_t], [256 x %union.pthread_mutex_t]* @lru_locks, i64 0, i64 %30
  %32 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %31) #14
  %33 = load %struct.crawler_module_reg_t*, %struct.crawler_module_reg_t** getelementptr inbounds (%struct._crawler_module_t, %struct._crawler_module_t* @active_crawler_mod, i32 0, i32 2), align 8
  %34 = getelementptr inbounds %struct.crawler_module_reg_t, %struct.crawler_module_reg_t* %33, i32 0, i32 2
  %35 = load void (%struct._crawler_module_t*, i32)*, void (%struct._crawler_module_t*, i32)** %34, align 8
  %36 = icmp ne void (%struct._crawler_module_t*, i32)* %35, null
  br i1 %36, label %37, label %42

37:                                               ; preds = %1
  %38 = load %struct.crawler_module_reg_t*, %struct.crawler_module_reg_t** getelementptr inbounds (%struct._crawler_module_t, %struct._crawler_module_t* @active_crawler_mod, i32 0, i32 2), align 8
  %39 = getelementptr inbounds %struct.crawler_module_reg_t, %struct.crawler_module_reg_t* %38, i32 0, i32 2
  %40 = load void (%struct._crawler_module_t*, i32)*, void (%struct._crawler_module_t*, i32)** %39, align 8
  %41 = load i32, i32* %2, align 4
  call void %40(%struct._crawler_module_t* @active_crawler_mod, i32 %41)
  br label %42

42:                                               ; preds = %37, %1
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @lru_crawler_release_client(%struct.crawler_client_t* %0) #0 {
  %2 = alloca %struct.crawler_client_t*, align 8
  store %struct.crawler_client_t* %0, %struct.crawler_client_t** %2, align 8
  %3 = load %struct.crawler_client_t*, %struct.crawler_client_t** %2, align 8
  %4 = getelementptr inbounds %struct.crawler_client_t, %struct.crawler_client_t* %3, i32 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = bitcast i8* %5 to %struct.conn*
  call void @redispatch_conn(%struct.conn* %6)
  %7 = load %struct.crawler_client_t*, %struct.crawler_client_t** %2, align 8
  %8 = getelementptr inbounds %struct.crawler_client_t, %struct.crawler_client_t* %7, i32 0, i32 0
  store i8* null, i8** %8, align 8
  %9 = load %struct.crawler_client_t*, %struct.crawler_client_t** %2, align 8
  %10 = getelementptr inbounds %struct.crawler_client_t, %struct.crawler_client_t* %9, i32 0, i32 3
  store i8* null, i8** %10, align 8
  %11 = load %struct.crawler_client_t*, %struct.crawler_client_t** %2, align 8
  %12 = getelementptr inbounds %struct.crawler_client_t, %struct.crawler_client_t* %11, i32 0, i32 2
  %13 = load %struct.bipbuf_t*, %struct.bipbuf_t** %12, align 8
  call void @bipbuf_free(%struct.bipbuf_t* %13)
  %14 = load %struct.crawler_client_t*, %struct.crawler_client_t** %2, align 8
  %15 = getelementptr inbounds %struct.crawler_client_t, %struct.crawler_client_t* %14, i32 0, i32 2
  store %struct.bipbuf_t* null, %struct.bipbuf_t** %15, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @lru_crawler_start(i8* %0, i32 %1, i32 %2, i8* %3, i8* %4, i32 %5) #0 {
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i8, align 1
  %16 = alloca i32, align 4
  store i8* %0, i8** %8, align 8
  store i32 %1, i32* %9, align 4
  store i32 %2, i32* %10, align 4
  store i8* %3, i8** %11, align 8
  store i8* %4, i8** %12, align 8
  store i32 %5, i32* %13, align 4
  store i32 0, i32* %14, align 4
  %17 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @lru_crawler_lock) #14
  call void @STATS_LOCK()
  %18 = load i8, i8* getelementptr inbounds (%struct.stats_state, %struct.stats_state* @stats_state, i32 0, i32 11), align 1
  %19 = trunc i8 %18 to i1
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %15, align 1
  call void @STATS_UNLOCK()
  %21 = load volatile i32, i32* @do_run_lru_crawler_thread, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %6
  %24 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @lru_crawler_lock) #14
  store i32 -2, i32* %7, align 4
  br label %134

25:                                               ; preds = %6
  %26 = load i8, i8* %15, align 1
  %27 = trunc i8 %26 to i1
  br i1 %27, label %28, label %38

28:                                               ; preds = %25
  %29 = load i32, i32* %10, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %28
  %32 = load i32, i32* @active_crawler_type, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %38, label %34

34:                                               ; preds = %31, %28
  %35 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @lru_crawler_lock) #14
  %36 = load volatile i32, i32* @current_time, align 4
  %37 = add i32 %36, 60
  store i32 %37, i32* @lru_crawler_start.block_ae_until, align 4
  store i32 -1, i32* %7, align 4
  br label %134

38:                                               ; preds = %31, %25
  %39 = load i32, i32* %10, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %47

41:                                               ; preds = %38
  %42 = load i32, i32* @lru_crawler_start.block_ae_until, align 4
  %43 = load volatile i32, i32* @current_time, align 4
  %44 = icmp ugt i32 %42, %43
  br i1 %44, label %45, label %47

45:                                               ; preds = %41
  %46 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @lru_crawler_lock) #14
  store i32 -1, i32* %7, align 4
  br label %134

47:                                               ; preds = %41, %38
  %48 = load i32, i32* %10, align 4
  %49 = icmp ne i32 %48, 2
  br i1 %49, label %50, label %55

50:                                               ; preds = %47
  %51 = load i8*, i8** %8, align 8
  %52 = icmp eq i8* %51, null
  br i1 %52, label %53, label %55

53:                                               ; preds = %50
  %54 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @lru_crawler_lock) #14
  store i32 -2, i32* %7, align 4
  br label %134

55:                                               ; preds = %50, %47
  %56 = load i8, i8* %15, align 1
  %57 = trunc i8 %56 to i1
  br i1 %57, label %98, label %58

58:                                               ; preds = %55
  %59 = load i32, i32* %10, align 4
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds [3 x %struct.crawler_module_reg_t*], [3 x %struct.crawler_module_reg_t*]* @crawler_mod_regs, i64 0, i64 %60
  %62 = load %struct.crawler_module_reg_t*, %struct.crawler_module_reg_t** %61, align 8
  store %struct.crawler_module_reg_t* %62, %struct.crawler_module_reg_t** getelementptr inbounds (%struct._crawler_module_t, %struct._crawler_module_t* @active_crawler_mod, i32 0, i32 2), align 8
  %63 = load i32, i32* %10, align 4
  store i32 %63, i32* @active_crawler_type, align 4
  %64 = load %struct.crawler_module_reg_t*, %struct.crawler_module_reg_t** getelementptr inbounds (%struct._crawler_module_t, %struct._crawler_module_t* @active_crawler_mod, i32 0, i32 2), align 8
  %65 = getelementptr inbounds %struct.crawler_module_reg_t, %struct.crawler_module_reg_t* %64, i32 0, i32 0
  %66 = bitcast {}** %65 to i32 (%struct._crawler_module_t*, i8*)**
  %67 = load i32 (%struct._crawler_module_t*, i8*)*, i32 (%struct._crawler_module_t*, i8*)** %66, align 8
  %68 = icmp ne i32 (%struct._crawler_module_t*, i8*)* %67, null
  br i1 %68, label %69, label %76

69:                                               ; preds = %58
  %70 = load %struct.crawler_module_reg_t*, %struct.crawler_module_reg_t** getelementptr inbounds (%struct._crawler_module_t, %struct._crawler_module_t* @active_crawler_mod, i32 0, i32 2), align 8
  %71 = getelementptr inbounds %struct.crawler_module_reg_t, %struct.crawler_module_reg_t* %70, i32 0, i32 0
  %72 = bitcast {}** %71 to i32 (%struct._crawler_module_t*, i8*)**
  %73 = load i32 (%struct._crawler_module_t*, i8*)*, i32 (%struct._crawler_module_t*, i8*)** %72, align 8
  %74 = load i8*, i8** %11, align 8
  %75 = call i32 %73(%struct._crawler_module_t* @active_crawler_mod, i8* %74)
  br label %76

76:                                               ; preds = %69, %58
  %77 = load %struct.crawler_module_reg_t*, %struct.crawler_module_reg_t** getelementptr inbounds (%struct._crawler_module_t, %struct._crawler_module_t* @active_crawler_mod, i32 0, i32 2), align 8
  %78 = getelementptr inbounds %struct.crawler_module_reg_t, %struct.crawler_module_reg_t* %77, i32 0, i32 5
  %79 = load i8, i8* %78, align 1
  %80 = trunc i8 %79 to i1
  br i1 %80, label %81, label %97

81:                                               ; preds = %76
  %82 = load i8*, i8** %12, align 8
  %83 = icmp eq i8* %82, null
  br i1 %83, label %87, label %84

84:                                               ; preds = %81
  %85 = load i32, i32* %13, align 4
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %89

87:                                               ; preds = %84, %81
  %88 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @lru_crawler_lock) #14
  store i32 -2, i32* %7, align 4
  br label %134

89:                                               ; preds = %84
  %90 = load i8*, i8** %12, align 8
  %91 = load i32, i32* %13, align 4
  %92 = call i32 @lru_crawler_set_client(%struct._crawler_module_t* @active_crawler_mod, i8* %90, i32 %91)
  %93 = icmp ne i32 %92, 0
  br i1 %93, label %94, label %96

94:                                               ; preds = %89
  %95 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @lru_crawler_lock) #14
  store i32 -2, i32* %7, align 4
  br label %134

96:                                               ; preds = %89
  br label %97

97:                                               ; preds = %96, %76
  br label %98

98:                                               ; preds = %97, %55
  %99 = load i8*, i8** %8, align 8
  %100 = icmp eq i8* %99, null
  br i1 %100, label %101, label %102

101:                                              ; preds = %98
  store i32 1, i32* %14, align 4
  store i32 -1, i32* @crawler_count, align 4
  br label %124

102:                                              ; preds = %98
  store i32 1, i32* %16, align 4
  br label %103

103:                                              ; preds = %120, %102
  %104 = load i32, i32* %16, align 4
  %105 = icmp slt i32 %104, 256
  br i1 %105, label %106, label %123

106:                                              ; preds = %103
  %107 = load i8*, i8** %8, align 8
  %108 = load i32, i32* %16, align 4
  %109 = sext i32 %108 to i64
  %110 = getelementptr inbounds i8, i8* %107, i64 %109
  %111 = load i8, i8* %110, align 1
  %112 = icmp ne i8 %111, 0
  br i1 %112, label %113, label %119

113:                                              ; preds = %106
  %114 = load i32, i32* %16, align 4
  %115 = load i32, i32* %9, align 4
  %116 = call i32 @do_lru_crawler_start(i32 %114, i32 %115)
  %117 = load i32, i32* %14, align 4
  %118 = add nsw i32 %117, %116
  store i32 %118, i32* %14, align 4
  br label %119

119:                                              ; preds = %113, %106
  br label %120

120:                                              ; preds = %119
  %121 = load i32, i32* %16, align 4
  %122 = add nsw i32 %121, 1
  store i32 %122, i32* %16, align 4
  br label %103, !llvm.loop !142

123:                                              ; preds = %103
  br label %124

124:                                              ; preds = %123, %101
  %125 = load i32, i32* %14, align 4
  %126 = icmp ne i32 %125, 0
  br i1 %126, label %127, label %131

127:                                              ; preds = %124
  call void @STATS_LOCK()
  store i8 1, i8* getelementptr inbounds (%struct.stats_state, %struct.stats_state* @stats_state, i32 0, i32 11), align 1
  %128 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 12), align 8
  %129 = add i64 %128, 1
  store i64 %129, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 12), align 8
  call void @STATS_UNLOCK()
  %130 = call i32 @pthread_cond_signal(%union.pthread_cond_t* @lru_crawler_cond) #14
  br label %131

131:                                              ; preds = %127, %124
  %132 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @lru_crawler_lock) #14
  %133 = load i32, i32* %14, align 4
  store i32 %133, i32* %7, align 4
  br label %134

134:                                              ; preds = %131, %94, %87, %53, %45, %34, %23
  %135 = load i32, i32* %7, align 4
  ret i32 %135
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @lru_crawler_set_client(%struct._crawler_module_t* %0, i8* %1, i32 %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca %struct._crawler_module_t*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %struct.crawler_client_t*, align 8
  store %struct._crawler_module_t* %0, %struct._crawler_module_t** %5, align 8
  store i8* %1, i8** %6, align 8
  store i32 %2, i32* %7, align 4
  %9 = load %struct._crawler_module_t*, %struct._crawler_module_t** %5, align 8
  %10 = getelementptr inbounds %struct._crawler_module_t, %struct._crawler_module_t* %9, i32 0, i32 1
  store %struct.crawler_client_t* %10, %struct.crawler_client_t** %8, align 8
  %11 = load %struct.crawler_client_t*, %struct.crawler_client_t** %8, align 8
  %12 = getelementptr inbounds %struct.crawler_client_t, %struct.crawler_client_t* %11, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = icmp ne i8* %13, null
  br i1 %14, label %15, label %16

15:                                               ; preds = %3
  store i32 -1, i32* %4, align 4
  br label %32

16:                                               ; preds = %3
  %17 = load i8*, i8** %6, align 8
  %18 = load %struct.crawler_client_t*, %struct.crawler_client_t** %8, align 8
  %19 = getelementptr inbounds %struct.crawler_client_t, %struct.crawler_client_t* %18, i32 0, i32 0
  store i8* %17, i8** %19, align 8
  %20 = load i32, i32* %7, align 4
  %21 = load %struct.crawler_client_t*, %struct.crawler_client_t** %8, align 8
  %22 = getelementptr inbounds %struct.crawler_client_t, %struct.crawler_client_t* %21, i32 0, i32 1
  store i32 %20, i32* %22, align 8
  %23 = call %struct.bipbuf_t* @bipbuf_new(i32 131072)
  %24 = load %struct.crawler_client_t*, %struct.crawler_client_t** %8, align 8
  %25 = getelementptr inbounds %struct.crawler_client_t, %struct.crawler_client_t* %24, i32 0, i32 2
  store %struct.bipbuf_t* %23, %struct.bipbuf_t** %25, align 8
  %26 = load %struct.crawler_client_t*, %struct.crawler_client_t** %8, align 8
  %27 = getelementptr inbounds %struct.crawler_client_t, %struct.crawler_client_t* %26, i32 0, i32 2
  %28 = load %struct.bipbuf_t*, %struct.bipbuf_t** %27, align 8
  %29 = icmp eq %struct.bipbuf_t* %28, null
  br i1 %29, label %30, label %31

30:                                               ; preds = %16
  store i32 -2, i32* %4, align 4
  br label %32

31:                                               ; preds = %16
  store i32 0, i32* %4, align 4
  br label %32

32:                                               ; preds = %31, %30, %15
  %33 = load i32, i32* %4, align 4
  ret i32 %33
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @do_lru_crawler_start(i32 %0, i32 %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  %7 = load i32, i32* %3, align 4
  store i32 %7, i32* %5, align 4
  store i32 0, i32* %6, align 4
  %8 = load i32, i32* %5, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds [256 x %union.pthread_mutex_t], [256 x %union.pthread_mutex_t]* @lru_locks, i64 0, i64 %9
  %11 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %10) #14
  %12 = load i32, i32* %5, align 4
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds [256 x %struct.crawler], [256 x %struct.crawler]* @crawlers, i64 0, i64 %13
  %15 = getelementptr inbounds %struct.crawler, %struct.crawler* %14, i32 0, i32 7
  %16 = load i16, i16* %15, align 2
  %17 = zext i16 %16 to i32
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %94

19:                                               ; preds = %2
  %20 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %21 = icmp sgt i32 %20, 2
  br i1 %21, label %22, label %26

22:                                               ; preds = %19
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %24 = load i32, i32* %5, align 4
  %25 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %23, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.16.908, i64 0, i64 0), i32 %24)
  br label %26

26:                                               ; preds = %22, %19
  %27 = load i32, i32* %5, align 4
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds [256 x %struct.crawler], [256 x %struct.crawler]* @crawlers, i64 0, i64 %28
  %30 = getelementptr inbounds %struct.crawler, %struct.crawler* %29, i32 0, i32 5
  store i32 0, i32* %30, align 8
  %31 = load i32, i32* %5, align 4
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds [256 x %struct.crawler], [256 x %struct.crawler]* @crawlers, i64 0, i64 %32
  %34 = getelementptr inbounds %struct.crawler, %struct.crawler* %33, i32 0, i32 9
  store i8 0, i8* %34, align 1
  %35 = load i32, i32* %5, align 4
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds [256 x %struct.crawler], [256 x %struct.crawler]* @crawlers, i64 0, i64 %36
  %38 = getelementptr inbounds %struct.crawler, %struct.crawler* %37, i32 0, i32 7
  store i16 1, i16* %38, align 2
  %39 = load i32, i32* %5, align 4
  %40 = zext i32 %39 to i64
  %41 = getelementptr inbounds [256 x %struct.crawler], [256 x %struct.crawler]* @crawlers, i64 0, i64 %40
  %42 = getelementptr inbounds %struct.crawler, %struct.crawler* %41, i32 0, i32 0
  store %struct._stritem* null, %struct._stritem** %42, align 8
  %43 = load i32, i32* %5, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds [256 x %struct.crawler], [256 x %struct.crawler]* @crawlers, i64 0, i64 %44
  %46 = getelementptr inbounds %struct.crawler, %struct.crawler* %45, i32 0, i32 1
  store %struct._stritem* null, %struct._stritem** %46, align 8
  %47 = load i32, i32* %5, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds [256 x %struct.crawler], [256 x %struct.crawler]* @crawlers, i64 0, i64 %48
  %50 = getelementptr inbounds %struct.crawler, %struct.crawler* %49, i32 0, i32 3
  store i32 0, i32* %50, align 8
  %51 = load i32, i32* %4, align 4
  %52 = icmp eq i32 %51, -1
  br i1 %52, label %53, label %56

53:                                               ; preds = %26
  %54 = load i32, i32* %5, align 4
  %55 = call i32 @do_get_lru_size(i32 %54)
  store i32 %55, i32* %4, align 4
  br label %56

56:                                               ; preds = %53, %26
  %57 = load i32, i32* %4, align 4
  %58 = icmp ne i32 %57, 0
  br i1 %58, label %59, label %62

59:                                               ; preds = %56
  %60 = load i32, i32* %4, align 4
  %61 = add i32 %60, 1
  store i32 %61, i32* %4, align 4
  br label %62

62:                                               ; preds = %59, %56
  %63 = load i32, i32* %4, align 4
  %64 = load i32, i32* %5, align 4
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds [256 x %struct.crawler], [256 x %struct.crawler]* @crawlers, i64 0, i64 %65
  %67 = getelementptr inbounds %struct.crawler, %struct.crawler* %66, i32 0, i32 10
  store i32 %63, i32* %67, align 4
  %68 = load i32, i32* %5, align 4
  %69 = trunc i32 %68 to i8
  %70 = load i32, i32* %5, align 4
  %71 = zext i32 %70 to i64
  %72 = getelementptr inbounds [256 x %struct.crawler], [256 x %struct.crawler]* @crawlers, i64 0, i64 %71
  %73 = getelementptr inbounds %struct.crawler, %struct.crawler* %72, i32 0, i32 8
  store i8 %69, i8* %73, align 8
  %74 = load i32, i32* %5, align 4
  %75 = zext i32 %74 to i64
  %76 = getelementptr inbounds [256 x %struct.crawler], [256 x %struct.crawler]* @crawlers, i64 0, i64 %75
  %77 = getelementptr inbounds %struct.crawler, %struct.crawler* %76, i32 0, i32 11
  store i64 0, i64* %77, align 8
  %78 = load i32, i32* %5, align 4
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds [256 x %struct.crawler], [256 x %struct.crawler]* @crawlers, i64 0, i64 %79
  %81 = getelementptr inbounds %struct.crawler, %struct.crawler* %80, i32 0, i32 12
  store i64 0, i64* %81, align 8
  %82 = load i32, i32* %5, align 4
  %83 = zext i32 %82 to i64
  %84 = getelementptr inbounds [256 x %struct.crawler], [256 x %struct.crawler]* @crawlers, i64 0, i64 %83
  %85 = getelementptr inbounds %struct.crawler, %struct.crawler* %84, i32 0, i32 13
  store i64 0, i64* %85, align 8
  %86 = load i32, i32* %5, align 4
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds [256 x %struct.crawler], [256 x %struct.crawler]* @crawlers, i64 0, i64 %87
  %89 = bitcast %struct.crawler* %88 to %struct._stritem*
  call void @do_item_linktail_q(%struct._stritem* %89)
  %90 = load i32, i32* @crawler_count, align 4
  %91 = add nsw i32 %90, 1
  store i32 %91, i32* @crawler_count, align 4
  %92 = load i32, i32* %6, align 4
  %93 = add nsw i32 %92, 1
  store i32 %93, i32* %6, align 4
  br label %94

94:                                               ; preds = %62, %2
  %95 = load i32, i32* %5, align 4
  %96 = zext i32 %95 to i64
  %97 = getelementptr inbounds [256 x %union.pthread_mutex_t], [256 x %union.pthread_mutex_t]* @lru_locks, i64 0, i64 %96
  %98 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %97) #14
  %99 = load i32, i32* %6, align 4
  ret i32 %99
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @lru_crawler_crawl(i8* %0, i32 %1, i8* %2, i32 %3, i32 %4) #0 {
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca [256 x i8], align 16
  %16 = alloca i8, align 1
  %17 = alloca i8*, align 8
  store i8* %0, i8** %7, align 8
  store i32 %1, i32* %8, align 4
  store i8* %2, i8** %9, align 8
  store i32 %3, i32* %10, align 4
  store i32 %4, i32* %11, align 4
  store i8* null, i8** %12, align 8
  store i32 0, i32* %13, align 4
  store i32 0, i32* %14, align 4
  store i8 0, i8* %16, align 1
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* %15, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 16 %18, i8 0, i64 256, i1 false)
  %19 = load i8*, i8** %7, align 8
  %20 = call i32 @strcmp(i8* %19, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.909, i64 0, i64 0)) #16
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %34

22:                                               ; preds = %5
  store i32 0, i32* %13, align 4
  br label %23

23:                                               ; preds = %30, %22
  %24 = load i32, i32* %13, align 4
  %25 = icmp ult i32 %24, 256
  br i1 %25, label %26, label %33

26:                                               ; preds = %23
  %27 = load i32, i32* %13, align 4
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds [256 x i8], [256 x i8]* %15, i64 0, i64 %28
  store i8 1, i8* %29, align 1
  br label %30

30:                                               ; preds = %26
  %31 = load i32, i32* %13, align 4
  %32 = add i32 %31, 1
  store i32 %32, i32* %13, align 4
  br label %23, !llvm.loop !143

33:                                               ; preds = %23
  br label %75

34:                                               ; preds = %5
  %35 = load i8*, i8** %7, align 8
  %36 = call i32 @strcmp(i8* %35, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.910, i64 0, i64 0)) #16
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %34
  store i8 1, i8* %16, align 1
  br label %74

39:                                               ; preds = %34
  %40 = load i8*, i8** %7, align 8
  %41 = call i8* @strtok_r(i8* %40, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.911, i64 0, i64 0), i8** %12) #14
  store i8* %41, i8** %17, align 8
  br label %42

42:                                               ; preds = %71, %39
  %43 = load i8*, i8** %17, align 8
  %44 = icmp ne i8* %43, null
  br i1 %44, label %45, label %73

45:                                               ; preds = %42
  %46 = load i8*, i8** %17, align 8
  %47 = call zeroext i1 @safe_strtoul(i8* %46, i32* %13)
  br i1 %47, label %48, label %54

48:                                               ; preds = %45
  %49 = load i32, i32* %13, align 4
  %50 = icmp ult i32 %49, 1
  br i1 %50, label %54, label %51

51:                                               ; preds = %48
  %52 = load i32, i32* %13, align 4
  %53 = icmp uge i32 %52, 64
  br i1 %53, label %54, label %55

54:                                               ; preds = %51, %48, %45
  store i32 2, i32* %6, align 4
  br label %100

55:                                               ; preds = %51
  %56 = load i32, i32* %13, align 4
  %57 = or i32 %56, 192
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds [256 x i8], [256 x i8]* %15, i64 0, i64 %58
  store i8 1, i8* %59, align 1
  %60 = load i32, i32* %13, align 4
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds [256 x i8], [256 x i8]* %15, i64 0, i64 %61
  store i8 1, i8* %62, align 1
  %63 = load i32, i32* %13, align 4
  %64 = or i32 %63, 64
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds [256 x i8], [256 x i8]* %15, i64 0, i64 %65
  store i8 1, i8* %66, align 1
  %67 = load i32, i32* %13, align 4
  %68 = or i32 %67, 128
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds [256 x i8], [256 x i8]* %15, i64 0, i64 %69
  store i8 1, i8* %70, align 1
  br label %71

71:                                               ; preds = %55
  %72 = call i8* @strtok_r(i8* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.911, i64 0, i64 0), i8** %12) #14
  store i8* %72, i8** %17, align 8
  br label %42, !llvm.loop !144

73:                                               ; preds = %42
  br label %74

74:                                               ; preds = %73, %38
  br label %75

75:                                               ; preds = %74, %33
  %76 = load i8, i8* %16, align 1
  %77 = trunc i8 %76 to i1
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  br label %81

79:                                               ; preds = %75
  %80 = getelementptr inbounds [256 x i8], [256 x i8]* %15, i64 0, i64 0
  br label %81

81:                                               ; preds = %79, %78
  %82 = phi i8* [ null, %78 ], [ %80, %79 ]
  %83 = load i32, i32* %11, align 4
  %84 = load i32, i32* %8, align 4
  %85 = load i8*, i8** %9, align 8
  %86 = load i32, i32* %10, align 4
  %87 = call i32 @lru_crawler_start(i8* %82, i32 %83, i32 %84, i8* null, i8* %85, i32 %86)
  store i32 %87, i32* %14, align 4
  %88 = load i32, i32* %14, align 4
  %89 = icmp eq i32 %88, -1
  br i1 %89, label %90, label %91

90:                                               ; preds = %81
  store i32 1, i32* %6, align 4
  br label %100

91:                                               ; preds = %81
  %92 = load i32, i32* %14, align 4
  %93 = icmp eq i32 %92, -2
  br i1 %93, label %94, label %95

94:                                               ; preds = %91
  store i32 4, i32* %6, align 4
  br label %100

95:                                               ; preds = %91
  %96 = load i32, i32* %14, align 4
  %97 = icmp ne i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  store i32 0, i32* %6, align 4
  br label %100

99:                                               ; preds = %95
  store i32 3, i32* %6, align 4
  br label %100

100:                                              ; preds = %99, %98, %94, %90, %54
  %101 = load i32, i32* %6, align 4
  ret i32 %101
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lru_crawler_pause() #0 {
  %1 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @lru_crawler_lock) #14
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lru_crawler_resume() #0 {
  %1 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @lru_crawler_lock) #14
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @init_lru_crawler(i8* %0) #0 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i32, i32* @lru_crawler_initialized, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = load i8*, i8** %2, align 8
  store i8* %6, i8** @storage.888, align 8
  store i8* null, i8** getelementptr inbounds (%struct._crawler_module_t, %struct._crawler_module_t* @active_crawler_mod, i32 0, i32 1, i32 0), align 8
  store %struct.crawler_module_reg_t* null, %struct.crawler_module_reg_t** getelementptr inbounds (%struct._crawler_module_t, %struct._crawler_module_t* @active_crawler_mod, i32 0, i32 2), align 8
  store i8* null, i8** getelementptr inbounds (%struct._crawler_module_t, %struct._crawler_module_t* @active_crawler_mod, i32 0, i32 0), align 8
  store i32 1, i32* @lru_crawler_initialized, align 4
  br label %7

7:                                                ; preds = %5, %1
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @itoa_u32(i32 %0, i8* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i8* %1, i8** %4, align 8
  store i32 0, i32* %5, align 4
  %7 = load i32, i32* %3, align 4
  %8 = icmp uge i32 %7, 100000000
  br i1 %8, label %9, label %12

9:                                                ; preds = %2
  %10 = load i32, i32* %3, align 4
  %11 = call i32 @digits(i32 %10, i32 100000000, i32* %5, i8** %4, i32 10)
  store i32 %11, i32* %6, align 4
  br label %36

12:                                               ; preds = %2
  %13 = load i32, i32* %3, align 4
  %14 = icmp ult i32 %13, 100
  br i1 %14, label %15, label %18

15:                                               ; preds = %12
  %16 = load i32, i32* %3, align 4
  %17 = call i32 @digits(i32 %16, i32 1, i32* %5, i8** %4, i32 2)
  store i32 %17, i32* %6, align 4
  br label %35

18:                                               ; preds = %12
  %19 = load i32, i32* %3, align 4
  %20 = icmp ult i32 %19, 10000
  br i1 %20, label %21, label %24

21:                                               ; preds = %18
  %22 = load i32, i32* %3, align 4
  %23 = call i32 @digits(i32 %22, i32 100, i32* %5, i8** %4, i32 4)
  store i32 %23, i32* %6, align 4
  br label %34

24:                                               ; preds = %18
  %25 = load i32, i32* %3, align 4
  %26 = icmp ult i32 %25, 1000000
  br i1 %26, label %27, label %30

27:                                               ; preds = %24
  %28 = load i32, i32* %3, align 4
  %29 = call i32 @digits(i32 %28, i32 10000, i32* %5, i8** %4, i32 6)
  store i32 %29, i32* %6, align 4
  br label %33

30:                                               ; preds = %24
  %31 = load i32, i32* %3, align 4
  %32 = call i32 @digits(i32 %31, i32 1000000, i32* %5, i8** %4, i32 8)
  store i32 %32, i32* %6, align 4
  br label %33

33:                                               ; preds = %30, %27
  br label %34

34:                                               ; preds = %33, %21
  br label %35

35:                                               ; preds = %34, %15
  br label %36

36:                                               ; preds = %35, %9
  %37 = load i32, i32* %3, align 4
  %38 = load i8*, i8** %4, align 8
  %39 = load i32, i32* %5, align 4
  %40 = load i32, i32* %6, align 4
  %41 = call i8* @itoa(i32 %37, i8* %38, i32 %39, i32 %40)
  ret i8* %41
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @digits(i32 %0, i32 %1, i32* %2, i8** %3, i32 %4) #0 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32*, align 8
  %9 = alloca i8**, align 8
  %10 = alloca i32, align 4
  store i32 %0, i32* %6, align 4
  store i32 %1, i32* %7, align 4
  store i32* %2, i32** %8, align 8
  store i8** %3, i8*** %9, align 8
  store i32 %4, i32* %10, align 4
  %11 = load i32, i32* %6, align 4
  %12 = load i32, i32* %7, align 4
  %13 = mul i32 %12, 10
  %14 = icmp ult i32 %11, %13
  br i1 %14, label %15, label %30

15:                                               ; preds = %5
  %16 = load i32, i32* %6, align 4
  %17 = load i32, i32* %7, align 4
  %18 = udiv i32 %16, %17
  %19 = load i32*, i32** %8, align 8
  store i32 %18, i32* %19, align 4
  %20 = load i32*, i32** %8, align 8
  %21 = load i32, i32* %20, align 4
  %22 = add nsw i32 48, %21
  %23 = trunc i32 %22 to i8
  %24 = load i8**, i8*** %9, align 8
  %25 = load i8*, i8** %24, align 8
  %26 = call i8* @out1(i8 signext %23, i8* %25)
  %27 = load i8**, i8*** %9, align 8
  store i8* %26, i8** %27, align 8
  %28 = load i32, i32* %10, align 4
  %29 = add nsw i32 %28, -1
  store i32 %29, i32* %10, align 4
  br label %30

30:                                               ; preds = %15, %5
  %31 = load i32, i32* %10, align 4
  ret i32 %31
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @itoa(i32 %0, i8* %1, i32 %2, i32 %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i32 %0, i32* %5, align 4
  store i8* %1, i8** %6, align 8
  store i32 %2, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  %9 = load i32, i32* %8, align 4
  switch i32 %9, label %61 [
    i32 10, label %10
    i32 9, label %16
    i32 8, label %21
    i32 7, label %27
    i32 6, label %32
    i32 5, label %38
    i32 4, label %43
    i32 3, label %49
    i32 2, label %54
    i32 1, label %60
  ]

10:                                               ; preds = %4
  %11 = load i32, i32* %5, align 4
  %12 = udiv i32 %11, 100000000
  store i32 %12, i32* %7, align 4
  %13 = load i32, i32* %7, align 4
  %14 = load i8*, i8** %6, align 8
  %15 = call i8* @out2(i32 %13, i8* %14)
  store i8* %15, i8** %6, align 8
  br label %16

16:                                               ; preds = %4, %10
  %17 = load i32, i32* %7, align 4
  %18 = mul nsw i32 %17, 100000000
  %19 = load i32, i32* %5, align 4
  %20 = sub i32 %19, %18
  store i32 %20, i32* %5, align 4
  br label %21

21:                                               ; preds = %4, %16
  %22 = load i32, i32* %5, align 4
  %23 = udiv i32 %22, 1000000
  store i32 %23, i32* %7, align 4
  %24 = load i32, i32* %7, align 4
  %25 = load i8*, i8** %6, align 8
  %26 = call i8* @out2(i32 %24, i8* %25)
  store i8* %26, i8** %6, align 8
  br label %27

27:                                               ; preds = %4, %21
  %28 = load i32, i32* %7, align 4
  %29 = mul nsw i32 %28, 1000000
  %30 = load i32, i32* %5, align 4
  %31 = sub i32 %30, %29
  store i32 %31, i32* %5, align 4
  br label %32

32:                                               ; preds = %4, %27
  %33 = load i32, i32* %5, align 4
  %34 = udiv i32 %33, 10000
  store i32 %34, i32* %7, align 4
  %35 = load i32, i32* %7, align 4
  %36 = load i8*, i8** %6, align 8
  %37 = call i8* @out2(i32 %35, i8* %36)
  store i8* %37, i8** %6, align 8
  br label %38

38:                                               ; preds = %4, %32
  %39 = load i32, i32* %7, align 4
  %40 = mul nsw i32 %39, 10000
  %41 = load i32, i32* %5, align 4
  %42 = sub i32 %41, %40
  store i32 %42, i32* %5, align 4
  br label %43

43:                                               ; preds = %4, %38
  %44 = load i32, i32* %5, align 4
  %45 = udiv i32 %44, 100
  store i32 %45, i32* %7, align 4
  %46 = load i32, i32* %7, align 4
  %47 = load i8*, i8** %6, align 8
  %48 = call i8* @out2(i32 %46, i8* %47)
  store i8* %48, i8** %6, align 8
  br label %49

49:                                               ; preds = %4, %43
  %50 = load i32, i32* %7, align 4
  %51 = mul nsw i32 %50, 100
  %52 = load i32, i32* %5, align 4
  %53 = sub i32 %52, %51
  store i32 %53, i32* %5, align 4
  br label %54

54:                                               ; preds = %4, %49
  %55 = load i32, i32* %5, align 4
  %56 = udiv i32 %55, 1
  store i32 %56, i32* %7, align 4
  %57 = load i32, i32* %7, align 4
  %58 = load i8*, i8** %6, align 8
  %59 = call i8* @out2(i32 %57, i8* %58)
  store i8* %59, i8** %6, align 8
  br label %60

60:                                               ; preds = %4, %54
  br label %61

61:                                               ; preds = %60, %4
  %62 = load i8*, i8** %6, align 8
  store i8 0, i8* %62, align 1
  %63 = load i8*, i8** %6, align 8
  ret i8* %63
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @out2(i32 %0, i8* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  store i32 %0, i32* %3, align 4
  store i8* %1, i8** %4, align 8
  %5 = load i8*, i8** %4, align 8
  %6 = load i32, i32* %3, align 4
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds i16, i16* bitcast ([201 x i8]* @lut to i16*), i64 %7
  %9 = bitcast i16* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 2 %9, i64 2, i1 false)
  %10 = load i8*, i8** %4, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 2
  ret i8* %11
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @out1(i8 signext %0, i8* %1) #0 {
  %3 = alloca i8, align 1
  %4 = alloca i8*, align 8
  store i8 %0, i8* %3, align 1
  store i8* %1, i8** %4, align 8
  %5 = load i8*, i8** %4, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 %3, i64 1, i1 false)
  %6 = load i8*, i8** %4, align 8
  %7 = getelementptr inbounds i8, i8* %6, i64 1
  ret i8* %7
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @itoa_32(i32 %0, i8* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i8* %1, i8** %4, align 8
  %6 = load i32, i32* %3, align 4
  store i32 %6, i32* %5, align 4
  %7 = load i32, i32* %3, align 4
  %8 = icmp slt i32 %7, 0
  br i1 %8, label %9, label %14

9:                                                ; preds = %2
  %10 = load i8*, i8** %4, align 8
  %11 = getelementptr inbounds i8, i8* %10, i32 1
  store i8* %11, i8** %4, align 8
  store i8 45, i8* %10, align 1
  %12 = load i32, i32* %5, align 4
  %13 = sub i32 0, %12
  store i32 %13, i32* %5, align 4
  br label %14

14:                                               ; preds = %9, %2
  %15 = load i32, i32* %5, align 4
  %16 = load i8*, i8** %4, align 8
  %17 = call i8* @itoa_u32(i32 %15, i8* %16)
  ret i8* %17
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @itoa_u64(i64 %0, i8* %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  store i64 %0, i64* %4, align 8
  store i8* %1, i8** %5, align 8
  %9 = load i64, i64* %4, align 8
  %10 = trunc i64 %9 to i32
  store i32 %10, i32* %7, align 4
  %11 = load i32, i32* %7, align 4
  %12 = zext i32 %11 to i64
  %13 = load i64, i64* %4, align 8
  %14 = icmp eq i64 %12, %13
  br i1 %14, label %15, label %19

15:                                               ; preds = %2
  %16 = load i32, i32* %7, align 4
  %17 = load i8*, i8** %5, align 8
  %18 = call i8* @itoa_u32(i32 %16, i8* %17)
  store i8* %18, i8** %3, align 8
  br label %41

19:                                               ; preds = %2
  %20 = load i64, i64* %4, align 8
  %21 = udiv i64 %20, 1000000000
  store i64 %21, i64* %8, align 8
  %22 = load i64, i64* %8, align 8
  %23 = load i8*, i8** %5, align 8
  %24 = call i8* @itoa_u64(i64 %22, i8* %23)
  store i8* %24, i8** %5, align 8
  %25 = load i64, i64* %4, align 8
  %26 = load i64, i64* %8, align 8
  %27 = mul i64 %26, 1000000000
  %28 = sub i64 %25, %27
  %29 = trunc i64 %28 to i32
  store i32 %29, i32* %7, align 4
  %30 = load i32, i32* %7, align 4
  %31 = udiv i32 %30, 100000000
  store i32 %31, i32* %6, align 4
  %32 = load i32, i32* %6, align 4
  %33 = add nsw i32 48, %32
  %34 = trunc i32 %33 to i8
  %35 = load i8*, i8** %5, align 8
  %36 = call i8* @out1(i8 signext %34, i8* %35)
  store i8* %36, i8** %5, align 8
  %37 = load i32, i32* %7, align 4
  %38 = load i8*, i8** %5, align 8
  %39 = load i32, i32* %6, align 4
  %40 = call i8* @itoa(i32 %37, i8* %38, i32 %39, i32 9)
  store i8* %40, i8** %3, align 8
  br label %41

41:                                               ; preds = %19, %15
  %42 = load i8*, i8** %3, align 8
  ret i8* %42
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @itoa_64(i64 %0, i8* %1) #0 {
  %3 = alloca i64, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  store i64 %0, i64* %3, align 8
  store i8* %1, i8** %4, align 8
  %6 = load i64, i64* %3, align 8
  store i64 %6, i64* %5, align 8
  %7 = load i64, i64* %3, align 8
  %8 = icmp slt i64 %7, 0
  br i1 %8, label %9, label %14

9:                                                ; preds = %2
  %10 = load i8*, i8** %4, align 8
  %11 = getelementptr inbounds i8, i8* %10, i32 1
  store i8* %11, i8** %4, align 8
  store i8 45, i8* %10, align 1
  %12 = load i64, i64* %5, align 8
  %13 = sub i64 0, %12
  store i64 %13, i64* %5, align 8
  br label %14

14:                                               ; preds = %9, %2
  %15 = load i64, i64* %5, align 8
  %16 = load i8*, i8** %4, align 8
  %17 = call i8* @itoa_u64(i64 %15, i8* %16)
  ret i8* %17
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @slab_automove_init(%struct.settings* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.settings*, align 8
  %4 = alloca i32, align 4
  %5 = alloca double, align 8
  %6 = alloca %struct.slab_automove*, align 8
  store %struct.settings* %0, %struct.settings** %3, align 8
  %7 = load %struct.settings*, %struct.settings** %3, align 8
  %8 = getelementptr inbounds %struct.settings, %struct.settings* %7, i32 0, i32 34
  %9 = load i32, i32* %8, align 8
  store i32 %9, i32* %4, align 4
  %10 = load %struct.settings*, %struct.settings** %3, align 8
  %11 = getelementptr inbounds %struct.settings, %struct.settings* %10, i32 0, i32 33
  %12 = load double, double* %11, align 8
  store double %12, double* %5, align 8
  %13 = call noalias i8* @calloc(i64 1, i64 6168) #14
  %14 = bitcast i8* %13 to %struct.slab_automove*
  store %struct.slab_automove* %14, %struct.slab_automove** %6, align 8
  %15 = load %struct.slab_automove*, %struct.slab_automove** %6, align 8
  %16 = icmp eq %struct.slab_automove* %15, null
  br i1 %16, label %17, label %18

17:                                               ; preds = %1
  store i8* null, i8** %2, align 8
  br label %48

18:                                               ; preds = %1
  %19 = load i32, i32* %4, align 4
  %20 = mul i32 %19, 64
  %21 = zext i32 %20 to i64
  %22 = call noalias i8* @calloc(i64 %21, i64 32) #14
  %23 = bitcast i8* %22 to %struct.window_data*
  %24 = load %struct.slab_automove*, %struct.slab_automove** %6, align 8
  %25 = getelementptr inbounds %struct.slab_automove, %struct.slab_automove* %24, i32 0, i32 0
  store %struct.window_data* %23, %struct.window_data** %25, align 8
  %26 = load i32, i32* %4, align 4
  %27 = load %struct.slab_automove*, %struct.slab_automove** %6, align 8
  %28 = getelementptr inbounds %struct.slab_automove, %struct.slab_automove* %27, i32 0, i32 1
  store i32 %26, i32* %28, align 8
  %29 = load double, double* %5, align 8
  %30 = load %struct.slab_automove*, %struct.slab_automove** %6, align 8
  %31 = getelementptr inbounds %struct.slab_automove, %struct.slab_automove* %30, i32 0, i32 3
  store double %29, double* %31, align 8
  %32 = load %struct.slab_automove*, %struct.slab_automove** %6, align 8
  %33 = getelementptr inbounds %struct.slab_automove, %struct.slab_automove* %32, i32 0, i32 0
  %34 = load %struct.window_data*, %struct.window_data** %33, align 8
  %35 = icmp eq %struct.window_data* %34, null
  br i1 %35, label %36, label %39

36:                                               ; preds = %18
  %37 = load %struct.slab_automove*, %struct.slab_automove** %6, align 8
  %38 = bitcast %struct.slab_automove* %37 to i8*
  call void @free(i8* %38) #14
  store i8* null, i8** %2, align 8
  br label %48

39:                                               ; preds = %18
  %40 = load %struct.slab_automove*, %struct.slab_automove** %6, align 8
  %41 = getelementptr inbounds %struct.slab_automove, %struct.slab_automove* %40, i32 0, i32 4
  %42 = getelementptr inbounds [64 x %struct.item_stats_automove], [64 x %struct.item_stats_automove]* %41, i64 0, i64 0
  call void @fill_item_stats_automove(%struct.item_stats_automove* %42)
  %43 = load %struct.slab_automove*, %struct.slab_automove** %6, align 8
  %44 = getelementptr inbounds %struct.slab_automove, %struct.slab_automove* %43, i32 0, i32 6
  %45 = getelementptr inbounds [64 x %struct.slab_stats_automove], [64 x %struct.slab_stats_automove]* %44, i64 0, i64 0
  call void @fill_slab_stats_automove(%struct.slab_stats_automove* %45)
  %46 = load %struct.slab_automove*, %struct.slab_automove** %6, align 8
  %47 = bitcast %struct.slab_automove* %46 to i8*
  store i8* %47, i8** %2, align 8
  br label %48

48:                                               ; preds = %39, %36, %17
  %49 = load i8*, i8** %2, align 8
  ret i8* %49
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @slab_automove_free(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.slab_automove*, align 8
  store i8* %0, i8** %2, align 8
  %4 = load i8*, i8** %2, align 8
  %5 = bitcast i8* %4 to %struct.slab_automove*
  store %struct.slab_automove* %5, %struct.slab_automove** %3, align 8
  %6 = load %struct.slab_automove*, %struct.slab_automove** %3, align 8
  %7 = getelementptr inbounds %struct.slab_automove, %struct.slab_automove* %6, i32 0, i32 0
  %8 = load %struct.window_data*, %struct.window_data** %7, align 8
  %9 = bitcast %struct.window_data* %8 to i8*
  call void @free(i8* %9) #14
  %10 = load %struct.slab_automove*, %struct.slab_automove** %3, align 8
  %11 = bitcast %struct.slab_automove* %10 to i8*
  call void @free(i8* %11) #14
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @slab_automove_run(i8* %0, i32* %1, i32* %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca %struct.slab_automove*, align 8
  %8 = alloca i32, align 4
  %9 = alloca %struct.window_data, align 8
  %10 = alloca i32, align 4
  %11 = alloca i64, align 8
  %12 = alloca i32, align 4
  %13 = alloca i64, align 8
  %14 = alloca i8, align 1
  %15 = alloca i64, align 8
  %16 = alloca i32, align 4
  %17 = alloca %struct.window_data*, align 8
  %18 = alloca i64, align 8
  %19 = alloca i64, align 8
  store i8* %0, i8** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %20 = load i8*, i8** %4, align 8
  %21 = bitcast i8* %20 to %struct.slab_automove*
  store %struct.slab_automove* %21, %struct.slab_automove** %7, align 8
  store i32 -1, i32* %10, align 4
  store i64 0, i64* %11, align 8
  store i32 -1, i32* %12, align 4
  store i64 -1, i64* %13, align 8
  store i8 0, i8* %14, align 1
  %22 = load i32*, i32** %5, align 8
  store i32 -1, i32* %22, align 4
  %23 = load i32*, i32** %6, align 8
  store i32 -1, i32* %23, align 4
  %24 = load %struct.slab_automove*, %struct.slab_automove** %7, align 8
  %25 = getelementptr inbounds %struct.slab_automove, %struct.slab_automove* %24, i32 0, i32 5
  %26 = getelementptr inbounds [64 x %struct.item_stats_automove], [64 x %struct.item_stats_automove]* %25, i64 0, i64 0
  call void @fill_item_stats_automove(%struct.item_stats_automove* %26)
  %27 = load %struct.slab_automove*, %struct.slab_automove** %7, align 8
  %28 = getelementptr inbounds %struct.slab_automove, %struct.slab_automove* %27, i32 0, i32 7
  %29 = getelementptr inbounds [64 x %struct.slab_stats_automove], [64 x %struct.slab_stats_automove]* %28, i64 0, i64 0
  call void @fill_slab_stats_automove(%struct.slab_stats_automove* %29)
  store i64 0, i64* %15, align 8
  store i32 1, i32* %8, align 4
  br label %30

30:                                               ; preds = %51, %3
  %31 = load i32, i32* %8, align 4
  %32 = icmp slt i32 %31, 64
  br i1 %32, label %33, label %54

33:                                               ; preds = %30
  %34 = load %struct.slab_automove*, %struct.slab_automove** %7, align 8
  %35 = getelementptr inbounds %struct.slab_automove, %struct.slab_automove* %34, i32 0, i32 5
  %36 = load i32, i32* %8, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds [64 x %struct.item_stats_automove], [64 x %struct.item_stats_automove]* %35, i64 0, i64 %37
  %39 = getelementptr inbounds %struct.item_stats_automove, %struct.item_stats_automove* %38, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = load %struct.slab_automove*, %struct.slab_automove** %7, align 8
  %42 = getelementptr inbounds %struct.slab_automove, %struct.slab_automove* %41, i32 0, i32 4
  %43 = load i32, i32* %8, align 4
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds [64 x %struct.item_stats_automove], [64 x %struct.item_stats_automove]* %42, i64 0, i64 %44
  %46 = getelementptr inbounds %struct.item_stats_automove, %struct.item_stats_automove* %45, i32 0, i32 0
  %47 = load i64, i64* %46, align 8
  %48 = sub nsw i64 %40, %47
  %49 = load i64, i64* %15, align 8
  %50 = add i64 %49, %48
  store i64 %50, i64* %15, align 8
  br label %51

51:                                               ; preds = %33
  %52 = load i32, i32* %8, align 4
  %53 = add nsw i32 %52, 1
  store i32 %53, i32* %8, align 4
  br label %30, !llvm.loop !145

54:                                               ; preds = %30
  %55 = load %struct.slab_automove*, %struct.slab_automove** %7, align 8
  %56 = getelementptr inbounds %struct.slab_automove, %struct.slab_automove* %55, i32 0, i32 2
  %57 = load i32, i32* %56, align 4
  %58 = add i32 %57, 1
  store i32 %58, i32* %56, align 4
  store i32 1, i32* %8, align 4
  br label %59

59:                                               ; preds = %259, %54
  %60 = load i32, i32* %8, align 4
  %61 = icmp slt i32 %60, 64
  br i1 %61, label %62, label %262

62:                                               ; preds = %59
  %63 = load i32, i32* %8, align 4
  %64 = load %struct.slab_automove*, %struct.slab_automove** %7, align 8
  %65 = getelementptr inbounds %struct.slab_automove, %struct.slab_automove* %64, i32 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = mul i32 %63, %66
  store i32 %67, i32* %16, align 4
  %68 = load %struct.slab_automove*, %struct.slab_automove** %7, align 8
  %69 = getelementptr inbounds %struct.slab_automove, %struct.slab_automove* %68, i32 0, i32 0
  %70 = load %struct.window_data*, %struct.window_data** %69, align 8
  %71 = load i32, i32* %16, align 4
  %72 = load %struct.slab_automove*, %struct.slab_automove** %7, align 8
  %73 = getelementptr inbounds %struct.slab_automove, %struct.slab_automove* %72, i32 0, i32 2
  %74 = load i32, i32* %73, align 4
  %75 = load %struct.slab_automove*, %struct.slab_automove** %7, align 8
  %76 = getelementptr inbounds %struct.slab_automove, %struct.slab_automove* %75, i32 0, i32 1
  %77 = load i32, i32* %76, align 8
  %78 = urem i32 %74, %77
  %79 = add i32 %71, %78
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds %struct.window_data, %struct.window_data* %70, i64 %80
  store %struct.window_data* %81, %struct.window_data** %17, align 8
  %82 = load %struct.window_data*, %struct.window_data** %17, align 8
  %83 = bitcast %struct.window_data* %82 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %83, i8 0, i64 32, i1 false)
  %84 = bitcast %struct.window_data* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 0, i64 32, i1 false)
  %85 = load %struct.slab_automove*, %struct.slab_automove** %7, align 8
  %86 = getelementptr inbounds %struct.slab_automove, %struct.slab_automove* %85, i32 0, i32 0
  %87 = load %struct.window_data*, %struct.window_data** %86, align 8
  %88 = load i32, i32* %16, align 4
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds %struct.window_data, %struct.window_data* %87, i64 %89
  %91 = load %struct.slab_automove*, %struct.slab_automove** %7, align 8
  %92 = getelementptr inbounds %struct.slab_automove, %struct.slab_automove* %91, i32 0, i32 1
  %93 = load i32, i32* %92, align 8
  call void @window_sum(%struct.window_data* %90, %struct.window_data* %9, i32 %93)
  %94 = load %struct.slab_automove*, %struct.slab_automove** %7, align 8
  %95 = getelementptr inbounds %struct.slab_automove, %struct.slab_automove* %94, i32 0, i32 5
  %96 = load i32, i32* %8, align 4
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds [64 x %struct.item_stats_automove], [64 x %struct.item_stats_automove]* %95, i64 0, i64 %97
  %99 = getelementptr inbounds %struct.item_stats_automove, %struct.item_stats_automove* %98, i32 0, i32 0
  %100 = load i64, i64* %99, align 8
  %101 = load %struct.slab_automove*, %struct.slab_automove** %7, align 8
  %102 = getelementptr inbounds %struct.slab_automove, %struct.slab_automove* %101, i32 0, i32 4
  %103 = load i32, i32* %8, align 4
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds [64 x %struct.item_stats_automove], [64 x %struct.item_stats_automove]* %102, i64 0, i64 %104
  %106 = getelementptr inbounds %struct.item_stats_automove, %struct.item_stats_automove* %105, i32 0, i32 0
  %107 = load i64, i64* %106, align 8
  %108 = sub nsw i64 %100, %107
  store i64 %108, i64* %18, align 8
  %109 = load i64, i64* %18, align 8
  %110 = icmp ugt i64 %109, 0
  br i1 %110, label %111, label %123

111:                                              ; preds = %62
  %112 = load i64, i64* %18, align 8
  %113 = uitofp i64 %112 to float
  %114 = load i64, i64* %15, align 8
  %115 = uitofp i64 %114 to float
  %116 = fdiv float %113, %115
  %117 = load %struct.window_data*, %struct.window_data** %17, align 8
  %118 = getelementptr inbounds %struct.window_data, %struct.window_data* %117, i32 0, i32 2
  store float %116, float* %118, align 8
  %119 = load %struct.window_data*, %struct.window_data** %17, align 8
  %120 = getelementptr inbounds %struct.window_data, %struct.window_data* %119, i32 0, i32 3
  store i64 1, i64* %120, align 8
  %121 = load %struct.window_data*, %struct.window_data** %17, align 8
  %122 = getelementptr inbounds %struct.window_data, %struct.window_data* %121, i32 0, i32 1
  store i64 1, i64* %122, align 8
  br label %123

123:                                              ; preds = %111, %62
  %124 = load %struct.slab_automove*, %struct.slab_automove** %7, align 8
  %125 = getelementptr inbounds %struct.slab_automove, %struct.slab_automove* %124, i32 0, i32 5
  %126 = load i32, i32* %8, align 4
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds [64 x %struct.item_stats_automove], [64 x %struct.item_stats_automove]* %125, i64 0, i64 %127
  %129 = getelementptr inbounds %struct.item_stats_automove, %struct.item_stats_automove* %128, i32 0, i32 1
  %130 = load i64, i64* %129, align 8
  %131 = load %struct.slab_automove*, %struct.slab_automove** %7, align 8
  %132 = getelementptr inbounds %struct.slab_automove, %struct.slab_automove* %131, i32 0, i32 4
  %133 = load i32, i32* %8, align 4
  %134 = sext i32 %133 to i64
  %135 = getelementptr inbounds [64 x %struct.item_stats_automove], [64 x %struct.item_stats_automove]* %132, i64 0, i64 %134
  %136 = getelementptr inbounds %struct.item_stats_automove, %struct.item_stats_automove* %135, i32 0, i32 1
  %137 = load i64, i64* %136, align 8
  %138 = sub nsw i64 %130, %137
  %139 = icmp sgt i64 %138, 0
  br i1 %139, label %140, label %143

140:                                              ; preds = %123
  %141 = load %struct.window_data*, %struct.window_data** %17, align 8
  %142 = getelementptr inbounds %struct.window_data, %struct.window_data* %141, i32 0, i32 1
  store i64 1, i64* %142, align 8
  br label %143

143:                                              ; preds = %140, %123
  %144 = load %struct.slab_automove*, %struct.slab_automove** %7, align 8
  %145 = getelementptr inbounds %struct.slab_automove, %struct.slab_automove* %144, i32 0, i32 7
  %146 = load i32, i32* %8, align 4
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds [64 x %struct.slab_stats_automove], [64 x %struct.slab_stats_automove]* %145, i64 0, i64 %147
  %149 = getelementptr inbounds %struct.slab_stats_automove, %struct.slab_stats_automove* %148, i32 0, i32 3
  %150 = load i64, i64* %149, align 8
  %151 = load %struct.slab_automove*, %struct.slab_automove** %7, align 8
  %152 = getelementptr inbounds %struct.slab_automove, %struct.slab_automove* %151, i32 0, i32 6
  %153 = load i32, i32* %8, align 4
  %154 = sext i32 %153 to i64
  %155 = getelementptr inbounds [64 x %struct.slab_stats_automove], [64 x %struct.slab_stats_automove]* %152, i64 0, i64 %154
  %156 = getelementptr inbounds %struct.slab_stats_automove, %struct.slab_stats_automove* %155, i32 0, i32 3
  %157 = load i64, i64* %156, align 8
  %158 = sub nsw i64 %150, %157
  %159 = icmp sgt i64 %158, 0
  br i1 %159, label %160, label %163

160:                                              ; preds = %143
  %161 = load %struct.window_data*, %struct.window_data** %17, align 8
  %162 = getelementptr inbounds %struct.window_data, %struct.window_data* %161, i32 0, i32 1
  store i64 1, i64* %162, align 8
  br label %163

163:                                              ; preds = %160, %143
  %164 = load %struct.slab_automove*, %struct.slab_automove** %7, align 8
  %165 = getelementptr inbounds %struct.slab_automove, %struct.slab_automove* %164, i32 0, i32 5
  %166 = load i32, i32* %8, align 4
  %167 = sext i32 %166 to i64
  %168 = getelementptr inbounds [64 x %struct.item_stats_automove], [64 x %struct.item_stats_automove]* %165, i64 0, i64 %167
  %169 = getelementptr inbounds %struct.item_stats_automove, %struct.item_stats_automove* %168, i32 0, i32 2
  %170 = load i32, i32* %169, align 8
  %171 = zext i32 %170 to i64
  %172 = load %struct.window_data*, %struct.window_data** %17, align 8
  %173 = getelementptr inbounds %struct.window_data, %struct.window_data* %172, i32 0, i32 0
  store i64 %171, i64* %173, align 8
  %174 = getelementptr inbounds %struct.window_data, %struct.window_data* %9, i32 0, i32 0
  %175 = load i64, i64* %174, align 8
  %176 = load %struct.slab_automove*, %struct.slab_automove** %7, align 8
  %177 = getelementptr inbounds %struct.slab_automove, %struct.slab_automove* %176, i32 0, i32 1
  %178 = load i32, i32* %177, align 8
  %179 = zext i32 %178 to i64
  %180 = udiv i64 %175, %179
  store i64 %180, i64* %19, align 8
  %181 = load %struct.slab_automove*, %struct.slab_automove** %7, align 8
  %182 = getelementptr inbounds %struct.slab_automove, %struct.slab_automove* %181, i32 0, i32 7
  %183 = load i32, i32* %8, align 4
  %184 = sext i32 %183 to i64
  %185 = getelementptr inbounds [64 x %struct.slab_stats_automove], [64 x %struct.slab_stats_automove]* %182, i64 0, i64 %184
  %186 = getelementptr inbounds %struct.slab_stats_automove, %struct.slab_stats_automove* %185, i32 0, i32 2
  %187 = load i64, i64* %186, align 8
  %188 = sitofp i64 %187 to double
  %189 = load %struct.slab_automove*, %struct.slab_automove** %7, align 8
  %190 = getelementptr inbounds %struct.slab_automove, %struct.slab_automove* %189, i32 0, i32 7
  %191 = load i32, i32* %8, align 4
  %192 = sext i32 %191 to i64
  %193 = getelementptr inbounds [64 x %struct.slab_stats_automove], [64 x %struct.slab_stats_automove]* %190, i64 0, i64 %192
  %194 = getelementptr inbounds %struct.slab_stats_automove, %struct.slab_stats_automove* %193, i32 0, i32 0
  %195 = load i32, i32* %194, align 8
  %196 = uitofp i32 %195 to double
  %197 = fmul double %196, 2.500000e+00
  %198 = fcmp ogt double %188, %197
  br i1 %198, label %199, label %208

199:                                              ; preds = %163
  %200 = getelementptr inbounds %struct.window_data, %struct.window_data* %9, i32 0, i32 1
  %201 = load i64, i64* %200, align 8
  %202 = icmp eq i64 %201, 0
  br i1 %202, label %203, label %207

203:                                              ; preds = %199
  %204 = load i32, i32* %8, align 4
  %205 = load i32*, i32** %5, align 8
  store i32 %204, i32* %205, align 4
  %206 = load i32*, i32** %6, align 8
  store i32 0, i32* %206, align 4
  br label %262

207:                                              ; preds = %199
  br label %208

208:                                              ; preds = %207, %163
  %209 = load i64, i64* %19, align 8
  %210 = load i64, i64* %11, align 8
  %211 = icmp ugt i64 %209, %210
  br i1 %211, label %212, label %224

212:                                              ; preds = %208
  %213 = load %struct.slab_automove*, %struct.slab_automove** %7, align 8
  %214 = getelementptr inbounds %struct.slab_automove, %struct.slab_automove* %213, i32 0, i32 7
  %215 = load i32, i32* %8, align 4
  %216 = sext i32 %215 to i64
  %217 = getelementptr inbounds [64 x %struct.slab_stats_automove], [64 x %struct.slab_stats_automove]* %214, i64 0, i64 %216
  %218 = getelementptr inbounds %struct.slab_stats_automove, %struct.slab_stats_automove* %217, i32 0, i32 3
  %219 = load i64, i64* %218, align 8
  %220 = icmp sgt i64 %219, 2
  br i1 %220, label %221, label %224

221:                                              ; preds = %212
  %222 = load i32, i32* %8, align 4
  store i32 %222, i32* %10, align 4
  %223 = load i64, i64* %19, align 8
  store i64 %223, i64* %11, align 8
  br label %224

224:                                              ; preds = %221, %212, %208
  %225 = load i64, i64* %19, align 8
  %226 = load i64, i64* %13, align 8
  %227 = icmp ult i64 %225, %226
  br i1 %227, label %228, label %258

228:                                              ; preds = %224
  %229 = getelementptr inbounds %struct.window_data, %struct.window_data* %9, i32 0, i32 3
  %230 = load i64, i64* %229, align 8
  %231 = load %struct.slab_automove*, %struct.slab_automove** %7, align 8
  %232 = getelementptr inbounds %struct.slab_automove, %struct.slab_automove* %231, i32 0, i32 1
  %233 = load i32, i32* %232, align 8
  %234 = udiv i32 %233, 2
  %235 = zext i32 %234 to i64
  %236 = icmp ugt i64 %230, %235
  br i1 %236, label %247, label %237

237:                                              ; preds = %228
  %238 = getelementptr inbounds %struct.window_data, %struct.window_data* %9, i32 0, i32 2
  %239 = load float, float* %238, align 8
  %240 = load %struct.slab_automove*, %struct.slab_automove** %7, align 8
  %241 = getelementptr inbounds %struct.slab_automove, %struct.slab_automove* %240, i32 0, i32 1
  %242 = load i32, i32* %241, align 8
  %243 = uitofp i32 %242 to float
  %244 = fdiv float %239, %243
  %245 = fpext float %244 to double
  %246 = fcmp ogt double %245, 2.500000e-01
  br i1 %246, label %247, label %258

247:                                              ; preds = %237, %228
  %248 = load i32, i32* %8, align 4
  store i32 %248, i32* %12, align 4
  %249 = load i64, i64* %19, align 8
  store i64 %249, i64* %13, align 8
  %250 = load %struct.window_data*, %struct.window_data** %17, align 8
  %251 = getelementptr inbounds %struct.window_data, %struct.window_data* %250, i32 0, i32 3
  %252 = load i64, i64* %251, align 8
  %253 = icmp ne i64 %252, 0
  %254 = zext i1 %253 to i64
  %255 = select i1 %253, i32 1, i32 0
  %256 = icmp ne i32 %255, 0
  %257 = zext i1 %256 to i8
  store i8 %257, i8* %14, align 1
  br label %258

258:                                              ; preds = %247, %237, %224
  br label %259

259:                                              ; preds = %258
  %260 = load i32, i32* %8, align 4
  %261 = add nsw i32 %260, 1
  store i32 %261, i32* %8, align 4
  br label %59, !llvm.loop !146

262:                                              ; preds = %203, %59
  %263 = load %struct.slab_automove*, %struct.slab_automove** %7, align 8
  %264 = getelementptr inbounds %struct.slab_automove, %struct.slab_automove* %263, i32 0, i32 4
  %265 = getelementptr inbounds [64 x %struct.item_stats_automove], [64 x %struct.item_stats_automove]* %264, i64 0, i64 0
  %266 = bitcast %struct.item_stats_automove* %265 to i8*
  %267 = load %struct.slab_automove*, %struct.slab_automove** %7, align 8
  %268 = getelementptr inbounds %struct.slab_automove, %struct.slab_automove* %267, i32 0, i32 5
  %269 = getelementptr inbounds [64 x %struct.item_stats_automove], [64 x %struct.item_stats_automove]* %268, i64 0, i64 0
  %270 = bitcast %struct.item_stats_automove* %269 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %266, i8* align 8 %270, i64 1536, i1 false)
  %271 = load %struct.slab_automove*, %struct.slab_automove** %7, align 8
  %272 = getelementptr inbounds %struct.slab_automove, %struct.slab_automove* %271, i32 0, i32 6
  %273 = getelementptr inbounds [64 x %struct.slab_stats_automove], [64 x %struct.slab_stats_automove]* %272, i64 0, i64 0
  %274 = bitcast %struct.slab_stats_automove* %273 to i8*
  %275 = load %struct.slab_automove*, %struct.slab_automove** %7, align 8
  %276 = getelementptr inbounds %struct.slab_automove, %struct.slab_automove* %275, i32 0, i32 7
  %277 = getelementptr inbounds [64 x %struct.slab_stats_automove], [64 x %struct.slab_stats_automove]* %276, i64 0, i64 0
  %278 = bitcast %struct.slab_stats_automove* %277 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %274, i8* align 8 %278, i64 1536, i1 false)
  %279 = load i32, i32* %12, align 4
  %280 = icmp ne i32 %279, -1
  br i1 %280, label %281, label %311

281:                                              ; preds = %262
  %282 = load i32, i32* %10, align 4
  %283 = icmp ne i32 %282, -1
  br i1 %283, label %284, label %311

284:                                              ; preds = %281
  %285 = load %struct.slab_automove*, %struct.slab_automove** %7, align 8
  %286 = getelementptr inbounds %struct.slab_automove, %struct.slab_automove* %285, i32 0, i32 2
  %287 = load i32, i32* %286, align 4
  %288 = load %struct.slab_automove*, %struct.slab_automove** %7, align 8
  %289 = getelementptr inbounds %struct.slab_automove, %struct.slab_automove* %288, i32 0, i32 1
  %290 = load i32, i32* %289, align 8
  %291 = icmp ugt i32 %287, %290
  br i1 %291, label %292, label %311

292:                                              ; preds = %284
  %293 = load i64, i64* %13, align 8
  %294 = uitofp i64 %293 to double
  %295 = load i64, i64* %11, align 8
  %296 = uitofp i64 %295 to double
  %297 = load %struct.slab_automove*, %struct.slab_automove** %7, align 8
  %298 = getelementptr inbounds %struct.slab_automove, %struct.slab_automove* %297, i32 0, i32 3
  %299 = load double, double* %298, align 8
  %300 = fmul double %296, %299
  %301 = fcmp olt double %294, %300
  br i1 %301, label %302, label %310

302:                                              ; preds = %292
  %303 = load i8, i8* %14, align 1
  %304 = trunc i8 %303 to i1
  br i1 %304, label %305, label %310

305:                                              ; preds = %302
  %306 = load i32, i32* %10, align 4
  %307 = load i32*, i32** %5, align 8
  store i32 %306, i32* %307, align 4
  %308 = load i32, i32* %12, align 4
  %309 = load i32*, i32** %6, align 8
  store i32 %308, i32* %309, align 4
  br label %310

310:                                              ; preds = %305, %302, %292
  br label %311

311:                                              ; preds = %310, %284, %281, %262
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @window_sum(%struct.window_data* %0, %struct.window_data* %1, i32 %2) #0 {
  %4 = alloca %struct.window_data*, align 8
  %5 = alloca %struct.window_data*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.window_data*, align 8
  store %struct.window_data* %0, %struct.window_data** %4, align 8
  store %struct.window_data* %1, %struct.window_data** %5, align 8
  store i32 %2, i32* %6, align 4
  store i32 0, i32* %7, align 4
  br label %9

9:                                                ; preds = %46, %3
  %10 = load i32, i32* %7, align 4
  %11 = load i32, i32* %6, align 4
  %12 = icmp ult i32 %10, %11
  br i1 %12, label %13, label %49

13:                                               ; preds = %9
  %14 = load %struct.window_data*, %struct.window_data** %4, align 8
  %15 = load i32, i32* %7, align 4
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds %struct.window_data, %struct.window_data* %14, i64 %16
  store %struct.window_data* %17, %struct.window_data** %8, align 8
  %18 = load %struct.window_data*, %struct.window_data** %8, align 8
  %19 = getelementptr inbounds %struct.window_data, %struct.window_data* %18, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = load %struct.window_data*, %struct.window_data** %5, align 8
  %22 = getelementptr inbounds %struct.window_data, %struct.window_data* %21, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, %20
  store i64 %24, i64* %22, align 8
  %25 = load %struct.window_data*, %struct.window_data** %8, align 8
  %26 = getelementptr inbounds %struct.window_data, %struct.window_data* %25, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = load %struct.window_data*, %struct.window_data** %5, align 8
  %29 = getelementptr inbounds %struct.window_data, %struct.window_data* %28, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, %27
  store i64 %31, i64* %29, align 8
  %32 = load %struct.window_data*, %struct.window_data** %8, align 8
  %33 = getelementptr inbounds %struct.window_data, %struct.window_data* %32, i32 0, i32 2
  %34 = load float, float* %33, align 8
  %35 = load %struct.window_data*, %struct.window_data** %5, align 8
  %36 = getelementptr inbounds %struct.window_data, %struct.window_data* %35, i32 0, i32 2
  %37 = load float, float* %36, align 8
  %38 = fadd float %37, %34
  store float %38, float* %36, align 8
  %39 = load %struct.window_data*, %struct.window_data** %8, align 8
  %40 = getelementptr inbounds %struct.window_data, %struct.window_data* %39, i32 0, i32 3
  %41 = load i64, i64* %40, align 8
  %42 = load %struct.window_data*, %struct.window_data** %5, align 8
  %43 = getelementptr inbounds %struct.window_data, %struct.window_data* %42, i32 0, i32 3
  %44 = load i64, i64* %43, align 8
  %45 = add i64 %44, %41
  store i64 %45, i64* %43, align 8
  br label %46

46:                                               ; preds = %13
  %47 = load i32, i32* %7, align 4
  %48 = add nsw i32 %47, 1
  store i32 %48, i32* %7, align 4
  br label %9, !llvm.loop !147

49:                                               ; preds = %9
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @authfile_load(i8* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  %4 = alloca %struct.stat, align 8
  %5 = alloca i8*, align 8
  %6 = alloca [8 x %struct.auth_entry], align 16
  %7 = alloca %struct._IO_FILE*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca %struct.auth_entry*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  store i8* null, i8** %5, align 8
  %14 = load i8*, i8** %3, align 8
  %15 = call %struct._IO_FILE* @fopen(i8* %14, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.928, i64 0, i64 0))
  store %struct._IO_FILE* %15, %struct._IO_FILE** %7, align 8
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %17 = icmp eq %struct._IO_FILE* %16, null
  br i1 %17, label %18, label %19

18:                                               ; preds = %1
  store i32 3, i32* %2, align 4
  br label %180

19:                                               ; preds = %1
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %21 = call i32 @fileno(%struct._IO_FILE* %20) #14
  %22 = call i32 @fstat(i32 %21, %struct.stat* %4) #14
  %23 = icmp ne i32 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %26 = call i32 @fclose(%struct._IO_FILE* %25)
  store i32 2, i32* %2, align 4
  br label %180

27:                                               ; preds = %19
  br label %28

28:                                               ; preds = %27
  %29 = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 8
  %30 = load i64, i64* %29, align 8
  %31 = add nsw i64 %30, 1
  %32 = call noalias i8* @calloc(i64 1, i64 %31) #14
  store i8* %32, i8** %5, align 8
  %33 = load i8*, i8** %5, align 8
  store i8* %33, i8** %8, align 8
  %34 = load i8*, i8** %5, align 8
  %35 = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 8
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds i8, i8* %34, i64 %36
  store i8* %37, i8** %9, align 8
  %38 = getelementptr inbounds [8 x %struct.auth_entry], [8 x %struct.auth_entry]* %6, i64 0, i64 0
  store %struct.auth_entry* %38, %struct.auth_entry** %10, align 8
  store i32 0, i32* %11, align 4
  br label %39

39:                                               ; preds = %161, %28
  %40 = load i8*, i8** %8, align 8
  %41 = load i8*, i8** %9, align 8
  %42 = load i8*, i8** %8, align 8
  %43 = ptrtoint i8* %41 to i64
  %44 = ptrtoint i8* %42 to i64
  %45 = sub i64 %43, %44
  %46 = icmp slt i64 %45, 256
  br i1 %46, label %47, label %53

47:                                               ; preds = %39
  %48 = load i8*, i8** %9, align 8
  %49 = load i8*, i8** %8, align 8
  %50 = ptrtoint i8* %48 to i64
  %51 = ptrtoint i8* %49 to i64
  %52 = sub i64 %50, %51
  br label %54

53:                                               ; preds = %39
  br label %54

54:                                               ; preds = %53, %47
  %55 = phi i64 [ %52, %47 ], [ 256, %53 ]
  %56 = trunc i64 %55 to i32
  %57 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %58 = call i8* @fgets(i8* %40, i32 %56, %struct._IO_FILE* %57)
  %59 = icmp ne i8* %58, null
  br i1 %59, label %60, label %168

60:                                               ; preds = %54
  store i32 0, i32* %13, align 4
  store i32 0, i32* %12, align 4
  br label %61

61:                                               ; preds = %137, %60
  %62 = load i32, i32* %12, align 4
  %63 = icmp slt i32 %62, 256
  br i1 %63, label %64, label %140

64:                                               ; preds = %61
  %65 = load i32, i32* %13, align 4
  %66 = icmp ne i32 %65, 0
  br i1 %66, label %101, label %67

67:                                               ; preds = %64
  %68 = load i8*, i8** %8, align 8
  %69 = load i32, i32* %12, align 4
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds i8, i8* %68, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %76

75:                                               ; preds = %67
  br label %140

76:                                               ; preds = %67
  %77 = load i8*, i8** %8, align 8
  %78 = load i32, i32* %12, align 4
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds i8, i8* %77, i64 %79
  %81 = load i8, i8* %80, align 1
  %82 = sext i8 %81 to i32
  %83 = icmp eq i32 %82, 58
  br i1 %83, label %84, label %99

84:                                               ; preds = %76
  %85 = load i8*, i8** %8, align 8
  %86 = load %struct.auth_entry*, %struct.auth_entry** %10, align 8
  %87 = getelementptr inbounds %struct.auth_entry, %struct.auth_entry* %86, i32 0, i32 0
  store i8* %85, i8** %87, align 8
  %88 = load i32, i32* %12, align 4
  %89 = sext i32 %88 to i64
  %90 = load %struct.auth_entry*, %struct.auth_entry** %10, align 8
  %91 = getelementptr inbounds %struct.auth_entry, %struct.auth_entry* %90, i32 0, i32 1
  store i64 %89, i64* %91, align 8
  %92 = load i8*, i8** %8, align 8
  %93 = load i32, i32* %12, align 4
  %94 = add nsw i32 %93, 1
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds i8, i8* %92, i64 %95
  %97 = load %struct.auth_entry*, %struct.auth_entry** %10, align 8
  %98 = getelementptr inbounds %struct.auth_entry, %struct.auth_entry* %97, i32 0, i32 2
  store i8* %96, i8** %98, align 8
  store i32 1, i32* %13, align 4
  br label %99

99:                                               ; preds = %84, %76
  br label %100

100:                                              ; preds = %99
  br label %136

101:                                              ; preds = %64
  %102 = load i8*, i8** %8, align 8
  %103 = load i32, i32* %12, align 4
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds i8, i8* %102, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %107, 10
  br i1 %108, label %125, label %109

109:                                              ; preds = %101
  %110 = load i8*, i8** %8, align 8
  %111 = load i32, i32* %12, align 4
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds i8, i8* %110, i64 %112
  %114 = load i8, i8* %113, align 1
  %115 = sext i8 %114 to i32
  %116 = icmp eq i32 %115, 13
  br i1 %116, label %125, label %117

117:                                              ; preds = %109
  %118 = load i8*, i8** %8, align 8
  %119 = load i32, i32* %12, align 4
  %120 = sext i32 %119 to i64
  %121 = getelementptr inbounds i8, i8* %118, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = sext i8 %122 to i32
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %135

125:                                              ; preds = %117, %109, %101
  %126 = load i32, i32* %12, align 4
  %127 = sext i32 %126 to i64
  %128 = load %struct.auth_entry*, %struct.auth_entry** %10, align 8
  %129 = getelementptr inbounds %struct.auth_entry, %struct.auth_entry* %128, i32 0, i32 1
  %130 = load i64, i64* %129, align 8
  %131 = add i64 %130, 1
  %132 = sub i64 %127, %131
  %133 = load %struct.auth_entry*, %struct.auth_entry** %10, align 8
  %134 = getelementptr inbounds %struct.auth_entry, %struct.auth_entry* %133, i32 0, i32 3
  store i64 %132, i64* %134, align 8
  br label %140

135:                                              ; preds = %117
  br label %136

136:                                              ; preds = %135, %100
  br label %137

137:                                              ; preds = %136
  %138 = load i32, i32* %12, align 4
  %139 = add nsw i32 %138, 1
  store i32 %139, i32* %12, align 4
  br label %61, !llvm.loop !148

140:                                              ; preds = %125, %75, %61
  %141 = load i32, i32* %13, align 4
  %142 = icmp ne i32 %141, 0
  br i1 %142, label %147, label %143

143:                                              ; preds = %140
  %144 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %145 = call i32 @fclose(%struct._IO_FILE* %144)
  %146 = load i8*, i8** %5, align 8
  call void @free(i8* %146) #14
  store i32 4, i32* %2, align 4
  br label %180

147:                                              ; preds = %140
  %148 = load i32, i32* %11, align 4
  %149 = add nsw i32 %148, 1
  store i32 %149, i32* %11, align 4
  %150 = icmp eq i32 %149, 8
  br i1 %150, label %151, label %152

151:                                              ; preds = %147
  br label %168

152:                                              ; preds = %147
  %153 = load i8*, i8** %8, align 8
  %154 = load i32, i32* %12, align 4
  %155 = sext i32 %154 to i64
  %156 = getelementptr inbounds i8, i8* %153, i64 %155
  %157 = load i8, i8* %156, align 1
  %158 = sext i8 %157 to i32
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %161

160:                                              ; preds = %152
  br label %168

161:                                              ; preds = %152
  %162 = load i32, i32* %12, align 4
  %163 = load i8*, i8** %8, align 8
  %164 = sext i32 %162 to i64
  %165 = getelementptr inbounds i8, i8* %163, i64 %164
  store i8* %165, i8** %8, align 8
  %166 = load %struct.auth_entry*, %struct.auth_entry** %10, align 8
  %167 = getelementptr inbounds %struct.auth_entry, %struct.auth_entry* %166, i32 1
  store %struct.auth_entry* %167, %struct.auth_entry** %10, align 8
  br label %39, !llvm.loop !149

168:                                              ; preds = %160, %151, %54
  %169 = load i8*, i8** @main_auth_data, align 8
  %170 = icmp ne i8* %169, null
  br i1 %170, label %171, label %173

171:                                              ; preds = %168
  %172 = load i8*, i8** @main_auth_data, align 8
  call void @free(i8* %172) #14
  br label %173

173:                                              ; preds = %171, %168
  %174 = load i32, i32* %11, align 4
  store i32 %174, i32* @entry_cnt, align 4
  %175 = load i8*, i8** %5, align 8
  store i8* %175, i8** @main_auth_data, align 8
  %176 = getelementptr inbounds [8 x %struct.auth_entry], [8 x %struct.auth_entry]* %6, i64 0, i64 0
  %177 = bitcast %struct.auth_entry* %176 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([8 x %struct.auth_entry]* @main_auth_entries to i8*), i8* align 16 %177, i64 256, i1 false)
  %178 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %179 = call i32 @fclose(%struct._IO_FILE* %178)
  store i32 0, i32* %2, align 4
  br label %180

180:                                              ; preds = %173, %143, %24, %18
  %181 = load i32, i32* %2, align 4
  ret i32 %181
}

; Function Attrs: nounwind
declare dso_local i32 @fileno(%struct._IO_FILE*) #2

; Function Attrs: nounwind
declare dso_local i32 @fstat(i32, %struct.stat*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @authfile_check(i8* %0, i8* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca %struct.auth_entry*, align 8
  store i8* %0, i8** %4, align 8
  store i8* %1, i8** %5, align 8
  %10 = load i8*, i8** %4, align 8
  %11 = call i64 @strlen(i8* %10) #16
  store i64 %11, i64* %6, align 8
  %12 = load i8*, i8** %5, align 8
  %13 = call i64 @strlen(i8* %12) #16
  store i64 %13, i64* %7, align 8
  store i32 0, i32* %8, align 4
  br label %14

14:                                               ; preds = %53, %2
  %15 = load i32, i32* %8, align 4
  %16 = load i32, i32* @entry_cnt, align 4
  %17 = icmp slt i32 %15, %16
  br i1 %17, label %18, label %56

18:                                               ; preds = %14
  %19 = load i32, i32* %8, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds [8 x %struct.auth_entry], [8 x %struct.auth_entry]* @main_auth_entries, i64 0, i64 %20
  store %struct.auth_entry* %21, %struct.auth_entry** %9, align 8
  %22 = load i64, i64* %6, align 8
  %23 = load %struct.auth_entry*, %struct.auth_entry** %9, align 8
  %24 = getelementptr inbounds %struct.auth_entry, %struct.auth_entry* %23, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %22, %25
  br i1 %26, label %27, label %52

27:                                               ; preds = %18
  %28 = load i64, i64* %7, align 8
  %29 = load %struct.auth_entry*, %struct.auth_entry** %9, align 8
  %30 = getelementptr inbounds %struct.auth_entry, %struct.auth_entry* %29, i32 0, i32 3
  %31 = load i64, i64* %30, align 8
  %32 = icmp eq i64 %28, %31
  br i1 %32, label %33, label %52

33:                                               ; preds = %27
  %34 = load i8*, i8** %4, align 8
  %35 = load %struct.auth_entry*, %struct.auth_entry** %9, align 8
  %36 = getelementptr inbounds %struct.auth_entry, %struct.auth_entry* %35, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = load %struct.auth_entry*, %struct.auth_entry** %9, align 8
  %39 = getelementptr inbounds %struct.auth_entry, %struct.auth_entry* %38, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = call zeroext i1 @safe_memcmp(i8* %34, i8* %37, i64 %40)
  br i1 %41, label %42, label %52

42:                                               ; preds = %33
  %43 = load i8*, i8** %5, align 8
  %44 = load %struct.auth_entry*, %struct.auth_entry** %9, align 8
  %45 = getelementptr inbounds %struct.auth_entry, %struct.auth_entry* %44, i32 0, i32 2
  %46 = load i8*, i8** %45, align 8
  %47 = load %struct.auth_entry*, %struct.auth_entry** %9, align 8
  %48 = getelementptr inbounds %struct.auth_entry, %struct.auth_entry* %47, i32 0, i32 3
  %49 = load i64, i64* %48, align 8
  %50 = call zeroext i1 @safe_memcmp(i8* %43, i8* %46, i64 %49)
  br i1 %50, label %51, label %52

51:                                               ; preds = %42
  store i32 1, i32* %3, align 4
  br label %57

52:                                               ; preds = %42, %33, %27, %18
  br label %53

53:                                               ; preds = %52
  %54 = load i32, i32* %8, align 4
  %55 = add nsw i32 %54, 1
  store i32 %55, i32* %8, align 4
  br label %14, !llvm.loop !150

56:                                               ; preds = %14
  store i32 0, i32* %3, align 4
  br label %57

57:                                               ; preds = %56, %51
  %58 = load i32, i32* %3, align 4
  ret i32 %58
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @restart_register(i8* %0, i32 (i8*, i8*, i8*)* %1, i32 (i8*, i8*, i8*)* %2, i8* %3) #0 {
  %5 = alloca i8*, align 8
  %6 = alloca i32 (i8*, i8*, i8*)*, align 8
  %7 = alloca i32 (i8*, i8*, i8*)*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca %struct._restart_data_cb*, align 8
  %10 = alloca %struct._restart_data_cb*, align 8
  store i8* %0, i8** %5, align 8
  store i32 (i8*, i8*, i8*)* %1, i32 (i8*, i8*, i8*)** %6, align 8
  store i32 (i8*, i8*, i8*)* %2, i32 (i8*, i8*, i8*)** %7, align 8
  store i8* %3, i8** %8, align 8
  %11 = call noalias i8* @calloc(i64 1, i64 288) #14
  %12 = bitcast i8* %11 to %struct._restart_data_cb*
  store %struct._restart_data_cb* %12, %struct._restart_data_cb** %9, align 8
  %13 = load %struct._restart_data_cb*, %struct._restart_data_cb** %9, align 8
  %14 = icmp eq %struct._restart_data_cb* %13, null
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %17 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.931, i64 0, i64 0))
  call void @abort() #17
  unreachable

18:                                               ; preds = %4
  %19 = load %struct._restart_data_cb*, %struct._restart_data_cb** @cb_stack, align 8
  %20 = icmp eq %struct._restart_data_cb* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %18
  %22 = load %struct._restart_data_cb*, %struct._restart_data_cb** %9, align 8
  store %struct._restart_data_cb* %22, %struct._restart_data_cb** @cb_stack, align 8
  br label %38

23:                                               ; preds = %18
  %24 = load %struct._restart_data_cb*, %struct._restart_data_cb** @cb_stack, align 8
  store %struct._restart_data_cb* %24, %struct._restart_data_cb** %10, align 8
  br label %25

25:                                               ; preds = %30, %23
  %26 = load %struct._restart_data_cb*, %struct._restart_data_cb** %10, align 8
  %27 = getelementptr inbounds %struct._restart_data_cb, %struct._restart_data_cb* %26, i32 0, i32 1
  %28 = load %struct._restart_data_cb*, %struct._restart_data_cb** %27, align 8
  %29 = icmp ne %struct._restart_data_cb* %28, null
  br i1 %29, label %30, label %34

30:                                               ; preds = %25
  %31 = load %struct._restart_data_cb*, %struct._restart_data_cb** %10, align 8
  %32 = getelementptr inbounds %struct._restart_data_cb, %struct._restart_data_cb* %31, i32 0, i32 1
  %33 = load %struct._restart_data_cb*, %struct._restart_data_cb** %32, align 8
  store %struct._restart_data_cb* %33, %struct._restart_data_cb** %10, align 8
  br label %25, !llvm.loop !151

34:                                               ; preds = %25
  %35 = load %struct._restart_data_cb*, %struct._restart_data_cb** %9, align 8
  %36 = load %struct._restart_data_cb*, %struct._restart_data_cb** %10, align 8
  %37 = getelementptr inbounds %struct._restart_data_cb, %struct._restart_data_cb* %36, i32 0, i32 1
  store %struct._restart_data_cb* %35, %struct._restart_data_cb** %37, align 8
  br label %38

38:                                               ; preds = %34, %21
  %39 = load %struct._restart_data_cb*, %struct._restart_data_cb** %9, align 8
  %40 = getelementptr inbounds %struct._restart_data_cb, %struct._restart_data_cb* %39, i32 0, i32 4
  %41 = getelementptr inbounds [255 x i8], [255 x i8]* %40, i64 0, i64 0
  %42 = load i8*, i8** %5, align 8
  %43 = call zeroext i1 @safe_strcpy(i8* %41, i8* %42, i64 255)
  %44 = load i8*, i8** %8, align 8
  %45 = load %struct._restart_data_cb*, %struct._restart_data_cb** %9, align 8
  %46 = getelementptr inbounds %struct._restart_data_cb, %struct._restart_data_cb* %45, i32 0, i32 0
  store i8* %44, i8** %46, align 8
  %47 = load i32 (i8*, i8*, i8*)*, i32 (i8*, i8*, i8*)** %6, align 8
  %48 = load %struct._restart_data_cb*, %struct._restart_data_cb** %9, align 8
  %49 = getelementptr inbounds %struct._restart_data_cb, %struct._restart_data_cb* %48, i32 0, i32 2
  store i32 (i8*, i8*, i8*)* %47, i32 (i8*, i8*, i8*)** %49, align 8
  %50 = load i32 (i8*, i8*, i8*)*, i32 (i8*, i8*, i8*)** %7, align 8
  %51 = load %struct._restart_data_cb*, %struct._restart_data_cb** %9, align 8
  %52 = getelementptr inbounds %struct._restart_data_cb, %struct._restart_data_cb* %51, i32 0, i32 3
  store i32 (i8*, i8*, i8*)* %50, i32 (i8*, i8*, i8*)** %52, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @restart_get_kv(i8* %0, i8** %1, i8** %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i8**, align 8
  %7 = alloca i8**, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca %struct._restart_data_cb*, align 8
  %11 = alloca %struct.restart_cb_ctx*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  store i8* %0, i8** %5, align 8
  store i8** %1, i8*** %6, align 8
  store i8** %2, i8*** %7, align 8
  store i8* null, i8** %8, align 8
  store i64 0, i64* %9, align 8
  store %struct._restart_data_cb* null, %struct._restart_data_cb** %10, align 8
  %14 = load i8*, i8** %5, align 8
  %15 = bitcast i8* %14 to %struct.restart_cb_ctx*
  store %struct.restart_cb_ctx* %15, %struct.restart_cb_ctx** %11, align 8
  %16 = load %struct.restart_cb_ctx*, %struct.restart_cb_ctx** %11, align 8
  %17 = getelementptr inbounds %struct.restart_cb_ctx, %struct.restart_cb_ctx* %16, i32 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = icmp ne i8* %18, null
  br i1 %19, label %20, label %26

20:                                               ; preds = %3
  %21 = load %struct.restart_cb_ctx*, %struct.restart_cb_ctx** %11, align 8
  %22 = getelementptr inbounds %struct.restart_cb_ctx, %struct.restart_cb_ctx* %21, i32 0, i32 2
  %23 = load i8*, i8** %22, align 8
  call void @free(i8* %23) #14
  %24 = load %struct.restart_cb_ctx*, %struct.restart_cb_ctx** %11, align 8
  %25 = getelementptr inbounds %struct.restart_cb_ctx, %struct.restart_cb_ctx* %24, i32 0, i32 2
  store i8* null, i8** %25, align 8
  br label %26

26:                                               ; preds = %20, %3
  %27 = load %struct.restart_cb_ctx*, %struct.restart_cb_ctx** %11, align 8
  %28 = getelementptr inbounds %struct.restart_cb_ctx, %struct.restart_cb_ctx* %27, i32 0, i32 0
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** %28, align 8
  %30 = call i64 @getline(i8** %8, i64* %9, %struct._IO_FILE* %29)
  %31 = icmp ne i64 %30, -1
  br i1 %31, label %32, label %131

32:                                               ; preds = %26
  %33 = load i8*, i8** %8, align 8
  store i8* %33, i8** %12, align 8
  br label %34

34:                                               ; preds = %39, %32
  %35 = load i8*, i8** %12, align 8
  %36 = load i8, i8* %35, align 1
  %37 = sext i8 %36 to i32
  %38 = icmp ne i32 %37, 10
  br i1 %38, label %39, label %42

39:                                               ; preds = %34
  %40 = load i8*, i8** %12, align 8
  %41 = getelementptr inbounds i8, i8* %40, i32 1
  store i8* %41, i8** %12, align 8
  br label %34, !llvm.loop !152

42:                                               ; preds = %34
  %43 = load i8*, i8** %12, align 8
  store i8 0, i8* %43, align 1
  %44 = load i8*, i8** %8, align 8
  %45 = getelementptr inbounds i8, i8* %44, i64 0
  %46 = load i8, i8* %45, align 1
  %47 = sext i8 %46 to i32
  %48 = icmp eq i32 %47, 84
  br i1 %48, label %49, label %79

49:                                               ; preds = %42
  %50 = load %struct._restart_data_cb*, %struct._restart_data_cb** @cb_stack, align 8
  store %struct._restart_data_cb* %50, %struct._restart_data_cb** %10, align 8
  br label %51

51:                                               ; preds = %63, %49
  %52 = load %struct._restart_data_cb*, %struct._restart_data_cb** %10, align 8
  %53 = icmp ne %struct._restart_data_cb* %52, null
  br i1 %53, label %54, label %67

54:                                               ; preds = %51
  %55 = load %struct._restart_data_cb*, %struct._restart_data_cb** %10, align 8
  %56 = getelementptr inbounds %struct._restart_data_cb, %struct._restart_data_cb* %55, i32 0, i32 4
  %57 = getelementptr inbounds [255 x i8], [255 x i8]* %56, i64 0, i64 0
  %58 = load i8*, i8** %8, align 8
  %59 = getelementptr inbounds i8, i8* %58, i64 1
  %60 = call i32 @strcmp(i8* %57, i8* %59) #16
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %54
  br label %67

63:                                               ; preds = %54
  %64 = load %struct._restart_data_cb*, %struct._restart_data_cb** %10, align 8
  %65 = getelementptr inbounds %struct._restart_data_cb, %struct._restart_data_cb* %64, i32 0, i32 1
  %66 = load %struct._restart_data_cb*, %struct._restart_data_cb** %65, align 8
  store %struct._restart_data_cb* %66, %struct._restart_data_cb** %10, align 8
  br label %51, !llvm.loop !153

67:                                               ; preds = %62, %51
  %68 = load %struct._restart_data_cb*, %struct._restart_data_cb** %10, align 8
  %69 = icmp eq %struct._restart_data_cb* %68, null
  br i1 %69, label %70, label %75

70:                                               ; preds = %67
  %71 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %72 = load i8*, i8** %8, align 8
  %73 = getelementptr inbounds i8, i8* %72, i64 1
  %74 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %71, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.1.934, i64 0, i64 0), i8* %73)
  store i32 1, i32* %4, align 4
  br label %135

75:                                               ; preds = %67
  %76 = load %struct._restart_data_cb*, %struct._restart_data_cb** %10, align 8
  %77 = load %struct.restart_cb_ctx*, %struct.restart_cb_ctx** %11, align 8
  %78 = getelementptr inbounds %struct.restart_cb_ctx, %struct.restart_cb_ctx* %77, i32 0, i32 1
  store %struct._restart_data_cb* %76, %struct._restart_data_cb** %78, align 8
  br label %130

79:                                               ; preds = %42
  %80 = load i8*, i8** %8, align 8
  %81 = getelementptr inbounds i8, i8* %80, i64 0
  %82 = load i8, i8* %81, align 1
  %83 = sext i8 %82 to i32
  %84 = icmp eq i32 %83, 75
  br i1 %84, label %85, label %125

85:                                               ; preds = %79
  %86 = load i8*, i8** %8, align 8
  %87 = getelementptr inbounds i8, i8* %86, i64 1
  store i8* %87, i8** %13, align 8
  %88 = load i8**, i8*** %6, align 8
  %89 = icmp ne i8** %88, null
  br i1 %89, label %90, label %93

90:                                               ; preds = %85
  %91 = load i8*, i8** %13, align 8
  %92 = load i8**, i8*** %6, align 8
  store i8* %91, i8** %92, align 8
  br label %93

93:                                               ; preds = %90, %85
  br label %94

94:                                               ; preds = %109, %93
  %95 = load i8*, i8** %13, align 8
  %96 = load i8, i8* %95, align 1
  %97 = sext i8 %96 to i32
  %98 = icmp ne i32 %97, 32
  br i1 %98, label %99, label %107

99:                                               ; preds = %94
  %100 = load i8*, i8** %13, align 8
  %101 = load i8*, i8** %8, align 8
  %102 = ptrtoint i8* %100 to i64
  %103 = ptrtoint i8* %101 to i64
  %104 = sub i64 %102, %103
  %105 = load i64, i64* %9, align 8
  %106 = icmp ult i64 %104, %105
  br label %107

107:                                              ; preds = %99, %94
  %108 = phi i1 [ false, %94 ], [ %106, %99 ]
  br i1 %108, label %109, label %112

109:                                              ; preds = %107
  %110 = load i8*, i8** %13, align 8
  %111 = getelementptr inbounds i8, i8* %110, i32 1
  store i8* %111, i8** %13, align 8
  br label %94, !llvm.loop !154

112:                                              ; preds = %107
  %113 = load i8*, i8** %13, align 8
  store i8 0, i8* %113, align 1
  %114 = load i8*, i8** %13, align 8
  %115 = getelementptr inbounds i8, i8* %114, i32 1
  store i8* %115, i8** %13, align 8
  %116 = load i8**, i8*** %7, align 8
  %117 = icmp ne i8** %116, null
  br i1 %117, label %118, label %121

118:                                              ; preds = %112
  %119 = load i8*, i8** %13, align 8
  %120 = load i8**, i8*** %7, align 8
  store i8* %119, i8** %120, align 8
  br label %121

121:                                              ; preds = %118, %112
  %122 = load i8*, i8** %8, align 8
  %123 = load %struct.restart_cb_ctx*, %struct.restart_cb_ctx** %11, align 8
  %124 = getelementptr inbounds %struct.restart_cb_ctx, %struct.restart_cb_ctx* %123, i32 0, i32 2
  store i8* %122, i8** %124, align 8
  store i32 0, i32* %4, align 4
  br label %135

125:                                              ; preds = %79
  %126 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %127 = load i8*, i8** %8, align 8
  %128 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %126, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.935, i64 0, i64 0), i8* %127)
  %129 = load i8*, i8** %8, align 8
  call void @free(i8* %129) #14
  store i32 2, i32* %4, align 4
  br label %135

130:                                              ; preds = %75
  br label %134

131:                                              ; preds = %26
  %132 = load %struct.restart_cb_ctx*, %struct.restart_cb_ctx** %11, align 8
  %133 = getelementptr inbounds %struct.restart_cb_ctx, %struct.restart_cb_ctx* %132, i32 0, i32 3
  store i8 1, i8* %133, align 8
  br label %134

134:                                              ; preds = %131, %130
  store i32 3, i32* %4, align 4
  br label %135

135:                                              ; preds = %134, %125, %121, %70
  %136 = load i32, i32* %4, align 4
  ret i32 %136
}

declare dso_local i64 @getline(i8**, i64*, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @restart_set_kv(i8* %0, i8* %1, i8* %2, ...) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca [1 x %struct.__va_list_tag], align 16
  %8 = alloca %struct.restart_cb_ctx*, align 8
  %9 = alloca [4096 x i8], align 16
  %10 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  store i8* %1, i8** %5, align 8
  store i8* %2, i8** %6, align 8
  %11 = load i8*, i8** %4, align 8
  %12 = bitcast i8* %11 to %struct.restart_cb_ctx*
  store %struct.restart_cb_ctx* %12, %struct.restart_cb_ctx** %8, align 8
  %13 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %7, i64 0, i64 0
  %14 = bitcast %struct.__va_list_tag* %13 to i8*
  call void @llvm.va_start(i8* %14)
  %15 = getelementptr inbounds [4096 x i8], [4096 x i8]* %9, i64 0, i64 0
  %16 = load i8*, i8** %6, align 8
  %17 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %7, i64 0, i64 0
  %18 = call i32 @vsnprintf(i8* %15, i64 4095, i8* %16, %struct.__va_list_tag* %17) #14
  store i32 %18, i32* %10, align 4
  %19 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %7, i64 0, i64 0
  %20 = bitcast %struct.__va_list_tag* %19 to i8*
  call void @llvm.va_end(i8* %20)
  %21 = load i32, i32* %10, align 4
  %22 = icmp sge i32 %21, 4096
  br i1 %22, label %23, label %28

23:                                               ; preds = %3
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %25 = load i8*, i8** %5, align 8
  %26 = getelementptr inbounds [4096 x i8], [4096 x i8]* %9, i64 0, i64 0
  %27 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %24, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.3.938, i64 0, i64 0), i8* %25, i8* %26)
  call void @abort() #17
  unreachable

28:                                               ; preds = %3
  %29 = load %struct.restart_cb_ctx*, %struct.restart_cb_ctx** %8, align 8
  %30 = getelementptr inbounds %struct.restart_cb_ctx, %struct.restart_cb_ctx* %29, i32 0, i32 0
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** %30, align 8
  %32 = load i8*, i8** %5, align 8
  %33 = getelementptr inbounds [4096 x i8], [4096 x i8]* %9, i64 0, i64 0
  %34 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %31, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4.939, i64 0, i64 0), i8* %32, i8* %33)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @restart_mmap_open(i64 %0, i8* %1, i8** %2) #0 {
  %4 = alloca i64, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8**, align 8
  %7 = alloca i8, align 1
  %8 = alloca i64, align 8
  store i64 %0, i64* %4, align 8
  store i8* %1, i8** %5, align 8
  store i8** %2, i8*** %6, align 8
  store i8 1, i8* %7, align 1
  %9 = call i64 @_find_pagesize()
  store i64 %9, i64* %8, align 8
  %10 = load i8*, i8** %5, align 8
  %11 = call noalias i8* @strdup(i8* %10) #14
  store i8* %11, i8** @memory_file, align 8
  %12 = load i8*, i8** %5, align 8
  %13 = call i32 (i8*, i32, ...) @open(i8* %12, i32 66, i32 448)
  store i32 %13, i32* @mmap_fd, align 4
  %14 = load i32, i32* @mmap_fd, align 4
  %15 = icmp eq i32 %14, -1
  br i1 %15, label %16, label %17

16:                                               ; preds = %3
  call void @perror(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5.942, i64 0, i64 0))
  call void @abort() #17
  unreachable

17:                                               ; preds = %3
  %18 = load i32, i32* @mmap_fd, align 4
  %19 = load i64, i64* %4, align 8
  %20 = call i32 @ftruncate(i32 %18, i64 %19) #14
  %21 = icmp ne i32 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %17
  call void @perror(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.6.943, i64 0, i64 0))
  call void @abort() #17
  unreachable

23:                                               ; preds = %17
  %24 = load i64, i64* %4, align 8
  %25 = load i64, i64* %8, align 8
  %26 = urem i64 %24, %25
  %27 = icmp ne i64 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %23
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %30 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %29, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.7.944, i64 0, i64 0))
  call void @abort() #17
  unreachable

31:                                               ; preds = %23
  %32 = load i64, i64* %4, align 8
  %33 = load i32, i32* @mmap_fd, align 4
  %34 = call i8* @mmap(i8* null, i64 %32, i32 3, i32 1, i32 %33, i64 0) #14
  store i8* %34, i8** @mmap_base, align 8
  %35 = load i8*, i8** @mmap_base, align 8
  %36 = icmp eq i8* %35, inttoptr (i64 -1 to i8*)
  br i1 %36, label %37, label %38

37:                                               ; preds = %31
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.8.945, i64 0, i64 0))
  call void @abort() #17
  unreachable

38:                                               ; preds = %31
  %39 = load i64, i64* %4, align 8
  store i64 %39, i64* @slabmem_limit, align 8
  %40 = load i8*, i8** %5, align 8
  %41 = call i32 @restart_check(i8* %40)
  %42 = icmp ne i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %38
  store i8 0, i8* %7, align 1
  br label %44

44:                                               ; preds = %43, %38
  %45 = load i8*, i8** @mmap_base, align 8
  %46 = load i8**, i8*** %6, align 8
  store i8* %45, i8** %46, align 8
  %47 = load i8, i8* %7, align 1
  %48 = trunc i8 %47 to i1
  ret i1 %48
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @_find_pagesize() #0 {
  %1 = call i64 @sysconf(i32 30) #14
  ret i64 %1
}

; Function Attrs: nounwind
declare dso_local i32 @ftruncate(i32, i64) #2

; Function Attrs: nounwind
declare dso_local i8* @mmap(i8*, i64, i32, i32, i32, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @restart_check(i8* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca %struct._IO_FILE*, align 8
  %8 = alloca %struct.restart_cb_ctx, align 8
  %9 = alloca i8, align 1
  %10 = alloca %struct._restart_data_cb*, align 8
  store i8* %0, i8** %3, align 8
  %11 = load i8*, i8** %3, align 8
  %12 = call i64 @strlen(i8* %11) #16
  store i64 %12, i64* %4, align 8
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15.946, i64 0, i64 0), i8** %5, align 8
  %13 = load i64, i64* %4, align 8
  %14 = load i8*, i8** %5, align 8
  %15 = call i64 @strlen(i8* %14) #16
  %16 = add i64 %13, %15
  %17 = add i64 %16, 1
  %18 = call noalias i8* @calloc(i64 1, i64 %17) #14
  store i8* %18, i8** %6, align 8
  %19 = load i8*, i8** %6, align 8
  %20 = icmp eq i8* %19, null
  br i1 %20, label %21, label %24

21:                                               ; preds = %1
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %23 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %22, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.16.947, i64 0, i64 0))
  call void @abort() #17
  unreachable

24:                                               ; preds = %1
  %25 = load i8*, i8** %6, align 8
  %26 = load i8*, i8** %3, align 8
  %27 = load i64, i64* %4, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %26, i64 %27, i1 false)
  %28 = load i8*, i8** %6, align 8
  %29 = load i64, i64* %4, align 8
  %30 = getelementptr inbounds i8, i8* %28, i64 %29
  %31 = load i8*, i8** %5, align 8
  %32 = load i8*, i8** %5, align 8
  %33 = call i64 @strlen(i8* %32) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %30, i8* align 1 %31, i64 %33, i1 false)
  %34 = load i8*, i8** %6, align 8
  %35 = call %struct._IO_FILE* @fopen(i8* %34, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17.948, i64 0, i64 0))
  store %struct._IO_FILE* %35, %struct._IO_FILE** %7, align 8
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %37 = icmp eq %struct._IO_FILE* %36, null
  br i1 %37, label %38, label %42

38:                                               ; preds = %24
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %40 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %39, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.18.949, i64 0, i64 0))
  %41 = load i8*, i8** %6, align 8
  call void @free(i8* %41) #14
  store i32 -1, i32* %2, align 4
  br label %103

42:                                               ; preds = %24
  %43 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %44 = getelementptr inbounds %struct.restart_cb_ctx, %struct.restart_cb_ctx* %8, i32 0, i32 0
  store %struct._IO_FILE* %43, %struct._IO_FILE** %44, align 8
  %45 = getelementptr inbounds %struct.restart_cb_ctx, %struct.restart_cb_ctx* %8, i32 0, i32 1
  store %struct._restart_data_cb* null, %struct._restart_data_cb** %45, align 8
  %46 = getelementptr inbounds %struct.restart_cb_ctx, %struct.restart_cb_ctx* %8, i32 0, i32 2
  store i8* null, i8** %46, align 8
  %47 = getelementptr inbounds %struct.restart_cb_ctx, %struct.restart_cb_ctx* %8, i32 0, i32 3
  store i8 0, i8* %47, align 8
  %48 = bitcast %struct.restart_cb_ctx* %8 to i8*
  %49 = call i32 @restart_get_kv(i8* %48, i8** null, i8** null)
  %50 = icmp ne i32 %49, 3
  br i1 %50, label %51, label %54

51:                                               ; preds = %42
  %52 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %53 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %52, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.19.950, i64 0, i64 0))
  call void @abort() #17
  unreachable

54:                                               ; preds = %42
  %55 = getelementptr inbounds %struct.restart_cb_ctx, %struct.restart_cb_ctx* %8, i32 0, i32 1
  %56 = load %struct._restart_data_cb*, %struct._restart_data_cb** %55, align 8
  %57 = icmp eq %struct._restart_data_cb* %56, null
  br i1 %57, label %58, label %61

58:                                               ; preds = %54
  %59 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %60 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %59, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.20.951, i64 0, i64 0))
  call void @abort() #17
  unreachable

61:                                               ; preds = %54
  store i8 0, i8* %9, align 1
  br label %62

62:                                               ; preds = %83, %61
  %63 = getelementptr inbounds %struct.restart_cb_ctx, %struct.restart_cb_ctx* %8, i32 0, i32 3
  %64 = load i8, i8* %63, align 8
  %65 = trunc i8 %64 to i1
  %66 = xor i1 %65, true
  br i1 %66, label %67, label %84

67:                                               ; preds = %62
  %68 = getelementptr inbounds %struct.restart_cb_ctx, %struct.restart_cb_ctx* %8, i32 0, i32 1
  %69 = load %struct._restart_data_cb*, %struct._restart_data_cb** %68, align 8
  store %struct._restart_data_cb* %69, %struct._restart_data_cb** %10, align 8
  %70 = load %struct._restart_data_cb*, %struct._restart_data_cb** %10, align 8
  %71 = getelementptr inbounds %struct._restart_data_cb, %struct._restart_data_cb* %70, i32 0, i32 2
  %72 = load i32 (i8*, i8*, i8*)*, i32 (i8*, i8*, i8*)** %71, align 8
  %73 = load %struct._restart_data_cb*, %struct._restart_data_cb** %10, align 8
  %74 = getelementptr inbounds %struct._restart_data_cb, %struct._restart_data_cb* %73, i32 0, i32 4
  %75 = getelementptr inbounds [255 x i8], [255 x i8]* %74, i64 0, i64 0
  %76 = bitcast %struct.restart_cb_ctx* %8 to i8*
  %77 = load %struct._restart_data_cb*, %struct._restart_data_cb** %10, align 8
  %78 = getelementptr inbounds %struct._restart_data_cb, %struct._restart_data_cb* %77, i32 0, i32 0
  %79 = load i8*, i8** %78, align 8
  %80 = call i32 %72(i8* %75, i8* %76, i8* %79)
  %81 = icmp ne i32 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %67
  store i8 1, i8* %9, align 1
  br label %84

83:                                               ; preds = %67
  br label %62, !llvm.loop !155

84:                                               ; preds = %82, %62
  %85 = getelementptr inbounds %struct.restart_cb_ctx, %struct.restart_cb_ctx* %8, i32 0, i32 2
  %86 = load i8*, i8** %85, align 8
  %87 = icmp ne i8* %86, null
  br i1 %87, label %88, label %91

88:                                               ; preds = %84
  %89 = getelementptr inbounds %struct.restart_cb_ctx, %struct.restart_cb_ctx* %8, i32 0, i32 2
  %90 = load i8*, i8** %89, align 8
  call void @free(i8* %90) #14
  br label %91

91:                                               ; preds = %88, %84
  %92 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %93 = call i32 @fclose(%struct._IO_FILE* %92)
  %94 = load i8*, i8** %6, align 8
  %95 = call i32 @unlink(i8* %94) #14
  %96 = load i8*, i8** %6, align 8
  call void @free(i8* %96) #14
  %97 = load i8, i8* %9, align 1
  %98 = trunc i8 %97 to i1
  br i1 %98, label %99, label %102

99:                                               ; preds = %91
  %100 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %101 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %100, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.21.952, i64 0, i64 0))
  store i32 -1, i32* %2, align 4
  br label %103

102:                                              ; preds = %91
  store i32 0, i32* %2, align 4
  br label %103

103:                                              ; preds = %102, %99, %38
  %104 = load i32, i32* %2, align 4
  ret i32 %104
}

; Function Attrs: nounwind
declare dso_local i64 @sysconf(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @restart_mmap_close() #0 {
  %1 = load i8*, i8** @mmap_base, align 8
  %2 = load i64, i64* @slabmem_limit, align 8
  %3 = call i32 @msync(i8* %1, i64 %2, i32 4)
  %4 = load i8*, i8** @memory_file, align 8
  %5 = call i32 @restart_save(i8* %4)
  %6 = icmp ne i32 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %0
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %9 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.9.955, i64 0, i64 0))
  br label %10

10:                                               ; preds = %7, %0
  %11 = load i8*, i8** @mmap_base, align 8
  %12 = load i64, i64* @slabmem_limit, align 8
  %13 = call i32 @munmap(i8* %11, i64 %12) #14
  %14 = icmp ne i32 %13, 0
  br i1 %14, label %15, label %16

15:                                               ; preds = %10
  call void @perror(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.10.956, i64 0, i64 0))
  br label %22

16:                                               ; preds = %10
  %17 = load i32, i32* @mmap_fd, align 4
  %18 = call i32 @close(i32 %17)
  %19 = icmp ne i32 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %16
  call void @perror(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.11.957, i64 0, i64 0))
  br label %21

21:                                               ; preds = %20, %16
  br label %22

22:                                               ; preds = %21, %15
  %23 = load i8*, i8** @memory_file, align 8
  call void @free(i8* %23) #14
  ret void
}

declare dso_local i32 @msync(i8*, i64, i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @restart_save(i8* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca %struct._IO_FILE*, align 8
  %10 = alloca %struct._restart_data_cb*, align 8
  %11 = alloca %struct.restart_cb_ctx, align 8
  store i8* %0, i8** %3, align 8
  %12 = load i8*, i8** %3, align 8
  %13 = call i64 @strlen(i8* %12) #16
  store i64 %13, i64* %4, align 8
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15.946, i64 0, i64 0), i8** %5, align 8
  %14 = load i8*, i8** %5, align 8
  %15 = call i64 @strlen(i8* %14) #16
  store i64 %15, i64* %6, align 8
  %16 = load i64, i64* %4, align 8
  %17 = load i64, i64* %6, align 8
  %18 = add i64 %16, %17
  %19 = add i64 %18, 1
  %20 = call noalias i8* @calloc(i64 1, i64 %19) #14
  store i8* %20, i8** %7, align 8
  %21 = load i8*, i8** %7, align 8
  %22 = icmp eq i8* %21, null
  br i1 %22, label %23, label %26

23:                                               ; preds = %1
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %25 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %24, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.22.958, i64 0, i64 0))
  store i32 -1, i32* %2, align 4
  br label %81

26:                                               ; preds = %1
  %27 = load i8*, i8** %7, align 8
  %28 = load i8*, i8** %3, align 8
  %29 = load i64, i64* %4, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %27, i8* align 1 %28, i64 %29, i1 false)
  %30 = load i8*, i8** %7, align 8
  %31 = load i64, i64* %4, align 8
  %32 = getelementptr inbounds i8, i8* %30, i64 %31
  %33 = load i8*, i8** %5, align 8
  %34 = load i64, i64* %6, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %32, i8* align 1 %33, i64 %34, i1 false)
  %35 = call i32 @umask(i32 -385) #14
  store i32 %35, i32* %8, align 4
  %36 = load i8*, i8** %7, align 8
  %37 = call %struct._IO_FILE* @fopen(i8* %36, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23.959, i64 0, i64 0))
  store %struct._IO_FILE* %37, %struct._IO_FILE** %9, align 8
  %38 = load i32, i32* %8, align 4
  %39 = call i32 @umask(i32 %38) #14
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %41 = icmp eq %struct._IO_FILE* %40, null
  br i1 %41, label %42, label %44

42:                                               ; preds = %26
  %43 = load i8*, i8** %7, align 8
  call void @free(i8* %43) #14
  call void @perror(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24.960, i64 0, i64 0))
  store i32 -1, i32* %2, align 4
  br label %81

44:                                               ; preds = %26
  %45 = load %struct._restart_data_cb*, %struct._restart_data_cb** @cb_stack, align 8
  store %struct._restart_data_cb* %45, %struct._restart_data_cb** %10, align 8
  %46 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %47 = getelementptr inbounds %struct.restart_cb_ctx, %struct.restart_cb_ctx* %11, i32 0, i32 0
  store %struct._IO_FILE* %46, %struct._IO_FILE** %47, align 8
  br label %48

48:                                               ; preds = %73, %44
  %49 = load %struct._restart_data_cb*, %struct._restart_data_cb** %10, align 8
  %50 = icmp ne %struct._restart_data_cb* %49, null
  br i1 %50, label %51, label %77

51:                                               ; preds = %48
  %52 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %53 = load %struct._restart_data_cb*, %struct._restart_data_cb** %10, align 8
  %54 = getelementptr inbounds %struct._restart_data_cb, %struct._restart_data_cb* %53, i32 0, i32 4
  %55 = getelementptr inbounds [255 x i8], [255 x i8]* %54, i64 0, i64 0
  %56 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %52, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25.961, i64 0, i64 0), i8* %55)
  %57 = load %struct._restart_data_cb*, %struct._restart_data_cb** %10, align 8
  %58 = getelementptr inbounds %struct._restart_data_cb, %struct._restart_data_cb* %57, i32 0, i32 3
  %59 = load i32 (i8*, i8*, i8*)*, i32 (i8*, i8*, i8*)** %58, align 8
  %60 = load %struct._restart_data_cb*, %struct._restart_data_cb** %10, align 8
  %61 = getelementptr inbounds %struct._restart_data_cb, %struct._restart_data_cb* %60, i32 0, i32 4
  %62 = getelementptr inbounds [255 x i8], [255 x i8]* %61, i64 0, i64 0
  %63 = bitcast %struct.restart_cb_ctx* %11 to i8*
  %64 = load %struct._restart_data_cb*, %struct._restart_data_cb** %10, align 8
  %65 = getelementptr inbounds %struct._restart_data_cb, %struct._restart_data_cb* %64, i32 0, i32 0
  %66 = load i8*, i8** %65, align 8
  %67 = call i32 %59(i8* %62, i8* %63, i8* %66)
  %68 = icmp ne i32 %67, 0
  br i1 %68, label %69, label %73

69:                                               ; preds = %51
  %70 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %71 = call i32 @fclose(%struct._IO_FILE* %70)
  %72 = load i8*, i8** %7, align 8
  call void @free(i8* %72) #14
  store i32 -1, i32* %2, align 4
  br label %81

73:                                               ; preds = %51
  %74 = load %struct._restart_data_cb*, %struct._restart_data_cb** %10, align 8
  %75 = getelementptr inbounds %struct._restart_data_cb, %struct._restart_data_cb* %74, i32 0, i32 1
  %76 = load %struct._restart_data_cb*, %struct._restart_data_cb** %75, align 8
  store %struct._restart_data_cb* %76, %struct._restart_data_cb** %10, align 8
  br label %48, !llvm.loop !156

77:                                               ; preds = %48
  %78 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %79 = call i32 @fclose(%struct._IO_FILE* %78)
  %80 = load i8*, i8** %7, align 8
  call void @free(i8* %80) #14
  store i32 0, i32* %2, align 4
  br label %81

81:                                               ; preds = %77, %69, %42, %23
  %82 = load i32, i32* %2, align 4
  ret i32 %82
}

; Function Attrs: nounwind
declare dso_local i32 @munmap(i8*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @restart_fixup(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.timeval, align 8
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct._stritem*, align 8
  %8 = alloca i32, align 4
  %9 = alloca %struct._strchunk*, align 8
  store i8* %0, i8** %2, align 8
  store i64 0, i64* %4, align 8
  %10 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 24), align 4
  store i32 %10, i32* %5, align 4
  %11 = load i32, i32* %5, align 4
  store i32 %11, i32* %6, align 4
  %12 = call i32 @gettimeofday(%struct.timeval* %3, %struct.timezone* null) #14
  %13 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %14 = icmp sgt i32 %13, 0
  br i1 %14, label %15, label %28

15:                                               ; preds = %1
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %17 = load i8*, i8** %2, align 8
  %18 = load i8*, i8** @mmap_base, align 8
  %19 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.12.964, i64 0, i64 0), i8* %17, i8* %18)
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %21 = getelementptr inbounds %struct.timeval, %struct.timeval* %3, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = trunc i64 %22 to i32
  %24 = getelementptr inbounds %struct.timeval, %struct.timeval* %3, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = trunc i64 %25 to i32
  %27 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %20, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.13.965, i64 0, i64 0), i32 %23, i32 %26)
  br label %28

28:                                               ; preds = %15, %1
  br label %29

29:                                               ; preds = %264, %49, %28
  %30 = load i64, i64* %4, align 8
  %31 = load i64, i64* @slabmem_limit, align 8
  %32 = icmp ult i64 %30, %31
  br i1 %32, label %33, label %265

33:                                               ; preds = %29
  %34 = load i8*, i8** @mmap_base, align 8
  %35 = load i64, i64* %4, align 8
  %36 = getelementptr inbounds i8, i8* %34, i64 %35
  %37 = bitcast i8* %36 to %struct._stritem*
  store %struct._stritem* %37, %struct._stritem** %7, align 8
  %38 = load i8*, i8** @mmap_base, align 8
  %39 = load i64, i64* %4, align 8
  %40 = getelementptr inbounds i8, i8* %38, i64 %39
  %41 = load i64, i64* %4, align 8
  %42 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 24), align 4
  %43 = sext i32 %42 to i64
  %44 = urem i64 %41, %43
  %45 = trunc i64 %44 to i32
  %46 = call i32 @slabs_fixup(i8* %40, i32 %45)
  store i32 %46, i32* %8, align 4
  %47 = load i32, i32* %8, align 4
  %48 = icmp eq i32 %47, -1
  br i1 %48, label %49, label %55

49:                                               ; preds = %33
  %50 = load i32, i32* %6, align 4
  %51 = zext i32 %50 to i64
  %52 = load i64, i64* %4, align 8
  %53 = add i64 %52, %51
  store i64 %53, i64* %4, align 8
  %54 = load i32, i32* %5, align 4
  store i32 %54, i32* %6, align 4
  br label %29, !llvm.loop !157

55:                                               ; preds = %33
  %56 = load %struct._stritem*, %struct._stritem** %7, align 8
  %57 = getelementptr inbounds %struct._stritem, %struct._stritem* %56, i32 0, i32 7
  %58 = load i16, i16* %57, align 2
  %59 = zext i16 %58 to i32
  %60 = and i32 %59, 1
  %61 = icmp ne i32 %60, 0
  br i1 %61, label %62, label %116

62:                                               ; preds = %55
  %63 = load %struct._stritem*, %struct._stritem** %7, align 8
  %64 = getelementptr inbounds %struct._stritem, %struct._stritem* %63, i32 0, i32 0
  %65 = load %struct._stritem*, %struct._stritem** %64, align 8
  %66 = icmp ne %struct._stritem* %65, null
  br i1 %66, label %67, label %88

67:                                               ; preds = %62
  %68 = load %struct._stritem*, %struct._stritem** %7, align 8
  %69 = getelementptr inbounds %struct._stritem, %struct._stritem* %68, i32 0, i32 0
  %70 = load %struct._stritem*, %struct._stritem** %69, align 8
  %71 = ptrtoint %struct._stritem* %70 to i64
  %72 = load i8*, i8** %2, align 8
  %73 = ptrtoint i8* %72 to i64
  %74 = sub i64 %71, %73
  %75 = inttoptr i64 %74 to %struct._stritem*
  %76 = load %struct._stritem*, %struct._stritem** %7, align 8
  %77 = getelementptr inbounds %struct._stritem, %struct._stritem* %76, i32 0, i32 0
  store %struct._stritem* %75, %struct._stritem** %77, align 8
  %78 = load %struct._stritem*, %struct._stritem** %7, align 8
  %79 = getelementptr inbounds %struct._stritem, %struct._stritem* %78, i32 0, i32 0
  %80 = load %struct._stritem*, %struct._stritem** %79, align 8
  %81 = ptrtoint %struct._stritem* %80 to i64
  %82 = load i8*, i8** @mmap_base, align 8
  %83 = ptrtoint i8* %82 to i64
  %84 = add i64 %81, %83
  %85 = inttoptr i64 %84 to %struct._stritem*
  %86 = load %struct._stritem*, %struct._stritem** %7, align 8
  %87 = getelementptr inbounds %struct._stritem, %struct._stritem* %86, i32 0, i32 0
  store %struct._stritem* %85, %struct._stritem** %87, align 8
  br label %88

88:                                               ; preds = %67, %62
  %89 = load %struct._stritem*, %struct._stritem** %7, align 8
  %90 = getelementptr inbounds %struct._stritem, %struct._stritem* %89, i32 0, i32 1
  %91 = load %struct._stritem*, %struct._stritem** %90, align 8
  %92 = icmp ne %struct._stritem* %91, null
  br i1 %92, label %93, label %114

93:                                               ; preds = %88
  %94 = load %struct._stritem*, %struct._stritem** %7, align 8
  %95 = getelementptr inbounds %struct._stritem, %struct._stritem* %94, i32 0, i32 1
  %96 = load %struct._stritem*, %struct._stritem** %95, align 8
  %97 = ptrtoint %struct._stritem* %96 to i64
  %98 = load i8*, i8** %2, align 8
  %99 = ptrtoint i8* %98 to i64
  %100 = sub i64 %97, %99
  %101 = inttoptr i64 %100 to %struct._stritem*
  %102 = load %struct._stritem*, %struct._stritem** %7, align 8
  %103 = getelementptr inbounds %struct._stritem, %struct._stritem* %102, i32 0, i32 1
  store %struct._stritem* %101, %struct._stritem** %103, align 8
  %104 = load %struct._stritem*, %struct._stritem** %7, align 8
  %105 = getelementptr inbounds %struct._stritem, %struct._stritem* %104, i32 0, i32 1
  %106 = load %struct._stritem*, %struct._stritem** %105, align 8
  %107 = ptrtoint %struct._stritem* %106 to i64
  %108 = load i8*, i8** @mmap_base, align 8
  %109 = ptrtoint i8* %108 to i64
  %110 = add i64 %107, %109
  %111 = inttoptr i64 %110 to %struct._stritem*
  %112 = load %struct._stritem*, %struct._stritem** %7, align 8
  %113 = getelementptr inbounds %struct._stritem, %struct._stritem* %112, i32 0, i32 1
  store %struct._stritem* %111, %struct._stritem** %113, align 8
  br label %114

114:                                              ; preds = %93, %88
  %115 = load %struct._stritem*, %struct._stritem** %7, align 8
  call void @do_item_link_fixup(%struct._stritem* %115)
  br label %116

116:                                              ; preds = %114, %55
  %117 = load %struct._stritem*, %struct._stritem** %7, align 8
  %118 = getelementptr inbounds %struct._stritem, %struct._stritem* %117, i32 0, i32 7
  %119 = load i16, i16* %118, align 2
  %120 = zext i16 %119 to i32
  %121 = and i32 %120, 96
  %122 = icmp ne i32 %121, 0
  br i1 %122, label %123, label %247

123:                                              ; preds = %116
  %124 = load %struct._stritem*, %struct._stritem** %7, align 8
  %125 = getelementptr inbounds %struct._stritem, %struct._stritem* %124, i32 0, i32 7
  %126 = load i16, i16* %125, align 2
  %127 = zext i16 %126 to i32
  %128 = and i32 %127, 32
  %129 = icmp ne i32 %128, 0
  br i1 %129, label %130, label %165

130:                                              ; preds = %123
  %131 = load %struct._stritem*, %struct._stritem** %7, align 8
  %132 = getelementptr inbounds %struct._stritem, %struct._stritem* %131, i32 0, i32 10
  %133 = bitcast [0 x %union.anon.10]* %132 to i8*
  %134 = load %struct._stritem*, %struct._stritem** %7, align 8
  %135 = getelementptr inbounds %struct._stritem, %struct._stritem* %134, i32 0, i32 9
  %136 = load i8, i8* %135, align 1
  %137 = zext i8 %136 to i32
  %138 = sext i32 %137 to i64
  %139 = getelementptr inbounds i8, i8* %133, i64 %138
  %140 = getelementptr inbounds i8, i8* %139, i64 1
  %141 = load %struct._stritem*, %struct._stritem** %7, align 8
  %142 = getelementptr inbounds %struct._stritem, %struct._stritem* %141, i32 0, i32 7
  %143 = load i16, i16* %142, align 2
  %144 = zext i16 %143 to i32
  %145 = and i32 %144, 256
  %146 = icmp ne i32 %145, 0
  %147 = zext i1 %146 to i64
  %148 = select i1 %146, i64 4, i64 0
  %149 = getelementptr inbounds i8, i8* %140, i64 %148
  %150 = load %struct._stritem*, %struct._stritem** %7, align 8
  %151 = getelementptr inbounds %struct._stritem, %struct._stritem* %150, i32 0, i32 7
  %152 = load i16, i16* %151, align 2
  %153 = zext i16 %152 to i32
  %154 = and i32 %153, 2
  %155 = icmp ne i32 %154, 0
  %156 = zext i1 %155 to i64
  %157 = select i1 %155, i64 8, i64 0
  %158 = getelementptr inbounds i8, i8* %149, i64 %157
  %159 = bitcast i8* %158 to %struct._strchunk*
  store %struct._strchunk* %159, %struct._strchunk** %9, align 8
  %160 = load %struct._strchunk*, %struct._strchunk** %9, align 8
  %161 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %160, i32 0, i32 9
  %162 = load i8, i8* %161, align 1
  %163 = zext i8 %162 to i32
  %164 = call i32 @slabs_size(i32 %163)
  store i32 %164, i32* %8, align 4
  br label %168

165:                                              ; preds = %123
  %166 = load %struct._stritem*, %struct._stritem** %7, align 8
  %167 = bitcast %struct._stritem* %166 to %struct._strchunk*
  store %struct._strchunk* %167, %struct._strchunk** %9, align 8
  br label %168

168:                                              ; preds = %165, %130
  %169 = load %struct._strchunk*, %struct._strchunk** %9, align 8
  %170 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %169, i32 0, i32 0
  %171 = load %struct._strchunk*, %struct._strchunk** %170, align 8
  %172 = icmp ne %struct._strchunk* %171, null
  br i1 %172, label %173, label %194

173:                                              ; preds = %168
  %174 = load %struct._strchunk*, %struct._strchunk** %9, align 8
  %175 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %174, i32 0, i32 0
  %176 = load %struct._strchunk*, %struct._strchunk** %175, align 8
  %177 = ptrtoint %struct._strchunk* %176 to i64
  %178 = load i8*, i8** %2, align 8
  %179 = ptrtoint i8* %178 to i64
  %180 = sub i64 %177, %179
  %181 = inttoptr i64 %180 to %struct._strchunk*
  %182 = load %struct._strchunk*, %struct._strchunk** %9, align 8
  %183 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %182, i32 0, i32 0
  store %struct._strchunk* %181, %struct._strchunk** %183, align 8
  %184 = load %struct._strchunk*, %struct._strchunk** %9, align 8
  %185 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %184, i32 0, i32 0
  %186 = load %struct._strchunk*, %struct._strchunk** %185, align 8
  %187 = ptrtoint %struct._strchunk* %186 to i64
  %188 = load i8*, i8** @mmap_base, align 8
  %189 = ptrtoint i8* %188 to i64
  %190 = add i64 %187, %189
  %191 = inttoptr i64 %190 to %struct._strchunk*
  %192 = load %struct._strchunk*, %struct._strchunk** %9, align 8
  %193 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %192, i32 0, i32 0
  store %struct._strchunk* %191, %struct._strchunk** %193, align 8
  br label %194

194:                                              ; preds = %173, %168
  %195 = load %struct._strchunk*, %struct._strchunk** %9, align 8
  %196 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %195, i32 0, i32 1
  %197 = load %struct._strchunk*, %struct._strchunk** %196, align 8
  %198 = icmp ne %struct._strchunk* %197, null
  br i1 %198, label %199, label %220

199:                                              ; preds = %194
  %200 = load %struct._strchunk*, %struct._strchunk** %9, align 8
  %201 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %200, i32 0, i32 1
  %202 = load %struct._strchunk*, %struct._strchunk** %201, align 8
  %203 = ptrtoint %struct._strchunk* %202 to i64
  %204 = load i8*, i8** %2, align 8
  %205 = ptrtoint i8* %204 to i64
  %206 = sub i64 %203, %205
  %207 = inttoptr i64 %206 to %struct._strchunk*
  %208 = load %struct._strchunk*, %struct._strchunk** %9, align 8
  %209 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %208, i32 0, i32 1
  store %struct._strchunk* %207, %struct._strchunk** %209, align 8
  %210 = load %struct._strchunk*, %struct._strchunk** %9, align 8
  %211 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %210, i32 0, i32 1
  %212 = load %struct._strchunk*, %struct._strchunk** %211, align 8
  %213 = ptrtoint %struct._strchunk* %212 to i64
  %214 = load i8*, i8** @mmap_base, align 8
  %215 = ptrtoint i8* %214 to i64
  %216 = add i64 %213, %215
  %217 = inttoptr i64 %216 to %struct._strchunk*
  %218 = load %struct._strchunk*, %struct._strchunk** %9, align 8
  %219 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %218, i32 0, i32 1
  store %struct._strchunk* %217, %struct._strchunk** %219, align 8
  br label %220

220:                                              ; preds = %199, %194
  %221 = load %struct._strchunk*, %struct._strchunk** %9, align 8
  %222 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %221, i32 0, i32 2
  %223 = load %struct._stritem*, %struct._stritem** %222, align 8
  %224 = icmp ne %struct._stritem* %223, null
  br i1 %224, label %225, label %246

225:                                              ; preds = %220
  %226 = load %struct._strchunk*, %struct._strchunk** %9, align 8
  %227 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %226, i32 0, i32 2
  %228 = load %struct._stritem*, %struct._stritem** %227, align 8
  %229 = ptrtoint %struct._stritem* %228 to i64
  %230 = load i8*, i8** %2, align 8
  %231 = ptrtoint i8* %230 to i64
  %232 = sub i64 %229, %231
  %233 = inttoptr i64 %232 to %struct._stritem*
  %234 = load %struct._strchunk*, %struct._strchunk** %9, align 8
  %235 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %234, i32 0, i32 2
  store %struct._stritem* %233, %struct._stritem** %235, align 8
  %236 = load %struct._strchunk*, %struct._strchunk** %9, align 8
  %237 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %236, i32 0, i32 2
  %238 = load %struct._stritem*, %struct._stritem** %237, align 8
  %239 = ptrtoint %struct._stritem* %238 to i64
  %240 = load i8*, i8** @mmap_base, align 8
  %241 = ptrtoint i8* %240 to i64
  %242 = add i64 %239, %241
  %243 = inttoptr i64 %242 to %struct._stritem*
  %244 = load %struct._strchunk*, %struct._strchunk** %9, align 8
  %245 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %244, i32 0, i32 2
  store %struct._stritem* %243, %struct._stritem** %245, align 8
  br label %246

246:                                              ; preds = %225, %220
  br label %247

247:                                              ; preds = %246, %116
  %248 = load i32, i32* %8, align 4
  %249 = sext i32 %248 to i64
  %250 = load i64, i64* %4, align 8
  %251 = add i64 %250, %249
  store i64 %251, i64* %4, align 8
  %252 = load i32, i32* %8, align 4
  %253 = load i32, i32* %6, align 4
  %254 = sub i32 %253, %252
  store i32 %254, i32* %6, align 4
  %255 = load i32, i32* %8, align 4
  %256 = load i32, i32* %6, align 4
  %257 = icmp ugt i32 %255, %256
  br i1 %257, label %258, label %264

258:                                              ; preds = %247
  %259 = load i32, i32* %6, align 4
  %260 = zext i32 %259 to i64
  %261 = load i64, i64* %4, align 8
  %262 = add i64 %261, %260
  store i64 %262, i64* %4, align 8
  %263 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 24), align 4
  store i32 %263, i32* %6, align 4
  br label %264

264:                                              ; preds = %258, %247
  br label %29, !llvm.loop !157

265:                                              ; preds = %29
  %266 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %267 = icmp sgt i32 %266, 0
  br i1 %267, label %268, label %278

268:                                              ; preds = %265
  %269 = call i32 @gettimeofday(%struct.timeval* %3, %struct.timezone* null) #14
  %270 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %271 = getelementptr inbounds %struct.timeval, %struct.timeval* %3, i32 0, i32 0
  %272 = load i64, i64* %271, align 8
  %273 = trunc i64 %272 to i32
  %274 = getelementptr inbounds %struct.timeval, %struct.timeval* %3, i32 0, i32 1
  %275 = load i64, i64* %274, align 8
  %276 = trunc i64 %275 to i32
  %277 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %270, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.14.966, i64 0, i64 0), i32 %273, i32 %276)
  br label %278

278:                                              ; preds = %268, %265
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @complete_nread_ascii(%struct.conn* %0) #0 {
  %2 = alloca %struct.conn*, align 8
  %3 = alloca %struct._stritem*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  %7 = alloca [2 x i8], align 1
  %8 = alloca %struct._strchunk*, align 8
  store %struct.conn* %0, %struct.conn** %2, align 8
  %9 = load %struct.conn*, %struct.conn** %2, align 8
  %10 = getelementptr inbounds %struct.conn, %struct.conn* %9, i32 0, i32 23
  %11 = load i8*, i8** %10, align 8
  %12 = bitcast i8* %11 to %struct._stritem*
  store %struct._stritem* %12, %struct._stritem** %3, align 8
  %13 = load %struct.conn*, %struct.conn** %2, align 8
  %14 = getelementptr inbounds %struct.conn, %struct.conn* %13, i32 0, i32 38
  %15 = load i16, i16* %14, align 8
  %16 = sext i16 %15 to i32
  store i32 %16, i32* %4, align 4
  store i8 0, i8* %6, align 1
  %17 = load %struct.conn*, %struct.conn** %2, align 8
  %18 = getelementptr inbounds %struct.conn, %struct.conn* %17, i32 0, i32 42
  %19 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %18, align 8
  %20 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %19, i32 0, i32 4
  %21 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %20, i32 0, i32 0
  %22 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %21) #14
  %23 = load %struct.conn*, %struct.conn** %2, align 8
  %24 = getelementptr inbounds %struct.conn, %struct.conn* %23, i32 0, i32 42
  %25 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %24, align 8
  %26 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %25, i32 0, i32 4
  %27 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %26, i32 0, i32 31
  %28 = load %struct._stritem*, %struct._stritem** %3, align 8
  %29 = getelementptr inbounds %struct._stritem, %struct._stritem* %28, i32 0, i32 8
  %30 = load i8, i8* %29, align 8
  %31 = zext i8 %30 to i32
  %32 = and i32 %31, -193
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds [64 x %struct.slab_stats], [64 x %struct.slab_stats]* %27, i64 0, i64 %33
  %35 = getelementptr inbounds %struct.slab_stats, %struct.slab_stats* %34, i32 0, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = add i64 %36, 1
  store i64 %37, i64* %35, align 8
  %38 = load %struct.conn*, %struct.conn** %2, align 8
  %39 = getelementptr inbounds %struct.conn, %struct.conn* %38, i32 0, i32 42
  %40 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %39, align 8
  %41 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %40, i32 0, i32 4
  %42 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %41, i32 0, i32 0
  %43 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %42) #14
  %44 = load %struct._stritem*, %struct._stritem** %3, align 8
  %45 = getelementptr inbounds %struct._stritem, %struct._stritem* %44, i32 0, i32 7
  %46 = load i16, i16* %45, align 2
  %47 = zext i16 %46 to i32
  %48 = and i32 %47, 32
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %89

50:                                               ; preds = %1
  %51 = load %struct._stritem*, %struct._stritem** %3, align 8
  %52 = getelementptr inbounds %struct._stritem, %struct._stritem* %51, i32 0, i32 10
  %53 = bitcast [0 x %union.anon.10]* %52 to i8*
  %54 = load %struct._stritem*, %struct._stritem** %3, align 8
  %55 = getelementptr inbounds %struct._stritem, %struct._stritem* %54, i32 0, i32 9
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i32
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds i8, i8* %53, i64 %58
  %60 = getelementptr inbounds i8, i8* %59, i64 1
  %61 = load %struct._stritem*, %struct._stritem** %3, align 8
  %62 = getelementptr inbounds %struct._stritem, %struct._stritem* %61, i32 0, i32 7
  %63 = load i16, i16* %62, align 2
  %64 = zext i16 %63 to i32
  %65 = and i32 %64, 256
  %66 = icmp ne i32 %65, 0
  %67 = zext i1 %66 to i64
  %68 = select i1 %66, i64 4, i64 0
  %69 = getelementptr inbounds i8, i8* %60, i64 %68
  %70 = load %struct._stritem*, %struct._stritem** %3, align 8
  %71 = getelementptr inbounds %struct._stritem, %struct._stritem* %70, i32 0, i32 7
  %72 = load i16, i16* %71, align 2
  %73 = zext i16 %72 to i32
  %74 = and i32 %73, 2
  %75 = icmp ne i32 %74, 0
  %76 = zext i1 %75 to i64
  %77 = select i1 %75, i64 8, i64 0
  %78 = getelementptr inbounds i8, i8* %69, i64 %77
  %79 = load %struct._stritem*, %struct._stritem** %3, align 8
  %80 = getelementptr inbounds %struct._stritem, %struct._stritem* %79, i32 0, i32 5
  %81 = load i32, i32* %80, align 8
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds i8, i8* %78, i64 %82
  %84 = getelementptr inbounds i8, i8* %83, i64 -2
  %85 = call i32 @strncmp(i8* %84, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.969, i64 0, i64 0), i64 2) #16
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %50
  store i8 1, i8* %6, align 1
  br label %88

88:                                               ; preds = %87, %50
  br label %151

89:                                               ; preds = %1
  %90 = load %struct.conn*, %struct.conn** %2, align 8
  %91 = getelementptr inbounds %struct.conn, %struct.conn* %90, i32 0, i32 21
  %92 = load i8*, i8** %91, align 8
  %93 = bitcast i8* %92 to %struct._strchunk*
  store %struct._strchunk* %93, %struct._strchunk** %8, align 8
  %94 = load %struct._strchunk*, %struct._strchunk** %8, align 8
  %95 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %94, i32 0, i32 4
  %96 = load i32, i32* %95, align 4
  %97 = icmp sgt i32 %96, 1
  br i1 %97, label %98, label %119

98:                                               ; preds = %89
  %99 = load %struct._strchunk*, %struct._strchunk** %8, align 8
  %100 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %99, i32 0, i32 10
  %101 = load %struct._strchunk*, %struct._strchunk** %8, align 8
  %102 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %101, i32 0, i32 4
  %103 = load i32, i32* %102, align 4
  %104 = sub nsw i32 %103, 2
  %105 = sext i32 %104 to i64
  %106 = getelementptr inbounds [0 x i8], [0 x i8]* %100, i64 0, i64 %105
  %107 = load i8, i8* %106, align 1
  %108 = getelementptr inbounds [2 x i8], [2 x i8]* %7, i64 0, i64 0
  store i8 %107, i8* %108, align 1
  %109 = load %struct._strchunk*, %struct._strchunk** %8, align 8
  %110 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %109, i32 0, i32 10
  %111 = load %struct._strchunk*, %struct._strchunk** %8, align 8
  %112 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %111, i32 0, i32 4
  %113 = load i32, i32* %112, align 4
  %114 = sub nsw i32 %113, 1
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds [0 x i8], [0 x i8]* %110, i64 0, i64 %115
  %117 = load i8, i8* %116, align 1
  %118 = getelementptr inbounds [2 x i8], [2 x i8]* %7, i64 0, i64 1
  store i8 %117, i8* %118, align 1
  br label %144

119:                                              ; preds = %89
  %120 = load %struct._strchunk*, %struct._strchunk** %8, align 8
  %121 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %120, i32 0, i32 1
  %122 = load %struct._strchunk*, %struct._strchunk** %121, align 8
  %123 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %122, i32 0, i32 10
  %124 = load %struct._strchunk*, %struct._strchunk** %8, align 8
  %125 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %124, i32 0, i32 1
  %126 = load %struct._strchunk*, %struct._strchunk** %125, align 8
  %127 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %126, i32 0, i32 4
  %128 = load i32, i32* %127, align 4
  %129 = sub nsw i32 %128, 1
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds [0 x i8], [0 x i8]* %123, i64 0, i64 %130
  %132 = load i8, i8* %131, align 1
  %133 = getelementptr inbounds [2 x i8], [2 x i8]* %7, i64 0, i64 0
  store i8 %132, i8* %133, align 1
  %134 = load %struct._strchunk*, %struct._strchunk** %8, align 8
  %135 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %134, i32 0, i32 10
  %136 = load %struct._strchunk*, %struct._strchunk** %8, align 8
  %137 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %136, i32 0, i32 4
  %138 = load i32, i32* %137, align 4
  %139 = sub nsw i32 %138, 1
  %140 = sext i32 %139 to i64
  %141 = getelementptr inbounds [0 x i8], [0 x i8]* %135, i64 0, i64 %140
  %142 = load i8, i8* %141, align 1
  %143 = getelementptr inbounds [2 x i8], [2 x i8]* %7, i64 0, i64 1
  store i8 %142, i8* %143, align 1
  br label %144

144:                                              ; preds = %119, %98
  %145 = getelementptr inbounds [2 x i8], [2 x i8]* %7, i64 0, i64 0
  %146 = call i32 @strncmp(i8* %145, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.969, i64 0, i64 0), i64 2) #16
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %149

148:                                              ; preds = %144
  store i8 1, i8* %6, align 1
  br label %150

149:                                              ; preds = %144
  br label %150

150:                                              ; preds = %149, %148
  br label %151

151:                                              ; preds = %150, %88
  %152 = load i8, i8* %6, align 1
  %153 = trunc i8 %152 to i1
  br i1 %153, label %164, label %154

154:                                              ; preds = %151
  %155 = load %struct.conn*, %struct.conn** %2, align 8
  %156 = getelementptr inbounds %struct.conn, %struct.conn* %155, i32 0, i32 5
  %157 = load i8, i8* %156, align 1
  %158 = trunc i8 %157 to i1
  br i1 %158, label %159, label %162

159:                                              ; preds = %154
  %160 = load %struct.conn*, %struct.conn** %2, align 8
  %161 = getelementptr inbounds %struct.conn, %struct.conn* %160, i32 0, i32 34
  store i8 0, i8* %161, align 4
  br label %162

162:                                              ; preds = %159, %154
  %163 = load %struct.conn*, %struct.conn** %2, align 8
  call void @out_string(%struct.conn* %163, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1.970, i64 0, i64 0))
  br label %190

164:                                              ; preds = %151
  %165 = load %struct._stritem*, %struct._stritem** %3, align 8
  %166 = load i32, i32* %4, align 4
  %167 = load %struct.conn*, %struct.conn** %2, align 8
  %168 = call i32 @store_item(%struct._stritem* %165, i32 %166, %struct.conn* %167)
  store i32 %168, i32* %5, align 4
  %169 = load %struct.conn*, %struct.conn** %2, align 8
  %170 = getelementptr inbounds %struct.conn, %struct.conn* %169, i32 0, i32 5
  %171 = load i8, i8* %170, align 1
  %172 = trunc i8 %171 to i1
  br i1 %172, label %173, label %176

173:                                              ; preds = %164
  %174 = load %struct.conn*, %struct.conn** %2, align 8
  %175 = load i32, i32* %5, align 4
  call void @_finalize_mset(%struct.conn* %174, i32 %175)
  br label %189

176:                                              ; preds = %164
  %177 = load i32, i32* %5, align 4
  switch i32 %177, label %186 [
    i32 1, label %178
    i32 2, label %180
    i32 3, label %182
    i32 0, label %184
  ]

178:                                              ; preds = %176
  %179 = load %struct.conn*, %struct.conn** %2, align 8
  call void @out_string(%struct.conn* %179, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2.971, i64 0, i64 0))
  br label %188

180:                                              ; preds = %176
  %181 = load %struct.conn*, %struct.conn** %2, align 8
  call void @out_string(%struct.conn* %181, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3.972, i64 0, i64 0))
  br label %188

182:                                              ; preds = %176
  %183 = load %struct.conn*, %struct.conn** %2, align 8
  call void @out_string(%struct.conn* %183, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.973, i64 0, i64 0))
  br label %188

184:                                              ; preds = %176
  %185 = load %struct.conn*, %struct.conn** %2, align 8
  call void @out_string(%struct.conn* %185, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.974, i64 0, i64 0))
  br label %188

186:                                              ; preds = %176
  %187 = load %struct.conn*, %struct.conn** %2, align 8
  call void @out_string(%struct.conn* %187, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.6.975, i64 0, i64 0))
  br label %188

188:                                              ; preds = %186, %184, %182, %180, %178
  br label %189

189:                                              ; preds = %188, %173
  br label %190

190:                                              ; preds = %189, %162
  %191 = load %struct.conn*, %struct.conn** %2, align 8
  %192 = getelementptr inbounds %struct.conn, %struct.conn* %191, i32 0, i32 4
  store i8 0, i8* %192, align 2
  %193 = load %struct.conn*, %struct.conn** %2, align 8
  %194 = getelementptr inbounds %struct.conn, %struct.conn* %193, i32 0, i32 5
  store i8 0, i8* %194, align 1
  %195 = load %struct.conn*, %struct.conn** %2, align 8
  %196 = getelementptr inbounds %struct.conn, %struct.conn* %195, i32 0, i32 23
  %197 = load i8*, i8** %196, align 8
  %198 = bitcast i8* %197 to %struct._stritem*
  call void @item_remove(%struct._stritem* %198)
  %199 = load %struct.conn*, %struct.conn** %2, align 8
  %200 = getelementptr inbounds %struct.conn, %struct.conn* %199, i32 0, i32 23
  store i8* null, i8** %200, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @_finalize_mset(%struct.conn* %0, i32 %1) #0 {
  %3 = alloca %struct.conn*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct._mc_resp*, align 8
  %6 = alloca %struct._stritem*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  store %struct.conn* %0, %struct.conn** %3, align 8
  store i32 %1, i32* %4, align 4
  %10 = load %struct.conn*, %struct.conn** %3, align 8
  %11 = getelementptr inbounds %struct.conn, %struct.conn* %10, i32 0, i32 19
  %12 = load %struct._mc_resp*, %struct._mc_resp** %11, align 8
  store %struct._mc_resp* %12, %struct._mc_resp** %5, align 8
  %13 = load %struct.conn*, %struct.conn** %3, align 8
  %14 = getelementptr inbounds %struct.conn, %struct.conn* %13, i32 0, i32 23
  %15 = load i8*, i8** %14, align 8
  %16 = bitcast i8* %15 to %struct._stritem*
  store %struct._stritem* %16, %struct._stritem** %6, align 8
  %17 = load %struct.conn*, %struct.conn** %3, align 8
  call void @conn_set_state(%struct.conn* %17, i32 1)
  %18 = load %struct._mc_resp*, %struct._mc_resp** %5, align 8
  %19 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %18, i32 0, i32 18
  %20 = getelementptr inbounds [1024 x i8], [1024 x i8]* %19, i64 0, i64 0
  %21 = load %struct._mc_resp*, %struct._mc_resp** %5, align 8
  %22 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %21, i32 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds i8, i8* %20, i64 %24
  store i8* %25, i8** %7, align 8
  %26 = load i8*, i8** %7, align 8
  store i8* %26, i8** %8, align 8
  %27 = load i32, i32* %4, align 4
  switch i32 %27, label %50 [
    i32 1, label %28
    i32 2, label %44
    i32 3, label %46
    i32 0, label %48
  ]

28:                                               ; preds = %2
  %29 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 57), align 1
  %30 = trunc i8 %29 to i1
  br i1 %30, label %31, label %33

31:                                               ; preds = %28
  %32 = load i8*, i8** %7, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %32, i8* align 1 getelementptr inbounds ([3 x i8], [3 x i8]* @.str.44.976, i64 0, i64 0), i64 2, i1 false)
  br label %35

33:                                               ; preds = %28
  %34 = load i8*, i8** %7, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %34, i8* align 1 getelementptr inbounds ([3 x i8], [3 x i8]* @.str.45.977, i64 0, i64 0), i64 2, i1 false)
  br label %35

35:                                               ; preds = %33, %31
  %36 = load %struct.conn*, %struct.conn** %3, align 8
  %37 = getelementptr inbounds %struct.conn, %struct.conn* %36, i32 0, i32 34
  %38 = load i8, i8* %37, align 4
  %39 = trunc i8 %38 to i1
  br i1 %39, label %40, label %43

40:                                               ; preds = %35
  %41 = load %struct._mc_resp*, %struct._mc_resp** %5, align 8
  %42 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %41, i32 0, i32 11
  store i8 1, i8* %42, align 2
  br label %43

43:                                               ; preds = %40, %35
  br label %54

44:                                               ; preds = %2
  %45 = load i8*, i8** %7, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %45, i8* align 1 getelementptr inbounds ([3 x i8], [3 x i8]* @.str.46.978, i64 0, i64 0), i64 2, i1 false)
  br label %54

46:                                               ; preds = %2
  %47 = load i8*, i8** %7, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %47, i8* align 1 getelementptr inbounds ([3 x i8], [3 x i8]* @.str.47.979, i64 0, i64 0), i64 2, i1 false)
  br label %54

48:                                               ; preds = %2
  %49 = load i8*, i8** %7, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %49, i8* align 1 getelementptr inbounds ([3 x i8], [3 x i8]* @.str.48.980, i64 0, i64 0), i64 2, i1 false)
  br label %54

50:                                               ; preds = %2
  %51 = load %struct.conn*, %struct.conn** %3, align 8
  %52 = getelementptr inbounds %struct.conn, %struct.conn* %51, i32 0, i32 34
  store i8 0, i8* %52, align 4
  %53 = load %struct.conn*, %struct.conn** %3, align 8
  call void @out_string(%struct.conn* %53, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.6.975, i64 0, i64 0))
  br label %194

54:                                               ; preds = %48, %46, %44, %43
  %55 = load i8*, i8** %7, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 2
  store i8* %56, i8** %7, align 8
  %57 = load %struct._mc_resp*, %struct._mc_resp** %5, align 8
  %58 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %57, i32 0, i32 18
  %59 = getelementptr inbounds [1024 x i8], [1024 x i8]* %58, i64 0, i64 0
  store i8* %59, i8** %9, align 8
  br label %60

60:                                               ; preds = %169, %54
  %61 = load i8*, i8** %9, align 8
  %62 = load i8*, i8** %8, align 8
  %63 = icmp ult i8* %61, %62
  br i1 %63, label %64, label %172

64:                                               ; preds = %60
  %65 = load i8*, i8** %9, align 8
  %66 = load i8, i8* %65, align 1
  %67 = sext i8 %66 to i32
  switch i32 %67, label %167 [
    i32 79, label %68
    i32 107, label %92
    i32 99, label %156
  ]

68:                                               ; preds = %64
  %69 = load i8*, i8** %7, align 8
  store i8 32, i8* %69, align 1
  %70 = load i8*, i8** %7, align 8
  %71 = getelementptr inbounds i8, i8* %70, i32 1
  store i8* %71, i8** %7, align 8
  br label %72

72:                                               ; preds = %83, %68
  %73 = load i8*, i8** %9, align 8
  %74 = load i8*, i8** %8, align 8
  %75 = icmp ult i8* %73, %74
  br i1 %75, label %76, label %81

76:                                               ; preds = %72
  %77 = load i8*, i8** %9, align 8
  %78 = load i8, i8* %77, align 1
  %79 = sext i8 %78 to i32
  %80 = icmp ne i32 %79, 32
  br label %81

81:                                               ; preds = %76, %72
  %82 = phi i1 [ false, %72 ], [ %80, %76 ]
  br i1 %82, label %83, label %91

83:                                               ; preds = %81
  %84 = load i8*, i8** %9, align 8
  %85 = load i8, i8* %84, align 1
  %86 = load i8*, i8** %7, align 8
  store i8 %85, i8* %86, align 1
  %87 = load i8*, i8** %7, align 8
  %88 = getelementptr inbounds i8, i8* %87, i32 1
  store i8* %88, i8** %7, align 8
  %89 = load i8*, i8** %9, align 8
  %90 = getelementptr inbounds i8, i8* %89, i32 1
  store i8* %90, i8** %9, align 8
  br label %72, !llvm.loop !158

91:                                               ; preds = %81
  br label %168

92:                                               ; preds = %64
  %93 = load i8*, i8** %7, align 8
  store i8 32, i8* %93, align 1
  %94 = load i8*, i8** %7, align 8
  %95 = getelementptr inbounds i8, i8* %94, i64 1
  store i8 107, i8* %95, align 1
  %96 = load i8*, i8** %7, align 8
  %97 = getelementptr inbounds i8, i8* %96, i64 2
  store i8* %97, i8** %7, align 8
  %98 = load %struct._stritem*, %struct._stritem** %6, align 8
  %99 = getelementptr inbounds %struct._stritem, %struct._stritem* %98, i32 0, i32 7
  %100 = load i16, i16* %99, align 2
  %101 = zext i16 %100 to i32
  %102 = and i32 %101, 4096
  %103 = icmp ne i32 %102, 0
  br i1 %103, label %129, label %104

104:                                              ; preds = %92
  %105 = load i8*, i8** %7, align 8
  %106 = load %struct._stritem*, %struct._stritem** %6, align 8
  %107 = getelementptr inbounds %struct._stritem, %struct._stritem* %106, i32 0, i32 10
  %108 = bitcast [0 x %union.anon.10]* %107 to i8*
  %109 = load %struct._stritem*, %struct._stritem** %6, align 8
  %110 = getelementptr inbounds %struct._stritem, %struct._stritem* %109, i32 0, i32 7
  %111 = load i16, i16* %110, align 2
  %112 = zext i16 %111 to i32
  %113 = and i32 %112, 2
  %114 = icmp ne i32 %113, 0
  %115 = zext i1 %114 to i64
  %116 = select i1 %114, i64 8, i64 0
  %117 = getelementptr inbounds i8, i8* %108, i64 %116
  %118 = load %struct._stritem*, %struct._stritem** %6, align 8
  %119 = getelementptr inbounds %struct._stritem, %struct._stritem* %118, i32 0, i32 9
  %120 = load i8, i8* %119, align 1
  %121 = zext i8 %120 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %105, i8* align 1 %117, i64 %121, i1 false)
  %122 = load %struct._stritem*, %struct._stritem** %6, align 8
  %123 = getelementptr inbounds %struct._stritem, %struct._stritem* %122, i32 0, i32 9
  %124 = load i8, i8* %123, align 1
  %125 = zext i8 %124 to i32
  %126 = load i8*, i8** %7, align 8
  %127 = sext i32 %125 to i64
  %128 = getelementptr inbounds i8, i8* %126, i64 %127
  store i8* %128, i8** %7, align 8
  br label %155

129:                                              ; preds = %92
  %130 = load %struct._stritem*, %struct._stritem** %6, align 8
  %131 = getelementptr inbounds %struct._stritem, %struct._stritem* %130, i32 0, i32 10
  %132 = bitcast [0 x %union.anon.10]* %131 to i8*
  %133 = load %struct._stritem*, %struct._stritem** %6, align 8
  %134 = getelementptr inbounds %struct._stritem, %struct._stritem* %133, i32 0, i32 7
  %135 = load i16, i16* %134, align 2
  %136 = zext i16 %135 to i32
  %137 = and i32 %136, 2
  %138 = icmp ne i32 %137, 0
  %139 = zext i1 %138 to i64
  %140 = select i1 %138, i64 8, i64 0
  %141 = getelementptr inbounds i8, i8* %132, i64 %140
  %142 = load %struct._stritem*, %struct._stritem** %6, align 8
  %143 = getelementptr inbounds %struct._stritem, %struct._stritem* %142, i32 0, i32 9
  %144 = load i8, i8* %143, align 1
  %145 = zext i8 %144 to i64
  %146 = load i8*, i8** %7, align 8
  %147 = call i64 @base64_encode(i8* %141, i64 %145, i8* %146, i64 512)
  %148 = load i8*, i8** %7, align 8
  %149 = getelementptr inbounds i8, i8* %148, i64 %147
  store i8* %149, i8** %7, align 8
  %150 = load i8*, i8** %7, align 8
  store i8 32, i8* %150, align 1
  %151 = load i8*, i8** %7, align 8
  %152 = getelementptr inbounds i8, i8* %151, i64 1
  store i8 98, i8* %152, align 1
  %153 = load i8*, i8** %7, align 8
  %154 = getelementptr inbounds i8, i8* %153, i64 2
  store i8* %154, i8** %7, align 8
  br label %155

155:                                              ; preds = %129, %104
  br label %168

156:                                              ; preds = %64
  %157 = load i8*, i8** %7, align 8
  store i8 32, i8* %157, align 1
  %158 = load i8*, i8** %7, align 8
  %159 = getelementptr inbounds i8, i8* %158, i64 1
  store i8 99, i8* %159, align 1
  %160 = load i8*, i8** %7, align 8
  %161 = getelementptr inbounds i8, i8* %160, i64 2
  store i8* %161, i8** %7, align 8
  %162 = load %struct.conn*, %struct.conn** %3, align 8
  %163 = getelementptr inbounds %struct.conn, %struct.conn* %162, i32 0, i32 37
  %164 = load i64, i64* %163, align 8
  %165 = load i8*, i8** %7, align 8
  %166 = call i8* @itoa_u64(i64 %164, i8* %165)
  store i8* %166, i8** %7, align 8
  br label %168

167:                                              ; preds = %64
  br label %168

168:                                              ; preds = %167, %156, %155, %91
  br label %169

169:                                              ; preds = %168
  %170 = load i8*, i8** %9, align 8
  %171 = getelementptr inbounds i8, i8* %170, i32 1
  store i8* %171, i8** %9, align 8
  br label %60, !llvm.loop !159

172:                                              ; preds = %60
  %173 = load i8*, i8** %7, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %173, i8* align 1 getelementptr inbounds ([3 x i8], [3 x i8]* @.str.969, i64 0, i64 0), i64 2, i1 false)
  %174 = load i8*, i8** %7, align 8
  %175 = getelementptr inbounds i8, i8* %174, i64 2
  store i8* %175, i8** %7, align 8
  %176 = load i8*, i8** %7, align 8
  %177 = load %struct._mc_resp*, %struct._mc_resp** %5, align 8
  %178 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %177, i32 0, i32 18
  %179 = getelementptr inbounds [1024 x i8], [1024 x i8]* %178, i64 0, i64 0
  %180 = ptrtoint i8* %176 to i64
  %181 = ptrtoint i8* %179 to i64
  %182 = sub i64 %180, %181
  %183 = trunc i64 %182 to i32
  %184 = load %struct._mc_resp*, %struct._mc_resp** %5, align 8
  %185 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %184, i32 0, i32 2
  store i32 %183, i32* %185, align 8
  %186 = load %struct._mc_resp*, %struct._mc_resp** %5, align 8
  %187 = load i8*, i8** %8, align 8
  %188 = load i8*, i8** %7, align 8
  %189 = load i8*, i8** %8, align 8
  %190 = ptrtoint i8* %188 to i64
  %191 = ptrtoint i8* %189 to i64
  %192 = sub i64 %190, %191
  %193 = trunc i64 %192 to i32
  call void @resp_add_iov(%struct._mc_resp* %186, i8* %187, i32 %193)
  br label %194

194:                                              ; preds = %172, %50
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @try_read_command_asciiauth(%struct.conn* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.conn*, align 8
  %4 = alloca [24 x %struct.iovec], align 16
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  store %struct.conn* %0, %struct.conn** %3, align 8
  store i8* null, i8** %6, align 8
  %9 = load %struct.conn*, %struct.conn** %3, align 8
  %10 = getelementptr inbounds %struct.conn, %struct.conn* %9, i32 0, i32 2
  %11 = load i8, i8* %10, align 4
  %12 = trunc i8 %11 to i1
  br i1 %12, label %104, label %13

13:                                               ; preds = %1
  store i32 0, i32* %8, align 4
  %14 = load %struct.conn*, %struct.conn** %3, align 8
  %15 = getelementptr inbounds %struct.conn, %struct.conn* %14, i32 0, i32 18
  %16 = load i32, i32* %15, align 4
  %17 = icmp slt i32 %16, 2
  br i1 %17, label %18, label %19

18:                                               ; preds = %13
  store i32 0, i32* %2, align 4
  br label %234

19:                                               ; preds = %13
  %20 = load %struct.conn*, %struct.conn** %3, align 8
  %21 = getelementptr inbounds %struct.conn, %struct.conn* %20, i32 0, i32 16
  %22 = load i8*, i8** %21, align 8
  %23 = load %struct.conn*, %struct.conn** %3, align 8
  %24 = getelementptr inbounds %struct.conn, %struct.conn* %23, i32 0, i32 18
  %25 = load i32, i32* %24, align 4
  %26 = sext i32 %25 to i64
  %27 = call i8* @memchr(i8* %22, i32 10, i64 %26) #16
  store i8* %27, i8** %7, align 8
  %28 = load i8*, i8** %7, align 8
  %29 = icmp ne i8* %28, null
  br i1 %29, label %38, label %30

30:                                               ; preds = %19
  %31 = load %struct.conn*, %struct.conn** %3, align 8
  %32 = getelementptr inbounds %struct.conn, %struct.conn* %31, i32 0, i32 18
  %33 = load i32, i32* %32, align 4
  %34 = icmp sgt i32 %33, 2048
  br i1 %34, label %35, label %37

35:                                               ; preds = %30
  %36 = load %struct.conn*, %struct.conn** %3, align 8
  call void @conn_set_state(%struct.conn* %36, i32 8)
  store i32 1, i32* %2, align 4
  br label %234

37:                                               ; preds = %30
  store i32 0, i32* %2, align 4
  br label %234

38:                                               ; preds = %19
  %39 = load i8*, i8** %7, align 8
  store i8 0, i8* %39, align 1
  %40 = load %struct.conn*, %struct.conn** %3, align 8
  %41 = getelementptr inbounds %struct.conn, %struct.conn* %40, i32 0, i32 16
  %42 = load i8*, i8** %41, align 8
  %43 = getelementptr inbounds [24 x %struct.iovec], [24 x %struct.iovec]* %4, i64 0, i64 0
  %44 = call i64 @tokenize_command(i8* %42, %struct.iovec* %43, i64 24)
  store i64 %44, i64* %5, align 8
  %45 = load i8*, i8** %7, align 8
  %46 = load %struct.conn*, %struct.conn** %3, align 8
  %47 = getelementptr inbounds %struct.conn, %struct.conn* %46, i32 0, i32 16
  %48 = load i8*, i8** %47, align 8
  %49 = ptrtoint i8* %45 to i64
  %50 = ptrtoint i8* %48 to i64
  %51 = sub i64 %49, %50
  %52 = add nsw i64 %51, 1
  %53 = load %struct.conn*, %struct.conn** %3, align 8
  %54 = getelementptr inbounds %struct.conn, %struct.conn* %53, i32 0, i32 18
  %55 = load i32, i32* %54, align 4
  %56 = sext i32 %55 to i64
  %57 = sub nsw i64 %56, %52
  %58 = trunc i64 %57 to i32
  store i32 %58, i32* %54, align 4
  %59 = load i8*, i8** %7, align 8
  %60 = load %struct.conn*, %struct.conn** %3, align 8
  %61 = getelementptr inbounds %struct.conn, %struct.conn* %60, i32 0, i32 16
  %62 = load i8*, i8** %61, align 8
  %63 = ptrtoint i8* %59 to i64
  %64 = ptrtoint i8* %62 to i64
  %65 = sub i64 %63, %64
  %66 = add nsw i64 %65, 1
  %67 = load %struct.conn*, %struct.conn** %3, align 8
  %68 = getelementptr inbounds %struct.conn, %struct.conn* %67, i32 0, i32 16
  %69 = load i8*, i8** %68, align 8
  %70 = getelementptr inbounds i8, i8* %69, i64 %66
  store i8* %70, i8** %68, align 8
  %71 = load i64, i64* %5, align 8
  %72 = icmp ult i64 %71, 6
  br i1 %72, label %84, label %73

73:                                               ; preds = %38
  %74 = getelementptr inbounds [24 x %struct.iovec], [24 x %struct.iovec]* %4, i64 0, i64 0
  %75 = getelementptr inbounds %struct.iovec, %struct.iovec* %74, i32 0, i32 0
  %76 = load i8*, i8** %75, align 16
  %77 = call i32 @strcmp(i8* %76, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7.983, i64 0, i64 0)) #16
  %78 = icmp ne i32 %77, 0
  br i1 %78, label %84, label %79

79:                                               ; preds = %73
  %80 = getelementptr inbounds [24 x %struct.iovec], [24 x %struct.iovec]* %4, i64 0, i64 4
  %81 = getelementptr inbounds %struct.iovec, %struct.iovec* %80, i32 0, i32 0
  %82 = load i8*, i8** %81, align 16
  %83 = call zeroext i1 @safe_strtoul(i8* %82, i32* %8)
  br i1 %83, label %97, label %84

84:                                               ; preds = %79, %73, %38
  %85 = load %struct.conn*, %struct.conn** %3, align 8
  %86 = getelementptr inbounds %struct.conn, %struct.conn* %85, i32 0, i32 19
  %87 = load %struct._mc_resp*, %struct._mc_resp** %86, align 8
  %88 = icmp ne %struct._mc_resp* %87, null
  br i1 %88, label %95, label %89

89:                                               ; preds = %84
  %90 = load %struct.conn*, %struct.conn** %3, align 8
  %91 = call zeroext i1 @resp_start(%struct.conn* %90)
  br i1 %91, label %94, label %92

92:                                               ; preds = %89
  %93 = load %struct.conn*, %struct.conn** %3, align 8
  call void @conn_set_state(%struct.conn* %93, i32 8)
  store i32 1, i32* %2, align 4
  br label %234

94:                                               ; preds = %89
  br label %95

95:                                               ; preds = %94, %84
  %96 = load %struct.conn*, %struct.conn** %3, align 8
  call void @out_string(%struct.conn* %96, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.984, i64 0, i64 0))
  store i32 1, i32* %2, align 4
  br label %234

97:                                               ; preds = %79
  %98 = load i32, i32* %8, align 4
  %99 = add i32 %98, 2
  %100 = load %struct.conn*, %struct.conn** %3, align 8
  %101 = getelementptr inbounds %struct.conn, %struct.conn* %100, i32 0, i32 22
  store i32 %99, i32* %101, align 8
  %102 = load %struct.conn*, %struct.conn** %3, align 8
  %103 = getelementptr inbounds %struct.conn, %struct.conn* %102, i32 0, i32 2
  store i8 1, i8* %103, align 4
  br label %104

104:                                              ; preds = %97, %1
  %105 = load %struct.conn*, %struct.conn** %3, align 8
  %106 = getelementptr inbounds %struct.conn, %struct.conn* %105, i32 0, i32 18
  %107 = load i32, i32* %106, align 4
  %108 = load %struct.conn*, %struct.conn** %3, align 8
  %109 = getelementptr inbounds %struct.conn, %struct.conn* %108, i32 0, i32 22
  %110 = load i32, i32* %109, align 8
  %111 = icmp slt i32 %107, %110
  br i1 %111, label %112, label %113

112:                                              ; preds = %104
  store i32 0, i32* %2, align 4
  br label %234

113:                                              ; preds = %104
  %114 = load %struct.conn*, %struct.conn** %3, align 8
  %115 = getelementptr inbounds %struct.conn, %struct.conn* %114, i32 0, i32 19
  %116 = load %struct._mc_resp*, %struct._mc_resp** %115, align 8
  %117 = icmp ne %struct._mc_resp* %116, null
  br i1 %117, label %124, label %118

118:                                              ; preds = %113
  %119 = load %struct.conn*, %struct.conn** %3, align 8
  %120 = call zeroext i1 @resp_start(%struct.conn* %119)
  br i1 %120, label %123, label %121

121:                                              ; preds = %118
  %122 = load %struct.conn*, %struct.conn** %3, align 8
  call void @conn_set_state(%struct.conn* %122, i32 8)
  store i32 1, i32* %2, align 4
  br label %234

123:                                              ; preds = %118
  br label %124

124:                                              ; preds = %123, %113
  %125 = load %struct.conn*, %struct.conn** %3, align 8
  %126 = getelementptr inbounds %struct.conn, %struct.conn* %125, i32 0, i32 16
  %127 = load i8*, i8** %126, align 8
  store i8* %127, i8** %6, align 8
  %128 = load %struct.conn*, %struct.conn** %3, align 8
  %129 = getelementptr inbounds %struct.conn, %struct.conn* %128, i32 0, i32 22
  %130 = load i32, i32* %129, align 8
  %131 = load %struct.conn*, %struct.conn** %3, align 8
  %132 = getelementptr inbounds %struct.conn, %struct.conn* %131, i32 0, i32 18
  %133 = load i32, i32* %132, align 4
  %134 = sub nsw i32 %133, %130
  store i32 %134, i32* %132, align 4
  %135 = load %struct.conn*, %struct.conn** %3, align 8
  %136 = getelementptr inbounds %struct.conn, %struct.conn* %135, i32 0, i32 22
  %137 = load i32, i32* %136, align 8
  %138 = load %struct.conn*, %struct.conn** %3, align 8
  %139 = getelementptr inbounds %struct.conn, %struct.conn* %138, i32 0, i32 16
  %140 = load i8*, i8** %139, align 8
  %141 = sext i32 %137 to i64
  %142 = getelementptr inbounds i8, i8* %140, i64 %141
  store i8* %142, i8** %139, align 8
  %143 = load %struct.conn*, %struct.conn** %3, align 8
  %144 = getelementptr inbounds %struct.conn, %struct.conn* %143, i32 0, i32 2
  store i8 0, i8* %144, align 4
  %145 = load i8*, i8** %6, align 8
  %146 = load %struct.conn*, %struct.conn** %3, align 8
  %147 = getelementptr inbounds %struct.conn, %struct.conn* %146, i32 0, i32 22
  %148 = load i32, i32* %147, align 8
  %149 = sext i32 %148 to i64
  %150 = getelementptr inbounds i8, i8* %145, i64 %149
  %151 = getelementptr inbounds i8, i8* %150, i64 -2
  %152 = call i32 @strncmp(i8* %151, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.969, i64 0, i64 0), i64 2) #16
  %153 = icmp ne i32 %152, 0
  br i1 %153, label %154, label %156

154:                                              ; preds = %124
  %155 = load %struct.conn*, %struct.conn** %3, align 8
  call void @out_string(%struct.conn* %155, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.9.985, i64 0, i64 0))
  store i32 1, i32* %2, align 4
  br label %234

156:                                              ; preds = %124
  %157 = load i8*, i8** %6, align 8
  %158 = load %struct.conn*, %struct.conn** %3, align 8
  %159 = getelementptr inbounds %struct.conn, %struct.conn* %158, i32 0, i32 22
  %160 = load i32, i32* %159, align 8
  %161 = sub nsw i32 %160, 2
  %162 = sext i32 %161 to i64
  %163 = getelementptr inbounds i8, i8* %157, i64 %162
  store i8 0, i8* %163, align 1
  %164 = load i8*, i8** %6, align 8
  %165 = getelementptr inbounds [24 x %struct.iovec], [24 x %struct.iovec]* %4, i64 0, i64 0
  %166 = call i64 @tokenize_command(i8* %164, %struct.iovec* %165, i64 24)
  store i64 %166, i64* %5, align 8
  %167 = load i64, i64* %5, align 8
  %168 = icmp ult i64 %167, 3
  br i1 %168, label %169, label %171

169:                                              ; preds = %156
  %170 = load %struct.conn*, %struct.conn** %3, align 8
  call void @out_string(%struct.conn* %170, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10.986, i64 0, i64 0))
  store i32 1, i32* %2, align 4
  br label %234

171:                                              ; preds = %156
  %172 = getelementptr inbounds [24 x %struct.iovec], [24 x %struct.iovec]* %4, i64 0, i64 0
  %173 = getelementptr inbounds %struct.iovec, %struct.iovec* %172, i32 0, i32 0
  %174 = load i8*, i8** %173, align 16
  %175 = getelementptr inbounds [24 x %struct.iovec], [24 x %struct.iovec]* %4, i64 0, i64 1
  %176 = getelementptr inbounds %struct.iovec, %struct.iovec* %175, i32 0, i32 0
  %177 = load i8*, i8** %176, align 16
  %178 = call i32 @authfile_check(i8* %174, i8* %177)
  %179 = icmp eq i32 %178, 1
  br i1 %179, label %180, label %205

180:                                              ; preds = %171
  %181 = load %struct.conn*, %struct.conn** %3, align 8
  call void @out_string(%struct.conn* %181, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2.971, i64 0, i64 0))
  %182 = load %struct.conn*, %struct.conn** %3, align 8
  %183 = getelementptr inbounds %struct.conn, %struct.conn* %182, i32 0, i32 3
  store i8 1, i8* %183, align 1
  %184 = load %struct.conn*, %struct.conn** %3, align 8
  %185 = getelementptr inbounds %struct.conn, %struct.conn* %184, i32 0, i32 43
  store i32 (%struct.conn*)* @try_read_command_ascii, i32 (%struct.conn*)** %185, align 8
  %186 = load %struct.conn*, %struct.conn** %3, align 8
  %187 = getelementptr inbounds %struct.conn, %struct.conn* %186, i32 0, i32 42
  %188 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %187, align 8
  %189 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %188, i32 0, i32 4
  %190 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %189, i32 0, i32 0
  %191 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %190) #14
  %192 = load %struct.conn*, %struct.conn** %3, align 8
  %193 = getelementptr inbounds %struct.conn, %struct.conn* %192, i32 0, i32 42
  %194 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %193, align 8
  %195 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %194, i32 0, i32 4
  %196 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %195, i32 0, i32 16
  %197 = load i64, i64* %196, align 8
  %198 = add i64 %197, 1
  store i64 %198, i64* %196, align 8
  %199 = load %struct.conn*, %struct.conn** %3, align 8
  %200 = getelementptr inbounds %struct.conn, %struct.conn* %199, i32 0, i32 42
  %201 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %200, align 8
  %202 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %201, i32 0, i32 4
  %203 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %202, i32 0, i32 0
  %204 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %203) #14
  br label %233

205:                                              ; preds = %171
  %206 = load %struct.conn*, %struct.conn** %3, align 8
  call void @out_string(%struct.conn* %206, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11.989, i64 0, i64 0))
  %207 = load %struct.conn*, %struct.conn** %3, align 8
  %208 = getelementptr inbounds %struct.conn, %struct.conn* %207, i32 0, i32 42
  %209 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %208, align 8
  %210 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %209, i32 0, i32 4
  %211 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %210, i32 0, i32 0
  %212 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %211) #14
  %213 = load %struct.conn*, %struct.conn** %3, align 8
  %214 = getelementptr inbounds %struct.conn, %struct.conn* %213, i32 0, i32 42
  %215 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %214, align 8
  %216 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %215, i32 0, i32 4
  %217 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %216, i32 0, i32 16
  %218 = load i64, i64* %217, align 8
  %219 = add i64 %218, 1
  store i64 %219, i64* %217, align 8
  %220 = load %struct.conn*, %struct.conn** %3, align 8
  %221 = getelementptr inbounds %struct.conn, %struct.conn* %220, i32 0, i32 42
  %222 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %221, align 8
  %223 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %222, i32 0, i32 4
  %224 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %223, i32 0, i32 17
  %225 = load i64, i64* %224, align 8
  %226 = add i64 %225, 1
  store i64 %226, i64* %224, align 8
  %227 = load %struct.conn*, %struct.conn** %3, align 8
  %228 = getelementptr inbounds %struct.conn, %struct.conn* %227, i32 0, i32 42
  %229 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %228, align 8
  %230 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %229, i32 0, i32 4
  %231 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %230, i32 0, i32 0
  %232 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %231) #14
  br label %233

233:                                              ; preds = %205, %180
  store i32 1, i32* %2, align 4
  br label %234

234:                                              ; preds = %233, %169, %154, %121, %112, %95, %92, %37, %35, %18
  %235 = load i32, i32* %2, align 4
  ret i32 %235
}

; Function Attrs: nounwind readonly willreturn
declare dso_local i8* @memchr(i8*, i32, i64) #6

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @tokenize_command(i8* %0, %struct.iovec* %1, i64 %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca %struct.iovec*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  store %struct.iovec* %1, %struct.iovec** %5, align 8
  store i64 %2, i64* %6, align 8
  store i64 0, i64* %9, align 8
  %12 = load i8*, i8** %4, align 8
  %13 = call i64 @strlen(i8* %12) #16
  store i64 %13, i64* %10, align 8
  store i32 0, i32* %11, align 4
  %14 = load i8*, i8** %4, align 8
  store i8* %14, i8** %8, align 8
  store i8* %14, i8** %7, align 8
  store i32 0, i32* %11, align 4
  br label %15

15:                                               ; preds = %62, %3
  %16 = load i32, i32* %11, align 4
  %17 = zext i32 %16 to i64
  %18 = load i64, i64* %10, align 8
  %19 = icmp ult i64 %17, %18
  br i1 %19, label %20, label %65

20:                                               ; preds = %15
  %21 = load i8*, i8** %8, align 8
  %22 = load i8, i8* %21, align 1
  %23 = sext i8 %22 to i32
  %24 = icmp eq i32 %23, 32
  br i1 %24, label %25, label %59

25:                                               ; preds = %20
  %26 = load i8*, i8** %7, align 8
  %27 = load i8*, i8** %8, align 8
  %28 = icmp ne i8* %26, %27
  br i1 %28, label %29, label %56

29:                                               ; preds = %25
  %30 = load i8*, i8** %7, align 8
  %31 = load %struct.iovec*, %struct.iovec** %5, align 8
  %32 = load i64, i64* %9, align 8
  %33 = getelementptr inbounds %struct.iovec, %struct.iovec* %31, i64 %32
  %34 = getelementptr inbounds %struct.iovec, %struct.iovec* %33, i32 0, i32 0
  store i8* %30, i8** %34, align 8
  %35 = load i8*, i8** %8, align 8
  %36 = load i8*, i8** %7, align 8
  %37 = ptrtoint i8* %35 to i64
  %38 = ptrtoint i8* %36 to i64
  %39 = sub i64 %37, %38
  %40 = load %struct.iovec*, %struct.iovec** %5, align 8
  %41 = load i64, i64* %9, align 8
  %42 = getelementptr inbounds %struct.iovec, %struct.iovec* %40, i64 %41
  %43 = getelementptr inbounds %struct.iovec, %struct.iovec* %42, i32 0, i32 1
  store i64 %39, i64* %43, align 8
  %44 = load i64, i64* %9, align 8
  %45 = add i64 %44, 1
  store i64 %45, i64* %9, align 8
  %46 = load i8*, i8** %8, align 8
  store i8 0, i8* %46, align 1
  %47 = load i64, i64* %9, align 8
  %48 = load i64, i64* %6, align 8
  %49 = sub i64 %48, 1
  %50 = icmp eq i64 %47, %49
  br i1 %50, label %51, label %55

51:                                               ; preds = %29
  %52 = load i8*, i8** %8, align 8
  %53 = getelementptr inbounds i8, i8* %52, i32 1
  store i8* %53, i8** %8, align 8
  %54 = load i8*, i8** %8, align 8
  store i8* %54, i8** %7, align 8
  br label %65

55:                                               ; preds = %29
  br label %56

56:                                               ; preds = %55, %25
  %57 = load i8*, i8** %8, align 8
  %58 = getelementptr inbounds i8, i8* %57, i64 1
  store i8* %58, i8** %7, align 8
  br label %59

59:                                               ; preds = %56, %20
  %60 = load i8*, i8** %8, align 8
  %61 = getelementptr inbounds i8, i8* %60, i32 1
  store i8* %61, i8** %8, align 8
  br label %62

62:                                               ; preds = %59
  %63 = load i32, i32* %11, align 4
  %64 = add i32 %63, 1
  store i32 %64, i32* %11, align 4
  br label %15, !llvm.loop !160

65:                                               ; preds = %51, %15
  %66 = load i8*, i8** %7, align 8
  %67 = load i8*, i8** %8, align 8
  %68 = icmp ne i8* %66, %67
  br i1 %68, label %69, label %86

69:                                               ; preds = %65
  %70 = load i8*, i8** %7, align 8
  %71 = load %struct.iovec*, %struct.iovec** %5, align 8
  %72 = load i64, i64* %9, align 8
  %73 = getelementptr inbounds %struct.iovec, %struct.iovec* %71, i64 %72
  %74 = getelementptr inbounds %struct.iovec, %struct.iovec* %73, i32 0, i32 0
  store i8* %70, i8** %74, align 8
  %75 = load i8*, i8** %8, align 8
  %76 = load i8*, i8** %7, align 8
  %77 = ptrtoint i8* %75 to i64
  %78 = ptrtoint i8* %76 to i64
  %79 = sub i64 %77, %78
  %80 = load %struct.iovec*, %struct.iovec** %5, align 8
  %81 = load i64, i64* %9, align 8
  %82 = getelementptr inbounds %struct.iovec, %struct.iovec* %80, i64 %81
  %83 = getelementptr inbounds %struct.iovec, %struct.iovec* %82, i32 0, i32 1
  store i64 %79, i64* %83, align 8
  %84 = load i64, i64* %9, align 8
  %85 = add i64 %84, 1
  store i64 %85, i64* %9, align 8
  br label %86

86:                                               ; preds = %69, %65
  %87 = load i8*, i8** %8, align 8
  %88 = load i8, i8* %87, align 1
  %89 = sext i8 %88 to i32
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %86
  br label %94

92:                                               ; preds = %86
  %93 = load i8*, i8** %8, align 8
  br label %94

94:                                               ; preds = %92, %91
  %95 = phi i8* [ null, %91 ], [ %93, %92 ]
  %96 = load %struct.iovec*, %struct.iovec** %5, align 8
  %97 = load i64, i64* %9, align 8
  %98 = getelementptr inbounds %struct.iovec, %struct.iovec* %96, i64 %97
  %99 = getelementptr inbounds %struct.iovec, %struct.iovec* %98, i32 0, i32 0
  store i8* %95, i8** %99, align 8
  %100 = load %struct.iovec*, %struct.iovec** %5, align 8
  %101 = load i64, i64* %9, align 8
  %102 = getelementptr inbounds %struct.iovec, %struct.iovec* %100, i64 %101
  %103 = getelementptr inbounds %struct.iovec, %struct.iovec* %102, i32 0, i32 1
  store i64 0, i64* %103, align 8
  %104 = load i64, i64* %9, align 8
  %105 = add i64 %104, 1
  store i64 %105, i64* %9, align 8
  %106 = load i64, i64* %9, align 8
  ret i64 %106
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @try_read_command_ascii(%struct.conn* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.conn*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  store %struct.conn* %0, %struct.conn** %3, align 8
  %7 = load %struct.conn*, %struct.conn** %3, align 8
  %8 = getelementptr inbounds %struct.conn, %struct.conn* %7, i32 0, i32 18
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %12

11:                                               ; preds = %1
  store i32 0, i32* %2, align 4
  br label %117

12:                                               ; preds = %1
  %13 = load %struct.conn*, %struct.conn** %3, align 8
  %14 = getelementptr inbounds %struct.conn, %struct.conn* %13, i32 0, i32 16
  %15 = load i8*, i8** %14, align 8
  %16 = load %struct.conn*, %struct.conn** %3, align 8
  %17 = getelementptr inbounds %struct.conn, %struct.conn* %16, i32 0, i32 18
  %18 = load i32, i32* %17, align 4
  %19 = sext i32 %18 to i64
  %20 = call i8* @memchr(i8* %15, i32 10, i64 %19) #16
  store i8* %20, i8** %4, align 8
  %21 = load i8*, i8** %4, align 8
  %22 = icmp ne i8* %21, null
  br i1 %22, label %72, label %23

23:                                               ; preds = %12
  %24 = load %struct.conn*, %struct.conn** %3, align 8
  %25 = getelementptr inbounds %struct.conn, %struct.conn* %24, i32 0, i32 18
  %26 = load i32, i32* %25, align 4
  %27 = icmp sgt i32 %26, 2048
  br i1 %27, label %28, label %71

28:                                               ; preds = %23
  %29 = load %struct.conn*, %struct.conn** %3, align 8
  %30 = getelementptr inbounds %struct.conn, %struct.conn* %29, i32 0, i32 16
  %31 = load i8*, i8** %30, align 8
  store i8* %31, i8** %6, align 8
  br label %32

32:                                               ; preds = %37, %28
  %33 = load i8*, i8** %6, align 8
  %34 = load i8, i8* %33, align 1
  %35 = sext i8 %34 to i32
  %36 = icmp eq i32 %35, 32
  br i1 %36, label %37, label %40

37:                                               ; preds = %32
  %38 = load i8*, i8** %6, align 8
  %39 = getelementptr inbounds i8, i8* %38, i32 1
  store i8* %39, i8** %6, align 8
  br label %32, !llvm.loop !161

40:                                               ; preds = %32
  %41 = load i8*, i8** %6, align 8
  %42 = load %struct.conn*, %struct.conn** %3, align 8
  %43 = getelementptr inbounds %struct.conn, %struct.conn* %42, i32 0, i32 16
  %44 = load i8*, i8** %43, align 8
  %45 = ptrtoint i8* %41 to i64
  %46 = ptrtoint i8* %44 to i64
  %47 = sub i64 %45, %46
  %48 = icmp sgt i64 %47, 100
  br i1 %48, label %57, label %49

49:                                               ; preds = %40
  %50 = load i8*, i8** %6, align 8
  %51 = call i32 @strncmp(i8* %50, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12.990, i64 0, i64 0), i64 4) #16
  %52 = icmp ne i32 %51, 0
  br i1 %52, label %53, label %59

53:                                               ; preds = %49
  %54 = load i8*, i8** %6, align 8
  %55 = call i32 @strncmp(i8* %54, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.991, i64 0, i64 0), i64 5) #16
  %56 = icmp ne i32 %55, 0
  br i1 %56, label %57, label %59

57:                                               ; preds = %53, %40
  %58 = load %struct.conn*, %struct.conn** %3, align 8
  call void @conn_set_state(%struct.conn* %58, i32 8)
  store i32 1, i32* %2, align 4
  br label %117

59:                                               ; preds = %53, %49
  %60 = load %struct.conn*, %struct.conn** %3, align 8
  %61 = getelementptr inbounds %struct.conn, %struct.conn* %60, i32 0, i32 7
  %62 = load i8, i8* %61, align 1
  %63 = trunc i8 %62 to i1
  br i1 %63, label %70, label %64

64:                                               ; preds = %59
  %65 = load %struct.conn*, %struct.conn** %3, align 8
  %66 = call zeroext i1 @rbuf_switch_to_malloc(%struct.conn* %65)
  br i1 %66, label %69, label %67

67:                                               ; preds = %64
  %68 = load %struct.conn*, %struct.conn** %3, align 8
  call void @conn_set_state(%struct.conn* %68, i32 8)
  store i32 1, i32* %2, align 4
  br label %117

69:                                               ; preds = %64
  br label %70

70:                                               ; preds = %69, %59
  br label %71

71:                                               ; preds = %70, %23
  store i32 0, i32* %2, align 4
  br label %117

72:                                               ; preds = %12
  %73 = load i8*, i8** %4, align 8
  %74 = getelementptr inbounds i8, i8* %73, i64 1
  store i8* %74, i8** %5, align 8
  %75 = load i8*, i8** %4, align 8
  %76 = load %struct.conn*, %struct.conn** %3, align 8
  %77 = getelementptr inbounds %struct.conn, %struct.conn* %76, i32 0, i32 16
  %78 = load i8*, i8** %77, align 8
  %79 = ptrtoint i8* %75 to i64
  %80 = ptrtoint i8* %78 to i64
  %81 = sub i64 %79, %80
  %82 = icmp sgt i64 %81, 1
  br i1 %82, label %83, label %92

83:                                               ; preds = %72
  %84 = load i8*, i8** %4, align 8
  %85 = getelementptr inbounds i8, i8* %84, i64 -1
  %86 = load i8, i8* %85, align 1
  %87 = sext i8 %86 to i32
  %88 = icmp eq i32 %87, 13
  br i1 %88, label %89, label %92

89:                                               ; preds = %83
  %90 = load i8*, i8** %4, align 8
  %91 = getelementptr inbounds i8, i8* %90, i32 -1
  store i8* %91, i8** %4, align 8
  br label %92

92:                                               ; preds = %89, %83, %72
  %93 = load i8*, i8** %4, align 8
  store i8 0, i8* %93, align 1
  %94 = load volatile i32, i32* @current_time, align 4
  %95 = load %struct.conn*, %struct.conn** %3, align 8
  %96 = getelementptr inbounds %struct.conn, %struct.conn* %95, i32 0, i32 11
  store i32 %94, i32* %96, align 4
  %97 = load %struct.conn*, %struct.conn** %3, align 8
  %98 = load %struct.conn*, %struct.conn** %3, align 8
  %99 = getelementptr inbounds %struct.conn, %struct.conn* %98, i32 0, i32 16
  %100 = load i8*, i8** %99, align 8
  call void @process_command_ascii(%struct.conn* %97, i8* %100)
  %101 = load i8*, i8** %5, align 8
  %102 = load %struct.conn*, %struct.conn** %3, align 8
  %103 = getelementptr inbounds %struct.conn, %struct.conn* %102, i32 0, i32 16
  %104 = load i8*, i8** %103, align 8
  %105 = ptrtoint i8* %101 to i64
  %106 = ptrtoint i8* %104 to i64
  %107 = sub i64 %105, %106
  %108 = load %struct.conn*, %struct.conn** %3, align 8
  %109 = getelementptr inbounds %struct.conn, %struct.conn* %108, i32 0, i32 18
  %110 = load i32, i32* %109, align 4
  %111 = sext i32 %110 to i64
  %112 = sub nsw i64 %111, %107
  %113 = trunc i64 %112 to i32
  store i32 %113, i32* %109, align 4
  %114 = load i8*, i8** %5, align 8
  %115 = load %struct.conn*, %struct.conn** %3, align 8
  %116 = getelementptr inbounds %struct.conn, %struct.conn* %115, i32 0, i32 16
  store i8* %114, i8** %116, align 8
  store i32 1, i32* %2, align 4
  br label %117

117:                                              ; preds = %92, %71, %67, %57, %11
  %118 = load i32, i32* %2, align 4
  ret i32 %118
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @process_command_ascii(%struct.conn* %0, i8* %1) #0 {
  %3 = alloca %struct.conn*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca [24 x %struct.iovec], align 16
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8, align 1
  store %struct.conn* %0, %struct.conn** %3, align 8
  store i8* %1, i8** %4, align 8
  %9 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %10 = icmp sgt i32 %9, 1
  br i1 %10, label %11, label %18

11:                                               ; preds = %2
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %13 = load %struct.conn*, %struct.conn** %3, align 8
  %14 = getelementptr inbounds %struct.conn, %struct.conn* %13, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = load i8*, i8** %4, align 8
  %17 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14.992, i64 0, i64 0), i32 %15, i8* %16)
  br label %18

18:                                               ; preds = %11, %2
  %19 = load %struct.conn*, %struct.conn** %3, align 8
  %20 = call zeroext i1 @resp_start(%struct.conn* %19)
  br i1 %20, label %23, label %21

21:                                               ; preds = %18
  %22 = load %struct.conn*, %struct.conn** %3, align 8
  call void @conn_set_state(%struct.conn* %22, i32 8)
  br label %577

23:                                               ; preds = %18
  %24 = load i8*, i8** %4, align 8
  %25 = getelementptr inbounds [24 x %struct.iovec], [24 x %struct.iovec]* %5, i64 0, i64 0
  %26 = call i64 @tokenize_command(i8* %24, %struct.iovec* %25, i64 24)
  store i64 %26, i64* %6, align 8
  %27 = load i64, i64* %6, align 8
  %28 = icmp ult i64 %27, 2
  br i1 %28, label %34, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds [24 x %struct.iovec], [24 x %struct.iovec]* %5, i64 0, i64 0
  %31 = getelementptr inbounds %struct.iovec, %struct.iovec* %30, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = icmp ult i64 %32, 2
  br i1 %33, label %34, label %36

34:                                               ; preds = %29, %23
  %35 = load %struct.conn*, %struct.conn** %3, align 8
  call void @out_string(%struct.conn* %35, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15.993, i64 0, i64 0))
  br label %577

36:                                               ; preds = %29
  %37 = getelementptr inbounds [24 x %struct.iovec], [24 x %struct.iovec]* %5, i64 0, i64 0
  %38 = getelementptr inbounds %struct.iovec, %struct.iovec* %37, i32 0, i32 0
  %39 = load i8*, i8** %38, align 16
  %40 = getelementptr inbounds i8, i8* %39, i64 0
  %41 = load i8, i8* %40, align 1
  store i8 %41, i8* %8, align 1
  %42 = load i8, i8* %8, align 1
  %43 = sext i8 %42 to i32
  %44 = icmp eq i32 %43, 109
  br i1 %44, label %45, label %83

45:                                               ; preds = %36
  %46 = getelementptr inbounds [24 x %struct.iovec], [24 x %struct.iovec]* %5, i64 0, i64 0
  %47 = getelementptr inbounds %struct.iovec, %struct.iovec* %46, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = icmp eq i64 %48, 2
  br i1 %49, label %50, label %83

50:                                               ; preds = %45
  %51 = getelementptr inbounds [24 x %struct.iovec], [24 x %struct.iovec]* %5, i64 0, i64 0
  %52 = getelementptr inbounds %struct.iovec, %struct.iovec* %51, i32 0, i32 0
  %53 = load i8*, i8** %52, align 16
  %54 = getelementptr inbounds i8, i8* %53, i64 1
  %55 = load i8, i8* %54, align 1
  %56 = sext i8 %55 to i32
  switch i32 %56, label %80 [
    i32 103, label %57
    i32 115, label %61
    i32 100, label %65
    i32 110, label %69
    i32 97, label %72
    i32 101, label %76
  ]

57:                                               ; preds = %50
  %58 = load %struct.conn*, %struct.conn** %3, align 8
  %59 = getelementptr inbounds [24 x %struct.iovec], [24 x %struct.iovec]* %5, i64 0, i64 0
  %60 = load i64, i64* %6, align 8
  call void @process_mget_command(%struct.conn* %58, %struct.iovec* %59, i64 %60)
  br label %82

61:                                               ; preds = %50
  %62 = load %struct.conn*, %struct.conn** %3, align 8
  %63 = getelementptr inbounds [24 x %struct.iovec], [24 x %struct.iovec]* %5, i64 0, i64 0
  %64 = load i64, i64* %6, align 8
  call void @process_mset_command(%struct.conn* %62, %struct.iovec* %63, i64 %64)
  br label %82

65:                                               ; preds = %50
  %66 = load %struct.conn*, %struct.conn** %3, align 8
  %67 = getelementptr inbounds [24 x %struct.iovec], [24 x %struct.iovec]* %5, i64 0, i64 0
  %68 = load i64, i64* %6, align 8
  call void @process_mdelete_command(%struct.conn* %66, %struct.iovec* %67, i64 %68)
  br label %82

69:                                               ; preds = %50
  %70 = load %struct.conn*, %struct.conn** %3, align 8
  call void @out_string(%struct.conn* %70, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.16.994, i64 0, i64 0))
  %71 = load %struct.conn*, %struct.conn** %3, align 8
  call void @conn_set_state(%struct.conn* %71, i32 9)
  br label %82

72:                                               ; preds = %50
  %73 = load %struct.conn*, %struct.conn** %3, align 8
  %74 = getelementptr inbounds [24 x %struct.iovec], [24 x %struct.iovec]* %5, i64 0, i64 0
  %75 = load i64, i64* %6, align 8
  call void @process_marithmetic_command(%struct.conn* %73, %struct.iovec* %74, i64 %75)
  br label %82

76:                                               ; preds = %50
  %77 = load %struct.conn*, %struct.conn** %3, align 8
  %78 = getelementptr inbounds [24 x %struct.iovec], [24 x %struct.iovec]* %5, i64 0, i64 0
  %79 = load i64, i64* %6, align 8
  call void @process_meta_command(%struct.conn* %77, %struct.iovec* %78, i64 %79)
  br label %82

80:                                               ; preds = %50
  %81 = load %struct.conn*, %struct.conn** %3, align 8
  call void @out_string(%struct.conn* %81, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15.993, i64 0, i64 0))
  br label %82

82:                                               ; preds = %80, %76, %72, %69, %65, %61, %57
  br label %576

83:                                               ; preds = %45, %36
  %84 = load i8, i8* %8, align 1
  %85 = sext i8 %84 to i32
  %86 = icmp eq i32 %85, 103
  br i1 %86, label %87, label %140

87:                                               ; preds = %83
  br label %88

88:                                               ; preds = %87
  %89 = load i64, i64* %6, align 8
  %90 = icmp ult i64 %89, 3
  br i1 %90, label %91, label %93

91:                                               ; preds = %88
  %92 = load %struct.conn*, %struct.conn** %3, align 8
  call void @out_string(%struct.conn* %92, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15.993, i64 0, i64 0))
  br label %577

93:                                               ; preds = %88
  br label %94

94:                                               ; preds = %93
  %95 = getelementptr inbounds [24 x %struct.iovec], [24 x %struct.iovec]* %5, i64 0, i64 0
  %96 = getelementptr inbounds %struct.iovec, %struct.iovec* %95, i32 0, i32 0
  %97 = load i8*, i8** %96, align 16
  %98 = call i32 @strcmp(i8* %97, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17.995, i64 0, i64 0)) #16
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %104

100:                                              ; preds = %94
  %101 = load %struct.conn*, %struct.conn** %3, align 8
  %102 = getelementptr inbounds [24 x %struct.iovec], [24 x %struct.iovec]* %5, i64 0, i64 0
  %103 = load i64, i64* %6, align 8
  call void @process_get_command(%struct.conn* %101, %struct.iovec* %102, i64 %103, i1 zeroext false, i1 zeroext false)
  br label %139

104:                                              ; preds = %94
  %105 = getelementptr inbounds [24 x %struct.iovec], [24 x %struct.iovec]* %5, i64 0, i64 0
  %106 = getelementptr inbounds %struct.iovec, %struct.iovec* %105, i32 0, i32 0
  %107 = load i8*, i8** %106, align 16
  %108 = call i32 @strcmp(i8* %107, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18.996, i64 0, i64 0)) #16
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %114

110:                                              ; preds = %104
  %111 = load %struct.conn*, %struct.conn** %3, align 8
  %112 = getelementptr inbounds [24 x %struct.iovec], [24 x %struct.iovec]* %5, i64 0, i64 0
  %113 = load i64, i64* %6, align 8
  call void @process_get_command(%struct.conn* %111, %struct.iovec* %112, i64 %113, i1 zeroext true, i1 zeroext false)
  br label %138

114:                                              ; preds = %104
  %115 = getelementptr inbounds [24 x %struct.iovec], [24 x %struct.iovec]* %5, i64 0, i64 0
  %116 = getelementptr inbounds %struct.iovec, %struct.iovec* %115, i32 0, i32 0
  %117 = load i8*, i8** %116, align 16
  %118 = call i32 @strcmp(i8* %117, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19.997, i64 0, i64 0)) #16
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %124

120:                                              ; preds = %114
  %121 = load %struct.conn*, %struct.conn** %3, align 8
  %122 = getelementptr inbounds [24 x %struct.iovec], [24 x %struct.iovec]* %5, i64 0, i64 0
  %123 = load i64, i64* %6, align 8
  call void @process_get_command(%struct.conn* %121, %struct.iovec* %122, i64 %123, i1 zeroext false, i1 zeroext true)
  br label %137

124:                                              ; preds = %114
  %125 = getelementptr inbounds [24 x %struct.iovec], [24 x %struct.iovec]* %5, i64 0, i64 0
  %126 = getelementptr inbounds %struct.iovec, %struct.iovec* %125, i32 0, i32 0
  %127 = load i8*, i8** %126, align 16
  %128 = call i32 @strcmp(i8* %127, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.20.998, i64 0, i64 0)) #16
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %134

130:                                              ; preds = %124
  %131 = load %struct.conn*, %struct.conn** %3, align 8
  %132 = getelementptr inbounds [24 x %struct.iovec], [24 x %struct.iovec]* %5, i64 0, i64 0
  %133 = load i64, i64* %6, align 8
  call void @process_get_command(%struct.conn* %131, %struct.iovec* %132, i64 %133, i1 zeroext true, i1 zeroext true)
  br label %136

134:                                              ; preds = %124
  %135 = load %struct.conn*, %struct.conn** %3, align 8
  call void @out_string(%struct.conn* %135, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15.993, i64 0, i64 0))
  br label %136

136:                                              ; preds = %134, %130
  br label %137

137:                                              ; preds = %136, %120
  br label %138

138:                                              ; preds = %137, %110
  br label %139

139:                                              ; preds = %138, %100
  br label %575

140:                                              ; preds = %83
  %141 = load i8, i8* %8, align 1
  %142 = sext i8 %141 to i32
  %143 = icmp eq i32 %142, 115
  br i1 %143, label %144, label %202

144:                                              ; preds = %140
  %145 = getelementptr inbounds [24 x %struct.iovec], [24 x %struct.iovec]* %5, i64 0, i64 0
  %146 = getelementptr inbounds %struct.iovec, %struct.iovec* %145, i32 0, i32 0
  %147 = load i8*, i8** %146, align 16
  %148 = call i32 @strcmp(i8* %147, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7.983, i64 0, i64 0)) #16
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %166

150:                                              ; preds = %144
  store i32 2, i32* %7, align 4
  br i1 true, label %151, label %166

151:                                              ; preds = %150
  br label %152

152:                                              ; preds = %151
  %153 = load i64, i64* %6, align 8
  %154 = icmp ne i64 %153, 6
  br i1 %154, label %155, label %160

155:                                              ; preds = %152
  %156 = load i64, i64* %6, align 8
  %157 = icmp ne i64 %156, 7
  br i1 %157, label %158, label %160

158:                                              ; preds = %155
  %159 = load %struct.conn*, %struct.conn** %3, align 8
  call void @out_string(%struct.conn* %159, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15.993, i64 0, i64 0))
  br label %577

160:                                              ; preds = %155, %152
  br label %161

161:                                              ; preds = %160
  %162 = load %struct.conn*, %struct.conn** %3, align 8
  %163 = getelementptr inbounds [24 x %struct.iovec], [24 x %struct.iovec]* %5, i64 0, i64 0
  %164 = load i64, i64* %6, align 8
  %165 = load i32, i32* %7, align 4
  call void @process_update_command(%struct.conn* %162, %struct.iovec* %163, i64 %164, i32 %165, i1 zeroext false)
  br label %201

166:                                              ; preds = %150, %144
  %167 = getelementptr inbounds [24 x %struct.iovec], [24 x %struct.iovec]* %5, i64 0, i64 0
  %168 = getelementptr inbounds %struct.iovec, %struct.iovec* %167, i32 0, i32 0
  %169 = load i8*, i8** %168, align 16
  %170 = call i32 @strcmp(i8* %169, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21.999, i64 0, i64 0)) #16
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %172, label %176

172:                                              ; preds = %166
  %173 = load %struct.conn*, %struct.conn** %3, align 8
  %174 = getelementptr inbounds [24 x %struct.iovec], [24 x %struct.iovec]* %5, i64 0, i64 0
  %175 = load i64, i64* %6, align 8
  call void @process_stat(%struct.conn* %173, %struct.iovec* %174, i64 %175)
  br label %200

176:                                              ; preds = %166
  %177 = getelementptr inbounds [24 x %struct.iovec], [24 x %struct.iovec]* %5, i64 0, i64 0
  %178 = getelementptr inbounds %struct.iovec, %struct.iovec* %177, i32 0, i32 0
  %179 = load i8*, i8** %178, align 16
  %180 = call i32 @strcmp(i8* %179, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.22.1000, i64 0, i64 0)) #16
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %182, label %186

182:                                              ; preds = %176
  %183 = load %struct.conn*, %struct.conn** %3, align 8
  %184 = getelementptr inbounds [24 x %struct.iovec], [24 x %struct.iovec]* %5, i64 0, i64 0
  %185 = load i64, i64* %6, align 8
  call void @process_shutdown_command(%struct.conn* %183, %struct.iovec* %184, i64 %185)
  br label %199

186:                                              ; preds = %176
  %187 = getelementptr inbounds [24 x %struct.iovec], [24 x %struct.iovec]* %5, i64 0, i64 0
  %188 = getelementptr inbounds %struct.iovec, %struct.iovec* %187, i32 0, i32 0
  %189 = load i8*, i8** %188, align 16
  %190 = call i32 @strcmp(i8* %189, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.23.1001, i64 0, i64 0)) #16
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %192, label %196

192:                                              ; preds = %186
  %193 = load %struct.conn*, %struct.conn** %3, align 8
  %194 = getelementptr inbounds [24 x %struct.iovec], [24 x %struct.iovec]* %5, i64 0, i64 0
  %195 = load i64, i64* %6, align 8
  call void @process_slabs_command(%struct.conn* %193, %struct.iovec* %194, i64 %195)
  br label %198

196:                                              ; preds = %186
  %197 = load %struct.conn*, %struct.conn** %3, align 8
  call void @out_string(%struct.conn* %197, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15.993, i64 0, i64 0))
  br label %198

198:                                              ; preds = %196, %192
  br label %199

199:                                              ; preds = %198, %182
  br label %200

200:                                              ; preds = %199, %172
  br label %201

201:                                              ; preds = %200, %161
  br label %574

202:                                              ; preds = %140
  %203 = load i8, i8* %8, align 1
  %204 = sext i8 %203 to i32
  %205 = icmp eq i32 %204, 97
  br i1 %205, label %206, label %238

206:                                              ; preds = %202
  %207 = getelementptr inbounds [24 x %struct.iovec], [24 x %struct.iovec]* %5, i64 0, i64 0
  %208 = getelementptr inbounds %struct.iovec, %struct.iovec* %207, i32 0, i32 0
  %209 = load i8*, i8** %208, align 16
  %210 = call i32 @strcmp(i8* %209, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.24.1002, i64 0, i64 0)) #16
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %212, label %213

212:                                              ; preds = %206
  store i32 1, i32* %7, align 4
  br i1 true, label %220, label %213

213:                                              ; preds = %212, %206
  %214 = getelementptr inbounds [24 x %struct.iovec], [24 x %struct.iovec]* %5, i64 0, i64 0
  %215 = getelementptr inbounds %struct.iovec, %struct.iovec* %214, i32 0, i32 0
  %216 = load i8*, i8** %215, align 16
  %217 = call i32 @strcmp(i8* %216, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.25.1003, i64 0, i64 0)) #16
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %219, label %235

219:                                              ; preds = %213
  store i32 4, i32* %7, align 4
  br i1 true, label %220, label %235

220:                                              ; preds = %219, %212
  br label %221

221:                                              ; preds = %220
  %222 = load i64, i64* %6, align 8
  %223 = icmp ne i64 %222, 6
  br i1 %223, label %224, label %229

224:                                              ; preds = %221
  %225 = load i64, i64* %6, align 8
  %226 = icmp ne i64 %225, 7
  br i1 %226, label %227, label %229

227:                                              ; preds = %224
  %228 = load %struct.conn*, %struct.conn** %3, align 8
  call void @out_string(%struct.conn* %228, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15.993, i64 0, i64 0))
  br label %577

229:                                              ; preds = %224, %221
  br label %230

230:                                              ; preds = %229
  %231 = load %struct.conn*, %struct.conn** %3, align 8
  %232 = getelementptr inbounds [24 x %struct.iovec], [24 x %struct.iovec]* %5, i64 0, i64 0
  %233 = load i64, i64* %6, align 8
  %234 = load i32, i32* %7, align 4
  call void @process_update_command(%struct.conn* %231, %struct.iovec* %232, i64 %233, i32 %234, i1 zeroext false)
  br label %237

235:                                              ; preds = %219, %213
  %236 = load %struct.conn*, %struct.conn** %3, align 8
  call void @out_string(%struct.conn* %236, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15.993, i64 0, i64 0))
  br label %237

237:                                              ; preds = %235, %230
  br label %573

238:                                              ; preds = %202
  %239 = load i8, i8* %8, align 1
  %240 = sext i8 %239 to i32
  %241 = icmp eq i32 %240, 99
  br i1 %241, label %242, label %288

242:                                              ; preds = %238
  %243 = getelementptr inbounds [24 x %struct.iovec], [24 x %struct.iovec]* %5, i64 0, i64 0
  %244 = getelementptr inbounds %struct.iovec, %struct.iovec* %243, i32 0, i32 0
  %245 = load i8*, i8** %244, align 16
  %246 = call i32 @strcmp(i8* %245, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.26.1004, i64 0, i64 0)) #16
  %247 = icmp eq i32 %246, 0
  br i1 %247, label %248, label %264

248:                                              ; preds = %242
  store i32 6, i32* %7, align 4
  br i1 true, label %249, label %264

249:                                              ; preds = %248
  br label %250

250:                                              ; preds = %249
  %251 = load i64, i64* %6, align 8
  %252 = icmp ne i64 %251, 7
  br i1 %252, label %253, label %258

253:                                              ; preds = %250
  %254 = load i64, i64* %6, align 8
  %255 = icmp ne i64 %254, 8
  br i1 %255, label %256, label %258

256:                                              ; preds = %253
  %257 = load %struct.conn*, %struct.conn** %3, align 8
  call void @out_string(%struct.conn* %257, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15.993, i64 0, i64 0))
  br label %577

258:                                              ; preds = %253, %250
  br label %259

259:                                              ; preds = %258
  %260 = load %struct.conn*, %struct.conn** %3, align 8
  %261 = getelementptr inbounds [24 x %struct.iovec], [24 x %struct.iovec]* %5, i64 0, i64 0
  %262 = load i64, i64* %6, align 8
  %263 = load i32, i32* %7, align 4
  call void @process_update_command(%struct.conn* %260, %struct.iovec* %261, i64 %262, i32 %263, i1 zeroext true)
  br label %287

264:                                              ; preds = %248, %242
  %265 = getelementptr inbounds [24 x %struct.iovec], [24 x %struct.iovec]* %5, i64 0, i64 0
  %266 = getelementptr inbounds %struct.iovec, %struct.iovec* %265, i32 0, i32 0
  %267 = load i8*, i8** %266, align 16
  %268 = call i32 @strcmp(i8* %267, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.27.1005, i64 0, i64 0)) #16
  %269 = icmp eq i32 %268, 0
  br i1 %269, label %270, label %284

270:                                              ; preds = %264
  br label %271

271:                                              ; preds = %270
  %272 = load i64, i64* %6, align 8
  %273 = icmp ne i64 %272, 3
  br i1 %273, label %274, label %279

274:                                              ; preds = %271
  %275 = load i64, i64* %6, align 8
  %276 = icmp ne i64 %275, 4
  br i1 %276, label %277, label %279

277:                                              ; preds = %274
  %278 = load %struct.conn*, %struct.conn** %3, align 8
  call void @out_string(%struct.conn* %278, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15.993, i64 0, i64 0))
  br label %577

279:                                              ; preds = %274, %271
  br label %280

280:                                              ; preds = %279
  %281 = load %struct.conn*, %struct.conn** %3, align 8
  %282 = getelementptr inbounds [24 x %struct.iovec], [24 x %struct.iovec]* %5, i64 0, i64 0
  %283 = load i64, i64* %6, align 8
  call void @process_memlimit_command(%struct.conn* %281, %struct.iovec* %282, i64 %283)
  br label %286

284:                                              ; preds = %264
  %285 = load %struct.conn*, %struct.conn** %3, align 8
  call void @out_string(%struct.conn* %285, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15.993, i64 0, i64 0))
  br label %286

286:                                              ; preds = %284, %280
  br label %287

287:                                              ; preds = %286, %259
  br label %572

288:                                              ; preds = %238
  %289 = load i8, i8* %8, align 1
  %290 = sext i8 %289 to i32
  %291 = icmp eq i32 %290, 105
  br i1 %291, label %292, label %315

292:                                              ; preds = %288
  %293 = getelementptr inbounds [24 x %struct.iovec], [24 x %struct.iovec]* %5, i64 0, i64 0
  %294 = getelementptr inbounds %struct.iovec, %struct.iovec* %293, i32 0, i32 0
  %295 = load i8*, i8** %294, align 16
  %296 = call i32 @strcmp(i8* %295, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28.1006, i64 0, i64 0)) #16
  %297 = icmp eq i32 %296, 0
  br i1 %297, label %298, label %312

298:                                              ; preds = %292
  br label %299

299:                                              ; preds = %298
  %300 = load i64, i64* %6, align 8
  %301 = icmp ne i64 %300, 4
  br i1 %301, label %302, label %307

302:                                              ; preds = %299
  %303 = load i64, i64* %6, align 8
  %304 = icmp ne i64 %303, 5
  br i1 %304, label %305, label %307

305:                                              ; preds = %302
  %306 = load %struct.conn*, %struct.conn** %3, align 8
  call void @out_string(%struct.conn* %306, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15.993, i64 0, i64 0))
  br label %577

307:                                              ; preds = %302, %299
  br label %308

308:                                              ; preds = %307
  %309 = load %struct.conn*, %struct.conn** %3, align 8
  %310 = getelementptr inbounds [24 x %struct.iovec], [24 x %struct.iovec]* %5, i64 0, i64 0
  %311 = load i64, i64* %6, align 8
  call void @process_arithmetic_command(%struct.conn* %309, %struct.iovec* %310, i64 %311, i1 zeroext true)
  br label %314

312:                                              ; preds = %292
  %313 = load %struct.conn*, %struct.conn** %3, align 8
  call void @out_string(%struct.conn* %313, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15.993, i64 0, i64 0))
  br label %314

314:                                              ; preds = %312, %308
  br label %571

315:                                              ; preds = %288
  %316 = load i8, i8* %8, align 1
  %317 = sext i8 %316 to i32
  %318 = icmp eq i32 %317, 100
  br i1 %318, label %319, label %363

319:                                              ; preds = %315
  %320 = getelementptr inbounds [24 x %struct.iovec], [24 x %struct.iovec]* %5, i64 0, i64 0
  %321 = getelementptr inbounds %struct.iovec, %struct.iovec* %320, i32 0, i32 0
  %322 = load i8*, i8** %321, align 16
  %323 = call i32 @strcmp(i8* %322, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.29.1007, i64 0, i64 0)) #16
  %324 = icmp eq i32 %323, 0
  br i1 %324, label %325, label %339

325:                                              ; preds = %319
  br label %326

326:                                              ; preds = %325
  %327 = load i64, i64* %6, align 8
  %328 = icmp ult i64 %327, 3
  br i1 %328, label %332, label %329

329:                                              ; preds = %326
  %330 = load i64, i64* %6, align 8
  %331 = icmp ugt i64 %330, 5
  br i1 %331, label %332, label %334

332:                                              ; preds = %329, %326
  %333 = load %struct.conn*, %struct.conn** %3, align 8
  call void @out_string(%struct.conn* %333, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15.993, i64 0, i64 0))
  br label %577

334:                                              ; preds = %329
  br label %335

335:                                              ; preds = %334
  %336 = load %struct.conn*, %struct.conn** %3, align 8
  %337 = getelementptr inbounds [24 x %struct.iovec], [24 x %struct.iovec]* %5, i64 0, i64 0
  %338 = load i64, i64* %6, align 8
  call void @process_delete_command(%struct.conn* %336, %struct.iovec* %337, i64 %338)
  br label %362

339:                                              ; preds = %319
  %340 = getelementptr inbounds [24 x %struct.iovec], [24 x %struct.iovec]* %5, i64 0, i64 0
  %341 = getelementptr inbounds %struct.iovec, %struct.iovec* %340, i32 0, i32 0
  %342 = load i8*, i8** %341, align 16
  %343 = call i32 @strcmp(i8* %342, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.30.1008, i64 0, i64 0)) #16
  %344 = icmp eq i32 %343, 0
  br i1 %344, label %345, label %359

345:                                              ; preds = %339
  br label %346

346:                                              ; preds = %345
  %347 = load i64, i64* %6, align 8
  %348 = icmp ne i64 %347, 4
  br i1 %348, label %349, label %354

349:                                              ; preds = %346
  %350 = load i64, i64* %6, align 8
  %351 = icmp ne i64 %350, 5
  br i1 %351, label %352, label %354

352:                                              ; preds = %349
  %353 = load %struct.conn*, %struct.conn** %3, align 8
  call void @out_string(%struct.conn* %353, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15.993, i64 0, i64 0))
  br label %577

354:                                              ; preds = %349, %346
  br label %355

355:                                              ; preds = %354
  %356 = load %struct.conn*, %struct.conn** %3, align 8
  %357 = getelementptr inbounds [24 x %struct.iovec], [24 x %struct.iovec]* %5, i64 0, i64 0
  %358 = load i64, i64* %6, align 8
  call void @process_arithmetic_command(%struct.conn* %356, %struct.iovec* %357, i64 %358, i1 zeroext false)
  br label %361

359:                                              ; preds = %339
  %360 = load %struct.conn*, %struct.conn** %3, align 8
  call void @out_string(%struct.conn* %360, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15.993, i64 0, i64 0))
  br label %361

361:                                              ; preds = %359, %355
  br label %362

362:                                              ; preds = %361, %335
  br label %570

363:                                              ; preds = %315
  %364 = load i8, i8* %8, align 1
  %365 = sext i8 %364 to i32
  %366 = icmp eq i32 %365, 116
  br i1 %366, label %367, label %390

367:                                              ; preds = %363
  %368 = getelementptr inbounds [24 x %struct.iovec], [24 x %struct.iovec]* %5, i64 0, i64 0
  %369 = getelementptr inbounds %struct.iovec, %struct.iovec* %368, i32 0, i32 0
  %370 = load i8*, i8** %369, align 16
  %371 = call i32 @strcmp(i8* %370, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.31.1009, i64 0, i64 0)) #16
  %372 = icmp eq i32 %371, 0
  br i1 %372, label %373, label %387

373:                                              ; preds = %367
  br label %374

374:                                              ; preds = %373
  %375 = load i64, i64* %6, align 8
  %376 = icmp ne i64 %375, 4
  br i1 %376, label %377, label %382

377:                                              ; preds = %374
  %378 = load i64, i64* %6, align 8
  %379 = icmp ne i64 %378, 5
  br i1 %379, label %380, label %382

380:                                              ; preds = %377
  %381 = load %struct.conn*, %struct.conn** %3, align 8
  call void @out_string(%struct.conn* %381, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15.993, i64 0, i64 0))
  br label %577

382:                                              ; preds = %377, %374
  br label %383

383:                                              ; preds = %382
  %384 = load %struct.conn*, %struct.conn** %3, align 8
  %385 = getelementptr inbounds [24 x %struct.iovec], [24 x %struct.iovec]* %5, i64 0, i64 0
  %386 = load i64, i64* %6, align 8
  call void @process_touch_command(%struct.conn* %384, %struct.iovec* %385, i64 %386)
  br label %389

387:                                              ; preds = %367
  %388 = load %struct.conn*, %struct.conn** %3, align 8
  call void @out_string(%struct.conn* %388, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15.993, i64 0, i64 0))
  br label %389

389:                                              ; preds = %387, %383
  br label %569

390:                                              ; preds = %363
  %391 = getelementptr inbounds [24 x %struct.iovec], [24 x %struct.iovec]* %5, i64 0, i64 0
  %392 = getelementptr inbounds %struct.iovec, %struct.iovec* %391, i32 0, i32 0
  %393 = load i8*, i8** %392, align 16
  %394 = call i32 @strcmp(i8* %393, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.32.1010, i64 0, i64 0)) #16
  %395 = icmp eq i32 %394, 0
  br i1 %395, label %396, label %397

396:                                              ; preds = %390
  store i32 3, i32* %7, align 4
  br i1 true, label %404, label %397

397:                                              ; preds = %396, %390
  %398 = getelementptr inbounds [24 x %struct.iovec], [24 x %struct.iovec]* %5, i64 0, i64 0
  %399 = getelementptr inbounds %struct.iovec, %struct.iovec* %398, i32 0, i32 0
  %400 = load i8*, i8** %399, align 16
  %401 = call i32 @strcmp(i8* %400, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.33.1011, i64 0, i64 0)) #16
  %402 = icmp eq i32 %401, 0
  br i1 %402, label %403, label %419

403:                                              ; preds = %397
  store i32 5, i32* %7, align 4
  br i1 true, label %404, label %419

404:                                              ; preds = %403, %396
  br label %405

405:                                              ; preds = %404
  %406 = load i64, i64* %6, align 8
  %407 = icmp ne i64 %406, 6
  br i1 %407, label %408, label %413

408:                                              ; preds = %405
  %409 = load i64, i64* %6, align 8
  %410 = icmp ne i64 %409, 7
  br i1 %410, label %411, label %413

411:                                              ; preds = %408
  %412 = load %struct.conn*, %struct.conn** %3, align 8
  call void @out_string(%struct.conn* %412, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15.993, i64 0, i64 0))
  br label %577

413:                                              ; preds = %408, %405
  br label %414

414:                                              ; preds = %413
  %415 = load %struct.conn*, %struct.conn** %3, align 8
  %416 = getelementptr inbounds [24 x %struct.iovec], [24 x %struct.iovec]* %5, i64 0, i64 0
  %417 = load i64, i64* %6, align 8
  %418 = load i32, i32* %7, align 4
  call void @process_update_command(%struct.conn* %415, %struct.iovec* %416, i64 %417, i32 %418, i1 zeroext false)
  br label %568

419:                                              ; preds = %403, %397
  %420 = getelementptr inbounds [24 x %struct.iovec], [24 x %struct.iovec]* %5, i64 0, i64 0
  %421 = getelementptr inbounds %struct.iovec, %struct.iovec* %420, i32 0, i32 0
  %422 = load i8*, i8** %421, align 16
  %423 = call i32 @strcmp(i8* %422, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.34.1012, i64 0, i64 0)) #16
  %424 = icmp eq i32 %423, 0
  br i1 %424, label %425, label %436

425:                                              ; preds = %419
  br label %426

426:                                              ; preds = %425
  %427 = load i64, i64* %6, align 8
  %428 = icmp ult i64 %427, 3
  br i1 %428, label %429, label %431

429:                                              ; preds = %426
  %430 = load %struct.conn*, %struct.conn** %3, align 8
  call void @out_string(%struct.conn* %430, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15.993, i64 0, i64 0))
  br label %577

431:                                              ; preds = %426
  br label %432

432:                                              ; preds = %431
  %433 = load %struct.conn*, %struct.conn** %3, align 8
  %434 = getelementptr inbounds [24 x %struct.iovec], [24 x %struct.iovec]* %5, i64 0, i64 0
  %435 = load i64, i64* %6, align 8
  call void @process_get_command(%struct.conn* %433, %struct.iovec* %434, i64 %435, i1 zeroext false, i1 zeroext false)
  br label %567

436:                                              ; preds = %419
  %437 = getelementptr inbounds [24 x %struct.iovec], [24 x %struct.iovec]* %5, i64 0, i64 0
  %438 = getelementptr inbounds %struct.iovec, %struct.iovec* %437, i32 0, i32 0
  %439 = load i8*, i8** %438, align 16
  %440 = call i32 @strcmp(i8* %439, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.35.1013, i64 0, i64 0)) #16
  %441 = icmp eq i32 %440, 0
  br i1 %441, label %442, label %456

442:                                              ; preds = %436
  br label %443

443:                                              ; preds = %442
  %444 = load i64, i64* %6, align 8
  %445 = icmp ult i64 %444, 2
  br i1 %445, label %449, label %446

446:                                              ; preds = %443
  %447 = load i64, i64* %6, align 8
  %448 = icmp ugt i64 %447, 4
  br i1 %448, label %449, label %451

449:                                              ; preds = %446, %443
  %450 = load %struct.conn*, %struct.conn** %3, align 8
  call void @out_string(%struct.conn* %450, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15.993, i64 0, i64 0))
  br label %577

451:                                              ; preds = %446
  br label %452

452:                                              ; preds = %451
  %453 = load %struct.conn*, %struct.conn** %3, align 8
  %454 = getelementptr inbounds [24 x %struct.iovec], [24 x %struct.iovec]* %5, i64 0, i64 0
  %455 = load i64, i64* %6, align 8
  call void @process_flush_all_command(%struct.conn* %453, %struct.iovec* %454, i64 %455)
  br label %566

456:                                              ; preds = %436
  %457 = getelementptr inbounds [24 x %struct.iovec], [24 x %struct.iovec]* %5, i64 0, i64 0
  %458 = getelementptr inbounds %struct.iovec, %struct.iovec* %457, i32 0, i32 0
  %459 = load i8*, i8** %458, align 16
  %460 = call i32 @strcmp(i8* %459, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.36.1014, i64 0, i64 0)) #16
  %461 = icmp eq i32 %460, 0
  br i1 %461, label %462, label %464

462:                                              ; preds = %456
  %463 = load %struct.conn*, %struct.conn** %3, align 8
  call void @process_version_command(%struct.conn* %463)
  br label %565

464:                                              ; preds = %456
  %465 = getelementptr inbounds [24 x %struct.iovec], [24 x %struct.iovec]* %5, i64 0, i64 0
  %466 = getelementptr inbounds %struct.iovec, %struct.iovec* %465, i32 0, i32 0
  %467 = load i8*, i8** %466, align 16
  %468 = call i32 @strcmp(i8* %467, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.37.1015, i64 0, i64 0)) #16
  %469 = icmp eq i32 %468, 0
  br i1 %469, label %470, label %472

470:                                              ; preds = %464
  %471 = load %struct.conn*, %struct.conn** %3, align 8
  call void @process_quit_command(%struct.conn* %471)
  br label %564

472:                                              ; preds = %464
  %473 = getelementptr inbounds [24 x %struct.iovec], [24 x %struct.iovec]* %5, i64 0, i64 0
  %474 = getelementptr inbounds %struct.iovec, %struct.iovec* %473, i32 0, i32 0
  %475 = load i8*, i8** %474, align 16
  %476 = call i32 @strcmp(i8* %475, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.38.1016, i64 0, i64 0)) #16
  %477 = icmp eq i32 %476, 0
  br i1 %477, label %478, label %482

478:                                              ; preds = %472
  %479 = load %struct.conn*, %struct.conn** %3, align 8
  %480 = getelementptr inbounds [24 x %struct.iovec], [24 x %struct.iovec]* %5, i64 0, i64 0
  %481 = load i64, i64* %6, align 8
  call void @process_lru_crawler_command(%struct.conn* %479, %struct.iovec* %480, i64 %481)
  br label %563

482:                                              ; preds = %472
  %483 = getelementptr inbounds [24 x %struct.iovec], [24 x %struct.iovec]* %5, i64 0, i64 0
  %484 = getelementptr inbounds %struct.iovec, %struct.iovec* %483, i32 0, i32 0
  %485 = load i8*, i8** %484, align 16
  %486 = call i32 @strcmp(i8* %485, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.39.1017, i64 0, i64 0)) #16
  %487 = icmp eq i32 %486, 0
  br i1 %487, label %488, label %492

488:                                              ; preds = %482
  %489 = load %struct.conn*, %struct.conn** %3, align 8
  %490 = getelementptr inbounds [24 x %struct.iovec], [24 x %struct.iovec]* %5, i64 0, i64 0
  %491 = load i64, i64* %6, align 8
  call void @process_watch_command(%struct.conn* %489, %struct.iovec* %490, i64 %491)
  br label %562

492:                                              ; preds = %482
  %493 = getelementptr inbounds [24 x %struct.iovec], [24 x %struct.iovec]* %5, i64 0, i64 0
  %494 = getelementptr inbounds %struct.iovec, %struct.iovec* %493, i32 0, i32 0
  %495 = load i8*, i8** %494, align 16
  %496 = call i32 @strcmp(i8* %495, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.40.1018, i64 0, i64 0)) #16
  %497 = icmp eq i32 %496, 0
  br i1 %497, label %498, label %512

498:                                              ; preds = %492
  br label %499

499:                                              ; preds = %498
  %500 = load i64, i64* %6, align 8
  %501 = icmp ne i64 %500, 3
  br i1 %501, label %502, label %507

502:                                              ; preds = %499
  %503 = load i64, i64* %6, align 8
  %504 = icmp ne i64 %503, 4
  br i1 %504, label %505, label %507

505:                                              ; preds = %502
  %506 = load %struct.conn*, %struct.conn** %3, align 8
  call void @out_string(%struct.conn* %506, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15.993, i64 0, i64 0))
  br label %577

507:                                              ; preds = %502, %499
  br label %508

508:                                              ; preds = %507
  %509 = load %struct.conn*, %struct.conn** %3, align 8
  %510 = getelementptr inbounds [24 x %struct.iovec], [24 x %struct.iovec]* %5, i64 0, i64 0
  %511 = load i64, i64* %6, align 8
  call void @process_verbosity_command(%struct.conn* %509, %struct.iovec* %510, i64 %511)
  br label %561

512:                                              ; preds = %492
  %513 = getelementptr inbounds [24 x %struct.iovec], [24 x %struct.iovec]* %5, i64 0, i64 0
  %514 = getelementptr inbounds %struct.iovec, %struct.iovec* %513, i32 0, i32 0
  %515 = load i8*, i8** %514, align 16
  %516 = call i32 @strcmp(i8* %515, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.41.1019, i64 0, i64 0)) #16
  %517 = icmp eq i32 %516, 0
  br i1 %517, label %518, label %529

518:                                              ; preds = %512
  br label %519

519:                                              ; preds = %518
  %520 = load i64, i64* %6, align 8
  %521 = icmp ult i64 %520, 3
  br i1 %521, label %522, label %524

522:                                              ; preds = %519
  %523 = load %struct.conn*, %struct.conn** %3, align 8
  call void @out_string(%struct.conn* %523, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15.993, i64 0, i64 0))
  br label %577

524:                                              ; preds = %519
  br label %525

525:                                              ; preds = %524
  %526 = load %struct.conn*, %struct.conn** %3, align 8
  %527 = getelementptr inbounds [24 x %struct.iovec], [24 x %struct.iovec]* %5, i64 0, i64 0
  %528 = load i64, i64* %6, align 8
  call void @process_lru_command(%struct.conn* %526, %struct.iovec* %527, i64 %528)
  br label %560

529:                                              ; preds = %512
  %530 = getelementptr inbounds [24 x %struct.iovec], [24 x %struct.iovec]* %5, i64 0, i64 0
  %531 = getelementptr inbounds %struct.iovec, %struct.iovec* %530, i32 0, i32 0
  %532 = load i8*, i8** %531, align 16
  %533 = call i32 @strcmp(i8* %532, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.42.1020, i64 0, i64 0)) #16
  %534 = icmp eq i32 %533, 0
  br i1 %534, label %535, label %546

535:                                              ; preds = %529
  br label %536

536:                                              ; preds = %535
  %537 = load i64, i64* %6, align 8
  %538 = icmp ult i64 %537, 3
  br i1 %538, label %539, label %541

539:                                              ; preds = %536
  %540 = load %struct.conn*, %struct.conn** %3, align 8
  call void @out_string(%struct.conn* %540, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15.993, i64 0, i64 0))
  br label %577

541:                                              ; preds = %536
  br label %542

542:                                              ; preds = %541
  %543 = load %struct.conn*, %struct.conn** %3, align 8
  %544 = getelementptr inbounds [24 x %struct.iovec], [24 x %struct.iovec]* %5, i64 0, i64 0
  %545 = load i64, i64* %6, align 8
  call void @process_extstore_command(%struct.conn* %543, %struct.iovec* %544, i64 %545)
  br label %559

546:                                              ; preds = %529
  %547 = load i64, i64* %6, align 8
  %548 = sub i64 %547, 2
  %549 = getelementptr inbounds [24 x %struct.iovec], [24 x %struct.iovec]* %5, i64 0, i64 %548
  %550 = getelementptr inbounds %struct.iovec, %struct.iovec* %549, i32 0, i32 0
  %551 = load i8*, i8** %550, align 16
  %552 = call i32 @strncmp(i8* %551, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.43.1021, i64 0, i64 0), i64 5) #16
  %553 = icmp eq i32 %552, 0
  br i1 %553, label %554, label %556

554:                                              ; preds = %546
  %555 = load %struct.conn*, %struct.conn** %3, align 8
  call void @conn_set_state(%struct.conn* %555, i32 8)
  br label %558

556:                                              ; preds = %546
  %557 = load %struct.conn*, %struct.conn** %3, align 8
  call void @out_string(%struct.conn* %557, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15.993, i64 0, i64 0))
  br label %558

558:                                              ; preds = %556, %554
  br label %559

559:                                              ; preds = %558, %542
  br label %560

560:                                              ; preds = %559, %525
  br label %561

561:                                              ; preds = %560, %508
  br label %562

562:                                              ; preds = %561, %488
  br label %563

563:                                              ; preds = %562, %478
  br label %564

564:                                              ; preds = %563, %470
  br label %565

565:                                              ; preds = %564, %462
  br label %566

566:                                              ; preds = %565, %452
  br label %567

567:                                              ; preds = %566, %432
  br label %568

568:                                              ; preds = %567, %414
  br label %569

569:                                              ; preds = %568, %389
  br label %570

570:                                              ; preds = %569, %362
  br label %571

571:                                              ; preds = %570, %314
  br label %572

572:                                              ; preds = %571, %287
  br label %573

573:                                              ; preds = %572, %237
  br label %574

574:                                              ; preds = %573, %201
  br label %575

575:                                              ; preds = %574, %139
  br label %576

576:                                              ; preds = %575, %82
  br label %577

577:                                              ; preds = %576, %539, %522, %505, %449, %429, %411, %380, %352, %332, %305, %277, %256, %227, %158, %91, %34, %21
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @process_mget_command(%struct.conn* %0, %struct.iovec* %1, i64 %2) #0 {
  %4 = alloca %struct.conn*, align 8
  %5 = alloca %struct.iovec*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca %struct._stritem*, align 8
  %10 = alloca i32, align 4
  %11 = alloca %struct._meta_flags, align 8
  %12 = alloca i32, align 4
  %13 = alloca i8, align 1
  %14 = alloca i8, align 1
  %15 = alloca i8, align 1
  %16 = alloca i8, align 1
  %17 = alloca i8*, align 8
  %18 = alloca %struct._mc_resp*, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i8, align 1
  store %struct.conn* %0, %struct.conn** %4, align 8
  store %struct.iovec* %1, %struct.iovec** %5, align 8
  store i64 %2, i64* %6, align 8
  store i32 0, i32* %10, align 4
  %21 = bitcast %struct._meta_flags* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 48, i1 false)
  store i8 0, i8* %13, align 1
  store i8 0, i8* %14, align 1
  store i8 0, i8* %15, align 1
  store i8 0, i8* %16, align 1
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.49.1040, i64 0, i64 0), i8** %17, align 8
  %22 = load %struct.conn*, %struct.conn** %4, align 8
  %23 = getelementptr inbounds %struct.conn, %struct.conn* %22, i32 0, i32 19
  %24 = load %struct._mc_resp*, %struct._mc_resp** %23, align 8
  store %struct._mc_resp* %24, %struct._mc_resp** %18, align 8
  %25 = load %struct._mc_resp*, %struct._mc_resp** %18, align 8
  %26 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %25, i32 0, i32 18
  %27 = getelementptr inbounds [1024 x i8], [1024 x i8]* %26, i64 0, i64 0
  store i8* %27, i8** %19, align 8
  br label %28

28:                                               ; preds = %3
  %29 = load i64, i64* %6, align 8
  %30 = icmp ult i64 %29, 3
  br i1 %30, label %31, label %33

31:                                               ; preds = %28
  %32 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %32, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15.993, i64 0, i64 0))
  br label %826

33:                                               ; preds = %28
  br label %34

34:                                               ; preds = %33
  %35 = load %struct.iovec*, %struct.iovec** %5, align 8
  %36 = getelementptr inbounds %struct.iovec, %struct.iovec* %35, i64 1
  %37 = getelementptr inbounds %struct.iovec, %struct.iovec* %36, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = icmp ugt i64 %38, 250
  br i1 %39, label %40, label %42

40:                                               ; preds = %34
  %41 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_errstring(%struct.conn* %41, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.49.1040, i64 0, i64 0))
  br label %826

42:                                               ; preds = %34
  %43 = load i64, i64* %6, align 8
  %44 = icmp eq i64 %43, 3
  br i1 %44, label %45, label %47

45:                                               ; preds = %42
  %46 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_errstring(%struct.conn* %46, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.49.1040, i64 0, i64 0))
  br label %826

47:                                               ; preds = %42
  %48 = load i64, i64* %6, align 8
  %49 = icmp ugt i64 %48, 20
  br i1 %49, label %50, label %52

50:                                               ; preds = %47
  %51 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_errstring(%struct.conn* %51, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.50.1143, i64 0, i64 0))
  br label %826

52:                                               ; preds = %47
  br label %53

53:                                               ; preds = %52
  %54 = load %struct.iovec*, %struct.iovec** %5, align 8
  %55 = call i32 @_meta_flag_preparse(%struct.iovec* %54, i64 2, %struct._meta_flags* %11, i8** %17)
  %56 = icmp ne i32 %55, 0
  br i1 %56, label %57, label %60

57:                                               ; preds = %53
  %58 = load %struct.conn*, %struct.conn** %4, align 8
  %59 = load i8*, i8** %17, align 8
  call void @out_errstring(%struct.conn* %58, i8* %59)
  br label %826

60:                                               ; preds = %53
  %61 = bitcast %struct._meta_flags* %11 to i16*
  %62 = load i16, i16* %61, align 8
  %63 = lshr i16 %62, 8
  %64 = and i16 %63, 1
  %65 = zext i16 %64 to i32
  %66 = icmp ne i32 %65, 0
  %67 = load %struct.conn*, %struct.conn** %4, align 8
  %68 = getelementptr inbounds %struct.conn, %struct.conn* %67, i32 0, i32 34
  %69 = zext i1 %66 to i8
  store i8 %69, i8* %68, align 4
  %70 = load %struct.iovec*, %struct.iovec** %5, align 8
  %71 = getelementptr inbounds %struct.iovec, %struct.iovec* %70, i64 1
  %72 = getelementptr inbounds %struct.iovec, %struct.iovec* %71, i32 0, i32 0
  %73 = load i8*, i8** %72, align 8
  store i8* %73, i8** %7, align 8
  %74 = load %struct.iovec*, %struct.iovec** %5, align 8
  %75 = getelementptr inbounds %struct.iovec, %struct.iovec* %74, i64 1
  %76 = getelementptr inbounds %struct.iovec, %struct.iovec* %75, i32 0, i32 1
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %8, align 8
  store i8 0, i8* %20, align 1
  %78 = bitcast %struct._meta_flags* %11 to i16*
  %79 = load i16, i16* %78, align 8
  %80 = lshr i16 %79, 2
  %81 = and i16 %80, 1
  %82 = zext i16 %81 to i32
  %83 = icmp ne i32 %82, 0
  br i1 %83, label %96, label %84

84:                                               ; preds = %60
  %85 = load i8*, i8** %7, align 8
  %86 = load i64, i64* %8, align 8
  %87 = load %struct.conn*, %struct.conn** %4, align 8
  %88 = bitcast %struct._meta_flags* %11 to i16*
  %89 = load i16, i16* %88, align 8
  %90 = lshr i16 %89, 1
  %91 = and i16 %90, 1
  %92 = zext i16 %91 to i32
  %93 = icmp ne i32 %92, 0
  %94 = xor i1 %93, true
  %95 = call %struct._stritem* @limited_get(i8* %85, i64 %86, %struct.conn* %87, i32 0, i1 zeroext false, i1 zeroext %94, i8* %20)
  store %struct._stritem* %95, %struct._stritem** %9, align 8
  br label %101

96:                                               ; preds = %60
  %97 = load i8*, i8** %7, align 8
  %98 = load i64, i64* %8, align 8
  %99 = load %struct.conn*, %struct.conn** %4, align 8
  %100 = call %struct._stritem* @limited_get_locked(i8* %97, i64 %98, %struct.conn* %99, i1 zeroext false, i32* %12, i8* %20)
  store %struct._stritem* %100, %struct._stritem** %9, align 8
  br label %101

101:                                              ; preds = %96, %84
  %102 = load i8, i8* %20, align 1
  %103 = trunc i8 %102 to i1
  br i1 %103, label %104, label %106

104:                                              ; preds = %101
  %105 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_errstring(%struct.conn* %105, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.51.1144, i64 0, i64 0))
  br label %826

106:                                              ; preds = %101
  %107 = load %struct._stritem*, %struct._stritem** %9, align 8
  %108 = icmp eq %struct._stritem* %107, null
  br i1 %108, label %109, label %156

109:                                              ; preds = %106
  %110 = bitcast %struct._meta_flags* %11 to i16*
  %111 = load i16, i16* %110, align 8
  %112 = lshr i16 %111, 3
  %113 = and i16 %112, 1
  %114 = zext i16 %113 to i32
  %115 = icmp ne i32 %114, 0
  br i1 %115, label %116, label %156

116:                                              ; preds = %109
  %117 = load i8*, i8** %7, align 8
  %118 = load i64, i64* %8, align 8
  %119 = call i32 @realtime(i64 0)
  %120 = call %struct._stritem* @item_alloc(i8* %117, i64 %118, i32 0, i32 %119, i32 2)
  store %struct._stritem* %120, %struct._stritem** %9, align 8
  %121 = load %struct._stritem*, %struct._stritem** %9, align 8
  %122 = icmp ne %struct._stritem* %121, null
  br i1 %122, label %123, label %155

123:                                              ; preds = %116
  %124 = load %struct._stritem*, %struct._stritem** %9, align 8
  %125 = getelementptr inbounds %struct._stritem, %struct._stritem* %124, i32 0, i32 10
  %126 = bitcast [0 x %union.anon.10]* %125 to i8*
  %127 = load %struct._stritem*, %struct._stritem** %9, align 8
  %128 = getelementptr inbounds %struct._stritem, %struct._stritem* %127, i32 0, i32 9
  %129 = load i8, i8* %128, align 1
  %130 = zext i8 %129 to i32
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds i8, i8* %126, i64 %131
  %133 = getelementptr inbounds i8, i8* %132, i64 1
  %134 = load %struct._stritem*, %struct._stritem** %9, align 8
  %135 = getelementptr inbounds %struct._stritem, %struct._stritem* %134, i32 0, i32 7
  %136 = load i16, i16* %135, align 2
  %137 = zext i16 %136 to i32
  %138 = and i32 %137, 256
  %139 = icmp ne i32 %138, 0
  %140 = zext i1 %139 to i64
  %141 = select i1 %139, i64 4, i64 0
  %142 = getelementptr inbounds i8, i8* %133, i64 %141
  %143 = load %struct._stritem*, %struct._stritem** %9, align 8
  %144 = getelementptr inbounds %struct._stritem, %struct._stritem* %143, i32 0, i32 7
  %145 = load i16, i16* %144, align 2
  %146 = zext i16 %145 to i32
  %147 = and i32 %146, 2
  %148 = icmp ne i32 %147, 0
  %149 = zext i1 %148 to i64
  %150 = select i1 %148, i64 8, i64 0
  %151 = getelementptr inbounds i8, i8* %142, i64 %150
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %151, i8* align 1 getelementptr inbounds ([3 x i8], [3 x i8]* @.str.969, i64 0, i64 0), i64 2, i1 false)
  %152 = load %struct._stritem*, %struct._stritem** %9, align 8
  %153 = load i32, i32* %12, align 4
  %154 = call i32 @do_item_link(%struct._stritem* %152, i32 %153)
  store i8 1, i8* %14, align 1
  br label %155

155:                                              ; preds = %123, %116
  br label %156

156:                                              ; preds = %155, %109, %106
  %157 = load %struct._stritem*, %struct._stritem** %9, align 8
  %158 = icmp ne %struct._stritem* %157, null
  br i1 %158, label %159, label %674

159:                                              ; preds = %156
  %160 = bitcast %struct._meta_flags* %11 to i16*
  %161 = load i16, i16* %160, align 8
  %162 = lshr i16 %161, 6
  %163 = and i16 %162, 1
  %164 = zext i16 %163 to i32
  %165 = icmp ne i32 %164, 0
  br i1 %165, label %166, label %175

166:                                              ; preds = %159
  %167 = load i8*, i8** %19, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %167, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.52.1133, i64 0, i64 0), i64 3, i1 false)
  %168 = load %struct._stritem*, %struct._stritem** %9, align 8
  %169 = getelementptr inbounds %struct._stritem, %struct._stritem* %168, i32 0, i32 5
  %170 = load i32, i32* %169, align 8
  %171 = sub nsw i32 %170, 2
  %172 = load i8*, i8** %19, align 8
  %173 = getelementptr inbounds i8, i8* %172, i64 3
  %174 = call i8* @itoa_u32(i32 %171, i8* %173)
  store i8* %174, i8** %19, align 8
  br label %185

175:                                              ; preds = %159
  %176 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 57), align 1
  %177 = trunc i8 %176 to i1
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = load i8*, i8** %19, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %179, i8* align 1 getelementptr inbounds ([3 x i8], [3 x i8]* @.str.44.976, i64 0, i64 0), i64 2, i1 false)
  br label %182

180:                                              ; preds = %175
  %181 = load i8*, i8** %19, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %181, i8* align 1 getelementptr inbounds ([3 x i8], [3 x i8]* @.str.45.977, i64 0, i64 0), i64 2, i1 false)
  br label %182

182:                                              ; preds = %180, %178
  %183 = load i8*, i8** %19, align 8
  %184 = getelementptr inbounds i8, i8* %183, i64 2
  store i8* %184, i8** %19, align 8
  br label %185

185:                                              ; preds = %182, %166
  store i32 2, i32* %10, align 4
  br label %186

186:                                              ; preds = %475, %185
  %187 = load i32, i32* %10, align 4
  %188 = zext i32 %187 to i64
  %189 = load i64, i64* %6, align 8
  %190 = sub i64 %189, 1
  %191 = icmp ult i64 %188, %190
  br i1 %191, label %192, label %478

192:                                              ; preds = %186
  %193 = load %struct.iovec*, %struct.iovec** %5, align 8
  %194 = load i32, i32* %10, align 4
  %195 = zext i32 %194 to i64
  %196 = getelementptr inbounds %struct.iovec, %struct.iovec* %193, i64 %195
  %197 = getelementptr inbounds %struct.iovec, %struct.iovec* %196, i32 0, i32 0
  %198 = load i8*, i8** %197, align 8
  %199 = getelementptr inbounds i8, i8* %198, i64 0
  %200 = load i8, i8* %199, align 1
  %201 = sext i8 %200 to i32
  switch i32 %201, label %474 [
    i32 84, label %202
    i32 78, label %207
    i32 82, label %216
    i32 115, label %240
    i32 116, label %252
    i32 99, label %277
    i32 102, label %300
    i32 108, label %344
    i32 104, label %357
    i32 79, label %376
    i32 107, label %410
  ]

202:                                              ; preds = %192
  store i8 1, i8* %16, align 1
  %203 = getelementptr inbounds %struct._meta_flags, %struct._meta_flags* %11, i32 0, i32 2
  %204 = load i32, i32* %203, align 4
  %205 = load %struct._stritem*, %struct._stritem** %9, align 8
  %206 = getelementptr inbounds %struct._stritem, %struct._stritem* %205, i32 0, i32 4
  store i32 %204, i32* %206, align 4
  br label %474

207:                                              ; preds = %192
  %208 = load i8, i8* %14, align 1
  %209 = trunc i8 %208 to i1
  br i1 %209, label %210, label %215

210:                                              ; preds = %207
  %211 = getelementptr inbounds %struct._meta_flags, %struct._meta_flags* %11, i32 0, i32 3
  %212 = load i32, i32* %211, align 8
  %213 = load %struct._stritem*, %struct._stritem** %9, align 8
  %214 = getelementptr inbounds %struct._stritem, %struct._stritem* %213, i32 0, i32 4
  store i32 %212, i32* %214, align 4
  store i8 1, i8* %15, align 1
  br label %215

215:                                              ; preds = %210, %207
  br label %474

216:                                              ; preds = %192
  %217 = load %struct._stritem*, %struct._stritem** %9, align 8
  %218 = getelementptr inbounds %struct._stritem, %struct._stritem* %217, i32 0, i32 7
  %219 = load i16, i16* %218, align 2
  %220 = zext i16 %219 to i32
  %221 = and i32 %220, 512
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %223, label %239

223:                                              ; preds = %216
  %224 = load i8, i8* %14, align 1
  %225 = trunc i8 %224 to i1
  br i1 %225, label %239, label %226

226:                                              ; preds = %223
  %227 = load %struct._stritem*, %struct._stritem** %9, align 8
  %228 = getelementptr inbounds %struct._stritem, %struct._stritem* %227, i32 0, i32 4
  %229 = load i32, i32* %228, align 4
  %230 = icmp ne i32 %229, 0
  br i1 %230, label %231, label %239

231:                                              ; preds = %226
  %232 = load %struct._stritem*, %struct._stritem** %9, align 8
  %233 = getelementptr inbounds %struct._stritem, %struct._stritem* %232, i32 0, i32 4
  %234 = load i32, i32* %233, align 4
  %235 = getelementptr inbounds %struct._meta_flags, %struct._meta_flags* %11, i32 0, i32 4
  %236 = load i32, i32* %235, align 4
  %237 = icmp ult i32 %234, %236
  br i1 %237, label %238, label %239

238:                                              ; preds = %231
  store i8 1, i8* %15, align 1
  br label %239

239:                                              ; preds = %238, %231, %226, %223, %216
  br label %474

240:                                              ; preds = %192
  %241 = load i8*, i8** %19, align 8
  store i8 32, i8* %241, align 1
  %242 = load i8*, i8** %19, align 8
  %243 = getelementptr inbounds i8, i8* %242, i64 1
  store i8 115, i8* %243, align 1
  %244 = load i8*, i8** %19, align 8
  %245 = getelementptr inbounds i8, i8* %244, i64 2
  store i8* %245, i8** %19, align 8
  %246 = load %struct._stritem*, %struct._stritem** %9, align 8
  %247 = getelementptr inbounds %struct._stritem, %struct._stritem* %246, i32 0, i32 5
  %248 = load i32, i32* %247, align 8
  %249 = sub nsw i32 %248, 2
  %250 = load i8*, i8** %19, align 8
  %251 = call i8* @itoa_u32(i32 %249, i8* %250)
  store i8* %251, i8** %19, align 8
  br label %474

252:                                              ; preds = %192
  %253 = load i8*, i8** %19, align 8
  store i8 32, i8* %253, align 1
  %254 = load i8*, i8** %19, align 8
  %255 = getelementptr inbounds i8, i8* %254, i64 1
  store i8 116, i8* %255, align 1
  %256 = load i8*, i8** %19, align 8
  %257 = getelementptr inbounds i8, i8* %256, i64 2
  store i8* %257, i8** %19, align 8
  %258 = load %struct._stritem*, %struct._stritem** %9, align 8
  %259 = getelementptr inbounds %struct._stritem, %struct._stritem* %258, i32 0, i32 4
  %260 = load i32, i32* %259, align 4
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %262, label %268

262:                                              ; preds = %252
  %263 = load i8*, i8** %19, align 8
  store i8 45, i8* %263, align 1
  %264 = load i8*, i8** %19, align 8
  %265 = getelementptr inbounds i8, i8* %264, i64 1
  store i8 49, i8* %265, align 1
  %266 = load i8*, i8** %19, align 8
  %267 = getelementptr inbounds i8, i8* %266, i64 2
  store i8* %267, i8** %19, align 8
  br label %276

268:                                              ; preds = %252
  %269 = load %struct._stritem*, %struct._stritem** %9, align 8
  %270 = getelementptr inbounds %struct._stritem, %struct._stritem* %269, i32 0, i32 4
  %271 = load i32, i32* %270, align 4
  %272 = load volatile i32, i32* @current_time, align 4
  %273 = sub i32 %271, %272
  %274 = load i8*, i8** %19, align 8
  %275 = call i8* @itoa_u32(i32 %273, i8* %274)
  store i8* %275, i8** %19, align 8
  br label %276

276:                                              ; preds = %268, %262
  br label %474

277:                                              ; preds = %192
  %278 = load i8*, i8** %19, align 8
  store i8 32, i8* %278, align 1
  %279 = load i8*, i8** %19, align 8
  %280 = getelementptr inbounds i8, i8* %279, i64 1
  store i8 99, i8* %280, align 1
  %281 = load i8*, i8** %19, align 8
  %282 = getelementptr inbounds i8, i8* %281, i64 2
  store i8* %282, i8** %19, align 8
  %283 = load %struct._stritem*, %struct._stritem** %9, align 8
  %284 = getelementptr inbounds %struct._stritem, %struct._stritem* %283, i32 0, i32 7
  %285 = load i16, i16* %284, align 2
  %286 = zext i16 %285 to i32
  %287 = and i32 %286, 2
  %288 = icmp ne i32 %287, 0
  br i1 %288, label %289, label %295

289:                                              ; preds = %277
  %290 = load %struct._stritem*, %struct._stritem** %9, align 8
  %291 = getelementptr inbounds %struct._stritem, %struct._stritem* %290, i32 0, i32 10
  %292 = getelementptr inbounds [0 x %union.anon.10], [0 x %union.anon.10]* %291, i64 0, i64 0
  %293 = bitcast %union.anon.10* %292 to i64*
  %294 = load i64, i64* %293, align 8
  br label %296

295:                                              ; preds = %277
  br label %296

296:                                              ; preds = %295, %289
  %297 = phi i64 [ %294, %289 ], [ 0, %295 ]
  %298 = load i8*, i8** %19, align 8
  %299 = call i8* @itoa_u64(i64 %297, i8* %298)
  store i8* %299, i8** %19, align 8
  br label %474

300:                                              ; preds = %192
  %301 = load i8*, i8** %19, align 8
  store i8 32, i8* %301, align 1
  %302 = load i8*, i8** %19, align 8
  %303 = getelementptr inbounds i8, i8* %302, i64 1
  store i8 102, i8* %303, align 1
  %304 = load i8*, i8** %19, align 8
  %305 = getelementptr inbounds i8, i8* %304, i64 2
  store i8* %305, i8** %19, align 8
  %306 = load %struct._stritem*, %struct._stritem** %9, align 8
  %307 = getelementptr inbounds %struct._stritem, %struct._stritem* %306, i32 0, i32 7
  %308 = load i16, i16* %307, align 2
  %309 = zext i16 %308 to i32
  %310 = and i32 %309, 256
  %311 = icmp ne i32 %310, 0
  %312 = zext i1 %311 to i64
  %313 = select i1 %311, i64 4, i64 0
  %314 = icmp eq i64 %313, 0
  br i1 %314, label %315, label %319

315:                                              ; preds = %300
  %316 = load i8*, i8** %19, align 8
  store i8 48, i8* %316, align 1
  %317 = load i8*, i8** %19, align 8
  %318 = getelementptr inbounds i8, i8* %317, i32 1
  store i8* %318, i8** %19, align 8
  br label %343

319:                                              ; preds = %300
  %320 = load %struct._stritem*, %struct._stritem** %9, align 8
  %321 = getelementptr inbounds %struct._stritem, %struct._stritem* %320, i32 0, i32 10
  %322 = bitcast [0 x %union.anon.10]* %321 to i8*
  %323 = load %struct._stritem*, %struct._stritem** %9, align 8
  %324 = getelementptr inbounds %struct._stritem, %struct._stritem* %323, i32 0, i32 9
  %325 = load i8, i8* %324, align 1
  %326 = zext i8 %325 to i32
  %327 = sext i32 %326 to i64
  %328 = getelementptr inbounds i8, i8* %322, i64 %327
  %329 = getelementptr inbounds i8, i8* %328, i64 1
  %330 = load %struct._stritem*, %struct._stritem** %9, align 8
  %331 = getelementptr inbounds %struct._stritem, %struct._stritem* %330, i32 0, i32 7
  %332 = load i16, i16* %331, align 2
  %333 = zext i16 %332 to i32
  %334 = and i32 %333, 2
  %335 = icmp ne i32 %334, 0
  %336 = zext i1 %335 to i64
  %337 = select i1 %335, i64 8, i64 0
  %338 = getelementptr inbounds i8, i8* %329, i64 %337
  %339 = bitcast i8* %338 to i32*
  %340 = load i32, i32* %339, align 4
  %341 = load i8*, i8** %19, align 8
  %342 = call i8* @itoa_u32(i32 %340, i8* %341)
  store i8* %342, i8** %19, align 8
  br label %343

343:                                              ; preds = %319, %315
  br label %474

344:                                              ; preds = %192
  %345 = load i8*, i8** %19, align 8
  store i8 32, i8* %345, align 1
  %346 = load i8*, i8** %19, align 8
  %347 = getelementptr inbounds i8, i8* %346, i64 1
  store i8 108, i8* %347, align 1
  %348 = load i8*, i8** %19, align 8
  %349 = getelementptr inbounds i8, i8* %348, i64 2
  store i8* %349, i8** %19, align 8
  %350 = load volatile i32, i32* @current_time, align 4
  %351 = load %struct._stritem*, %struct._stritem** %9, align 8
  %352 = getelementptr inbounds %struct._stritem, %struct._stritem* %351, i32 0, i32 3
  %353 = load i32, i32* %352, align 8
  %354 = sub i32 %350, %353
  %355 = load i8*, i8** %19, align 8
  %356 = call i8* @itoa_u32(i32 %354, i8* %355)
  store i8* %356, i8** %19, align 8
  br label %474

357:                                              ; preds = %192
  %358 = load i8*, i8** %19, align 8
  store i8 32, i8* %358, align 1
  %359 = load i8*, i8** %19, align 8
  %360 = getelementptr inbounds i8, i8* %359, i64 1
  store i8 104, i8* %360, align 1
  %361 = load i8*, i8** %19, align 8
  %362 = getelementptr inbounds i8, i8* %361, i64 2
  store i8* %362, i8** %19, align 8
  %363 = load %struct._stritem*, %struct._stritem** %9, align 8
  %364 = getelementptr inbounds %struct._stritem, %struct._stritem* %363, i32 0, i32 7
  %365 = load i16, i16* %364, align 2
  %366 = zext i16 %365 to i32
  %367 = and i32 %366, 8
  %368 = icmp ne i32 %367, 0
  br i1 %368, label %369, label %371

369:                                              ; preds = %357
  %370 = load i8*, i8** %19, align 8
  store i8 49, i8* %370, align 1
  br label %373

371:                                              ; preds = %357
  %372 = load i8*, i8** %19, align 8
  store i8 48, i8* %372, align 1
  br label %373

373:                                              ; preds = %371, %369
  %374 = load i8*, i8** %19, align 8
  %375 = getelementptr inbounds i8, i8* %374, i32 1
  store i8* %375, i8** %19, align 8
  br label %474

376:                                              ; preds = %192
  %377 = load %struct.iovec*, %struct.iovec** %5, align 8
  %378 = load i32, i32* %10, align 4
  %379 = zext i32 %378 to i64
  %380 = getelementptr inbounds %struct.iovec, %struct.iovec* %377, i64 %379
  %381 = getelementptr inbounds %struct.iovec, %struct.iovec* %380, i32 0, i32 1
  %382 = load i64, i64* %381, align 8
  %383 = icmp ugt i64 %382, 32
  br i1 %383, label %384, label %385

384:                                              ; preds = %376
  store i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.53.1134, i64 0, i64 0), i8** %17, align 8
  br label %809

385:                                              ; preds = %376
  %386 = load i8*, i8** %19, align 8
  store i8 32, i8* %386, align 1
  %387 = load i8*, i8** %19, align 8
  %388 = getelementptr inbounds i8, i8* %387, i32 1
  store i8* %388, i8** %19, align 8
  %389 = load i8*, i8** %19, align 8
  %390 = load %struct.iovec*, %struct.iovec** %5, align 8
  %391 = load i32, i32* %10, align 4
  %392 = zext i32 %391 to i64
  %393 = getelementptr inbounds %struct.iovec, %struct.iovec* %390, i64 %392
  %394 = getelementptr inbounds %struct.iovec, %struct.iovec* %393, i32 0, i32 0
  %395 = load i8*, i8** %394, align 8
  %396 = load %struct.iovec*, %struct.iovec** %5, align 8
  %397 = load i32, i32* %10, align 4
  %398 = zext i32 %397 to i64
  %399 = getelementptr inbounds %struct.iovec, %struct.iovec* %396, i64 %398
  %400 = getelementptr inbounds %struct.iovec, %struct.iovec* %399, i32 0, i32 1
  %401 = load i64, i64* %400, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %389, i8* align 1 %395, i64 %401, i1 false)
  %402 = load %struct.iovec*, %struct.iovec** %5, align 8
  %403 = load i32, i32* %10, align 4
  %404 = zext i32 %403 to i64
  %405 = getelementptr inbounds %struct.iovec, %struct.iovec* %402, i64 %404
  %406 = getelementptr inbounds %struct.iovec, %struct.iovec* %405, i32 0, i32 1
  %407 = load i64, i64* %406, align 8
  %408 = load i8*, i8** %19, align 8
  %409 = getelementptr inbounds i8, i8* %408, i64 %407
  store i8* %409, i8** %19, align 8
  br label %474

410:                                              ; preds = %192
  %411 = load i8*, i8** %19, align 8
  store i8 32, i8* %411, align 1
  %412 = load i8*, i8** %19, align 8
  %413 = getelementptr inbounds i8, i8* %412, i64 1
  store i8 107, i8* %413, align 1
  %414 = load i8*, i8** %19, align 8
  %415 = getelementptr inbounds i8, i8* %414, i64 2
  store i8* %415, i8** %19, align 8
  %416 = load %struct._stritem*, %struct._stritem** %9, align 8
  %417 = getelementptr inbounds %struct._stritem, %struct._stritem* %416, i32 0, i32 7
  %418 = load i16, i16* %417, align 2
  %419 = zext i16 %418 to i32
  %420 = and i32 %419, 4096
  %421 = icmp ne i32 %420, 0
  br i1 %421, label %447, label %422

422:                                              ; preds = %410
  %423 = load i8*, i8** %19, align 8
  %424 = load %struct._stritem*, %struct._stritem** %9, align 8
  %425 = getelementptr inbounds %struct._stritem, %struct._stritem* %424, i32 0, i32 10
  %426 = bitcast [0 x %union.anon.10]* %425 to i8*
  %427 = load %struct._stritem*, %struct._stritem** %9, align 8
  %428 = getelementptr inbounds %struct._stritem, %struct._stritem* %427, i32 0, i32 7
  %429 = load i16, i16* %428, align 2
  %430 = zext i16 %429 to i32
  %431 = and i32 %430, 2
  %432 = icmp ne i32 %431, 0
  %433 = zext i1 %432 to i64
  %434 = select i1 %432, i64 8, i64 0
  %435 = getelementptr inbounds i8, i8* %426, i64 %434
  %436 = load %struct._stritem*, %struct._stritem** %9, align 8
  %437 = getelementptr inbounds %struct._stritem, %struct._stritem* %436, i32 0, i32 9
  %438 = load i8, i8* %437, align 1
  %439 = zext i8 %438 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %423, i8* align 1 %435, i64 %439, i1 false)
  %440 = load %struct._stritem*, %struct._stritem** %9, align 8
  %441 = getelementptr inbounds %struct._stritem, %struct._stritem* %440, i32 0, i32 9
  %442 = load i8, i8* %441, align 1
  %443 = zext i8 %442 to i32
  %444 = load i8*, i8** %19, align 8
  %445 = sext i32 %443 to i64
  %446 = getelementptr inbounds i8, i8* %444, i64 %445
  store i8* %446, i8** %19, align 8
  br label %473

447:                                              ; preds = %410
  %448 = load %struct._stritem*, %struct._stritem** %9, align 8
  %449 = getelementptr inbounds %struct._stritem, %struct._stritem* %448, i32 0, i32 10
  %450 = bitcast [0 x %union.anon.10]* %449 to i8*
  %451 = load %struct._stritem*, %struct._stritem** %9, align 8
  %452 = getelementptr inbounds %struct._stritem, %struct._stritem* %451, i32 0, i32 7
  %453 = load i16, i16* %452, align 2
  %454 = zext i16 %453 to i32
  %455 = and i32 %454, 2
  %456 = icmp ne i32 %455, 0
  %457 = zext i1 %456 to i64
  %458 = select i1 %456, i64 8, i64 0
  %459 = getelementptr inbounds i8, i8* %450, i64 %458
  %460 = load %struct._stritem*, %struct._stritem** %9, align 8
  %461 = getelementptr inbounds %struct._stritem, %struct._stritem* %460, i32 0, i32 9
  %462 = load i8, i8* %461, align 1
  %463 = zext i8 %462 to i64
  %464 = load i8*, i8** %19, align 8
  %465 = call i64 @base64_encode(i8* %459, i64 %463, i8* %464, i64 512)
  %466 = load i8*, i8** %19, align 8
  %467 = getelementptr inbounds i8, i8* %466, i64 %465
  store i8* %467, i8** %19, align 8
  %468 = load i8*, i8** %19, align 8
  store i8 32, i8* %468, align 1
  %469 = load i8*, i8** %19, align 8
  %470 = getelementptr inbounds i8, i8* %469, i64 1
  store i8 98, i8* %470, align 1
  %471 = load i8*, i8** %19, align 8
  %472 = getelementptr inbounds i8, i8* %471, i64 2
  store i8* %472, i8** %19, align 8
  br label %473

473:                                              ; preds = %447, %422
  br label %474

474:                                              ; preds = %192, %473, %385, %373, %344, %343, %296, %276, %240, %239, %215, %202
  br label %475

475:                                              ; preds = %474
  %476 = load i32, i32* %10, align 4
  %477 = add i32 %476, 1
  store i32 %477, i32* %10, align 4
  br label %186, !llvm.loop !162

478:                                              ; preds = %186
  %479 = load %struct._stritem*, %struct._stritem** %9, align 8
  %480 = getelementptr inbounds %struct._stritem, %struct._stritem* %479, i32 0, i32 7
  %481 = load i16, i16* %480, align 2
  %482 = zext i16 %481 to i32
  %483 = and i32 %482, 512
  %484 = icmp ne i32 %483, 0
  br i1 %484, label %485, label %491

485:                                              ; preds = %478
  %486 = load i8*, i8** %19, align 8
  store i8 32, i8* %486, align 1
  %487 = load i8*, i8** %19, align 8
  %488 = getelementptr inbounds i8, i8* %487, i64 1
  store i8 90, i8* %488, align 1
  %489 = load i8*, i8** %19, align 8
  %490 = getelementptr inbounds i8, i8* %489, i64 2
  store i8* %490, i8** %19, align 8
  br label %491

491:                                              ; preds = %485, %478
  %492 = load %struct._stritem*, %struct._stritem** %9, align 8
  %493 = getelementptr inbounds %struct._stritem, %struct._stritem* %492, i32 0, i32 7
  %494 = load i16, i16* %493, align 2
  %495 = zext i16 %494 to i32
  %496 = and i32 %495, 2048
  %497 = icmp ne i32 %496, 0
  br i1 %497, label %498, label %512

498:                                              ; preds = %491
  %499 = load i8*, i8** %19, align 8
  store i8 32, i8* %499, align 1
  %500 = load i8*, i8** %19, align 8
  %501 = getelementptr inbounds i8, i8* %500, i64 1
  store i8 88, i8* %501, align 1
  %502 = load i8*, i8** %19, align 8
  %503 = getelementptr inbounds i8, i8* %502, i64 2
  store i8* %503, i8** %19, align 8
  %504 = load %struct._stritem*, %struct._stritem** %9, align 8
  %505 = getelementptr inbounds %struct._stritem, %struct._stritem* %504, i32 0, i32 7
  %506 = load i16, i16* %505, align 2
  %507 = zext i16 %506 to i32
  %508 = and i32 %507, 512
  %509 = icmp eq i32 %508, 0
  br i1 %509, label %510, label %511

510:                                              ; preds = %498
  store i8 1, i8* %15, align 1
  br label %511

511:                                              ; preds = %510, %498
  br label %512

512:                                              ; preds = %511, %491
  %513 = load i8, i8* %15, align 1
  %514 = trunc i8 %513 to i1
  br i1 %514, label %515, label %527

515:                                              ; preds = %512
  %516 = load i8*, i8** %19, align 8
  store i8 32, i8* %516, align 1
  %517 = load i8*, i8** %19, align 8
  %518 = getelementptr inbounds i8, i8* %517, i64 1
  store i8 87, i8* %518, align 1
  %519 = load i8*, i8** %19, align 8
  %520 = getelementptr inbounds i8, i8* %519, i64 2
  store i8* %520, i8** %19, align 8
  %521 = load %struct._stritem*, %struct._stritem** %9, align 8
  %522 = getelementptr inbounds %struct._stritem, %struct._stritem* %521, i32 0, i32 7
  %523 = load i16, i16* %522, align 2
  %524 = zext i16 %523 to i32
  %525 = or i32 %524, 512
  %526 = trunc i32 %525 to i16
  store i16 %526, i16* %522, align 2
  br label %527

527:                                              ; preds = %515, %512
  %528 = load i8*, i8** %19, align 8
  store i8 13, i8* %528, align 1
  %529 = load i8*, i8** %19, align 8
  %530 = getelementptr inbounds i8, i8* %529, i64 1
  store i8 10, i8* %530, align 1
  %531 = load i8*, i8** %19, align 8
  %532 = getelementptr inbounds i8, i8* %531, i64 2
  store i8 0, i8* %532, align 1
  %533 = load i8*, i8** %19, align 8
  %534 = getelementptr inbounds i8, i8* %533, i64 2
  store i8* %534, i8** %19, align 8
  %535 = load %struct._mc_resp*, %struct._mc_resp** %18, align 8
  %536 = load %struct._mc_resp*, %struct._mc_resp** %18, align 8
  %537 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %536, i32 0, i32 18
  %538 = getelementptr inbounds [1024 x i8], [1024 x i8]* %537, i64 0, i64 0
  %539 = load i8*, i8** %19, align 8
  %540 = load %struct._mc_resp*, %struct._mc_resp** %18, align 8
  %541 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %540, i32 0, i32 18
  %542 = getelementptr inbounds [1024 x i8], [1024 x i8]* %541, i64 0, i64 0
  %543 = ptrtoint i8* %539 to i64
  %544 = ptrtoint i8* %542 to i64
  %545 = sub i64 %543, %544
  %546 = trunc i64 %545 to i32
  call void @resp_add_iov(%struct._mc_resp* %535, i8* %538, i32 %546)
  %547 = bitcast %struct._meta_flags* %11 to i16*
  %548 = load i16, i16* %547, align 8
  %549 = lshr i16 %548, 6
  %550 = and i16 %549, 1
  %551 = zext i16 %550 to i32
  %552 = icmp ne i32 %551, 0
  br i1 %552, label %553, label %636

553:                                              ; preds = %527
  %554 = load %struct._stritem*, %struct._stritem** %9, align 8
  %555 = getelementptr inbounds %struct._stritem, %struct._stritem* %554, i32 0, i32 7
  %556 = load i16, i16* %555, align 2
  %557 = zext i16 %556 to i32
  %558 = and i32 %557, 128
  %559 = icmp ne i32 %558, 0
  br i1 %559, label %560, label %587

560:                                              ; preds = %553
  %561 = load %struct.conn*, %struct.conn** %4, align 8
  %562 = load %struct._stritem*, %struct._stritem** %9, align 8
  %563 = load %struct._mc_resp*, %struct._mc_resp** %18, align 8
  %564 = call i32 @storage_get_item(%struct.conn* %561, %struct._stritem* %562, %struct._mc_resp* %563)
  %565 = icmp ne i32 %564, 0
  br i1 %565, label %566, label %586

566:                                              ; preds = %560
  %567 = load %struct.conn*, %struct.conn** %4, align 8
  %568 = getelementptr inbounds %struct.conn, %struct.conn* %567, i32 0, i32 42
  %569 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %568, align 8
  %570 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %569, i32 0, i32 4
  %571 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %570, i32 0, i32 0
  %572 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %571) #14
  %573 = load %struct.conn*, %struct.conn** %4, align 8
  %574 = getelementptr inbounds %struct.conn, %struct.conn* %573, i32 0, i32 42
  %575 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %574, align 8
  %576 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %575, i32 0, i32 4
  %577 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %576, i32 0, i32 27
  %578 = load i64, i64* %577, align 8
  %579 = add i64 %578, 1
  store i64 %579, i64* %577, align 8
  %580 = load %struct.conn*, %struct.conn** %4, align 8
  %581 = getelementptr inbounds %struct.conn, %struct.conn* %580, i32 0, i32 42
  %582 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %581, align 8
  %583 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %582, i32 0, i32 4
  %584 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %583, i32 0, i32 0
  %585 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %584) #14
  store i8 1, i8* %13, align 1
  br label %586

586:                                              ; preds = %566, %560
  br label %635

587:                                              ; preds = %553
  %588 = load %struct._stritem*, %struct._stritem** %9, align 8
  %589 = getelementptr inbounds %struct._stritem, %struct._stritem* %588, i32 0, i32 7
  %590 = load i16, i16* %589, align 2
  %591 = zext i16 %590 to i32
  %592 = and i32 %591, 32
  %593 = icmp eq i32 %592, 0
  br i1 %593, label %594, label %627

594:                                              ; preds = %587
  %595 = load %struct._mc_resp*, %struct._mc_resp** %18, align 8
  %596 = load %struct._stritem*, %struct._stritem** %9, align 8
  %597 = getelementptr inbounds %struct._stritem, %struct._stritem* %596, i32 0, i32 10
  %598 = bitcast [0 x %union.anon.10]* %597 to i8*
  %599 = load %struct._stritem*, %struct._stritem** %9, align 8
  %600 = getelementptr inbounds %struct._stritem, %struct._stritem* %599, i32 0, i32 9
  %601 = load i8, i8* %600, align 1
  %602 = zext i8 %601 to i32
  %603 = sext i32 %602 to i64
  %604 = getelementptr inbounds i8, i8* %598, i64 %603
  %605 = getelementptr inbounds i8, i8* %604, i64 1
  %606 = load %struct._stritem*, %struct._stritem** %9, align 8
  %607 = getelementptr inbounds %struct._stritem, %struct._stritem* %606, i32 0, i32 7
  %608 = load i16, i16* %607, align 2
  %609 = zext i16 %608 to i32
  %610 = and i32 %609, 256
  %611 = icmp ne i32 %610, 0
  %612 = zext i1 %611 to i64
  %613 = select i1 %611, i64 4, i64 0
  %614 = getelementptr inbounds i8, i8* %605, i64 %613
  %615 = load %struct._stritem*, %struct._stritem** %9, align 8
  %616 = getelementptr inbounds %struct._stritem, %struct._stritem* %615, i32 0, i32 7
  %617 = load i16, i16* %616, align 2
  %618 = zext i16 %617 to i32
  %619 = and i32 %618, 2
  %620 = icmp ne i32 %619, 0
  %621 = zext i1 %620 to i64
  %622 = select i1 %620, i64 8, i64 0
  %623 = getelementptr inbounds i8, i8* %614, i64 %622
  %624 = load %struct._stritem*, %struct._stritem** %9, align 8
  %625 = getelementptr inbounds %struct._stritem, %struct._stritem* %624, i32 0, i32 5
  %626 = load i32, i32* %625, align 8
  call void @resp_add_iov(%struct._mc_resp* %595, i8* %623, i32 %626)
  br label %634

627:                                              ; preds = %587
  %628 = load %struct._mc_resp*, %struct._mc_resp** %18, align 8
  %629 = load %struct._stritem*, %struct._stritem** %9, align 8
  %630 = bitcast %struct._stritem* %629 to i8*
  %631 = load %struct._stritem*, %struct._stritem** %9, align 8
  %632 = getelementptr inbounds %struct._stritem, %struct._stritem* %631, i32 0, i32 5
  %633 = load i32, i32* %632, align 8
  call void @resp_add_chunked_iov(%struct._mc_resp* %628, i8* %630, i32 %633)
  br label %634

634:                                              ; preds = %627, %594
  br label %635

635:                                              ; preds = %634, %586
  br label %636

636:                                              ; preds = %635, %527
  %637 = load i8, i8* %13, align 1
  %638 = trunc i8 %637 to i1
  br i1 %638, label %661, label %639

639:                                              ; preds = %636
  %640 = load %struct._stritem*, %struct._stritem** %9, align 8
  %641 = getelementptr inbounds %struct._stritem, %struct._stritem* %640, i32 0, i32 7
  %642 = load i16, i16* %641, align 2
  %643 = zext i16 %642 to i32
  %644 = and i32 %643, 128
  %645 = icmp ne i32 %644, 0
  br i1 %645, label %646, label %656

646:                                              ; preds = %639
  %647 = bitcast %struct._meta_flags* %11 to i16*
  %648 = load i16, i16* %647, align 8
  %649 = lshr i16 %648, 6
  %650 = and i16 %649, 1
  %651 = zext i16 %650 to i32
  %652 = icmp ne i32 %651, 0
  br i1 %652, label %653, label %656

653:                                              ; preds = %646
  %654 = load %struct._mc_resp*, %struct._mc_resp** %18, align 8
  %655 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %654, i32 0, i32 6
  store %struct._stritem* null, %struct._stritem** %655, align 8
  br label %660

656:                                              ; preds = %646, %639
  %657 = load %struct._stritem*, %struct._stritem** %9, align 8
  %658 = load %struct._mc_resp*, %struct._mc_resp** %18, align 8
  %659 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %658, i32 0, i32 6
  store %struct._stritem* %657, %struct._stritem** %659, align 8
  br label %660

660:                                              ; preds = %656, %653
  br label %673

661:                                              ; preds = %636
  %662 = bitcast %struct._meta_flags* %11 to i16*
  %663 = load i16, i16* %662, align 8
  %664 = lshr i16 %663, 2
  %665 = and i16 %664, 1
  %666 = zext i16 %665 to i32
  %667 = icmp ne i32 %666, 0
  br i1 %667, label %668, label %670

668:                                              ; preds = %661
  %669 = load %struct._stritem*, %struct._stritem** %9, align 8
  call void @do_item_remove(%struct._stritem* %669)
  br label %672

670:                                              ; preds = %661
  %671 = load %struct._stritem*, %struct._stritem** %9, align 8
  call void @item_remove(%struct._stritem* %671)
  br label %672

672:                                              ; preds = %670, %668
  br label %673

673:                                              ; preds = %672, %660
  br label %675

674:                                              ; preds = %156
  store i8 1, i8* %13, align 1
  br label %675

675:                                              ; preds = %674, %673
  %676 = bitcast %struct._meta_flags* %11 to i16*
  %677 = load i16, i16* %676, align 8
  %678 = lshr i16 %677, 2
  %679 = and i16 %678, 1
  %680 = zext i16 %679 to i32
  %681 = icmp ne i32 %680, 0
  br i1 %681, label %682, label %698

682:                                              ; preds = %675
  %683 = bitcast %struct._meta_flags* %11 to i16*
  %684 = load i16, i16* %683, align 8
  %685 = lshr i16 %684, 1
  %686 = and i16 %685, 1
  %687 = zext i16 %686 to i32
  %688 = icmp ne i32 %687, 0
  br i1 %688, label %696, label %689

689:                                              ; preds = %682
  %690 = load %struct._stritem*, %struct._stritem** %9, align 8
  %691 = icmp ne %struct._stritem* %690, null
  br i1 %691, label %692, label %696

692:                                              ; preds = %689
  %693 = load %struct.conn*, %struct.conn** %4, align 8
  %694 = load %struct._stritem*, %struct._stritem** %9, align 8
  %695 = load i32, i32* %12, align 4
  call void @do_item_bump(%struct.conn* %693, %struct._stritem* %694, i32 %695)
  br label %696

696:                                              ; preds = %692, %689, %682
  %697 = load i32, i32* %12, align 4
  call void @item_unlock(i32 %697)
  br label %698

698:                                              ; preds = %696, %675
  %699 = load i8, i8* %13, align 1
  %700 = trunc i8 %699 to i1
  br i1 %700, label %761, label %701

701:                                              ; preds = %698
  %702 = load %struct.conn*, %struct.conn** %4, align 8
  %703 = getelementptr inbounds %struct.conn, %struct.conn* %702, i32 0, i32 42
  %704 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %703, align 8
  %705 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %704, i32 0, i32 4
  %706 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %705, i32 0, i32 0
  %707 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %706) #14
  %708 = load i8, i8* %16, align 1
  %709 = trunc i8 %708 to i1
  br i1 %709, label %710, label %733

710:                                              ; preds = %701
  %711 = load %struct.conn*, %struct.conn** %4, align 8
  %712 = getelementptr inbounds %struct.conn, %struct.conn* %711, i32 0, i32 42
  %713 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %712, align 8
  %714 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %713, i32 0, i32 4
  %715 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %714, i32 0, i32 5
  %716 = load i64, i64* %715, align 8
  %717 = add i64 %716, 1
  store i64 %717, i64* %715, align 8
  %718 = load %struct.conn*, %struct.conn** %4, align 8
  %719 = getelementptr inbounds %struct.conn, %struct.conn* %718, i32 0, i32 42
  %720 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %719, align 8
  %721 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %720, i32 0, i32 4
  %722 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %721, i32 0, i32 31
  %723 = load %struct._stritem*, %struct._stritem** %9, align 8
  %724 = getelementptr inbounds %struct._stritem, %struct._stritem* %723, i32 0, i32 8
  %725 = load i8, i8* %724, align 8
  %726 = zext i8 %725 to i32
  %727 = and i32 %726, -193
  %728 = sext i32 %727 to i64
  %729 = getelementptr inbounds [64 x %struct.slab_stats], [64 x %struct.slab_stats]* %722, i64 0, i64 %728
  %730 = getelementptr inbounds %struct.slab_stats, %struct.slab_stats* %729, i32 0, i32 2
  %731 = load i64, i64* %730, align 8
  %732 = add i64 %731, 1
  store i64 %732, i64* %730, align 8
  br label %753

733:                                              ; preds = %701
  %734 = load %struct.conn*, %struct.conn** %4, align 8
  %735 = getelementptr inbounds %struct.conn, %struct.conn* %734, i32 0, i32 42
  %736 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %735, align 8
  %737 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %736, i32 0, i32 4
  %738 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %737, i32 0, i32 32
  %739 = load %struct._stritem*, %struct._stritem** %9, align 8
  %740 = getelementptr inbounds %struct._stritem, %struct._stritem* %739, i32 0, i32 8
  %741 = load i8, i8* %740, align 8
  %742 = zext i8 %741 to i64
  %743 = getelementptr inbounds [256 x i64], [256 x i64]* %738, i64 0, i64 %742
  %744 = load i64, i64* %743, align 8
  %745 = add i64 %744, 1
  store i64 %745, i64* %743, align 8
  %746 = load %struct.conn*, %struct.conn** %4, align 8
  %747 = getelementptr inbounds %struct.conn, %struct.conn* %746, i32 0, i32 42
  %748 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %747, align 8
  %749 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %748, i32 0, i32 4
  %750 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %749, i32 0, i32 1
  %751 = load i64, i64* %750, align 8
  %752 = add i64 %751, 1
  store i64 %752, i64* %750, align 8
  br label %753

753:                                              ; preds = %733, %710
  %754 = load %struct.conn*, %struct.conn** %4, align 8
  %755 = getelementptr inbounds %struct.conn, %struct.conn* %754, i32 0, i32 42
  %756 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %755, align 8
  %757 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %756, i32 0, i32 4
  %758 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %757, i32 0, i32 0
  %759 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %758) #14
  %760 = load %struct.conn*, %struct.conn** %4, align 8
  call void @conn_set_state(%struct.conn* %760, i32 1)
  br label %808

761:                                              ; preds = %698
  %762 = load %struct.conn*, %struct.conn** %4, align 8
  %763 = getelementptr inbounds %struct.conn, %struct.conn* %762, i32 0, i32 42
  %764 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %763, align 8
  %765 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %764, i32 0, i32 4
  %766 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %765, i32 0, i32 0
  %767 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %766) #14
  %768 = load i8, i8* %16, align 1
  %769 = trunc i8 %768 to i1
  br i1 %769, label %770, label %785

770:                                              ; preds = %761
  %771 = load %struct.conn*, %struct.conn** %4, align 8
  %772 = getelementptr inbounds %struct.conn, %struct.conn* %771, i32 0, i32 42
  %773 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %772, align 8
  %774 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %773, i32 0, i32 4
  %775 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %774, i32 0, i32 5
  %776 = load i64, i64* %775, align 8
  %777 = add i64 %776, 1
  store i64 %777, i64* %775, align 8
  %778 = load %struct.conn*, %struct.conn** %4, align 8
  %779 = getelementptr inbounds %struct.conn, %struct.conn* %778, i32 0, i32 42
  %780 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %779, align 8
  %781 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %780, i32 0, i32 4
  %782 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %781, i32 0, i32 6
  %783 = load i64, i64* %782, align 8
  %784 = add i64 %783, 1
  store i64 %784, i64* %782, align 8
  br label %800

785:                                              ; preds = %761
  %786 = load %struct.conn*, %struct.conn** %4, align 8
  %787 = getelementptr inbounds %struct.conn, %struct.conn* %786, i32 0, i32 42
  %788 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %787, align 8
  %789 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %788, i32 0, i32 4
  %790 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %789, i32 0, i32 2
  %791 = load i64, i64* %790, align 8
  %792 = add i64 %791, 1
  store i64 %792, i64* %790, align 8
  %793 = load %struct.conn*, %struct.conn** %4, align 8
  %794 = getelementptr inbounds %struct.conn, %struct.conn* %793, i32 0, i32 42
  %795 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %794, align 8
  %796 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %795, i32 0, i32 4
  %797 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %796, i32 0, i32 1
  %798 = load i64, i64* %797, align 8
  %799 = add i64 %798, 1
  store i64 %799, i64* %797, align 8
  br label %800

800:                                              ; preds = %785, %770
  %801 = load %struct.conn*, %struct.conn** %4, align 8
  %802 = getelementptr inbounds %struct.conn, %struct.conn* %801, i32 0, i32 42
  %803 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %802, align 8
  %804 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %803, i32 0, i32 4
  %805 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %804, i32 0, i32 0
  %806 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %805) #14
  %807 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %807, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.54.1123, i64 0, i64 0))
  br label %808

808:                                              ; preds = %800, %753
  br label %826

809:                                              ; preds = %384
  %810 = load %struct._stritem*, %struct._stritem** %9, align 8
  %811 = icmp ne %struct._stritem* %810, null
  br i1 %811, label %812, label %823

812:                                              ; preds = %809
  %813 = load %struct._stritem*, %struct._stritem** %9, align 8
  call void @do_item_remove(%struct._stritem* %813)
  %814 = bitcast %struct._meta_flags* %11 to i16*
  %815 = load i16, i16* %814, align 8
  %816 = lshr i16 %815, 2
  %817 = and i16 %816, 1
  %818 = zext i16 %817 to i32
  %819 = icmp ne i32 %818, 0
  br i1 %819, label %820, label %822

820:                                              ; preds = %812
  %821 = load i32, i32* %12, align 4
  call void @item_unlock(i32 %821)
  br label %822

822:                                              ; preds = %820, %812
  br label %823

823:                                              ; preds = %822, %809
  %824 = load %struct.conn*, %struct.conn** %4, align 8
  %825 = load i8*, i8** %17, align 8
  call void @out_errstring(%struct.conn* %824, i8* %825)
  br label %826

826:                                              ; preds = %823, %808, %104, %57, %50, %45, %40, %31
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @process_mset_command(%struct.conn* %0, %struct.iovec* %1, i64 %2) #0 {
  %4 = alloca %struct.conn*, align 8
  %5 = alloca %struct.iovec*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca %struct._stritem*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i16, align 2
  %12 = alloca %struct._meta_flags, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca %struct._mc_resp*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i8, align 1
  %19 = alloca i32, align 4
  %20 = alloca %struct._logger*, align 8
  store %struct.conn* %0, %struct.conn** %4, align 8
  store %struct.iovec* %1, %struct.iovec** %5, align 8
  store i64 %2, i64* %6, align 8
  store i16 2, i16* %11, align 2
  %21 = bitcast %struct._meta_flags* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 48, i1 false)
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.49.1040, i64 0, i64 0), i8** %13, align 8
  store i32 0, i32* %15, align 4
  %22 = load %struct.conn*, %struct.conn** %4, align 8
  %23 = getelementptr inbounds %struct.conn, %struct.conn* %22, i32 0, i32 19
  %24 = load %struct._mc_resp*, %struct._mc_resp** %23, align 8
  store %struct._mc_resp* %24, %struct._mc_resp** %16, align 8
  %25 = load %struct._mc_resp*, %struct._mc_resp** %16, align 8
  %26 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %25, i32 0, i32 18
  %27 = getelementptr inbounds [1024 x i8], [1024 x i8]* %26, i64 0, i64 0
  store i8* %27, i8** %17, align 8
  br label %28

28:                                               ; preds = %3
  %29 = load i64, i64* %6, align 8
  %30 = icmp ult i64 %29, 3
  br i1 %30, label %31, label %33

31:                                               ; preds = %28
  %32 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %32, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15.993, i64 0, i64 0))
  br label %411

33:                                               ; preds = %28
  br label %34

34:                                               ; preds = %33
  %35 = load %struct.iovec*, %struct.iovec** %5, align 8
  %36 = getelementptr inbounds %struct.iovec, %struct.iovec* %35, i64 1
  %37 = getelementptr inbounds %struct.iovec, %struct.iovec* %36, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = icmp ugt i64 %38, 250
  br i1 %39, label %40, label %42

40:                                               ; preds = %34
  %41 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_errstring(%struct.conn* %41, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.49.1040, i64 0, i64 0))
  br label %411

42:                                               ; preds = %34
  %43 = load i64, i64* %6, align 8
  %44 = icmp eq i64 %43, 3
  br i1 %44, label %45, label %47

45:                                               ; preds = %42
  %46 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_errstring(%struct.conn* %46, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.49.1040, i64 0, i64 0))
  br label %411

47:                                               ; preds = %42
  %48 = load i64, i64* %6, align 8
  %49 = icmp ugt i64 %48, 20
  br i1 %49, label %50, label %52

50:                                               ; preds = %47
  %51 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_errstring(%struct.conn* %51, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.62.1124, i64 0, i64 0))
  br label %411

52:                                               ; preds = %47
  %53 = load %struct._mc_resp*, %struct._mc_resp** %16, align 8
  %54 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %53, i32 0, i32 18
  %55 = getelementptr inbounds [1024 x i8], [1024 x i8]* %54, i64 0, i64 0
  store i8* %55, i8** %17, align 8
  %56 = load %struct.iovec*, %struct.iovec** %5, align 8
  %57 = getelementptr inbounds %struct.iovec, %struct.iovec* %56, i64 2
  %58 = getelementptr inbounds %struct.iovec, %struct.iovec* %57, i32 0, i32 0
  %59 = load i8*, i8** %58, align 8
  %60 = call zeroext i1 @safe_strtol(i8* %59, i32* %15)
  br i1 %60, label %63, label %61

61:                                               ; preds = %52
  %62 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_errstring(%struct.conn* %62, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.49.1040, i64 0, i64 0))
  br label %411

63:                                               ; preds = %52
  %64 = load i32, i32* %15, align 4
  %65 = icmp slt i32 %64, 0
  br i1 %65, label %69, label %66

66:                                               ; preds = %63
  %67 = load i32, i32* %15, align 4
  %68 = icmp sgt i32 %67, 2147483645
  br i1 %68, label %69, label %71

69:                                               ; preds = %66, %63
  %70 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_errstring(%struct.conn* %70, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.49.1040, i64 0, i64 0))
  br label %411

71:                                               ; preds = %66
  %72 = load i32, i32* %15, align 4
  %73 = add nsw i32 %72, 2
  store i32 %73, i32* %15, align 4
  %74 = load %struct.iovec*, %struct.iovec** %5, align 8
  %75 = call i32 @_meta_flag_preparse(%struct.iovec* %74, i64 3, %struct._meta_flags* %12, i8** %13)
  %76 = icmp ne i32 %75, 0
  br i1 %76, label %77, label %78

77:                                               ; preds = %71
  br label %404

78:                                               ; preds = %71
  %79 = load %struct.iovec*, %struct.iovec** %5, align 8
  %80 = getelementptr inbounds %struct.iovec, %struct.iovec* %79, i64 1
  %81 = getelementptr inbounds %struct.iovec, %struct.iovec* %80, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8
  store i8* %82, i8** %7, align 8
  %83 = load %struct.iovec*, %struct.iovec** %5, align 8
  %84 = getelementptr inbounds %struct.iovec, %struct.iovec* %83, i64 1
  %85 = getelementptr inbounds %struct.iovec, %struct.iovec* %84, i32 0, i32 1
  %86 = load i64, i64* %85, align 8
  store i64 %86, i64* %8, align 8
  %87 = bitcast %struct._meta_flags* %12 to i16*
  %88 = load i16, i16* %87, align 8
  %89 = lshr i16 %88, 8
  %90 = and i16 %89, 1
  %91 = zext i16 %90 to i32
  %92 = icmp ne i32 %91, 0
  %93 = load %struct.conn*, %struct.conn** %4, align 8
  %94 = getelementptr inbounds %struct.conn, %struct.conn* %93, i32 0, i32 34
  %95 = zext i1 %92 to i8
  store i8 %95, i8* %94, align 4
  %96 = load %struct.conn*, %struct.conn** %4, align 8
  %97 = getelementptr inbounds %struct.conn, %struct.conn* %96, i32 0, i32 37
  store i64 0, i64* %97, align 8
  store i8 0, i8* %18, align 1
  store i32 2, i32* %10, align 4
  br label %98

98:                                               ; preds = %161, %78
  %99 = load i32, i32* %10, align 4
  %100 = sext i32 %99 to i64
  %101 = load i64, i64* %6, align 8
  %102 = sub i64 %101, 1
  %103 = icmp ult i64 %100, %102
  br i1 %103, label %104, label %164

104:                                              ; preds = %98
  %105 = load %struct.iovec*, %struct.iovec** %5, align 8
  %106 = load i32, i32* %10, align 4
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds %struct.iovec, %struct.iovec* %105, i64 %107
  %109 = getelementptr inbounds %struct.iovec, %struct.iovec* %108, i32 0, i32 0
  %110 = load i8*, i8** %109, align 8
  %111 = getelementptr inbounds i8, i8* %110, i64 0
  %112 = load i8, i8* %111, align 1
  %113 = sext i8 %112 to i32
  switch i32 %113, label %160 [
    i32 79, label %114
    i32 107, label %148
    i32 99, label %154
  ]

114:                                              ; preds = %104
  %115 = load %struct.iovec*, %struct.iovec** %5, align 8
  %116 = load i32, i32* %10, align 4
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds %struct.iovec, %struct.iovec* %115, i64 %117
  %119 = getelementptr inbounds %struct.iovec, %struct.iovec* %118, i32 0, i32 1
  %120 = load i64, i64* %119, align 8
  %121 = icmp ugt i64 %120, 32
  br i1 %121, label %122, label %123

122:                                              ; preds = %114
  store i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.53.1134, i64 0, i64 0), i8** %13, align 8
  store i8 1, i8* %18, align 1
  br label %160

123:                                              ; preds = %114
  %124 = load i8*, i8** %17, align 8
  store i8 32, i8* %124, align 1
  %125 = load i8*, i8** %17, align 8
  %126 = getelementptr inbounds i8, i8* %125, i32 1
  store i8* %126, i8** %17, align 8
  %127 = load i8*, i8** %17, align 8
  %128 = load %struct.iovec*, %struct.iovec** %5, align 8
  %129 = load i32, i32* %10, align 4
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds %struct.iovec, %struct.iovec* %128, i64 %130
  %132 = getelementptr inbounds %struct.iovec, %struct.iovec* %131, i32 0, i32 0
  %133 = load i8*, i8** %132, align 8
  %134 = load %struct.iovec*, %struct.iovec** %5, align 8
  %135 = load i32, i32* %10, align 4
  %136 = sext i32 %135 to i64
  %137 = getelementptr inbounds %struct.iovec, %struct.iovec* %134, i64 %136
  %138 = getelementptr inbounds %struct.iovec, %struct.iovec* %137, i32 0, i32 1
  %139 = load i64, i64* %138, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %127, i8* align 1 %133, i64 %139, i1 false)
  %140 = load %struct.iovec*, %struct.iovec** %5, align 8
  %141 = load i32, i32* %10, align 4
  %142 = sext i32 %141 to i64
  %143 = getelementptr inbounds %struct.iovec, %struct.iovec* %140, i64 %142
  %144 = getelementptr inbounds %struct.iovec, %struct.iovec* %143, i32 0, i32 1
  %145 = load i64, i64* %144, align 8
  %146 = load i8*, i8** %17, align 8
  %147 = getelementptr inbounds i8, i8* %146, i64 %145
  store i8* %147, i8** %17, align 8
  br label %160

148:                                              ; preds = %104
  %149 = load i8*, i8** %17, align 8
  store i8 32, i8* %149, align 1
  %150 = load i8*, i8** %17, align 8
  %151 = getelementptr inbounds i8, i8* %150, i64 1
  store i8 107, i8* %151, align 1
  %152 = load i8*, i8** %17, align 8
  %153 = getelementptr inbounds i8, i8* %152, i64 2
  store i8* %153, i8** %17, align 8
  br label %160

154:                                              ; preds = %104
  %155 = load i8*, i8** %17, align 8
  store i8 32, i8* %155, align 1
  %156 = load i8*, i8** %17, align 8
  %157 = getelementptr inbounds i8, i8* %156, i64 1
  store i8 99, i8* %157, align 1
  %158 = load i8*, i8** %17, align 8
  %159 = getelementptr inbounds i8, i8* %158, i64 2
  store i8* %159, i8** %17, align 8
  br label %160

160:                                              ; preds = %104, %154, %148, %123, %122
  br label %161

161:                                              ; preds = %160
  %162 = load i32, i32* %10, align 4
  %163 = add nsw i32 %162, 1
  store i32 %163, i32* %10, align 4
  br label %98, !llvm.loop !163

164:                                              ; preds = %98
  %165 = getelementptr inbounds %struct._meta_flags, %struct._meta_flags* %12, i32 0, i32 1
  %166 = load i8, i8* %165, align 2
  %167 = sext i8 %166 to i32
  switch i32 %167, label %174 [
    i32 0, label %168
    i32 69, label %169
    i32 65, label %170
    i32 80, label %171
    i32 82, label %172
    i32 83, label %173
  ]

168:                                              ; preds = %164
  br label %175

169:                                              ; preds = %164
  store i16 1, i16* %11, align 2
  br label %175

170:                                              ; preds = %164
  store i16 4, i16* %11, align 2
  br label %175

171:                                              ; preds = %164
  store i16 5, i16* %11, align 2
  br label %175

172:                                              ; preds = %164
  store i16 3, i16* %11, align 2
  br label %175

173:                                              ; preds = %164
  store i16 2, i16* %11, align 2
  br label %175

174:                                              ; preds = %164
  store i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.63.1142, i64 0, i64 0), i8** %13, align 8
  br label %404

175:                                              ; preds = %173, %172, %171, %170, %169, %168
  %176 = bitcast %struct._meta_flags* %12 to i16*
  %177 = load i16, i16* %176, align 8
  %178 = lshr i16 %177, 9
  %179 = and i16 %178, 1
  %180 = zext i16 %179 to i32
  %181 = icmp ne i32 %180, 0
  br i1 %181, label %182, label %191

182:                                              ; preds = %175
  %183 = load i16, i16* %11, align 2
  %184 = sext i16 %183 to i32
  %185 = icmp eq i32 %184, 2
  br i1 %185, label %190, label %186

186:                                              ; preds = %182
  %187 = load i16, i16* %11, align 2
  %188 = sext i16 %187 to i32
  %189 = icmp eq i32 %188, 3
  br i1 %189, label %190, label %191

190:                                              ; preds = %186, %182
  store i16 6, i16* %11, align 2
  br label %191

191:                                              ; preds = %190, %186, %175
  %192 = load i8, i8* %18, align 1
  %193 = trunc i8 %192 to i1
  br i1 %193, label %194, label %195

194:                                              ; preds = %191
  br label %404

195:                                              ; preds = %191
  %196 = load i8*, i8** %7, align 8
  %197 = load i64, i64* %8, align 8
  %198 = getelementptr inbounds %struct._meta_flags, %struct._meta_flags* %12, i32 0, i32 5
  %199 = load i32, i32* %198, align 8
  %200 = getelementptr inbounds %struct._meta_flags, %struct._meta_flags* %12, i32 0, i32 2
  %201 = load i32, i32* %200, align 4
  %202 = load i32, i32* %15, align 4
  %203 = call %struct._stritem* @item_alloc(i8* %196, i64 %197, i32 %199, i32 %201, i32 %202)
  store %struct._stritem* %203, %struct._stritem** %9, align 8
  %204 = load %struct._stritem*, %struct._stritem** %9, align 8
  %205 = icmp eq %struct._stritem* %204, null
  br i1 %205, label %206, label %306

206:                                              ; preds = %195
  %207 = load i64, i64* %8, align 8
  %208 = getelementptr inbounds %struct._meta_flags, %struct._meta_flags* %12, i32 0, i32 5
  %209 = load i32, i32* %208, align 8
  %210 = load i32, i32* %15, align 4
  %211 = call zeroext i1 @item_size_ok(i64 %207, i32 %209, i32 %210)
  br i1 %211, label %232, label %212

212:                                              ; preds = %206
  store i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.64.1110, i64 0, i64 0), i8** %13, align 8
  store i32 4, i32* %19, align 4
  %213 = load %struct.conn*, %struct.conn** %4, align 8
  %214 = getelementptr inbounds %struct.conn, %struct.conn* %213, i32 0, i32 42
  %215 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %214, align 8
  %216 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %215, i32 0, i32 4
  %217 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %216, i32 0, i32 0
  %218 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %217) #14
  %219 = load %struct.conn*, %struct.conn** %4, align 8
  %220 = getelementptr inbounds %struct.conn, %struct.conn* %219, i32 0, i32 42
  %221 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %220, align 8
  %222 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %221, i32 0, i32 4
  %223 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %222, i32 0, i32 23
  %224 = load i64, i64* %223, align 8
  %225 = add i64 %224, 1
  store i64 %225, i64* %223, align 8
  %226 = load %struct.conn*, %struct.conn** %4, align 8
  %227 = getelementptr inbounds %struct.conn, %struct.conn* %226, i32 0, i32 42
  %228 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %227, align 8
  %229 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %228, i32 0, i32 4
  %230 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %229, i32 0, i32 0
  %231 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %230) #14
  br label %252

232:                                              ; preds = %206
  store i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.65.1111, i64 0, i64 0), i8** %13, align 8
  store i32 5, i32* %19, align 4
  %233 = load %struct.conn*, %struct.conn** %4, align 8
  %234 = getelementptr inbounds %struct.conn, %struct.conn* %233, i32 0, i32 42
  %235 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %234, align 8
  %236 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %235, i32 0, i32 4
  %237 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %236, i32 0, i32 0
  %238 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %237) #14
  %239 = load %struct.conn*, %struct.conn** %4, align 8
  %240 = getelementptr inbounds %struct.conn, %struct.conn* %239, i32 0, i32 42
  %241 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %240, align 8
  %242 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %241, i32 0, i32 4
  %243 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %242, i32 0, i32 24
  %244 = load i64, i64* %243, align 8
  %245 = add i64 %244, 1
  store i64 %245, i64* %243, align 8
  %246 = load %struct.conn*, %struct.conn** %4, align 8
  %247 = getelementptr inbounds %struct.conn, %struct.conn* %246, i32 0, i32 42
  %248 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %247, align 8
  %249 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %248, i32 0, i32 4
  %250 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %249, i32 0, i32 0
  %251 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %250) #14
  br label %252

252:                                              ; preds = %232, %212
  br label %253

253:                                              ; preds = %252
  %254 = load %struct.conn*, %struct.conn** %4, align 8
  %255 = getelementptr inbounds %struct.conn, %struct.conn* %254, i32 0, i32 42
  %256 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %255, align 8
  %257 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %256, i32 0, i32 11
  %258 = load %struct._logger*, %struct._logger** %257, align 8
  store %struct._logger* %258, %struct._logger** %20, align 8
  %259 = load %struct.conn*, %struct.conn** %4, align 8
  %260 = getelementptr inbounds %struct.conn, %struct.conn* %259, i32 0, i32 42
  %261 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %260, align 8
  %262 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %261, i32 0, i32 11
  %263 = load %struct._logger*, %struct._logger** %262, align 8
  %264 = icmp eq %struct._logger* %263, null
  br i1 %264, label %265, label %269

265:                                              ; preds = %253
  %266 = load i32, i32* @logger_key, align 4
  %267 = call i8* @pthread_getspecific(i32 %266) #14
  %268 = bitcast i8* %267 to %struct._logger*
  store %struct._logger* %268, %struct._logger** %20, align 8
  br label %269

269:                                              ; preds = %265, %253
  %270 = load %struct._logger*, %struct._logger** %20, align 8
  %271 = getelementptr inbounds %struct._logger, %struct._logger* %270, i32 0, i32 8
  %272 = load i16, i16* %271, align 4
  %273 = zext i16 %272 to i32
  %274 = and i32 %273, 8
  %275 = icmp ne i32 %274, 0
  br i1 %275, label %276, label %284

276:                                              ; preds = %269
  %277 = load %struct._logger*, %struct._logger** %20, align 8
  %278 = load i32, i32* %19, align 4
  %279 = load i16, i16* %11, align 2
  %280 = sext i16 %279 to i32
  %281 = load i8*, i8** %7, align 8
  %282 = load i64, i64* %8, align 8
  %283 = call i32 (%struct._logger*, i32, i8*, ...) @logger_log(%struct._logger* %277, i32 3, i8* null, i32 %278, i32 %280, i8* %281, i64 %282, i32 0, i32 0)
  br label %284

284:                                              ; preds = %276, %269
  br label %285

285:                                              ; preds = %284
  %286 = load i8*, i8** %7, align 8
  %287 = load i64, i64* %8, align 8
  %288 = load %struct.conn*, %struct.conn** %4, align 8
  %289 = call %struct._stritem* @item_get_locked(i8* %286, i64 %287, %struct.conn* %288, i1 zeroext false, i32* %14)
  store %struct._stritem* %289, %struct._stritem** %9, align 8
  %290 = load %struct._stritem*, %struct._stritem** %9, align 8
  %291 = icmp ne %struct._stritem* %290, null
  br i1 %291, label %292, label %304

292:                                              ; preds = %285
  %293 = load %struct._stritem*, %struct._stritem** %9, align 8
  %294 = load i32, i32* %14, align 4
  call void @do_item_unlink(%struct._stritem* %293, i32 %294)
  br label %295

295:                                              ; preds = %292
  %296 = load %struct.conn*, %struct.conn** %4, align 8
  %297 = getelementptr inbounds %struct.conn, %struct.conn* %296, i32 0, i32 42
  %298 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %297, align 8
  %299 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %298, i32 0, i32 10
  %300 = load i8*, i8** %299, align 8
  %301 = load %struct._stritem*, %struct._stritem** %9, align 8
  call void @storage_delete(i8* %300, %struct._stritem* %301)
  br label %302

302:                                              ; preds = %295
  %303 = load %struct._stritem*, %struct._stritem** %9, align 8
  call void @do_item_remove(%struct._stritem* %303)
  br label %304

304:                                              ; preds = %302, %285
  %305 = load i32, i32* %14, align 4
  call void @item_unlock(i32 %305)
  br label %404

306:                                              ; preds = %195
  %307 = load %struct._stritem*, %struct._stritem** %9, align 8
  %308 = getelementptr inbounds %struct._stritem, %struct._stritem* %307, i32 0, i32 7
  %309 = load i16, i16* %308, align 2
  %310 = zext i16 %309 to i32
  %311 = and i32 %310, 2
  %312 = icmp ne i32 %311, 0
  br i1 %312, label %313, label %320

313:                                              ; preds = %306
  %314 = getelementptr inbounds %struct._meta_flags, %struct._meta_flags* %12, i32 0, i32 6
  %315 = load i64, i64* %314, align 8
  %316 = load %struct._stritem*, %struct._stritem** %9, align 8
  %317 = getelementptr inbounds %struct._stritem, %struct._stritem* %316, i32 0, i32 10
  %318 = getelementptr inbounds [0 x %union.anon.10], [0 x %union.anon.10]* %317, i64 0, i64 0
  %319 = bitcast %union.anon.10* %318 to i64*
  store i64 %315, i64* %319, align 8
  br label %320

320:                                              ; preds = %313, %306
  %321 = load %struct._stritem*, %struct._stritem** %9, align 8
  %322 = bitcast %struct._stritem* %321 to i8*
  %323 = load %struct.conn*, %struct.conn** %4, align 8
  %324 = getelementptr inbounds %struct.conn, %struct.conn* %323, i32 0, i32 23
  store i8* %322, i8** %324, align 8
  %325 = load %struct._stritem*, %struct._stritem** %9, align 8
  %326 = getelementptr inbounds %struct._stritem, %struct._stritem* %325, i32 0, i32 10
  %327 = bitcast [0 x %union.anon.10]* %326 to i8*
  %328 = load %struct._stritem*, %struct._stritem** %9, align 8
  %329 = getelementptr inbounds %struct._stritem, %struct._stritem* %328, i32 0, i32 9
  %330 = load i8, i8* %329, align 1
  %331 = zext i8 %330 to i32
  %332 = sext i32 %331 to i64
  %333 = getelementptr inbounds i8, i8* %327, i64 %332
  %334 = getelementptr inbounds i8, i8* %333, i64 1
  %335 = load %struct._stritem*, %struct._stritem** %9, align 8
  %336 = getelementptr inbounds %struct._stritem, %struct._stritem* %335, i32 0, i32 7
  %337 = load i16, i16* %336, align 2
  %338 = zext i16 %337 to i32
  %339 = and i32 %338, 256
  %340 = icmp ne i32 %339, 0
  %341 = zext i1 %340 to i64
  %342 = select i1 %340, i64 4, i64 0
  %343 = getelementptr inbounds i8, i8* %334, i64 %342
  %344 = load %struct._stritem*, %struct._stritem** %9, align 8
  %345 = getelementptr inbounds %struct._stritem, %struct._stritem* %344, i32 0, i32 7
  %346 = load i16, i16* %345, align 2
  %347 = zext i16 %346 to i32
  %348 = and i32 %347, 2
  %349 = icmp ne i32 %348, 0
  %350 = zext i1 %349 to i64
  %351 = select i1 %349, i64 8, i64 0
  %352 = getelementptr inbounds i8, i8* %343, i64 %351
  %353 = load %struct.conn*, %struct.conn** %4, align 8
  %354 = getelementptr inbounds %struct.conn, %struct.conn* %353, i32 0, i32 21
  store i8* %352, i8** %354, align 8
  %355 = load %struct._stritem*, %struct._stritem** %9, align 8
  %356 = getelementptr inbounds %struct._stritem, %struct._stritem* %355, i32 0, i32 5
  %357 = load i32, i32* %356, align 8
  %358 = load %struct.conn*, %struct.conn** %4, align 8
  %359 = getelementptr inbounds %struct.conn, %struct.conn* %358, i32 0, i32 22
  store i32 %357, i32* %359, align 8
  %360 = load i16, i16* %11, align 2
  %361 = load %struct.conn*, %struct.conn** %4, align 8
  %362 = getelementptr inbounds %struct.conn, %struct.conn* %361, i32 0, i32 38
  store i16 %360, i16* %362, align 8
  %363 = bitcast %struct._meta_flags* %12 to i16*
  %364 = load i16, i16* %363, align 8
  %365 = lshr i16 %364, 11
  %366 = and i16 %365, 1
  %367 = zext i16 %366 to i32
  %368 = icmp ne i32 %367, 0
  br i1 %368, label %369, label %376

369:                                              ; preds = %320
  %370 = load %struct._stritem*, %struct._stritem** %9, align 8
  %371 = getelementptr inbounds %struct._stritem, %struct._stritem* %370, i32 0, i32 7
  %372 = load i16, i16* %371, align 2
  %373 = zext i16 %372 to i32
  %374 = or i32 %373, 4096
  %375 = trunc i32 %374 to i16
  store i16 %375, i16* %371, align 2
  br label %376

376:                                              ; preds = %369, %320
  %377 = bitcast %struct._meta_flags* %12 to i16*
  %378 = load i16, i16* %377, align 8
  %379 = lshr i16 %378, 7
  %380 = and i16 %379, 1
  %381 = zext i16 %380 to i32
  %382 = icmp ne i32 %381, 0
  br i1 %382, label %383, label %390

383:                                              ; preds = %376
  %384 = load i16, i16* %11, align 2
  %385 = sext i16 %384 to i32
  %386 = icmp eq i32 %385, 6
  br i1 %386, label %387, label %390

387:                                              ; preds = %383
  %388 = load %struct.conn*, %struct.conn** %4, align 8
  %389 = getelementptr inbounds %struct.conn, %struct.conn* %388, i32 0, i32 4
  store i8 1, i8* %389, align 2
  br label %390

390:                                              ; preds = %387, %383, %376
  %391 = load i8*, i8** %17, align 8
  %392 = load %struct._mc_resp*, %struct._mc_resp** %16, align 8
  %393 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %392, i32 0, i32 18
  %394 = getelementptr inbounds [1024 x i8], [1024 x i8]* %393, i64 0, i64 0
  %395 = ptrtoint i8* %391 to i64
  %396 = ptrtoint i8* %394 to i64
  %397 = sub i64 %395, %396
  %398 = trunc i64 %397 to i32
  %399 = load %struct._mc_resp*, %struct._mc_resp** %16, align 8
  %400 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %399, i32 0, i32 2
  store i32 %398, i32* %400, align 8
  %401 = load %struct.conn*, %struct.conn** %4, align 8
  %402 = getelementptr inbounds %struct.conn, %struct.conn* %401, i32 0, i32 5
  store i8 1, i8* %402, align 1
  %403 = load %struct.conn*, %struct.conn** %4, align 8
  call void @conn_set_state(%struct.conn* %403, i32 6)
  br label %411

404:                                              ; preds = %304, %194, %174, %77
  %405 = load i32, i32* %15, align 4
  %406 = load %struct.conn*, %struct.conn** %4, align 8
  %407 = getelementptr inbounds %struct.conn, %struct.conn* %406, i32 0, i32 24
  store i32 %405, i32* %407, align 8
  %408 = load %struct.conn*, %struct.conn** %4, align 8
  %409 = load i8*, i8** %13, align 8
  call void @out_errstring(%struct.conn* %408, i8* %409)
  %410 = load %struct.conn*, %struct.conn** %4, align 8
  call void @conn_set_state(%struct.conn* %410, i32 7)
  br label %411

411:                                              ; preds = %404, %390, %69, %61, %50, %45, %40, %31
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @process_mdelete_command(%struct.conn* %0, %struct.iovec* %1, i64 %2) #0 {
  %4 = alloca %struct.conn*, align 8
  %5 = alloca %struct.iovec*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca %struct._stritem*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %struct._meta_flags, align 8
  %13 = alloca i8*, align 8
  %14 = alloca %struct._mc_resp*, align 8
  %15 = alloca i8*, align 8
  store %struct.conn* %0, %struct.conn** %4, align 8
  store %struct.iovec* %1, %struct.iovec** %5, align 8
  store i64 %2, i64* %6, align 8
  store %struct._stritem* null, %struct._stritem** %9, align 8
  %16 = bitcast %struct._meta_flags* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 48, i1 false)
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.49.1040, i64 0, i64 0), i8** %13, align 8
  %17 = load %struct.conn*, %struct.conn** %4, align 8
  %18 = getelementptr inbounds %struct.conn, %struct.conn* %17, i32 0, i32 19
  %19 = load %struct._mc_resp*, %struct._mc_resp** %18, align 8
  store %struct._mc_resp* %19, %struct._mc_resp** %14, align 8
  %20 = load %struct._mc_resp*, %struct._mc_resp** %14, align 8
  %21 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %20, i32 0, i32 18
  %22 = getelementptr inbounds [1024 x i8], [1024 x i8]* %21, i64 0, i64 0
  %23 = getelementptr inbounds i8, i8* %22, i64 3
  store i8* %23, i8** %15, align 8
  br label %24

24:                                               ; preds = %3
  %25 = load i64, i64* %6, align 8
  %26 = icmp ult i64 %25, 3
  br i1 %26, label %27, label %29

27:                                               ; preds = %24
  %28 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %28, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15.993, i64 0, i64 0))
  br label %400

29:                                               ; preds = %24
  br label %30

30:                                               ; preds = %29
  %31 = load %struct.iovec*, %struct.iovec** %5, align 8
  %32 = getelementptr inbounds %struct.iovec, %struct.iovec* %31, i64 1
  %33 = getelementptr inbounds %struct.iovec, %struct.iovec* %32, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = icmp ugt i64 %34, 250
  br i1 %35, label %36, label %38

36:                                               ; preds = %30
  %37 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %37, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.49.1040, i64 0, i64 0))
  br label %400

38:                                               ; preds = %30
  %39 = load i64, i64* %6, align 8
  %40 = icmp ugt i64 %39, 20
  br i1 %40, label %41, label %43

41:                                               ; preds = %38
  %42 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %42, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.62.1124, i64 0, i64 0))
  br label %400

43:                                               ; preds = %38
  %44 = load %struct.iovec*, %struct.iovec** %5, align 8
  %45 = call i32 @_meta_flag_preparse(%struct.iovec* %44, i64 2, %struct._meta_flags* %12, i8** %13)
  %46 = icmp ne i32 %45, 0
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_errstring(%struct.conn* %48, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.66.1125, i64 0, i64 0))
  br label %400

49:                                               ; preds = %43
  %50 = bitcast %struct._meta_flags* %12 to i16*
  %51 = load i16, i16* %50, align 8
  %52 = lshr i16 %51, 8
  %53 = and i16 %52, 1
  %54 = zext i16 %53 to i32
  %55 = icmp ne i32 %54, 0
  %56 = load %struct.conn*, %struct.conn** %4, align 8
  %57 = getelementptr inbounds %struct.conn, %struct.conn* %56, i32 0, i32 34
  %58 = zext i1 %55 to i8
  store i8 %58, i8* %57, align 4
  %59 = load %struct.iovec*, %struct.iovec** %5, align 8
  %60 = getelementptr inbounds %struct.iovec, %struct.iovec* %59, i64 1
  %61 = getelementptr inbounds %struct.iovec, %struct.iovec* %60, i32 0, i32 0
  %62 = load i8*, i8** %61, align 8
  store i8* %62, i8** %7, align 8
  %63 = load %struct.iovec*, %struct.iovec** %5, align 8
  %64 = getelementptr inbounds %struct.iovec, %struct.iovec* %63, i64 1
  %65 = getelementptr inbounds %struct.iovec, %struct.iovec* %64, i32 0, i32 1
  %66 = load i64, i64* %65, align 8
  store i64 %66, i64* %8, align 8
  store i32 2, i32* %10, align 4
  br label %67

67:                                               ; preds = %150, %49
  %68 = load i32, i32* %10, align 4
  %69 = sext i32 %68 to i64
  %70 = load i64, i64* %6, align 8
  %71 = sub i64 %70, 1
  %72 = icmp ult i64 %69, %71
  br i1 %72, label %73, label %153

73:                                               ; preds = %67
  %74 = load %struct.iovec*, %struct.iovec** %5, align 8
  %75 = load i32, i32* %10, align 4
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds %struct.iovec, %struct.iovec* %74, i64 %76
  %78 = getelementptr inbounds %struct.iovec, %struct.iovec* %77, i32 0, i32 0
  %79 = load i8*, i8** %78, align 8
  %80 = getelementptr inbounds i8, i8* %79, i64 0
  %81 = load i8, i8* %80, align 1
  %82 = sext i8 %81 to i32
  switch i32 %82, label %149 [
    i32 79, label %83
    i32 107, label %117
  ]

83:                                               ; preds = %73
  %84 = load %struct.iovec*, %struct.iovec** %5, align 8
  %85 = load i32, i32* %10, align 4
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds %struct.iovec, %struct.iovec* %84, i64 %86
  %88 = getelementptr inbounds %struct.iovec, %struct.iovec* %87, i32 0, i32 1
  %89 = load i64, i64* %88, align 8
  %90 = icmp ugt i64 %89, 32
  br i1 %90, label %91, label %92

91:                                               ; preds = %83
  store i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.53.1134, i64 0, i64 0), i8** %13, align 8
  br label %397

92:                                               ; preds = %83
  %93 = load i8*, i8** %15, align 8
  store i8 32, i8* %93, align 1
  %94 = load i8*, i8** %15, align 8
  %95 = getelementptr inbounds i8, i8* %94, i32 1
  store i8* %95, i8** %15, align 8
  %96 = load i8*, i8** %15, align 8
  %97 = load %struct.iovec*, %struct.iovec** %5, align 8
  %98 = load i32, i32* %10, align 4
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds %struct.iovec, %struct.iovec* %97, i64 %99
  %101 = getelementptr inbounds %struct.iovec, %struct.iovec* %100, i32 0, i32 0
  %102 = load i8*, i8** %101, align 8
  %103 = load %struct.iovec*, %struct.iovec** %5, align 8
  %104 = load i32, i32* %10, align 4
  %105 = sext i32 %104 to i64
  %106 = getelementptr inbounds %struct.iovec, %struct.iovec* %103, i64 %105
  %107 = getelementptr inbounds %struct.iovec, %struct.iovec* %106, i32 0, i32 1
  %108 = load i64, i64* %107, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %96, i8* align 1 %102, i64 %108, i1 false)
  %109 = load %struct.iovec*, %struct.iovec** %5, align 8
  %110 = load i32, i32* %10, align 4
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds %struct.iovec, %struct.iovec* %109, i64 %111
  %113 = getelementptr inbounds %struct.iovec, %struct.iovec* %112, i32 0, i32 1
  %114 = load i64, i64* %113, align 8
  %115 = load i8*, i8** %15, align 8
  %116 = getelementptr inbounds i8, i8* %115, i64 %114
  store i8* %116, i8** %15, align 8
  br label %149

117:                                              ; preds = %73
  %118 = load i8*, i8** %15, align 8
  store i8 32, i8* %118, align 1
  %119 = load i8*, i8** %15, align 8
  %120 = getelementptr inbounds i8, i8* %119, i64 1
  store i8 107, i8* %120, align 1
  %121 = load i8*, i8** %15, align 8
  %122 = getelementptr inbounds i8, i8* %121, i64 2
  store i8* %122, i8** %15, align 8
  %123 = bitcast %struct._meta_flags* %12 to i16*
  %124 = load i16, i16* %123, align 8
  %125 = lshr i16 %124, 11
  %126 = and i16 %125, 1
  %127 = zext i16 %126 to i32
  %128 = icmp ne i32 %127, 0
  br i1 %128, label %136, label %129

129:                                              ; preds = %117
  %130 = load i8*, i8** %15, align 8
  %131 = load i8*, i8** %7, align 8
  %132 = load i64, i64* %8, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %130, i8* align 1 %131, i64 %132, i1 false)
  %133 = load i64, i64* %8, align 8
  %134 = load i8*, i8** %15, align 8
  %135 = getelementptr inbounds i8, i8* %134, i64 %133
  store i8* %135, i8** %15, align 8
  br label %148

136:                                              ; preds = %117
  %137 = load i8*, i8** %7, align 8
  %138 = load i64, i64* %8, align 8
  %139 = load i8*, i8** %15, align 8
  %140 = call i64 @base64_encode(i8* %137, i64 %138, i8* %139, i64 512)
  %141 = load i8*, i8** %15, align 8
  %142 = getelementptr inbounds i8, i8* %141, i64 %140
  store i8* %142, i8** %15, align 8
  %143 = load i8*, i8** %15, align 8
  store i8 32, i8* %143, align 1
  %144 = load i8*, i8** %15, align 8
  %145 = getelementptr inbounds i8, i8* %144, i64 1
  store i8 98, i8* %145, align 1
  %146 = load i8*, i8** %15, align 8
  %147 = getelementptr inbounds i8, i8* %146, i64 2
  store i8* %147, i8** %15, align 8
  br label %148

148:                                              ; preds = %136, %129
  br label %149

149:                                              ; preds = %73, %148, %92
  br label %150

150:                                              ; preds = %149
  %151 = load i32, i32* %10, align 4
  %152 = add nsw i32 %151, 1
  store i32 %152, i32* %10, align 4
  br label %67, !llvm.loop !164

153:                                              ; preds = %67
  %154 = load i8*, i8** %7, align 8
  %155 = load i64, i64* %8, align 8
  %156 = load %struct.conn*, %struct.conn** %4, align 8
  %157 = call %struct._stritem* @item_get_locked(i8* %154, i64 %155, %struct.conn* %156, i1 zeroext false, i32* %11)
  store %struct._stritem* %157, %struct._stritem** %9, align 8
  %158 = load %struct._stritem*, %struct._stritem** %9, align 8
  %159 = icmp ne %struct._stritem* %158, null
  br i1 %159, label %160, label %337

160:                                              ; preds = %153
  %161 = bitcast %struct._meta_flags* %12 to i16*
  %162 = load i16, i16* %161, align 8
  %163 = lshr i16 %162, 9
  %164 = and i16 %163, 1
  %165 = zext i16 %164 to i32
  %166 = icmp ne i32 %165, 0
  br i1 %166, label %167, label %209

167:                                              ; preds = %160
  %168 = load %struct._stritem*, %struct._stritem** %9, align 8
  %169 = getelementptr inbounds %struct._stritem, %struct._stritem* %168, i32 0, i32 7
  %170 = load i16, i16* %169, align 2
  %171 = zext i16 %170 to i32
  %172 = and i32 %171, 2
  %173 = icmp ne i32 %172, 0
  br i1 %173, label %174, label %180

174:                                              ; preds = %167
  %175 = load %struct._stritem*, %struct._stritem** %9, align 8
  %176 = getelementptr inbounds %struct._stritem, %struct._stritem* %175, i32 0, i32 10
  %177 = getelementptr inbounds [0 x %union.anon.10], [0 x %union.anon.10]* %176, i64 0, i64 0
  %178 = bitcast %union.anon.10* %177 to i64*
  %179 = load i64, i64* %178, align 8
  br label %181

180:                                              ; preds = %167
  br label %181

181:                                              ; preds = %180, %174
  %182 = phi i64 [ %179, %174 ], [ 0, %180 ]
  %183 = getelementptr inbounds %struct._meta_flags, %struct._meta_flags* %12, i32 0, i32 6
  %184 = load i64, i64* %183, align 8
  %185 = icmp ne i64 %182, %184
  br i1 %185, label %186, label %209

186:                                              ; preds = %181
  %187 = load %struct.conn*, %struct.conn** %4, align 8
  %188 = getelementptr inbounds %struct.conn, %struct.conn* %187, i32 0, i32 42
  %189 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %188, align 8
  %190 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %189, i32 0, i32 4
  %191 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %190, i32 0, i32 0
  %192 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %191) #14
  %193 = load %struct.conn*, %struct.conn** %4, align 8
  %194 = getelementptr inbounds %struct.conn, %struct.conn* %193, i32 0, i32 42
  %195 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %194, align 8
  %196 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %195, i32 0, i32 4
  %197 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %196, i32 0, i32 7
  %198 = load i64, i64* %197, align 8
  %199 = add i64 %198, 1
  store i64 %199, i64* %197, align 8
  %200 = load %struct.conn*, %struct.conn** %4, align 8
  %201 = getelementptr inbounds %struct.conn, %struct.conn* %200, i32 0, i32 42
  %202 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %201, align 8
  %203 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %202, i32 0, i32 4
  %204 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %203, i32 0, i32 0
  %205 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %204) #14
  %206 = load %struct._mc_resp*, %struct._mc_resp** %14, align 8
  %207 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %206, i32 0, i32 18
  %208 = getelementptr inbounds [1024 x i8], [1024 x i8]* %207, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %208, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.67.1132, i64 0, i64 0), i64 3, i1 false)
  br label %360

209:                                              ; preds = %181, %160
  %210 = bitcast %struct._meta_flags* %12 to i16*
  %211 = load i16, i16* %210, align 8
  %212 = lshr i16 %211, 7
  %213 = and i16 %212, 1
  %214 = zext i16 %213 to i32
  %215 = icmp ne i32 %214, 0
  br i1 %215, label %216, label %279

216:                                              ; preds = %209
  %217 = bitcast %struct._meta_flags* %12 to i16*
  %218 = load i16, i16* %217, align 8
  %219 = lshr i16 %218, 10
  %220 = and i16 %219, 1
  %221 = zext i16 %220 to i32
  %222 = icmp ne i32 %221, 0
  br i1 %222, label %223, label %228

223:                                              ; preds = %216
  %224 = getelementptr inbounds %struct._meta_flags, %struct._meta_flags* %12, i32 0, i32 2
  %225 = load i32, i32* %224, align 4
  %226 = load %struct._stritem*, %struct._stritem** %9, align 8
  %227 = getelementptr inbounds %struct._stritem, %struct._stritem* %226, i32 0, i32 4
  store i32 %225, i32* %227, align 4
  br label %228

228:                                              ; preds = %223, %216
  %229 = load %struct._stritem*, %struct._stritem** %9, align 8
  %230 = getelementptr inbounds %struct._stritem, %struct._stritem* %229, i32 0, i32 7
  %231 = load i16, i16* %230, align 2
  %232 = zext i16 %231 to i32
  %233 = or i32 %232, 2048
  %234 = trunc i32 %233 to i16
  store i16 %234, i16* %230, align 2
  %235 = load %struct._stritem*, %struct._stritem** %9, align 8
  %236 = getelementptr inbounds %struct._stritem, %struct._stritem* %235, i32 0, i32 7
  %237 = load i16, i16* %236, align 2
  %238 = zext i16 %237 to i32
  %239 = and i32 %238, -513
  %240 = trunc i32 %239 to i16
  store i16 %240, i16* %236, align 2
  %241 = load %struct._stritem*, %struct._stritem** %9, align 8
  %242 = getelementptr inbounds %struct._stritem, %struct._stritem* %241, i32 0, i32 7
  %243 = load i16, i16* %242, align 2
  %244 = zext i16 %243 to i32
  %245 = and i32 %244, 2
  %246 = icmp ne i32 %245, 0
  br i1 %246, label %247, label %259

247:                                              ; preds = %228
  %248 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 19), align 8
  %249 = trunc i8 %248 to i1
  br i1 %249, label %250, label %252

250:                                              ; preds = %247
  %251 = call i64 @get_cas_id()
  br label %253

252:                                              ; preds = %247
  br label %253

253:                                              ; preds = %252, %250
  %254 = phi i64 [ %251, %250 ], [ 0, %252 ]
  %255 = load %struct._stritem*, %struct._stritem** %9, align 8
  %256 = getelementptr inbounds %struct._stritem, %struct._stritem* %255, i32 0, i32 10
  %257 = getelementptr inbounds [0 x %union.anon.10], [0 x %union.anon.10]* %256, i64 0, i64 0
  %258 = bitcast %union.anon.10* %257 to i64*
  store i64 %254, i64* %258, align 8
  br label %259

259:                                              ; preds = %253, %228
  %260 = load %struct.conn*, %struct.conn** %4, align 8
  %261 = getelementptr inbounds %struct.conn, %struct.conn* %260, i32 0, i32 34
  %262 = load i8, i8* %261, align 4
  %263 = trunc i8 %262 to i1
  br i1 %263, label %264, label %267

264:                                              ; preds = %259
  %265 = load %struct._mc_resp*, %struct._mc_resp** %14, align 8
  %266 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %265, i32 0, i32 11
  store i8 1, i8* %266, align 2
  br label %267

267:                                              ; preds = %264, %259
  %268 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 57), align 1
  %269 = trunc i8 %268 to i1
  br i1 %269, label %270, label %274

270:                                              ; preds = %267
  %271 = load %struct._mc_resp*, %struct._mc_resp** %14, align 8
  %272 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %271, i32 0, i32 18
  %273 = getelementptr inbounds [1024 x i8], [1024 x i8]* %272, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %273, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.68.1127, i64 0, i64 0), i64 3, i1 false)
  br label %278

274:                                              ; preds = %267
  %275 = load %struct._mc_resp*, %struct._mc_resp** %14, align 8
  %276 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %275, i32 0, i32 18
  %277 = getelementptr inbounds [1024 x i8], [1024 x i8]* %276, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %277, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.69.1128, i64 0, i64 0), i64 3, i1 false)
  br label %278

278:                                              ; preds = %274, %270
  br label %336

279:                                              ; preds = %209
  %280 = load %struct.conn*, %struct.conn** %4, align 8
  %281 = getelementptr inbounds %struct.conn, %struct.conn* %280, i32 0, i32 42
  %282 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %281, align 8
  %283 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %282, i32 0, i32 4
  %284 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %283, i32 0, i32 0
  %285 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %284) #14
  %286 = load %struct.conn*, %struct.conn** %4, align 8
  %287 = getelementptr inbounds %struct.conn, %struct.conn* %286, i32 0, i32 42
  %288 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %287, align 8
  %289 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %288, i32 0, i32 4
  %290 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %289, i32 0, i32 31
  %291 = load %struct._stritem*, %struct._stritem** %9, align 8
  %292 = getelementptr inbounds %struct._stritem, %struct._stritem* %291, i32 0, i32 8
  %293 = load i8, i8* %292, align 8
  %294 = zext i8 %293 to i32
  %295 = and i32 %294, -193
  %296 = sext i32 %295 to i64
  %297 = getelementptr inbounds [64 x %struct.slab_stats], [64 x %struct.slab_stats]* %290, i64 0, i64 %296
  %298 = getelementptr inbounds %struct.slab_stats, %struct.slab_stats* %297, i32 0, i32 3
  %299 = load i64, i64* %298, align 8
  %300 = add i64 %299, 1
  store i64 %300, i64* %298, align 8
  %301 = load %struct.conn*, %struct.conn** %4, align 8
  %302 = getelementptr inbounds %struct.conn, %struct.conn* %301, i32 0, i32 42
  %303 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %302, align 8
  %304 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %303, i32 0, i32 4
  %305 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %304, i32 0, i32 0
  %306 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %305) #14
  %307 = load %struct._stritem*, %struct._stritem** %9, align 8
  %308 = load i32, i32* %11, align 4
  call void @do_item_unlink(%struct._stritem* %307, i32 %308)
  br label %309

309:                                              ; preds = %279
  %310 = load %struct.conn*, %struct.conn** %4, align 8
  %311 = getelementptr inbounds %struct.conn, %struct.conn* %310, i32 0, i32 42
  %312 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %311, align 8
  %313 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %312, i32 0, i32 10
  %314 = load i8*, i8** %313, align 8
  %315 = load %struct._stritem*, %struct._stritem** %9, align 8
  call void @storage_delete(i8* %314, %struct._stritem* %315)
  br label %316

316:                                              ; preds = %309
  %317 = load %struct.conn*, %struct.conn** %4, align 8
  %318 = getelementptr inbounds %struct.conn, %struct.conn* %317, i32 0, i32 34
  %319 = load i8, i8* %318, align 4
  %320 = trunc i8 %319 to i1
  br i1 %320, label %321, label %324

321:                                              ; preds = %316
  %322 = load %struct._mc_resp*, %struct._mc_resp** %14, align 8
  %323 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %322, i32 0, i32 11
  store i8 1, i8* %323, align 2
  br label %324

324:                                              ; preds = %321, %316
  %325 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 57), align 1
  %326 = trunc i8 %325 to i1
  br i1 %326, label %327, label %331

327:                                              ; preds = %324
  %328 = load %struct._mc_resp*, %struct._mc_resp** %14, align 8
  %329 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %328, i32 0, i32 18
  %330 = getelementptr inbounds [1024 x i8], [1024 x i8]* %329, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %330, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.68.1127, i64 0, i64 0), i64 3, i1 false)
  br label %335

331:                                              ; preds = %324
  %332 = load %struct._mc_resp*, %struct._mc_resp** %14, align 8
  %333 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %332, i32 0, i32 18
  %334 = getelementptr inbounds [1024 x i8], [1024 x i8]* %333, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %334, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.69.1128, i64 0, i64 0), i64 3, i1 false)
  br label %335

335:                                              ; preds = %331, %327
  br label %336

336:                                              ; preds = %335, %278
  br label %360

337:                                              ; preds = %153
  %338 = load %struct.conn*, %struct.conn** %4, align 8
  %339 = getelementptr inbounds %struct.conn, %struct.conn* %338, i32 0, i32 42
  %340 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %339, align 8
  %341 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %340, i32 0, i32 4
  %342 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %341, i32 0, i32 0
  %343 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %342) #14
  %344 = load %struct.conn*, %struct.conn** %4, align 8
  %345 = getelementptr inbounds %struct.conn, %struct.conn* %344, i32 0, i32 42
  %346 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %345, align 8
  %347 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %346, i32 0, i32 4
  %348 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %347, i32 0, i32 7
  %349 = load i64, i64* %348, align 8
  %350 = add i64 %349, 1
  store i64 %350, i64* %348, align 8
  %351 = load %struct.conn*, %struct.conn** %4, align 8
  %352 = getelementptr inbounds %struct.conn, %struct.conn* %351, i32 0, i32 42
  %353 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %352, align 8
  %354 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %353, i32 0, i32 4
  %355 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %354, i32 0, i32 0
  %356 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %355) #14
  %357 = load %struct._mc_resp*, %struct._mc_resp** %14, align 8
  %358 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %357, i32 0, i32 18
  %359 = getelementptr inbounds [1024 x i8], [1024 x i8]* %358, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %359, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.70.1131, i64 0, i64 0), i64 3, i1 false)
  br label %360

360:                                              ; preds = %337, %336, %186
  %361 = load %struct._stritem*, %struct._stritem** %9, align 8
  %362 = icmp ne %struct._stritem* %361, null
  br i1 %362, label %363, label %365

363:                                              ; preds = %360
  %364 = load %struct._stritem*, %struct._stritem** %9, align 8
  call void @do_item_remove(%struct._stritem* %364)
  br label %365

365:                                              ; preds = %363, %360
  %366 = load i32, i32* %11, align 4
  call void @item_unlock(i32 %366)
  %367 = load i8*, i8** %15, align 8
  %368 = load %struct._mc_resp*, %struct._mc_resp** %14, align 8
  %369 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %368, i32 0, i32 18
  %370 = getelementptr inbounds [1024 x i8], [1024 x i8]* %369, i64 0, i64 0
  %371 = ptrtoint i8* %367 to i64
  %372 = ptrtoint i8* %370 to i64
  %373 = sub i64 %371, %372
  %374 = trunc i64 %373 to i32
  %375 = load %struct._mc_resp*, %struct._mc_resp** %14, align 8
  %376 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %375, i32 0, i32 2
  store i32 %374, i32* %376, align 8
  %377 = load %struct._mc_resp*, %struct._mc_resp** %14, align 8
  %378 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %377, i32 0, i32 18
  %379 = getelementptr inbounds [1024 x i8], [1024 x i8]* %378, i64 0, i64 0
  %380 = load %struct._mc_resp*, %struct._mc_resp** %14, align 8
  %381 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %380, i32 0, i32 2
  %382 = load i32, i32* %381, align 8
  %383 = sext i32 %382 to i64
  %384 = getelementptr inbounds i8, i8* %379, i64 %383
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %384, i8* align 1 getelementptr inbounds ([3 x i8], [3 x i8]* @.str.969, i64 0, i64 0), i64 2, i1 false)
  %385 = load %struct._mc_resp*, %struct._mc_resp** %14, align 8
  %386 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %385, i32 0, i32 2
  %387 = load i32, i32* %386, align 8
  %388 = add nsw i32 %387, 2
  store i32 %388, i32* %386, align 8
  %389 = load %struct._mc_resp*, %struct._mc_resp** %14, align 8
  %390 = load %struct._mc_resp*, %struct._mc_resp** %14, align 8
  %391 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %390, i32 0, i32 18
  %392 = getelementptr inbounds [1024 x i8], [1024 x i8]* %391, i64 0, i64 0
  %393 = load %struct._mc_resp*, %struct._mc_resp** %14, align 8
  %394 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %393, i32 0, i32 2
  %395 = load i32, i32* %394, align 8
  call void @resp_add_iov(%struct._mc_resp* %389, i8* %392, i32 %395)
  %396 = load %struct.conn*, %struct.conn** %4, align 8
  call void @conn_set_state(%struct.conn* %396, i32 1)
  br label %400

397:                                              ; preds = %91
  %398 = load %struct.conn*, %struct.conn** %4, align 8
  %399 = load i8*, i8** %13, align 8
  call void @out_errstring(%struct.conn* %398, i8* %399)
  br label %400

400:                                              ; preds = %397, %365, %47, %41, %36, %27
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @process_marithmetic_command(%struct.conn* %0, %struct.iovec* %1, i64 %2) #0 {
  %4 = alloca %struct.conn*, align 8
  %5 = alloca %struct.iovec*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca %struct._meta_flags, align 8
  %11 = alloca i8*, align 8
  %12 = alloca %struct._mc_resp*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i8, align 1
  %15 = alloca i8, align 1
  %16 = alloca i32, align 4
  %17 = alloca %struct._stritem*, align 8
  %18 = alloca [24 x i8], align 16
  %19 = alloca i8, align 1
  %20 = alloca i32, align 4
  %21 = alloca i64, align 8
  store %struct.conn* %0, %struct.conn** %4, align 8
  store %struct.iovec* %1, %struct.iovec** %5, align 8
  store i64 %2, i64* %6, align 8
  %22 = bitcast %struct._meta_flags* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 48, i1 false)
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.49.1040, i64 0, i64 0), i8** %11, align 8
  %23 = load %struct.conn*, %struct.conn** %4, align 8
  %24 = getelementptr inbounds %struct.conn, %struct.conn* %23, i32 0, i32 19
  %25 = load %struct._mc_resp*, %struct._mc_resp** %24, align 8
  store %struct._mc_resp* %25, %struct._mc_resp** %12, align 8
  %26 = load %struct._mc_resp*, %struct._mc_resp** %12, align 8
  %27 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %26, i32 0, i32 18
  %28 = getelementptr inbounds [1024 x i8], [1024 x i8]* %27, i64 0, i64 0
  store i8* %28, i8** %13, align 8
  %29 = getelementptr inbounds %struct._meta_flags, %struct._meta_flags* %10, i32 0, i32 7
  store i64 1, i64* %29, align 8
  %30 = getelementptr inbounds %struct._meta_flags, %struct._meta_flags* %10, i32 0, i32 8
  store i64 0, i64* %30, align 8
  store i8 1, i8* %14, align 1
  store i8 0, i8* %15, align 1
  store i32 0, i32* %16, align 4
  store %struct._stritem* null, %struct._stritem** %17, align 8
  br label %31

31:                                               ; preds = %3
  %32 = load i64, i64* %6, align 8
  %33 = icmp ult i64 %32, 3
  br i1 %33, label %34, label %36

34:                                               ; preds = %31
  %35 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %35, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15.993, i64 0, i64 0))
  br label %590

36:                                               ; preds = %31
  br label %37

37:                                               ; preds = %36
  %38 = load %struct.iovec*, %struct.iovec** %5, align 8
  %39 = getelementptr inbounds %struct.iovec, %struct.iovec* %38, i64 1
  %40 = getelementptr inbounds %struct.iovec, %struct.iovec* %39, i32 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = icmp ugt i64 %41, 250
  br i1 %42, label %43, label %45

43:                                               ; preds = %37
  %44 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %44, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.49.1040, i64 0, i64 0))
  br label %590

45:                                               ; preds = %37
  %46 = load i64, i64* %6, align 8
  %47 = icmp ugt i64 %46, 20
  br i1 %47, label %48, label %50

48:                                               ; preds = %45
  %49 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %49, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.62.1124, i64 0, i64 0))
  br label %590

50:                                               ; preds = %45
  %51 = load %struct.iovec*, %struct.iovec** %5, align 8
  %52 = call i32 @_meta_flag_preparse(%struct.iovec* %51, i64 2, %struct._meta_flags* %10, i8** %11)
  %53 = icmp ne i32 %52, 0
  br i1 %53, label %54, label %56

54:                                               ; preds = %50
  %55 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_errstring(%struct.conn* %55, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.66.1125, i64 0, i64 0))
  br label %590

56:                                               ; preds = %50
  %57 = bitcast %struct._meta_flags* %10 to i16*
  %58 = load i16, i16* %57, align 8
  %59 = lshr i16 %58, 8
  %60 = and i16 %59, 1
  %61 = zext i16 %60 to i32
  %62 = icmp ne i32 %61, 0
  %63 = load %struct.conn*, %struct.conn** %4, align 8
  %64 = getelementptr inbounds %struct.conn, %struct.conn* %63, i32 0, i32 34
  %65 = zext i1 %62 to i8
  store i8 %65, i8* %64, align 4
  %66 = load %struct.iovec*, %struct.iovec** %5, align 8
  %67 = getelementptr inbounds %struct.iovec, %struct.iovec* %66, i64 1
  %68 = getelementptr inbounds %struct.iovec, %struct.iovec* %67, i32 0, i32 0
  %69 = load i8*, i8** %68, align 8
  store i8* %69, i8** %7, align 8
  %70 = load %struct.iovec*, %struct.iovec** %5, align 8
  %71 = getelementptr inbounds %struct.iovec, %struct.iovec* %70, i64 1
  %72 = getelementptr inbounds %struct.iovec, %struct.iovec* %71, i32 0, i32 1
  %73 = load i64, i64* %72, align 8
  store i64 %73, i64* %8, align 8
  %74 = getelementptr inbounds %struct._meta_flags, %struct._meta_flags* %10, i32 0, i32 1
  %75 = load i8, i8* %74, align 2
  %76 = sext i8 %75 to i32
  switch i32 %76, label %80 [
    i32 0, label %77
    i32 73, label %78
    i32 43, label %78
    i32 68, label %79
    i32 45, label %79
  ]

77:                                               ; preds = %56
  br label %81

78:                                               ; preds = %56, %56
  store i8 1, i8* %14, align 1
  br label %81

79:                                               ; preds = %56, %56
  store i8 0, i8* %14, align 1
  br label %81

80:                                               ; preds = %56
  store i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.71.1126, i64 0, i64 0), i8** %11, align 8
  br label %577

81:                                               ; preds = %79, %78, %77
  %82 = load i32 (i8*, i64)*, i32 (i8*, i64)** @hash, align 8
  %83 = load i8*, i8** %7, align 8
  %84 = load i64, i64* %8, align 8
  %85 = call i32 %82(i8* %83, i64 %84)
  store i32 %85, i32* %16, align 4
  %86 = load i32, i32* %16, align 4
  call void @item_lock(i32 %86)
  store i8 1, i8* %15, align 1
  store i8 0, i8* %19, align 1
  %87 = load %struct.conn*, %struct.conn** %4, align 8
  %88 = load i8*, i8** %7, align 8
  %89 = load i64, i64* %8, align 8
  %90 = load i8, i8* %14, align 1
  %91 = trunc i8 %90 to i1
  %92 = getelementptr inbounds %struct._meta_flags, %struct._meta_flags* %10, i32 0, i32 7
  %93 = load i64, i64* %92, align 8
  %94 = getelementptr inbounds [24 x i8], [24 x i8]* %18, i64 0, i64 0
  %95 = getelementptr inbounds %struct._meta_flags, %struct._meta_flags* %10, i32 0, i32 6
  %96 = load i32, i32* %16, align 4
  %97 = call i32 @do_add_delta(%struct.conn* %87, i8* %88, i64 %89, i1 zeroext %91, i64 %93, i8* %94, i64* %95, i32 %96, %struct._stritem** %17)
  switch i32 %97, label %258 [
    i32 0, label %98
    i32 1, label %118
    i32 2, label %119
    i32 3, label %120
    i32 4, label %254
  ]

98:                                               ; preds = %81
  %99 = load %struct.conn*, %struct.conn** %4, align 8
  %100 = getelementptr inbounds %struct.conn, %struct.conn* %99, i32 0, i32 34
  %101 = load i8, i8* %100, align 4
  %102 = trunc i8 %101 to i1
  br i1 %102, label %103, label %106

103:                                              ; preds = %98
  %104 = load %struct._mc_resp*, %struct._mc_resp** %12, align 8
  %105 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %104, i32 0, i32 11
  store i8 1, i8* %105, align 2
  br label %106

106:                                              ; preds = %103, %98
  %107 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 57), align 1
  %108 = trunc i8 %107 to i1
  br i1 %108, label %109, label %113

109:                                              ; preds = %106
  %110 = load %struct._mc_resp*, %struct._mc_resp** %12, align 8
  %111 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %110, i32 0, i32 18
  %112 = getelementptr inbounds [1024 x i8], [1024 x i8]* %111, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %112, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.68.1127, i64 0, i64 0), i64 3, i1 false)
  br label %117

113:                                              ; preds = %106
  %114 = load %struct._mc_resp*, %struct._mc_resp** %12, align 8
  %115 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %114, i32 0, i32 18
  %116 = getelementptr inbounds [1024 x i8], [1024 x i8]* %115, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %116, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.69.1128, i64 0, i64 0), i64 3, i1 false)
  br label %117

117:                                              ; preds = %113, %109
  br label %258

118:                                              ; preds = %81
  store i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.72.1078, i64 0, i64 0), i8** %11, align 8
  br label %577

119:                                              ; preds = %81
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.73.1079, i64 0, i64 0), i8** %11, align 8
  br label %577

120:                                              ; preds = %81
  %121 = bitcast %struct._meta_flags* %10 to i16*
  %122 = load i16, i16* %121, align 8
  %123 = lshr i16 %122, 3
  %124 = and i16 %123, 1
  %125 = zext i16 %124 to i32
  %126 = icmp ne i32 %125, 0
  br i1 %126, label %127, label %218

127:                                              ; preds = %120
  %128 = getelementptr inbounds %struct._meta_flags, %struct._meta_flags* %10, i32 0, i32 8
  %129 = load i64, i64* %128, align 8
  %130 = getelementptr inbounds [24 x i8], [24 x i8]* %18, i64 0, i64 0
  %131 = call i8* @itoa_u64(i64 %129, i8* %130)
  %132 = getelementptr inbounds [24 x i8], [24 x i8]* %18, i64 0, i64 0
  %133 = call i64 @strlen(i8* %132) #16
  %134 = trunc i64 %133 to i32
  store i32 %134, i32* %20, align 4
  %135 = load i8*, i8** %7, align 8
  %136 = load i64, i64* %8, align 8
  %137 = load i32, i32* %20, align 4
  %138 = add nsw i32 %137, 2
  %139 = call %struct._stritem* @item_alloc(i8* %135, i64 %136, i32 0, i32 0, i32 %138)
  store %struct._stritem* %139, %struct._stritem** %17, align 8
  %140 = load %struct._stritem*, %struct._stritem** %17, align 8
  %141 = icmp ne %struct._stritem* %140, null
  br i1 %141, label %142, label %216

142:                                              ; preds = %127
  %143 = load %struct._stritem*, %struct._stritem** %17, align 8
  %144 = getelementptr inbounds %struct._stritem, %struct._stritem* %143, i32 0, i32 10
  %145 = bitcast [0 x %union.anon.10]* %144 to i8*
  %146 = load %struct._stritem*, %struct._stritem** %17, align 8
  %147 = getelementptr inbounds %struct._stritem, %struct._stritem* %146, i32 0, i32 9
  %148 = load i8, i8* %147, align 1
  %149 = zext i8 %148 to i32
  %150 = sext i32 %149 to i64
  %151 = getelementptr inbounds i8, i8* %145, i64 %150
  %152 = getelementptr inbounds i8, i8* %151, i64 1
  %153 = load %struct._stritem*, %struct._stritem** %17, align 8
  %154 = getelementptr inbounds %struct._stritem, %struct._stritem* %153, i32 0, i32 7
  %155 = load i16, i16* %154, align 2
  %156 = zext i16 %155 to i32
  %157 = and i32 %156, 256
  %158 = icmp ne i32 %157, 0
  %159 = zext i1 %158 to i64
  %160 = select i1 %158, i64 4, i64 0
  %161 = getelementptr inbounds i8, i8* %152, i64 %160
  %162 = load %struct._stritem*, %struct._stritem** %17, align 8
  %163 = getelementptr inbounds %struct._stritem, %struct._stritem* %162, i32 0, i32 7
  %164 = load i16, i16* %163, align 2
  %165 = zext i16 %164 to i32
  %166 = and i32 %165, 2
  %167 = icmp ne i32 %166, 0
  %168 = zext i1 %167 to i64
  %169 = select i1 %167, i64 8, i64 0
  %170 = getelementptr inbounds i8, i8* %161, i64 %169
  %171 = getelementptr inbounds [24 x i8], [24 x i8]* %18, i64 0, i64 0
  %172 = load i32, i32* %20, align 4
  %173 = sext i32 %172 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %170, i8* align 16 %171, i64 %173, i1 false)
  %174 = load %struct._stritem*, %struct._stritem** %17, align 8
  %175 = getelementptr inbounds %struct._stritem, %struct._stritem* %174, i32 0, i32 10
  %176 = bitcast [0 x %union.anon.10]* %175 to i8*
  %177 = load %struct._stritem*, %struct._stritem** %17, align 8
  %178 = getelementptr inbounds %struct._stritem, %struct._stritem* %177, i32 0, i32 9
  %179 = load i8, i8* %178, align 1
  %180 = zext i8 %179 to i32
  %181 = sext i32 %180 to i64
  %182 = getelementptr inbounds i8, i8* %176, i64 %181
  %183 = getelementptr inbounds i8, i8* %182, i64 1
  %184 = load %struct._stritem*, %struct._stritem** %17, align 8
  %185 = getelementptr inbounds %struct._stritem, %struct._stritem* %184, i32 0, i32 7
  %186 = load i16, i16* %185, align 2
  %187 = zext i16 %186 to i32
  %188 = and i32 %187, 256
  %189 = icmp ne i32 %188, 0
  %190 = zext i1 %189 to i64
  %191 = select i1 %189, i64 4, i64 0
  %192 = getelementptr inbounds i8, i8* %183, i64 %191
  %193 = load %struct._stritem*, %struct._stritem** %17, align 8
  %194 = getelementptr inbounds %struct._stritem, %struct._stritem* %193, i32 0, i32 7
  %195 = load i16, i16* %194, align 2
  %196 = zext i16 %195 to i32
  %197 = and i32 %196, 2
  %198 = icmp ne i32 %197, 0
  %199 = zext i1 %198 to i64
  %200 = select i1 %198, i64 8, i64 0
  %201 = getelementptr inbounds i8, i8* %192, i64 %200
  %202 = load i32, i32* %20, align 4
  %203 = sext i32 %202 to i64
  %204 = getelementptr inbounds i8, i8* %201, i64 %203
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %204, i8* align 1 getelementptr inbounds ([3 x i8], [3 x i8]* @.str.969, i64 0, i64 0), i64 2, i1 false)
  %205 = load %struct._stritem*, %struct._stritem** %17, align 8
  %206 = load %struct.conn*, %struct.conn** %4, align 8
  %207 = load i32, i32* %16, align 4
  %208 = call i32 @do_store_item(%struct._stritem* %205, i32 1, %struct.conn* %206, i32 %207)
  %209 = icmp ne i32 %208, 0
  br i1 %209, label %210, label %211

210:                                              ; preds = %142
  store i8 1, i8* %19, align 1
  br label %215

211:                                              ; preds = %142
  %212 = load %struct._mc_resp*, %struct._mc_resp** %12, align 8
  %213 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %212, i32 0, i32 18
  %214 = getelementptr inbounds [1024 x i8], [1024 x i8]* %213, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %214, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.74.1129, i64 0, i64 0), i64 3, i1 false)
  br label %215

215:                                              ; preds = %211, %210
  br label %217

216:                                              ; preds = %127
  store i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.75.1130, i64 0, i64 0), i8** %11, align 8
  br label %577

217:                                              ; preds = %215
  br label %253

218:                                              ; preds = %120
  %219 = load %struct.conn*, %struct.conn** %4, align 8
  %220 = getelementptr inbounds %struct.conn, %struct.conn* %219, i32 0, i32 42
  %221 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %220, align 8
  %222 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %221, i32 0, i32 4
  %223 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %222, i32 0, i32 0
  %224 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %223) #14
  %225 = load i8, i8* %14, align 1
  %226 = trunc i8 %225 to i1
  br i1 %226, label %227, label %235

227:                                              ; preds = %218
  %228 = load %struct.conn*, %struct.conn** %4, align 8
  %229 = getelementptr inbounds %struct.conn, %struct.conn* %228, i32 0, i32 42
  %230 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %229, align 8
  %231 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %230, i32 0, i32 4
  %232 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %231, i32 0, i32 8
  %233 = load i64, i64* %232, align 8
  %234 = add i64 %233, 1
  store i64 %234, i64* %232, align 8
  br label %243

235:                                              ; preds = %218
  %236 = load %struct.conn*, %struct.conn** %4, align 8
  %237 = getelementptr inbounds %struct.conn, %struct.conn* %236, i32 0, i32 42
  %238 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %237, align 8
  %239 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %238, i32 0, i32 4
  %240 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %239, i32 0, i32 9
  %241 = load i64, i64* %240, align 8
  %242 = add i64 %241, 1
  store i64 %242, i64* %240, align 8
  br label %243

243:                                              ; preds = %235, %227
  %244 = load %struct.conn*, %struct.conn** %4, align 8
  %245 = getelementptr inbounds %struct.conn, %struct.conn* %244, i32 0, i32 42
  %246 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %245, align 8
  %247 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %246, i32 0, i32 4
  %248 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %247, i32 0, i32 0
  %249 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %248) #14
  %250 = load i8*, i8** %13, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %250, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.70.1131, i64 0, i64 0), i64 3, i1 false)
  %251 = load i8*, i8** %13, align 8
  %252 = getelementptr inbounds i8, i8* %251, i64 3
  store i8* %252, i8** %13, align 8
  br label %253

253:                                              ; preds = %243, %217
  br label %258

254:                                              ; preds = %81
  %255 = load i8*, i8** %13, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %255, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.67.1132, i64 0, i64 0), i64 3, i1 false)
  %256 = load i8*, i8** %13, align 8
  %257 = getelementptr inbounds i8, i8* %256, i64 3
  store i8* %257, i8** %13, align 8
  br label %258

258:                                              ; preds = %81, %254, %253, %117
  %259 = load %struct._stritem*, %struct._stritem** %17, align 8
  %260 = icmp ne %struct._stritem* %259, null
  br i1 %260, label %261, label %457

261:                                              ; preds = %258
  %262 = getelementptr inbounds [24 x i8], [24 x i8]* %18, i64 0, i64 0
  %263 = call i64 @strlen(i8* %262) #16
  store i64 %263, i64* %21, align 8
  %264 = bitcast %struct._meta_flags* %10 to i16*
  %265 = load i16, i16* %264, align 8
  %266 = lshr i16 %265, 6
  %267 = and i16 %266, 1
  %268 = zext i16 %267 to i32
  %269 = icmp ne i32 %268, 0
  br i1 %269, label %270, label %277

270:                                              ; preds = %261
  %271 = load i8*, i8** %13, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %271, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.52.1133, i64 0, i64 0), i64 3, i1 false)
  %272 = load i64, i64* %21, align 8
  %273 = trunc i64 %272 to i32
  %274 = load i8*, i8** %13, align 8
  %275 = getelementptr inbounds i8, i8* %274, i64 3
  %276 = call i8* @itoa_u32(i32 %273, i8* %275)
  store i8* %276, i8** %13, align 8
  br label %287

277:                                              ; preds = %261
  %278 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 57), align 1
  %279 = trunc i8 %278 to i1
  br i1 %279, label %280, label %282

280:                                              ; preds = %277
  %281 = load i8*, i8** %13, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %281, i8* align 1 getelementptr inbounds ([3 x i8], [3 x i8]* @.str.44.976, i64 0, i64 0), i64 2, i1 false)
  br label %284

282:                                              ; preds = %277
  %283 = load i8*, i8** %13, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %283, i8* align 1 getelementptr inbounds ([3 x i8], [3 x i8]* @.str.45.977, i64 0, i64 0), i64 2, i1 false)
  br label %284

284:                                              ; preds = %282, %280
  %285 = load i8*, i8** %13, align 8
  %286 = getelementptr inbounds i8, i8* %285, i64 2
  store i8* %286, i8** %13, align 8
  br label %287

287:                                              ; preds = %284, %270
  store i32 2, i32* %9, align 4
  br label %288

288:                                              ; preds = %433, %287
  %289 = load i32, i32* %9, align 4
  %290 = sext i32 %289 to i64
  %291 = load i64, i64* %6, align 8
  %292 = sub i64 %291, 1
  %293 = icmp ult i64 %290, %292
  br i1 %293, label %294, label %436

294:                                              ; preds = %288
  %295 = load %struct.iovec*, %struct.iovec** %5, align 8
  %296 = load i32, i32* %9, align 4
  %297 = sext i32 %296 to i64
  %298 = getelementptr inbounds %struct.iovec, %struct.iovec* %295, i64 %297
  %299 = getelementptr inbounds %struct.iovec, %struct.iovec* %298, i32 0, i32 0
  %300 = load i8*, i8** %299, align 8
  %301 = getelementptr inbounds i8, i8* %300, i64 0
  %302 = load i8, i8* %301, align 1
  %303 = sext i8 %302 to i32
  switch i32 %303, label %432 [
    i32 99, label %304
    i32 116, label %327
    i32 84, label %352
    i32 78, label %357
    i32 79, label %366
    i32 107, label %400
  ]

304:                                              ; preds = %294
  %305 = load i8*, i8** %13, align 8
  store i8 32, i8* %305, align 1
  %306 = load i8*, i8** %13, align 8
  %307 = getelementptr inbounds i8, i8* %306, i64 1
  store i8 99, i8* %307, align 1
  %308 = load i8*, i8** %13, align 8
  %309 = getelementptr inbounds i8, i8* %308, i64 2
  store i8* %309, i8** %13, align 8
  %310 = load %struct._stritem*, %struct._stritem** %17, align 8
  %311 = getelementptr inbounds %struct._stritem, %struct._stritem* %310, i32 0, i32 7
  %312 = load i16, i16* %311, align 2
  %313 = zext i16 %312 to i32
  %314 = and i32 %313, 2
  %315 = icmp ne i32 %314, 0
  br i1 %315, label %316, label %322

316:                                              ; preds = %304
  %317 = load %struct._stritem*, %struct._stritem** %17, align 8
  %318 = getelementptr inbounds %struct._stritem, %struct._stritem* %317, i32 0, i32 10
  %319 = getelementptr inbounds [0 x %union.anon.10], [0 x %union.anon.10]* %318, i64 0, i64 0
  %320 = bitcast %union.anon.10* %319 to i64*
  %321 = load i64, i64* %320, align 8
  br label %323

322:                                              ; preds = %304
  br label %323

323:                                              ; preds = %322, %316
  %324 = phi i64 [ %321, %316 ], [ 0, %322 ]
  %325 = load i8*, i8** %13, align 8
  %326 = call i8* @itoa_u64(i64 %324, i8* %325)
  store i8* %326, i8** %13, align 8
  br label %432

327:                                              ; preds = %294
  %328 = load i8*, i8** %13, align 8
  store i8 32, i8* %328, align 1
  %329 = load i8*, i8** %13, align 8
  %330 = getelementptr inbounds i8, i8* %329, i64 1
  store i8 116, i8* %330, align 1
  %331 = load i8*, i8** %13, align 8
  %332 = getelementptr inbounds i8, i8* %331, i64 2
  store i8* %332, i8** %13, align 8
  %333 = load %struct._stritem*, %struct._stritem** %17, align 8
  %334 = getelementptr inbounds %struct._stritem, %struct._stritem* %333, i32 0, i32 4
  %335 = load i32, i32* %334, align 4
  %336 = icmp eq i32 %335, 0
  br i1 %336, label %337, label %343

337:                                              ; preds = %327
  %338 = load i8*, i8** %13, align 8
  store i8 45, i8* %338, align 1
  %339 = load i8*, i8** %13, align 8
  %340 = getelementptr inbounds i8, i8* %339, i64 1
  store i8 49, i8* %340, align 1
  %341 = load i8*, i8** %13, align 8
  %342 = getelementptr inbounds i8, i8* %341, i64 2
  store i8* %342, i8** %13, align 8
  br label %351

343:                                              ; preds = %327
  %344 = load %struct._stritem*, %struct._stritem** %17, align 8
  %345 = getelementptr inbounds %struct._stritem, %struct._stritem* %344, i32 0, i32 4
  %346 = load i32, i32* %345, align 4
  %347 = load volatile i32, i32* @current_time, align 4
  %348 = sub i32 %346, %347
  %349 = load i8*, i8** %13, align 8
  %350 = call i8* @itoa_u32(i32 %348, i8* %349)
  store i8* %350, i8** %13, align 8
  br label %351

351:                                              ; preds = %343, %337
  br label %432

352:                                              ; preds = %294
  %353 = getelementptr inbounds %struct._meta_flags, %struct._meta_flags* %10, i32 0, i32 2
  %354 = load i32, i32* %353, align 4
  %355 = load %struct._stritem*, %struct._stritem** %17, align 8
  %356 = getelementptr inbounds %struct._stritem, %struct._stritem* %355, i32 0, i32 4
  store i32 %354, i32* %356, align 4
  br label %432

357:                                              ; preds = %294
  %358 = load i8, i8* %19, align 1
  %359 = trunc i8 %358 to i1
  br i1 %359, label %360, label %365

360:                                              ; preds = %357
  %361 = getelementptr inbounds %struct._meta_flags, %struct._meta_flags* %10, i32 0, i32 3
  %362 = load i32, i32* %361, align 8
  %363 = load %struct._stritem*, %struct._stritem** %17, align 8
  %364 = getelementptr inbounds %struct._stritem, %struct._stritem* %363, i32 0, i32 4
  store i32 %362, i32* %364, align 4
  br label %365

365:                                              ; preds = %360, %357
  br label %432

366:                                              ; preds = %294
  %367 = load %struct.iovec*, %struct.iovec** %5, align 8
  %368 = load i32, i32* %9, align 4
  %369 = sext i32 %368 to i64
  %370 = getelementptr inbounds %struct.iovec, %struct.iovec* %367, i64 %369
  %371 = getelementptr inbounds %struct.iovec, %struct.iovec* %370, i32 0, i32 1
  %372 = load i64, i64* %371, align 8
  %373 = icmp ugt i64 %372, 32
  br i1 %373, label %374, label %375

374:                                              ; preds = %366
  store i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.53.1134, i64 0, i64 0), i8** %11, align 8
  br label %577

375:                                              ; preds = %366
  %376 = load i8*, i8** %13, align 8
  store i8 32, i8* %376, align 1
  %377 = load i8*, i8** %13, align 8
  %378 = getelementptr inbounds i8, i8* %377, i32 1
  store i8* %378, i8** %13, align 8
  %379 = load i8*, i8** %13, align 8
  %380 = load %struct.iovec*, %struct.iovec** %5, align 8
  %381 = load i32, i32* %9, align 4
  %382 = sext i32 %381 to i64
  %383 = getelementptr inbounds %struct.iovec, %struct.iovec* %380, i64 %382
  %384 = getelementptr inbounds %struct.iovec, %struct.iovec* %383, i32 0, i32 0
  %385 = load i8*, i8** %384, align 8
  %386 = load %struct.iovec*, %struct.iovec** %5, align 8
  %387 = load i32, i32* %9, align 4
  %388 = sext i32 %387 to i64
  %389 = getelementptr inbounds %struct.iovec, %struct.iovec* %386, i64 %388
  %390 = getelementptr inbounds %struct.iovec, %struct.iovec* %389, i32 0, i32 1
  %391 = load i64, i64* %390, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %379, i8* align 1 %385, i64 %391, i1 false)
  %392 = load %struct.iovec*, %struct.iovec** %5, align 8
  %393 = load i32, i32* %9, align 4
  %394 = sext i32 %393 to i64
  %395 = getelementptr inbounds %struct.iovec, %struct.iovec* %392, i64 %394
  %396 = getelementptr inbounds %struct.iovec, %struct.iovec* %395, i32 0, i32 1
  %397 = load i64, i64* %396, align 8
  %398 = load i8*, i8** %13, align 8
  %399 = getelementptr inbounds i8, i8* %398, i64 %397
  store i8* %399, i8** %13, align 8
  br label %432

400:                                              ; preds = %294
  %401 = load i8*, i8** %13, align 8
  store i8 32, i8* %401, align 1
  %402 = load i8*, i8** %13, align 8
  %403 = getelementptr inbounds i8, i8* %402, i64 1
  store i8 107, i8* %403, align 1
  %404 = load i8*, i8** %13, align 8
  %405 = getelementptr inbounds i8, i8* %404, i64 2
  store i8* %405, i8** %13, align 8
  %406 = bitcast %struct._meta_flags* %10 to i16*
  %407 = load i16, i16* %406, align 8
  %408 = lshr i16 %407, 11
  %409 = and i16 %408, 1
  %410 = zext i16 %409 to i32
  %411 = icmp ne i32 %410, 0
  br i1 %411, label %419, label %412

412:                                              ; preds = %400
  %413 = load i8*, i8** %13, align 8
  %414 = load i8*, i8** %7, align 8
  %415 = load i64, i64* %8, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %413, i8* align 1 %414, i64 %415, i1 false)
  %416 = load i64, i64* %8, align 8
  %417 = load i8*, i8** %13, align 8
  %418 = getelementptr inbounds i8, i8* %417, i64 %416
  store i8* %418, i8** %13, align 8
  br label %431

419:                                              ; preds = %400
  %420 = load i8*, i8** %7, align 8
  %421 = load i64, i64* %8, align 8
  %422 = load i8*, i8** %13, align 8
  %423 = call i64 @base64_encode(i8* %420, i64 %421, i8* %422, i64 512)
  %424 = load i8*, i8** %13, align 8
  %425 = getelementptr inbounds i8, i8* %424, i64 %423
  store i8* %425, i8** %13, align 8
  %426 = load i8*, i8** %13, align 8
  store i8 32, i8* %426, align 1
  %427 = load i8*, i8** %13, align 8
  %428 = getelementptr inbounds i8, i8* %427, i64 1
  store i8 98, i8* %428, align 1
  %429 = load i8*, i8** %13, align 8
  %430 = getelementptr inbounds i8, i8* %429, i64 2
  store i8* %430, i8** %13, align 8
  br label %431

431:                                              ; preds = %419, %412
  br label %432

432:                                              ; preds = %294, %431, %375, %365, %352, %351, %323
  br label %433

433:                                              ; preds = %432
  %434 = load i32, i32* %9, align 4
  %435 = add nsw i32 %434, 1
  store i32 %435, i32* %9, align 4
  br label %288, !llvm.loop !165

436:                                              ; preds = %288
  %437 = bitcast %struct._meta_flags* %10 to i16*
  %438 = load i16, i16* %437, align 8
  %439 = lshr i16 %438, 6
  %440 = and i16 %439, 1
  %441 = zext i16 %440 to i32
  %442 = icmp ne i32 %441, 0
  br i1 %442, label %443, label %455

443:                                              ; preds = %436
  %444 = load i8*, i8** %13, align 8
  store i8 13, i8* %444, align 1
  %445 = load i8*, i8** %13, align 8
  %446 = getelementptr inbounds i8, i8* %445, i64 1
  store i8 10, i8* %446, align 1
  %447 = load i8*, i8** %13, align 8
  %448 = getelementptr inbounds i8, i8* %447, i64 2
  store i8* %448, i8** %13, align 8
  %449 = load i8*, i8** %13, align 8
  %450 = getelementptr inbounds [24 x i8], [24 x i8]* %18, i64 0, i64 0
  %451 = load i64, i64* %21, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %449, i8* align 16 %450, i64 %451, i1 false)
  %452 = load i64, i64* %21, align 8
  %453 = load i8*, i8** %13, align 8
  %454 = getelementptr inbounds i8, i8* %453, i64 %452
  store i8* %454, i8** %13, align 8
  br label %455

455:                                              ; preds = %443, %436
  %456 = load %struct._stritem*, %struct._stritem** %17, align 8
  call void @do_item_remove(%struct._stritem* %456)
  br label %545

457:                                              ; preds = %258
  store i32 2, i32* %9, align 4
  br label %458

458:                                              ; preds = %541, %457
  %459 = load i32, i32* %9, align 4
  %460 = sext i32 %459 to i64
  %461 = load i64, i64* %6, align 8
  %462 = sub i64 %461, 1
  %463 = icmp ult i64 %460, %462
  br i1 %463, label %464, label %544

464:                                              ; preds = %458
  %465 = load %struct.iovec*, %struct.iovec** %5, align 8
  %466 = load i32, i32* %9, align 4
  %467 = sext i32 %466 to i64
  %468 = getelementptr inbounds %struct.iovec, %struct.iovec* %465, i64 %467
  %469 = getelementptr inbounds %struct.iovec, %struct.iovec* %468, i32 0, i32 0
  %470 = load i8*, i8** %469, align 8
  %471 = getelementptr inbounds i8, i8* %470, i64 0
  %472 = load i8, i8* %471, align 1
  %473 = sext i8 %472 to i32
  switch i32 %473, label %540 [
    i32 79, label %474
    i32 107, label %508
  ]

474:                                              ; preds = %464
  %475 = load %struct.iovec*, %struct.iovec** %5, align 8
  %476 = load i32, i32* %9, align 4
  %477 = sext i32 %476 to i64
  %478 = getelementptr inbounds %struct.iovec, %struct.iovec* %475, i64 %477
  %479 = getelementptr inbounds %struct.iovec, %struct.iovec* %478, i32 0, i32 1
  %480 = load i64, i64* %479, align 8
  %481 = icmp ugt i64 %480, 32
  br i1 %481, label %482, label %483

482:                                              ; preds = %474
  store i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.53.1134, i64 0, i64 0), i8** %11, align 8
  br label %577

483:                                              ; preds = %474
  %484 = load i8*, i8** %13, align 8
  store i8 32, i8* %484, align 1
  %485 = load i8*, i8** %13, align 8
  %486 = getelementptr inbounds i8, i8* %485, i32 1
  store i8* %486, i8** %13, align 8
  %487 = load i8*, i8** %13, align 8
  %488 = load %struct.iovec*, %struct.iovec** %5, align 8
  %489 = load i32, i32* %9, align 4
  %490 = sext i32 %489 to i64
  %491 = getelementptr inbounds %struct.iovec, %struct.iovec* %488, i64 %490
  %492 = getelementptr inbounds %struct.iovec, %struct.iovec* %491, i32 0, i32 0
  %493 = load i8*, i8** %492, align 8
  %494 = load %struct.iovec*, %struct.iovec** %5, align 8
  %495 = load i32, i32* %9, align 4
  %496 = sext i32 %495 to i64
  %497 = getelementptr inbounds %struct.iovec, %struct.iovec* %494, i64 %496
  %498 = getelementptr inbounds %struct.iovec, %struct.iovec* %497, i32 0, i32 1
  %499 = load i64, i64* %498, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %487, i8* align 1 %493, i64 %499, i1 false)
  %500 = load %struct.iovec*, %struct.iovec** %5, align 8
  %501 = load i32, i32* %9, align 4
  %502 = sext i32 %501 to i64
  %503 = getelementptr inbounds %struct.iovec, %struct.iovec* %500, i64 %502
  %504 = getelementptr inbounds %struct.iovec, %struct.iovec* %503, i32 0, i32 1
  %505 = load i64, i64* %504, align 8
  %506 = load i8*, i8** %13, align 8
  %507 = getelementptr inbounds i8, i8* %506, i64 %505
  store i8* %507, i8** %13, align 8
  br label %540

508:                                              ; preds = %464
  %509 = load i8*, i8** %13, align 8
  store i8 32, i8* %509, align 1
  %510 = load i8*, i8** %13, align 8
  %511 = getelementptr inbounds i8, i8* %510, i64 1
  store i8 107, i8* %511, align 1
  %512 = load i8*, i8** %13, align 8
  %513 = getelementptr inbounds i8, i8* %512, i64 2
  store i8* %513, i8** %13, align 8
  %514 = bitcast %struct._meta_flags* %10 to i16*
  %515 = load i16, i16* %514, align 8
  %516 = lshr i16 %515, 11
  %517 = and i16 %516, 1
  %518 = zext i16 %517 to i32
  %519 = icmp ne i32 %518, 0
  br i1 %519, label %527, label %520

520:                                              ; preds = %508
  %521 = load i8*, i8** %13, align 8
  %522 = load i8*, i8** %7, align 8
  %523 = load i64, i64* %8, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %521, i8* align 1 %522, i64 %523, i1 false)
  %524 = load i64, i64* %8, align 8
  %525 = load i8*, i8** %13, align 8
  %526 = getelementptr inbounds i8, i8* %525, i64 %524
  store i8* %526, i8** %13, align 8
  br label %539

527:                                              ; preds = %508
  %528 = load i8*, i8** %7, align 8
  %529 = load i64, i64* %8, align 8
  %530 = load i8*, i8** %13, align 8
  %531 = call i64 @base64_encode(i8* %528, i64 %529, i8* %530, i64 512)
  %532 = load i8*, i8** %13, align 8
  %533 = getelementptr inbounds i8, i8* %532, i64 %531
  store i8* %533, i8** %13, align 8
  %534 = load i8*, i8** %13, align 8
  store i8 32, i8* %534, align 1
  %535 = load i8*, i8** %13, align 8
  %536 = getelementptr inbounds i8, i8* %535, i64 1
  store i8 98, i8* %536, align 1
  %537 = load i8*, i8** %13, align 8
  %538 = getelementptr inbounds i8, i8* %537, i64 2
  store i8* %538, i8** %13, align 8
  br label %539

539:                                              ; preds = %527, %520
  br label %540

540:                                              ; preds = %464, %539, %483
  br label %541

541:                                              ; preds = %540
  %542 = load i32, i32* %9, align 4
  %543 = add nsw i32 %542, 1
  store i32 %543, i32* %9, align 4
  br label %458, !llvm.loop !166

544:                                              ; preds = %458
  br label %545

545:                                              ; preds = %544, %455
  %546 = load i32, i32* %16, align 4
  call void @item_unlock(i32 %546)
  %547 = load i8*, i8** %13, align 8
  %548 = load %struct._mc_resp*, %struct._mc_resp** %12, align 8
  %549 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %548, i32 0, i32 18
  %550 = getelementptr inbounds [1024 x i8], [1024 x i8]* %549, i64 0, i64 0
  %551 = ptrtoint i8* %547 to i64
  %552 = ptrtoint i8* %550 to i64
  %553 = sub i64 %551, %552
  %554 = trunc i64 %553 to i32
  %555 = load %struct._mc_resp*, %struct._mc_resp** %12, align 8
  %556 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %555, i32 0, i32 2
  store i32 %554, i32* %556, align 8
  %557 = load %struct._mc_resp*, %struct._mc_resp** %12, align 8
  %558 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %557, i32 0, i32 18
  %559 = getelementptr inbounds [1024 x i8], [1024 x i8]* %558, i64 0, i64 0
  %560 = load %struct._mc_resp*, %struct._mc_resp** %12, align 8
  %561 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %560, i32 0, i32 2
  %562 = load i32, i32* %561, align 8
  %563 = sext i32 %562 to i64
  %564 = getelementptr inbounds i8, i8* %559, i64 %563
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %564, i8* align 1 getelementptr inbounds ([3 x i8], [3 x i8]* @.str.969, i64 0, i64 0), i64 2, i1 false)
  %565 = load %struct._mc_resp*, %struct._mc_resp** %12, align 8
  %566 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %565, i32 0, i32 2
  %567 = load i32, i32* %566, align 8
  %568 = add nsw i32 %567, 2
  store i32 %568, i32* %566, align 8
  %569 = load %struct._mc_resp*, %struct._mc_resp** %12, align 8
  %570 = load %struct._mc_resp*, %struct._mc_resp** %12, align 8
  %571 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %570, i32 0, i32 18
  %572 = getelementptr inbounds [1024 x i8], [1024 x i8]* %571, i64 0, i64 0
  %573 = load %struct._mc_resp*, %struct._mc_resp** %12, align 8
  %574 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %573, i32 0, i32 2
  %575 = load i32, i32* %574, align 8
  call void @resp_add_iov(%struct._mc_resp* %569, i8* %572, i32 %575)
  %576 = load %struct.conn*, %struct.conn** %4, align 8
  call void @conn_set_state(%struct.conn* %576, i32 1)
  br label %590

577:                                              ; preds = %482, %374, %216, %119, %118, %80
  %578 = load %struct._stritem*, %struct._stritem** %17, align 8
  %579 = icmp ne %struct._stritem* %578, null
  br i1 %579, label %580, label %582

580:                                              ; preds = %577
  %581 = load %struct._stritem*, %struct._stritem** %17, align 8
  call void @do_item_remove(%struct._stritem* %581)
  br label %582

582:                                              ; preds = %580, %577
  %583 = load i8, i8* %15, align 1
  %584 = trunc i8 %583 to i1
  br i1 %584, label %585, label %587

585:                                              ; preds = %582
  %586 = load i32, i32* %16, align 4
  call void @item_unlock(i32 %586)
  br label %587

587:                                              ; preds = %585, %582
  %588 = load %struct.conn*, %struct.conn** %4, align 8
  %589 = load i8*, i8** %11, align 8
  call void @out_errstring(%struct.conn* %588, i8* %589)
  br label %590

590:                                              ; preds = %587, %545, %54, %48, %43, %34
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @process_meta_command(%struct.conn* %0, %struct.iovec* %1, i64 %2) #0 {
  %4 = alloca %struct.conn*, align 8
  %5 = alloca %struct.iovec*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i8, align 1
  %11 = alloca %struct._stritem*, align 8
  %12 = alloca %struct._mc_resp*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  store %struct.conn* %0, %struct.conn** %4, align 8
  store %struct.iovec* %1, %struct.iovec** %5, align 8
  store i64 %2, i64* %6, align 8
  %15 = load i64, i64* %6, align 8
  %16 = icmp ult i64 %15, 3
  br i1 %16, label %23, label %17

17:                                               ; preds = %3
  %18 = load %struct.iovec*, %struct.iovec** %5, align 8
  %19 = getelementptr inbounds %struct.iovec, %struct.iovec* %18, i64 1
  %20 = getelementptr inbounds %struct.iovec, %struct.iovec* %19, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = icmp ugt i64 %21, 250
  br i1 %22, label %23, label %25

23:                                               ; preds = %17, %3
  %24 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %24, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.49.1040, i64 0, i64 0))
  br label %274

25:                                               ; preds = %17
  %26 = load %struct.iovec*, %struct.iovec** %5, align 8
  %27 = getelementptr inbounds %struct.iovec, %struct.iovec* %26, i64 1
  %28 = getelementptr inbounds %struct.iovec, %struct.iovec* %27, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  store i8* %29, i8** %7, align 8
  %30 = load %struct.iovec*, %struct.iovec** %5, align 8
  %31 = getelementptr inbounds %struct.iovec, %struct.iovec* %30, i64 1
  %32 = getelementptr inbounds %struct.iovec, %struct.iovec* %31, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  store i64 %33, i64* %8, align 8
  %34 = load i64, i64* %6, align 8
  %35 = icmp uge i64 %34, 4
  br i1 %35, label %36, label %63

36:                                               ; preds = %25
  %37 = load %struct.iovec*, %struct.iovec** %5, align 8
  %38 = getelementptr inbounds %struct.iovec, %struct.iovec* %37, i64 2
  %39 = getelementptr inbounds %struct.iovec, %struct.iovec* %38, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, 1
  br i1 %41, label %42, label %63

42:                                               ; preds = %36
  %43 = load %struct.iovec*, %struct.iovec** %5, align 8
  %44 = getelementptr inbounds %struct.iovec, %struct.iovec* %43, i64 2
  %45 = getelementptr inbounds %struct.iovec, %struct.iovec* %44, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds i8, i8* %46, i64 0
  %48 = load i8, i8* %47, align 1
  %49 = sext i8 %48 to i32
  %50 = icmp eq i32 %49, 98
  br i1 %50, label %51, label %63

51:                                               ; preds = %42
  %52 = load i8*, i8** %7, align 8
  %53 = load i64, i64* %8, align 8
  %54 = load i8*, i8** %7, align 8
  %55 = load i64, i64* %8, align 8
  %56 = call i64 @base64_decode(i8* %52, i64 %53, i8* %54, i64 %55)
  store i64 %56, i64* %9, align 8
  %57 = load i64, i64* %9, align 8
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %59, label %61

59:                                               ; preds = %51
  %60 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %60, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.49.1040, i64 0, i64 0))
  br label %274

61:                                               ; preds = %51
  %62 = load i64, i64* %9, align 8
  store i64 %62, i64* %8, align 8
  br label %63

63:                                               ; preds = %61, %42, %36, %25
  %64 = load i8*, i8** %7, align 8
  %65 = load i64, i64* %8, align 8
  %66 = load %struct.conn*, %struct.conn** %4, align 8
  %67 = call %struct._stritem* @limited_get(i8* %64, i64 %65, %struct.conn* %66, i32 0, i1 zeroext false, i1 zeroext false, i8* %10)
  store %struct._stritem* %67, %struct._stritem** %11, align 8
  %68 = load %struct._stritem*, %struct._stritem** %11, align 8
  %69 = icmp ne %struct._stritem* %68, null
  br i1 %69, label %70, label %252

70:                                               ; preds = %63
  %71 = load %struct.conn*, %struct.conn** %4, align 8
  %72 = getelementptr inbounds %struct.conn, %struct.conn* %71, i32 0, i32 19
  %73 = load %struct._mc_resp*, %struct._mc_resp** %72, align 8
  store %struct._mc_resp* %73, %struct._mc_resp** %12, align 8
  store i64 0, i64* %13, align 8
  %74 = load %struct._mc_resp*, %struct._mc_resp** %12, align 8
  %75 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %74, i32 0, i32 18
  %76 = getelementptr inbounds [1024 x i8], [1024 x i8]* %75, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76.1119, i64 0, i64 0), i64 3, i1 false)
  %77 = load i64, i64* %13, align 8
  %78 = add i64 %77, 3
  store i64 %78, i64* %13, align 8
  %79 = load %struct._stritem*, %struct._stritem** %11, align 8
  %80 = getelementptr inbounds %struct._stritem, %struct._stritem* %79, i32 0, i32 7
  %81 = load i16, i16* %80, align 2
  %82 = zext i16 %81 to i32
  %83 = and i32 %82, 4096
  %84 = icmp ne i32 %83, 0
  br i1 %84, label %85, label %112

85:                                               ; preds = %70
  %86 = load %struct._stritem*, %struct._stritem** %11, align 8
  %87 = getelementptr inbounds %struct._stritem, %struct._stritem* %86, i32 0, i32 10
  %88 = bitcast [0 x %union.anon.10]* %87 to i8*
  %89 = load %struct._stritem*, %struct._stritem** %11, align 8
  %90 = getelementptr inbounds %struct._stritem, %struct._stritem* %89, i32 0, i32 7
  %91 = load i16, i16* %90, align 2
  %92 = zext i16 %91 to i32
  %93 = and i32 %92, 2
  %94 = icmp ne i32 %93, 0
  %95 = zext i1 %94 to i64
  %96 = select i1 %94, i64 8, i64 0
  %97 = getelementptr inbounds i8, i8* %88, i64 %96
  %98 = load %struct._stritem*, %struct._stritem** %11, align 8
  %99 = getelementptr inbounds %struct._stritem, %struct._stritem* %98, i32 0, i32 9
  %100 = load i8, i8* %99, align 1
  %101 = zext i8 %100 to i64
  %102 = load %struct._mc_resp*, %struct._mc_resp** %12, align 8
  %103 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %102, i32 0, i32 18
  %104 = getelementptr inbounds [1024 x i8], [1024 x i8]* %103, i64 0, i64 0
  %105 = load i64, i64* %13, align 8
  %106 = getelementptr inbounds i8, i8* %104, i64 %105
  %107 = load i64, i64* %13, align 8
  %108 = sub i64 1024, %107
  %109 = call i64 @base64_encode(i8* %97, i64 %101, i8* %106, i64 %108)
  %110 = load i64, i64* %13, align 8
  %111 = add i64 %110, %109
  store i64 %111, i64* %13, align 8
  br label %140

112:                                              ; preds = %70
  %113 = load %struct._mc_resp*, %struct._mc_resp** %12, align 8
  %114 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %113, i32 0, i32 18
  %115 = getelementptr inbounds [1024 x i8], [1024 x i8]* %114, i64 0, i64 0
  %116 = load i64, i64* %13, align 8
  %117 = getelementptr inbounds i8, i8* %115, i64 %116
  %118 = load %struct._stritem*, %struct._stritem** %11, align 8
  %119 = getelementptr inbounds %struct._stritem, %struct._stritem* %118, i32 0, i32 10
  %120 = bitcast [0 x %union.anon.10]* %119 to i8*
  %121 = load %struct._stritem*, %struct._stritem** %11, align 8
  %122 = getelementptr inbounds %struct._stritem, %struct._stritem* %121, i32 0, i32 7
  %123 = load i16, i16* %122, align 2
  %124 = zext i16 %123 to i32
  %125 = and i32 %124, 2
  %126 = icmp ne i32 %125, 0
  %127 = zext i1 %126 to i64
  %128 = select i1 %126, i64 8, i64 0
  %129 = getelementptr inbounds i8, i8* %120, i64 %128
  %130 = load %struct._stritem*, %struct._stritem** %11, align 8
  %131 = getelementptr inbounds %struct._stritem, %struct._stritem* %130, i32 0, i32 9
  %132 = load i8, i8* %131, align 1
  %133 = zext i8 %132 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %117, i8* align 1 %129, i64 %133, i1 false)
  %134 = load %struct._stritem*, %struct._stritem** %11, align 8
  %135 = getelementptr inbounds %struct._stritem, %struct._stritem* %134, i32 0, i32 9
  %136 = load i8, i8* %135, align 1
  %137 = zext i8 %136 to i64
  %138 = load i64, i64* %13, align 8
  %139 = add i64 %138, %137
  store i64 %139, i64* %13, align 8
  br label %140

140:                                              ; preds = %112, %85
  %141 = load %struct._mc_resp*, %struct._mc_resp** %12, align 8
  %142 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %141, i32 0, i32 18
  %143 = load i64, i64* %13, align 8
  %144 = getelementptr inbounds [1024 x i8], [1024 x i8]* %142, i64 0, i64 %143
  store i8 32, i8* %144, align 1
  %145 = load i64, i64* %13, align 8
  %146 = add i64 %145, 1
  store i64 %146, i64* %13, align 8
  %147 = load %struct._mc_resp*, %struct._mc_resp** %12, align 8
  %148 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %147, i32 0, i32 18
  %149 = getelementptr inbounds [1024 x i8], [1024 x i8]* %148, i64 0, i64 0
  %150 = load i64, i64* %13, align 8
  %151 = getelementptr inbounds i8, i8* %149, i64 %150
  %152 = load %struct._stritem*, %struct._stritem** %11, align 8
  %153 = getelementptr inbounds %struct._stritem, %struct._stritem* %152, i32 0, i32 9
  %154 = load i8, i8* %153, align 1
  %155 = zext i8 %154 to i32
  %156 = add nsw i32 %155, 12
  %157 = sub nsw i32 1024, %156
  %158 = sext i32 %157 to i64
  %159 = load %struct._stritem*, %struct._stritem** %11, align 8
  %160 = getelementptr inbounds %struct._stritem, %struct._stritem* %159, i32 0, i32 4
  %161 = load i32, i32* %160, align 4
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %164

163:                                              ; preds = %140
  br label %170

164:                                              ; preds = %140
  %165 = load volatile i32, i32* @current_time, align 4
  %166 = load %struct._stritem*, %struct._stritem** %11, align 8
  %167 = getelementptr inbounds %struct._stritem, %struct._stritem* %166, i32 0, i32 4
  %168 = load i32, i32* %167, align 4
  %169 = sub i32 %165, %168
  br label %170

170:                                              ; preds = %164, %163
  %171 = phi i32 [ -1, %163 ], [ %169, %164 ]
  %172 = load volatile i32, i32* @current_time, align 4
  %173 = load %struct._stritem*, %struct._stritem** %11, align 8
  %174 = getelementptr inbounds %struct._stritem, %struct._stritem* %173, i32 0, i32 3
  %175 = load i32, i32* %174, align 8
  %176 = sub i32 %172, %175
  %177 = zext i32 %176 to i64
  %178 = load %struct._stritem*, %struct._stritem** %11, align 8
  %179 = getelementptr inbounds %struct._stritem, %struct._stritem* %178, i32 0, i32 7
  %180 = load i16, i16* %179, align 2
  %181 = zext i16 %180 to i32
  %182 = and i32 %181, 2
  %183 = icmp ne i32 %182, 0
  br i1 %183, label %184, label %190

184:                                              ; preds = %170
  %185 = load %struct._stritem*, %struct._stritem** %11, align 8
  %186 = getelementptr inbounds %struct._stritem, %struct._stritem* %185, i32 0, i32 10
  %187 = getelementptr inbounds [0 x %union.anon.10], [0 x %union.anon.10]* %186, i64 0, i64 0
  %188 = bitcast %union.anon.10* %187 to i64*
  %189 = load i64, i64* %188, align 8
  br label %191

190:                                              ; preds = %170
  br label %191

191:                                              ; preds = %190, %184
  %192 = phi i64 [ %189, %184 ], [ 0, %190 ]
  %193 = load %struct._stritem*, %struct._stritem** %11, align 8
  %194 = getelementptr inbounds %struct._stritem, %struct._stritem* %193, i32 0, i32 7
  %195 = load i16, i16* %194, align 2
  %196 = zext i16 %195 to i32
  %197 = and i32 %196, 8
  %198 = icmp ne i32 %197, 0
  %199 = zext i1 %198 to i64
  %200 = select i1 %198, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.78.1120, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.79.1121, i64 0, i64 0)
  %201 = load %struct._stritem*, %struct._stritem** %11, align 8
  %202 = getelementptr inbounds %struct._stritem, %struct._stritem* %201, i32 0, i32 8
  %203 = load i8, i8* %202, align 8
  %204 = zext i8 %203 to i32
  %205 = and i32 %204, -193
  %206 = load %struct._stritem*, %struct._stritem** %11, align 8
  %207 = getelementptr inbounds %struct._stritem, %struct._stritem* %206, i32 0, i32 9
  %208 = load i8, i8* %207, align 1
  %209 = zext i8 %208 to i64
  %210 = add i64 48, %209
  %211 = add i64 %210, 1
  %212 = load %struct._stritem*, %struct._stritem** %11, align 8
  %213 = getelementptr inbounds %struct._stritem, %struct._stritem* %212, i32 0, i32 5
  %214 = load i32, i32* %213, align 8
  %215 = sext i32 %214 to i64
  %216 = add i64 %211, %215
  %217 = load %struct._stritem*, %struct._stritem** %11, align 8
  %218 = getelementptr inbounds %struct._stritem, %struct._stritem* %217, i32 0, i32 7
  %219 = load i16, i16* %218, align 2
  %220 = zext i16 %219 to i32
  %221 = and i32 %220, 256
  %222 = icmp ne i32 %221, 0
  %223 = zext i1 %222 to i64
  %224 = select i1 %222, i64 4, i64 0
  %225 = add i64 %216, %224
  %226 = load %struct._stritem*, %struct._stritem** %11, align 8
  %227 = getelementptr inbounds %struct._stritem, %struct._stritem* %226, i32 0, i32 7
  %228 = load i16, i16* %227, align 2
  %229 = zext i16 %228 to i32
  %230 = and i32 %229, 2
  %231 = icmp ne i32 %230, 0
  %232 = zext i1 %231 to i64
  %233 = select i1 %231, i64 8, i64 0
  %234 = add i64 %225, %233
  %235 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %151, i64 %158, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.77.1122, i64 0, i64 0), i32 %171, i64 %177, i64 %192, i8* %200, i32 %205, i64 %234) #14
  %236 = sext i32 %235 to i64
  store i64 %236, i64* %14, align 8
  %237 = load %struct._stritem*, %struct._stritem** %11, align 8
  call void @item_remove(%struct._stritem* %237)
  %238 = load i64, i64* %13, align 8
  %239 = load i64, i64* %14, align 8
  %240 = add i64 %238, %239
  %241 = trunc i64 %240 to i32
  %242 = load %struct._mc_resp*, %struct._mc_resp** %12, align 8
  %243 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %242, i32 0, i32 2
  store i32 %241, i32* %243, align 8
  %244 = load %struct._mc_resp*, %struct._mc_resp** %12, align 8
  %245 = load %struct._mc_resp*, %struct._mc_resp** %12, align 8
  %246 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %245, i32 0, i32 18
  %247 = getelementptr inbounds [1024 x i8], [1024 x i8]* %246, i64 0, i64 0
  %248 = load %struct._mc_resp*, %struct._mc_resp** %12, align 8
  %249 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %248, i32 0, i32 2
  %250 = load i32, i32* %249, align 8
  call void @resp_add_iov(%struct._mc_resp* %244, i8* %247, i32 %250)
  %251 = load %struct.conn*, %struct.conn** %4, align 8
  call void @conn_set_state(%struct.conn* %251, i32 1)
  br label %254

252:                                              ; preds = %63
  %253 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %253, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.54.1123, i64 0, i64 0))
  br label %254

254:                                              ; preds = %252, %191
  %255 = load %struct.conn*, %struct.conn** %4, align 8
  %256 = getelementptr inbounds %struct.conn, %struct.conn* %255, i32 0, i32 42
  %257 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %256, align 8
  %258 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %257, i32 0, i32 4
  %259 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %258, i32 0, i32 0
  %260 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %259) #14
  %261 = load %struct.conn*, %struct.conn** %4, align 8
  %262 = getelementptr inbounds %struct.conn, %struct.conn* %261, i32 0, i32 42
  %263 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %262, align 8
  %264 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %263, i32 0, i32 4
  %265 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %264, i32 0, i32 11
  %266 = load i64, i64* %265, align 8
  %267 = add i64 %266, 1
  store i64 %267, i64* %265, align 8
  %268 = load %struct.conn*, %struct.conn** %4, align 8
  %269 = getelementptr inbounds %struct.conn, %struct.conn* %268, i32 0, i32 42
  %270 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %269, align 8
  %271 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %270, i32 0, i32 4
  %272 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %271, i32 0, i32 0
  %273 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %272) #14
  br label %274

274:                                              ; preds = %254, %59, %23
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @process_get_command(%struct.conn* %0, %struct.iovec* %1, i64 %2, i1 zeroext %3, i1 zeroext %4) #0 {
  %6 = alloca %struct.conn*, align 8
  %7 = alloca %struct.iovec*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca %struct._stritem*, align 8
  %14 = alloca %struct.iovec*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i8, align 1
  %18 = alloca %struct._mc_resp*, align 8
  %19 = alloca i8, align 1
  %20 = alloca i32, align 4
  %21 = alloca i8*, align 8
  %22 = alloca i32, align 4
  store %struct.conn* %0, %struct.conn** %6, align 8
  store %struct.iovec* %1, %struct.iovec** %7, align 8
  store i64 %2, i64* %8, align 8
  %23 = zext i1 %3 to i8
  store i8 %23, i8* %9, align 1
  %24 = zext i1 %4 to i8
  store i8 %24, i8* %10, align 1
  %25 = load %struct.iovec*, %struct.iovec** %7, align 8
  %26 = getelementptr inbounds %struct.iovec, %struct.iovec* %25, i64 1
  store %struct.iovec* %26, %struct.iovec** %14, align 8
  store i32 0, i32* %15, align 4
  store i32 0, i32* %16, align 4
  store i8 0, i8* %17, align 1
  %27 = load %struct.conn*, %struct.conn** %6, align 8
  %28 = getelementptr inbounds %struct.conn, %struct.conn* %27, i32 0, i32 19
  %29 = load %struct._mc_resp*, %struct._mc_resp** %28, align 8
  store %struct._mc_resp* %29, %struct._mc_resp** %18, align 8
  %30 = load i8, i8* %10, align 1
  %31 = trunc i8 %30 to i1
  br i1 %31, label %32, label %52

32:                                               ; preds = %5
  %33 = load %struct.iovec*, %struct.iovec** %7, align 8
  %34 = getelementptr inbounds %struct.iovec, %struct.iovec* %33, i64 1
  %35 = getelementptr inbounds %struct.iovec, %struct.iovec* %34, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = call zeroext i1 @safe_strtol(i8* %36, i32* %15)
  br i1 %37, label %40, label %38

38:                                               ; preds = %32
  %39 = load %struct.conn*, %struct.conn** %6, align 8
  call void @out_string(%struct.conn* %39, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.80.1072, i64 0, i64 0))
  br label %447

40:                                               ; preds = %32
  %41 = load %struct.iovec*, %struct.iovec** %14, align 8
  %42 = getelementptr inbounds %struct.iovec, %struct.iovec* %41, i32 1
  store %struct.iovec* %42, %struct.iovec** %14, align 8
  %43 = load i32, i32* %15, align 4
  %44 = icmp slt i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %40
  br label %48

46:                                               ; preds = %40
  %47 = load i32, i32* %15, align 4
  br label %48

48:                                               ; preds = %46, %45
  %49 = phi i32 [ 2592001, %45 ], [ %47, %46 ]
  %50 = sext i32 %49 to i64
  %51 = call i32 @realtime(i64 %50)
  store i32 %51, i32* %16, align 4
  br label %52

52:                                               ; preds = %48, %5
  br label %53

53:                                               ; preds = %410, %52
  br label %54

54:                                               ; preds = %389, %53
  %55 = load %struct.iovec*, %struct.iovec** %14, align 8
  %56 = getelementptr inbounds %struct.iovec, %struct.iovec* %55, i32 0, i32 1
  %57 = load i64, i64* %56, align 8
  %58 = icmp ne i64 %57, 0
  br i1 %58, label %59, label %390

59:                                               ; preds = %54
  %60 = load %struct.iovec*, %struct.iovec** %14, align 8
  %61 = getelementptr inbounds %struct.iovec, %struct.iovec* %60, i32 0, i32 0
  %62 = load i8*, i8** %61, align 8
  store i8* %62, i8** %11, align 8
  %63 = load %struct.iovec*, %struct.iovec** %14, align 8
  %64 = getelementptr inbounds %struct.iovec, %struct.iovec* %63, i32 0, i32 1
  %65 = load i64, i64* %64, align 8
  store i64 %65, i64* %12, align 8
  %66 = load i64, i64* %12, align 8
  %67 = icmp ugt i64 %66, 250
  br i1 %67, label %68, label %69

68:                                               ; preds = %59
  store i8 1, i8* %17, align 1
  br label %416

69:                                               ; preds = %59
  %70 = load i8*, i8** %11, align 8
  %71 = load i64, i64* %12, align 8
  %72 = load %struct.conn*, %struct.conn** %6, align 8
  %73 = load i32, i32* %16, align 4
  %74 = load i8, i8* %10, align 1
  %75 = trunc i8 %74 to i1
  %76 = call %struct._stritem* @limited_get(i8* %70, i64 %71, %struct.conn* %72, i32 %73, i1 zeroext %75, i1 zeroext true, i8* %19)
  store %struct._stritem* %76, %struct._stritem** %13, align 8
  %77 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 17), align 8
  %78 = icmp ne i32 %77, 0
  br i1 %78, label %79, label %84

79:                                               ; preds = %69
  %80 = load i8*, i8** %11, align 8
  %81 = load i64, i64* %12, align 8
  %82 = load %struct._stritem*, %struct._stritem** %13, align 8
  %83 = icmp ne %struct._stritem* null, %82
  call void @stats_prefix_record_get(i8* %80, i64 %81, i1 zeroext %83)
  br label %84

84:                                               ; preds = %79, %69
  %85 = load %struct._stritem*, %struct._stritem** %13, align 8
  %86 = icmp ne %struct._stritem* %85, null
  br i1 %86, label %87, label %328

87:                                               ; preds = %84
  %88 = load %struct._stritem*, %struct._stritem** %13, align 8
  %89 = getelementptr inbounds %struct._stritem, %struct._stritem* %88, i32 0, i32 5
  %90 = load i32, i32* %89, align 8
  store i32 %90, i32* %20, align 4
  %91 = load %struct._stritem*, %struct._stritem** %13, align 8
  %92 = getelementptr inbounds %struct._stritem, %struct._stritem* %91, i32 0, i32 5
  %93 = load i32, i32* %92, align 8
  store i32 %93, i32* %20, align 4
  %94 = load %struct._mc_resp*, %struct._mc_resp** %18, align 8
  %95 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %94, i32 0, i32 18
  %96 = getelementptr inbounds [1024 x i8], [1024 x i8]* %95, i64 0, i64 0
  store i8* %96, i8** %21, align 8
  %97 = load i8*, i8** %21, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %97, i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @.str.81.1112, i64 0, i64 0), i64 6, i1 false)
  %98 = load i8*, i8** %21, align 8
  %99 = getelementptr inbounds i8, i8* %98, i64 6
  store i8* %99, i8** %21, align 8
  %100 = load i8*, i8** %21, align 8
  %101 = load %struct._stritem*, %struct._stritem** %13, align 8
  %102 = getelementptr inbounds %struct._stritem, %struct._stritem* %101, i32 0, i32 10
  %103 = bitcast [0 x %union.anon.10]* %102 to i8*
  %104 = load %struct._stritem*, %struct._stritem** %13, align 8
  %105 = getelementptr inbounds %struct._stritem, %struct._stritem* %104, i32 0, i32 7
  %106 = load i16, i16* %105, align 2
  %107 = zext i16 %106 to i32
  %108 = and i32 %107, 2
  %109 = icmp ne i32 %108, 0
  %110 = zext i1 %109 to i64
  %111 = select i1 %109, i64 8, i64 0
  %112 = getelementptr inbounds i8, i8* %103, i64 %111
  %113 = load %struct._stritem*, %struct._stritem** %13, align 8
  %114 = getelementptr inbounds %struct._stritem, %struct._stritem* %113, i32 0, i32 9
  %115 = load i8, i8* %114, align 1
  %116 = zext i8 %115 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %100, i8* align 1 %112, i64 %116, i1 false)
  %117 = load %struct._stritem*, %struct._stritem** %13, align 8
  %118 = getelementptr inbounds %struct._stritem, %struct._stritem* %117, i32 0, i32 9
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i32
  %121 = load i8*, i8** %21, align 8
  %122 = sext i32 %120 to i64
  %123 = getelementptr inbounds i8, i8* %121, i64 %122
  store i8* %123, i8** %21, align 8
  %124 = load i8*, i8** %21, align 8
  %125 = load %struct._stritem*, %struct._stritem** %13, align 8
  %126 = load i8, i8* %9, align 1
  %127 = trunc i8 %126 to i1
  %128 = load i32, i32* %20, align 4
  %129 = call i32 @make_ascii_get_suffix(i8* %124, %struct._stritem* %125, i1 zeroext %127, i32 %128)
  %130 = load i8*, i8** %21, align 8
  %131 = sext i32 %129 to i64
  %132 = getelementptr inbounds i8, i8* %130, i64 %131
  store i8* %132, i8** %21, align 8
  %133 = load %struct._mc_resp*, %struct._mc_resp** %18, align 8
  %134 = load %struct._mc_resp*, %struct._mc_resp** %18, align 8
  %135 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %134, i32 0, i32 18
  %136 = getelementptr inbounds [1024 x i8], [1024 x i8]* %135, i64 0, i64 0
  %137 = load i8*, i8** %21, align 8
  %138 = load %struct._mc_resp*, %struct._mc_resp** %18, align 8
  %139 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %138, i32 0, i32 18
  %140 = getelementptr inbounds [1024 x i8], [1024 x i8]* %139, i64 0, i64 0
  %141 = ptrtoint i8* %137 to i64
  %142 = ptrtoint i8* %140 to i64
  %143 = sub i64 %141, %142
  %144 = trunc i64 %143 to i32
  call void @resp_add_iov(%struct._mc_resp* %133, i8* %136, i32 %144)
  %145 = load %struct._stritem*, %struct._stritem** %13, align 8
  %146 = getelementptr inbounds %struct._stritem, %struct._stritem* %145, i32 0, i32 7
  %147 = load i16, i16* %146, align 2
  %148 = zext i16 %147 to i32
  %149 = and i32 %148, 128
  %150 = icmp ne i32 %149, 0
  br i1 %150, label %151, label %179

151:                                              ; preds = %87
  %152 = load %struct.conn*, %struct.conn** %6, align 8
  %153 = load %struct._stritem*, %struct._stritem** %13, align 8
  %154 = load %struct._mc_resp*, %struct._mc_resp** %18, align 8
  %155 = call i32 @storage_get_item(%struct.conn* %152, %struct._stritem* %153, %struct._mc_resp* %154)
  %156 = icmp ne i32 %155, 0
  br i1 %156, label %157, label %178

157:                                              ; preds = %151
  %158 = load %struct.conn*, %struct.conn** %6, align 8
  %159 = getelementptr inbounds %struct.conn, %struct.conn* %158, i32 0, i32 42
  %160 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %159, align 8
  %161 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %160, i32 0, i32 4
  %162 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %161, i32 0, i32 0
  %163 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %162) #14
  %164 = load %struct.conn*, %struct.conn** %6, align 8
  %165 = getelementptr inbounds %struct.conn, %struct.conn* %164, i32 0, i32 42
  %166 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %165, align 8
  %167 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %166, i32 0, i32 4
  %168 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %167, i32 0, i32 27
  %169 = load i64, i64* %168, align 8
  %170 = add i64 %169, 1
  store i64 %170, i64* %168, align 8
  %171 = load %struct.conn*, %struct.conn** %6, align 8
  %172 = getelementptr inbounds %struct.conn, %struct.conn* %171, i32 0, i32 42
  %173 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %172, align 8
  %174 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %173, i32 0, i32 4
  %175 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %174, i32 0, i32 0
  %176 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %175) #14
  %177 = load %struct._stritem*, %struct._stritem** %13, align 8
  call void @item_remove(%struct._stritem* %177)
  br label %416

178:                                              ; preds = %151
  br label %227

179:                                              ; preds = %87
  %180 = load %struct._stritem*, %struct._stritem** %13, align 8
  %181 = getelementptr inbounds %struct._stritem, %struct._stritem* %180, i32 0, i32 7
  %182 = load i16, i16* %181, align 2
  %183 = zext i16 %182 to i32
  %184 = and i32 %183, 32
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %219

186:                                              ; preds = %179
  %187 = load %struct._mc_resp*, %struct._mc_resp** %18, align 8
  %188 = load %struct._stritem*, %struct._stritem** %13, align 8
  %189 = getelementptr inbounds %struct._stritem, %struct._stritem* %188, i32 0, i32 10
  %190 = bitcast [0 x %union.anon.10]* %189 to i8*
  %191 = load %struct._stritem*, %struct._stritem** %13, align 8
  %192 = getelementptr inbounds %struct._stritem, %struct._stritem* %191, i32 0, i32 9
  %193 = load i8, i8* %192, align 1
  %194 = zext i8 %193 to i32
  %195 = sext i32 %194 to i64
  %196 = getelementptr inbounds i8, i8* %190, i64 %195
  %197 = getelementptr inbounds i8, i8* %196, i64 1
  %198 = load %struct._stritem*, %struct._stritem** %13, align 8
  %199 = getelementptr inbounds %struct._stritem, %struct._stritem* %198, i32 0, i32 7
  %200 = load i16, i16* %199, align 2
  %201 = zext i16 %200 to i32
  %202 = and i32 %201, 256
  %203 = icmp ne i32 %202, 0
  %204 = zext i1 %203 to i64
  %205 = select i1 %203, i64 4, i64 0
  %206 = getelementptr inbounds i8, i8* %197, i64 %205
  %207 = load %struct._stritem*, %struct._stritem** %13, align 8
  %208 = getelementptr inbounds %struct._stritem, %struct._stritem* %207, i32 0, i32 7
  %209 = load i16, i16* %208, align 2
  %210 = zext i16 %209 to i32
  %211 = and i32 %210, 2
  %212 = icmp ne i32 %211, 0
  %213 = zext i1 %212 to i64
  %214 = select i1 %212, i64 8, i64 0
  %215 = getelementptr inbounds i8, i8* %206, i64 %214
  %216 = load %struct._stritem*, %struct._stritem** %13, align 8
  %217 = getelementptr inbounds %struct._stritem, %struct._stritem* %216, i32 0, i32 5
  %218 = load i32, i32* %217, align 8
  call void @resp_add_iov(%struct._mc_resp* %187, i8* %215, i32 %218)
  br label %226

219:                                              ; preds = %179
  %220 = load %struct._mc_resp*, %struct._mc_resp** %18, align 8
  %221 = load %struct._stritem*, %struct._stritem** %13, align 8
  %222 = bitcast %struct._stritem* %221 to i8*
  %223 = load %struct._stritem*, %struct._stritem** %13, align 8
  %224 = getelementptr inbounds %struct._stritem, %struct._stritem* %223, i32 0, i32 5
  %225 = load i32, i32* %224, align 8
  call void @resp_add_chunked_iov(%struct._mc_resp* %220, i8* %222, i32 %225)
  br label %226

226:                                              ; preds = %219, %186
  br label %227

227:                                              ; preds = %226, %178
  %228 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %229 = icmp sgt i32 %228, 1
  br i1 %229, label %230, label %258

230:                                              ; preds = %227
  %231 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %232 = load %struct.conn*, %struct.conn** %6, align 8
  %233 = getelementptr inbounds %struct.conn, %struct.conn* %232, i32 0, i32 1
  %234 = load i32, i32* %233, align 8
  %235 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %231, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.82.1113, i64 0, i64 0), i32 %234)
  store i32 0, i32* %22, align 4
  br label %236

236:                                              ; preds = %252, %230
  %237 = load i32, i32* %22, align 4
  %238 = load %struct._stritem*, %struct._stritem** %13, align 8
  %239 = getelementptr inbounds %struct._stritem, %struct._stritem* %238, i32 0, i32 9
  %240 = load i8, i8* %239, align 1
  %241 = zext i8 %240 to i32
  %242 = icmp slt i32 %237, %241
  br i1 %242, label %243, label %255

243:                                              ; preds = %236
  %244 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %245 = load i8*, i8** %11, align 8
  %246 = load i32, i32* %22, align 4
  %247 = sext i32 %246 to i64
  %248 = getelementptr inbounds i8, i8* %245, i64 %247
  %249 = load i8, i8* %248, align 1
  %250 = sext i8 %249 to i32
  %251 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %244, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.83.1114, i64 0, i64 0), i32 %250)
  br label %252

252:                                              ; preds = %243
  %253 = load i32, i32* %22, align 4
  %254 = add nsw i32 %253, 1
  store i32 %254, i32* %22, align 4
  br label %236, !llvm.loop !167

255:                                              ; preds = %236
  %256 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %257 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %256, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.84.1115, i64 0, i64 0))
  br label %258

258:                                              ; preds = %255, %227
  %259 = load %struct.conn*, %struct.conn** %6, align 8
  %260 = getelementptr inbounds %struct.conn, %struct.conn* %259, i32 0, i32 42
  %261 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %260, align 8
  %262 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %261, i32 0, i32 4
  %263 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %262, i32 0, i32 0
  %264 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %263) #14
  %265 = load i8, i8* %10, align 1
  %266 = trunc i8 %265 to i1
  br i1 %266, label %267, label %290

267:                                              ; preds = %258
  %268 = load %struct.conn*, %struct.conn** %6, align 8
  %269 = getelementptr inbounds %struct.conn, %struct.conn* %268, i32 0, i32 42
  %270 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %269, align 8
  %271 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %270, i32 0, i32 4
  %272 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %271, i32 0, i32 5
  %273 = load i64, i64* %272, align 8
  %274 = add i64 %273, 1
  store i64 %274, i64* %272, align 8
  %275 = load %struct.conn*, %struct.conn** %6, align 8
  %276 = getelementptr inbounds %struct.conn, %struct.conn* %275, i32 0, i32 42
  %277 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %276, align 8
  %278 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %277, i32 0, i32 4
  %279 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %278, i32 0, i32 31
  %280 = load %struct._stritem*, %struct._stritem** %13, align 8
  %281 = getelementptr inbounds %struct._stritem, %struct._stritem* %280, i32 0, i32 8
  %282 = load i8, i8* %281, align 8
  %283 = zext i8 %282 to i32
  %284 = and i32 %283, -193
  %285 = sext i32 %284 to i64
  %286 = getelementptr inbounds [64 x %struct.slab_stats], [64 x %struct.slab_stats]* %279, i64 0, i64 %285
  %287 = getelementptr inbounds %struct.slab_stats, %struct.slab_stats* %286, i32 0, i32 2
  %288 = load i64, i64* %287, align 8
  %289 = add i64 %288, 1
  store i64 %289, i64* %287, align 8
  br label %310

290:                                              ; preds = %258
  %291 = load %struct.conn*, %struct.conn** %6, align 8
  %292 = getelementptr inbounds %struct.conn, %struct.conn* %291, i32 0, i32 42
  %293 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %292, align 8
  %294 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %293, i32 0, i32 4
  %295 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %294, i32 0, i32 32
  %296 = load %struct._stritem*, %struct._stritem** %13, align 8
  %297 = getelementptr inbounds %struct._stritem, %struct._stritem* %296, i32 0, i32 8
  %298 = load i8, i8* %297, align 8
  %299 = zext i8 %298 to i64
  %300 = getelementptr inbounds [256 x i64], [256 x i64]* %295, i64 0, i64 %299
  %301 = load i64, i64* %300, align 8
  %302 = add i64 %301, 1
  store i64 %302, i64* %300, align 8
  %303 = load %struct.conn*, %struct.conn** %6, align 8
  %304 = getelementptr inbounds %struct.conn, %struct.conn* %303, i32 0, i32 42
  %305 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %304, align 8
  %306 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %305, i32 0, i32 4
  %307 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %306, i32 0, i32 1
  %308 = load i64, i64* %307, align 8
  %309 = add i64 %308, 1
  store i64 %309, i64* %307, align 8
  br label %310

310:                                              ; preds = %290, %267
  %311 = load %struct.conn*, %struct.conn** %6, align 8
  %312 = getelementptr inbounds %struct.conn, %struct.conn* %311, i32 0, i32 42
  %313 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %312, align 8
  %314 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %313, i32 0, i32 4
  %315 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %314, i32 0, i32 0
  %316 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %315) #14
  %317 = load %struct._stritem*, %struct._stritem** %13, align 8
  %318 = getelementptr inbounds %struct._stritem, %struct._stritem* %317, i32 0, i32 7
  %319 = load i16, i16* %318, align 2
  %320 = zext i16 %319 to i32
  %321 = and i32 %320, 128
  %322 = icmp eq i32 %321, 0
  br i1 %322, label %323, label %327

323:                                              ; preds = %310
  %324 = load %struct._stritem*, %struct._stritem** %13, align 8
  %325 = load %struct._mc_resp*, %struct._mc_resp** %18, align 8
  %326 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %325, i32 0, i32 6
  store %struct._stritem* %324, %struct._stritem** %326, align 8
  br label %327

327:                                              ; preds = %323, %310
  br label %374

328:                                              ; preds = %84
  %329 = load %struct.conn*, %struct.conn** %6, align 8
  %330 = getelementptr inbounds %struct.conn, %struct.conn* %329, i32 0, i32 42
  %331 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %330, align 8
  %332 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %331, i32 0, i32 4
  %333 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %332, i32 0, i32 0
  %334 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %333) #14
  %335 = load i8, i8* %10, align 1
  %336 = trunc i8 %335 to i1
  br i1 %336, label %337, label %352

337:                                              ; preds = %328
  %338 = load %struct.conn*, %struct.conn** %6, align 8
  %339 = getelementptr inbounds %struct.conn, %struct.conn* %338, i32 0, i32 42
  %340 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %339, align 8
  %341 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %340, i32 0, i32 4
  %342 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %341, i32 0, i32 5
  %343 = load i64, i64* %342, align 8
  %344 = add i64 %343, 1
  store i64 %344, i64* %342, align 8
  %345 = load %struct.conn*, %struct.conn** %6, align 8
  %346 = getelementptr inbounds %struct.conn, %struct.conn* %345, i32 0, i32 42
  %347 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %346, align 8
  %348 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %347, i32 0, i32 4
  %349 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %348, i32 0, i32 6
  %350 = load i64, i64* %349, align 8
  %351 = add i64 %350, 1
  store i64 %351, i64* %349, align 8
  br label %367

352:                                              ; preds = %328
  %353 = load %struct.conn*, %struct.conn** %6, align 8
  %354 = getelementptr inbounds %struct.conn, %struct.conn* %353, i32 0, i32 42
  %355 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %354, align 8
  %356 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %355, i32 0, i32 4
  %357 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %356, i32 0, i32 2
  %358 = load i64, i64* %357, align 8
  %359 = add i64 %358, 1
  store i64 %359, i64* %357, align 8
  %360 = load %struct.conn*, %struct.conn** %6, align 8
  %361 = getelementptr inbounds %struct.conn, %struct.conn* %360, i32 0, i32 42
  %362 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %361, align 8
  %363 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %362, i32 0, i32 4
  %364 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %363, i32 0, i32 1
  %365 = load i64, i64* %364, align 8
  %366 = add i64 %365, 1
  store i64 %366, i64* %364, align 8
  br label %367

367:                                              ; preds = %352, %337
  %368 = load %struct.conn*, %struct.conn** %6, align 8
  %369 = getelementptr inbounds %struct.conn, %struct.conn* %368, i32 0, i32 42
  %370 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %369, align 8
  %371 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %370, i32 0, i32 4
  %372 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %371, i32 0, i32 0
  %373 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %372) #14
  br label %374

374:                                              ; preds = %367, %327
  %375 = load %struct.iovec*, %struct.iovec** %14, align 8
  %376 = getelementptr inbounds %struct.iovec, %struct.iovec* %375, i32 1
  store %struct.iovec* %376, %struct.iovec** %14, align 8
  %377 = load %struct.iovec*, %struct.iovec** %14, align 8
  %378 = getelementptr inbounds %struct.iovec, %struct.iovec* %377, i32 0, i32 1
  %379 = load i64, i64* %378, align 8
  %380 = icmp ne i64 %379, 0
  br i1 %380, label %381, label %389

381:                                              ; preds = %374
  %382 = load %struct.conn*, %struct.conn** %6, align 8
  %383 = call zeroext i1 @resp_start(%struct.conn* %382)
  br i1 %383, label %385, label %384

384:                                              ; preds = %381
  br label %416

385:                                              ; preds = %381
  %386 = load %struct.conn*, %struct.conn** %6, align 8
  %387 = getelementptr inbounds %struct.conn, %struct.conn* %386, i32 0, i32 19
  %388 = load %struct._mc_resp*, %struct._mc_resp** %387, align 8
  store %struct._mc_resp* %388, %struct._mc_resp** %18, align 8
  br label %389

389:                                              ; preds = %385, %374
  br label %54, !llvm.loop !168

390:                                              ; preds = %54
  %391 = load %struct.iovec*, %struct.iovec** %14, align 8
  %392 = getelementptr inbounds %struct.iovec, %struct.iovec* %391, i32 0, i32 0
  %393 = load i8*, i8** %392, align 8
  %394 = icmp ne i8* %393, null
  br i1 %394, label %395, label %409

395:                                              ; preds = %390
  %396 = load %struct.iovec*, %struct.iovec** %14, align 8
  %397 = getelementptr inbounds %struct.iovec, %struct.iovec* %396, i32 0, i32 0
  %398 = load i8*, i8** %397, align 8
  %399 = load %struct.iovec*, %struct.iovec** %7, align 8
  %400 = call i64 @tokenize_command(i8* %398, %struct.iovec* %399, i64 24)
  store i64 %400, i64* %8, align 8
  %401 = load %struct.iovec*, %struct.iovec** %7, align 8
  store %struct.iovec* %401, %struct.iovec** %14, align 8
  %402 = load %struct.conn*, %struct.conn** %6, align 8
  %403 = call zeroext i1 @resp_start(%struct.conn* %402)
  br i1 %403, label %405, label %404

404:                                              ; preds = %395
  br label %416

405:                                              ; preds = %395
  %406 = load %struct.conn*, %struct.conn** %6, align 8
  %407 = getelementptr inbounds %struct.conn, %struct.conn* %406, i32 0, i32 19
  %408 = load %struct._mc_resp*, %struct._mc_resp** %407, align 8
  store %struct._mc_resp* %408, %struct._mc_resp** %18, align 8
  br label %409

409:                                              ; preds = %405, %390
  br label %410

410:                                              ; preds = %409
  %411 = load %struct.iovec*, %struct.iovec** %14, align 8
  %412 = getelementptr inbounds %struct.iovec, %struct.iovec* %411, i32 0, i32 0
  %413 = load i8*, i8** %412, align 8
  %414 = icmp ne i8* %413, null
  br i1 %414, label %53, label %415, !llvm.loop !169

415:                                              ; preds = %410
  br label %416

416:                                              ; preds = %415, %404, %384, %157, %68
  %417 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %418 = icmp sgt i32 %417, 1
  br i1 %418, label %419, label %425

419:                                              ; preds = %416
  %420 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %421 = load %struct.conn*, %struct.conn** %6, align 8
  %422 = getelementptr inbounds %struct.conn, %struct.conn* %421, i32 0, i32 1
  %423 = load i32, i32* %422, align 8
  %424 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %420, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.85.1116, i64 0, i64 0), i32 %423)
  br label %425

425:                                              ; preds = %419, %416
  %426 = load %struct.iovec*, %struct.iovec** %14, align 8
  %427 = getelementptr inbounds %struct.iovec, %struct.iovec* %426, i32 0, i32 0
  %428 = load i8*, i8** %427, align 8
  %429 = icmp ne i8* %428, null
  br i1 %429, label %430, label %444

430:                                              ; preds = %425
  %431 = load %struct.conn*, %struct.conn** %6, align 8
  call void @conn_release_items(%struct.conn* %431)
  %432 = load %struct.conn*, %struct.conn** %6, align 8
  %433 = call zeroext i1 @resp_start(%struct.conn* %432)
  br i1 %433, label %436, label %434

434:                                              ; preds = %430
  %435 = load %struct.conn*, %struct.conn** %6, align 8
  call void @conn_set_state(%struct.conn* %435, i32 8)
  br label %447

436:                                              ; preds = %430
  %437 = load i8, i8* %17, align 1
  %438 = trunc i8 %437 to i1
  br i1 %438, label %439, label %441

439:                                              ; preds = %436
  %440 = load %struct.conn*, %struct.conn** %6, align 8
  call void @out_string(%struct.conn* %440, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.49.1040, i64 0, i64 0))
  br label %443

441:                                              ; preds = %436
  %442 = load %struct.conn*, %struct.conn** %6, align 8
  call void @out_of_memory(%struct.conn* %442, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.86.1117, i64 0, i64 0))
  br label %443

443:                                              ; preds = %441, %439
  br label %447

444:                                              ; preds = %425
  %445 = load %struct._mc_resp*, %struct._mc_resp** %18, align 8
  call void @resp_add_iov(%struct._mc_resp* %445, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.87.1118, i64 0, i64 0), i32 5)
  %446 = load %struct.conn*, %struct.conn** %6, align 8
  call void @conn_set_state(%struct.conn* %446, i32 9)
  br label %447

447:                                              ; preds = %38, %434, %444, %443
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @process_update_command(%struct.conn* %0, %struct.iovec* %1, i64 %2, i32 %3, i1 zeroext %4) #0 {
  %6 = alloca %struct.conn*, align 8
  %7 = alloca %struct.iovec*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca i8, align 1
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i64, align 8
  %18 = alloca %struct._stritem*, align 8
  %19 = alloca i32, align 4
  %20 = alloca %struct._logger*, align 8
  store %struct.conn* %0, %struct.conn** %6, align 8
  store %struct.iovec* %1, %struct.iovec** %7, align 8
  store i64 %2, i64* %8, align 8
  store i32 %3, i32* %9, align 4
  %21 = zext i1 %4 to i8
  store i8 %21, i8* %10, align 1
  store i32 0, i32* %14, align 4
  store i32 0, i32* %15, align 4
  store i64 0, i64* %17, align 8
  %22 = load %struct.conn*, %struct.conn** %6, align 8
  %23 = load %struct.iovec*, %struct.iovec** %7, align 8
  %24 = load i64, i64* %8, align 8
  %25 = call zeroext i1 @set_noreply_maybe(%struct.conn* %22, %struct.iovec* %23, i64 %24)
  %26 = load %struct.iovec*, %struct.iovec** %7, align 8
  %27 = getelementptr inbounds %struct.iovec, %struct.iovec* %26, i64 1
  %28 = getelementptr inbounds %struct.iovec, %struct.iovec* %27, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = icmp ugt i64 %29, 250
  br i1 %30, label %31, label %33

31:                                               ; preds = %5
  %32 = load %struct.conn*, %struct.conn** %6, align 8
  call void @out_string(%struct.conn* %32, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.49.1040, i64 0, i64 0))
  br label %274

33:                                               ; preds = %5
  %34 = load %struct.iovec*, %struct.iovec** %7, align 8
  %35 = getelementptr inbounds %struct.iovec, %struct.iovec* %34, i64 1
  %36 = getelementptr inbounds %struct.iovec, %struct.iovec* %35, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  store i8* %37, i8** %11, align 8
  %38 = load %struct.iovec*, %struct.iovec** %7, align 8
  %39 = getelementptr inbounds %struct.iovec, %struct.iovec* %38, i64 1
  %40 = getelementptr inbounds %struct.iovec, %struct.iovec* %39, i32 0, i32 1
  %41 = load i64, i64* %40, align 8
  store i64 %41, i64* %12, align 8
  %42 = load %struct.iovec*, %struct.iovec** %7, align 8
  %43 = getelementptr inbounds %struct.iovec, %struct.iovec* %42, i64 2
  %44 = getelementptr inbounds %struct.iovec, %struct.iovec* %43, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  %46 = call zeroext i1 @safe_strtoul(i8* %45, i32* %13)
  br i1 %46, label %47, label %59

47:                                               ; preds = %33
  %48 = load %struct.iovec*, %struct.iovec** %7, align 8
  %49 = getelementptr inbounds %struct.iovec, %struct.iovec* %48, i64 3
  %50 = getelementptr inbounds %struct.iovec, %struct.iovec* %49, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  %52 = call zeroext i1 @safe_strtol(i8* %51, i32* %14)
  br i1 %52, label %53, label %59

53:                                               ; preds = %47
  %54 = load %struct.iovec*, %struct.iovec** %7, align 8
  %55 = getelementptr inbounds %struct.iovec, %struct.iovec* %54, i64 4
  %56 = getelementptr inbounds %struct.iovec, %struct.iovec* %55, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = call zeroext i1 @safe_strtol(i8* %57, i32* %16)
  br i1 %58, label %61, label %59

59:                                               ; preds = %53, %47, %33
  %60 = load %struct.conn*, %struct.conn** %6, align 8
  call void @out_string(%struct.conn* %60, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.49.1040, i64 0, i64 0))
  br label %274

61:                                               ; preds = %53
  %62 = load i32, i32* %14, align 4
  %63 = icmp slt i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  br label %67

65:                                               ; preds = %61
  %66 = load i32, i32* %14, align 4
  br label %67

67:                                               ; preds = %65, %64
  %68 = phi i32 [ 2592001, %64 ], [ %66, %65 ]
  %69 = sext i32 %68 to i64
  %70 = call i32 @realtime(i64 %69)
  store i32 %70, i32* %15, align 4
  %71 = load i8, i8* %10, align 1
  %72 = trunc i8 %71 to i1
  br i1 %72, label %73, label %82

73:                                               ; preds = %67
  %74 = load %struct.iovec*, %struct.iovec** %7, align 8
  %75 = getelementptr inbounds %struct.iovec, %struct.iovec* %74, i64 5
  %76 = getelementptr inbounds %struct.iovec, %struct.iovec* %75, i32 0, i32 0
  %77 = load i8*, i8** %76, align 8
  %78 = call zeroext i1 @safe_strtoull(i8* %77, i64* %17)
  br i1 %78, label %81, label %79

79:                                               ; preds = %73
  %80 = load %struct.conn*, %struct.conn** %6, align 8
  call void @out_string(%struct.conn* %80, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.49.1040, i64 0, i64 0))
  br label %274

81:                                               ; preds = %73
  br label %82

82:                                               ; preds = %81, %67
  %83 = load i32, i32* %16, align 4
  %84 = icmp slt i32 %83, 0
  br i1 %84, label %88, label %85

85:                                               ; preds = %82
  %86 = load i32, i32* %16, align 4
  %87 = icmp sgt i32 %86, 2147483645
  br i1 %87, label %88, label %90

88:                                               ; preds = %85, %82
  %89 = load %struct.conn*, %struct.conn** %6, align 8
  call void @out_string(%struct.conn* %89, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.49.1040, i64 0, i64 0))
  br label %274

90:                                               ; preds = %85
  %91 = load i32, i32* %16, align 4
  %92 = add nsw i32 %91, 2
  store i32 %92, i32* %16, align 4
  %93 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 17), align 8
  %94 = icmp ne i32 %93, 0
  br i1 %94, label %95, label %98

95:                                               ; preds = %90
  %96 = load i8*, i8** %11, align 8
  %97 = load i64, i64* %12, align 8
  call void @stats_prefix_record_set(i8* %96, i64 %97)
  br label %98

98:                                               ; preds = %95, %90
  %99 = load i8*, i8** %11, align 8
  %100 = load i64, i64* %12, align 8
  %101 = load i32, i32* %13, align 4
  %102 = load i32, i32* %15, align 4
  %103 = load i32, i32* %16, align 4
  %104 = call %struct._stritem* @item_alloc(i8* %99, i64 %100, i32 %101, i32 %102, i32 %103)
  store %struct._stritem* %104, %struct._stritem** %18, align 8
  %105 = load %struct._stritem*, %struct._stritem** %18, align 8
  %106 = icmp eq %struct._stritem* %105, null
  br i1 %106, label %107, label %216

107:                                              ; preds = %98
  %108 = load i64, i64* %12, align 8
  %109 = load i32, i32* %13, align 4
  %110 = load i32, i32* %16, align 4
  %111 = call zeroext i1 @item_size_ok(i64 %108, i32 %109, i32 %110)
  br i1 %111, label %133, label %112

112:                                              ; preds = %107
  %113 = load %struct.conn*, %struct.conn** %6, align 8
  call void @out_string(%struct.conn* %113, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.64.1110, i64 0, i64 0))
  store i32 4, i32* %19, align 4
  %114 = load %struct.conn*, %struct.conn** %6, align 8
  %115 = getelementptr inbounds %struct.conn, %struct.conn* %114, i32 0, i32 42
  %116 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %115, align 8
  %117 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %116, i32 0, i32 4
  %118 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %117, i32 0, i32 0
  %119 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %118) #14
  %120 = load %struct.conn*, %struct.conn** %6, align 8
  %121 = getelementptr inbounds %struct.conn, %struct.conn* %120, i32 0, i32 42
  %122 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %121, align 8
  %123 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %122, i32 0, i32 4
  %124 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %123, i32 0, i32 23
  %125 = load i64, i64* %124, align 8
  %126 = add i64 %125, 1
  store i64 %126, i64* %124, align 8
  %127 = load %struct.conn*, %struct.conn** %6, align 8
  %128 = getelementptr inbounds %struct.conn, %struct.conn* %127, i32 0, i32 42
  %129 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %128, align 8
  %130 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %129, i32 0, i32 4
  %131 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %130, i32 0, i32 0
  %132 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %131) #14
  br label %154

133:                                              ; preds = %107
  %134 = load %struct.conn*, %struct.conn** %6, align 8
  call void @out_of_memory(%struct.conn* %134, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.65.1111, i64 0, i64 0))
  store i32 5, i32* %19, align 4
  %135 = load %struct.conn*, %struct.conn** %6, align 8
  %136 = getelementptr inbounds %struct.conn, %struct.conn* %135, i32 0, i32 42
  %137 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %136, align 8
  %138 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %137, i32 0, i32 4
  %139 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %138, i32 0, i32 0
  %140 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %139) #14
  %141 = load %struct.conn*, %struct.conn** %6, align 8
  %142 = getelementptr inbounds %struct.conn, %struct.conn* %141, i32 0, i32 42
  %143 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %142, align 8
  %144 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %143, i32 0, i32 4
  %145 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %144, i32 0, i32 24
  %146 = load i64, i64* %145, align 8
  %147 = add i64 %146, 1
  store i64 %147, i64* %145, align 8
  %148 = load %struct.conn*, %struct.conn** %6, align 8
  %149 = getelementptr inbounds %struct.conn, %struct.conn* %148, i32 0, i32 42
  %150 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %149, align 8
  %151 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %150, i32 0, i32 4
  %152 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %151, i32 0, i32 0
  %153 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %152) #14
  br label %154

154:                                              ; preds = %133, %112
  br label %155

155:                                              ; preds = %154
  %156 = load %struct.conn*, %struct.conn** %6, align 8
  %157 = getelementptr inbounds %struct.conn, %struct.conn* %156, i32 0, i32 42
  %158 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %157, align 8
  %159 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %158, i32 0, i32 11
  %160 = load %struct._logger*, %struct._logger** %159, align 8
  store %struct._logger* %160, %struct._logger** %20, align 8
  %161 = load %struct.conn*, %struct.conn** %6, align 8
  %162 = getelementptr inbounds %struct.conn, %struct.conn* %161, i32 0, i32 42
  %163 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %162, align 8
  %164 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %163, i32 0, i32 11
  %165 = load %struct._logger*, %struct._logger** %164, align 8
  %166 = icmp eq %struct._logger* %165, null
  br i1 %166, label %167, label %171

167:                                              ; preds = %155
  %168 = load i32, i32* @logger_key, align 4
  %169 = call i8* @pthread_getspecific(i32 %168) #14
  %170 = bitcast i8* %169 to %struct._logger*
  store %struct._logger* %170, %struct._logger** %20, align 8
  br label %171

171:                                              ; preds = %167, %155
  %172 = load %struct._logger*, %struct._logger** %20, align 8
  %173 = getelementptr inbounds %struct._logger, %struct._logger* %172, i32 0, i32 8
  %174 = load i16, i16* %173, align 4
  %175 = zext i16 %174 to i32
  %176 = and i32 %175, 8
  %177 = icmp ne i32 %176, 0
  br i1 %177, label %178, label %188

178:                                              ; preds = %171
  %179 = load %struct._logger*, %struct._logger** %20, align 8
  %180 = load i32, i32* %19, align 4
  %181 = load i32, i32* %9, align 4
  %182 = load i8*, i8** %11, align 8
  %183 = load i64, i64* %12, align 8
  %184 = load %struct.conn*, %struct.conn** %6, align 8
  %185 = getelementptr inbounds %struct.conn, %struct.conn* %184, i32 0, i32 1
  %186 = load i32, i32* %185, align 8
  %187 = call i32 (%struct._logger*, i32, i8*, ...) @logger_log(%struct._logger* %179, i32 3, i8* null, i32 %180, i32 %181, i8* %182, i64 %183, i32 0, i32 0, i32 %186)
  br label %188

188:                                              ; preds = %178, %171
  br label %189

189:                                              ; preds = %188
  %190 = load %struct.conn*, %struct.conn** %6, align 8
  call void @conn_set_state(%struct.conn* %190, i32 7)
  %191 = load i32, i32* %16, align 4
  %192 = load %struct.conn*, %struct.conn** %6, align 8
  %193 = getelementptr inbounds %struct.conn, %struct.conn* %192, i32 0, i32 24
  store i32 %191, i32* %193, align 8
  %194 = load i32, i32* %9, align 4
  %195 = icmp eq i32 %194, 2
  br i1 %195, label %196, label %215

196:                                              ; preds = %189
  %197 = load i8*, i8** %11, align 8
  %198 = load i64, i64* %12, align 8
  %199 = load %struct.conn*, %struct.conn** %6, align 8
  %200 = call %struct._stritem* @item_get(i8* %197, i64 %198, %struct.conn* %199, i1 zeroext false)
  store %struct._stritem* %200, %struct._stritem** %18, align 8
  %201 = load %struct._stritem*, %struct._stritem** %18, align 8
  %202 = icmp ne %struct._stritem* %201, null
  br i1 %202, label %203, label %214

203:                                              ; preds = %196
  %204 = load %struct._stritem*, %struct._stritem** %18, align 8
  call void @item_unlink(%struct._stritem* %204)
  br label %205

205:                                              ; preds = %203
  %206 = load %struct.conn*, %struct.conn** %6, align 8
  %207 = getelementptr inbounds %struct.conn, %struct.conn* %206, i32 0, i32 42
  %208 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %207, align 8
  %209 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %208, i32 0, i32 10
  %210 = load i8*, i8** %209, align 8
  %211 = load %struct._stritem*, %struct._stritem** %18, align 8
  call void @storage_delete(i8* %210, %struct._stritem* %211)
  br label %212

212:                                              ; preds = %205
  %213 = load %struct._stritem*, %struct._stritem** %18, align 8
  call void @item_remove(%struct._stritem* %213)
  br label %214

214:                                              ; preds = %212, %196
  br label %215

215:                                              ; preds = %214, %189
  br label %274

216:                                              ; preds = %98
  %217 = load %struct._stritem*, %struct._stritem** %18, align 8
  %218 = getelementptr inbounds %struct._stritem, %struct._stritem* %217, i32 0, i32 7
  %219 = load i16, i16* %218, align 2
  %220 = zext i16 %219 to i32
  %221 = and i32 %220, 2
  %222 = icmp ne i32 %221, 0
  br i1 %222, label %223, label %229

223:                                              ; preds = %216
  %224 = load i64, i64* %17, align 8
  %225 = load %struct._stritem*, %struct._stritem** %18, align 8
  %226 = getelementptr inbounds %struct._stritem, %struct._stritem* %225, i32 0, i32 10
  %227 = getelementptr inbounds [0 x %union.anon.10], [0 x %union.anon.10]* %226, i64 0, i64 0
  %228 = bitcast %union.anon.10* %227 to i64*
  store i64 %224, i64* %228, align 8
  br label %229

229:                                              ; preds = %223, %216
  %230 = load %struct._stritem*, %struct._stritem** %18, align 8
  %231 = bitcast %struct._stritem* %230 to i8*
  %232 = load %struct.conn*, %struct.conn** %6, align 8
  %233 = getelementptr inbounds %struct.conn, %struct.conn* %232, i32 0, i32 23
  store i8* %231, i8** %233, align 8
  %234 = load %struct._stritem*, %struct._stritem** %18, align 8
  %235 = getelementptr inbounds %struct._stritem, %struct._stritem* %234, i32 0, i32 10
  %236 = bitcast [0 x %union.anon.10]* %235 to i8*
  %237 = load %struct._stritem*, %struct._stritem** %18, align 8
  %238 = getelementptr inbounds %struct._stritem, %struct._stritem* %237, i32 0, i32 9
  %239 = load i8, i8* %238, align 1
  %240 = zext i8 %239 to i32
  %241 = sext i32 %240 to i64
  %242 = getelementptr inbounds i8, i8* %236, i64 %241
  %243 = getelementptr inbounds i8, i8* %242, i64 1
  %244 = load %struct._stritem*, %struct._stritem** %18, align 8
  %245 = getelementptr inbounds %struct._stritem, %struct._stritem* %244, i32 0, i32 7
  %246 = load i16, i16* %245, align 2
  %247 = zext i16 %246 to i32
  %248 = and i32 %247, 256
  %249 = icmp ne i32 %248, 0
  %250 = zext i1 %249 to i64
  %251 = select i1 %249, i64 4, i64 0
  %252 = getelementptr inbounds i8, i8* %243, i64 %251
  %253 = load %struct._stritem*, %struct._stritem** %18, align 8
  %254 = getelementptr inbounds %struct._stritem, %struct._stritem* %253, i32 0, i32 7
  %255 = load i16, i16* %254, align 2
  %256 = zext i16 %255 to i32
  %257 = and i32 %256, 2
  %258 = icmp ne i32 %257, 0
  %259 = zext i1 %258 to i64
  %260 = select i1 %258, i64 8, i64 0
  %261 = getelementptr inbounds i8, i8* %252, i64 %260
  %262 = load %struct.conn*, %struct.conn** %6, align 8
  %263 = getelementptr inbounds %struct.conn, %struct.conn* %262, i32 0, i32 21
  store i8* %261, i8** %263, align 8
  %264 = load %struct._stritem*, %struct._stritem** %18, align 8
  %265 = getelementptr inbounds %struct._stritem, %struct._stritem* %264, i32 0, i32 5
  %266 = load i32, i32* %265, align 8
  %267 = load %struct.conn*, %struct.conn** %6, align 8
  %268 = getelementptr inbounds %struct.conn, %struct.conn* %267, i32 0, i32 22
  store i32 %266, i32* %268, align 8
  %269 = load i32, i32* %9, align 4
  %270 = trunc i32 %269 to i16
  %271 = load %struct.conn*, %struct.conn** %6, align 8
  %272 = getelementptr inbounds %struct.conn, %struct.conn* %271, i32 0, i32 38
  store i16 %270, i16* %272, align 8
  %273 = load %struct.conn*, %struct.conn** %6, align 8
  call void @conn_set_state(%struct.conn* %273, i32 6)
  br label %274

274:                                              ; preds = %229, %215, %88, %79, %59, %31
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @process_stat(%struct.conn* %0, %struct.iovec* %1, i64 %2) #0 {
  %4 = alloca %struct.conn*, align 8
  %5 = alloca %struct.iovec*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store %struct.conn* %0, %struct.conn** %4, align 8
  store %struct.iovec* %1, %struct.iovec** %5, align 8
  store i64 %2, i64* %6, align 8
  %12 = load %struct.iovec*, %struct.iovec** %5, align 8
  %13 = getelementptr inbounds %struct.iovec, %struct.iovec* %12, i64 1
  %14 = getelementptr inbounds %struct.iovec, %struct.iovec* %13, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  store i8* %15, i8** %7, align 8
  %16 = load i64, i64* %6, align 8
  %17 = icmp ult i64 %16, 2
  br i1 %17, label %18, label %20

18:                                               ; preds = %3
  %19 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %19, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.89.1095, i64 0, i64 0))
  br label %174

20:                                               ; preds = %3
  %21 = load i64, i64* %6, align 8
  %22 = icmp eq i64 %21, 2
  br i1 %22, label %23, label %28

23:                                               ; preds = %20
  %24 = load %struct.conn*, %struct.conn** %4, align 8
  call void @server_stats(void (i8*, i16, i8*, i32, i8*)* @append_stats, %struct.conn* %24)
  %25 = load %struct.conn*, %struct.conn** %4, align 8
  %26 = bitcast %struct.conn* %25 to i8*
  %27 = call zeroext i1 @get_stats(i8* null, i32 0, void (i8*, i16, i8*, i32, i8*)* @append_stats, i8* %26)
  br label %150

28:                                               ; preds = %20
  %29 = load i8*, i8** %7, align 8
  %30 = call i32 @strcmp(i8* %29, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.90.1096, i64 0, i64 0)) #16
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %28
  call void @stats_reset()
  %33 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %33, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.91.1097, i64 0, i64 0))
  br label %174

34:                                               ; preds = %28
  %35 = load i8*, i8** %7, align 8
  %36 = call i32 @strcmp(i8* %35, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.92.1098, i64 0, i64 0)) #16
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %50

38:                                               ; preds = %34
  %39 = load i64, i64* %6, align 8
  %40 = icmp ult i64 %39, 4
  br i1 %40, label %41, label %43

41:                                               ; preds = %38
  %42 = load %struct.conn*, %struct.conn** %4, align 8
  call void @process_stats_detail(%struct.conn* %42, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.93.1099, i64 0, i64 0))
  br label %49

43:                                               ; preds = %38
  %44 = load %struct.conn*, %struct.conn** %4, align 8
  %45 = load %struct.iovec*, %struct.iovec** %5, align 8
  %46 = getelementptr inbounds %struct.iovec, %struct.iovec* %45, i64 2
  %47 = getelementptr inbounds %struct.iovec, %struct.iovec* %46, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @process_stats_detail(%struct.conn* %44, i8* %48)
  br label %49

49:                                               ; preds = %43, %41
  br label %174

50:                                               ; preds = %34
  %51 = load i8*, i8** %7, align 8
  %52 = call i32 @strcmp(i8* %51, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.94.1100, i64 0, i64 0)) #16
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %57

54:                                               ; preds = %50
  %55 = load %struct.conn*, %struct.conn** %4, align 8
  %56 = bitcast %struct.conn* %55 to i8*
  call void @process_stat_settings(void (i8*, i16, i8*, i32, i8*)* @append_stats, i8* %56)
  br label %147

57:                                               ; preds = %50
  %58 = load i8*, i8** %7, align 8
  %59 = call i32 @strcmp(i8* %58, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.95.1101, i64 0, i64 0)) #16
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %97

61:                                               ; preds = %57
  store i32 0, i32* %11, align 4
  %62 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 39), align 1
  %63 = trunc i8 %62 to i1
  br i1 %63, label %66, label %64

64:                                               ; preds = %61
  %65 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %65, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.96.1102, i64 0, i64 0))
  br label %174

66:                                               ; preds = %61
  %67 = load i64, i64* %6, align 8
  %68 = icmp ult i64 %67, 5
  br i1 %68, label %69, label %71

69:                                               ; preds = %66
  %70 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %70, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.89.1095, i64 0, i64 0))
  br label %174

71:                                               ; preds = %66
  %72 = load %struct.iovec*, %struct.iovec** %5, align 8
  %73 = getelementptr inbounds %struct.iovec, %struct.iovec* %72, i64 2
  %74 = getelementptr inbounds %struct.iovec, %struct.iovec* %73, i32 0, i32 0
  %75 = load i8*, i8** %74, align 8
  %76 = call zeroext i1 @safe_strtoul(i8* %75, i32* %10)
  br i1 %76, label %77, label %83

77:                                               ; preds = %71
  %78 = load %struct.iovec*, %struct.iovec** %5, align 8
  %79 = getelementptr inbounds %struct.iovec, %struct.iovec* %78, i64 3
  %80 = getelementptr inbounds %struct.iovec, %struct.iovec* %79, i32 0, i32 0
  %81 = load i8*, i8** %80, align 8
  %82 = call zeroext i1 @safe_strtoul(i8* %81, i32* %11)
  br i1 %82, label %85, label %83

83:                                               ; preds = %77, %71
  %84 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %84, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.49.1040, i64 0, i64 0))
  br label %174

85:                                               ; preds = %77
  %86 = load i32, i32* %10, align 4
  %87 = icmp uge i32 %86, 64
  br i1 %87, label %88, label %90

88:                                               ; preds = %85
  %89 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %89, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.97.1103, i64 0, i64 0))
  br label %174

90:                                               ; preds = %85
  %91 = load i32, i32* %10, align 4
  %92 = load i32, i32* %11, align 4
  %93 = call i8* @item_cachedump(i32 %91, i32 %92, i32* %9)
  store i8* %93, i8** %8, align 8
  %94 = load %struct.conn*, %struct.conn** %4, align 8
  %95 = load i8*, i8** %8, align 8
  %96 = load i32, i32* %9, align 4
  call void @write_and_free(%struct.conn* %94, i8* %95, i32 %96)
  br label %174

97:                                               ; preds = %57
  %98 = load i8*, i8** %7, align 8
  %99 = call i32 @strcmp(i8* %98, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.98.1104, i64 0, i64 0)) #16
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %104

101:                                              ; preds = %97
  %102 = load %struct.conn*, %struct.conn** %4, align 8
  %103 = bitcast %struct.conn* %102 to i8*
  call void @process_stats_conns(void (i8*, i16, i8*, i32, i8*)* @append_stats, i8* %103)
  br label %145

104:                                              ; preds = %97
  %105 = load i8*, i8** %7, align 8
  %106 = call i32 @strcmp(i8* %105, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.42.1020, i64 0, i64 0)) #16
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %110

108:                                              ; preds = %104
  %109 = load %struct.conn*, %struct.conn** %4, align 8
  call void @process_extstore_stats(void (i8*, i16, i8*, i32, i8*)* @append_stats, %struct.conn* %109)
  br label %144

110:                                              ; preds = %104
  %111 = load i8*, i8** %7, align 8
  %112 = load i8*, i8** %7, align 8
  %113 = call i64 @strlen(i8* %112) #16
  %114 = trunc i64 %113 to i32
  %115 = load %struct.conn*, %struct.conn** %4, align 8
  %116 = bitcast %struct.conn* %115 to i8*
  %117 = call zeroext i1 @get_stats(i8* %111, i32 %114, void (i8*, i16, i8*, i32, i8*)* @append_stats, i8* %116)
  br i1 %117, label %118, label %141

118:                                              ; preds = %110
  %119 = load %struct.conn*, %struct.conn** %4, align 8
  %120 = getelementptr inbounds %struct.conn, %struct.conn* %119, i32 0, i32 35
  %121 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %120, i32 0, i32 0
  %122 = load i8*, i8** %121, align 8
  %123 = icmp eq i8* %122, null
  br i1 %123, label %124, label %126

124:                                              ; preds = %118
  %125 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_of_memory(%struct.conn* %125, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.99.1105, i64 0, i64 0))
  br label %140

126:                                              ; preds = %118
  %127 = load %struct.conn*, %struct.conn** %4, align 8
  %128 = load %struct.conn*, %struct.conn** %4, align 8
  %129 = getelementptr inbounds %struct.conn, %struct.conn* %128, i32 0, i32 35
  %130 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %129, i32 0, i32 0
  %131 = load i8*, i8** %130, align 8
  %132 = load %struct.conn*, %struct.conn** %4, align 8
  %133 = getelementptr inbounds %struct.conn, %struct.conn* %132, i32 0, i32 35
  %134 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %133, i32 0, i32 2
  %135 = load i64, i64* %134, align 8
  %136 = trunc i64 %135 to i32
  call void @write_and_free(%struct.conn* %127, i8* %131, i32 %136)
  %137 = load %struct.conn*, %struct.conn** %4, align 8
  %138 = getelementptr inbounds %struct.conn, %struct.conn* %137, i32 0, i32 35
  %139 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %138, i32 0, i32 0
  store i8* null, i8** %139, align 8
  br label %140

140:                                              ; preds = %126, %124
  br label %143

141:                                              ; preds = %110
  %142 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %142, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15.993, i64 0, i64 0))
  br label %143

143:                                              ; preds = %141, %140
  br label %174

144:                                              ; preds = %108
  br label %145

145:                                              ; preds = %144, %101
  br label %146

146:                                              ; preds = %145
  br label %147

147:                                              ; preds = %146, %54
  br label %148

148:                                              ; preds = %147
  br label %149

149:                                              ; preds = %148
  br label %150

150:                                              ; preds = %149, %23
  %151 = load %struct.conn*, %struct.conn** %4, align 8
  %152 = bitcast %struct.conn* %151 to i8*
  call void @append_stats(i8* null, i16 zeroext 0, i8* null, i32 0, i8* %152)
  %153 = load %struct.conn*, %struct.conn** %4, align 8
  %154 = getelementptr inbounds %struct.conn, %struct.conn* %153, i32 0, i32 35
  %155 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %154, i32 0, i32 0
  %156 = load i8*, i8** %155, align 8
  %157 = icmp eq i8* %156, null
  br i1 %157, label %158, label %160

158:                                              ; preds = %150
  %159 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_of_memory(%struct.conn* %159, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.99.1105, i64 0, i64 0))
  br label %174

160:                                              ; preds = %150
  %161 = load %struct.conn*, %struct.conn** %4, align 8
  %162 = load %struct.conn*, %struct.conn** %4, align 8
  %163 = getelementptr inbounds %struct.conn, %struct.conn* %162, i32 0, i32 35
  %164 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %163, i32 0, i32 0
  %165 = load i8*, i8** %164, align 8
  %166 = load %struct.conn*, %struct.conn** %4, align 8
  %167 = getelementptr inbounds %struct.conn, %struct.conn* %166, i32 0, i32 35
  %168 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %167, i32 0, i32 2
  %169 = load i64, i64* %168, align 8
  %170 = trunc i64 %169 to i32
  call void @write_and_free(%struct.conn* %161, i8* %165, i32 %170)
  %171 = load %struct.conn*, %struct.conn** %4, align 8
  %172 = getelementptr inbounds %struct.conn, %struct.conn* %171, i32 0, i32 35
  %173 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %172, i32 0, i32 0
  store i8* null, i8** %173, align 8
  br label %174

174:                                              ; preds = %18, %32, %49, %64, %69, %83, %88, %90, %143, %160, %158
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @process_shutdown_command(%struct.conn* %0, %struct.iovec* %1, i64 %2) #0 {
  %4 = alloca %struct.conn*, align 8
  %5 = alloca %struct.iovec*, align 8
  %6 = alloca i64, align 8
  store %struct.conn* %0, %struct.conn** %4, align 8
  store %struct.iovec* %1, %struct.iovec** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 36), align 8
  %8 = trunc i8 %7 to i1
  br i1 %8, label %11, label %9

9:                                                ; preds = %3
  %10 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %10, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.104.1092, i64 0, i64 0))
  br label %37

11:                                               ; preds = %3
  %12 = load i64, i64* %6, align 8
  %13 = icmp eq i64 %12, 2
  br i1 %13, label %14, label %19

14:                                               ; preds = %11
  %15 = load %struct.conn*, %struct.conn** %4, align 8
  %16 = getelementptr inbounds %struct.conn, %struct.conn* %15, i32 0, i32 30
  store i32 3, i32* %16, align 4
  %17 = load %struct.conn*, %struct.conn** %4, align 8
  call void @conn_set_state(%struct.conn* %17, i32 8)
  %18 = call i32 @raise(i32 2) #14
  br label %37

19:                                               ; preds = %11
  %20 = load i64, i64* %6, align 8
  %21 = icmp eq i64 %20, 3
  br i1 %21, label %22, label %34

22:                                               ; preds = %19
  %23 = load %struct.iovec*, %struct.iovec** %5, align 8
  %24 = getelementptr inbounds %struct.iovec, %struct.iovec* %23, i64 1
  %25 = getelementptr inbounds %struct.iovec, %struct.iovec* %24, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = call i32 @strcmp(i8* %26, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.105.1093, i64 0, i64 0)) #16
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %34

29:                                               ; preds = %22
  %30 = load %struct.conn*, %struct.conn** %4, align 8
  %31 = getelementptr inbounds %struct.conn, %struct.conn* %30, i32 0, i32 30
  store i32 3, i32* %31, align 4
  %32 = load %struct.conn*, %struct.conn** %4, align 8
  call void @conn_set_state(%struct.conn* %32, i32 8)
  %33 = call i32 @raise(i32 10) #14
  br label %36

34:                                               ; preds = %22, %19
  %35 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %35, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.106.1094, i64 0, i64 0))
  br label %36

36:                                               ; preds = %34, %29
  br label %37

37:                                               ; preds = %9, %36, %14
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @process_slabs_command(%struct.conn* %0, %struct.iovec* %1, i64 %2) #0 {
  %4 = alloca %struct.conn*, align 8
  %5 = alloca %struct.iovec*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store %struct.conn* %0, %struct.conn** %4, align 8
  store %struct.iovec* %1, %struct.iovec** %5, align 8
  store i64 %2, i64* %6, align 8
  %10 = load i64, i64* %6, align 8
  %11 = icmp eq i64 %10, 5
  br i1 %11, label %12, label %56

12:                                               ; preds = %3
  %13 = load %struct.iovec*, %struct.iovec** %5, align 8
  %14 = getelementptr inbounds %struct.iovec, %struct.iovec* %13, i64 1
  %15 = getelementptr inbounds %struct.iovec, %struct.iovec* %14, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = call i32 @strcmp(i8* %16, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.107.1084, i64 0, i64 0)) #16
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %56

19:                                               ; preds = %12
  %20 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 31), align 1
  %21 = trunc i8 %20 to i1
  %22 = zext i1 %21 to i32
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %19
  %25 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %25, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.108.1085, i64 0, i64 0))
  br label %73

26:                                               ; preds = %19
  %27 = load %struct.iovec*, %struct.iovec** %5, align 8
  %28 = getelementptr inbounds %struct.iovec, %struct.iovec* %27, i64 2
  %29 = getelementptr inbounds %struct.iovec, %struct.iovec* %28, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = call zeroext i1 @safe_strtol(i8* %30, i32* %7)
  br i1 %31, label %32, label %38

32:                                               ; preds = %26
  %33 = load %struct.iovec*, %struct.iovec** %5, align 8
  %34 = getelementptr inbounds %struct.iovec, %struct.iovec* %33, i64 3
  %35 = getelementptr inbounds %struct.iovec, %struct.iovec* %34, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = call zeroext i1 @safe_strtol(i8* %36, i32* %8)
  br i1 %37, label %40, label %38

38:                                               ; preds = %32, %26
  %39 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %39, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.49.1040, i64 0, i64 0))
  br label %73

40:                                               ; preds = %32
  %41 = load i32, i32* %7, align 4
  %42 = load i32, i32* %8, align 4
  %43 = call i32 @slabs_reassign(i32 %41, i32 %42)
  store i32 %43, i32* %9, align 4
  %44 = load i32, i32* %9, align 4
  switch i32 %44, label %55 [
    i32 0, label %45
    i32 1, label %47
    i32 2, label %49
    i32 3, label %51
    i32 4, label %53
  ]

45:                                               ; preds = %40
  %46 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %46, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.44.976, i64 0, i64 0))
  br label %55

47:                                               ; preds = %40
  %48 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %48, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.109.1086, i64 0, i64 0))
  br label %55

49:                                               ; preds = %40
  %50 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %50, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.110.1087, i64 0, i64 0))
  br label %55

51:                                               ; preds = %40
  %52 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %52, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.111.1088, i64 0, i64 0))
  br label %55

53:                                               ; preds = %40
  %54 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %54, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.112.1089, i64 0, i64 0))
  br label %55

55:                                               ; preds = %40, %53, %51, %49, %47, %45
  br label %73

56:                                               ; preds = %12, %3
  %57 = load i64, i64* %6, align 8
  %58 = icmp uge i64 %57, 4
  br i1 %58, label %59, label %70

59:                                               ; preds = %56
  %60 = load %struct.iovec*, %struct.iovec** %5, align 8
  %61 = getelementptr inbounds %struct.iovec, %struct.iovec* %60, i64 1
  %62 = getelementptr inbounds %struct.iovec, %struct.iovec* %61, i32 0, i32 0
  %63 = load i8*, i8** %62, align 8
  %64 = call i32 @strcmp(i8* %63, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.113.1090, i64 0, i64 0)) #16
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %70

66:                                               ; preds = %59
  %67 = load %struct.conn*, %struct.conn** %4, align 8
  %68 = load %struct.iovec*, %struct.iovec** %5, align 8
  %69 = load i64, i64* %6, align 8
  call void @process_slabs_automove_command(%struct.conn* %67, %struct.iovec* %68, i64 %69)
  br label %72

70:                                               ; preds = %59, %56
  %71 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %71, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15.993, i64 0, i64 0))
  br label %72

72:                                               ; preds = %70, %66
  br label %73

73:                                               ; preds = %24, %38, %55, %72
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @process_memlimit_command(%struct.conn* %0, %struct.iovec* %1, i64 %2) #0 {
  %4 = alloca %struct.conn*, align 8
  %5 = alloca %struct.iovec*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  store %struct.conn* %0, %struct.conn** %4, align 8
  store %struct.iovec* %1, %struct.iovec** %5, align 8
  store i64 %2, i64* %6, align 8
  %8 = load %struct.conn*, %struct.conn** %4, align 8
  %9 = load %struct.iovec*, %struct.iovec** %5, align 8
  %10 = load i64, i64* %6, align 8
  %11 = call zeroext i1 @set_noreply_maybe(%struct.conn* %8, %struct.iovec* %9, i64 %10)
  %12 = load %struct.iovec*, %struct.iovec** %5, align 8
  %13 = getelementptr inbounds %struct.iovec, %struct.iovec* %12, i64 1
  %14 = getelementptr inbounds %struct.iovec, %struct.iovec* %13, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = call zeroext i1 @safe_strtoul(i8* %15, i32* %7)
  br i1 %16, label %19, label %17

17:                                               ; preds = %3
  %18 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %18, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15.993, i64 0, i64 0))
  br label %50

19:                                               ; preds = %3
  %20 = load i32, i32* %7, align 4
  %21 = icmp ult i32 %20, 8
  br i1 %21, label %22, label %24

22:                                               ; preds = %19
  %23 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %23, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.115.1080, i64 0, i64 0))
  br label %49

24:                                               ; preds = %19
  %25 = load i32, i32* %7, align 4
  %26 = icmp ugt i32 %25, 1000000000
  br i1 %26, label %27, label %29

27:                                               ; preds = %24
  %28 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %28, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.116.1081, i64 0, i64 0))
  br label %48

29:                                               ; preds = %24
  %30 = load i32, i32* %7, align 4
  %31 = zext i32 %30 to i64
  %32 = mul i64 %31, 1024
  %33 = mul i64 %32, 1024
  %34 = call zeroext i1 @slabs_adjust_mem_limit(i64 %33)
  br i1 %34, label %35, label %45

35:                                               ; preds = %29
  %36 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %37 = icmp sgt i32 %36, 0
  br i1 %37, label %38, label %43

38:                                               ; preds = %35
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %40 = load i32, i32* %7, align 4
  %41 = zext i32 %40 to i64
  %42 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %39, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.117.1082, i64 0, i64 0), i64 %41)
  br label %43

43:                                               ; preds = %38, %35
  %44 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %44, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.44.976, i64 0, i64 0))
  br label %47

45:                                               ; preds = %29
  %46 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %46, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.118.1083, i64 0, i64 0))
  br label %47

47:                                               ; preds = %45, %43
  br label %48

48:                                               ; preds = %47, %27
  br label %49

49:                                               ; preds = %48, %22
  br label %50

50:                                               ; preds = %49, %17
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @process_arithmetic_command(%struct.conn* %0, %struct.iovec* %1, i64 %2, i1 zeroext %3) #0 {
  %5 = alloca %struct.conn*, align 8
  %6 = alloca %struct.iovec*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8, align 1
  %9 = alloca [24 x i8], align 16
  %10 = alloca i64, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  store %struct.conn* %0, %struct.conn** %5, align 8
  store %struct.iovec* %1, %struct.iovec** %6, align 8
  store i64 %2, i64* %7, align 8
  %13 = zext i1 %3 to i8
  store i8 %13, i8* %8, align 1
  %14 = load %struct.conn*, %struct.conn** %5, align 8
  %15 = load %struct.iovec*, %struct.iovec** %6, align 8
  %16 = load i64, i64* %7, align 8
  %17 = call zeroext i1 @set_noreply_maybe(%struct.conn* %14, %struct.iovec* %15, i64 %16)
  %18 = load %struct.iovec*, %struct.iovec** %6, align 8
  %19 = getelementptr inbounds %struct.iovec, %struct.iovec* %18, i64 1
  %20 = getelementptr inbounds %struct.iovec, %struct.iovec* %19, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = icmp ugt i64 %21, 250
  br i1 %22, label %23, label %25

23:                                               ; preds = %4
  %24 = load %struct.conn*, %struct.conn** %5, align 8
  call void @out_string(%struct.conn* %24, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.49.1040, i64 0, i64 0))
  br label %91

25:                                               ; preds = %4
  %26 = load %struct.iovec*, %struct.iovec** %6, align 8
  %27 = getelementptr inbounds %struct.iovec, %struct.iovec* %26, i64 1
  %28 = getelementptr inbounds %struct.iovec, %struct.iovec* %27, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  store i8* %29, i8** %11, align 8
  %30 = load %struct.iovec*, %struct.iovec** %6, align 8
  %31 = getelementptr inbounds %struct.iovec, %struct.iovec* %30, i64 1
  %32 = getelementptr inbounds %struct.iovec, %struct.iovec* %31, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  store i64 %33, i64* %12, align 8
  %34 = load %struct.iovec*, %struct.iovec** %6, align 8
  %35 = getelementptr inbounds %struct.iovec, %struct.iovec* %34, i64 2
  %36 = getelementptr inbounds %struct.iovec, %struct.iovec* %35, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = call zeroext i1 @safe_strtoull(i8* %37, i64* %10)
  br i1 %38, label %41, label %39

39:                                               ; preds = %25
  %40 = load %struct.conn*, %struct.conn** %5, align 8
  call void @out_string(%struct.conn* %40, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.119.1077, i64 0, i64 0))
  br label %91

41:                                               ; preds = %25
  %42 = load %struct.conn*, %struct.conn** %5, align 8
  %43 = load i8*, i8** %11, align 8
  %44 = load i64, i64* %12, align 8
  %45 = load i8, i8* %8, align 1
  %46 = trunc i8 %45 to i1
  %47 = load i64, i64* %10, align 8
  %48 = getelementptr inbounds [24 x i8], [24 x i8]* %9, i64 0, i64 0
  %49 = call i32 @add_delta(%struct.conn* %42, i8* %43, i64 %44, i1 zeroext %46, i64 %47, i8* %48, i64* null)
  switch i32 %49, label %91 [
    i32 0, label %50
    i32 1, label %53
    i32 2, label %55
    i32 3, label %57
    i32 4, label %90
  ]

50:                                               ; preds = %41
  %51 = load %struct.conn*, %struct.conn** %5, align 8
  %52 = getelementptr inbounds [24 x i8], [24 x i8]* %9, i64 0, i64 0
  call void @out_string(%struct.conn* %51, i8* %52)
  br label %91

53:                                               ; preds = %41
  %54 = load %struct.conn*, %struct.conn** %5, align 8
  call void @out_string(%struct.conn* %54, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.72.1078, i64 0, i64 0))
  br label %91

55:                                               ; preds = %41
  %56 = load %struct.conn*, %struct.conn** %5, align 8
  call void @out_of_memory(%struct.conn* %56, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.73.1079, i64 0, i64 0))
  br label %91

57:                                               ; preds = %41
  %58 = load %struct.conn*, %struct.conn** %5, align 8
  %59 = getelementptr inbounds %struct.conn, %struct.conn* %58, i32 0, i32 42
  %60 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %59, align 8
  %61 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %60, i32 0, i32 4
  %62 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %61, i32 0, i32 0
  %63 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %62) #14
  %64 = load i8, i8* %8, align 1
  %65 = trunc i8 %64 to i1
  br i1 %65, label %66, label %74

66:                                               ; preds = %57
  %67 = load %struct.conn*, %struct.conn** %5, align 8
  %68 = getelementptr inbounds %struct.conn, %struct.conn* %67, i32 0, i32 42
  %69 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %68, align 8
  %70 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %69, i32 0, i32 4
  %71 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %70, i32 0, i32 8
  %72 = load i64, i64* %71, align 8
  %73 = add i64 %72, 1
  store i64 %73, i64* %71, align 8
  br label %82

74:                                               ; preds = %57
  %75 = load %struct.conn*, %struct.conn** %5, align 8
  %76 = getelementptr inbounds %struct.conn, %struct.conn* %75, i32 0, i32 42
  %77 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %76, align 8
  %78 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %77, i32 0, i32 4
  %79 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %78, i32 0, i32 9
  %80 = load i64, i64* %79, align 8
  %81 = add i64 %80, 1
  store i64 %81, i64* %79, align 8
  br label %82

82:                                               ; preds = %74, %66
  %83 = load %struct.conn*, %struct.conn** %5, align 8
  %84 = getelementptr inbounds %struct.conn, %struct.conn* %83, i32 0, i32 42
  %85 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %84, align 8
  %86 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %85, i32 0, i32 4
  %87 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %86, i32 0, i32 0
  %88 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %87) #14
  %89 = load %struct.conn*, %struct.conn** %5, align 8
  call void @out_string(%struct.conn* %89, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.973, i64 0, i64 0))
  br label %91

90:                                               ; preds = %41
  br label %91

91:                                               ; preds = %23, %39, %41, %90, %82, %55, %53, %50
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @process_delete_command(%struct.conn* %0, %struct.iovec* %1, i64 %2) #0 {
  %4 = alloca %struct.conn*, align 8
  %5 = alloca %struct.iovec*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca %struct._stritem*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i8, align 1
  %12 = alloca i8, align 1
  %13 = alloca i8, align 1
  store %struct.conn* %0, %struct.conn** %4, align 8
  store %struct.iovec* %1, %struct.iovec** %5, align 8
  store i64 %2, i64* %6, align 8
  %14 = load i64, i64* %6, align 8
  %15 = icmp ugt i64 %14, 3
  br i1 %15, label %16, label %56

16:                                               ; preds = %3
  %17 = load %struct.iovec*, %struct.iovec** %5, align 8
  %18 = getelementptr inbounds %struct.iovec, %struct.iovec* %17, i64 2
  %19 = getelementptr inbounds %struct.iovec, %struct.iovec* %18, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = call i32 @strcmp(i8* %20, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.120.1074, i64 0, i64 0)) #16
  %22 = icmp eq i32 %21, 0
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %11, align 1
  %24 = load %struct.conn*, %struct.conn** %4, align 8
  %25 = load %struct.iovec*, %struct.iovec** %5, align 8
  %26 = load i64, i64* %6, align 8
  %27 = call zeroext i1 @set_noreply_maybe(%struct.conn* %24, %struct.iovec* %25, i64 %26)
  %28 = zext i1 %27 to i8
  store i8 %28, i8* %12, align 1
  %29 = load i64, i64* %6, align 8
  %30 = icmp eq i64 %29, 4
  br i1 %30, label %31, label %37

31:                                               ; preds = %16
  %32 = load i8, i8* %11, align 1
  %33 = trunc i8 %32 to i1
  br i1 %33, label %48, label %34

34:                                               ; preds = %31
  %35 = load i8, i8* %12, align 1
  %36 = trunc i8 %35 to i1
  br i1 %36, label %48, label %37

37:                                               ; preds = %34, %16
  %38 = load i64, i64* %6, align 8
  %39 = icmp eq i64 %38, 5
  br i1 %39, label %40, label %46

40:                                               ; preds = %37
  %41 = load i8, i8* %11, align 1
  %42 = trunc i8 %41 to i1
  br i1 %42, label %43, label %46

43:                                               ; preds = %40
  %44 = load i8, i8* %12, align 1
  %45 = trunc i8 %44 to i1
  br label %46

46:                                               ; preds = %43, %40, %37
  %47 = phi i1 [ false, %40 ], [ false, %37 ], [ %45, %43 ]
  br label %48

48:                                               ; preds = %46, %34, %31
  %49 = phi i1 [ true, %34 ], [ true, %31 ], [ %47, %46 ]
  %50 = zext i1 %49 to i8
  store i8 %50, i8* %13, align 1
  %51 = load i8, i8* %13, align 1
  %52 = trunc i8 %51 to i1
  br i1 %52, label %55, label %53

53:                                               ; preds = %48
  %54 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %54, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.121.1075, i64 0, i64 0))
  br label %145

55:                                               ; preds = %48
  br label %56

56:                                               ; preds = %55, %3
  %57 = load %struct.iovec*, %struct.iovec** %5, align 8
  %58 = getelementptr inbounds %struct.iovec, %struct.iovec* %57, i64 1
  %59 = getelementptr inbounds %struct.iovec, %struct.iovec* %58, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  store i8* %60, i8** %7, align 8
  %61 = load %struct.iovec*, %struct.iovec** %5, align 8
  %62 = getelementptr inbounds %struct.iovec, %struct.iovec* %61, i64 1
  %63 = getelementptr inbounds %struct.iovec, %struct.iovec* %62, i32 0, i32 1
  %64 = load i64, i64* %63, align 8
  store i64 %64, i64* %8, align 8
  %65 = load i64, i64* %8, align 8
  %66 = icmp ugt i64 %65, 250
  br i1 %66, label %67, label %69

67:                                               ; preds = %56
  %68 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %68, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.49.1040, i64 0, i64 0))
  br label %145

69:                                               ; preds = %56
  %70 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 17), align 8
  %71 = icmp ne i32 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %69
  %73 = load i8*, i8** %7, align 8
  %74 = load i64, i64* %8, align 8
  call void @stats_prefix_record_delete(i8* %73, i64 %74)
  br label %75

75:                                               ; preds = %72, %69
  %76 = load i8*, i8** %7, align 8
  %77 = load i64, i64* %8, align 8
  %78 = load %struct.conn*, %struct.conn** %4, align 8
  %79 = call %struct._stritem* @item_get_locked(i8* %76, i64 %77, %struct.conn* %78, i1 zeroext false, i32* %10)
  store %struct._stritem* %79, %struct._stritem** %9, align 8
  %80 = load %struct._stritem*, %struct._stritem** %9, align 8
  %81 = icmp ne %struct._stritem* %80, null
  br i1 %81, label %82, label %122

82:                                               ; preds = %75
  %83 = load %struct.conn*, %struct.conn** %4, align 8
  %84 = getelementptr inbounds %struct.conn, %struct.conn* %83, i32 0, i32 42
  %85 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %84, align 8
  %86 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %85, i32 0, i32 4
  %87 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %86, i32 0, i32 0
  %88 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %87) #14
  %89 = load %struct.conn*, %struct.conn** %4, align 8
  %90 = getelementptr inbounds %struct.conn, %struct.conn* %89, i32 0, i32 42
  %91 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %90, align 8
  %92 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %91, i32 0, i32 4
  %93 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %92, i32 0, i32 31
  %94 = load %struct._stritem*, %struct._stritem** %9, align 8
  %95 = getelementptr inbounds %struct._stritem, %struct._stritem* %94, i32 0, i32 8
  %96 = load i8, i8* %95, align 8
  %97 = zext i8 %96 to i32
  %98 = and i32 %97, -193
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds [64 x %struct.slab_stats], [64 x %struct.slab_stats]* %93, i64 0, i64 %99
  %101 = getelementptr inbounds %struct.slab_stats, %struct.slab_stats* %100, i32 0, i32 3
  %102 = load i64, i64* %101, align 8
  %103 = add i64 %102, 1
  store i64 %103, i64* %101, align 8
  %104 = load %struct.conn*, %struct.conn** %4, align 8
  %105 = getelementptr inbounds %struct.conn, %struct.conn* %104, i32 0, i32 42
  %106 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %105, align 8
  %107 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %106, i32 0, i32 4
  %108 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %107, i32 0, i32 0
  %109 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %108) #14
  %110 = load %struct._stritem*, %struct._stritem** %9, align 8
  %111 = load i32, i32* %10, align 4
  call void @do_item_unlink(%struct._stritem* %110, i32 %111)
  br label %112

112:                                              ; preds = %82
  %113 = load %struct.conn*, %struct.conn** %4, align 8
  %114 = getelementptr inbounds %struct.conn, %struct.conn* %113, i32 0, i32 42
  %115 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %114, align 8
  %116 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %115, i32 0, i32 10
  %117 = load i8*, i8** %116, align 8
  %118 = load %struct._stritem*, %struct._stritem** %9, align 8
  call void @storage_delete(i8* %117, %struct._stritem* %118)
  br label %119

119:                                              ; preds = %112
  %120 = load %struct._stritem*, %struct._stritem** %9, align 8
  call void @do_item_remove(%struct._stritem* %120)
  %121 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %121, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.122.1076, i64 0, i64 0))
  br label %143

122:                                              ; preds = %75
  %123 = load %struct.conn*, %struct.conn** %4, align 8
  %124 = getelementptr inbounds %struct.conn, %struct.conn* %123, i32 0, i32 42
  %125 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %124, align 8
  %126 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %125, i32 0, i32 4
  %127 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %126, i32 0, i32 0
  %128 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %127) #14
  %129 = load %struct.conn*, %struct.conn** %4, align 8
  %130 = getelementptr inbounds %struct.conn, %struct.conn* %129, i32 0, i32 42
  %131 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %130, align 8
  %132 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %131, i32 0, i32 4
  %133 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %132, i32 0, i32 7
  %134 = load i64, i64* %133, align 8
  %135 = add i64 %134, 1
  store i64 %135, i64* %133, align 8
  %136 = load %struct.conn*, %struct.conn** %4, align 8
  %137 = getelementptr inbounds %struct.conn, %struct.conn* %136, i32 0, i32 42
  %138 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %137, align 8
  %139 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %138, i32 0, i32 4
  %140 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %139, i32 0, i32 0
  %141 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %140) #14
  %142 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %142, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.973, i64 0, i64 0))
  br label %143

143:                                              ; preds = %122, %119
  %144 = load i32, i32* %10, align 4
  call void @item_unlock(i32 %144)
  br label %145

145:                                              ; preds = %143, %67, %53
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @process_touch_command(%struct.conn* %0, %struct.iovec* %1, i64 %2) #0 {
  %4 = alloca %struct.conn*, align 8
  %5 = alloca %struct.iovec*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct._stritem*, align 8
  store %struct.conn* %0, %struct.conn** %4, align 8
  store %struct.iovec* %1, %struct.iovec** %5, align 8
  store i64 %2, i64* %6, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 4
  %12 = load %struct.conn*, %struct.conn** %4, align 8
  %13 = load %struct.iovec*, %struct.iovec** %5, align 8
  %14 = load i64, i64* %6, align 8
  %15 = call zeroext i1 @set_noreply_maybe(%struct.conn* %12, %struct.iovec* %13, i64 %14)
  %16 = load %struct.iovec*, %struct.iovec** %5, align 8
  %17 = getelementptr inbounds %struct.iovec, %struct.iovec* %16, i64 1
  %18 = getelementptr inbounds %struct.iovec, %struct.iovec* %17, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = icmp ugt i64 %19, 250
  br i1 %20, label %21, label %23

21:                                               ; preds = %3
  %22 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %22, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.49.1040, i64 0, i64 0))
  br label %121

23:                                               ; preds = %3
  %24 = load %struct.iovec*, %struct.iovec** %5, align 8
  %25 = getelementptr inbounds %struct.iovec, %struct.iovec* %24, i64 1
  %26 = getelementptr inbounds %struct.iovec, %struct.iovec* %25, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  store i8* %27, i8** %7, align 8
  %28 = load %struct.iovec*, %struct.iovec** %5, align 8
  %29 = getelementptr inbounds %struct.iovec, %struct.iovec* %28, i64 1
  %30 = getelementptr inbounds %struct.iovec, %struct.iovec* %29, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  store i64 %31, i64* %8, align 8
  %32 = load %struct.iovec*, %struct.iovec** %5, align 8
  %33 = getelementptr inbounds %struct.iovec, %struct.iovec* %32, i64 2
  %34 = getelementptr inbounds %struct.iovec, %struct.iovec* %33, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = call zeroext i1 @safe_strtol(i8* %35, i32* %9)
  br i1 %36, label %39, label %37

37:                                               ; preds = %23
  %38 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %38, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.80.1072, i64 0, i64 0))
  br label %121

39:                                               ; preds = %23
  %40 = load i32, i32* %9, align 4
  %41 = icmp slt i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  br label %45

43:                                               ; preds = %39
  %44 = load i32, i32* %9, align 4
  br label %45

45:                                               ; preds = %43, %42
  %46 = phi i32 [ 2592001, %42 ], [ %44, %43 ]
  %47 = sext i32 %46 to i64
  %48 = call i32 @realtime(i64 %47)
  store i32 %48, i32* %10, align 4
  %49 = load i8*, i8** %7, align 8
  %50 = load i64, i64* %8, align 8
  %51 = load i32, i32* %10, align 4
  %52 = load %struct.conn*, %struct.conn** %4, align 8
  %53 = call %struct._stritem* @item_touch(i8* %49, i64 %50, i32 %51, %struct.conn* %52)
  store %struct._stritem* %53, %struct._stritem** %11, align 8
  %54 = load %struct._stritem*, %struct._stritem** %11, align 8
  %55 = icmp ne %struct._stritem* %54, null
  br i1 %55, label %56, label %93

56:                                               ; preds = %45
  %57 = load %struct.conn*, %struct.conn** %4, align 8
  %58 = getelementptr inbounds %struct.conn, %struct.conn* %57, i32 0, i32 42
  %59 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %58, align 8
  %60 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %59, i32 0, i32 4
  %61 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %60, i32 0, i32 0
  %62 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %61) #14
  %63 = load %struct.conn*, %struct.conn** %4, align 8
  %64 = getelementptr inbounds %struct.conn, %struct.conn* %63, i32 0, i32 42
  %65 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %64, align 8
  %66 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %65, i32 0, i32 4
  %67 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %66, i32 0, i32 5
  %68 = load i64, i64* %67, align 8
  %69 = add i64 %68, 1
  store i64 %69, i64* %67, align 8
  %70 = load %struct.conn*, %struct.conn** %4, align 8
  %71 = getelementptr inbounds %struct.conn, %struct.conn* %70, i32 0, i32 42
  %72 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %71, align 8
  %73 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %72, i32 0, i32 4
  %74 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %73, i32 0, i32 31
  %75 = load %struct._stritem*, %struct._stritem** %11, align 8
  %76 = getelementptr inbounds %struct._stritem, %struct._stritem* %75, i32 0, i32 8
  %77 = load i8, i8* %76, align 8
  %78 = zext i8 %77 to i32
  %79 = and i32 %78, -193
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds [64 x %struct.slab_stats], [64 x %struct.slab_stats]* %74, i64 0, i64 %80
  %82 = getelementptr inbounds %struct.slab_stats, %struct.slab_stats* %81, i32 0, i32 2
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  store i64 %84, i64* %82, align 8
  %85 = load %struct.conn*, %struct.conn** %4, align 8
  %86 = getelementptr inbounds %struct.conn, %struct.conn* %85, i32 0, i32 42
  %87 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %86, align 8
  %88 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %87, i32 0, i32 4
  %89 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %88, i32 0, i32 0
  %90 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %89) #14
  %91 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %91, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.123.1073, i64 0, i64 0))
  %92 = load %struct._stritem*, %struct._stritem** %11, align 8
  call void @item_remove(%struct._stritem* %92)
  br label %121

93:                                               ; preds = %45
  %94 = load %struct.conn*, %struct.conn** %4, align 8
  %95 = getelementptr inbounds %struct.conn, %struct.conn* %94, i32 0, i32 42
  %96 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %95, align 8
  %97 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %96, i32 0, i32 4
  %98 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %97, i32 0, i32 0
  %99 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %98) #14
  %100 = load %struct.conn*, %struct.conn** %4, align 8
  %101 = getelementptr inbounds %struct.conn, %struct.conn* %100, i32 0, i32 42
  %102 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %101, align 8
  %103 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %102, i32 0, i32 4
  %104 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %103, i32 0, i32 5
  %105 = load i64, i64* %104, align 8
  %106 = add i64 %105, 1
  store i64 %106, i64* %104, align 8
  %107 = load %struct.conn*, %struct.conn** %4, align 8
  %108 = getelementptr inbounds %struct.conn, %struct.conn* %107, i32 0, i32 42
  %109 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %108, align 8
  %110 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %109, i32 0, i32 4
  %111 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %110, i32 0, i32 6
  %112 = load i64, i64* %111, align 8
  %113 = add i64 %112, 1
  store i64 %113, i64* %111, align 8
  %114 = load %struct.conn*, %struct.conn** %4, align 8
  %115 = getelementptr inbounds %struct.conn, %struct.conn* %114, i32 0, i32 42
  %116 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %115, align 8
  %117 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %116, i32 0, i32 4
  %118 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %117, i32 0, i32 0
  %119 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %118) #14
  %120 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %120, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.973, i64 0, i64 0))
  br label %121

121:                                              ; preds = %21, %37, %93, %56
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @process_flush_all_command(%struct.conn* %0, %struct.iovec* %1, i64 %2) #0 {
  %4 = alloca %struct.conn*, align 8
  %5 = alloca %struct.iovec*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %struct.conn* %0, %struct.conn** %4, align 8
  store %struct.iovec* %1, %struct.iovec** %5, align 8
  store i64 %2, i64* %6, align 8
  store i32 0, i32* %7, align 4
  store i32 0, i32* %8, align 4
  %9 = load %struct.conn*, %struct.conn** %4, align 8
  %10 = load %struct.iovec*, %struct.iovec** %5, align 8
  %11 = load i64, i64* %6, align 8
  %12 = call zeroext i1 @set_noreply_maybe(%struct.conn* %9, %struct.iovec* %10, i64 %11)
  %13 = load %struct.conn*, %struct.conn** %4, align 8
  %14 = getelementptr inbounds %struct.conn, %struct.conn* %13, i32 0, i32 42
  %15 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %14, align 8
  %16 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %15, i32 0, i32 4
  %17 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %16, i32 0, i32 0
  %18 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %17) #14
  %19 = load %struct.conn*, %struct.conn** %4, align 8
  %20 = getelementptr inbounds %struct.conn, %struct.conn* %19, i32 0, i32 42
  %21 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %20, align 8
  %22 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %21, i32 0, i32 4
  %23 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %22, i32 0, i32 14
  %24 = load i64, i64* %23, align 8
  %25 = add i64 %24, 1
  store i64 %25, i64* %23, align 8
  %26 = load %struct.conn*, %struct.conn** %4, align 8
  %27 = getelementptr inbounds %struct.conn, %struct.conn* %26, i32 0, i32 42
  %28 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %27, align 8
  %29 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %28, i32 0, i32 4
  %30 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %29, i32 0, i32 0
  %31 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %30) #14
  %32 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 38), align 8
  %33 = trunc i8 %32 to i1
  br i1 %33, label %36, label %34

34:                                               ; preds = %3
  %35 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %35, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.124.1071, i64 0, i64 0))
  br label %80

36:                                               ; preds = %3
  %37 = load i64, i64* %6, align 8
  %38 = load %struct.conn*, %struct.conn** %4, align 8
  %39 = getelementptr inbounds %struct.conn, %struct.conn* %38, i32 0, i32 34
  %40 = load i8, i8* %39, align 4
  %41 = trunc i8 %40 to i1
  %42 = zext i1 %41 to i64
  %43 = select i1 %41, i32 3, i32 2
  %44 = sext i32 %43 to i64
  %45 = icmp ne i64 %37, %44
  br i1 %45, label %46, label %55

46:                                               ; preds = %36
  %47 = load %struct.iovec*, %struct.iovec** %5, align 8
  %48 = getelementptr inbounds %struct.iovec, %struct.iovec* %47, i64 1
  %49 = getelementptr inbounds %struct.iovec, %struct.iovec* %48, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  %51 = call zeroext i1 @safe_strtol(i8* %50, i32* %7)
  br i1 %51, label %54, label %52

52:                                               ; preds = %46
  %53 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %53, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.80.1072, i64 0, i64 0))
  br label %80

54:                                               ; preds = %46
  br label %55

55:                                               ; preds = %54, %36
  %56 = load i32, i32* %7, align 4
  %57 = icmp sgt i32 %56, 0
  br i1 %57, label %58, label %62

58:                                               ; preds = %55
  %59 = load i32, i32* %7, align 4
  %60 = sext i32 %59 to i64
  %61 = call i32 @realtime(i64 %60)
  store i32 %61, i32* %8, align 4
  br label %64

62:                                               ; preds = %55
  %63 = load volatile i32, i32* @current_time, align 4
  store i32 %63, i32* %8, align 4
  br label %64

64:                                               ; preds = %62, %58
  %65 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 19), align 8
  %66 = trunc i8 %65 to i1
  br i1 %66, label %67, label %76

67:                                               ; preds = %64
  %68 = load i32, i32* %8, align 4
  %69 = sub i32 %68, 1
  store i32 %69, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 6), align 4
  %70 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 6), align 4
  %71 = load volatile i32, i32* @current_time, align 4
  %72 = icmp ule i32 %70, %71
  br i1 %72, label %73, label %75

73:                                               ; preds = %67
  %74 = call i64 @get_cas_id()
  store i64 %74, i64* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 7), align 8
  br label %75

75:                                               ; preds = %73, %67
  br label %78

76:                                               ; preds = %64
  %77 = load i32, i32* %8, align 4
  store i32 %77, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 6), align 4
  br label %78

78:                                               ; preds = %76, %75
  %79 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %79, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.44.976, i64 0, i64 0))
  br label %80

80:                                               ; preds = %78, %52, %34
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @process_version_command(%struct.conn* %0) #0 {
  %2 = alloca %struct.conn*, align 8
  store %struct.conn* %0, %struct.conn** %2, align 8
  %3 = load %struct.conn*, %struct.conn** %2, align 8
  call void @out_string(%struct.conn* %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.125.1070, i64 0, i64 0))
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @process_quit_command(%struct.conn* %0) #0 {
  %2 = alloca %struct.conn*, align 8
  store %struct.conn* %0, %struct.conn** %2, align 8
  %3 = load %struct.conn*, %struct.conn** %2, align 8
  call void @conn_set_state(%struct.conn* %3, i32 9)
  %4 = load %struct.conn*, %struct.conn** %2, align 8
  %5 = getelementptr inbounds %struct.conn, %struct.conn* %4, i32 0, i32 6
  store i8 1, i8* %5, align 8
  %6 = load %struct.conn*, %struct.conn** %2, align 8
  %7 = getelementptr inbounds %struct.conn, %struct.conn* %6, i32 0, i32 30
  store i32 1, i32* %7, align 4
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @process_lru_crawler_command(%struct.conn* %0, %struct.iovec* %1, i64 %2) #0 {
  %4 = alloca %struct.conn*, align 8
  %5 = alloca %struct.iovec*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store %struct.conn* %0, %struct.conn** %4, align 8
  store %struct.iovec* %1, %struct.iovec** %5, align 8
  store i64 %2, i64* %6, align 8
  %11 = load i64, i64* %6, align 8
  %12 = icmp eq i64 %11, 4
  br i1 %12, label %13, label %46

13:                                               ; preds = %3
  %14 = load %struct.iovec*, %struct.iovec** %5, align 8
  %15 = getelementptr inbounds %struct.iovec, %struct.iovec* %14, i64 1
  %16 = getelementptr inbounds %struct.iovec, %struct.iovec* %15, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = call i32 @strcmp(i8* %17, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.126.1054, i64 0, i64 0)) #16
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %46

20:                                               ; preds = %13
  %21 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 28), align 2
  %22 = trunc i8 %21 to i1
  %23 = zext i1 %22 to i32
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %20
  %26 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %26, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.127.1055, i64 0, i64 0))
  br label %189

27:                                               ; preds = %20
  %28 = load %struct.iovec*, %struct.iovec** %5, align 8
  %29 = getelementptr inbounds %struct.iovec, %struct.iovec* %28, i64 2
  %30 = getelementptr inbounds %struct.iovec, %struct.iovec* %29, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 42), align 4
  %33 = call i32 @lru_crawler_crawl(i8* %31, i32 1, i8* null, i32 0, i32 %32)
  store i32 %33, i32* %7, align 4
  %34 = load i32, i32* %7, align 4
  switch i32 %34, label %45 [
    i32 0, label %35
    i32 1, label %37
    i32 2, label %39
    i32 3, label %41
    i32 4, label %43
  ]

35:                                               ; preds = %27
  %36 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %36, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.44.976, i64 0, i64 0))
  br label %45

37:                                               ; preds = %27
  %38 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %38, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.128.1056, i64 0, i64 0))
  br label %45

39:                                               ; preds = %27
  %40 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %40, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.129.1057, i64 0, i64 0))
  br label %45

41:                                               ; preds = %27
  %42 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %42, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.130.1058, i64 0, i64 0))
  br label %45

43:                                               ; preds = %27
  %44 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %44, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.131.1059, i64 0, i64 0))
  br label %45

45:                                               ; preds = %27, %43, %41, %39, %37, %35
  br label %189

46:                                               ; preds = %13, %3
  %47 = load i64, i64* %6, align 8
  %48 = icmp eq i64 %47, 4
  br i1 %48, label %49, label %99

49:                                               ; preds = %46
  %50 = load %struct.iovec*, %struct.iovec** %5, align 8
  %51 = getelementptr inbounds %struct.iovec, %struct.iovec* %50, i64 1
  %52 = getelementptr inbounds %struct.iovec, %struct.iovec* %51, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  %54 = call i32 @strcmp(i8* %53, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.132.1060, i64 0, i64 0)) #16
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %99

56:                                               ; preds = %49
  %57 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 28), align 2
  %58 = trunc i8 %57 to i1
  %59 = zext i1 %58 to i32
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %63

61:                                               ; preds = %56
  %62 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %62, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.127.1055, i64 0, i64 0))
  br label %189

63:                                               ; preds = %56
  %64 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 39), align 1
  %65 = trunc i8 %64 to i1
  br i1 %65, label %68, label %66

66:                                               ; preds = %63
  %67 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %67, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.133.1061, i64 0, i64 0))
  br label %189

68:                                               ; preds = %63
  %69 = load %struct.conn*, %struct.conn** %4, align 8
  %70 = call zeroext i1 @resp_has_stack(%struct.conn* %69)
  br i1 %70, label %71, label %73

71:                                               ; preds = %68
  %72 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %72, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.134.1062, i64 0, i64 0))
  br label %189

73:                                               ; preds = %68
  %74 = load %struct.iovec*, %struct.iovec** %5, align 8
  %75 = getelementptr inbounds %struct.iovec, %struct.iovec* %74, i64 2
  %76 = getelementptr inbounds %struct.iovec, %struct.iovec* %75, i32 0, i32 0
  %77 = load i8*, i8** %76, align 8
  %78 = load %struct.conn*, %struct.conn** %4, align 8
  %79 = bitcast %struct.conn* %78 to i8*
  %80 = load %struct.conn*, %struct.conn** %4, align 8
  %81 = getelementptr inbounds %struct.conn, %struct.conn* %80, i32 0, i32 1
  %82 = load i32, i32* %81, align 8
  %83 = call i32 @lru_crawler_crawl(i8* %77, i32 2, i8* %79, i32 %82, i32 -1)
  store i32 %83, i32* %8, align 4
  %84 = load i32, i32* %8, align 4
  switch i32 %84, label %98 [
    i32 0, label %85
    i32 1, label %90
    i32 2, label %92
    i32 3, label %94
    i32 4, label %96
  ]

85:                                               ; preds = %73
  %86 = load %struct.conn*, %struct.conn** %4, align 8
  call void @conn_set_state(%struct.conn* %86, i32 11)
  %87 = load %struct.conn*, %struct.conn** %4, align 8
  %88 = getelementptr inbounds %struct.conn, %struct.conn* %87, i32 0, i32 12
  %89 = call i32 @event_del(%struct.event* %88)
  br label %98

90:                                               ; preds = %73
  %91 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %91, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.128.1056, i64 0, i64 0))
  br label %98

92:                                               ; preds = %73
  %93 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %93, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.129.1057, i64 0, i64 0))
  br label %98

94:                                               ; preds = %73
  %95 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %95, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.130.1058, i64 0, i64 0))
  br label %98

96:                                               ; preds = %73
  %97 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %97, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.131.1059, i64 0, i64 0))
  br label %98

98:                                               ; preds = %73, %96, %94, %92, %90, %85
  br label %189

99:                                               ; preds = %49, %46
  %100 = load i64, i64* %6, align 8
  %101 = icmp eq i64 %100, 4
  br i1 %101, label %102, label %120

102:                                              ; preds = %99
  %103 = load %struct.iovec*, %struct.iovec** %5, align 8
  %104 = getelementptr inbounds %struct.iovec, %struct.iovec* %103, i64 1
  %105 = getelementptr inbounds %struct.iovec, %struct.iovec* %104, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8
  %107 = call i32 @strcmp(i8* %106, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.135.1063, i64 0, i64 0)) #16
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %120

109:                                              ; preds = %102
  %110 = load %struct.iovec*, %struct.iovec** %5, align 8
  %111 = getelementptr inbounds %struct.iovec, %struct.iovec* %110, i64 2
  %112 = getelementptr inbounds %struct.iovec, %struct.iovec* %111, i32 0, i32 0
  %113 = load i8*, i8** %112, align 8
  %114 = call zeroext i1 @safe_strtoul(i8* %113, i32* %9)
  br i1 %114, label %117, label %115

115:                                              ; preds = %109
  %116 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %116, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.49.1040, i64 0, i64 0))
  br label %189

117:                                              ; preds = %109
  %118 = load i32, i32* %9, align 4
  store i32 %118, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 42), align 4
  %119 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %119, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.44.976, i64 0, i64 0))
  br label %189

120:                                              ; preds = %102, %99
  %121 = load i64, i64* %6, align 8
  %122 = icmp eq i64 %121, 4
  br i1 %122, label %123, label %146

123:                                              ; preds = %120
  %124 = load %struct.iovec*, %struct.iovec** %5, align 8
  %125 = getelementptr inbounds %struct.iovec, %struct.iovec* %124, i64 1
  %126 = getelementptr inbounds %struct.iovec, %struct.iovec* %125, i32 0, i32 0
  %127 = load i8*, i8** %126, align 8
  %128 = call i32 @strcmp(i8* %127, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.136.1064, i64 0, i64 0)) #16
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %146

130:                                              ; preds = %123
  %131 = load %struct.iovec*, %struct.iovec** %5, align 8
  %132 = getelementptr inbounds %struct.iovec, %struct.iovec* %131, i64 2
  %133 = getelementptr inbounds %struct.iovec, %struct.iovec* %132, i32 0, i32 0
  %134 = load i8*, i8** %133, align 8
  %135 = call zeroext i1 @safe_strtoul(i8* %134, i32* %10)
  br i1 %135, label %138, label %136

136:                                              ; preds = %130
  %137 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %137, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.49.1040, i64 0, i64 0))
  br label %189

138:                                              ; preds = %130
  %139 = load i32, i32* %10, align 4
  %140 = icmp ugt i32 %139, 1000000
  br i1 %140, label %141, label %143

141:                                              ; preds = %138
  %142 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %142, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.137.1065, i64 0, i64 0))
  br label %189

143:                                              ; preds = %138
  %144 = load i32, i32* %10, align 4
  store i32 %144, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 41), align 8
  %145 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %145, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.44.976, i64 0, i64 0))
  br label %189

146:                                              ; preds = %123, %120
  %147 = load i64, i64* %6, align 8
  %148 = icmp eq i64 %147, 3
  br i1 %148, label %149, label %183

149:                                              ; preds = %146
  %150 = load %struct.iovec*, %struct.iovec** %5, align 8
  %151 = getelementptr inbounds %struct.iovec, %struct.iovec* %150, i64 1
  %152 = getelementptr inbounds %struct.iovec, %struct.iovec* %151, i32 0, i32 0
  %153 = load i8*, i8** %152, align 8
  %154 = call i32 @strcmp(i8* %153, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.138.1066, i64 0, i64 0)) #16
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %164

156:                                              ; preds = %149
  %157 = call i32 @start_item_crawler_thread()
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %161

159:                                              ; preds = %156
  %160 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %160, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.44.976, i64 0, i64 0))
  br label %163

161:                                              ; preds = %156
  %162 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %162, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.139.1067, i64 0, i64 0))
  br label %163

163:                                              ; preds = %161, %159
  br label %182

164:                                              ; preds = %149
  %165 = load %struct.iovec*, %struct.iovec** %5, align 8
  %166 = getelementptr inbounds %struct.iovec, %struct.iovec* %165, i64 1
  %167 = getelementptr inbounds %struct.iovec, %struct.iovec* %166, i32 0, i32 0
  %168 = load i8*, i8** %167, align 8
  %169 = call i32 @strcmp(i8* %168, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.140.1068, i64 0, i64 0)) #16
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %179

171:                                              ; preds = %164
  %172 = call i32 @stop_item_crawler_thread(i1 zeroext false)
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %174, label %176

174:                                              ; preds = %171
  %175 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %175, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.44.976, i64 0, i64 0))
  br label %178

176:                                              ; preds = %171
  %177 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %177, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.141.1069, i64 0, i64 0))
  br label %178

178:                                              ; preds = %176, %174
  br label %181

179:                                              ; preds = %164
  %180 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %180, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15.993, i64 0, i64 0))
  br label %181

181:                                              ; preds = %179, %178
  br label %182

182:                                              ; preds = %181, %163
  br label %189

183:                                              ; preds = %146
  %184 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %184, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15.993, i64 0, i64 0))
  br label %185

185:                                              ; preds = %183
  br label %186

186:                                              ; preds = %185
  br label %187

187:                                              ; preds = %186
  br label %188

188:                                              ; preds = %187
  br label %189

189:                                              ; preds = %25, %45, %61, %66, %71, %98, %115, %117, %136, %141, %143, %182, %188
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @process_watch_command(%struct.conn* %0, %struct.iovec* %1, i64 %2) #0 {
  %4 = alloca %struct.conn*, align 8
  %5 = alloca %struct.iovec*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i16, align 2
  %8 = alloca i32, align 4
  store %struct.conn* %0, %struct.conn** %4, align 8
  store %struct.iovec* %1, %struct.iovec** %5, align 8
  store i64 %2, i64* %6, align 8
  store i16 0, i16* %7, align 2
  %9 = load %struct.conn*, %struct.conn** %4, align 8
  %10 = load %struct.iovec*, %struct.iovec** %5, align 8
  %11 = load i64, i64* %6, align 8
  %12 = call zeroext i1 @set_noreply_maybe(%struct.conn* %9, %struct.iovec* %10, i64 %11)
  %13 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 55), align 1
  %14 = trunc i8 %13 to i1
  br i1 %14, label %17, label %15

15:                                               ; preds = %3
  %16 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %16, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.142.1041, i64 0, i64 0))
  br label %195

17:                                               ; preds = %3
  %18 = load %struct.conn*, %struct.conn** %4, align 8
  %19 = call zeroext i1 @resp_has_stack(%struct.conn* %18)
  br i1 %19, label %20, label %22

20:                                               ; preds = %17
  %21 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %21, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.143.1042, i64 0, i64 0))
  br label %195

22:                                               ; preds = %17
  %23 = load i64, i64* %6, align 8
  %24 = icmp ugt i64 %23, 2
  br i1 %24, label %25, label %173

25:                                               ; preds = %22
  store i32 1, i32* %8, align 4
  br label %26

26:                                               ; preds = %169, %25
  %27 = load i32, i32* %8, align 4
  %28 = sext i32 %27 to i64
  %29 = load i64, i64* %6, align 8
  %30 = sub i64 %29, 1
  %31 = icmp ult i64 %28, %30
  br i1 %31, label %32, label %172

32:                                               ; preds = %26
  %33 = load %struct.iovec*, %struct.iovec** %5, align 8
  %34 = load i32, i32* %8, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds %struct.iovec, %struct.iovec* %33, i64 %35
  %37 = getelementptr inbounds %struct.iovec, %struct.iovec* %36, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = call i32 @strcmp(i8* %38, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.144.1043, i64 0, i64 0)) #16
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %46

41:                                               ; preds = %32
  %42 = load i16, i16* %7, align 2
  %43 = zext i16 %42 to i32
  %44 = or i32 %43, 512
  %45 = trunc i32 %44 to i16
  store i16 %45, i16* %7, align 2
  br label %168

46:                                               ; preds = %32
  %47 = load %struct.iovec*, %struct.iovec** %5, align 8
  %48 = load i32, i32* %8, align 4
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds %struct.iovec, %struct.iovec* %47, i64 %49
  %51 = getelementptr inbounds %struct.iovec, %struct.iovec* %50, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = call i32 @strcmp(i8* %52, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.145.1044, i64 0, i64 0)) #16
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %60

55:                                               ; preds = %46
  %56 = load i16, i16* %7, align 2
  %57 = zext i16 %56 to i32
  %58 = or i32 %57, 64
  %59 = trunc i32 %58 to i16
  store i16 %59, i16* %7, align 2
  br label %167

60:                                               ; preds = %46
  %61 = load %struct.iovec*, %struct.iovec** %5, align 8
  %62 = load i32, i32* %8, align 4
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds %struct.iovec, %struct.iovec* %61, i64 %63
  %65 = getelementptr inbounds %struct.iovec, %struct.iovec* %64, i32 0, i32 0
  %66 = load i8*, i8** %65, align 8
  %67 = call i32 @strcmp(i8* %66, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.146.1045, i64 0, i64 0)) #16
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %74

69:                                               ; preds = %60
  %70 = load i16, i16* %7, align 2
  %71 = zext i16 %70 to i32
  %72 = or i32 %71, 4
  %73 = trunc i32 %72 to i16
  store i16 %73, i16* %7, align 2
  br label %166

74:                                               ; preds = %60
  %75 = load %struct.iovec*, %struct.iovec** %5, align 8
  %76 = load i32, i32* %8, align 4
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds %struct.iovec, %struct.iovec* %75, i64 %77
  %79 = getelementptr inbounds %struct.iovec, %struct.iovec* %78, i32 0, i32 0
  %80 = load i8*, i8** %79, align 8
  %81 = call i32 @strcmp(i8* %80, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.147.1046, i64 0, i64 0)) #16
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %74
  %84 = load i16, i16* %7, align 2
  %85 = zext i16 %84 to i32
  %86 = or i32 %85, 8
  %87 = trunc i32 %86 to i16
  store i16 %87, i16* %7, align 2
  br label %165

88:                                               ; preds = %74
  %89 = load %struct.iovec*, %struct.iovec** %5, align 8
  %90 = load i32, i32* %8, align 4
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds %struct.iovec, %struct.iovec* %89, i64 %91
  %93 = getelementptr inbounds %struct.iovec, %struct.iovec* %92, i32 0, i32 0
  %94 = load i8*, i8** %93, align 8
  %95 = call i32 @strcmp(i8* %94, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.148.1047, i64 0, i64 0)) #16
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %102

97:                                               ; preds = %88
  %98 = load i16, i16* %7, align 2
  %99 = zext i16 %98 to i32
  %100 = or i32 %99, 2
  %101 = trunc i32 %100 to i16
  store i16 %101, i16* %7, align 2
  br label %164

102:                                              ; preds = %88
  %103 = load %struct.iovec*, %struct.iovec** %5, align 8
  %104 = load i32, i32* %8, align 4
  %105 = sext i32 %104 to i64
  %106 = getelementptr inbounds %struct.iovec, %struct.iovec* %103, i64 %105
  %107 = getelementptr inbounds %struct.iovec, %struct.iovec* %106, i32 0, i32 0
  %108 = load i8*, i8** %107, align 8
  %109 = call i32 @strcmp(i8* %108, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.149.1048, i64 0, i64 0)) #16
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %116

111:                                              ; preds = %102
  %112 = load i16, i16* %7, align 2
  %113 = zext i16 %112 to i32
  %114 = or i32 %113, 32
  %115 = trunc i32 %114 to i16
  store i16 %115, i16* %7, align 2
  br label %163

116:                                              ; preds = %102
  %117 = load %struct.iovec*, %struct.iovec** %5, align 8
  %118 = load i32, i32* %8, align 4
  %119 = sext i32 %118 to i64
  %120 = getelementptr inbounds %struct.iovec, %struct.iovec* %117, i64 %119
  %121 = getelementptr inbounds %struct.iovec, %struct.iovec* %120, i32 0, i32 0
  %122 = load i8*, i8** %121, align 8
  %123 = call i32 @strcmp(i8* %122, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.150.1049, i64 0, i64 0)) #16
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %130

125:                                              ; preds = %116
  %126 = load i16, i16* %7, align 2
  %127 = zext i16 %126 to i32
  %128 = or i32 %127, 1024
  %129 = trunc i32 %128 to i16
  store i16 %129, i16* %7, align 2
  br label %162

130:                                              ; preds = %116
  %131 = load %struct.iovec*, %struct.iovec** %5, align 8
  %132 = load i32, i32* %8, align 4
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds %struct.iovec, %struct.iovec* %131, i64 %133
  %135 = getelementptr inbounds %struct.iovec, %struct.iovec* %134, i32 0, i32 0
  %136 = load i8*, i8** %135, align 8
  %137 = call i32 @strcmp(i8* %136, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.151.1050, i64 0, i64 0)) #16
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %144

139:                                              ; preds = %130
  %140 = load i16, i16* %7, align 2
  %141 = zext i16 %140 to i32
  %142 = or i32 %141, 2048
  %143 = trunc i32 %142 to i16
  store i16 %143, i16* %7, align 2
  br label %161

144:                                              ; preds = %130
  %145 = load %struct.iovec*, %struct.iovec** %5, align 8
  %146 = load i32, i32* %8, align 4
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds %struct.iovec, %struct.iovec* %145, i64 %147
  %149 = getelementptr inbounds %struct.iovec, %struct.iovec* %148, i32 0, i32 0
  %150 = load i8*, i8** %149, align 8
  %151 = call i32 @strcmp(i8* %150, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.152.1051, i64 0, i64 0)) #16
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %158

153:                                              ; preds = %144
  %154 = load i16, i16* %7, align 2
  %155 = zext i16 %154 to i32
  %156 = or i32 %155, 4096
  %157 = trunc i32 %156 to i16
  store i16 %157, i16* %7, align 2
  br label %160

158:                                              ; preds = %144
  %159 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %159, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15.993, i64 0, i64 0))
  br label %195

160:                                              ; preds = %153
  br label %161

161:                                              ; preds = %160, %139
  br label %162

162:                                              ; preds = %161, %125
  br label %163

163:                                              ; preds = %162, %111
  br label %164

164:                                              ; preds = %163, %97
  br label %165

165:                                              ; preds = %164, %83
  br label %166

166:                                              ; preds = %165, %69
  br label %167

167:                                              ; preds = %166, %55
  br label %168

168:                                              ; preds = %167, %41
  br label %169

169:                                              ; preds = %168
  %170 = load i32, i32* %8, align 4
  %171 = add nsw i32 %170, 1
  store i32 %171, i32* %8, align 4
  br label %26, !llvm.loop !170

172:                                              ; preds = %26
  br label %178

173:                                              ; preds = %22
  %174 = load i16, i16* %7, align 2
  %175 = zext i16 %174 to i32
  %176 = or i32 %175, 4
  %177 = trunc i32 %176 to i16
  store i16 %177, i16* %7, align 2
  br label %178

178:                                              ; preds = %173, %172
  %179 = load %struct.conn*, %struct.conn** %4, align 8
  %180 = bitcast %struct.conn* %179 to i8*
  %181 = load %struct.conn*, %struct.conn** %4, align 8
  %182 = getelementptr inbounds %struct.conn, %struct.conn* %181, i32 0, i32 1
  %183 = load i32, i32* %182, align 8
  %184 = load i16, i16* %7, align 2
  %185 = call i32 @logger_add_watcher(i8* %180, i32 %183, i16 zeroext %184)
  switch i32 %185, label %195 [
    i32 0, label %186
    i32 2, label %188
    i32 1, label %190
  ]

186:                                              ; preds = %178
  %187 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %187, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.153.1052, i64 0, i64 0))
  br label %195

188:                                              ; preds = %178
  %189 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %189, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.154.1053, i64 0, i64 0))
  br label %195

190:                                              ; preds = %178
  %191 = load %struct.conn*, %struct.conn** %4, align 8
  call void @conn_set_state(%struct.conn* %191, i32 11)
  %192 = load %struct.conn*, %struct.conn** %4, align 8
  %193 = getelementptr inbounds %struct.conn, %struct.conn* %192, i32 0, i32 12
  %194 = call i32 @event_del(%struct.event* %193)
  br label %195

195:                                              ; preds = %15, %20, %158, %178, %190, %188, %186
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @process_verbosity_command(%struct.conn* %0, %struct.iovec* %1, i64 %2) #0 {
  %4 = alloca %struct.conn*, align 8
  %5 = alloca %struct.iovec*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  store %struct.conn* %0, %struct.conn** %4, align 8
  store %struct.iovec* %1, %struct.iovec** %5, align 8
  store i64 %2, i64* %6, align 8
  %8 = load %struct.conn*, %struct.conn** %4, align 8
  %9 = load %struct.iovec*, %struct.iovec** %5, align 8
  %10 = load i64, i64* %6, align 8
  %11 = call zeroext i1 @set_noreply_maybe(%struct.conn* %8, %struct.iovec* %9, i64 %10)
  %12 = load %struct.iovec*, %struct.iovec** %5, align 8
  %13 = getelementptr inbounds %struct.iovec, %struct.iovec* %12, i64 1
  %14 = getelementptr inbounds %struct.iovec, %struct.iovec* %13, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = call zeroext i1 @safe_strtoul(i8* %15, i32* %7)
  br i1 %16, label %19, label %17

17:                                               ; preds = %3
  %18 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %18, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.49.1040, i64 0, i64 0))
  br label %28

19:                                               ; preds = %3
  %20 = load i32, i32* %7, align 4
  %21 = icmp ugt i32 %20, 2
  br i1 %21, label %22, label %23

22:                                               ; preds = %19
  br label %25

23:                                               ; preds = %19
  %24 = load i32, i32* %7, align 4
  br label %25

25:                                               ; preds = %23, %22
  %26 = phi i32 [ 2, %22 ], [ %24, %23 ]
  store i32 %26, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %27 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %27, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.44.976, i64 0, i64 0))
  br label %28

28:                                               ; preds = %25, %17
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @process_lru_command(%struct.conn* %0, %struct.iovec* %1, i64 %2) #0 {
  %4 = alloca %struct.conn*, align 8
  %5 = alloca %struct.iovec*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca double, align 8
  %10 = alloca i32, align 4
  %11 = alloca double, align 8
  store %struct.conn* %0, %struct.conn** %4, align 8
  store %struct.iovec* %1, %struct.iovec** %5, align 8
  store i64 %2, i64* %6, align 8
  %12 = load %struct.conn*, %struct.conn** %4, align 8
  %13 = load %struct.iovec*, %struct.iovec** %5, align 8
  %14 = load i64, i64* %6, align 8
  %15 = call zeroext i1 @set_noreply_maybe(%struct.conn* %12, %struct.iovec* %13, i64 %14)
  %16 = load %struct.iovec*, %struct.iovec** %5, align 8
  %17 = getelementptr inbounds %struct.iovec, %struct.iovec* %16, i64 1
  %18 = getelementptr inbounds %struct.iovec, %struct.iovec* %17, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = call i32 @strcmp(i8* %19, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.155.1033, i64 0, i64 0)) #16
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %75

22:                                               ; preds = %3
  %23 = load i64, i64* %6, align 8
  %24 = icmp uge i64 %23, 7
  br i1 %24, label %25, label %75

25:                                               ; preds = %22
  %26 = load %struct.iovec*, %struct.iovec** %5, align 8
  %27 = getelementptr inbounds %struct.iovec, %struct.iovec* %26, i64 2
  %28 = getelementptr inbounds %struct.iovec, %struct.iovec* %27, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = call zeroext i1 @safe_strtoul(i8* %29, i32* %7)
  br i1 %30, label %31, label %49

31:                                               ; preds = %25
  %32 = load %struct.iovec*, %struct.iovec** %5, align 8
  %33 = getelementptr inbounds %struct.iovec, %struct.iovec* %32, i64 3
  %34 = getelementptr inbounds %struct.iovec, %struct.iovec* %33, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = call zeroext i1 @safe_strtoul(i8* %35, i32* %8)
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = load %struct.iovec*, %struct.iovec** %5, align 8
  %39 = getelementptr inbounds %struct.iovec, %struct.iovec* %38, i64 4
  %40 = getelementptr inbounds %struct.iovec, %struct.iovec* %39, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8
  %42 = call zeroext i1 @safe_strtod(i8* %41, double* %9)
  br i1 %42, label %43, label %49

43:                                               ; preds = %37
  %44 = load %struct.iovec*, %struct.iovec** %5, align 8
  %45 = getelementptr inbounds %struct.iovec, %struct.iovec* %44, i64 5
  %46 = getelementptr inbounds %struct.iovec, %struct.iovec* %45, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = call zeroext i1 @safe_strtod(i8* %47, double* %11)
  br i1 %48, label %51, label %49

49:                                               ; preds = %43, %37, %31, %25
  %50 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %50, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15.993, i64 0, i64 0))
  br label %74

51:                                               ; preds = %43
  %52 = load i32, i32* %7, align 4
  %53 = load i32, i32* %8, align 4
  %54 = add i32 %52, %53
  %55 = icmp ugt i32 %54, 80
  br i1 %55, label %56, label %58

56:                                               ; preds = %51
  %57 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %57, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.156.1034, i64 0, i64 0))
  br label %73

58:                                               ; preds = %51
  %59 = load double, double* %11, align 8
  %60 = fcmp ole double %59, 0.000000e+00
  br i1 %60, label %64, label %61

61:                                               ; preds = %58
  %62 = load double, double* %9, align 8
  %63 = fcmp ole double %62, 0.000000e+00
  br i1 %63, label %64, label %66

64:                                               ; preds = %61, %58
  %65 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %65, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.157.1035, i64 0, i64 0))
  br label %72

66:                                               ; preds = %61
  %67 = load i32, i32* %7, align 4
  store i32 %67, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 43), align 8
  %68 = load i32, i32* %8, align 4
  store i32 %68, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 44), align 4
  %69 = load double, double* %9, align 8
  store double %69, double* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 45), align 8
  %70 = load double, double* %11, align 8
  store double %70, double* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 46), align 8
  %71 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %71, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.44.976, i64 0, i64 0))
  br label %72

72:                                               ; preds = %66, %64
  br label %73

73:                                               ; preds = %72, %56
  br label %74

74:                                               ; preds = %73, %49
  br label %144

75:                                               ; preds = %22, %3
  %76 = load %struct.iovec*, %struct.iovec** %5, align 8
  %77 = getelementptr inbounds %struct.iovec, %struct.iovec* %76, i64 1
  %78 = getelementptr inbounds %struct.iovec, %struct.iovec* %77, i32 0, i32 0
  %79 = load i8*, i8** %78, align 8
  %80 = call i32 @strcmp(i8* %79, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.158.1036, i64 0, i64 0)) #16
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %110

82:                                               ; preds = %75
  %83 = load i64, i64* %6, align 8
  %84 = icmp uge i64 %83, 4
  br i1 %84, label %85, label %110

85:                                               ; preds = %82
  %86 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 29), align 1
  %87 = trunc i8 %86 to i1
  br i1 %87, label %88, label %110

88:                                               ; preds = %85
  %89 = load %struct.iovec*, %struct.iovec** %5, align 8
  %90 = getelementptr inbounds %struct.iovec, %struct.iovec* %89, i64 2
  %91 = getelementptr inbounds %struct.iovec, %struct.iovec* %90, i32 0, i32 0
  %92 = load i8*, i8** %91, align 8
  %93 = call i32 @strcmp(i8* %92, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.159.1037, i64 0, i64 0)) #16
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %97

95:                                               ; preds = %88
  store i8 0, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 30), align 8
  %96 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %96, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.44.976, i64 0, i64 0))
  br label %109

97:                                               ; preds = %88
  %98 = load %struct.iovec*, %struct.iovec** %5, align 8
  %99 = getelementptr inbounds %struct.iovec, %struct.iovec* %98, i64 2
  %100 = getelementptr inbounds %struct.iovec, %struct.iovec* %99, i32 0, i32 0
  %101 = load i8*, i8** %100, align 8
  %102 = call i32 @strcmp(i8* %101, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.160.1038, i64 0, i64 0)) #16
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %106

104:                                              ; preds = %97
  store i8 1, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 30), align 8
  %105 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %105, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.44.976, i64 0, i64 0))
  br label %108

106:                                              ; preds = %97
  %107 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %107, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15.993, i64 0, i64 0))
  br label %108

108:                                              ; preds = %106, %104
  br label %109

109:                                              ; preds = %108, %95
  br label %143

110:                                              ; preds = %85, %82, %75
  %111 = load %struct.iovec*, %struct.iovec** %5, align 8
  %112 = getelementptr inbounds %struct.iovec, %struct.iovec* %111, i64 1
  %113 = getelementptr inbounds %struct.iovec, %struct.iovec* %112, i32 0, i32 0
  %114 = load i8*, i8** %113, align 8
  %115 = call i32 @strcmp(i8* %114, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.161.1039, i64 0, i64 0)) #16
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %140

117:                                              ; preds = %110
  %118 = load i64, i64* %6, align 8
  %119 = icmp uge i64 %118, 4
  br i1 %119, label %120, label %140

120:                                              ; preds = %117
  %121 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 29), align 1
  %122 = trunc i8 %121 to i1
  br i1 %122, label %123, label %140

123:                                              ; preds = %120
  %124 = load %struct.iovec*, %struct.iovec** %5, align 8
  %125 = getelementptr inbounds %struct.iovec, %struct.iovec* %124, i64 2
  %126 = getelementptr inbounds %struct.iovec, %struct.iovec* %125, i32 0, i32 0
  %127 = load i8*, i8** %126, align 8
  %128 = call zeroext i1 @safe_strtol(i8* %127, i32* %10)
  br i1 %128, label %131, label %129

129:                                              ; preds = %123
  %130 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %130, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15.993, i64 0, i64 0))
  br label %139

131:                                              ; preds = %123
  %132 = load i32, i32* %10, align 4
  %133 = icmp slt i32 %132, 0
  br i1 %133, label %134, label %135

134:                                              ; preds = %131
  store i8 0, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 48), align 4
  br label %137

135:                                              ; preds = %131
  store i8 1, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 48), align 4
  %136 = load i32, i32* %10, align 4
  store i32 %136, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 49), align 8
  br label %137

137:                                              ; preds = %135, %134
  %138 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %138, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.44.976, i64 0, i64 0))
  br label %139

139:                                              ; preds = %137, %129
  br label %142

140:                                              ; preds = %120, %117, %110
  %141 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %141, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15.993, i64 0, i64 0))
  br label %142

142:                                              ; preds = %140, %139
  br label %143

143:                                              ; preds = %142, %109
  br label %144

144:                                              ; preds = %143, %74
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @process_extstore_command(%struct.conn* %0, %struct.iovec* %1, i64 %2) #0 {
  %4 = alloca %struct.conn*, align 8
  %5 = alloca %struct.iovec*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8, align 1
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store %struct.conn* %0, %struct.conn** %4, align 8
  store %struct.iovec* %1, %struct.iovec** %5, align 8
  store i64 %2, i64* %6, align 8
  %11 = load %struct.conn*, %struct.conn** %4, align 8
  %12 = load %struct.iovec*, %struct.iovec** %5, align 8
  %13 = load i64, i64* %6, align 8
  %14 = call zeroext i1 @set_noreply_maybe(%struct.conn* %11, %struct.iovec* %12, i64 %13)
  store i8 1, i8* %7, align 1
  %15 = load i64, i64* %6, align 8
  %16 = icmp ult i64 %15, 4
  br i1 %16, label %17, label %18

17:                                               ; preds = %3
  store i8 0, i8* %7, align 1
  br label %205

18:                                               ; preds = %3
  %19 = load %struct.iovec*, %struct.iovec** %5, align 8
  %20 = getelementptr inbounds %struct.iovec, %struct.iovec* %19, i64 1
  %21 = getelementptr inbounds %struct.iovec, %struct.iovec* %20, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = call i32 @strcmp(i8* %22, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.162.1022, i64 0, i64 0)) #16
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %52

25:                                               ; preds = %18
  %26 = load i64, i64* %6, align 8
  %27 = icmp ugt i64 %26, 4
  br i1 %27, label %28, label %52

28:                                               ; preds = %25
  store i32 0, i32* %8, align 4
  store i32 0, i32* %9, align 4
  %29 = load %struct.iovec*, %struct.iovec** %5, align 8
  %30 = getelementptr inbounds %struct.iovec, %struct.iovec* %29, i64 2
  %31 = getelementptr inbounds %struct.iovec, %struct.iovec* %30, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = call zeroext i1 @safe_strtoul(i8* %32, i32* %8)
  br i1 %33, label %34, label %40

34:                                               ; preds = %28
  %35 = load %struct.iovec*, %struct.iovec** %5, align 8
  %36 = getelementptr inbounds %struct.iovec, %struct.iovec* %35, i64 3
  %37 = getelementptr inbounds %struct.iovec, %struct.iovec* %36, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = call zeroext i1 @safe_strtoul(i8* %38, i32* %9)
  br i1 %39, label %41, label %40

40:                                               ; preds = %34, %28
  store i8 0, i8* %7, align 1
  br label %51

41:                                               ; preds = %34
  %42 = load i32, i32* %8, align 4
  %43 = icmp ult i32 %42, 64
  br i1 %43, label %44, label %49

44:                                               ; preds = %41
  %45 = load i32, i32* %9, align 4
  %46 = load i32, i32* %8, align 4
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 71), i64 0, i64 %47
  store i32 %45, i32* %48, align 4
  br label %50

49:                                               ; preds = %41
  store i8 0, i8* %7, align 1
  br label %50

50:                                               ; preds = %49, %44
  br label %51

51:                                               ; preds = %50, %40
  br label %204

52:                                               ; preds = %25, %18
  %53 = load %struct.iovec*, %struct.iovec** %5, align 8
  %54 = getelementptr inbounds %struct.iovec, %struct.iovec* %53, i64 1
  %55 = getelementptr inbounds %struct.iovec, %struct.iovec* %54, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8
  %57 = call i32 @strcmp(i8* %56, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.163.1023, i64 0, i64 0)) #16
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %67

59:                                               ; preds = %52
  %60 = load %struct.iovec*, %struct.iovec** %5, align 8
  %61 = getelementptr inbounds %struct.iovec, %struct.iovec* %60, i64 2
  %62 = getelementptr inbounds %struct.iovec, %struct.iovec* %61, i32 0, i32 0
  %63 = load i8*, i8** %62, align 8
  %64 = call zeroext i1 @safe_strtoul(i8* %63, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 60))
  br i1 %64, label %66, label %65

65:                                               ; preds = %59
  store i8 0, i8* %7, align 1
  br label %66

66:                                               ; preds = %65, %59
  br label %203

67:                                               ; preds = %52
  %68 = load %struct.iovec*, %struct.iovec** %5, align 8
  %69 = getelementptr inbounds %struct.iovec, %struct.iovec* %68, i64 1
  %70 = getelementptr inbounds %struct.iovec, %struct.iovec* %69, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  %72 = call i32 @strcmp(i8* %71, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.164.1024, i64 0, i64 0)) #16
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %82

74:                                               ; preds = %67
  %75 = load %struct.iovec*, %struct.iovec** %5, align 8
  %76 = getelementptr inbounds %struct.iovec, %struct.iovec* %75, i64 2
  %77 = getelementptr inbounds %struct.iovec, %struct.iovec* %76, i32 0, i32 0
  %78 = load i8*, i8** %77, align 8
  %79 = call zeroext i1 @safe_strtoul(i8* %78, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 61))
  br i1 %79, label %81, label %80

80:                                               ; preds = %74
  store i8 0, i8* %7, align 1
  br label %81

81:                                               ; preds = %80, %74
  br label %202

82:                                               ; preds = %67
  %83 = load %struct.iovec*, %struct.iovec** %5, align 8
  %84 = getelementptr inbounds %struct.iovec, %struct.iovec* %83, i64 1
  %85 = getelementptr inbounds %struct.iovec, %struct.iovec* %84, i32 0, i32 0
  %86 = load i8*, i8** %85, align 8
  %87 = call i32 @strcmp(i8* %86, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.165.1025, i64 0, i64 0)) #16
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %97

89:                                               ; preds = %82
  %90 = load %struct.iovec*, %struct.iovec** %5, align 8
  %91 = getelementptr inbounds %struct.iovec, %struct.iovec* %90, i64 2
  %92 = getelementptr inbounds %struct.iovec, %struct.iovec* %91, i32 0, i32 0
  %93 = load i8*, i8** %92, align 8
  %94 = call zeroext i1 @safe_strtoul(i8* %93, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 62))
  br i1 %94, label %96, label %95

95:                                               ; preds = %89
  store i8 0, i8* %7, align 1
  br label %96

96:                                               ; preds = %95, %89
  br label %201

97:                                               ; preds = %82
  %98 = load %struct.iovec*, %struct.iovec** %5, align 8
  %99 = getelementptr inbounds %struct.iovec, %struct.iovec* %98, i64 1
  %100 = getelementptr inbounds %struct.iovec, %struct.iovec* %99, i32 0, i32 0
  %101 = load i8*, i8** %100, align 8
  %102 = call i32 @strcmp(i8* %101, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.166.1026, i64 0, i64 0)) #16
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %112

104:                                              ; preds = %97
  %105 = load %struct.iovec*, %struct.iovec** %5, align 8
  %106 = getelementptr inbounds %struct.iovec, %struct.iovec* %105, i64 2
  %107 = getelementptr inbounds %struct.iovec, %struct.iovec* %106, i32 0, i32 0
  %108 = load i8*, i8** %107, align 8
  %109 = call zeroext i1 @safe_strtoul(i8* %108, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 63))
  br i1 %109, label %111, label %110

110:                                              ; preds = %104
  store i8 0, i8* %7, align 1
  br label %111

111:                                              ; preds = %110, %104
  br label %200

112:                                              ; preds = %97
  %113 = load %struct.iovec*, %struct.iovec** %5, align 8
  %114 = getelementptr inbounds %struct.iovec, %struct.iovec* %113, i64 1
  %115 = getelementptr inbounds %struct.iovec, %struct.iovec* %114, i32 0, i32 0
  %116 = load i8*, i8** %115, align 8
  %117 = call i32 @strcmp(i8* %116, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.167.1027, i64 0, i64 0)) #16
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %127

119:                                              ; preds = %112
  %120 = load %struct.iovec*, %struct.iovec** %5, align 8
  %121 = getelementptr inbounds %struct.iovec, %struct.iovec* %120, i64 2
  %122 = getelementptr inbounds %struct.iovec, %struct.iovec* %121, i32 0, i32 0
  %123 = load i8*, i8** %122, align 8
  %124 = call zeroext i1 @safe_strtoul(i8* %123, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 65))
  br i1 %124, label %126, label %125

125:                                              ; preds = %119
  store i8 0, i8* %7, align 1
  br label %126

126:                                              ; preds = %125, %119
  br label %199

127:                                              ; preds = %112
  %128 = load %struct.iovec*, %struct.iovec** %5, align 8
  %129 = getelementptr inbounds %struct.iovec, %struct.iovec* %128, i64 1
  %130 = getelementptr inbounds %struct.iovec, %struct.iovec* %129, i32 0, i32 0
  %131 = load i8*, i8** %130, align 8
  %132 = call i32 @strcmp(i8* %131, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.168.1028, i64 0, i64 0)) #16
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %142

134:                                              ; preds = %127
  %135 = load %struct.iovec*, %struct.iovec** %5, align 8
  %136 = getelementptr inbounds %struct.iovec, %struct.iovec* %135, i64 2
  %137 = getelementptr inbounds %struct.iovec, %struct.iovec* %136, i32 0, i32 0
  %138 = load i8*, i8** %137, align 8
  %139 = call zeroext i1 @safe_strtoul(i8* %138, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 66))
  br i1 %139, label %141, label %140

140:                                              ; preds = %134
  store i8 0, i8* %7, align 1
  br label %141

141:                                              ; preds = %140, %134
  br label %198

142:                                              ; preds = %127
  %143 = load %struct.iovec*, %struct.iovec** %5, align 8
  %144 = getelementptr inbounds %struct.iovec, %struct.iovec* %143, i64 1
  %145 = getelementptr inbounds %struct.iovec, %struct.iovec* %144, i32 0, i32 0
  %146 = load i8*, i8** %145, align 8
  %147 = call i32 @strcmp(i8* %146, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.169.1029, i64 0, i64 0)) #16
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %157

149:                                              ; preds = %142
  %150 = load %struct.iovec*, %struct.iovec** %5, align 8
  %151 = getelementptr inbounds %struct.iovec, %struct.iovec* %150, i64 2
  %152 = getelementptr inbounds %struct.iovec, %struct.iovec* %151, i32 0, i32 0
  %153 = load i8*, i8** %152, align 8
  %154 = call zeroext i1 @safe_strtoul(i8* %153, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 67))
  br i1 %154, label %156, label %155

155:                                              ; preds = %149
  store i8 0, i8* %7, align 1
  br label %156

156:                                              ; preds = %155, %149
  br label %197

157:                                              ; preds = %142
  %158 = load %struct.iovec*, %struct.iovec** %5, align 8
  %159 = getelementptr inbounds %struct.iovec, %struct.iovec* %158, i64 1
  %160 = getelementptr inbounds %struct.iovec, %struct.iovec* %159, i32 0, i32 0
  %161 = load i8*, i8** %160, align 8
  %162 = call i32 @strcmp(i8* %161, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.170.1030, i64 0, i64 0)) #16
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %164, label %172

164:                                              ; preds = %157
  %165 = load %struct.iovec*, %struct.iovec** %5, align 8
  %166 = getelementptr inbounds %struct.iovec, %struct.iovec* %165, i64 2
  %167 = getelementptr inbounds %struct.iovec, %struct.iovec* %166, i32 0, i32 0
  %168 = load i8*, i8** %167, align 8
  %169 = call zeroext i1 @safe_strtod(i8* %168, double* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 68))
  br i1 %169, label %171, label %170

170:                                              ; preds = %164
  store i8 0, i8* %7, align 1
  br label %171

171:                                              ; preds = %170, %164
  br label %196

172:                                              ; preds = %157
  %173 = load %struct.iovec*, %struct.iovec** %5, align 8
  %174 = getelementptr inbounds %struct.iovec, %struct.iovec* %173, i64 1
  %175 = getelementptr inbounds %struct.iovec, %struct.iovec* %174, i32 0, i32 0
  %176 = load i8*, i8** %175, align 8
  %177 = call i32 @strcmp(i8* %176, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.171.1031, i64 0, i64 0)) #16
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %194

179:                                              ; preds = %172
  %180 = load %struct.iovec*, %struct.iovec** %5, align 8
  %181 = getelementptr inbounds %struct.iovec, %struct.iovec* %180, i64 2
  %182 = getelementptr inbounds %struct.iovec, %struct.iovec* %181, i32 0, i32 0
  %183 = load i8*, i8** %182, align 8
  %184 = call zeroext i1 @safe_strtoul(i8* %183, i32* %10)
  br i1 %184, label %186, label %185

185:                                              ; preds = %179
  store i8 0, i8* %7, align 1
  br label %193

186:                                              ; preds = %179
  %187 = load i32, i32* %10, align 4
  %188 = icmp eq i32 %187, 0
  %189 = zext i1 %188 to i64
  %190 = select i1 %188, i32 0, i32 1
  %191 = icmp ne i32 %190, 0
  %192 = zext i1 %191 to i8
  store i8 %192, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 70), align 8
  br label %193

193:                                              ; preds = %186, %185
  br label %195

194:                                              ; preds = %172
  store i8 0, i8* %7, align 1
  br label %195

195:                                              ; preds = %194, %193
  br label %196

196:                                              ; preds = %195, %171
  br label %197

197:                                              ; preds = %196, %156
  br label %198

198:                                              ; preds = %197, %141
  br label %199

199:                                              ; preds = %198, %126
  br label %200

200:                                              ; preds = %199, %111
  br label %201

201:                                              ; preds = %200, %96
  br label %202

202:                                              ; preds = %201, %81
  br label %203

203:                                              ; preds = %202, %66
  br label %204

204:                                              ; preds = %203, %51
  br label %205

205:                                              ; preds = %204, %17
  %206 = load i8, i8* %7, align 1
  %207 = trunc i8 %206 to i1
  br i1 %207, label %210, label %208

208:                                              ; preds = %205
  %209 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %209, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15.993, i64 0, i64 0))
  br label %212

210:                                              ; preds = %205
  %211 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %211, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.44.976, i64 0, i64 0))
  br label %212

212:                                              ; preds = %210, %208
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @set_noreply_maybe(%struct.conn* %0, %struct.iovec* %1, i64 %2) #0 {
  %4 = alloca %struct.conn*, align 8
  %5 = alloca %struct.iovec*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  store %struct.conn* %0, %struct.conn** %4, align 8
  store %struct.iovec* %1, %struct.iovec** %5, align 8
  store i64 %2, i64* %6, align 8
  %8 = load i64, i64* %6, align 8
  %9 = sub i64 %8, 2
  %10 = trunc i64 %9 to i32
  store i32 %10, i32* %7, align 4
  %11 = load %struct.iovec*, %struct.iovec** %5, align 8
  %12 = load i32, i32* %7, align 4
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds %struct.iovec, %struct.iovec* %11, i64 %13
  %15 = getelementptr inbounds %struct.iovec, %struct.iovec* %14, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = icmp ne i8* %16, null
  br i1 %17, label %18, label %30

18:                                               ; preds = %3
  %19 = load %struct.iovec*, %struct.iovec** %5, align 8
  %20 = load i32, i32* %7, align 4
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds %struct.iovec, %struct.iovec* %19, i64 %21
  %23 = getelementptr inbounds %struct.iovec, %struct.iovec* %22, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = call i32 @strcmp(i8* %24, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.88.1032, i64 0, i64 0)) #16
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %18
  %28 = load %struct.conn*, %struct.conn** %4, align 8
  %29 = getelementptr inbounds %struct.conn, %struct.conn* %28, i32 0, i32 34
  store i8 1, i8* %29, align 4
  br label %30

30:                                               ; preds = %27, %18, %3
  %31 = load %struct.conn*, %struct.conn** %4, align 8
  %32 = getelementptr inbounds %struct.conn, %struct.conn* %31, i32 0, i32 34
  %33 = load i8, i8* %32, align 4
  %34 = trunc i8 %33 to i1
  ret i1 %34
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @process_slabs_automove_command(%struct.conn* %0, %struct.iovec* %1, i64 %2) #0 {
  %4 = alloca %struct.conn*, align 8
  %5 = alloca %struct.iovec*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca double, align 8
  store %struct.conn* %0, %struct.conn** %4, align 8
  store %struct.iovec* %1, %struct.iovec** %5, align 8
  store i64 %2, i64* %6, align 8
  %9 = load %struct.conn*, %struct.conn** %4, align 8
  %10 = load %struct.iovec*, %struct.iovec** %5, align 8
  %11 = load i64, i64* %6, align 8
  %12 = call zeroext i1 @set_noreply_maybe(%struct.conn* %9, %struct.iovec* %10, i64 %11)
  %13 = load %struct.iovec*, %struct.iovec** %5, align 8
  %14 = getelementptr inbounds %struct.iovec, %struct.iovec* %13, i64 2
  %15 = getelementptr inbounds %struct.iovec, %struct.iovec* %14, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = call i32 @strcmp(i8* %16, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.114.1091, i64 0, i64 0)) #16
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %32

19:                                               ; preds = %3
  %20 = load i64, i64* %6, align 8
  %21 = icmp ult i64 %20, 5
  br i1 %21, label %28, label %22

22:                                               ; preds = %19
  %23 = load %struct.iovec*, %struct.iovec** %5, align 8
  %24 = getelementptr inbounds %struct.iovec, %struct.iovec* %23, i64 3
  %25 = getelementptr inbounds %struct.iovec, %struct.iovec* %24, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = call zeroext i1 @safe_strtod(i8* %26, double* %8)
  br i1 %27, label %30, label %28

28:                                               ; preds = %22, %19
  %29 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %29, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15.993, i64 0, i64 0))
  br label %58

30:                                               ; preds = %22
  %31 = load double, double* %8, align 8
  store double %31, double* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 33), align 8
  br label %56

32:                                               ; preds = %3
  %33 = load %struct.iovec*, %struct.iovec** %5, align 8
  %34 = getelementptr inbounds %struct.iovec, %struct.iovec* %33, i64 2
  %35 = getelementptr inbounds %struct.iovec, %struct.iovec* %34, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = call zeroext i1 @safe_strtoul(i8* %36, i32* %7)
  br i1 %37, label %40, label %38

38:                                               ; preds = %32
  %39 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %39, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.49.1040, i64 0, i64 0))
  br label %58

40:                                               ; preds = %32
  %41 = load i32, i32* %7, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  store i32 0, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 32), align 4
  br label %55

44:                                               ; preds = %40
  %45 = load i32, i32* %7, align 4
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %50, label %47

47:                                               ; preds = %44
  %48 = load i32, i32* %7, align 4
  %49 = icmp eq i32 %48, 2
  br i1 %49, label %50, label %52

50:                                               ; preds = %47, %44
  %51 = load i32, i32* %7, align 4
  store i32 %51, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 32), align 4
  br label %54

52:                                               ; preds = %47
  %53 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %53, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15.993, i64 0, i64 0))
  br label %58

54:                                               ; preds = %50
  br label %55

55:                                               ; preds = %54, %43
  br label %56

56:                                               ; preds = %55, %30
  %57 = load %struct.conn*, %struct.conn** %4, align 8
  call void @out_string(%struct.conn* %57, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.44.976, i64 0, i64 0))
  br label %58

58:                                               ; preds = %56, %52, %38, %28
  ret void
}

; Function Attrs: nounwind
declare dso_local i32 @raise(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @process_stats_detail(%struct.conn* %0, i8* %1) #0 {
  %3 = alloca %struct.conn*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  store %struct.conn* %0, %struct.conn** %3, align 8
  store i8* %1, i8** %4, align 8
  %7 = load i8*, i8** %4, align 8
  %8 = call i32 @strcmp(i8* %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.100.1106, i64 0, i64 0)) #16
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %2
  store i32 1, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 17), align 8
  %11 = load %struct.conn*, %struct.conn** %3, align 8
  call void @out_string(%struct.conn* %11, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.44.976, i64 0, i64 0))
  br label %31

12:                                               ; preds = %2
  %13 = load i8*, i8** %4, align 8
  %14 = call i32 @strcmp(i8* %13, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.101.1107, i64 0, i64 0)) #16
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %12
  store i32 0, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 17), align 8
  %17 = load %struct.conn*, %struct.conn** %3, align 8
  call void @out_string(%struct.conn* %17, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.44.976, i64 0, i64 0))
  br label %30

18:                                               ; preds = %12
  %19 = load i8*, i8** %4, align 8
  %20 = call i32 @strcmp(i8* %19, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.102.1108, i64 0, i64 0)) #16
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %27

22:                                               ; preds = %18
  %23 = call i8* @stats_prefix_dump(i32* %5)
  store i8* %23, i8** %6, align 8
  %24 = load %struct.conn*, %struct.conn** %3, align 8
  %25 = load i8*, i8** %6, align 8
  %26 = load i32, i32* %5, align 4
  call void @write_and_free(%struct.conn* %24, i8* %25, i32 %26)
  br label %29

27:                                               ; preds = %18
  %28 = load %struct.conn*, %struct.conn** %3, align 8
  call void @out_string(%struct.conn* %28, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.103.1109, i64 0, i64 0))
  br label %29

29:                                               ; preds = %27, %22
  br label %30

30:                                               ; preds = %29, %16
  br label %31

31:                                               ; preds = %30, %10
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @make_ascii_get_suffix(i8* %0, %struct._stritem* %1, i1 zeroext %2, i32 %3) #0 {
  %5 = alloca i8*, align 8
  %6 = alloca %struct._stritem*, align 8
  %7 = alloca i8, align 1
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  store i8* %0, i8** %5, align 8
  store %struct._stritem* %1, %struct._stritem** %6, align 8
  %10 = zext i1 %2 to i8
  store i8 %10, i8* %7, align 1
  store i32 %3, i32* %8, align 4
  %11 = load i8*, i8** %5, align 8
  store i8* %11, i8** %9, align 8
  %12 = load i8*, i8** %9, align 8
  store i8 32, i8* %12, align 1
  %13 = load i8*, i8** %9, align 8
  %14 = getelementptr inbounds i8, i8* %13, i32 1
  store i8* %14, i8** %9, align 8
  %15 = load %struct._stritem*, %struct._stritem** %6, align 8
  %16 = getelementptr inbounds %struct._stritem, %struct._stritem* %15, i32 0, i32 7
  %17 = load i16, i16* %16, align 2
  %18 = zext i16 %17 to i32
  %19 = and i32 %18, 256
  %20 = icmp ne i32 %19, 0
  %21 = zext i1 %20 to i64
  %22 = select i1 %20, i64 4, i64 0
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %24, label %28

24:                                               ; preds = %4
  %25 = load i8*, i8** %9, align 8
  store i8 48, i8* %25, align 1
  %26 = load i8*, i8** %9, align 8
  %27 = getelementptr inbounds i8, i8* %26, i32 1
  store i8* %27, i8** %9, align 8
  br label %52

28:                                               ; preds = %4
  %29 = load %struct._stritem*, %struct._stritem** %6, align 8
  %30 = getelementptr inbounds %struct._stritem, %struct._stritem* %29, i32 0, i32 10
  %31 = bitcast [0 x %union.anon.10]* %30 to i8*
  %32 = load %struct._stritem*, %struct._stritem** %6, align 8
  %33 = getelementptr inbounds %struct._stritem, %struct._stritem* %32, i32 0, i32 9
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i32
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %31, i64 %36
  %38 = getelementptr inbounds i8, i8* %37, i64 1
  %39 = load %struct._stritem*, %struct._stritem** %6, align 8
  %40 = getelementptr inbounds %struct._stritem, %struct._stritem* %39, i32 0, i32 7
  %41 = load i16, i16* %40, align 2
  %42 = zext i16 %41 to i32
  %43 = and i32 %42, 2
  %44 = icmp ne i32 %43, 0
  %45 = zext i1 %44 to i64
  %46 = select i1 %44, i64 8, i64 0
  %47 = getelementptr inbounds i8, i8* %38, i64 %46
  %48 = bitcast i8* %47 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = load i8*, i8** %9, align 8
  %51 = call i8* @itoa_u32(i32 %49, i8* %50)
  store i8* %51, i8** %9, align 8
  br label %52

52:                                               ; preds = %28, %24
  %53 = load i8*, i8** %9, align 8
  store i8 32, i8* %53, align 1
  %54 = load i32, i32* %8, align 4
  %55 = sub nsw i32 %54, 2
  %56 = load i8*, i8** %9, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 1
  %58 = call i8* @itoa_u32(i32 %55, i8* %57)
  store i8* %58, i8** %9, align 8
  %59 = load i8, i8* %7, align 1
  %60 = trunc i8 %59 to i1
  br i1 %60, label %61, label %81

61:                                               ; preds = %52
  %62 = load i8*, i8** %9, align 8
  store i8 32, i8* %62, align 1
  %63 = load %struct._stritem*, %struct._stritem** %6, align 8
  %64 = getelementptr inbounds %struct._stritem, %struct._stritem* %63, i32 0, i32 7
  %65 = load i16, i16* %64, align 2
  %66 = zext i16 %65 to i32
  %67 = and i32 %66, 2
  %68 = icmp ne i32 %67, 0
  br i1 %68, label %69, label %75

69:                                               ; preds = %61
  %70 = load %struct._stritem*, %struct._stritem** %6, align 8
  %71 = getelementptr inbounds %struct._stritem, %struct._stritem* %70, i32 0, i32 10
  %72 = getelementptr inbounds [0 x %union.anon.10], [0 x %union.anon.10]* %71, i64 0, i64 0
  %73 = bitcast %union.anon.10* %72 to i64*
  %74 = load i64, i64* %73, align 8
  br label %76

75:                                               ; preds = %61
  br label %76

76:                                               ; preds = %75, %69
  %77 = phi i64 [ %74, %69 ], [ 0, %75 ]
  %78 = load i8*, i8** %9, align 8
  %79 = getelementptr inbounds i8, i8* %78, i64 1
  %80 = call i8* @itoa_u64(i64 %77, i8* %79)
  store i8* %80, i8** %9, align 8
  br label %81

81:                                               ; preds = %76, %52
  %82 = load i8*, i8** %9, align 8
  store i8 13, i8* %82, align 1
  %83 = load i8*, i8** %9, align 8
  %84 = getelementptr inbounds i8, i8* %83, i64 1
  store i8 10, i8* %84, align 1
  %85 = load i8*, i8** %9, align 8
  %86 = getelementptr inbounds i8, i8* %85, i64 2
  store i8 0, i8* %86, align 1
  %87 = load i8*, i8** %9, align 8
  %88 = load i8*, i8** %5, align 8
  %89 = ptrtoint i8* %87 to i64
  %90 = ptrtoint i8* %88 to i64
  %91 = sub i64 %89, %90
  %92 = add nsw i64 %91, 2
  %93 = trunc i64 %92 to i32
  ret i32 %93
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @_meta_flag_preparse(%struct.iovec* %0, i64 %1, %struct._meta_flags* %2, i8** %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.iovec*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %struct._meta_flags*, align 8
  %9 = alloca i8**, align 8
  %10 = alloca i32, align 4
  %11 = alloca i64, align 8
  %12 = alloca i32, align 4
  %13 = alloca [127 x i8], align 16
  %14 = alloca i8, align 1
  store %struct.iovec* %0, %struct.iovec** %6, align 8
  store i64 %1, i64* %7, align 8
  store %struct._meta_flags* %2, %struct._meta_flags** %8, align 8
  store i8** %3, i8*** %9, align 8
  %15 = bitcast [127 x i8]* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %15, i8 0, i64 127, i1 false)
  %16 = load i64, i64* %7, align 8
  %17 = trunc i64 %16 to i32
  store i32 %17, i32* %10, align 4
  br label %18

18:                                               ; preds = %356, %4
  %19 = load %struct.iovec*, %struct.iovec** %6, align 8
  %20 = load i32, i32* %10, align 4
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds %struct.iovec, %struct.iovec* %19, i64 %21
  %23 = getelementptr inbounds %struct.iovec, %struct.iovec* %22, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = icmp ne i64 %24, 0
  br i1 %25, label %26, label %359

26:                                               ; preds = %18
  %27 = load %struct.iovec*, %struct.iovec** %6, align 8
  %28 = load i32, i32* %10, align 4
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds %struct.iovec, %struct.iovec* %27, i64 %29
  %31 = getelementptr inbounds %struct.iovec, %struct.iovec* %30, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = getelementptr inbounds i8, i8* %32, i64 0
  %34 = load i8, i8* %33, align 1
  store i8 %34, i8* %14, align 1
  %35 = load i8, i8* %14, align 1
  %36 = zext i8 %35 to i32
  %37 = icmp sge i32 %36, 127
  br i1 %37, label %45, label %38

38:                                               ; preds = %26
  %39 = load i8, i8* %14, align 1
  %40 = zext i8 %39 to i64
  %41 = getelementptr inbounds [127 x i8], [127 x i8]* %13, i64 0, i64 %40
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i32
  %44 = icmp ne i32 %43, 0
  br i1 %44, label %45, label %47

45:                                               ; preds = %38, %26
  %46 = load i8**, i8*** %9, align 8
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.55.1135, i64 0, i64 0), i8** %46, align 8
  store i32 -1, i32* %5, align 4
  br label %368

47:                                               ; preds = %38
  %48 = load i8, i8* %14, align 1
  %49 = zext i8 %48 to i64
  %50 = getelementptr inbounds [127 x i8], [127 x i8]* %13, i64 0, i64 %49
  store i8 1, i8* %50, align 1
  %51 = load i8, i8* %14, align 1
  %52 = zext i8 %51 to i32
  switch i32 %52, label %353 [
    i32 98, label %53
    i32 78, label %90
    i32 84, label %129
    i32 82, label %168
    i32 108, label %202
    i32 79, label %213
    i32 80, label %213
    i32 76, label %213
    i32 107, label %214
    i32 115, label %214
    i32 116, label %214
    i32 99, label %214
    i32 102, label %214
    i32 118, label %215
    i32 104, label %221
    i32 117, label %227
    i32 113, label %233
    i32 70, label %239
    i32 67, label %257
    i32 77, label %282
    i32 74, label %309
    i32 68, label %328
    i32 73, label %347
  ]

53:                                               ; preds = %47
  %54 = load %struct.iovec*, %struct.iovec** %6, align 8
  %55 = getelementptr inbounds %struct.iovec, %struct.iovec* %54, i64 1
  %56 = getelementptr inbounds %struct.iovec, %struct.iovec* %55, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = load %struct.iovec*, %struct.iovec** %6, align 8
  %59 = getelementptr inbounds %struct.iovec, %struct.iovec* %58, i64 1
  %60 = getelementptr inbounds %struct.iovec, %struct.iovec* %59, i32 0, i32 1
  %61 = load i64, i64* %60, align 8
  %62 = load %struct.iovec*, %struct.iovec** %6, align 8
  %63 = getelementptr inbounds %struct.iovec, %struct.iovec* %62, i64 1
  %64 = getelementptr inbounds %struct.iovec, %struct.iovec* %63, i32 0, i32 0
  %65 = load i8*, i8** %64, align 8
  %66 = load %struct.iovec*, %struct.iovec** %6, align 8
  %67 = getelementptr inbounds %struct.iovec, %struct.iovec* %66, i64 1
  %68 = getelementptr inbounds %struct.iovec, %struct.iovec* %67, i32 0, i32 1
  %69 = load i64, i64* %68, align 8
  %70 = call i64 @base64_decode(i8* %57, i64 %61, i8* %65, i64 %69)
  store i64 %70, i64* %11, align 8
  %71 = load i64, i64* %11, align 8
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %80

73:                                               ; preds = %53
  %74 = load i8**, i8*** %9, align 8
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.56.1136, i64 0, i64 0), i8** %74, align 8
  %75 = load %struct._meta_flags*, %struct._meta_flags** %8, align 8
  %76 = bitcast %struct._meta_flags* %75 to i16*
  %77 = load i16, i16* %76, align 8
  %78 = and i16 %77, -2
  %79 = or i16 %78, 1
  store i16 %79, i16* %76, align 8
  br label %80

80:                                               ; preds = %73, %53
  %81 = load i64, i64* %11, align 8
  %82 = load %struct.iovec*, %struct.iovec** %6, align 8
  %83 = getelementptr inbounds %struct.iovec, %struct.iovec* %82, i64 1
  %84 = getelementptr inbounds %struct.iovec, %struct.iovec* %83, i32 0, i32 1
  store i64 %81, i64* %84, align 8
  %85 = load %struct._meta_flags*, %struct._meta_flags** %8, align 8
  %86 = bitcast %struct._meta_flags* %85 to i16*
  %87 = load i16, i16* %86, align 8
  %88 = and i16 %87, -2049
  %89 = or i16 %88, 2048
  store i16 %89, i16* %86, align 8
  br label %355

90:                                               ; preds = %47
  %91 = load %struct._meta_flags*, %struct._meta_flags** %8, align 8
  %92 = bitcast %struct._meta_flags* %91 to i16*
  %93 = load i16, i16* %92, align 8
  %94 = and i16 %93, -5
  %95 = or i16 %94, 4
  store i16 %95, i16* %92, align 8
  %96 = load %struct._meta_flags*, %struct._meta_flags** %8, align 8
  %97 = bitcast %struct._meta_flags* %96 to i16*
  %98 = load i16, i16* %97, align 8
  %99 = and i16 %98, -9
  %100 = or i16 %99, 8
  store i16 %100, i16* %97, align 8
  %101 = load %struct.iovec*, %struct.iovec** %6, align 8
  %102 = load i32, i32* %10, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %struct.iovec, %struct.iovec* %101, i64 %103
  %105 = getelementptr inbounds %struct.iovec, %struct.iovec* %104, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8
  %107 = getelementptr inbounds i8, i8* %106, i64 1
  %108 = call zeroext i1 @safe_strtol(i8* %107, i32* %12)
  br i1 %108, label %116, label %109

109:                                              ; preds = %90
  %110 = load i8**, i8*** %9, align 8
  store i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.57.1137, i64 0, i64 0), i8** %110, align 8
  %111 = load %struct._meta_flags*, %struct._meta_flags** %8, align 8
  %112 = bitcast %struct._meta_flags* %111 to i16*
  %113 = load i16, i16* %112, align 8
  %114 = and i16 %113, -2
  %115 = or i16 %114, 1
  store i16 %115, i16* %112, align 8
  br label %128

116:                                              ; preds = %90
  %117 = load i32, i32* %12, align 4
  %118 = icmp slt i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %116
  br label %122

120:                                              ; preds = %116
  %121 = load i32, i32* %12, align 4
  br label %122

122:                                              ; preds = %120, %119
  %123 = phi i32 [ 2592001, %119 ], [ %121, %120 ]
  %124 = sext i32 %123 to i64
  %125 = call i32 @realtime(i64 %124)
  %126 = load %struct._meta_flags*, %struct._meta_flags** %8, align 8
  %127 = getelementptr inbounds %struct._meta_flags, %struct._meta_flags* %126, i32 0, i32 3
  store i32 %125, i32* %127, align 8
  br label %128

128:                                              ; preds = %122, %109
  br label %355

129:                                              ; preds = %47
  %130 = load %struct._meta_flags*, %struct._meta_flags** %8, align 8
  %131 = bitcast %struct._meta_flags* %130 to i16*
  %132 = load i16, i16* %131, align 8
  %133 = and i16 %132, -5
  %134 = or i16 %133, 4
  store i16 %134, i16* %131, align 8
  %135 = load %struct.iovec*, %struct.iovec** %6, align 8
  %136 = load i32, i32* %10, align 4
  %137 = zext i32 %136 to i64
  %138 = getelementptr inbounds %struct.iovec, %struct.iovec* %135, i64 %137
  %139 = getelementptr inbounds %struct.iovec, %struct.iovec* %138, i32 0, i32 0
  %140 = load i8*, i8** %139, align 8
  %141 = getelementptr inbounds i8, i8* %140, i64 1
  %142 = call zeroext i1 @safe_strtol(i8* %141, i32* %12)
  br i1 %142, label %150, label %143

143:                                              ; preds = %129
  %144 = load i8**, i8*** %9, align 8
  store i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.57.1137, i64 0, i64 0), i8** %144, align 8
  %145 = load %struct._meta_flags*, %struct._meta_flags** %8, align 8
  %146 = bitcast %struct._meta_flags* %145 to i16*
  %147 = load i16, i16* %146, align 8
  %148 = and i16 %147, -2
  %149 = or i16 %148, 1
  store i16 %149, i16* %146, align 8
  br label %167

150:                                              ; preds = %129
  %151 = load i32, i32* %12, align 4
  %152 = icmp slt i32 %151, 0
  br i1 %152, label %153, label %154

153:                                              ; preds = %150
  br label %156

154:                                              ; preds = %150
  %155 = load i32, i32* %12, align 4
  br label %156

156:                                              ; preds = %154, %153
  %157 = phi i32 [ 2592001, %153 ], [ %155, %154 ]
  %158 = sext i32 %157 to i64
  %159 = call i32 @realtime(i64 %158)
  %160 = load %struct._meta_flags*, %struct._meta_flags** %8, align 8
  %161 = getelementptr inbounds %struct._meta_flags, %struct._meta_flags* %160, i32 0, i32 2
  store i32 %159, i32* %161, align 4
  %162 = load %struct._meta_flags*, %struct._meta_flags** %8, align 8
  %163 = bitcast %struct._meta_flags* %162 to i16*
  %164 = load i16, i16* %163, align 8
  %165 = and i16 %164, -1025
  %166 = or i16 %165, 1024
  store i16 %166, i16* %163, align 8
  br label %167

167:                                              ; preds = %156, %143
  br label %355

168:                                              ; preds = %47
  %169 = load %struct._meta_flags*, %struct._meta_flags** %8, align 8
  %170 = bitcast %struct._meta_flags* %169 to i16*
  %171 = load i16, i16* %170, align 8
  %172 = and i16 %171, -5
  %173 = or i16 %172, 4
  store i16 %173, i16* %170, align 8
  %174 = load %struct.iovec*, %struct.iovec** %6, align 8
  %175 = load i32, i32* %10, align 4
  %176 = zext i32 %175 to i64
  %177 = getelementptr inbounds %struct.iovec, %struct.iovec* %174, i64 %176
  %178 = getelementptr inbounds %struct.iovec, %struct.iovec* %177, i32 0, i32 0
  %179 = load i8*, i8** %178, align 8
  %180 = getelementptr inbounds i8, i8* %179, i64 1
  %181 = call zeroext i1 @safe_strtol(i8* %180, i32* %12)
  br i1 %181, label %189, label %182

182:                                              ; preds = %168
  %183 = load i8**, i8*** %9, align 8
  store i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.57.1137, i64 0, i64 0), i8** %183, align 8
  %184 = load %struct._meta_flags*, %struct._meta_flags** %8, align 8
  %185 = bitcast %struct._meta_flags* %184 to i16*
  %186 = load i16, i16* %185, align 8
  %187 = and i16 %186, -2
  %188 = or i16 %187, 1
  store i16 %188, i16* %185, align 8
  br label %201

189:                                              ; preds = %168
  %190 = load i32, i32* %12, align 4
  %191 = icmp slt i32 %190, 0
  br i1 %191, label %192, label %193

192:                                              ; preds = %189
  br label %195

193:                                              ; preds = %189
  %194 = load i32, i32* %12, align 4
  br label %195

195:                                              ; preds = %193, %192
  %196 = phi i32 [ 2592001, %192 ], [ %194, %193 ]
  %197 = sext i32 %196 to i64
  %198 = call i32 @realtime(i64 %197)
  %199 = load %struct._meta_flags*, %struct._meta_flags** %8, align 8
  %200 = getelementptr inbounds %struct._meta_flags, %struct._meta_flags* %199, i32 0, i32 4
  store i32 %198, i32* %200, align 4
  br label %201

201:                                              ; preds = %195, %182
  br label %355

202:                                              ; preds = %47
  %203 = load %struct._meta_flags*, %struct._meta_flags** %8, align 8
  %204 = bitcast %struct._meta_flags* %203 to i16*
  %205 = load i16, i16* %204, align 8
  %206 = and i16 %205, -17
  %207 = or i16 %206, 16
  store i16 %207, i16* %204, align 8
  %208 = load %struct._meta_flags*, %struct._meta_flags** %8, align 8
  %209 = bitcast %struct._meta_flags* %208 to i16*
  %210 = load i16, i16* %209, align 8
  %211 = and i16 %210, -5
  %212 = or i16 %211, 4
  store i16 %212, i16* %209, align 8
  br label %355

213:                                              ; preds = %47, %47, %47
  br label %355

214:                                              ; preds = %47, %47, %47, %47, %47
  br label %355

215:                                              ; preds = %47
  %216 = load %struct._meta_flags*, %struct._meta_flags** %8, align 8
  %217 = bitcast %struct._meta_flags* %216 to i16*
  %218 = load i16, i16* %217, align 8
  %219 = and i16 %218, -65
  %220 = or i16 %219, 64
  store i16 %220, i16* %217, align 8
  br label %355

221:                                              ; preds = %47
  %222 = load %struct._meta_flags*, %struct._meta_flags** %8, align 8
  %223 = bitcast %struct._meta_flags* %222 to i16*
  %224 = load i16, i16* %223, align 8
  %225 = and i16 %224, -5
  %226 = or i16 %225, 4
  store i16 %226, i16* %223, align 8
  br label %355

227:                                              ; preds = %47
  %228 = load %struct._meta_flags*, %struct._meta_flags** %8, align 8
  %229 = bitcast %struct._meta_flags* %228 to i16*
  %230 = load i16, i16* %229, align 8
  %231 = and i16 %230, -3
  %232 = or i16 %231, 2
  store i16 %232, i16* %229, align 8
  br label %355

233:                                              ; preds = %47
  %234 = load %struct._meta_flags*, %struct._meta_flags** %8, align 8
  %235 = bitcast %struct._meta_flags* %234 to i16*
  %236 = load i16, i16* %235, align 8
  %237 = and i16 %236, -257
  %238 = or i16 %237, 256
  store i16 %238, i16* %235, align 8
  br label %355

239:                                              ; preds = %47
  %240 = load %struct.iovec*, %struct.iovec** %6, align 8
  %241 = load i32, i32* %10, align 4
  %242 = zext i32 %241 to i64
  %243 = getelementptr inbounds %struct.iovec, %struct.iovec* %240, i64 %242
  %244 = getelementptr inbounds %struct.iovec, %struct.iovec* %243, i32 0, i32 0
  %245 = load i8*, i8** %244, align 8
  %246 = getelementptr inbounds i8, i8* %245, i64 1
  %247 = load %struct._meta_flags*, %struct._meta_flags** %8, align 8
  %248 = getelementptr inbounds %struct._meta_flags, %struct._meta_flags* %247, i32 0, i32 5
  %249 = call zeroext i1 @safe_strtoul(i8* %246, i32* %248)
  br i1 %249, label %256, label %250

250:                                              ; preds = %239
  %251 = load %struct._meta_flags*, %struct._meta_flags** %8, align 8
  %252 = bitcast %struct._meta_flags* %251 to i16*
  %253 = load i16, i16* %252, align 8
  %254 = and i16 %253, -2
  %255 = or i16 %254, 1
  store i16 %255, i16* %252, align 8
  br label %256

256:                                              ; preds = %250, %239
  br label %355

257:                                              ; preds = %47
  %258 = load %struct.iovec*, %struct.iovec** %6, align 8
  %259 = load i32, i32* %10, align 4
  %260 = zext i32 %259 to i64
  %261 = getelementptr inbounds %struct.iovec, %struct.iovec* %258, i64 %260
  %262 = getelementptr inbounds %struct.iovec, %struct.iovec* %261, i32 0, i32 0
  %263 = load i8*, i8** %262, align 8
  %264 = getelementptr inbounds i8, i8* %263, i64 1
  %265 = load %struct._meta_flags*, %struct._meta_flags** %8, align 8
  %266 = getelementptr inbounds %struct._meta_flags, %struct._meta_flags* %265, i32 0, i32 6
  %267 = call zeroext i1 @safe_strtoull(i8* %264, i64* %266)
  br i1 %267, label %275, label %268

268:                                              ; preds = %257
  %269 = load i8**, i8*** %9, align 8
  store i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.57.1137, i64 0, i64 0), i8** %269, align 8
  %270 = load %struct._meta_flags*, %struct._meta_flags** %8, align 8
  %271 = bitcast %struct._meta_flags* %270 to i16*
  %272 = load i16, i16* %271, align 8
  %273 = and i16 %272, -2
  %274 = or i16 %273, 1
  store i16 %274, i16* %271, align 8
  br label %281

275:                                              ; preds = %257
  %276 = load %struct._meta_flags*, %struct._meta_flags** %8, align 8
  %277 = bitcast %struct._meta_flags* %276 to i16*
  %278 = load i16, i16* %277, align 8
  %279 = and i16 %278, -513
  %280 = or i16 %279, 512
  store i16 %280, i16* %277, align 8
  br label %281

281:                                              ; preds = %275, %268
  br label %355

282:                                              ; preds = %47
  %283 = load %struct.iovec*, %struct.iovec** %6, align 8
  %284 = load i32, i32* %10, align 4
  %285 = zext i32 %284 to i64
  %286 = getelementptr inbounds %struct.iovec, %struct.iovec* %283, i64 %285
  %287 = getelementptr inbounds %struct.iovec, %struct.iovec* %286, i32 0, i32 1
  %288 = load i64, i64* %287, align 8
  %289 = icmp ne i64 %288, 2
  br i1 %289, label %290, label %297

290:                                              ; preds = %282
  %291 = load i8**, i8*** %9, align 8
  store i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.58.1138, i64 0, i64 0), i8** %291, align 8
  %292 = load %struct._meta_flags*, %struct._meta_flags** %8, align 8
  %293 = bitcast %struct._meta_flags* %292 to i16*
  %294 = load i16, i16* %293, align 8
  %295 = and i16 %294, -2
  %296 = or i16 %295, 1
  store i16 %296, i16* %293, align 8
  br label %308

297:                                              ; preds = %282
  %298 = load %struct.iovec*, %struct.iovec** %6, align 8
  %299 = load i32, i32* %10, align 4
  %300 = zext i32 %299 to i64
  %301 = getelementptr inbounds %struct.iovec, %struct.iovec* %298, i64 %300
  %302 = getelementptr inbounds %struct.iovec, %struct.iovec* %301, i32 0, i32 0
  %303 = load i8*, i8** %302, align 8
  %304 = getelementptr inbounds i8, i8* %303, i64 1
  %305 = load i8, i8* %304, align 1
  %306 = load %struct._meta_flags*, %struct._meta_flags** %8, align 8
  %307 = getelementptr inbounds %struct._meta_flags, %struct._meta_flags* %306, i32 0, i32 1
  store i8 %305, i8* %307, align 2
  br label %308

308:                                              ; preds = %297, %290
  br label %355

309:                                              ; preds = %47
  %310 = load %struct.iovec*, %struct.iovec** %6, align 8
  %311 = load i32, i32* %10, align 4
  %312 = zext i32 %311 to i64
  %313 = getelementptr inbounds %struct.iovec, %struct.iovec* %310, i64 %312
  %314 = getelementptr inbounds %struct.iovec, %struct.iovec* %313, i32 0, i32 0
  %315 = load i8*, i8** %314, align 8
  %316 = getelementptr inbounds i8, i8* %315, i64 1
  %317 = load %struct._meta_flags*, %struct._meta_flags** %8, align 8
  %318 = getelementptr inbounds %struct._meta_flags, %struct._meta_flags* %317, i32 0, i32 8
  %319 = call zeroext i1 @safe_strtoull(i8* %316, i64* %318)
  br i1 %319, label %327, label %320

320:                                              ; preds = %309
  %321 = load i8**, i8*** %9, align 8
  store i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.59.1139, i64 0, i64 0), i8** %321, align 8
  %322 = load %struct._meta_flags*, %struct._meta_flags** %8, align 8
  %323 = bitcast %struct._meta_flags* %322 to i16*
  %324 = load i16, i16* %323, align 8
  %325 = and i16 %324, -2
  %326 = or i16 %325, 1
  store i16 %326, i16* %323, align 8
  br label %327

327:                                              ; preds = %320, %309
  br label %355

328:                                              ; preds = %47
  %329 = load %struct.iovec*, %struct.iovec** %6, align 8
  %330 = load i32, i32* %10, align 4
  %331 = zext i32 %330 to i64
  %332 = getelementptr inbounds %struct.iovec, %struct.iovec* %329, i64 %331
  %333 = getelementptr inbounds %struct.iovec, %struct.iovec* %332, i32 0, i32 0
  %334 = load i8*, i8** %333, align 8
  %335 = getelementptr inbounds i8, i8* %334, i64 1
  %336 = load %struct._meta_flags*, %struct._meta_flags** %8, align 8
  %337 = getelementptr inbounds %struct._meta_flags, %struct._meta_flags* %336, i32 0, i32 7
  %338 = call zeroext i1 @safe_strtoull(i8* %335, i64* %337)
  br i1 %338, label %346, label %339

339:                                              ; preds = %328
  %340 = load i8**, i8*** %9, align 8
  store i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.60.1140, i64 0, i64 0), i8** %340, align 8
  %341 = load %struct._meta_flags*, %struct._meta_flags** %8, align 8
  %342 = bitcast %struct._meta_flags* %341 to i16*
  %343 = load i16, i16* %342, align 8
  %344 = and i16 %343, -2
  %345 = or i16 %344, 1
  store i16 %345, i16* %342, align 8
  br label %346

346:                                              ; preds = %339, %328
  br label %355

347:                                              ; preds = %47
  %348 = load %struct._meta_flags*, %struct._meta_flags** %8, align 8
  %349 = bitcast %struct._meta_flags* %348 to i16*
  %350 = load i16, i16* %349, align 8
  %351 = and i16 %350, -129
  %352 = or i16 %351, 128
  store i16 %352, i16* %349, align 8
  br label %355

353:                                              ; preds = %47
  %354 = load i8**, i8*** %9, align 8
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.61.1141, i64 0, i64 0), i8** %354, align 8
  store i32 -1, i32* %5, align 4
  br label %368

355:                                              ; preds = %347, %346, %327, %308, %281, %256, %233, %227, %221, %215, %214, %213, %202, %201, %167, %128, %80
  br label %356

356:                                              ; preds = %355
  %357 = load i32, i32* %10, align 4
  %358 = add i32 %357, 1
  store i32 %358, i32* %10, align 4
  br label %18, !llvm.loop !171

359:                                              ; preds = %18
  %360 = load %struct._meta_flags*, %struct._meta_flags** %8, align 8
  %361 = bitcast %struct._meta_flags* %360 to i16*
  %362 = load i16, i16* %361, align 8
  %363 = and i16 %362, 1
  %364 = zext i16 %363 to i32
  %365 = icmp ne i32 %364, 0
  %366 = zext i1 %365 to i64
  %367 = select i1 %365, i32 -1, i32 0
  store i32 %367, i32* %5, align 4
  br label %368

368:                                              ; preds = %359, %353, %45
  %369 = load i32, i32* %5, align 4
  ret i32 %369
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @complete_nread_binary(%struct.conn* %0) #0 {
  %2 = alloca %struct.conn*, align 8
  store %struct.conn* %0, %struct.conn** %2, align 8
  %3 = load %struct.conn*, %struct.conn** %2, align 8
  %4 = getelementptr inbounds %struct.conn, %struct.conn* %3, i32 0, i32 10
  %5 = load i32, i32* %4, align 8
  switch i32 %5, label %22 [
    i32 3, label %6
    i32 10, label %8
  ]

6:                                                ; preds = %1
  %7 = load %struct.conn*, %struct.conn** %2, align 8
  call void @complete_update_bin(%struct.conn* %7)
  br label %28

8:                                                ; preds = %1
  %9 = load %struct.conn*, %struct.conn** %2, align 8
  call void @process_bin_complete_sasl_auth(%struct.conn* %9)
  %10 = load %struct.conn*, %struct.conn** %2, align 8
  %11 = getelementptr inbounds %struct.conn, %struct.conn* %10, i32 0, i32 23
  %12 = load i8*, i8** %11, align 8
  %13 = icmp ne i8* %12, null
  br i1 %13, label %14, label %21

14:                                               ; preds = %8
  %15 = load %struct.conn*, %struct.conn** %2, align 8
  %16 = getelementptr inbounds %struct.conn, %struct.conn* %15, i32 0, i32 23
  %17 = load i8*, i8** %16, align 8
  %18 = bitcast i8* %17 to %struct._stritem*
  call void @do_item_remove(%struct._stritem* %18)
  %19 = load %struct.conn*, %struct.conn** %2, align 8
  %20 = getelementptr inbounds %struct.conn, %struct.conn* %19, i32 0, i32 23
  store i8* null, i8** %20, align 8
  br label %21

21:                                               ; preds = %14, %8
  br label %28

22:                                               ; preds = %1
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %24 = load %struct.conn*, %struct.conn** %2, align 8
  %25 = getelementptr inbounds %struct.conn, %struct.conn* %24, i32 0, i32 10
  %26 = load i32, i32* %25, align 8
  %27 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %23, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1147, i64 0, i64 0), i32 %26)
  br label %28

28:                                               ; preds = %22, %21, %6
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @complete_update_bin(%struct.conn* %0) #0 {
  %2 = alloca %struct.conn*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct._stritem*, align 8
  %6 = alloca %struct._strchunk*, align 8
  store %struct.conn* %0, %struct.conn** %2, align 8
  store i32 4, i32* %3, align 4
  store i32 0, i32* %4, align 4
  %7 = load %struct.conn*, %struct.conn** %2, align 8
  %8 = getelementptr inbounds %struct.conn, %struct.conn* %7, i32 0, i32 23
  %9 = load i8*, i8** %8, align 8
  %10 = bitcast i8* %9 to %struct._stritem*
  store %struct._stritem* %10, %struct._stritem** %5, align 8
  %11 = load %struct.conn*, %struct.conn** %2, align 8
  %12 = getelementptr inbounds %struct.conn, %struct.conn* %11, i32 0, i32 42
  %13 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %12, align 8
  %14 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %13, i32 0, i32 4
  %15 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %14, i32 0, i32 0
  %16 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %15) #14
  %17 = load %struct.conn*, %struct.conn** %2, align 8
  %18 = getelementptr inbounds %struct.conn, %struct.conn* %17, i32 0, i32 42
  %19 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %18, align 8
  %20 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %19, i32 0, i32 4
  %21 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %20, i32 0, i32 31
  %22 = load %struct._stritem*, %struct._stritem** %5, align 8
  %23 = getelementptr inbounds %struct._stritem, %struct._stritem* %22, i32 0, i32 8
  %24 = load i8, i8* %23, align 8
  %25 = zext i8 %24 to i32
  %26 = and i32 %25, -193
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [64 x %struct.slab_stats], [64 x %struct.slab_stats]* %21, i64 0, i64 %27
  %29 = getelementptr inbounds %struct.slab_stats, %struct.slab_stats* %28, i32 0, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, 1
  store i64 %31, i64* %29, align 8
  %32 = load %struct.conn*, %struct.conn** %2, align 8
  %33 = getelementptr inbounds %struct.conn, %struct.conn* %32, i32 0, i32 42
  %34 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %33, align 8
  %35 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %34, i32 0, i32 4
  %36 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %35, i32 0, i32 0
  %37 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %36) #14
  %38 = load %struct._stritem*, %struct._stritem** %5, align 8
  %39 = getelementptr inbounds %struct._stritem, %struct._stritem* %38, i32 0, i32 7
  %40 = load i16, i16* %39, align 2
  %41 = zext i16 %40 to i32
  %42 = and i32 %41, 32
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %113

44:                                               ; preds = %1
  %45 = load %struct._stritem*, %struct._stritem** %5, align 8
  %46 = getelementptr inbounds %struct._stritem, %struct._stritem* %45, i32 0, i32 10
  %47 = bitcast [0 x %union.anon.10]* %46 to i8*
  %48 = load %struct._stritem*, %struct._stritem** %5, align 8
  %49 = getelementptr inbounds %struct._stritem, %struct._stritem* %48, i32 0, i32 9
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i32
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds i8, i8* %47, i64 %52
  %54 = getelementptr inbounds i8, i8* %53, i64 1
  %55 = load %struct._stritem*, %struct._stritem** %5, align 8
  %56 = getelementptr inbounds %struct._stritem, %struct._stritem* %55, i32 0, i32 7
  %57 = load i16, i16* %56, align 2
  %58 = zext i16 %57 to i32
  %59 = and i32 %58, 256
  %60 = icmp ne i32 %59, 0
  %61 = zext i1 %60 to i64
  %62 = select i1 %60, i64 4, i64 0
  %63 = getelementptr inbounds i8, i8* %54, i64 %62
  %64 = load %struct._stritem*, %struct._stritem** %5, align 8
  %65 = getelementptr inbounds %struct._stritem, %struct._stritem* %64, i32 0, i32 7
  %66 = load i16, i16* %65, align 2
  %67 = zext i16 %66 to i32
  %68 = and i32 %67, 2
  %69 = icmp ne i32 %68, 0
  %70 = zext i1 %69 to i64
  %71 = select i1 %69, i64 8, i64 0
  %72 = getelementptr inbounds i8, i8* %63, i64 %71
  %73 = load %struct._stritem*, %struct._stritem** %5, align 8
  %74 = getelementptr inbounds %struct._stritem, %struct._stritem* %73, i32 0, i32 5
  %75 = load i32, i32* %74, align 8
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds i8, i8* %72, i64 %76
  %78 = getelementptr inbounds i8, i8* %77, i64 -2
  store i8 13, i8* %78, align 1
  %79 = load %struct._stritem*, %struct._stritem** %5, align 8
  %80 = getelementptr inbounds %struct._stritem, %struct._stritem* %79, i32 0, i32 10
  %81 = bitcast [0 x %union.anon.10]* %80 to i8*
  %82 = load %struct._stritem*, %struct._stritem** %5, align 8
  %83 = getelementptr inbounds %struct._stritem, %struct._stritem* %82, i32 0, i32 9
  %84 = load i8, i8* %83, align 1
  %85 = zext i8 %84 to i32
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds i8, i8* %81, i64 %86
  %88 = getelementptr inbounds i8, i8* %87, i64 1
  %89 = load %struct._stritem*, %struct._stritem** %5, align 8
  %90 = getelementptr inbounds %struct._stritem, %struct._stritem* %89, i32 0, i32 7
  %91 = load i16, i16* %90, align 2
  %92 = zext i16 %91 to i32
  %93 = and i32 %92, 256
  %94 = icmp ne i32 %93, 0
  %95 = zext i1 %94 to i64
  %96 = select i1 %94, i64 4, i64 0
  %97 = getelementptr inbounds i8, i8* %88, i64 %96
  %98 = load %struct._stritem*, %struct._stritem** %5, align 8
  %99 = getelementptr inbounds %struct._stritem, %struct._stritem* %98, i32 0, i32 7
  %100 = load i16, i16* %99, align 2
  %101 = zext i16 %100 to i32
  %102 = and i32 %101, 2
  %103 = icmp ne i32 %102, 0
  %104 = zext i1 %103 to i64
  %105 = select i1 %103, i64 8, i64 0
  %106 = getelementptr inbounds i8, i8* %97, i64 %105
  %107 = load %struct._stritem*, %struct._stritem** %5, align 8
  %108 = getelementptr inbounds %struct._stritem, %struct._stritem* %107, i32 0, i32 5
  %109 = load i32, i32* %108, align 8
  %110 = sext i32 %109 to i64
  %111 = getelementptr inbounds i8, i8* %106, i64 %110
  %112 = getelementptr inbounds i8, i8* %111, i64 -1
  store i8 10, i8* %112, align 1
  br label %149

113:                                              ; preds = %1
  %114 = load %struct.conn*, %struct.conn** %2, align 8
  %115 = getelementptr inbounds %struct.conn, %struct.conn* %114, i32 0, i32 21
  %116 = load i8*, i8** %115, align 8
  %117 = bitcast i8* %116 to %struct._strchunk*
  store %struct._strchunk* %117, %struct._strchunk** %6, align 8
  %118 = load %struct._strchunk*, %struct._strchunk** %6, align 8
  %119 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %118, i32 0, i32 3
  %120 = load i32, i32* %119, align 8
  %121 = load %struct._strchunk*, %struct._strchunk** %6, align 8
  %122 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %121, i32 0, i32 4
  %123 = load i32, i32* %122, align 4
  %124 = icmp eq i32 %120, %123
  br i1 %124, label %125, label %129

125:                                              ; preds = %113
  %126 = load %struct._strchunk*, %struct._strchunk** %6, align 8
  %127 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %126, i32 0, i32 0
  %128 = load %struct._strchunk*, %struct._strchunk** %127, align 8
  store %struct._strchunk* %128, %struct._strchunk** %6, align 8
  br label %129

129:                                              ; preds = %125, %113
  %130 = load %struct._strchunk*, %struct._strchunk** %6, align 8
  %131 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %130, i32 0, i32 10
  %132 = load %struct._strchunk*, %struct._strchunk** %6, align 8
  %133 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %132, i32 0, i32 4
  %134 = load i32, i32* %133, align 4
  %135 = sext i32 %134 to i64
  %136 = getelementptr inbounds [0 x i8], [0 x i8]* %131, i64 0, i64 %135
  store i8 13, i8* %136, align 1
  %137 = load %struct._strchunk*, %struct._strchunk** %6, align 8
  %138 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %137, i32 0, i32 10
  %139 = load %struct._strchunk*, %struct._strchunk** %6, align 8
  %140 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %139, i32 0, i32 4
  %141 = load i32, i32* %140, align 4
  %142 = add nsw i32 %141, 1
  %143 = sext i32 %142 to i64
  %144 = getelementptr inbounds [0 x i8], [0 x i8]* %138, i64 0, i64 %143
  store i8 10, i8* %144, align 1
  %145 = load %struct._strchunk*, %struct._strchunk** %6, align 8
  %146 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %145, i32 0, i32 4
  %147 = load i32, i32* %146, align 4
  %148 = add nsw i32 %147, 2
  store i32 %148, i32* %146, align 4
  br label %149

149:                                              ; preds = %129, %44
  %150 = load %struct._stritem*, %struct._stritem** %5, align 8
  %151 = load %struct.conn*, %struct.conn** %2, align 8
  %152 = getelementptr inbounds %struct.conn, %struct.conn* %151, i32 0, i32 38
  %153 = load i16, i16* %152, align 8
  %154 = sext i16 %153 to i32
  %155 = load %struct.conn*, %struct.conn** %2, align 8
  %156 = call i32 @store_item(%struct._stritem* %150, i32 %154, %struct.conn* %155)
  store i32 %156, i32* %4, align 4
  %157 = load i32, i32* %4, align 4
  switch i32 %157, label %183 [
    i32 1, label %158
    i32 2, label %160
    i32 3, label %162
    i32 0, label %164
    i32 4, label %164
    i32 5, label %164
  ]

158:                                              ; preds = %149
  %159 = load %struct.conn*, %struct.conn** %2, align 8
  call void @write_bin_response(%struct.conn* %159, i8* null, i32 0, i32 0, i32 0)
  br label %183

160:                                              ; preds = %149
  %161 = load %struct.conn*, %struct.conn** %2, align 8
  call void @write_bin_error(%struct.conn* %161, i32 2, i8* null, i32 0)
  br label %183

162:                                              ; preds = %149
  %163 = load %struct.conn*, %struct.conn** %2, align 8
  call void @write_bin_error(%struct.conn* %163, i32 1, i8* null, i32 0)
  br label %183

164:                                              ; preds = %149, %149, %149
  %165 = load %struct.conn*, %struct.conn** %2, align 8
  %166 = getelementptr inbounds %struct.conn, %struct.conn* %165, i32 0, i32 38
  %167 = load i16, i16* %166, align 8
  %168 = sext i16 %167 to i32
  %169 = icmp eq i32 %168, 1
  br i1 %169, label %170, label %171

170:                                              ; preds = %164
  store i32 2, i32* %3, align 4
  br label %180

171:                                              ; preds = %164
  %172 = load %struct.conn*, %struct.conn** %2, align 8
  %173 = getelementptr inbounds %struct.conn, %struct.conn* %172, i32 0, i32 38
  %174 = load i16, i16* %173, align 8
  %175 = sext i16 %174 to i32
  %176 = icmp eq i32 %175, 3
  br i1 %176, label %177, label %178

177:                                              ; preds = %171
  store i32 1, i32* %3, align 4
  br label %179

178:                                              ; preds = %171
  store i32 5, i32* %3, align 4
  br label %179

179:                                              ; preds = %178, %177
  br label %180

180:                                              ; preds = %179, %170
  %181 = load %struct.conn*, %struct.conn** %2, align 8
  %182 = load i32, i32* %3, align 4
  call void @write_bin_error(%struct.conn* %181, i32 %182, i8* null, i32 0)
  br label %183

183:                                              ; preds = %180, %149, %162, %160, %158
  %184 = load %struct.conn*, %struct.conn** %2, align 8
  %185 = getelementptr inbounds %struct.conn, %struct.conn* %184, i32 0, i32 23
  %186 = load i8*, i8** %185, align 8
  %187 = bitcast i8* %186 to %struct._stritem*
  call void @item_remove(%struct._stritem* %187)
  %188 = load %struct.conn*, %struct.conn** %2, align 8
  %189 = getelementptr inbounds %struct.conn, %struct.conn* %188, i32 0, i32 23
  store i8* null, i8** %189, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @process_bin_complete_sasl_auth(%struct.conn* %0) #0 {
  %2 = alloca %struct.conn*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store %struct.conn* %0, %struct.conn** %2, align 8
  store i8* null, i8** %3, align 8
  store i32 0, i32* %4, align 4
  %12 = load %struct.conn*, %struct.conn** %2, align 8
  call void @init_sasl_conn(%struct.conn* %12)
  %13 = load %struct.conn*, %struct.conn** %2, align 8
  %14 = getelementptr inbounds %struct.conn, %struct.conn* %13, i32 0, i32 36
  %15 = bitcast %union.protocol_binary_request_header* %14 to %struct.anon.13*
  %16 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %15, i32 0, i32 2
  %17 = load i16, i16* %16, align 2
  %18 = zext i16 %17 to i32
  store i32 %18, i32* %5, align 4
  %19 = load %struct.conn*, %struct.conn** %2, align 8
  %20 = getelementptr inbounds %struct.conn, %struct.conn* %19, i32 0, i32 36
  %21 = bitcast %union.protocol_binary_request_header* %20 to %struct.anon.13*
  %22 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %21, i32 0, i32 6
  %23 = load i32, i32* %22, align 8
  %24 = load i32, i32* %5, align 4
  %25 = sub i32 %23, %24
  store i32 %25, i32* %6, align 4
  %26 = load i32, i32* %5, align 4
  %27 = load %struct.conn*, %struct.conn** %2, align 8
  %28 = getelementptr inbounds %struct.conn, %struct.conn* %27, i32 0, i32 23
  %29 = load i8*, i8** %28, align 8
  %30 = bitcast i8* %29 to %struct._stritem*
  %31 = getelementptr inbounds %struct._stritem, %struct._stritem* %30, i32 0, i32 9
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i32
  %34 = icmp sgt i32 %26, %33
  br i1 %34, label %35, label %39

35:                                               ; preds = %1
  %36 = load %struct.conn*, %struct.conn** %2, align 8
  %37 = load i32, i32* %6, align 4
  call void @write_bin_error(%struct.conn* %36, i32 4, i8* null, i32 %37)
  %38 = load %struct.conn*, %struct.conn** %2, align 8
  call void @conn_set_state(%struct.conn* %38, i32 7)
  br label %261

39:                                               ; preds = %1
  %40 = load i32, i32* %5, align 4
  %41 = add nsw i32 %40, 1
  %42 = zext i32 %41 to i64
  %43 = call i8* @llvm.stacksave()
  store i8* %43, i8** %7, align 8
  %44 = alloca i8, i64 %42, align 16
  store i64 %42, i64* %8, align 8
  %45 = load %struct.conn*, %struct.conn** %2, align 8
  %46 = getelementptr inbounds %struct.conn, %struct.conn* %45, i32 0, i32 23
  %47 = load i8*, i8** %46, align 8
  %48 = bitcast i8* %47 to %struct._stritem*
  %49 = getelementptr inbounds %struct._stritem, %struct._stritem* %48, i32 0, i32 10
  %50 = bitcast [0 x %union.anon.10]* %49 to i8*
  %51 = load %struct.conn*, %struct.conn** %2, align 8
  %52 = getelementptr inbounds %struct.conn, %struct.conn* %51, i32 0, i32 23
  %53 = load i8*, i8** %52, align 8
  %54 = bitcast i8* %53 to %struct._stritem*
  %55 = getelementptr inbounds %struct._stritem, %struct._stritem* %54, i32 0, i32 7
  %56 = load i16, i16* %55, align 2
  %57 = zext i16 %56 to i32
  %58 = and i32 %57, 2
  %59 = icmp ne i32 %58, 0
  %60 = zext i1 %59 to i64
  %61 = select i1 %59, i64 8, i64 0
  %62 = getelementptr inbounds i8, i8* %50, i64 %61
  %63 = load i32, i32* %5, align 4
  %64 = sext i32 %63 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %44, i8* align 1 %62, i64 %64, i1 false)
  %65 = load i32, i32* %5, align 4
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds i8, i8* %44, i64 %66
  store i8 0, i8* %67, align 1
  %68 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %69 = icmp ne i32 %68, 0
  br i1 %69, label %70, label %74

70:                                               ; preds = %39
  %71 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %72 = load i32, i32* %6, align 4
  %73 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %71, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.20.1150, i64 0, i64 0), i8* %44, i32 %72)
  br label %74

74:                                               ; preds = %70, %39
  %75 = load i32, i32* %6, align 4
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %78

77:                                               ; preds = %74
  br label %119

78:                                               ; preds = %74
  %79 = load %struct.conn*, %struct.conn** %2, align 8
  %80 = getelementptr inbounds %struct.conn, %struct.conn* %79, i32 0, i32 23
  %81 = load i8*, i8** %80, align 8
  %82 = bitcast i8* %81 to %struct._stritem*
  %83 = getelementptr inbounds %struct._stritem, %struct._stritem* %82, i32 0, i32 10
  %84 = bitcast [0 x %union.anon.10]* %83 to i8*
  %85 = load %struct.conn*, %struct.conn** %2, align 8
  %86 = getelementptr inbounds %struct.conn, %struct.conn* %85, i32 0, i32 23
  %87 = load i8*, i8** %86, align 8
  %88 = bitcast i8* %87 to %struct._stritem*
  %89 = getelementptr inbounds %struct._stritem, %struct._stritem* %88, i32 0, i32 9
  %90 = load i8, i8* %89, align 1
  %91 = zext i8 %90 to i32
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds i8, i8* %84, i64 %92
  %94 = getelementptr inbounds i8, i8* %93, i64 1
  %95 = load %struct.conn*, %struct.conn** %2, align 8
  %96 = getelementptr inbounds %struct.conn, %struct.conn* %95, i32 0, i32 23
  %97 = load i8*, i8** %96, align 8
  %98 = bitcast i8* %97 to %struct._stritem*
  %99 = getelementptr inbounds %struct._stritem, %struct._stritem* %98, i32 0, i32 7
  %100 = load i16, i16* %99, align 2
  %101 = zext i16 %100 to i32
  %102 = and i32 %101, 256
  %103 = icmp ne i32 %102, 0
  %104 = zext i1 %103 to i64
  %105 = select i1 %103, i64 4, i64 0
  %106 = getelementptr inbounds i8, i8* %94, i64 %105
  %107 = load %struct.conn*, %struct.conn** %2, align 8
  %108 = getelementptr inbounds %struct.conn, %struct.conn* %107, i32 0, i32 23
  %109 = load i8*, i8** %108, align 8
  %110 = bitcast i8* %109 to %struct._stritem*
  %111 = getelementptr inbounds %struct._stritem, %struct._stritem* %110, i32 0, i32 7
  %112 = load i16, i16* %111, align 2
  %113 = zext i16 %112 to i32
  %114 = and i32 %113, 2
  %115 = icmp ne i32 %114, 0
  %116 = zext i1 %115 to i64
  %117 = select i1 %115, i64 8, i64 0
  %118 = getelementptr inbounds i8, i8* %106, i64 %117
  br label %119

119:                                              ; preds = %78, %77
  %120 = phi i8* [ null, %77 ], [ %118, %78 ]
  store i8* %120, i8** %9, align 8
  %121 = load i32, i32* %6, align 4
  %122 = load %struct.conn*, %struct.conn** %2, align 8
  %123 = getelementptr inbounds %struct.conn, %struct.conn* %122, i32 0, i32 23
  %124 = load i8*, i8** %123, align 8
  %125 = bitcast i8* %124 to %struct._stritem*
  %126 = getelementptr inbounds %struct._stritem, %struct._stritem* %125, i32 0, i32 5
  %127 = load i32, i32* %126, align 8
  %128 = icmp sgt i32 %121, %127
  br i1 %128, label %129, label %133

129:                                              ; preds = %119
  %130 = load %struct.conn*, %struct.conn** %2, align 8
  %131 = load i32, i32* %6, align 4
  call void @write_bin_error(%struct.conn* %130, i32 4, i8* null, i32 %131)
  %132 = load %struct.conn*, %struct.conn** %2, align 8
  call void @conn_set_state(%struct.conn* %132, i32 7)
  store i32 1, i32* %10, align 4
  br label %258

133:                                              ; preds = %119
  store i32 -1, i32* %11, align 4
  %134 = load %struct.conn*, %struct.conn** %2, align 8
  %135 = getelementptr inbounds %struct.conn, %struct.conn* %134, i32 0, i32 38
  %136 = load i16, i16* %135, align 8
  %137 = sext i16 %136 to i32
  switch i32 %137, label %165 [
    i32 33, label %138
    i32 34, label %149
  ]

138:                                              ; preds = %133
  store i32 1, i32* %11, align 4
  %139 = load i32, i32* %11, align 4
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %144, label %141

141:                                              ; preds = %138
  %142 = load i32, i32* %11, align 4
  %143 = icmp eq i32 %142, -1
  br label %144

144:                                              ; preds = %141, %138
  %145 = phi i1 [ true, %138 ], [ %143, %141 ]
  %146 = load %struct.conn*, %struct.conn** %2, align 8
  %147 = getelementptr inbounds %struct.conn, %struct.conn* %146, i32 0, i32 2
  %148 = zext i1 %145 to i8
  store i8 %148, i8* %147, align 4
  br label %177

149:                                              ; preds = %133
  %150 = load %struct.conn*, %struct.conn** %2, align 8
  %151 = getelementptr inbounds %struct.conn, %struct.conn* %150, i32 0, i32 2
  %152 = load i8, i8* %151, align 4
  %153 = trunc i8 %152 to i1
  br i1 %153, label %164, label %154

154:                                              ; preds = %149
  %155 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %156 = icmp ne i32 %155, 0
  br i1 %156, label %157, label %163

157:                                              ; preds = %154
  %158 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %159 = load %struct.conn*, %struct.conn** %2, align 8
  %160 = getelementptr inbounds %struct.conn, %struct.conn* %159, i32 0, i32 1
  %161 = load i32, i32* %160, align 8
  %162 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %158, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.21.1151, i64 0, i64 0), i32 %161)
  br label %163

163:                                              ; preds = %157, %154
  br label %177

164:                                              ; preds = %149
  store i32 1, i32* %11, align 4
  br label %177

165:                                              ; preds = %133
  %166 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %167 = icmp ne i32 %166, 0
  br i1 %167, label %168, label %176

168:                                              ; preds = %165
  %169 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %170 = load %struct.conn*, %struct.conn** %2, align 8
  %171 = getelementptr inbounds %struct.conn, %struct.conn* %170, i32 0, i32 38
  %172 = load i16, i16* %171, align 8
  %173 = sext i16 %172 to i32
  %174 = load i8*, i8** %9, align 8
  %175 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %169, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.22.1152, i64 0, i64 0), i32 %173, i8* %174)
  br label %176

176:                                              ; preds = %168, %165
  br label %177

177:                                              ; preds = %176, %164, %163, %144
  %178 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %179 = icmp ne i32 %178, 0
  br i1 %179, label %180, label %184

180:                                              ; preds = %177
  %181 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %182 = load i32, i32* %11, align 4
  %183 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %181, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.23.1153, i64 0, i64 0), i32 %182)
  br label %184

184:                                              ; preds = %180, %177
  %185 = load i32, i32* %11, align 4
  switch i32 %185, label %222 [
    i32 0, label %186
    i32 -1, label %209
  ]

186:                                              ; preds = %184
  %187 = load %struct.conn*, %struct.conn** %2, align 8
  %188 = getelementptr inbounds %struct.conn, %struct.conn* %187, i32 0, i32 3
  store i8 1, i8* %188, align 1
  %189 = load %struct.conn*, %struct.conn** %2, align 8
  call void @write_bin_response(%struct.conn* %189, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.24.1154, i64 0, i64 0), i32 0, i32 0, i32 13)
  %190 = load %struct.conn*, %struct.conn** %2, align 8
  %191 = getelementptr inbounds %struct.conn, %struct.conn* %190, i32 0, i32 42
  %192 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %191, align 8
  %193 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %192, i32 0, i32 4
  %194 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %193, i32 0, i32 0
  %195 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %194) #14
  %196 = load %struct.conn*, %struct.conn** %2, align 8
  %197 = getelementptr inbounds %struct.conn, %struct.conn* %196, i32 0, i32 42
  %198 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %197, align 8
  %199 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %198, i32 0, i32 4
  %200 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %199, i32 0, i32 16
  %201 = load i64, i64* %200, align 8
  %202 = add i64 %201, 1
  store i64 %202, i64* %200, align 8
  %203 = load %struct.conn*, %struct.conn** %2, align 8
  %204 = getelementptr inbounds %struct.conn, %struct.conn* %203, i32 0, i32 42
  %205 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %204, align 8
  %206 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %205, i32 0, i32 4
  %207 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %206, i32 0, i32 0
  %208 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %207) #14
  br label %257

209:                                              ; preds = %184
  %210 = load %struct.conn*, %struct.conn** %2, align 8
  %211 = load i32, i32* %4, align 4
  call void @add_bin_header(%struct.conn* %210, i16 zeroext 33, i8 zeroext 0, i16 zeroext 0, i32 %211)
  %212 = load i32, i32* %4, align 4
  %213 = icmp ugt i32 %212, 0
  br i1 %213, label %214, label %220

214:                                              ; preds = %209
  %215 = load %struct.conn*, %struct.conn** %2, align 8
  %216 = getelementptr inbounds %struct.conn, %struct.conn* %215, i32 0, i32 19
  %217 = load %struct._mc_resp*, %struct._mc_resp** %216, align 8
  %218 = load i8*, i8** %3, align 8
  %219 = load i32, i32* %4, align 4
  call void @resp_add_iov(%struct._mc_resp* %217, i8* %218, i32 %219)
  br label %220

220:                                              ; preds = %214, %209
  %221 = load %struct.conn*, %struct.conn** %2, align 8
  call void @conn_set_state(%struct.conn* %221, i32 9)
  br label %257

222:                                              ; preds = %184
  %223 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %224 = icmp ne i32 %223, 0
  br i1 %224, label %225, label %229

225:                                              ; preds = %222
  %226 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %227 = load i32, i32* %11, align 4
  %228 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %226, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.25.1155, i64 0, i64 0), i32 %227)
  br label %229

229:                                              ; preds = %225, %222
  %230 = load %struct.conn*, %struct.conn** %2, align 8
  call void @write_bin_error(%struct.conn* %230, i32 32, i8* null, i32 0)
  %231 = load %struct.conn*, %struct.conn** %2, align 8
  %232 = getelementptr inbounds %struct.conn, %struct.conn* %231, i32 0, i32 42
  %233 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %232, align 8
  %234 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %233, i32 0, i32 4
  %235 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %234, i32 0, i32 0
  %236 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %235) #14
  %237 = load %struct.conn*, %struct.conn** %2, align 8
  %238 = getelementptr inbounds %struct.conn, %struct.conn* %237, i32 0, i32 42
  %239 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %238, align 8
  %240 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %239, i32 0, i32 4
  %241 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %240, i32 0, i32 16
  %242 = load i64, i64* %241, align 8
  %243 = add i64 %242, 1
  store i64 %243, i64* %241, align 8
  %244 = load %struct.conn*, %struct.conn** %2, align 8
  %245 = getelementptr inbounds %struct.conn, %struct.conn* %244, i32 0, i32 42
  %246 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %245, align 8
  %247 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %246, i32 0, i32 4
  %248 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %247, i32 0, i32 17
  %249 = load i64, i64* %248, align 8
  %250 = add i64 %249, 1
  store i64 %250, i64* %248, align 8
  %251 = load %struct.conn*, %struct.conn** %2, align 8
  %252 = getelementptr inbounds %struct.conn, %struct.conn* %251, i32 0, i32 42
  %253 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %252, align 8
  %254 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %253, i32 0, i32 4
  %255 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %254, i32 0, i32 0
  %256 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %255) #14
  br label %257

257:                                              ; preds = %229, %220, %186
  store i32 0, i32* %10, align 4
  br label %258

258:                                              ; preds = %257, %129
  %259 = load i8*, i8** %7, align 8
  call void @llvm.stackrestore(i8* %259)
  %260 = load i32, i32* %10, align 4
  switch i32 %260, label %262 [
    i32 0, label %261
    i32 1, label %261
  ]

261:                                              ; preds = %35, %258, %258
  ret void

262:                                              ; preds = %258
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @init_sasl_conn(%struct.conn* %0) #0 {
  %2 = alloca %struct.conn*, align 8
  %3 = alloca i32, align 4
  store %struct.conn* %0, %struct.conn** %2, align 8
  %4 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 26), align 4
  %5 = trunc i8 %4 to i1
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  br label %27

7:                                                ; preds = %1
  %8 = load %struct.conn*, %struct.conn** %2, align 8
  %9 = getelementptr inbounds %struct.conn, %struct.conn* %8, i32 0, i32 3
  store i8 0, i8* %9, align 1
  %10 = load %struct.conn*, %struct.conn** %2, align 8
  %11 = getelementptr inbounds %struct.conn, %struct.conn* %10, i32 0, i32 0
  %12 = load i8**, i8*** %11, align 8
  %13 = icmp ne i8** %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %7
  store i32 1, i32* %3, align 4
  %15 = load i32, i32* %3, align 4
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %17, label %26

17:                                               ; preds = %14
  %18 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %19 = icmp ne i32 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %17
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %22 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %21, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.26.1172, i64 0, i64 0))
  br label %23

23:                                               ; preds = %20, %17
  %24 = load %struct.conn*, %struct.conn** %2, align 8
  %25 = getelementptr inbounds %struct.conn, %struct.conn* %24, i32 0, i32 0
  store i8** null, i8*** %25, align 8
  br label %26

26:                                               ; preds = %23, %14
  br label %27

27:                                               ; preds = %6, %26, %7
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @write_bin_error(%struct.conn* %0, i32 %1, i8* %2, i32 %3) #0 {
  %5 = alloca %struct.conn*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  store %struct.conn* %0, %struct.conn** %5, align 8
  store i32 %1, i32* %6, align 4
  store i8* %2, i8** %7, align 8
  store i32 %3, i32* %8, align 4
  %10 = load i8*, i8** %7, align 8
  %11 = icmp ne i8* %10, null
  br i1 %11, label %31, label %12

12:                                               ; preds = %4
  %13 = load i32, i32* %6, align 4
  switch i32 %13, label %23 [
    i32 130, label %14
    i32 129, label %15
    i32 1, label %16
    i32 4, label %17
    i32 2, label %18
    i32 3, label %19
    i32 6, label %20
    i32 5, label %21
    i32 32, label %22
  ]

14:                                               ; preds = %12
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.1160, i64 0, i64 0), i8** %7, align 8
  br label %30

15:                                               ; preds = %12
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.7.1161, i64 0, i64 0), i8** %7, align 8
  br label %30

16:                                               ; preds = %12
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8.1162, i64 0, i64 0), i8** %7, align 8
  br label %30

17:                                               ; preds = %12
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9.1163, i64 0, i64 0), i8** %7, align 8
  br label %30

18:                                               ; preds = %12
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10.1164, i64 0, i64 0), i8** %7, align 8
  br label %30

19:                                               ; preds = %12
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11.1165, i64 0, i64 0), i8** %7, align 8
  br label %30

20:                                               ; preds = %12
  store i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.12.1166, i64 0, i64 0), i8** %7, align 8
  br label %30

21:                                               ; preds = %12
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.13.1167, i64 0, i64 0), i8** %7, align 8
  br label %30

22:                                               ; preds = %12
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.14.1168, i64 0, i64 0), i8** %7, align 8
  br label %30

23:                                               ; preds = %12
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15.1169, i64 0, i64 0), i8** %7, align 8
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %25 = load %struct.conn*, %struct.conn** %5, align 8
  %26 = getelementptr inbounds %struct.conn, %struct.conn* %25, i32 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = load i32, i32* %6, align 4
  %29 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %24, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.16.1170, i64 0, i64 0), i32 %27, i32 %28)
  br label %30

30:                                               ; preds = %23, %22, %21, %20, %19, %18, %17, %16, %15, %14
  br label %31

31:                                               ; preds = %30, %4
  %32 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %33 = icmp sgt i32 %32, 1
  br i1 %33, label %34, label %41

34:                                               ; preds = %31
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %36 = load %struct.conn*, %struct.conn** %5, align 8
  %37 = getelementptr inbounds %struct.conn, %struct.conn* %36, i32 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = load i8*, i8** %7, align 8
  %40 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %35, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.17.1171, i64 0, i64 0), i32 %38, i8* %39)
  br label %41

41:                                               ; preds = %34, %31
  %42 = load i8*, i8** %7, align 8
  %43 = call i64 @strlen(i8* %42) #16
  store i64 %43, i64* %9, align 8
  %44 = load %struct.conn*, %struct.conn** %5, align 8
  %45 = load i32, i32* %6, align 4
  %46 = trunc i32 %45 to i16
  %47 = load i64, i64* %9, align 8
  %48 = trunc i64 %47 to i32
  call void @add_bin_header(%struct.conn* %44, i16 zeroext %46, i8 zeroext 0, i16 zeroext 0, i32 %48)
  %49 = load i64, i64* %9, align 8
  %50 = icmp ugt i64 %49, 0
  br i1 %50, label %51, label %58

51:                                               ; preds = %41
  %52 = load %struct.conn*, %struct.conn** %5, align 8
  %53 = getelementptr inbounds %struct.conn, %struct.conn* %52, i32 0, i32 19
  %54 = load %struct._mc_resp*, %struct._mc_resp** %53, align 8
  %55 = load i8*, i8** %7, align 8
  %56 = load i64, i64* %9, align 8
  %57 = trunc i64 %56 to i32
  call void @resp_add_iov(%struct._mc_resp* %54, i8* %55, i32 %57)
  br label %58

58:                                               ; preds = %51, %41
  %59 = load i32, i32* %8, align 4
  %60 = icmp sgt i32 %59, 0
  br i1 %60, label %61, label %66

61:                                               ; preds = %58
  %62 = load i32, i32* %8, align 4
  %63 = load %struct.conn*, %struct.conn** %5, align 8
  %64 = getelementptr inbounds %struct.conn, %struct.conn* %63, i32 0, i32 24
  store i32 %62, i32* %64, align 8
  %65 = load %struct.conn*, %struct.conn** %5, align 8
  call void @conn_set_state(%struct.conn* %65, i32 7)
  br label %68

66:                                               ; preds = %58
  %67 = load %struct.conn*, %struct.conn** %5, align 8
  call void @conn_set_state(%struct.conn* %67, i32 9)
  br label %68

68:                                               ; preds = %66, %61
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @write_bin_response(%struct.conn* %0, i8* %1, i32 %2, i32 %3, i32 %4) #0 {
  %6 = alloca %struct.conn*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct._mc_resp*, align 8
  store %struct.conn* %0, %struct.conn** %6, align 8
  store i8* %1, i8** %7, align 8
  store i32 %2, i32* %8, align 4
  store i32 %3, i32* %9, align 4
  store i32 %4, i32* %10, align 4
  %12 = load %struct.conn*, %struct.conn** %6, align 8
  %13 = getelementptr inbounds %struct.conn, %struct.conn* %12, i32 0, i32 34
  %14 = load i8, i8* %13, align 4
  %15 = trunc i8 %14 to i1
  br i1 %15, label %16, label %28

16:                                               ; preds = %5
  %17 = load %struct.conn*, %struct.conn** %6, align 8
  %18 = getelementptr inbounds %struct.conn, %struct.conn* %17, i32 0, i32 38
  %19 = load i16, i16* %18, align 8
  %20 = sext i16 %19 to i32
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %28, label %22

22:                                               ; preds = %16
  %23 = load %struct.conn*, %struct.conn** %6, align 8
  %24 = getelementptr inbounds %struct.conn, %struct.conn* %23, i32 0, i32 38
  %25 = load i16, i16* %24, align 8
  %26 = sext i16 %25 to i32
  %27 = icmp eq i32 %26, 12
  br i1 %27, label %28, label %45

28:                                               ; preds = %22, %16, %5
  %29 = load %struct.conn*, %struct.conn** %6, align 8
  %30 = load i32, i32* %8, align 4
  %31 = trunc i32 %30 to i8
  %32 = load i32, i32* %9, align 4
  %33 = trunc i32 %32 to i16
  %34 = load i32, i32* %10, align 4
  call void @add_bin_header(%struct.conn* %29, i16 zeroext 0, i8 zeroext %31, i16 zeroext %33, i32 %34)
  %35 = load %struct.conn*, %struct.conn** %6, align 8
  %36 = getelementptr inbounds %struct.conn, %struct.conn* %35, i32 0, i32 19
  %37 = load %struct._mc_resp*, %struct._mc_resp** %36, align 8
  store %struct._mc_resp* %37, %struct._mc_resp** %11, align 8
  %38 = load i32, i32* %10, align 4
  %39 = icmp sgt i32 %38, 0
  br i1 %39, label %40, label %44

40:                                               ; preds = %28
  %41 = load %struct._mc_resp*, %struct._mc_resp** %11, align 8
  %42 = load i8*, i8** %7, align 8
  %43 = load i32, i32* %10, align 4
  call void @resp_add_iov(%struct._mc_resp* %41, i8* %42, i32 %43)
  br label %44

44:                                               ; preds = %40, %28
  br label %45

45:                                               ; preds = %44, %22
  %46 = load %struct.conn*, %struct.conn** %6, align 8
  call void @conn_set_state(%struct.conn* %46, i32 1)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @add_bin_header(%struct.conn* %0, i16 zeroext %1, i8 zeroext %2, i16 zeroext %3, i32 %4) #0 {
  %6 = alloca %struct.conn*, align 8
  %7 = alloca i16, align 2
  %8 = alloca i8, align 1
  %9 = alloca i16, align 2
  %10 = alloca i32, align 4
  %11 = alloca %union.protocol_binary_request_header*, align 8
  %12 = alloca %struct._mc_resp*, align 8
  %13 = alloca i32, align 4
  store %struct.conn* %0, %struct.conn** %6, align 8
  store i16 %1, i16* %7, align 2
  store i8 %2, i8* %8, align 1
  store i16 %3, i16* %9, align 2
  store i32 %4, i32* %10, align 4
  %14 = load %struct.conn*, %struct.conn** %6, align 8
  %15 = getelementptr inbounds %struct.conn, %struct.conn* %14, i32 0, i32 19
  %16 = load %struct._mc_resp*, %struct._mc_resp** %15, align 8
  store %struct._mc_resp* %16, %struct._mc_resp** %12, align 8
  %17 = load %struct._mc_resp*, %struct._mc_resp** %12, align 8
  call void @resp_reset(%struct._mc_resp* %17)
  %18 = load %struct._mc_resp*, %struct._mc_resp** %12, align 8
  %19 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %18, i32 0, i32 18
  %20 = getelementptr inbounds [1024 x i8], [1024 x i8]* %19, i64 0, i64 0
  %21 = bitcast i8* %20 to %union.protocol_binary_request_header*
  store %union.protocol_binary_request_header* %21, %union.protocol_binary_request_header** %11, align 8
  %22 = load %union.protocol_binary_request_header*, %union.protocol_binary_request_header** %11, align 8
  %23 = bitcast %union.protocol_binary_request_header* %22 to %struct.anon.13*
  %24 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %23, i32 0, i32 0
  store i8 -127, i8* %24, align 8
  %25 = load %struct.conn*, %struct.conn** %6, align 8
  %26 = getelementptr inbounds %struct.conn, %struct.conn* %25, i32 0, i32 36
  %27 = bitcast %union.protocol_binary_request_header* %26 to %struct.anon.13*
  %28 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %27, i32 0, i32 1
  %29 = load i8, i8* %28, align 1
  %30 = load %union.protocol_binary_request_header*, %union.protocol_binary_request_header** %11, align 8
  %31 = bitcast %union.protocol_binary_request_header* %30 to %struct.anon.13*
  %32 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %31, i32 0, i32 1
  store i8 %29, i8* %32, align 1
  %33 = load i16, i16* %9, align 2
  %34 = call zeroext i16 @htons(i16 zeroext %33) #15
  %35 = load %union.protocol_binary_request_header*, %union.protocol_binary_request_header** %11, align 8
  %36 = bitcast %union.protocol_binary_request_header* %35 to %struct.anon.13*
  %37 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %36, i32 0, i32 2
  store i16 %34, i16* %37, align 2
  %38 = load i8, i8* %8, align 1
  %39 = load %union.protocol_binary_request_header*, %union.protocol_binary_request_header** %11, align 8
  %40 = bitcast %union.protocol_binary_request_header* %39 to %struct.anon.13*
  %41 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %40, i32 0, i32 3
  store i8 %38, i8* %41, align 4
  %42 = load %union.protocol_binary_request_header*, %union.protocol_binary_request_header** %11, align 8
  %43 = bitcast %union.protocol_binary_request_header* %42 to %struct.anon.13*
  %44 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %43, i32 0, i32 4
  store i8 0, i8* %44, align 1
  %45 = load i16, i16* %7, align 2
  %46 = call zeroext i16 @htons(i16 zeroext %45) #15
  %47 = load %union.protocol_binary_request_header*, %union.protocol_binary_request_header** %11, align 8
  %48 = bitcast %union.protocol_binary_request_header* %47 to %struct.anon.13*
  %49 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %48, i32 0, i32 5
  store i16 %46, i16* %49, align 2
  %50 = load i32, i32* %10, align 4
  %51 = call i32 @htonl(i32 %50) #15
  %52 = load %union.protocol_binary_request_header*, %union.protocol_binary_request_header** %11, align 8
  %53 = bitcast %union.protocol_binary_request_header* %52 to %struct.anon.13*
  %54 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %53, i32 0, i32 6
  store i32 %51, i32* %54, align 8
  %55 = load %struct.conn*, %struct.conn** %6, align 8
  %56 = getelementptr inbounds %struct.conn, %struct.conn* %55, i32 0, i32 39
  %57 = load i32, i32* %56, align 4
  %58 = load %union.protocol_binary_request_header*, %union.protocol_binary_request_header** %11, align 8
  %59 = bitcast %union.protocol_binary_request_header* %58 to %struct.anon.13*
  %60 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %59, i32 0, i32 7
  store i32 %57, i32* %60, align 4
  %61 = load %struct.conn*, %struct.conn** %6, align 8
  %62 = getelementptr inbounds %struct.conn, %struct.conn* %61, i32 0, i32 37
  %63 = load i64, i64* %62, align 8
  %64 = call i64 @htonll(i64 %63)
  %65 = load %union.protocol_binary_request_header*, %union.protocol_binary_request_header** %11, align 8
  %66 = bitcast %union.protocol_binary_request_header* %65 to %struct.anon.13*
  %67 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %66, i32 0, i32 8
  store i64 %64, i64* %67, align 8
  %68 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %69 = icmp sgt i32 %68, 1
  br i1 %69, label %70, label %106

70:                                               ; preds = %5
  %71 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %72 = load %struct.conn*, %struct.conn** %6, align 8
  %73 = getelementptr inbounds %struct.conn, %struct.conn* %72, i32 0, i32 1
  %74 = load i32, i32* %73, align 8
  %75 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %71, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.18.1156, i64 0, i64 0), i32 %74)
  store i32 0, i32* %13, align 4
  br label %76

76:                                               ; preds = %100, %70
  %77 = load i32, i32* %13, align 4
  %78 = sext i32 %77 to i64
  %79 = icmp ult i64 %78, 24
  br i1 %79, label %80, label %103

80:                                               ; preds = %76
  %81 = load i32, i32* %13, align 4
  %82 = srem i32 %81, 4
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %90

84:                                               ; preds = %80
  %85 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %86 = load %struct.conn*, %struct.conn** %6, align 8
  %87 = getelementptr inbounds %struct.conn, %struct.conn* %86, i32 0, i32 1
  %88 = load i32, i32* %87, align 8
  %89 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %85, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.19.1157, i64 0, i64 0), i32 %88)
  br label %90

90:                                               ; preds = %84, %80
  %91 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %92 = load %union.protocol_binary_request_header*, %union.protocol_binary_request_header** %11, align 8
  %93 = bitcast %union.protocol_binary_request_header* %92 to [24 x i8]*
  %94 = load i32, i32* %13, align 4
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds [24 x i8], [24 x i8]* %93, i64 0, i64 %95
  %97 = load i8, i8* %96, align 1
  %98 = zext i8 %97 to i32
  %99 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %91, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3.1158, i64 0, i64 0), i32 %98)
  br label %100

100:                                              ; preds = %90
  %101 = load i32, i32* %13, align 4
  %102 = add nsw i32 %101, 1
  store i32 %102, i32* %13, align 4
  br label %76, !llvm.loop !172

103:                                              ; preds = %76
  %104 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %105 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %104, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.1159, i64 0, i64 0))
  br label %106

106:                                              ; preds = %103, %5
  %107 = load %struct._mc_resp*, %struct._mc_resp** %12, align 8
  %108 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %107, i32 0, i32 2
  store i32 24, i32* %108, align 8
  %109 = load %struct._mc_resp*, %struct._mc_resp** %12, align 8
  %110 = load %struct._mc_resp*, %struct._mc_resp** %12, align 8
  %111 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %110, i32 0, i32 18
  %112 = getelementptr inbounds [1024 x i8], [1024 x i8]* %111, i64 0, i64 0
  %113 = load %struct._mc_resp*, %struct._mc_resp** %12, align 8
  %114 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %113, i32 0, i32 2
  %115 = load i32, i32* %114, align 8
  call void @resp_add_iov(%struct._mc_resp* %109, i8* %112, i32 %115)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @try_read_command_binary(%struct.conn* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.conn*, align 8
  %4 = alloca %union.protocol_binary_request_header*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  %7 = alloca i16, align 2
  %8 = alloca [48 x i8], align 16
  store %struct.conn* %0, %struct.conn** %3, align 8
  %9 = load %struct.conn*, %struct.conn** %3, align 8
  %10 = getelementptr inbounds %struct.conn, %struct.conn* %9, i32 0, i32 18
  %11 = load i32, i32* %10, align 4
  %12 = sext i32 %11 to i64
  %13 = icmp ult i64 %12, 24
  br i1 %13, label %14, label %15

14:                                               ; preds = %1
  store i32 0, i32* %2, align 4
  br label %215

15:                                               ; preds = %1
  %16 = load %struct.conn*, %struct.conn** %3, align 8
  %17 = getelementptr inbounds %struct.conn, %struct.conn* %16, i32 0, i32 36
  %18 = bitcast %union.protocol_binary_request_header* %17 to i8*
  %19 = load %struct.conn*, %struct.conn** %3, align 8
  %20 = getelementptr inbounds %struct.conn, %struct.conn* %19, i32 0, i32 16
  %21 = load i8*, i8** %20, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 1 %21, i64 24, i1 false)
  %22 = load %struct.conn*, %struct.conn** %3, align 8
  %23 = getelementptr inbounds %struct.conn, %struct.conn* %22, i32 0, i32 36
  store %union.protocol_binary_request_header* %23, %union.protocol_binary_request_header** %4, align 8
  %24 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %25 = icmp sgt i32 %24, 1
  br i1 %25, label %26, label %62

26:                                               ; preds = %15
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %28 = load %struct.conn*, %struct.conn** %3, align 8
  %29 = getelementptr inbounds %struct.conn, %struct.conn* %28, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %27, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1.1175, i64 0, i64 0), i32 %30)
  store i32 0, i32* %5, align 4
  br label %32

32:                                               ; preds = %56, %26
  %33 = load i32, i32* %5, align 4
  %34 = sext i32 %33 to i64
  %35 = icmp ult i64 %34, 24
  br i1 %35, label %36, label %59

36:                                               ; preds = %32
  %37 = load i32, i32* %5, align 4
  %38 = srem i32 %37, 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %46

40:                                               ; preds = %36
  %41 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %42 = load %struct.conn*, %struct.conn** %3, align 8
  %43 = getelementptr inbounds %struct.conn, %struct.conn* %42, i32 0, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %41, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2.1176, i64 0, i64 0), i32 %44)
  br label %46

46:                                               ; preds = %40, %36
  %47 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %48 = load %union.protocol_binary_request_header*, %union.protocol_binary_request_header** %4, align 8
  %49 = bitcast %union.protocol_binary_request_header* %48 to [24 x i8]*
  %50 = load i32, i32* %5, align 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds [24 x i8], [24 x i8]* %49, i64 0, i64 %51
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i32
  %55 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %47, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3.1158, i64 0, i64 0), i32 %54)
  br label %56

56:                                               ; preds = %46
  %57 = load i32, i32* %5, align 4
  %58 = add nsw i32 %57, 1
  store i32 %58, i32* %5, align 4
  br label %32, !llvm.loop !173

59:                                               ; preds = %32
  %60 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %61 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %60, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.1159, i64 0, i64 0))
  br label %62

62:                                               ; preds = %59, %15
  %63 = load %struct.conn*, %struct.conn** %3, align 8
  %64 = getelementptr inbounds %struct.conn, %struct.conn* %63, i32 0, i32 36
  %65 = load %union.protocol_binary_request_header*, %union.protocol_binary_request_header** %4, align 8
  %66 = bitcast %union.protocol_binary_request_header* %64 to i8*
  %67 = bitcast %union.protocol_binary_request_header* %65 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %66, i8* align 8 %67, i64 24, i1 false)
  %68 = load %union.protocol_binary_request_header*, %union.protocol_binary_request_header** %4, align 8
  %69 = bitcast %union.protocol_binary_request_header* %68 to %struct.anon.13*
  %70 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %69, i32 0, i32 2
  %71 = load i16, i16* %70, align 2
  %72 = call zeroext i16 @ntohs(i16 zeroext %71) #15
  %73 = load %struct.conn*, %struct.conn** %3, align 8
  %74 = getelementptr inbounds %struct.conn, %struct.conn* %73, i32 0, i32 36
  %75 = bitcast %union.protocol_binary_request_header* %74 to %struct.anon.13*
  %76 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %75, i32 0, i32 2
  store i16 %72, i16* %76, align 2
  %77 = load %union.protocol_binary_request_header*, %union.protocol_binary_request_header** %4, align 8
  %78 = bitcast %union.protocol_binary_request_header* %77 to %struct.anon.13*
  %79 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %78, i32 0, i32 6
  %80 = load i32, i32* %79, align 8
  %81 = call i32 @ntohl(i32 %80) #15
  %82 = load %struct.conn*, %struct.conn** %3, align 8
  %83 = getelementptr inbounds %struct.conn, %struct.conn* %82, i32 0, i32 36
  %84 = bitcast %union.protocol_binary_request_header* %83 to %struct.anon.13*
  %85 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %84, i32 0, i32 6
  store i32 %81, i32* %85, align 8
  %86 = load %union.protocol_binary_request_header*, %union.protocol_binary_request_header** %4, align 8
  %87 = bitcast %union.protocol_binary_request_header* %86 to %struct.anon.13*
  %88 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %87, i32 0, i32 8
  %89 = load i64, i64* %88, align 8
  %90 = call i64 @ntohll(i64 %89)
  %91 = load %struct.conn*, %struct.conn** %3, align 8
  %92 = getelementptr inbounds %struct.conn, %struct.conn* %91, i32 0, i32 36
  %93 = bitcast %union.protocol_binary_request_header* %92 to %struct.anon.13*
  %94 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %93, i32 0, i32 8
  store i64 %90, i64* %94, align 8
  %95 = load %struct.conn*, %struct.conn** %3, align 8
  %96 = getelementptr inbounds %struct.conn, %struct.conn* %95, i32 0, i32 36
  %97 = bitcast %union.protocol_binary_request_header* %96 to %struct.anon.13*
  %98 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %97, i32 0, i32 0
  %99 = load i8, i8* %98, align 8
  %100 = zext i8 %99 to i32
  %101 = icmp ne i32 %100, 128
  br i1 %101, label %102, label %116

102:                                              ; preds = %62
  %103 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %104 = icmp ne i32 %103, 0
  br i1 %104, label %105, label %114

105:                                              ; preds = %102
  %106 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %107 = load %struct.conn*, %struct.conn** %3, align 8
  %108 = getelementptr inbounds %struct.conn, %struct.conn* %107, i32 0, i32 36
  %109 = bitcast %union.protocol_binary_request_header* %108 to %struct.anon.13*
  %110 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %109, i32 0, i32 0
  %111 = load i8, i8* %110, align 8
  %112 = zext i8 %111 to i32
  %113 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %106, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.1177, i64 0, i64 0), i32 %112)
  br label %114

114:                                              ; preds = %105, %102
  %115 = load %struct.conn*, %struct.conn** %3, align 8
  call void @conn_set_state(%struct.conn* %115, i32 8)
  store i32 -1, i32* %2, align 4
  br label %215

116:                                              ; preds = %62
  %117 = load %struct.conn*, %struct.conn** %3, align 8
  %118 = getelementptr inbounds %struct.conn, %struct.conn* %117, i32 0, i32 36
  %119 = bitcast %union.protocol_binary_request_header* %118 to %struct.anon.13*
  %120 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %119, i32 0, i32 3
  %121 = load i8, i8* %120, align 4
  store i8 %121, i8* %6, align 1
  %122 = load %struct.conn*, %struct.conn** %3, align 8
  %123 = getelementptr inbounds %struct.conn, %struct.conn* %122, i32 0, i32 36
  %124 = bitcast %union.protocol_binary_request_header* %123 to %struct.anon.13*
  %125 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %124, i32 0, i32 2
  %126 = load i16, i16* %125, align 2
  store i16 %126, i16* %7, align 2
  %127 = load %struct.conn*, %struct.conn** %3, align 8
  %128 = getelementptr inbounds %struct.conn, %struct.conn* %127, i32 0, i32 18
  %129 = load i32, i32* %128, align 4
  %130 = sext i32 %129 to i64
  %131 = load i16, i16* %7, align 2
  %132 = zext i16 %131 to i32
  %133 = load i8, i8* %6, align 1
  %134 = zext i8 %133 to i32
  %135 = add nsw i32 %132, %134
  %136 = sext i32 %135 to i64
  %137 = add i64 %136, 24
  %138 = icmp ult i64 %130, %137
  br i1 %138, label %139, label %140

139:                                              ; preds = %116
  store i32 0, i32* %2, align 4
  br label %215

140:                                              ; preds = %116
  %141 = load %struct.conn*, %struct.conn** %3, align 8
  %142 = call zeroext i1 @resp_start(%struct.conn* %141)
  br i1 %142, label %145, label %143

143:                                              ; preds = %140
  %144 = load %struct.conn*, %struct.conn** %3, align 8
  call void @conn_set_state(%struct.conn* %144, i32 8)
  store i32 -1, i32* %2, align 4
  br label %215

145:                                              ; preds = %140
  %146 = load %struct.conn*, %struct.conn** %3, align 8
  %147 = getelementptr inbounds %struct.conn, %struct.conn* %146, i32 0, i32 36
  %148 = bitcast %union.protocol_binary_request_header* %147 to %struct.anon.13*
  %149 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %148, i32 0, i32 1
  %150 = load i8, i8* %149, align 1
  %151 = zext i8 %150 to i16
  %152 = load %struct.conn*, %struct.conn** %3, align 8
  %153 = getelementptr inbounds %struct.conn, %struct.conn* %152, i32 0, i32 38
  store i16 %151, i16* %153, align 8
  %154 = load %struct.conn*, %struct.conn** %3, align 8
  %155 = getelementptr inbounds %struct.conn, %struct.conn* %154, i32 0, i32 36
  %156 = bitcast %union.protocol_binary_request_header* %155 to %struct.anon.13*
  %157 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %156, i32 0, i32 2
  %158 = load i16, i16* %157, align 2
  %159 = zext i16 %158 to i32
  %160 = load %struct.conn*, %struct.conn** %3, align 8
  %161 = getelementptr inbounds %struct.conn, %struct.conn* %160, i32 0, i32 40
  store i32 %159, i32* %161, align 8
  %162 = load %struct.conn*, %struct.conn** %3, align 8
  %163 = getelementptr inbounds %struct.conn, %struct.conn* %162, i32 0, i32 36
  %164 = bitcast %union.protocol_binary_request_header* %163 to %struct.anon.13*
  %165 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %164, i32 0, i32 7
  %166 = load i32, i32* %165, align 4
  %167 = load %struct.conn*, %struct.conn** %3, align 8
  %168 = getelementptr inbounds %struct.conn, %struct.conn* %167, i32 0, i32 39
  store i32 %166, i32* %168, align 4
  %169 = load %struct.conn*, %struct.conn** %3, align 8
  %170 = getelementptr inbounds %struct.conn, %struct.conn* %169, i32 0, i32 37
  store i64 0, i64* %170, align 8
  %171 = load volatile i32, i32* @current_time, align 4
  %172 = load %struct.conn*, %struct.conn** %3, align 8
  %173 = getelementptr inbounds %struct.conn, %struct.conn* %172, i32 0, i32 11
  store i32 %171, i32* %173, align 4
  %174 = getelementptr inbounds [48 x i8], [48 x i8]* %8, i64 0, i64 0
  %175 = getelementptr inbounds i8, i8* %174, i64 24
  %176 = load %struct.conn*, %struct.conn** %3, align 8
  %177 = getelementptr inbounds %struct.conn, %struct.conn* %176, i32 0, i32 16
  %178 = load i8*, i8** %177, align 8
  %179 = getelementptr inbounds i8, i8* %178, i64 24
  %180 = load i8, i8* %6, align 1
  %181 = zext i8 %180 to i32
  %182 = icmp sgt i32 %181, 20
  br i1 %182, label %183, label %184

183:                                              ; preds = %145
  br label %187

184:                                              ; preds = %145
  %185 = load i8, i8* %6, align 1
  %186 = zext i8 %185 to i32
  br label %187

187:                                              ; preds = %184, %183
  %188 = phi i32 [ 20, %183 ], [ %186, %184 ]
  %189 = sext i32 %188 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %175, i8* align 1 %179, i64 %189, i1 false)
  %190 = load i8, i8* %6, align 1
  %191 = zext i8 %190 to i64
  %192 = add i64 24, %191
  %193 = load i16, i16* %7, align 2
  %194 = zext i16 %193 to i64
  %195 = add i64 %192, %194
  %196 = load %struct.conn*, %struct.conn** %3, align 8
  %197 = getelementptr inbounds %struct.conn, %struct.conn* %196, i32 0, i32 18
  %198 = load i32, i32* %197, align 4
  %199 = sext i32 %198 to i64
  %200 = sub i64 %199, %195
  %201 = trunc i64 %200 to i32
  store i32 %201, i32* %197, align 4
  %202 = load i8, i8* %6, align 1
  %203 = zext i8 %202 to i64
  %204 = add i64 24, %203
  %205 = load i16, i16* %7, align 2
  %206 = zext i16 %205 to i64
  %207 = add i64 %204, %206
  %208 = load %struct.conn*, %struct.conn** %3, align 8
  %209 = getelementptr inbounds %struct.conn, %struct.conn* %208, i32 0, i32 16
  %210 = load i8*, i8** %209, align 8
  %211 = getelementptr inbounds i8, i8* %210, i64 %207
  store i8* %211, i8** %209, align 8
  %212 = load %struct.conn*, %struct.conn** %3, align 8
  %213 = getelementptr inbounds [48 x i8], [48 x i8]* %8, i64 0, i64 0
  call void @dispatch_bin_command(%struct.conn* %212, i8* %213)
  br label %214

214:                                              ; preds = %187
  store i32 1, i32* %2, align 4
  br label %215

215:                                              ; preds = %214, %143, %139, %114, %14
  %216 = load i32, i32* %2, align 4
  ret i32 %216
}

; Function Attrs: nounwind readnone willreturn
declare dso_local i32 @ntohl(i32) #5

; Function Attrs: noinline nounwind optnone uwtable
define internal void @dispatch_bin_command(%struct.conn* %0, i8* %1) #0 {
  %3 = alloca %struct.conn*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  %7 = alloca i16, align 2
  %8 = alloca i32, align 4
  store %struct.conn* %0, %struct.conn** %3, align 8
  store i8* %1, i8** %4, align 8
  store i32 0, i32* %5, align 4
  %9 = load %struct.conn*, %struct.conn** %3, align 8
  %10 = getelementptr inbounds %struct.conn, %struct.conn* %9, i32 0, i32 36
  %11 = bitcast %union.protocol_binary_request_header* %10 to %struct.anon.13*
  %12 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %11, i32 0, i32 3
  %13 = load i8, i8* %12, align 4
  store i8 %13, i8* %6, align 1
  %14 = load %struct.conn*, %struct.conn** %3, align 8
  %15 = getelementptr inbounds %struct.conn, %struct.conn* %14, i32 0, i32 36
  %16 = bitcast %union.protocol_binary_request_header* %15 to %struct.anon.13*
  %17 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %16, i32 0, i32 2
  %18 = load i16, i16* %17, align 2
  store i16 %18, i16* %7, align 2
  %19 = load %struct.conn*, %struct.conn** %3, align 8
  %20 = getelementptr inbounds %struct.conn, %struct.conn* %19, i32 0, i32 36
  %21 = bitcast %union.protocol_binary_request_header* %20 to %struct.anon.13*
  %22 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %21, i32 0, i32 6
  %23 = load i32, i32* %22, align 8
  store i32 %23, i32* %8, align 4
  %24 = load i16, i16* %7, align 2
  %25 = zext i16 %24 to i32
  %26 = load i32, i32* %8, align 4
  %27 = icmp ugt i32 %25, %26
  br i1 %27, label %36, label %28

28:                                               ; preds = %2
  %29 = load i16, i16* %7, align 2
  %30 = zext i16 %29 to i32
  %31 = load i8, i8* %6, align 1
  %32 = zext i8 %31 to i32
  %33 = add nsw i32 %30, %32
  %34 = load i32, i32* %8, align 4
  %35 = icmp ugt i32 %33, %34
  br i1 %35, label %36, label %40

36:                                               ; preds = %28, %2
  %37 = load %struct.conn*, %struct.conn** %3, align 8
  call void @write_bin_error(%struct.conn* %37, i32 129, i8* null, i32 0)
  %38 = load %struct.conn*, %struct.conn** %3, align 8
  %39 = getelementptr inbounds %struct.conn, %struct.conn* %38, i32 0, i32 6
  store i8 1, i8* %39, align 8
  br label %329

40:                                               ; preds = %28
  %41 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 26), align 4
  %42 = trunc i8 %41 to i1
  br i1 %42, label %43, label %50

43:                                               ; preds = %40
  %44 = load %struct.conn*, %struct.conn** %3, align 8
  %45 = call zeroext i1 @authenticated(%struct.conn* %44)
  br i1 %45, label %50, label %46

46:                                               ; preds = %43
  %47 = load %struct.conn*, %struct.conn** %3, align 8
  call void @write_bin_error(%struct.conn* %47, i32 32, i8* null, i32 0)
  %48 = load %struct.conn*, %struct.conn** %3, align 8
  %49 = getelementptr inbounds %struct.conn, %struct.conn* %48, i32 0, i32 6
  store i8 1, i8* %49, align 8
  br label %329

50:                                               ; preds = %43, %40
  %51 = load %struct.conn*, %struct.conn** %3, align 8
  %52 = getelementptr inbounds %struct.conn, %struct.conn* %51, i32 0, i32 34
  store i8 1, i8* %52, align 4
  %53 = load i16, i16* %7, align 2
  %54 = zext i16 %53 to i32
  %55 = icmp sgt i32 %54, 250
  br i1 %55, label %56, label %58

56:                                               ; preds = %50
  %57 = load %struct.conn*, %struct.conn** %3, align 8
  call void @handle_binary_protocol_error(%struct.conn* %57)
  br label %329

58:                                               ; preds = %50
  %59 = load %struct.conn*, %struct.conn** %3, align 8
  %60 = getelementptr inbounds %struct.conn, %struct.conn* %59, i32 0, i32 38
  %61 = load i16, i16* %60, align 8
  %62 = sext i16 %61 to i32
  switch i32 %62, label %105 [
    i32 17, label %63
    i32 18, label %66
    i32 19, label %69
    i32 20, label %72
    i32 21, label %75
    i32 22, label %78
    i32 23, label %81
    i32 24, label %84
    i32 25, label %87
    i32 26, label %90
    i32 9, label %93
    i32 13, label %96
    i32 30, label %99
    i32 36, label %102
  ]

63:                                               ; preds = %58
  %64 = load %struct.conn*, %struct.conn** %3, align 8
  %65 = getelementptr inbounds %struct.conn, %struct.conn* %64, i32 0, i32 38
  store i16 1, i16* %65, align 8
  br label %108

66:                                               ; preds = %58
  %67 = load %struct.conn*, %struct.conn** %3, align 8
  %68 = getelementptr inbounds %struct.conn, %struct.conn* %67, i32 0, i32 38
  store i16 2, i16* %68, align 8
  br label %108

69:                                               ; preds = %58
  %70 = load %struct.conn*, %struct.conn** %3, align 8
  %71 = getelementptr inbounds %struct.conn, %struct.conn* %70, i32 0, i32 38
  store i16 3, i16* %71, align 8
  br label %108

72:                                               ; preds = %58
  %73 = load %struct.conn*, %struct.conn** %3, align 8
  %74 = getelementptr inbounds %struct.conn, %struct.conn* %73, i32 0, i32 38
  store i16 4, i16* %74, align 8
  br label %108

75:                                               ; preds = %58
  %76 = load %struct.conn*, %struct.conn** %3, align 8
  %77 = getelementptr inbounds %struct.conn, %struct.conn* %76, i32 0, i32 38
  store i16 5, i16* %77, align 8
  br label %108

78:                                               ; preds = %58
  %79 = load %struct.conn*, %struct.conn** %3, align 8
  %80 = getelementptr inbounds %struct.conn, %struct.conn* %79, i32 0, i32 38
  store i16 6, i16* %80, align 8
  br label %108

81:                                               ; preds = %58
  %82 = load %struct.conn*, %struct.conn** %3, align 8
  %83 = getelementptr inbounds %struct.conn, %struct.conn* %82, i32 0, i32 38
  store i16 7, i16* %83, align 8
  br label %108

84:                                               ; preds = %58
  %85 = load %struct.conn*, %struct.conn** %3, align 8
  %86 = getelementptr inbounds %struct.conn, %struct.conn* %85, i32 0, i32 38
  store i16 8, i16* %86, align 8
  br label %108

87:                                               ; preds = %58
  %88 = load %struct.conn*, %struct.conn** %3, align 8
  %89 = getelementptr inbounds %struct.conn, %struct.conn* %88, i32 0, i32 38
  store i16 14, i16* %89, align 8
  br label %108

90:                                               ; preds = %58
  %91 = load %struct.conn*, %struct.conn** %3, align 8
  %92 = getelementptr inbounds %struct.conn, %struct.conn* %91, i32 0, i32 38
  store i16 15, i16* %92, align 8
  br label %108

93:                                               ; preds = %58
  %94 = load %struct.conn*, %struct.conn** %3, align 8
  %95 = getelementptr inbounds %struct.conn, %struct.conn* %94, i32 0, i32 38
  store i16 0, i16* %95, align 8
  br label %108

96:                                               ; preds = %58
  %97 = load %struct.conn*, %struct.conn** %3, align 8
  %98 = getelementptr inbounds %struct.conn, %struct.conn* %97, i32 0, i32 38
  store i16 12, i16* %98, align 8
  br label %108

99:                                               ; preds = %58
  %100 = load %struct.conn*, %struct.conn** %3, align 8
  %101 = getelementptr inbounds %struct.conn, %struct.conn* %100, i32 0, i32 38
  store i16 29, i16* %101, align 8
  br label %108

102:                                              ; preds = %58
  %103 = load %struct.conn*, %struct.conn** %3, align 8
  %104 = getelementptr inbounds %struct.conn, %struct.conn* %103, i32 0, i32 38
  store i16 35, i16* %104, align 8
  br label %108

105:                                              ; preds = %58
  %106 = load %struct.conn*, %struct.conn** %3, align 8
  %107 = getelementptr inbounds %struct.conn, %struct.conn* %106, i32 0, i32 34
  store i8 0, i8* %107, align 4
  br label %108

108:                                              ; preds = %105, %102, %99, %96, %93, %90, %87, %84, %81, %78, %75, %72, %69, %66, %63
  %109 = load %struct.conn*, %struct.conn** %3, align 8
  %110 = getelementptr inbounds %struct.conn, %struct.conn* %109, i32 0, i32 38
  %111 = load i16, i16* %110, align 8
  %112 = sext i16 %111 to i32
  switch i32 %112, label %321 [
    i32 11, label %113
    i32 8, label %128
    i32 10, label %150
    i32 1, label %166
    i32 2, label %166
    i32 3, label %166
    i32 9, label %185
    i32 0, label %185
    i32 13, label %185
    i32 12, label %185
    i32 4, label %203
    i32 5, label %220
    i32 6, label %220
    i32 14, label %241
    i32 15, label %241
    i32 16, label %253
    i32 7, label %261
    i32 32, label %281
    i32 33, label %296
    i32 34, label %296
    i32 28, label %308
    i32 29, label %308
    i32 30, label %308
    i32 35, label %308
    i32 36, label %308
  ]

113:                                              ; preds = %108
  %114 = load i8, i8* %6, align 1
  %115 = zext i8 %114 to i32
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %126

117:                                              ; preds = %113
  %118 = load i16, i16* %7, align 2
  %119 = zext i16 %118 to i32
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %126

121:                                              ; preds = %117
  %122 = load i32, i32* %8, align 4
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %126

124:                                              ; preds = %121
  %125 = load %struct.conn*, %struct.conn** %3, align 8
  call void @write_bin_response(%struct.conn* %125, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.27.1178, i64 0, i64 0), i32 0, i32 0, i32 6)
  br label %127

126:                                              ; preds = %121, %117, %113
  store i32 1, i32* %5, align 4
  br label %127

127:                                              ; preds = %126, %124
  br label %324

128:                                              ; preds = %108
  %129 = load i16, i16* %7, align 2
  %130 = zext i16 %129 to i32
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %148

132:                                              ; preds = %128
  %133 = load i32, i32* %8, align 4
  %134 = load i8, i8* %6, align 1
  %135 = zext i8 %134 to i32
  %136 = icmp eq i32 %133, %135
  br i1 %136, label %137, label %148

137:                                              ; preds = %132
  %138 = load i8, i8* %6, align 1
  %139 = zext i8 %138 to i32
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %145, label %141

141:                                              ; preds = %137
  %142 = load i8, i8* %6, align 1
  %143 = zext i8 %142 to i32
  %144 = icmp eq i32 %143, 4
  br i1 %144, label %145, label %148

145:                                              ; preds = %141, %137
  %146 = load %struct.conn*, %struct.conn** %3, align 8
  %147 = load i8*, i8** %4, align 8
  call void @process_bin_flush(%struct.conn* %146, i8* %147)
  br label %149

148:                                              ; preds = %141, %132, %128
  store i32 1, i32* %5, align 4
  br label %149

149:                                              ; preds = %148, %145
  br label %324

150:                                              ; preds = %108
  %151 = load i8, i8* %6, align 1
  %152 = zext i8 %151 to i32
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %154, label %164

154:                                              ; preds = %150
  %155 = load i16, i16* %7, align 2
  %156 = zext i16 %155 to i32
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %158, label %164

158:                                              ; preds = %154
  %159 = load i32, i32* %8, align 4
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %164

161:                                              ; preds = %158
  %162 = load %struct.conn*, %struct.conn** %3, align 8
  call void @write_bin_response(%struct.conn* %162, i8* null, i32 0, i32 0, i32 0)
  %163 = load %struct.conn*, %struct.conn** %3, align 8
  call void @conn_set_state(%struct.conn* %163, i32 9)
  br label %165

164:                                              ; preds = %158, %154, %150
  store i32 1, i32* %5, align 4
  br label %165

165:                                              ; preds = %164, %161
  br label %324

166:                                              ; preds = %108, %108, %108
  %167 = load i8, i8* %6, align 1
  %168 = zext i8 %167 to i32
  %169 = icmp eq i32 %168, 8
  br i1 %169, label %170, label %183

170:                                              ; preds = %166
  %171 = load i16, i16* %7, align 2
  %172 = zext i16 %171 to i32
  %173 = icmp ne i32 %172, 0
  br i1 %173, label %174, label %183

174:                                              ; preds = %170
  %175 = load i32, i32* %8, align 4
  %176 = load i16, i16* %7, align 2
  %177 = zext i16 %176 to i32
  %178 = add nsw i32 %177, 8
  %179 = icmp uge i32 %175, %178
  br i1 %179, label %180, label %183

180:                                              ; preds = %174
  %181 = load %struct.conn*, %struct.conn** %3, align 8
  %182 = load i8*, i8** %4, align 8
  call void @process_bin_update(%struct.conn* %181, i8* %182)
  br label %184

183:                                              ; preds = %174, %170, %166
  store i32 1, i32* %5, align 4
  br label %184

184:                                              ; preds = %183, %180
  br label %324

185:                                              ; preds = %108, %108, %108, %108
  %186 = load i8, i8* %6, align 1
  %187 = zext i8 %186 to i32
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %189, label %201

189:                                              ; preds = %185
  %190 = load i32, i32* %8, align 4
  %191 = load i16, i16* %7, align 2
  %192 = zext i16 %191 to i32
  %193 = icmp eq i32 %190, %192
  br i1 %193, label %194, label %201

194:                                              ; preds = %189
  %195 = load i16, i16* %7, align 2
  %196 = zext i16 %195 to i32
  %197 = icmp sgt i32 %196, 0
  br i1 %197, label %198, label %201

198:                                              ; preds = %194
  %199 = load %struct.conn*, %struct.conn** %3, align 8
  %200 = load i8*, i8** %4, align 8
  call void @process_bin_get_or_touch(%struct.conn* %199, i8* %200)
  br label %202

201:                                              ; preds = %194, %189, %185
  store i32 1, i32* %5, align 4
  br label %202

202:                                              ; preds = %201, %198
  br label %324

203:                                              ; preds = %108
  %204 = load i16, i16* %7, align 2
  %205 = zext i16 %204 to i32
  %206 = icmp sgt i32 %205, 0
  br i1 %206, label %207, label %218

207:                                              ; preds = %203
  %208 = load i8, i8* %6, align 1
  %209 = zext i8 %208 to i32
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %211, label %218

211:                                              ; preds = %207
  %212 = load i32, i32* %8, align 4
  %213 = load i16, i16* %7, align 2
  %214 = zext i16 %213 to i32
  %215 = icmp eq i32 %212, %214
  br i1 %215, label %216, label %218

216:                                              ; preds = %211
  %217 = load %struct.conn*, %struct.conn** %3, align 8
  call void @process_bin_delete(%struct.conn* %217)
  br label %219

218:                                              ; preds = %211, %207, %203
  store i32 1, i32* %5, align 4
  br label %219

219:                                              ; preds = %218, %216
  br label %324

220:                                              ; preds = %108, %108
  %221 = load i16, i16* %7, align 2
  %222 = zext i16 %221 to i32
  %223 = icmp sgt i32 %222, 0
  br i1 %223, label %224, label %239

224:                                              ; preds = %220
  %225 = load i8, i8* %6, align 1
  %226 = zext i8 %225 to i32
  %227 = icmp eq i32 %226, 20
  br i1 %227, label %228, label %239

228:                                              ; preds = %224
  %229 = load i32, i32* %8, align 4
  %230 = load i16, i16* %7, align 2
  %231 = zext i16 %230 to i32
  %232 = load i8, i8* %6, align 1
  %233 = zext i8 %232 to i32
  %234 = add nsw i32 %231, %233
  %235 = icmp eq i32 %229, %234
  br i1 %235, label %236, label %239

236:                                              ; preds = %228
  %237 = load %struct.conn*, %struct.conn** %3, align 8
  %238 = load i8*, i8** %4, align 8
  call void @complete_incr_bin(%struct.conn* %237, i8* %238)
  br label %240

239:                                              ; preds = %228, %224, %220
  store i32 1, i32* %5, align 4
  br label %240

240:                                              ; preds = %239, %236
  br label %324

241:                                              ; preds = %108, %108
  %242 = load i16, i16* %7, align 2
  %243 = zext i16 %242 to i32
  %244 = icmp sgt i32 %243, 0
  br i1 %244, label %245, label %251

245:                                              ; preds = %241
  %246 = load i8, i8* %6, align 1
  %247 = zext i8 %246 to i32
  %248 = icmp eq i32 %247, 0
  br i1 %248, label %249, label %251

249:                                              ; preds = %245
  %250 = load %struct.conn*, %struct.conn** %3, align 8
  call void @process_bin_append_prepend(%struct.conn* %250)
  br label %252

251:                                              ; preds = %245, %241
  store i32 1, i32* %5, align 4
  br label %252

252:                                              ; preds = %251, %249
  br label %324

253:                                              ; preds = %108
  %254 = load i8, i8* %6, align 1
  %255 = zext i8 %254 to i32
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %257, label %259

257:                                              ; preds = %253
  %258 = load %struct.conn*, %struct.conn** %3, align 8
  call void @process_bin_stat(%struct.conn* %258)
  br label %260

259:                                              ; preds = %253
  store i32 1, i32* %5, align 4
  br label %260

260:                                              ; preds = %259, %257
  br label %324

261:                                              ; preds = %108
  %262 = load i16, i16* %7, align 2
  %263 = zext i16 %262 to i32
  %264 = icmp eq i32 %263, 0
  br i1 %264, label %265, label %279

265:                                              ; preds = %261
  %266 = load i8, i8* %6, align 1
  %267 = zext i8 %266 to i32
  %268 = icmp eq i32 %267, 0
  br i1 %268, label %269, label %279

269:                                              ; preds = %265
  %270 = load i32, i32* %8, align 4
  %271 = icmp eq i32 %270, 0
  br i1 %271, label %272, label %279

272:                                              ; preds = %269
  %273 = load %struct.conn*, %struct.conn** %3, align 8
  call void @write_bin_response(%struct.conn* %273, i8* null, i32 0, i32 0, i32 0)
  %274 = load %struct.conn*, %struct.conn** %3, align 8
  call void @conn_set_state(%struct.conn* %274, i32 9)
  %275 = load %struct.conn*, %struct.conn** %3, align 8
  %276 = getelementptr inbounds %struct.conn, %struct.conn* %275, i32 0, i32 6
  store i8 1, i8* %276, align 8
  %277 = load %struct.conn*, %struct.conn** %3, align 8
  %278 = getelementptr inbounds %struct.conn, %struct.conn* %277, i32 0, i32 30
  store i32 1, i32* %278, align 4
  br label %280

279:                                              ; preds = %269, %265, %261
  store i32 1, i32* %5, align 4
  br label %280

280:                                              ; preds = %279, %272
  br label %324

281:                                              ; preds = %108
  %282 = load i8, i8* %6, align 1
  %283 = zext i8 %282 to i32
  %284 = icmp eq i32 %283, 0
  br i1 %284, label %285, label %294

285:                                              ; preds = %281
  %286 = load i16, i16* %7, align 2
  %287 = zext i16 %286 to i32
  %288 = icmp eq i32 %287, 0
  br i1 %288, label %289, label %294

289:                                              ; preds = %285
  %290 = load i32, i32* %8, align 4
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %292, label %294

292:                                              ; preds = %289
  %293 = load %struct.conn*, %struct.conn** %3, align 8
  call void @bin_list_sasl_mechs(%struct.conn* %293)
  br label %295

294:                                              ; preds = %289, %285, %281
  store i32 1, i32* %5, align 4
  br label %295

295:                                              ; preds = %294, %292
  br label %324

296:                                              ; preds = %108, %108
  %297 = load i8, i8* %6, align 1
  %298 = zext i8 %297 to i32
  %299 = icmp eq i32 %298, 0
  br i1 %299, label %300, label %306

300:                                              ; preds = %296
  %301 = load i16, i16* %7, align 2
  %302 = zext i16 %301 to i32
  %303 = icmp ne i32 %302, 0
  br i1 %303, label %304, label %306

304:                                              ; preds = %300
  %305 = load %struct.conn*, %struct.conn** %3, align 8
  call void @process_bin_sasl_auth(%struct.conn* %305)
  br label %307

306:                                              ; preds = %300, %296
  store i32 1, i32* %5, align 4
  br label %307

307:                                              ; preds = %306, %304
  br label %324

308:                                              ; preds = %108, %108, %108, %108, %108
  %309 = load i8, i8* %6, align 1
  %310 = zext i8 %309 to i32
  %311 = icmp eq i32 %310, 4
  br i1 %311, label %312, label %319

312:                                              ; preds = %308
  %313 = load i16, i16* %7, align 2
  %314 = zext i16 %313 to i32
  %315 = icmp ne i32 %314, 0
  br i1 %315, label %316, label %319

316:                                              ; preds = %312
  %317 = load %struct.conn*, %struct.conn** %3, align 8
  %318 = load i8*, i8** %4, align 8
  call void @process_bin_get_or_touch(%struct.conn* %317, i8* %318)
  br label %320

319:                                              ; preds = %312, %308
  store i32 1, i32* %5, align 4
  br label %320

320:                                              ; preds = %319, %316
  br label %324

321:                                              ; preds = %108
  %322 = load %struct.conn*, %struct.conn** %3, align 8
  %323 = load i32, i32* %8, align 4
  call void @write_bin_error(%struct.conn* %322, i32 129, i8* null, i32 %323)
  br label %324

324:                                              ; preds = %321, %320, %307, %295, %280, %260, %252, %240, %219, %202, %184, %165, %149, %127
  %325 = load i32, i32* %5, align 4
  %326 = icmp ne i32 %325, 0
  br i1 %326, label %327, label %329

327:                                              ; preds = %324
  %328 = load %struct.conn*, %struct.conn** %3, align 8
  call void @handle_binary_protocol_error(%struct.conn* %328)
  br label %329

329:                                              ; preds = %36, %46, %56, %327, %324
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @authenticated(%struct.conn* %0) #0 {
  %2 = alloca %struct.conn*, align 8
  %3 = alloca i8, align 1
  store %struct.conn* %0, %struct.conn** %2, align 8
  store i8 0, i8* %3, align 1
  %4 = load %struct.conn*, %struct.conn** %2, align 8
  %5 = getelementptr inbounds %struct.conn, %struct.conn* %4, i32 0, i32 38
  %6 = load i16, i16* %5, align 8
  %7 = sext i16 %6 to i32
  switch i32 %7, label %9 [
    i32 32, label %8
    i32 33, label %8
    i32 34, label %8
    i32 11, label %8
  ]

8:                                                ; preds = %1, %1, %1, %1
  store i8 1, i8* %3, align 1
  br label %15

9:                                                ; preds = %1
  %10 = load %struct.conn*, %struct.conn** %2, align 8
  %11 = getelementptr inbounds %struct.conn, %struct.conn* %10, i32 0, i32 3
  %12 = load i8, i8* %11, align 1
  %13 = trunc i8 %12 to i1
  %14 = zext i1 %13 to i8
  store i8 %14, i8* %3, align 1
  br label %15

15:                                               ; preds = %9, %8
  %16 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %17 = icmp sgt i32 %16, 1
  br i1 %17, label %18, label %29

18:                                               ; preds = %15
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %20 = load %struct.conn*, %struct.conn** %2, align 8
  %21 = getelementptr inbounds %struct.conn, %struct.conn* %20, i32 0, i32 38
  %22 = load i16, i16* %21, align 8
  %23 = sext i16 %22 to i32
  %24 = load i8, i8* %3, align 1
  %25 = trunc i8 %24 to i1
  %26 = zext i1 %25 to i64
  %27 = select i1 %25, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.29.1208, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30.1209, i64 0, i64 0)
  %28 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %19, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.28.1210, i64 0, i64 0), i32 %23, i8* %27)
  br label %29

29:                                               ; preds = %18, %15
  %30 = load i8, i8* %3, align 1
  %31 = trunc i8 %30 to i1
  ret i1 %31
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @handle_binary_protocol_error(%struct.conn* %0) #0 {
  %2 = alloca %struct.conn*, align 8
  store %struct.conn* %0, %struct.conn** %2, align 8
  %3 = load %struct.conn*, %struct.conn** %2, align 8
  call void @write_bin_error(%struct.conn* %3, i32 4, i8* null, i32 0)
  %4 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %5 = icmp ne i32 %4, 0
  br i1 %5, label %6, label %18

6:                                                ; preds = %1
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %8 = load %struct.conn*, %struct.conn** %2, align 8
  %9 = getelementptr inbounds %struct.conn, %struct.conn* %8, i32 0, i32 36
  %10 = bitcast %union.protocol_binary_request_header* %9 to %struct.anon.13*
  %11 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %10, i32 0, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = zext i8 %12 to i32
  %14 = load %struct.conn*, %struct.conn** %2, align 8
  %15 = getelementptr inbounds %struct.conn, %struct.conn* %14, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.31.1207, i64 0, i64 0), i32 %13, i32 %16)
  br label %18

18:                                               ; preds = %6, %1
  %19 = load %struct.conn*, %struct.conn** %2, align 8
  %20 = getelementptr inbounds %struct.conn, %struct.conn* %19, i32 0, i32 6
  store i8 1, i8* %20, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @process_bin_flush(%struct.conn* %0, i8* %1) #0 {
  %3 = alloca %struct.conn*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %union.protocol_binary_response_get*, align 8
  %7 = alloca i32, align 4
  store %struct.conn* %0, %struct.conn** %3, align 8
  store i8* %1, i8** %4, align 8
  store i64 0, i64* %5, align 8
  %8 = load i8*, i8** %4, align 8
  %9 = bitcast i8* %8 to %union.protocol_binary_response_get*
  store %union.protocol_binary_response_get* %9, %union.protocol_binary_response_get** %6, align 8
  store i32 0, i32* %7, align 4
  %10 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 38), align 8
  %11 = trunc i8 %10 to i1
  br i1 %11, label %14, label %12

12:                                               ; preds = %2
  %13 = load %struct.conn*, %struct.conn** %3, align 8
  call void @write_bin_error(%struct.conn* %13, i32 32, i8* null, i32 0)
  br label %73

14:                                               ; preds = %2
  %15 = load %struct.conn*, %struct.conn** %3, align 8
  %16 = getelementptr inbounds %struct.conn, %struct.conn* %15, i32 0, i32 36
  %17 = bitcast %union.protocol_binary_request_header* %16 to %struct.anon.13*
  %18 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %17, i32 0, i32 3
  %19 = load i8, i8* %18, align 4
  %20 = zext i8 %19 to i64
  %21 = icmp eq i64 %20, 4
  br i1 %21, label %22, label %30

22:                                               ; preds = %14
  %23 = load %union.protocol_binary_response_get*, %union.protocol_binary_response_get** %6, align 8
  %24 = bitcast %union.protocol_binary_response_get* %23 to %struct.anon.18*
  %25 = getelementptr inbounds %struct.anon.18, %struct.anon.18* %24, i32 0, i32 1
  %26 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %25, i32 0, i32 0
  %27 = load i32, i32* %26, align 8
  %28 = call i32 @ntohl(i32 %27) #15
  %29 = zext i32 %28 to i64
  store i64 %29, i64* %5, align 8
  br label %30

30:                                               ; preds = %22, %14
  %31 = load i64, i64* %5, align 8
  %32 = icmp sgt i64 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %30
  %34 = load i64, i64* %5, align 8
  %35 = call i32 @realtime(i64 %34)
  store i32 %35, i32* %7, align 4
  br label %38

36:                                               ; preds = %30
  %37 = load volatile i32, i32* @current_time, align 4
  store i32 %37, i32* %7, align 4
  br label %38

38:                                               ; preds = %36, %33
  %39 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 19), align 8
  %40 = trunc i8 %39 to i1
  br i1 %40, label %41, label %50

41:                                               ; preds = %38
  %42 = load i32, i32* %7, align 4
  %43 = sub i32 %42, 1
  store i32 %43, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 6), align 4
  %44 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 6), align 4
  %45 = load volatile i32, i32* @current_time, align 4
  %46 = icmp ule i32 %44, %45
  br i1 %46, label %47, label %49

47:                                               ; preds = %41
  %48 = call i64 @get_cas_id()
  store i64 %48, i64* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 7), align 8
  br label %49

49:                                               ; preds = %47, %41
  br label %52

50:                                               ; preds = %38
  %51 = load i32, i32* %7, align 4
  store i32 %51, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 6), align 4
  br label %52

52:                                               ; preds = %50, %49
  %53 = load %struct.conn*, %struct.conn** %3, align 8
  %54 = getelementptr inbounds %struct.conn, %struct.conn* %53, i32 0, i32 42
  %55 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %54, align 8
  %56 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %55, i32 0, i32 4
  %57 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %56, i32 0, i32 0
  %58 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %57) #14
  %59 = load %struct.conn*, %struct.conn** %3, align 8
  %60 = getelementptr inbounds %struct.conn, %struct.conn* %59, i32 0, i32 42
  %61 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %60, align 8
  %62 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %61, i32 0, i32 4
  %63 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %62, i32 0, i32 14
  %64 = load i64, i64* %63, align 8
  %65 = add i64 %64, 1
  store i64 %65, i64* %63, align 8
  %66 = load %struct.conn*, %struct.conn** %3, align 8
  %67 = getelementptr inbounds %struct.conn, %struct.conn* %66, i32 0, i32 42
  %68 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %67, align 8
  %69 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %68, i32 0, i32 4
  %70 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %69, i32 0, i32 0
  %71 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %70) #14
  %72 = load %struct.conn*, %struct.conn** %3, align 8
  call void @write_bin_response(%struct.conn* %72, i8* null, i32 0, i32 0, i32 0)
  br label %73

73:                                               ; preds = %52, %12
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @process_bin_update(%struct.conn* %0, i8* %1) #0 {
  %3 = alloca %struct.conn*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct._stritem*, align 8
  %9 = alloca %union.protocol_binary_request_set*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %struct._logger*, align 8
  store %struct.conn* %0, %struct.conn** %3, align 8
  store i8* %1, i8** %4, align 8
  %13 = load i8*, i8** %4, align 8
  %14 = bitcast i8* %13 to %union.protocol_binary_request_set*
  store %union.protocol_binary_request_set* %14, %union.protocol_binary_request_set** %9, align 8
  %15 = load %struct.conn*, %struct.conn** %3, align 8
  %16 = call i8* @binary_get_key(%struct.conn* %15)
  store i8* %16, i8** %5, align 8
  %17 = load %struct.conn*, %struct.conn** %3, align 8
  %18 = getelementptr inbounds %struct.conn, %struct.conn* %17, i32 0, i32 36
  %19 = bitcast %union.protocol_binary_request_header* %18 to %struct.anon.13*
  %20 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %19, i32 0, i32 2
  %21 = load i16, i16* %20, align 2
  %22 = zext i16 %21 to i32
  store i32 %22, i32* %6, align 4
  %23 = load %union.protocol_binary_request_set*, %union.protocol_binary_request_set** %9, align 8
  %24 = bitcast %union.protocol_binary_request_set* %23 to %struct.anon.16*
  %25 = getelementptr inbounds %struct.anon.16, %struct.anon.16* %24, i32 0, i32 1
  %26 = getelementptr inbounds %struct.timezone, %struct.timezone* %25, i32 0, i32 0
  %27 = load i32, i32* %26, align 8
  %28 = call i32 @ntohl(i32 %27) #15
  %29 = load %union.protocol_binary_request_set*, %union.protocol_binary_request_set** %9, align 8
  %30 = bitcast %union.protocol_binary_request_set* %29 to %struct.anon.16*
  %31 = getelementptr inbounds %struct.anon.16, %struct.anon.16* %30, i32 0, i32 1
  %32 = getelementptr inbounds %struct.timezone, %struct.timezone* %31, i32 0, i32 0
  store i32 %28, i32* %32, align 8
  %33 = load %union.protocol_binary_request_set*, %union.protocol_binary_request_set** %9, align 8
  %34 = bitcast %union.protocol_binary_request_set* %33 to %struct.anon.16*
  %35 = getelementptr inbounds %struct.anon.16, %struct.anon.16* %34, i32 0, i32 1
  %36 = getelementptr inbounds %struct.timezone, %struct.timezone* %35, i32 0, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = call i32 @ntohl(i32 %37) #15
  %39 = load %union.protocol_binary_request_set*, %union.protocol_binary_request_set** %9, align 8
  %40 = bitcast %union.protocol_binary_request_set* %39 to %struct.anon.16*
  %41 = getelementptr inbounds %struct.anon.16, %struct.anon.16* %40, i32 0, i32 1
  %42 = getelementptr inbounds %struct.timezone, %struct.timezone* %41, i32 0, i32 1
  store i32 %38, i32* %42, align 4
  %43 = load %struct.conn*, %struct.conn** %3, align 8
  %44 = getelementptr inbounds %struct.conn, %struct.conn* %43, i32 0, i32 36
  %45 = bitcast %union.protocol_binary_request_header* %44 to %struct.anon.13*
  %46 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %45, i32 0, i32 6
  %47 = load i32, i32* %46, align 8
  %48 = load i32, i32* %6, align 4
  %49 = load %struct.conn*, %struct.conn** %3, align 8
  %50 = getelementptr inbounds %struct.conn, %struct.conn* %49, i32 0, i32 36
  %51 = bitcast %union.protocol_binary_request_header* %50 to %struct.anon.13*
  %52 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %51, i32 0, i32 3
  %53 = load i8, i8* %52, align 4
  %54 = zext i8 %53 to i32
  %55 = add nsw i32 %48, %54
  %56 = sub i32 %47, %55
  store i32 %56, i32* %7, align 4
  %57 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %58 = icmp sgt i32 %57, 1
  br i1 %58, label %59, label %113

59:                                               ; preds = %2
  %60 = load %struct.conn*, %struct.conn** %3, align 8
  %61 = getelementptr inbounds %struct.conn, %struct.conn* %60, i32 0, i32 38
  %62 = load i16, i16* %61, align 8
  %63 = sext i16 %62 to i32
  %64 = icmp eq i32 %63, 2
  br i1 %64, label %65, label %71

65:                                               ; preds = %59
  %66 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %67 = load %struct.conn*, %struct.conn** %3, align 8
  %68 = getelementptr inbounds %struct.conn, %struct.conn* %67, i32 0, i32 1
  %69 = load i32, i32* %68, align 8
  %70 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %66, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.32.1203, i64 0, i64 0), i32 %69)
  br label %90

71:                                               ; preds = %59
  %72 = load %struct.conn*, %struct.conn** %3, align 8
  %73 = getelementptr inbounds %struct.conn, %struct.conn* %72, i32 0, i32 38
  %74 = load i16, i16* %73, align 8
  %75 = sext i16 %74 to i32
  %76 = icmp eq i32 %75, 1
  br i1 %76, label %77, label %83

77:                                               ; preds = %71
  %78 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %79 = load %struct.conn*, %struct.conn** %3, align 8
  %80 = getelementptr inbounds %struct.conn, %struct.conn* %79, i32 0, i32 1
  %81 = load i32, i32* %80, align 8
  %82 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %78, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.33.1204, i64 0, i64 0), i32 %81)
  br label %89

83:                                               ; preds = %71
  %84 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %85 = load %struct.conn*, %struct.conn** %3, align 8
  %86 = getelementptr inbounds %struct.conn, %struct.conn* %85, i32 0, i32 1
  %87 = load i32, i32* %86, align 8
  %88 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %84, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.34.1205, i64 0, i64 0), i32 %87)
  br label %89

89:                                               ; preds = %83, %77
  br label %90

90:                                               ; preds = %89, %65
  store i32 0, i32* %10, align 4
  br label %91

91:                                               ; preds = %104, %90
  %92 = load i32, i32* %10, align 4
  %93 = load i32, i32* %6, align 4
  %94 = icmp slt i32 %92, %93
  br i1 %94, label %95, label %107

95:                                               ; preds = %91
  %96 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %97 = load i8*, i8** %5, align 8
  %98 = load i32, i32* %10, align 4
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds i8, i8* %97, i64 %99
  %101 = load i8, i8* %100, align 1
  %102 = sext i8 %101 to i32
  %103 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %96, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35.1181, i64 0, i64 0), i32 %102)
  br label %104

104:                                              ; preds = %95
  %105 = load i32, i32* %10, align 4
  %106 = add nsw i32 %105, 1
  store i32 %106, i32* %10, align 4
  br label %91, !llvm.loop !174

107:                                              ; preds = %91
  %108 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %109 = load i32, i32* %7, align 4
  %110 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %108, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.36.1206, i64 0, i64 0), i32 %109)
  %111 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %112 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %111, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.1159, i64 0, i64 0))
  br label %113

113:                                              ; preds = %107, %2
  %114 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 17), align 8
  %115 = icmp ne i32 %114, 0
  br i1 %115, label %116, label %120

116:                                              ; preds = %113
  %117 = load i8*, i8** %5, align 8
  %118 = load i32, i32* %6, align 4
  %119 = sext i32 %118 to i64
  call void @stats_prefix_record_set(i8* %117, i64 %119)
  br label %120

120:                                              ; preds = %116, %113
  %121 = load i8*, i8** %5, align 8
  %122 = load i32, i32* %6, align 4
  %123 = sext i32 %122 to i64
  %124 = load %union.protocol_binary_request_set*, %union.protocol_binary_request_set** %9, align 8
  %125 = bitcast %union.protocol_binary_request_set* %124 to %struct.anon.16*
  %126 = getelementptr inbounds %struct.anon.16, %struct.anon.16* %125, i32 0, i32 1
  %127 = getelementptr inbounds %struct.timezone, %struct.timezone* %126, i32 0, i32 0
  %128 = load i32, i32* %127, align 8
  %129 = load %union.protocol_binary_request_set*, %union.protocol_binary_request_set** %9, align 8
  %130 = bitcast %union.protocol_binary_request_set* %129 to %struct.anon.16*
  %131 = getelementptr inbounds %struct.anon.16, %struct.anon.16* %130, i32 0, i32 1
  %132 = getelementptr inbounds %struct.timezone, %struct.timezone* %131, i32 0, i32 1
  %133 = load i32, i32* %132, align 4
  %134 = zext i32 %133 to i64
  %135 = call i32 @realtime(i64 %134)
  %136 = load i32, i32* %7, align 4
  %137 = add nsw i32 %136, 2
  %138 = call %struct._stritem* @item_alloc(i8* %121, i64 %123, i32 %128, i32 %135, i32 %137)
  store %struct._stritem* %138, %struct._stritem** %8, align 8
  %139 = load %struct._stritem*, %struct._stritem** %8, align 8
  %140 = icmp eq %struct._stritem* %139, null
  br i1 %140, label %141, label %232

141:                                              ; preds = %120
  %142 = load i32, i32* %6, align 4
  %143 = sext i32 %142 to i64
  %144 = load %union.protocol_binary_request_set*, %union.protocol_binary_request_set** %9, align 8
  %145 = bitcast %union.protocol_binary_request_set* %144 to %struct.anon.16*
  %146 = getelementptr inbounds %struct.anon.16, %struct.anon.16* %145, i32 0, i32 1
  %147 = getelementptr inbounds %struct.timezone, %struct.timezone* %146, i32 0, i32 0
  %148 = load i32, i32* %147, align 8
  %149 = load i32, i32* %7, align 4
  %150 = add nsw i32 %149, 2
  %151 = call zeroext i1 @item_size_ok(i64 %143, i32 %148, i32 %150)
  br i1 %151, label %155, label %152

152:                                              ; preds = %141
  %153 = load %struct.conn*, %struct.conn** %3, align 8
  %154 = load i32, i32* %7, align 4
  call void @write_bin_error(%struct.conn* %153, i32 3, i8* null, i32 %154)
  store i32 4, i32* %11, align 4
  br label %160

155:                                              ; preds = %141
  %156 = load %struct.conn*, %struct.conn** %3, align 8
  call void @out_of_memory(%struct.conn* %156, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.37.1192, i64 0, i64 0))
  %157 = load i32, i32* %7, align 4
  %158 = load %struct.conn*, %struct.conn** %3, align 8
  %159 = getelementptr inbounds %struct.conn, %struct.conn* %158, i32 0, i32 24
  store i32 %157, i32* %159, align 8
  store i32 5, i32* %11, align 4
  br label %160

160:                                              ; preds = %155, %152
  br label %161

161:                                              ; preds = %160
  %162 = load %struct.conn*, %struct.conn** %3, align 8
  %163 = getelementptr inbounds %struct.conn, %struct.conn* %162, i32 0, i32 42
  %164 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %163, align 8
  %165 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %164, i32 0, i32 11
  %166 = load %struct._logger*, %struct._logger** %165, align 8
  store %struct._logger* %166, %struct._logger** %12, align 8
  %167 = load %struct.conn*, %struct.conn** %3, align 8
  %168 = getelementptr inbounds %struct.conn, %struct.conn* %167, i32 0, i32 42
  %169 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %168, align 8
  %170 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %169, i32 0, i32 11
  %171 = load %struct._logger*, %struct._logger** %170, align 8
  %172 = icmp eq %struct._logger* %171, null
  br i1 %172, label %173, label %177

173:                                              ; preds = %161
  %174 = load i32, i32* @logger_key, align 4
  %175 = call i8* @pthread_getspecific(i32 %174) #14
  %176 = bitcast i8* %175 to %struct._logger*
  store %struct._logger* %176, %struct._logger** %12, align 8
  br label %177

177:                                              ; preds = %173, %161
  %178 = load %struct._logger*, %struct._logger** %12, align 8
  %179 = getelementptr inbounds %struct._logger, %struct._logger* %178, i32 0, i32 8
  %180 = load i16, i16* %179, align 4
  %181 = zext i16 %180 to i32
  %182 = and i32 %181, 8
  %183 = icmp ne i32 %182, 0
  br i1 %183, label %184, label %203

184:                                              ; preds = %177
  %185 = load %struct._logger*, %struct._logger** %12, align 8
  %186 = load i32, i32* %11, align 4
  %187 = load i8*, i8** %5, align 8
  %188 = load i32, i32* %6, align 4
  %189 = load %union.protocol_binary_request_set*, %union.protocol_binary_request_set** %9, align 8
  %190 = bitcast %union.protocol_binary_request_set* %189 to %struct.anon.16*
  %191 = getelementptr inbounds %struct.anon.16, %struct.anon.16* %190, i32 0, i32 1
  %192 = getelementptr inbounds %struct.timezone, %struct.timezone* %191, i32 0, i32 1
  %193 = load i32, i32* %192, align 4
  %194 = load %struct._stritem*, %struct._stritem** %8, align 8
  %195 = getelementptr inbounds %struct._stritem, %struct._stritem* %194, i32 0, i32 8
  %196 = load i8, i8* %195, align 8
  %197 = zext i8 %196 to i32
  %198 = and i32 %197, -193
  %199 = load %struct.conn*, %struct.conn** %3, align 8
  %200 = getelementptr inbounds %struct.conn, %struct.conn* %199, i32 0, i32 1
  %201 = load i32, i32* %200, align 8
  %202 = call i32 (%struct._logger*, i32, i8*, ...) @logger_log(%struct._logger* %185, i32 3, i8* null, i32 %186, i32 0, i8* %187, i32 %188, i32 %193, i32 %198, i32 %201)
  br label %203

203:                                              ; preds = %184, %177
  br label %204

204:                                              ; preds = %203
  %205 = load %struct.conn*, %struct.conn** %3, align 8
  %206 = getelementptr inbounds %struct.conn, %struct.conn* %205, i32 0, i32 38
  %207 = load i16, i16* %206, align 8
  %208 = sext i16 %207 to i32
  %209 = icmp eq i32 %208, 1
  br i1 %209, label %210, label %230

210:                                              ; preds = %204
  %211 = load i8*, i8** %5, align 8
  %212 = load i32, i32* %6, align 4
  %213 = sext i32 %212 to i64
  %214 = load %struct.conn*, %struct.conn** %3, align 8
  %215 = call %struct._stritem* @item_get(i8* %211, i64 %213, %struct.conn* %214, i1 zeroext false)
  store %struct._stritem* %215, %struct._stritem** %8, align 8
  %216 = load %struct._stritem*, %struct._stritem** %8, align 8
  %217 = icmp ne %struct._stritem* %216, null
  br i1 %217, label %218, label %229

218:                                              ; preds = %210
  %219 = load %struct._stritem*, %struct._stritem** %8, align 8
  call void @item_unlink(%struct._stritem* %219)
  br label %220

220:                                              ; preds = %218
  %221 = load %struct.conn*, %struct.conn** %3, align 8
  %222 = getelementptr inbounds %struct.conn, %struct.conn* %221, i32 0, i32 42
  %223 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %222, align 8
  %224 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %223, i32 0, i32 10
  %225 = load i8*, i8** %224, align 8
  %226 = load %struct._stritem*, %struct._stritem** %8, align 8
  call void @storage_delete(i8* %225, %struct._stritem* %226)
  br label %227

227:                                              ; preds = %220
  %228 = load %struct._stritem*, %struct._stritem** %8, align 8
  call void @item_remove(%struct._stritem* %228)
  br label %229

229:                                              ; preds = %227, %210
  br label %230

230:                                              ; preds = %229, %204
  %231 = load %struct.conn*, %struct.conn** %3, align 8
  call void @conn_set_state(%struct.conn* %231, i32 7)
  br label %325

232:                                              ; preds = %120
  %233 = load %struct._stritem*, %struct._stritem** %8, align 8
  %234 = getelementptr inbounds %struct._stritem, %struct._stritem* %233, i32 0, i32 7
  %235 = load i16, i16* %234, align 2
  %236 = zext i16 %235 to i32
  %237 = and i32 %236, 2
  %238 = icmp ne i32 %237, 0
  br i1 %238, label %239, label %249

239:                                              ; preds = %232
  %240 = load %struct.conn*, %struct.conn** %3, align 8
  %241 = getelementptr inbounds %struct.conn, %struct.conn* %240, i32 0, i32 36
  %242 = bitcast %union.protocol_binary_request_header* %241 to %struct.anon.13*
  %243 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %242, i32 0, i32 8
  %244 = load i64, i64* %243, align 8
  %245 = load %struct._stritem*, %struct._stritem** %8, align 8
  %246 = getelementptr inbounds %struct._stritem, %struct._stritem* %245, i32 0, i32 10
  %247 = getelementptr inbounds [0 x %union.anon.10], [0 x %union.anon.10]* %246, i64 0, i64 0
  %248 = bitcast %union.anon.10* %247 to i64*
  store i64 %244, i64* %248, align 8
  br label %249

249:                                              ; preds = %239, %232
  %250 = load %struct.conn*, %struct.conn** %3, align 8
  %251 = getelementptr inbounds %struct.conn, %struct.conn* %250, i32 0, i32 38
  %252 = load i16, i16* %251, align 8
  %253 = sext i16 %252 to i32
  switch i32 %253, label %263 [
    i32 2, label %254
    i32 1, label %257
    i32 3, label %260
  ]

254:                                              ; preds = %249
  %255 = load %struct.conn*, %struct.conn** %3, align 8
  %256 = getelementptr inbounds %struct.conn, %struct.conn* %255, i32 0, i32 38
  store i16 1, i16* %256, align 8
  br label %264

257:                                              ; preds = %249
  %258 = load %struct.conn*, %struct.conn** %3, align 8
  %259 = getelementptr inbounds %struct.conn, %struct.conn* %258, i32 0, i32 38
  store i16 2, i16* %259, align 8
  br label %264

260:                                              ; preds = %249
  %261 = load %struct.conn*, %struct.conn** %3, align 8
  %262 = getelementptr inbounds %struct.conn, %struct.conn* %261, i32 0, i32 38
  store i16 3, i16* %262, align 8
  br label %264

263:                                              ; preds = %249
  br label %264

264:                                              ; preds = %263, %260, %257, %254
  %265 = load %struct._stritem*, %struct._stritem** %8, align 8
  %266 = getelementptr inbounds %struct._stritem, %struct._stritem* %265, i32 0, i32 7
  %267 = load i16, i16* %266, align 2
  %268 = zext i16 %267 to i32
  %269 = and i32 %268, 2
  %270 = icmp ne i32 %269, 0
  br i1 %270, label %271, label %277

271:                                              ; preds = %264
  %272 = load %struct._stritem*, %struct._stritem** %8, align 8
  %273 = getelementptr inbounds %struct._stritem, %struct._stritem* %272, i32 0, i32 10
  %274 = getelementptr inbounds [0 x %union.anon.10], [0 x %union.anon.10]* %273, i64 0, i64 0
  %275 = bitcast %union.anon.10* %274 to i64*
  %276 = load i64, i64* %275, align 8
  br label %278

277:                                              ; preds = %264
  br label %278

278:                                              ; preds = %277, %271
  %279 = phi i64 [ %276, %271 ], [ 0, %277 ]
  %280 = icmp ne i64 %279, 0
  br i1 %280, label %281, label %284

281:                                              ; preds = %278
  %282 = load %struct.conn*, %struct.conn** %3, align 8
  %283 = getelementptr inbounds %struct.conn, %struct.conn* %282, i32 0, i32 38
  store i16 6, i16* %283, align 8
  br label %284

284:                                              ; preds = %281, %278
  %285 = load %struct._stritem*, %struct._stritem** %8, align 8
  %286 = bitcast %struct._stritem* %285 to i8*
  %287 = load %struct.conn*, %struct.conn** %3, align 8
  %288 = getelementptr inbounds %struct.conn, %struct.conn* %287, i32 0, i32 23
  store i8* %286, i8** %288, align 8
  %289 = load %struct._stritem*, %struct._stritem** %8, align 8
  %290 = getelementptr inbounds %struct._stritem, %struct._stritem* %289, i32 0, i32 10
  %291 = bitcast [0 x %union.anon.10]* %290 to i8*
  %292 = load %struct._stritem*, %struct._stritem** %8, align 8
  %293 = getelementptr inbounds %struct._stritem, %struct._stritem* %292, i32 0, i32 9
  %294 = load i8, i8* %293, align 1
  %295 = zext i8 %294 to i32
  %296 = sext i32 %295 to i64
  %297 = getelementptr inbounds i8, i8* %291, i64 %296
  %298 = getelementptr inbounds i8, i8* %297, i64 1
  %299 = load %struct._stritem*, %struct._stritem** %8, align 8
  %300 = getelementptr inbounds %struct._stritem, %struct._stritem* %299, i32 0, i32 7
  %301 = load i16, i16* %300, align 2
  %302 = zext i16 %301 to i32
  %303 = and i32 %302, 256
  %304 = icmp ne i32 %303, 0
  %305 = zext i1 %304 to i64
  %306 = select i1 %304, i64 4, i64 0
  %307 = getelementptr inbounds i8, i8* %298, i64 %306
  %308 = load %struct._stritem*, %struct._stritem** %8, align 8
  %309 = getelementptr inbounds %struct._stritem, %struct._stritem* %308, i32 0, i32 7
  %310 = load i16, i16* %309, align 2
  %311 = zext i16 %310 to i32
  %312 = and i32 %311, 2
  %313 = icmp ne i32 %312, 0
  %314 = zext i1 %313 to i64
  %315 = select i1 %313, i64 8, i64 0
  %316 = getelementptr inbounds i8, i8* %307, i64 %315
  %317 = load %struct.conn*, %struct.conn** %3, align 8
  %318 = getelementptr inbounds %struct.conn, %struct.conn* %317, i32 0, i32 21
  store i8* %316, i8** %318, align 8
  %319 = load i32, i32* %7, align 4
  %320 = load %struct.conn*, %struct.conn** %3, align 8
  %321 = getelementptr inbounds %struct.conn, %struct.conn* %320, i32 0, i32 22
  store i32 %319, i32* %321, align 8
  %322 = load %struct.conn*, %struct.conn** %3, align 8
  call void @conn_set_state(%struct.conn* %322, i32 6)
  %323 = load %struct.conn*, %struct.conn** %3, align 8
  %324 = getelementptr inbounds %struct.conn, %struct.conn* %323, i32 0, i32 10
  store i32 3, i32* %324, align 8
  br label %325

325:                                              ; preds = %284, %230
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @process_bin_get_or_touch(%struct.conn* %0, i8* %1) #0 {
  %3 = alloca %struct.conn*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %struct._stritem*, align 8
  %6 = alloca %union.protocol_binary_response_get*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i8, align 1
  %13 = alloca %union.protocol_binary_response_get*, align 8
  %14 = alloca i64, align 8
  %15 = alloca i16, align 2
  %16 = alloca i32, align 4
  store %struct.conn* %0, %struct.conn** %3, align 8
  store i8* %1, i8** %4, align 8
  %17 = load %struct.conn*, %struct.conn** %3, align 8
  %18 = getelementptr inbounds %struct.conn, %struct.conn* %17, i32 0, i32 19
  %19 = load %struct._mc_resp*, %struct._mc_resp** %18, align 8
  %20 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %19, i32 0, i32 18
  %21 = getelementptr inbounds [1024 x i8], [1024 x i8]* %20, i64 0, i64 0
  %22 = bitcast i8* %21 to %union.protocol_binary_response_get*
  store %union.protocol_binary_response_get* %22, %union.protocol_binary_response_get** %6, align 8
  %23 = load %struct.conn*, %struct.conn** %3, align 8
  %24 = call i8* @binary_get_key(%struct.conn* %23)
  store i8* %24, i8** %7, align 8
  %25 = load %struct.conn*, %struct.conn** %3, align 8
  %26 = getelementptr inbounds %struct.conn, %struct.conn* %25, i32 0, i32 36
  %27 = bitcast %union.protocol_binary_request_header* %26 to %struct.anon.13*
  %28 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %27, i32 0, i32 2
  %29 = load i16, i16* %28, align 2
  %30 = zext i16 %29 to i64
  store i64 %30, i64* %8, align 8
  %31 = load %struct.conn*, %struct.conn** %3, align 8
  %32 = getelementptr inbounds %struct.conn, %struct.conn* %31, i32 0, i32 38
  %33 = load i16, i16* %32, align 8
  %34 = sext i16 %33 to i32
  %35 = icmp eq i32 %34, 28
  br i1 %35, label %48, label %36

36:                                               ; preds = %2
  %37 = load %struct.conn*, %struct.conn** %3, align 8
  %38 = getelementptr inbounds %struct.conn, %struct.conn* %37, i32 0, i32 38
  %39 = load i16, i16* %38, align 8
  %40 = sext i16 %39 to i32
  %41 = icmp eq i32 %40, 29
  br i1 %41, label %48, label %42

42:                                               ; preds = %36
  %43 = load %struct.conn*, %struct.conn** %3, align 8
  %44 = getelementptr inbounds %struct.conn, %struct.conn* %43, i32 0, i32 38
  %45 = load i16, i16* %44, align 8
  %46 = sext i16 %45 to i32
  %47 = icmp eq i32 %46, 35
  br label %48

48:                                               ; preds = %42, %36, %2
  %49 = phi i1 [ true, %36 ], [ true, %2 ], [ %47, %42 ]
  %50 = zext i1 %49 to i32
  store i32 %50, i32* %9, align 4
  %51 = load %struct.conn*, %struct.conn** %3, align 8
  %52 = getelementptr inbounds %struct.conn, %struct.conn* %51, i32 0, i32 38
  %53 = load i16, i16* %52, align 8
  %54 = sext i16 %53 to i32
  %55 = icmp eq i32 %54, 12
  br i1 %55, label %62, label %56

56:                                               ; preds = %48
  %57 = load %struct.conn*, %struct.conn** %3, align 8
  %58 = getelementptr inbounds %struct.conn, %struct.conn* %57, i32 0, i32 38
  %59 = load i16, i16* %58, align 8
  %60 = sext i16 %59 to i32
  %61 = icmp eq i32 %60, 35
  br label %62

62:                                               ; preds = %56, %48
  %63 = phi i1 [ true, %48 ], [ %61, %56 ]
  %64 = zext i1 %63 to i32
  store i32 %64, i32* %10, align 4
  %65 = load %struct.conn*, %struct.conn** %3, align 8
  %66 = getelementptr inbounds %struct.conn, %struct.conn* %65, i32 0, i32 38
  %67 = load i16, i16* %66, align 8
  %68 = sext i16 %67 to i32
  %69 = icmp ne i32 %68, 28
  %70 = zext i1 %69 to i32
  store i32 %70, i32* %11, align 4
  store i8 0, i8* %12, align 1
  %71 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %72 = icmp sgt i32 %71, 1
  br i1 %72, label %73, label %92

73:                                               ; preds = %62
  %74 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %75 = load %struct.conn*, %struct.conn** %3, align 8
  %76 = getelementptr inbounds %struct.conn, %struct.conn* %75, i32 0, i32 1
  %77 = load i32, i32* %76, align 8
  %78 = load i32, i32* %9, align 4
  %79 = icmp ne i32 %78, 0
  %80 = zext i1 %79 to i64
  %81 = select i1 %79, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.39.1200, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.40.1201, i64 0, i64 0)
  %82 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %74, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.38.1202, i64 0, i64 0), i32 %77, i8* %81)
  %83 = load i8*, i8** %7, align 8
  %84 = load i64, i64* %8, align 8
  %85 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %86 = call i64 @fwrite(i8* %83, i64 1, i64 %84, %struct._IO_FILE* %85)
  %87 = icmp ne i64 %86, 0
  br i1 %87, label %88, label %89

88:                                               ; preds = %73
  br label %89

89:                                               ; preds = %88, %73
  %90 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %91 = call i32 @fputc(i32 10, %struct._IO_FILE* %90)
  br label %92

92:                                               ; preds = %89, %62
  %93 = load i32, i32* %9, align 4
  %94 = icmp ne i32 %93, 0
  br i1 %94, label %95, label %111

95:                                               ; preds = %92
  %96 = load i8*, i8** %4, align 8
  %97 = bitcast i8* %96 to %union.protocol_binary_response_get*
  store %union.protocol_binary_response_get* %97, %union.protocol_binary_response_get** %13, align 8
  %98 = load %union.protocol_binary_response_get*, %union.protocol_binary_response_get** %13, align 8
  %99 = bitcast %union.protocol_binary_response_get* %98 to %struct.anon.18*
  %100 = getelementptr inbounds %struct.anon.18, %struct.anon.18* %99, i32 0, i32 1
  %101 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %100, i32 0, i32 0
  %102 = load i32, i32* %101, align 8
  %103 = call i32 @ntohl(i32 %102) #15
  %104 = zext i32 %103 to i64
  store i64 %104, i64* %14, align 8
  %105 = load i8*, i8** %7, align 8
  %106 = load i64, i64* %8, align 8
  %107 = load i64, i64* %14, align 8
  %108 = call i32 @realtime(i64 %107)
  %109 = load %struct.conn*, %struct.conn** %3, align 8
  %110 = call %struct._stritem* @item_touch(i8* %105, i64 %106, i32 %108, %struct.conn* %109)
  store %struct._stritem* %110, %struct._stritem** %5, align 8
  br label %116

111:                                              ; preds = %92
  %112 = load i8*, i8** %7, align 8
  %113 = load i64, i64* %8, align 8
  %114 = load %struct.conn*, %struct.conn** %3, align 8
  %115 = call %struct._stritem* @item_get(i8* %112, i64 %113, %struct.conn* %114, i1 zeroext true)
  store %struct._stritem* %115, %struct._stritem** %5, align 8
  br label %116

116:                                              ; preds = %111, %95
  %117 = load %struct._stritem*, %struct._stritem** %5, align 8
  %118 = icmp ne %struct._stritem* %117, null
  br i1 %118, label %119, label %437

119:                                              ; preds = %116
  store i16 0, i16* %15, align 2
  %120 = load %struct._stritem*, %struct._stritem** %5, align 8
  %121 = getelementptr inbounds %struct._stritem, %struct._stritem* %120, i32 0, i32 5
  %122 = load i32, i32* %121, align 8
  %123 = sub nsw i32 %122, 2
  %124 = sext i32 %123 to i64
  %125 = add i64 4, %124
  %126 = trunc i64 %125 to i32
  store i32 %126, i32* %16, align 4
  %127 = load %struct.conn*, %struct.conn** %3, align 8
  %128 = getelementptr inbounds %struct.conn, %struct.conn* %127, i32 0, i32 42
  %129 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %128, align 8
  %130 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %129, i32 0, i32 4
  %131 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %130, i32 0, i32 0
  %132 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %131) #14
  %133 = load i32, i32* %9, align 4
  %134 = icmp ne i32 %133, 0
  br i1 %134, label %135, label %158

135:                                              ; preds = %119
  %136 = load %struct.conn*, %struct.conn** %3, align 8
  %137 = getelementptr inbounds %struct.conn, %struct.conn* %136, i32 0, i32 42
  %138 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %137, align 8
  %139 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %138, i32 0, i32 4
  %140 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %139, i32 0, i32 5
  %141 = load i64, i64* %140, align 8
  %142 = add i64 %141, 1
  store i64 %142, i64* %140, align 8
  %143 = load %struct.conn*, %struct.conn** %3, align 8
  %144 = getelementptr inbounds %struct.conn, %struct.conn* %143, i32 0, i32 42
  %145 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %144, align 8
  %146 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %145, i32 0, i32 4
  %147 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %146, i32 0, i32 31
  %148 = load %struct._stritem*, %struct._stritem** %5, align 8
  %149 = getelementptr inbounds %struct._stritem, %struct._stritem* %148, i32 0, i32 8
  %150 = load i8, i8* %149, align 8
  %151 = zext i8 %150 to i32
  %152 = and i32 %151, -193
  %153 = sext i32 %152 to i64
  %154 = getelementptr inbounds [64 x %struct.slab_stats], [64 x %struct.slab_stats]* %147, i64 0, i64 %153
  %155 = getelementptr inbounds %struct.slab_stats, %struct.slab_stats* %154, i32 0, i32 2
  %156 = load i64, i64* %155, align 8
  %157 = add i64 %156, 1
  store i64 %157, i64* %155, align 8
  br label %178

158:                                              ; preds = %119
  %159 = load %struct.conn*, %struct.conn** %3, align 8
  %160 = getelementptr inbounds %struct.conn, %struct.conn* %159, i32 0, i32 42
  %161 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %160, align 8
  %162 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %161, i32 0, i32 4
  %163 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %162, i32 0, i32 1
  %164 = load i64, i64* %163, align 8
  %165 = add i64 %164, 1
  store i64 %165, i64* %163, align 8
  %166 = load %struct.conn*, %struct.conn** %3, align 8
  %167 = getelementptr inbounds %struct.conn, %struct.conn* %166, i32 0, i32 42
  %168 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %167, align 8
  %169 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %168, i32 0, i32 4
  %170 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %169, i32 0, i32 32
  %171 = load %struct._stritem*, %struct._stritem** %5, align 8
  %172 = getelementptr inbounds %struct._stritem, %struct._stritem* %171, i32 0, i32 8
  %173 = load i8, i8* %172, align 8
  %174 = zext i8 %173 to i64
  %175 = getelementptr inbounds [256 x i64], [256 x i64]* %170, i64 0, i64 %174
  %176 = load i64, i64* %175, align 8
  %177 = add i64 %176, 1
  store i64 %177, i64* %175, align 8
  br label %178

178:                                              ; preds = %158, %135
  %179 = load %struct.conn*, %struct.conn** %3, align 8
  %180 = getelementptr inbounds %struct.conn, %struct.conn* %179, i32 0, i32 42
  %181 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %180, align 8
  %182 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %181, i32 0, i32 4
  %183 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %182, i32 0, i32 0
  %184 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %183) #14
  %185 = load i32, i32* %9, align 4
  %186 = icmp ne i32 %185, 0
  br i1 %186, label %187, label %188

187:                                              ; preds = %178
  br label %189

188:                                              ; preds = %178
  br label %189

189:                                              ; preds = %188, %187
  %190 = load %struct.conn*, %struct.conn** %3, align 8
  %191 = getelementptr inbounds %struct.conn, %struct.conn* %190, i32 0, i32 38
  %192 = load i16, i16* %191, align 8
  %193 = sext i16 %192 to i32
  %194 = icmp eq i32 %193, 28
  br i1 %194, label %195, label %202

195:                                              ; preds = %189
  %196 = load %struct._stritem*, %struct._stritem** %5, align 8
  %197 = getelementptr inbounds %struct._stritem, %struct._stritem* %196, i32 0, i32 5
  %198 = load i32, i32* %197, align 8
  %199 = sub nsw i32 %198, 2
  %200 = load i32, i32* %16, align 4
  %201 = sub i32 %200, %199
  store i32 %201, i32* %16, align 4
  br label %214

202:                                              ; preds = %189
  %203 = load i32, i32* %10, align 4
  %204 = icmp ne i32 %203, 0
  br i1 %204, label %205, label %213

205:                                              ; preds = %202
  %206 = load i64, i64* %8, align 8
  %207 = load i32, i32* %16, align 4
  %208 = zext i32 %207 to i64
  %209 = add i64 %208, %206
  %210 = trunc i64 %209 to i32
  store i32 %210, i32* %16, align 4
  %211 = load i64, i64* %8, align 8
  %212 = trunc i64 %211 to i16
  store i16 %212, i16* %15, align 2
  br label %213

213:                                              ; preds = %205, %202
  br label %214

214:                                              ; preds = %213, %195
  %215 = load %struct.conn*, %struct.conn** %3, align 8
  %216 = load i16, i16* %15, align 2
  %217 = load i32, i32* %16, align 4
  call void @add_bin_header(%struct.conn* %215, i16 zeroext 0, i8 zeroext 4, i16 zeroext %216, i32 %217)
  %218 = load %struct._stritem*, %struct._stritem** %5, align 8
  %219 = getelementptr inbounds %struct._stritem, %struct._stritem* %218, i32 0, i32 7
  %220 = load i16, i16* %219, align 2
  %221 = zext i16 %220 to i32
  %222 = and i32 %221, 2
  %223 = icmp ne i32 %222, 0
  br i1 %223, label %224, label %230

224:                                              ; preds = %214
  %225 = load %struct._stritem*, %struct._stritem** %5, align 8
  %226 = getelementptr inbounds %struct._stritem, %struct._stritem* %225, i32 0, i32 10
  %227 = getelementptr inbounds [0 x %union.anon.10], [0 x %union.anon.10]* %226, i64 0, i64 0
  %228 = bitcast %union.anon.10* %227 to i64*
  %229 = load i64, i64* %228, align 8
  br label %231

230:                                              ; preds = %214
  br label %231

231:                                              ; preds = %230, %224
  %232 = phi i64 [ %229, %224 ], [ 0, %230 ]
  %233 = call i64 @htonll(i64 %232)
  %234 = load %union.protocol_binary_response_get*, %union.protocol_binary_response_get** %6, align 8
  %235 = bitcast %union.protocol_binary_response_get* %234 to %struct.anon.18*
  %236 = getelementptr inbounds %struct.anon.18, %struct.anon.18* %235, i32 0, i32 0
  %237 = bitcast %union.protocol_binary_request_header* %236 to %struct.anon.13*
  %238 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %237, i32 0, i32 8
  store i64 %233, i64* %238, align 8
  %239 = load %struct._stritem*, %struct._stritem** %5, align 8
  %240 = getelementptr inbounds %struct._stritem, %struct._stritem* %239, i32 0, i32 7
  %241 = load i16, i16* %240, align 2
  %242 = zext i16 %241 to i32
  %243 = and i32 %242, 256
  %244 = icmp ne i32 %243, 0
  br i1 %244, label %245, label %271

245:                                              ; preds = %231
  %246 = load %struct._stritem*, %struct._stritem** %5, align 8
  %247 = getelementptr inbounds %struct._stritem, %struct._stritem* %246, i32 0, i32 10
  %248 = bitcast [0 x %union.anon.10]* %247 to i8*
  %249 = load %struct._stritem*, %struct._stritem** %5, align 8
  %250 = getelementptr inbounds %struct._stritem, %struct._stritem* %249, i32 0, i32 9
  %251 = load i8, i8* %250, align 1
  %252 = zext i8 %251 to i32
  %253 = sext i32 %252 to i64
  %254 = getelementptr inbounds i8, i8* %248, i64 %253
  %255 = getelementptr inbounds i8, i8* %254, i64 1
  %256 = load %struct._stritem*, %struct._stritem** %5, align 8
  %257 = getelementptr inbounds %struct._stritem, %struct._stritem* %256, i32 0, i32 7
  %258 = load i16, i16* %257, align 2
  %259 = zext i16 %258 to i32
  %260 = and i32 %259, 2
  %261 = icmp ne i32 %260, 0
  %262 = zext i1 %261 to i64
  %263 = select i1 %261, i64 8, i64 0
  %264 = getelementptr inbounds i8, i8* %255, i64 %263
  %265 = bitcast i8* %264 to i32*
  %266 = load i32, i32* %265, align 4
  %267 = load %union.protocol_binary_response_get*, %union.protocol_binary_response_get** %6, align 8
  %268 = bitcast %union.protocol_binary_response_get* %267 to %struct.anon.18*
  %269 = getelementptr inbounds %struct.anon.18, %struct.anon.18* %268, i32 0, i32 1
  %270 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %269, i32 0, i32 0
  store i32 %266, i32* %270, align 8
  br label %276

271:                                              ; preds = %231
  %272 = load %union.protocol_binary_response_get*, %union.protocol_binary_response_get** %6, align 8
  %273 = bitcast %union.protocol_binary_response_get* %272 to %struct.anon.18*
  %274 = getelementptr inbounds %struct.anon.18, %struct.anon.18* %273, i32 0, i32 1
  %275 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %274, i32 0, i32 0
  store i32 0, i32* %275, align 8
  br label %276

276:                                              ; preds = %271, %245
  %277 = load %union.protocol_binary_response_get*, %union.protocol_binary_response_get** %6, align 8
  %278 = bitcast %union.protocol_binary_response_get* %277 to %struct.anon.18*
  %279 = getelementptr inbounds %struct.anon.18, %struct.anon.18* %278, i32 0, i32 1
  %280 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %279, i32 0, i32 0
  %281 = load i32, i32* %280, align 8
  %282 = call i32 @htonl(i32 %281) #15
  %283 = load %union.protocol_binary_response_get*, %union.protocol_binary_response_get** %6, align 8
  %284 = bitcast %union.protocol_binary_response_get* %283 to %struct.anon.18*
  %285 = getelementptr inbounds %struct.anon.18, %struct.anon.18* %284, i32 0, i32 1
  %286 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %285, i32 0, i32 0
  store i32 %282, i32* %286, align 8
  %287 = load %struct.conn*, %struct.conn** %3, align 8
  %288 = getelementptr inbounds %struct.conn, %struct.conn* %287, i32 0, i32 19
  %289 = load %struct._mc_resp*, %struct._mc_resp** %288, align 8
  %290 = load %union.protocol_binary_response_get*, %union.protocol_binary_response_get** %6, align 8
  %291 = bitcast %union.protocol_binary_response_get* %290 to %struct.anon.18*
  %292 = getelementptr inbounds %struct.anon.18, %struct.anon.18* %291, i32 0, i32 1
  %293 = bitcast %struct.in_addr* %292 to i8*
  call void @resp_add_iov(%struct._mc_resp* %289, i8* %293, i32 4)
  %294 = load i32, i32* %10, align 4
  %295 = icmp ne i32 %294, 0
  br i1 %295, label %296, label %314

296:                                              ; preds = %276
  %297 = load %struct.conn*, %struct.conn** %3, align 8
  %298 = getelementptr inbounds %struct.conn, %struct.conn* %297, i32 0, i32 19
  %299 = load %struct._mc_resp*, %struct._mc_resp** %298, align 8
  %300 = load %struct._stritem*, %struct._stritem** %5, align 8
  %301 = getelementptr inbounds %struct._stritem, %struct._stritem* %300, i32 0, i32 10
  %302 = bitcast [0 x %union.anon.10]* %301 to i8*
  %303 = load %struct._stritem*, %struct._stritem** %5, align 8
  %304 = getelementptr inbounds %struct._stritem, %struct._stritem* %303, i32 0, i32 7
  %305 = load i16, i16* %304, align 2
  %306 = zext i16 %305 to i32
  %307 = and i32 %306, 2
  %308 = icmp ne i32 %307, 0
  %309 = zext i1 %308 to i64
  %310 = select i1 %308, i64 8, i64 0
  %311 = getelementptr inbounds i8, i8* %302, i64 %310
  %312 = load i64, i64* %8, align 8
  %313 = trunc i64 %312 to i32
  call void @resp_add_iov(%struct._mc_resp* %299, i8* %311, i32 %313)
  br label %314

314:                                              ; preds = %296, %276
  %315 = load i32, i32* %11, align 4
  %316 = icmp ne i32 %315, 0
  br i1 %316, label %317, label %408

317:                                              ; preds = %314
  %318 = load %struct._stritem*, %struct._stritem** %5, align 8
  %319 = getelementptr inbounds %struct._stritem, %struct._stritem* %318, i32 0, i32 7
  %320 = load i16, i16* %319, align 2
  %321 = zext i16 %320 to i32
  %322 = and i32 %321, 128
  %323 = icmp ne i32 %322, 0
  br i1 %323, label %324, label %353

324:                                              ; preds = %317
  %325 = load %struct.conn*, %struct.conn** %3, align 8
  %326 = load %struct._stritem*, %struct._stritem** %5, align 8
  %327 = load %struct.conn*, %struct.conn** %3, align 8
  %328 = getelementptr inbounds %struct.conn, %struct.conn* %327, i32 0, i32 19
  %329 = load %struct._mc_resp*, %struct._mc_resp** %328, align 8
  %330 = call i32 @storage_get_item(%struct.conn* %325, %struct._stritem* %326, %struct._mc_resp* %329)
  %331 = icmp ne i32 %330, 0
  br i1 %331, label %332, label %352

332:                                              ; preds = %324
  %333 = load %struct.conn*, %struct.conn** %3, align 8
  %334 = getelementptr inbounds %struct.conn, %struct.conn* %333, i32 0, i32 42
  %335 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %334, align 8
  %336 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %335, i32 0, i32 4
  %337 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %336, i32 0, i32 0
  %338 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %337) #14
  %339 = load %struct.conn*, %struct.conn** %3, align 8
  %340 = getelementptr inbounds %struct.conn, %struct.conn* %339, i32 0, i32 42
  %341 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %340, align 8
  %342 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %341, i32 0, i32 4
  %343 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %342, i32 0, i32 27
  %344 = load i64, i64* %343, align 8
  %345 = add i64 %344, 1
  store i64 %345, i64* %343, align 8
  %346 = load %struct.conn*, %struct.conn** %3, align 8
  %347 = getelementptr inbounds %struct.conn, %struct.conn* %346, i32 0, i32 42
  %348 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %347, align 8
  %349 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %348, i32 0, i32 4
  %350 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %349, i32 0, i32 0
  %351 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %350) #14
  store i8 1, i8* %12, align 1
  br label %352

352:                                              ; preds = %332, %324
  br label %407

353:                                              ; preds = %317
  %354 = load %struct._stritem*, %struct._stritem** %5, align 8
  %355 = getelementptr inbounds %struct._stritem, %struct._stritem* %354, i32 0, i32 7
  %356 = load i16, i16* %355, align 2
  %357 = zext i16 %356 to i32
  %358 = and i32 %357, 32
  %359 = icmp eq i32 %358, 0
  br i1 %359, label %360, label %396

360:                                              ; preds = %353
  %361 = load %struct.conn*, %struct.conn** %3, align 8
  %362 = getelementptr inbounds %struct.conn, %struct.conn* %361, i32 0, i32 19
  %363 = load %struct._mc_resp*, %struct._mc_resp** %362, align 8
  %364 = load %struct._stritem*, %struct._stritem** %5, align 8
  %365 = getelementptr inbounds %struct._stritem, %struct._stritem* %364, i32 0, i32 10
  %366 = bitcast [0 x %union.anon.10]* %365 to i8*
  %367 = load %struct._stritem*, %struct._stritem** %5, align 8
  %368 = getelementptr inbounds %struct._stritem, %struct._stritem* %367, i32 0, i32 9
  %369 = load i8, i8* %368, align 1
  %370 = zext i8 %369 to i32
  %371 = sext i32 %370 to i64
  %372 = getelementptr inbounds i8, i8* %366, i64 %371
  %373 = getelementptr inbounds i8, i8* %372, i64 1
  %374 = load %struct._stritem*, %struct._stritem** %5, align 8
  %375 = getelementptr inbounds %struct._stritem, %struct._stritem* %374, i32 0, i32 7
  %376 = load i16, i16* %375, align 2
  %377 = zext i16 %376 to i32
  %378 = and i32 %377, 256
  %379 = icmp ne i32 %378, 0
  %380 = zext i1 %379 to i64
  %381 = select i1 %379, i64 4, i64 0
  %382 = getelementptr inbounds i8, i8* %373, i64 %381
  %383 = load %struct._stritem*, %struct._stritem** %5, align 8
  %384 = getelementptr inbounds %struct._stritem, %struct._stritem* %383, i32 0, i32 7
  %385 = load i16, i16* %384, align 2
  %386 = zext i16 %385 to i32
  %387 = and i32 %386, 2
  %388 = icmp ne i32 %387, 0
  %389 = zext i1 %388 to i64
  %390 = select i1 %388, i64 8, i64 0
  %391 = getelementptr inbounds i8, i8* %382, i64 %390
  %392 = load %struct._stritem*, %struct._stritem** %5, align 8
  %393 = getelementptr inbounds %struct._stritem, %struct._stritem* %392, i32 0, i32 5
  %394 = load i32, i32* %393, align 8
  %395 = sub nsw i32 %394, 2
  call void @resp_add_iov(%struct._mc_resp* %363, i8* %391, i32 %395)
  br label %406

396:                                              ; preds = %353
  %397 = load %struct.conn*, %struct.conn** %3, align 8
  %398 = getelementptr inbounds %struct.conn, %struct.conn* %397, i32 0, i32 19
  %399 = load %struct._mc_resp*, %struct._mc_resp** %398, align 8
  %400 = load %struct._stritem*, %struct._stritem** %5, align 8
  %401 = bitcast %struct._stritem* %400 to i8*
  %402 = load %struct._stritem*, %struct._stritem** %5, align 8
  %403 = getelementptr inbounds %struct._stritem, %struct._stritem* %402, i32 0, i32 5
  %404 = load i32, i32* %403, align 8
  %405 = sub nsw i32 %404, 2
  call void @resp_add_chunked_iov(%struct._mc_resp* %399, i8* %401, i32 %405)
  br label %406

406:                                              ; preds = %396, %360
  br label %407

407:                                              ; preds = %406, %352
  br label %408

408:                                              ; preds = %407, %314
  %409 = load i8, i8* %12, align 1
  %410 = trunc i8 %409 to i1
  br i1 %410, label %434, label %411

411:                                              ; preds = %408
  %412 = load %struct.conn*, %struct.conn** %3, align 8
  call void @conn_set_state(%struct.conn* %412, i32 1)
  %413 = load %struct._stritem*, %struct._stritem** %5, align 8
  %414 = getelementptr inbounds %struct._stritem, %struct._stritem* %413, i32 0, i32 7
  %415 = load i16, i16* %414, align 2
  %416 = zext i16 %415 to i32
  %417 = and i32 %416, 128
  %418 = icmp ne i32 %417, 0
  br i1 %418, label %419, label %427

419:                                              ; preds = %411
  %420 = load i32, i32* %11, align 4
  %421 = icmp ne i32 %420, 0
  br i1 %421, label %422, label %427

422:                                              ; preds = %419
  %423 = load %struct.conn*, %struct.conn** %3, align 8
  %424 = getelementptr inbounds %struct.conn, %struct.conn* %423, i32 0, i32 19
  %425 = load %struct._mc_resp*, %struct._mc_resp** %424, align 8
  %426 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %425, i32 0, i32 6
  store %struct._stritem* null, %struct._stritem** %426, align 8
  br label %433

427:                                              ; preds = %419, %411
  %428 = load %struct._stritem*, %struct._stritem** %5, align 8
  %429 = load %struct.conn*, %struct.conn** %3, align 8
  %430 = getelementptr inbounds %struct.conn, %struct.conn* %429, i32 0, i32 19
  %431 = load %struct._mc_resp*, %struct._mc_resp** %430, align 8
  %432 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %431, i32 0, i32 6
  store %struct._stritem* %428, %struct._stritem** %432, align 8
  br label %433

433:                                              ; preds = %427, %422
  br label %436

434:                                              ; preds = %408
  %435 = load %struct._stritem*, %struct._stritem** %5, align 8
  call void @item_remove(%struct._stritem* %435)
  br label %436

436:                                              ; preds = %434, %433
  br label %438

437:                                              ; preds = %116
  store i8 1, i8* %12, align 1
  br label %438

438:                                              ; preds = %437, %436
  %439 = load i8, i8* %12, align 1
  %440 = trunc i8 %439 to i1
  br i1 %440, label %441, label %509

441:                                              ; preds = %438
  %442 = load %struct.conn*, %struct.conn** %3, align 8
  %443 = getelementptr inbounds %struct.conn, %struct.conn* %442, i32 0, i32 42
  %444 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %443, align 8
  %445 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %444, i32 0, i32 4
  %446 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %445, i32 0, i32 0
  %447 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %446) #14
  %448 = load i32, i32* %9, align 4
  %449 = icmp ne i32 %448, 0
  br i1 %449, label %450, label %465

450:                                              ; preds = %441
  %451 = load %struct.conn*, %struct.conn** %3, align 8
  %452 = getelementptr inbounds %struct.conn, %struct.conn* %451, i32 0, i32 42
  %453 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %452, align 8
  %454 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %453, i32 0, i32 4
  %455 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %454, i32 0, i32 5
  %456 = load i64, i64* %455, align 8
  %457 = add i64 %456, 1
  store i64 %457, i64* %455, align 8
  %458 = load %struct.conn*, %struct.conn** %3, align 8
  %459 = getelementptr inbounds %struct.conn, %struct.conn* %458, i32 0, i32 42
  %460 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %459, align 8
  %461 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %460, i32 0, i32 4
  %462 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %461, i32 0, i32 6
  %463 = load i64, i64* %462, align 8
  %464 = add i64 %463, 1
  store i64 %464, i64* %462, align 8
  br label %480

465:                                              ; preds = %441
  %466 = load %struct.conn*, %struct.conn** %3, align 8
  %467 = getelementptr inbounds %struct.conn, %struct.conn* %466, i32 0, i32 42
  %468 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %467, align 8
  %469 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %468, i32 0, i32 4
  %470 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %469, i32 0, i32 1
  %471 = load i64, i64* %470, align 8
  %472 = add i64 %471, 1
  store i64 %472, i64* %470, align 8
  %473 = load %struct.conn*, %struct.conn** %3, align 8
  %474 = getelementptr inbounds %struct.conn, %struct.conn* %473, i32 0, i32 42
  %475 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %474, align 8
  %476 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %475, i32 0, i32 4
  %477 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %476, i32 0, i32 2
  %478 = load i64, i64* %477, align 8
  %479 = add i64 %478, 1
  store i64 %479, i64* %477, align 8
  br label %480

480:                                              ; preds = %465, %450
  %481 = load %struct.conn*, %struct.conn** %3, align 8
  %482 = getelementptr inbounds %struct.conn, %struct.conn* %481, i32 0, i32 42
  %483 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %482, align 8
  %484 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %483, i32 0, i32 4
  %485 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %484, i32 0, i32 0
  %486 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %485) #14
  %487 = load i32, i32* %9, align 4
  %488 = icmp ne i32 %487, 0
  br i1 %488, label %489, label %490

489:                                              ; preds = %480
  br label %491

490:                                              ; preds = %480
  br label %491

491:                                              ; preds = %490, %489
  %492 = load %struct.conn*, %struct.conn** %3, align 8
  %493 = getelementptr inbounds %struct.conn, %struct.conn* %492, i32 0, i32 34
  %494 = load i8, i8* %493, align 4
  %495 = trunc i8 %494 to i1
  br i1 %495, label %496, label %498

496:                                              ; preds = %491
  %497 = load %struct.conn*, %struct.conn** %3, align 8
  call void @conn_set_state(%struct.conn* %497, i32 1)
  br label %508

498:                                              ; preds = %491
  %499 = load i32, i32* %10, align 4
  %500 = icmp ne i32 %499, 0
  br i1 %500, label %501, label %505

501:                                              ; preds = %498
  %502 = load %struct.conn*, %struct.conn** %3, align 8
  %503 = load i8*, i8** %7, align 8
  %504 = load i64, i64* %8, align 8
  call void @write_bin_miss_response(%struct.conn* %502, i8* %503, i64 %504)
  br label %507

505:                                              ; preds = %498
  %506 = load %struct.conn*, %struct.conn** %3, align 8
  call void @write_bin_miss_response(%struct.conn* %506, i8* null, i64 0)
  br label %507

507:                                              ; preds = %505, %501
  br label %508

508:                                              ; preds = %507, %496
  br label %509

509:                                              ; preds = %508, %438
  %510 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 17), align 8
  %511 = icmp ne i32 %510, 0
  br i1 %511, label %512, label %517

512:                                              ; preds = %509
  %513 = load i8*, i8** %7, align 8
  %514 = load i64, i64* %8, align 8
  %515 = load %struct._stritem*, %struct._stritem** %5, align 8
  %516 = icmp ne %struct._stritem* null, %515
  call void @stats_prefix_record_get(i8* %513, i64 %514, i1 zeroext %516)
  br label %517

517:                                              ; preds = %512, %509
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @process_bin_delete(%struct.conn* %0) #0 {
  %2 = alloca %struct.conn*, align 8
  %3 = alloca %struct._stritem*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  store %struct.conn* %0, %struct.conn** %2, align 8
  %9 = load %struct.conn*, %struct.conn** %2, align 8
  %10 = call i8* @binary_get_key(%struct.conn* %9)
  store i8* %10, i8** %5, align 8
  %11 = load %struct.conn*, %struct.conn** %2, align 8
  %12 = getelementptr inbounds %struct.conn, %struct.conn* %11, i32 0, i32 36
  %13 = bitcast %union.protocol_binary_request_header* %12 to %struct.anon.13*
  %14 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %13, i32 0, i32 2
  %15 = load i16, i16* %14, align 2
  %16 = zext i16 %15 to i64
  store i64 %16, i64* %6, align 8
  %17 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %18 = icmp sgt i32 %17, 1
  br i1 %18, label %19, label %42

19:                                               ; preds = %1
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %21 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %20, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.41.1199, i64 0, i64 0))
  store i32 0, i32* %7, align 4
  br label %22

22:                                               ; preds = %36, %19
  %23 = load i32, i32* %7, align 4
  %24 = sext i32 %23 to i64
  %25 = load i64, i64* %6, align 8
  %26 = icmp ult i64 %24, %25
  br i1 %26, label %27, label %39

27:                                               ; preds = %22
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %29 = load i8*, i8** %5, align 8
  %30 = load i32, i32* %7, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds i8, i8* %29, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = sext i8 %33 to i32
  %35 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %28, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35.1181, i64 0, i64 0), i32 %34)
  br label %36

36:                                               ; preds = %27
  %37 = load i32, i32* %7, align 4
  %38 = add nsw i32 %37, 1
  store i32 %38, i32* %7, align 4
  br label %22, !llvm.loop !175

39:                                               ; preds = %22
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %41 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %40, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.1159, i64 0, i64 0))
  br label %42

42:                                               ; preds = %39, %1
  %43 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 17), align 8
  %44 = icmp ne i32 %43, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %42
  %46 = load i8*, i8** %5, align 8
  %47 = load i64, i64* %6, align 8
  call void @stats_prefix_record_delete(i8* %46, i64 %47)
  br label %48

48:                                               ; preds = %45, %42
  %49 = load i8*, i8** %5, align 8
  %50 = load i64, i64* %6, align 8
  %51 = load %struct.conn*, %struct.conn** %2, align 8
  %52 = call %struct._stritem* @item_get_locked(i8* %49, i64 %50, %struct.conn* %51, i1 zeroext false, i32* %4)
  store %struct._stritem* %52, %struct._stritem** %3, align 8
  %53 = load %struct._stritem*, %struct._stritem** %3, align 8
  %54 = icmp ne %struct._stritem* %53, null
  br i1 %54, label %55, label %124

55:                                               ; preds = %48
  %56 = load %struct.conn*, %struct.conn** %2, align 8
  %57 = getelementptr inbounds %struct.conn, %struct.conn* %56, i32 0, i32 36
  %58 = bitcast %union.protocol_binary_request_header* %57 to %struct.anon.13*
  %59 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %58, i32 0, i32 8
  %60 = load i64, i64* %59, align 8
  store i64 %60, i64* %8, align 8
  %61 = load i64, i64* %8, align 8
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %81, label %63

63:                                               ; preds = %55
  %64 = load i64, i64* %8, align 8
  %65 = load %struct._stritem*, %struct._stritem** %3, align 8
  %66 = getelementptr inbounds %struct._stritem, %struct._stritem* %65, i32 0, i32 7
  %67 = load i16, i16* %66, align 2
  %68 = zext i16 %67 to i32
  %69 = and i32 %68, 2
  %70 = icmp ne i32 %69, 0
  br i1 %70, label %71, label %77

71:                                               ; preds = %63
  %72 = load %struct._stritem*, %struct._stritem** %3, align 8
  %73 = getelementptr inbounds %struct._stritem, %struct._stritem* %72, i32 0, i32 10
  %74 = getelementptr inbounds [0 x %union.anon.10], [0 x %union.anon.10]* %73, i64 0, i64 0
  %75 = bitcast %union.anon.10* %74 to i64*
  %76 = load i64, i64* %75, align 8
  br label %78

77:                                               ; preds = %63
  br label %78

78:                                               ; preds = %77, %71
  %79 = phi i64 [ %76, %71 ], [ 0, %77 ]
  %80 = icmp eq i64 %64, %79
  br i1 %80, label %81, label %120

81:                                               ; preds = %78, %55
  %82 = load %struct.conn*, %struct.conn** %2, align 8
  %83 = getelementptr inbounds %struct.conn, %struct.conn* %82, i32 0, i32 42
  %84 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %83, align 8
  %85 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %84, i32 0, i32 4
  %86 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %85, i32 0, i32 0
  %87 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %86) #14
  %88 = load %struct.conn*, %struct.conn** %2, align 8
  %89 = getelementptr inbounds %struct.conn, %struct.conn* %88, i32 0, i32 42
  %90 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %89, align 8
  %91 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %90, i32 0, i32 4
  %92 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %91, i32 0, i32 31
  %93 = load %struct._stritem*, %struct._stritem** %3, align 8
  %94 = getelementptr inbounds %struct._stritem, %struct._stritem* %93, i32 0, i32 8
  %95 = load i8, i8* %94, align 8
  %96 = zext i8 %95 to i32
  %97 = and i32 %96, -193
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds [64 x %struct.slab_stats], [64 x %struct.slab_stats]* %92, i64 0, i64 %98
  %100 = getelementptr inbounds %struct.slab_stats, %struct.slab_stats* %99, i32 0, i32 3
  %101 = load i64, i64* %100, align 8
  %102 = add i64 %101, 1
  store i64 %102, i64* %100, align 8
  %103 = load %struct.conn*, %struct.conn** %2, align 8
  %104 = getelementptr inbounds %struct.conn, %struct.conn* %103, i32 0, i32 42
  %105 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %104, align 8
  %106 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %105, i32 0, i32 4
  %107 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %106, i32 0, i32 0
  %108 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %107) #14
  %109 = load %struct._stritem*, %struct._stritem** %3, align 8
  %110 = load i32, i32* %4, align 4
  call void @do_item_unlink(%struct._stritem* %109, i32 %110)
  br label %111

111:                                              ; preds = %81
  %112 = load %struct.conn*, %struct.conn** %2, align 8
  %113 = getelementptr inbounds %struct.conn, %struct.conn* %112, i32 0, i32 42
  %114 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %113, align 8
  %115 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %114, i32 0, i32 10
  %116 = load i8*, i8** %115, align 8
  %117 = load %struct._stritem*, %struct._stritem** %3, align 8
  call void @storage_delete(i8* %116, %struct._stritem* %117)
  br label %118

118:                                              ; preds = %111
  %119 = load %struct.conn*, %struct.conn** %2, align 8
  call void @write_bin_response(%struct.conn* %119, i8* null, i32 0, i32 0, i32 0)
  br label %122

120:                                              ; preds = %78
  %121 = load %struct.conn*, %struct.conn** %2, align 8
  call void @write_bin_error(%struct.conn* %121, i32 2, i8* null, i32 0)
  br label %122

122:                                              ; preds = %120, %118
  %123 = load %struct._stritem*, %struct._stritem** %3, align 8
  call void @do_item_remove(%struct._stritem* %123)
  br label %145

124:                                              ; preds = %48
  %125 = load %struct.conn*, %struct.conn** %2, align 8
  call void @write_bin_error(%struct.conn* %125, i32 1, i8* null, i32 0)
  %126 = load %struct.conn*, %struct.conn** %2, align 8
  %127 = getelementptr inbounds %struct.conn, %struct.conn* %126, i32 0, i32 42
  %128 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %127, align 8
  %129 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %128, i32 0, i32 4
  %130 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %129, i32 0, i32 0
  %131 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %130) #14
  %132 = load %struct.conn*, %struct.conn** %2, align 8
  %133 = getelementptr inbounds %struct.conn, %struct.conn* %132, i32 0, i32 42
  %134 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %133, align 8
  %135 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %134, i32 0, i32 4
  %136 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %135, i32 0, i32 7
  %137 = load i64, i64* %136, align 8
  %138 = add i64 %137, 1
  store i64 %138, i64* %136, align 8
  %139 = load %struct.conn*, %struct.conn** %2, align 8
  %140 = getelementptr inbounds %struct.conn, %struct.conn* %139, i32 0, i32 42
  %141 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %140, align 8
  %142 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %141, i32 0, i32 4
  %143 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %142, i32 0, i32 0
  %144 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %143) #14
  br label %145

145:                                              ; preds = %124, %122
  %146 = load i32, i32* %4, align 4
  call void @item_unlock(i32 %146)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @complete_incr_bin(%struct.conn* %0, i8* %1) #0 {
  %3 = alloca %struct.conn*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %struct._stritem*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca [24 x i8], align 16
  %9 = alloca i64, align 8
  %10 = alloca %union.protocol_binary_response_incr*, align 8
  %11 = alloca %union.protocol_binary_request_incr*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  store %struct.conn* %0, %struct.conn** %3, align 8
  store i8* %1, i8** %4, align 8
  store i64 0, i64* %9, align 8
  %14 = load %struct.conn*, %struct.conn** %3, align 8
  %15 = getelementptr inbounds %struct.conn, %struct.conn* %14, i32 0, i32 19
  %16 = load %struct._mc_resp*, %struct._mc_resp** %15, align 8
  %17 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %16, i32 0, i32 18
  %18 = getelementptr inbounds [1024 x i8], [1024 x i8]* %17, i64 0, i64 0
  %19 = bitcast i8* %18 to %union.protocol_binary_response_incr*
  store %union.protocol_binary_response_incr* %19, %union.protocol_binary_response_incr** %10, align 8
  %20 = load i8*, i8** %4, align 8
  %21 = bitcast i8* %20 to %union.protocol_binary_request_incr*
  store %union.protocol_binary_request_incr* %21, %union.protocol_binary_request_incr** %11, align 8
  %22 = load %union.protocol_binary_request_incr*, %union.protocol_binary_request_incr** %11, align 8
  %23 = bitcast %union.protocol_binary_request_incr* %22 to %struct.anon.24*
  %24 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %23, i32 0, i32 1
  %25 = getelementptr inbounds %struct.item_stats_automove, %struct.item_stats_automove* %24, i32 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = call i64 @ntohll(i64 %26)
  %28 = load %union.protocol_binary_request_incr*, %union.protocol_binary_request_incr** %11, align 8
  %29 = bitcast %union.protocol_binary_request_incr* %28 to %struct.anon.24*
  %30 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %29, i32 0, i32 1
  %31 = getelementptr inbounds %struct.item_stats_automove, %struct.item_stats_automove* %30, i32 0, i32 0
  store i64 %27, i64* %31, align 8
  %32 = load %union.protocol_binary_request_incr*, %union.protocol_binary_request_incr** %11, align 8
  %33 = bitcast %union.protocol_binary_request_incr* %32 to %struct.anon.24*
  %34 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %33, i32 0, i32 1
  %35 = getelementptr inbounds %struct.item_stats_automove, %struct.item_stats_automove* %34, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = call i64 @ntohll(i64 %36)
  %38 = load %union.protocol_binary_request_incr*, %union.protocol_binary_request_incr** %11, align 8
  %39 = bitcast %union.protocol_binary_request_incr* %38 to %struct.anon.24*
  %40 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %39, i32 0, i32 1
  %41 = getelementptr inbounds %struct.item_stats_automove, %struct.item_stats_automove* %40, i32 0, i32 1
  store i64 %37, i64* %41, align 8
  %42 = load %union.protocol_binary_request_incr*, %union.protocol_binary_request_incr** %11, align 8
  %43 = bitcast %union.protocol_binary_request_incr* %42 to %struct.anon.24*
  %44 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %43, i32 0, i32 1
  %45 = getelementptr inbounds %struct.item_stats_automove, %struct.item_stats_automove* %44, i32 0, i32 2
  %46 = load i32, i32* %45, align 8
  %47 = call i32 @ntohl(i32 %46) #15
  %48 = load %union.protocol_binary_request_incr*, %union.protocol_binary_request_incr** %11, align 8
  %49 = bitcast %union.protocol_binary_request_incr* %48 to %struct.anon.24*
  %50 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %49, i32 0, i32 1
  %51 = getelementptr inbounds %struct.item_stats_automove, %struct.item_stats_automove* %50, i32 0, i32 2
  store i32 %47, i32* %51, align 8
  %52 = load %struct.conn*, %struct.conn** %3, align 8
  %53 = call i8* @binary_get_key(%struct.conn* %52)
  store i8* %53, i8** %6, align 8
  %54 = load %struct.conn*, %struct.conn** %3, align 8
  %55 = getelementptr inbounds %struct.conn, %struct.conn* %54, i32 0, i32 36
  %56 = bitcast %union.protocol_binary_request_header* %55 to %struct.anon.13*
  %57 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %56, i32 0, i32 2
  %58 = load i16, i16* %57, align 2
  %59 = zext i16 %58 to i64
  store i64 %59, i64* %7, align 8
  %60 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %61 = icmp sgt i32 %60, 1
  br i1 %61, label %62, label %100

62:                                               ; preds = %2
  %63 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %64 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %63, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.42.1193, i64 0, i64 0))
  store i32 0, i32* %12, align 4
  br label %65

65:                                               ; preds = %79, %62
  %66 = load i32, i32* %12, align 4
  %67 = sext i32 %66 to i64
  %68 = load i64, i64* %7, align 8
  %69 = icmp ult i64 %67, %68
  br i1 %69, label %70, label %82

70:                                               ; preds = %65
  %71 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %72 = load i8*, i8** %6, align 8
  %73 = load i32, i32* %12, align 4
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i8, i8* %72, i64 %74
  %76 = load i8, i8* %75, align 1
  %77 = sext i8 %76 to i32
  %78 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %71, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35.1181, i64 0, i64 0), i32 %77)
  br label %79

79:                                               ; preds = %70
  %80 = load i32, i32* %12, align 4
  %81 = add nsw i32 %80, 1
  store i32 %81, i32* %12, align 4
  br label %65, !llvm.loop !176

82:                                               ; preds = %65
  %83 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %84 = load %union.protocol_binary_request_incr*, %union.protocol_binary_request_incr** %11, align 8
  %85 = bitcast %union.protocol_binary_request_incr* %84 to %struct.anon.24*
  %86 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %85, i32 0, i32 1
  %87 = getelementptr inbounds %struct.item_stats_automove, %struct.item_stats_automove* %86, i32 0, i32 0
  %88 = load i64, i64* %87, align 8
  %89 = load %union.protocol_binary_request_incr*, %union.protocol_binary_request_incr** %11, align 8
  %90 = bitcast %union.protocol_binary_request_incr* %89 to %struct.anon.24*
  %91 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %90, i32 0, i32 1
  %92 = getelementptr inbounds %struct.item_stats_automove, %struct.item_stats_automove* %91, i32 0, i32 1
  %93 = load i64, i64* %92, align 8
  %94 = load %union.protocol_binary_request_incr*, %union.protocol_binary_request_incr** %11, align 8
  %95 = bitcast %union.protocol_binary_request_incr* %94 to %struct.anon.24*
  %96 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %95, i32 0, i32 1
  %97 = getelementptr inbounds %struct.item_stats_automove, %struct.item_stats_automove* %96, i32 0, i32 2
  %98 = load i32, i32* %97, align 8
  %99 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %83, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.43.1194, i64 0, i64 0), i64 %88, i64 %93, i32 %98)
  br label %100

100:                                              ; preds = %82, %2
  %101 = load %struct.conn*, %struct.conn** %3, align 8
  %102 = getelementptr inbounds %struct.conn, %struct.conn* %101, i32 0, i32 36
  %103 = bitcast %union.protocol_binary_request_header* %102 to %struct.anon.13*
  %104 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %103, i32 0, i32 8
  %105 = load i64, i64* %104, align 8
  %106 = icmp ne i64 %105, 0
  br i1 %106, label %107, label %113

107:                                              ; preds = %100
  %108 = load %struct.conn*, %struct.conn** %3, align 8
  %109 = getelementptr inbounds %struct.conn, %struct.conn* %108, i32 0, i32 36
  %110 = bitcast %union.protocol_binary_request_header* %109 to %struct.anon.13*
  %111 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %110, i32 0, i32 8
  %112 = load i64, i64* %111, align 8
  store i64 %112, i64* %9, align 8
  br label %113

113:                                              ; preds = %107, %100
  %114 = load %struct.conn*, %struct.conn** %3, align 8
  %115 = load i8*, i8** %6, align 8
  %116 = load i64, i64* %7, align 8
  %117 = load %struct.conn*, %struct.conn** %3, align 8
  %118 = getelementptr inbounds %struct.conn, %struct.conn* %117, i32 0, i32 38
  %119 = load i16, i16* %118, align 8
  %120 = sext i16 %119 to i32
  %121 = icmp eq i32 %120, 5
  %122 = load %union.protocol_binary_request_incr*, %union.protocol_binary_request_incr** %11, align 8
  %123 = bitcast %union.protocol_binary_request_incr* %122 to %struct.anon.24*
  %124 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %123, i32 0, i32 1
  %125 = getelementptr inbounds %struct.item_stats_automove, %struct.item_stats_automove* %124, i32 0, i32 0
  %126 = load i64, i64* %125, align 8
  %127 = getelementptr inbounds [24 x i8], [24 x i8]* %8, i64 0, i64 0
  %128 = call i32 @add_delta(%struct.conn* %114, i8* %115, i64 %116, i1 zeroext %121, i64 %126, i8* %127, i64* %9)
  switch i32 %128, label %331 [
    i32 0, label %129
    i32 1, label %149
    i32 2, label %151
    i32 3, label %153
    i32 4, label %329
  ]

129:                                              ; preds = %113
  %130 = getelementptr inbounds [24 x i8], [24 x i8]* %8, i64 0, i64 0
  %131 = call i64 @strtoull(i8* %130, i8** null, i32 10) #14
  %132 = call i64 @htonll(i64 %131)
  %133 = load %union.protocol_binary_response_incr*, %union.protocol_binary_response_incr** %10, align 8
  %134 = bitcast %union.protocol_binary_response_incr* %133 to %struct.anon.22*
  %135 = getelementptr inbounds %struct.anon.22, %struct.anon.22* %134, i32 0, i32 1
  %136 = getelementptr inbounds %union.anon.10, %union.anon.10* %135, i32 0, i32 0
  store i64 %132, i64* %136, align 8
  %137 = load i64, i64* %9, align 8
  %138 = icmp ne i64 %137, 0
  br i1 %138, label %139, label %143

139:                                              ; preds = %129
  %140 = load i64, i64* %9, align 8
  %141 = load %struct.conn*, %struct.conn** %3, align 8
  %142 = getelementptr inbounds %struct.conn, %struct.conn* %141, i32 0, i32 37
  store i64 %140, i64* %142, align 8
  br label %143

143:                                              ; preds = %139, %129
  %144 = load %struct.conn*, %struct.conn** %3, align 8
  %145 = load %union.protocol_binary_response_incr*, %union.protocol_binary_response_incr** %10, align 8
  %146 = bitcast %union.protocol_binary_response_incr* %145 to %struct.anon.22*
  %147 = getelementptr inbounds %struct.anon.22, %struct.anon.22* %146, i32 0, i32 1
  %148 = bitcast %union.anon.10* %147 to i8*
  call void @write_bin_response(%struct.conn* %144, i8* %148, i32 0, i32 0, i32 8)
  br label %331

149:                                              ; preds = %113
  %150 = load %struct.conn*, %struct.conn** %3, align 8
  call void @write_bin_error(%struct.conn* %150, i32 6, i8* null, i32 0)
  br label %331

151:                                              ; preds = %113
  %152 = load %struct.conn*, %struct.conn** %3, align 8
  call void @out_of_memory(%struct.conn* %152, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.44.1195, i64 0, i64 0))
  br label %331

153:                                              ; preds = %113
  %154 = load %union.protocol_binary_request_incr*, %union.protocol_binary_request_incr** %11, align 8
  %155 = bitcast %union.protocol_binary_request_incr* %154 to %struct.anon.24*
  %156 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %155, i32 0, i32 1
  %157 = getelementptr inbounds %struct.item_stats_automove, %struct.item_stats_automove* %156, i32 0, i32 2
  %158 = load i32, i32* %157, align 8
  %159 = icmp ne i32 %158, -1
  br i1 %159, label %160, label %292

160:                                              ; preds = %153
  %161 = load %union.protocol_binary_request_incr*, %union.protocol_binary_request_incr** %11, align 8
  %162 = bitcast %union.protocol_binary_request_incr* %161 to %struct.anon.24*
  %163 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %162, i32 0, i32 1
  %164 = getelementptr inbounds %struct.item_stats_automove, %struct.item_stats_automove* %163, i32 0, i32 1
  %165 = load i64, i64* %164, align 8
  %166 = call i64 @htonll(i64 %165)
  %167 = load %union.protocol_binary_response_incr*, %union.protocol_binary_response_incr** %10, align 8
  %168 = bitcast %union.protocol_binary_response_incr* %167 to %struct.anon.22*
  %169 = getelementptr inbounds %struct.anon.22, %struct.anon.22* %168, i32 0, i32 1
  %170 = getelementptr inbounds %union.anon.10, %union.anon.10* %169, i32 0, i32 0
  store i64 %166, i64* %170, align 8
  %171 = getelementptr inbounds [24 x i8], [24 x i8]* %8, i64 0, i64 0
  %172 = load %union.protocol_binary_request_incr*, %union.protocol_binary_request_incr** %11, align 8
  %173 = bitcast %union.protocol_binary_request_incr* %172 to %struct.anon.24*
  %174 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %173, i32 0, i32 1
  %175 = getelementptr inbounds %struct.item_stats_automove, %struct.item_stats_automove* %174, i32 0, i32 1
  %176 = load i64, i64* %175, align 8
  %177 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %171, i64 24, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.45.1196, i64 0, i64 0), i64 %176) #14
  %178 = getelementptr inbounds [24 x i8], [24 x i8]* %8, i64 0, i64 0
  %179 = call i64 @strlen(i8* %178) #16
  %180 = trunc i64 %179 to i32
  store i32 %180, i32* %13, align 4
  %181 = load i8*, i8** %6, align 8
  %182 = load i64, i64* %7, align 8
  %183 = load %union.protocol_binary_request_incr*, %union.protocol_binary_request_incr** %11, align 8
  %184 = bitcast %union.protocol_binary_request_incr* %183 to %struct.anon.24*
  %185 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %184, i32 0, i32 1
  %186 = getelementptr inbounds %struct.item_stats_automove, %struct.item_stats_automove* %185, i32 0, i32 2
  %187 = load i32, i32* %186, align 8
  %188 = zext i32 %187 to i64
  %189 = call i32 @realtime(i64 %188)
  %190 = load i32, i32* %13, align 4
  %191 = add nsw i32 %190, 2
  %192 = call %struct._stritem* @item_alloc(i8* %181, i64 %182, i32 0, i32 %189, i32 %191)
  store %struct._stritem* %192, %struct._stritem** %5, align 8
  %193 = load %struct._stritem*, %struct._stritem** %5, align 8
  %194 = icmp ne %struct._stritem* %193, null
  br i1 %194, label %195, label %289

195:                                              ; preds = %160
  %196 = load %struct._stritem*, %struct._stritem** %5, align 8
  %197 = getelementptr inbounds %struct._stritem, %struct._stritem* %196, i32 0, i32 10
  %198 = bitcast [0 x %union.anon.10]* %197 to i8*
  %199 = load %struct._stritem*, %struct._stritem** %5, align 8
  %200 = getelementptr inbounds %struct._stritem, %struct._stritem* %199, i32 0, i32 9
  %201 = load i8, i8* %200, align 1
  %202 = zext i8 %201 to i32
  %203 = sext i32 %202 to i64
  %204 = getelementptr inbounds i8, i8* %198, i64 %203
  %205 = getelementptr inbounds i8, i8* %204, i64 1
  %206 = load %struct._stritem*, %struct._stritem** %5, align 8
  %207 = getelementptr inbounds %struct._stritem, %struct._stritem* %206, i32 0, i32 7
  %208 = load i16, i16* %207, align 2
  %209 = zext i16 %208 to i32
  %210 = and i32 %209, 256
  %211 = icmp ne i32 %210, 0
  %212 = zext i1 %211 to i64
  %213 = select i1 %211, i64 4, i64 0
  %214 = getelementptr inbounds i8, i8* %205, i64 %213
  %215 = load %struct._stritem*, %struct._stritem** %5, align 8
  %216 = getelementptr inbounds %struct._stritem, %struct._stritem* %215, i32 0, i32 7
  %217 = load i16, i16* %216, align 2
  %218 = zext i16 %217 to i32
  %219 = and i32 %218, 2
  %220 = icmp ne i32 %219, 0
  %221 = zext i1 %220 to i64
  %222 = select i1 %220, i64 8, i64 0
  %223 = getelementptr inbounds i8, i8* %214, i64 %222
  %224 = getelementptr inbounds [24 x i8], [24 x i8]* %8, i64 0, i64 0
  %225 = load i32, i32* %13, align 4
  %226 = sext i32 %225 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %223, i8* align 16 %224, i64 %226, i1 false)
  %227 = load %struct._stritem*, %struct._stritem** %5, align 8
  %228 = getelementptr inbounds %struct._stritem, %struct._stritem* %227, i32 0, i32 10
  %229 = bitcast [0 x %union.anon.10]* %228 to i8*
  %230 = load %struct._stritem*, %struct._stritem** %5, align 8
  %231 = getelementptr inbounds %struct._stritem, %struct._stritem* %230, i32 0, i32 9
  %232 = load i8, i8* %231, align 1
  %233 = zext i8 %232 to i32
  %234 = sext i32 %233 to i64
  %235 = getelementptr inbounds i8, i8* %229, i64 %234
  %236 = getelementptr inbounds i8, i8* %235, i64 1
  %237 = load %struct._stritem*, %struct._stritem** %5, align 8
  %238 = getelementptr inbounds %struct._stritem, %struct._stritem* %237, i32 0, i32 7
  %239 = load i16, i16* %238, align 2
  %240 = zext i16 %239 to i32
  %241 = and i32 %240, 256
  %242 = icmp ne i32 %241, 0
  %243 = zext i1 %242 to i64
  %244 = select i1 %242, i64 4, i64 0
  %245 = getelementptr inbounds i8, i8* %236, i64 %244
  %246 = load %struct._stritem*, %struct._stritem** %5, align 8
  %247 = getelementptr inbounds %struct._stritem, %struct._stritem* %246, i32 0, i32 7
  %248 = load i16, i16* %247, align 2
  %249 = zext i16 %248 to i32
  %250 = and i32 %249, 2
  %251 = icmp ne i32 %250, 0
  %252 = zext i1 %251 to i64
  %253 = select i1 %251, i64 8, i64 0
  %254 = getelementptr inbounds i8, i8* %245, i64 %253
  %255 = load i32, i32* %13, align 4
  %256 = sext i32 %255 to i64
  %257 = getelementptr inbounds i8, i8* %254, i64 %256
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %257, i8* align 1 getelementptr inbounds ([3 x i8], [3 x i8]* @.str.46.1197, i64 0, i64 0), i64 2, i1 false)
  %258 = load %struct._stritem*, %struct._stritem** %5, align 8
  %259 = load %struct.conn*, %struct.conn** %3, align 8
  %260 = call i32 @store_item(%struct._stritem* %258, i32 1, %struct.conn* %259)
  %261 = icmp ne i32 %260, 0
  br i1 %261, label %262, label %285

262:                                              ; preds = %195
  %263 = load %struct._stritem*, %struct._stritem** %5, align 8
  %264 = getelementptr inbounds %struct._stritem, %struct._stritem* %263, i32 0, i32 7
  %265 = load i16, i16* %264, align 2
  %266 = zext i16 %265 to i32
  %267 = and i32 %266, 2
  %268 = icmp ne i32 %267, 0
  br i1 %268, label %269, label %275

269:                                              ; preds = %262
  %270 = load %struct._stritem*, %struct._stritem** %5, align 8
  %271 = getelementptr inbounds %struct._stritem, %struct._stritem* %270, i32 0, i32 10
  %272 = getelementptr inbounds [0 x %union.anon.10], [0 x %union.anon.10]* %271, i64 0, i64 0
  %273 = bitcast %union.anon.10* %272 to i64*
  %274 = load i64, i64* %273, align 8
  br label %276

275:                                              ; preds = %262
  br label %276

276:                                              ; preds = %275, %269
  %277 = phi i64 [ %274, %269 ], [ 0, %275 ]
  %278 = load %struct.conn*, %struct.conn** %3, align 8
  %279 = getelementptr inbounds %struct.conn, %struct.conn* %278, i32 0, i32 37
  store i64 %277, i64* %279, align 8
  %280 = load %struct.conn*, %struct.conn** %3, align 8
  %281 = load %union.protocol_binary_response_incr*, %union.protocol_binary_response_incr** %10, align 8
  %282 = bitcast %union.protocol_binary_response_incr* %281 to %struct.anon.22*
  %283 = getelementptr inbounds %struct.anon.22, %struct.anon.22* %282, i32 0, i32 1
  %284 = bitcast %union.anon.10* %283 to i8*
  call void @write_bin_response(%struct.conn* %280, i8* %284, i32 0, i32 0, i32 8)
  br label %287

285:                                              ; preds = %195
  %286 = load %struct.conn*, %struct.conn** %3, align 8
  call void @write_bin_error(%struct.conn* %286, i32 5, i8* null, i32 0)
  br label %287

287:                                              ; preds = %285, %276
  %288 = load %struct._stritem*, %struct._stritem** %5, align 8
  call void @item_remove(%struct._stritem* %288)
  br label %291

289:                                              ; preds = %160
  %290 = load %struct.conn*, %struct.conn** %3, align 8
  call void @out_of_memory(%struct.conn* %290, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.47.1198, i64 0, i64 0))
  br label %291

291:                                              ; preds = %289, %287
  br label %328

292:                                              ; preds = %153
  %293 = load %struct.conn*, %struct.conn** %3, align 8
  %294 = getelementptr inbounds %struct.conn, %struct.conn* %293, i32 0, i32 42
  %295 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %294, align 8
  %296 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %295, i32 0, i32 4
  %297 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %296, i32 0, i32 0
  %298 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %297) #14
  %299 = load %struct.conn*, %struct.conn** %3, align 8
  %300 = getelementptr inbounds %struct.conn, %struct.conn* %299, i32 0, i32 38
  %301 = load i16, i16* %300, align 8
  %302 = sext i16 %301 to i32
  %303 = icmp eq i32 %302, 5
  br i1 %303, label %304, label %312

304:                                              ; preds = %292
  %305 = load %struct.conn*, %struct.conn** %3, align 8
  %306 = getelementptr inbounds %struct.conn, %struct.conn* %305, i32 0, i32 42
  %307 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %306, align 8
  %308 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %307, i32 0, i32 4
  %309 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %308, i32 0, i32 8
  %310 = load i64, i64* %309, align 8
  %311 = add i64 %310, 1
  store i64 %311, i64* %309, align 8
  br label %320

312:                                              ; preds = %292
  %313 = load %struct.conn*, %struct.conn** %3, align 8
  %314 = getelementptr inbounds %struct.conn, %struct.conn* %313, i32 0, i32 42
  %315 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %314, align 8
  %316 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %315, i32 0, i32 4
  %317 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %316, i32 0, i32 9
  %318 = load i64, i64* %317, align 8
  %319 = add i64 %318, 1
  store i64 %319, i64* %317, align 8
  br label %320

320:                                              ; preds = %312, %304
  %321 = load %struct.conn*, %struct.conn** %3, align 8
  %322 = getelementptr inbounds %struct.conn, %struct.conn* %321, i32 0, i32 42
  %323 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %322, align 8
  %324 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %323, i32 0, i32 4
  %325 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %324, i32 0, i32 0
  %326 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %325) #14
  %327 = load %struct.conn*, %struct.conn** %3, align 8
  call void @write_bin_error(%struct.conn* %327, i32 1, i8* null, i32 0)
  br label %328

328:                                              ; preds = %320, %291
  br label %331

329:                                              ; preds = %113
  %330 = load %struct.conn*, %struct.conn** %3, align 8
  call void @write_bin_error(%struct.conn* %330, i32 2, i8* null, i32 0)
  br label %331

331:                                              ; preds = %113, %329, %328, %151, %149, %143
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @process_bin_append_prepend(%struct.conn* %0) #0 {
  %2 = alloca %struct.conn*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %struct._stritem*, align 8
  store %struct.conn* %0, %struct.conn** %2, align 8
  %7 = load %struct.conn*, %struct.conn** %2, align 8
  %8 = call i8* @binary_get_key(%struct.conn* %7)
  store i8* %8, i8** %3, align 8
  %9 = load %struct.conn*, %struct.conn** %2, align 8
  %10 = getelementptr inbounds %struct.conn, %struct.conn* %9, i32 0, i32 36
  %11 = bitcast %union.protocol_binary_request_header* %10 to %struct.anon.13*
  %12 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %11, i32 0, i32 2
  %13 = load i16, i16* %12, align 2
  %14 = zext i16 %13 to i32
  store i32 %14, i32* %4, align 4
  %15 = load %struct.conn*, %struct.conn** %2, align 8
  %16 = getelementptr inbounds %struct.conn, %struct.conn* %15, i32 0, i32 36
  %17 = bitcast %union.protocol_binary_request_header* %16 to %struct.anon.13*
  %18 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %17, i32 0, i32 6
  %19 = load i32, i32* %18, align 8
  %20 = load i32, i32* %4, align 4
  %21 = sub i32 %19, %20
  store i32 %21, i32* %5, align 4
  %22 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %23 = icmp sgt i32 %22, 1
  br i1 %23, label %24, label %28

24:                                               ; preds = %1
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %26 = load i32, i32* %5, align 4
  %27 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %25, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.48.1191, i64 0, i64 0), i32 %26)
  br label %28

28:                                               ; preds = %24, %1
  %29 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 17), align 8
  %30 = icmp ne i32 %29, 0
  br i1 %30, label %31, label %35

31:                                               ; preds = %28
  %32 = load i8*, i8** %3, align 8
  %33 = load i32, i32* %4, align 4
  %34 = sext i32 %33 to i64
  call void @stats_prefix_record_set(i8* %32, i64 %34)
  br label %35

35:                                               ; preds = %31, %28
  %36 = load i8*, i8** %3, align 8
  %37 = load i32, i32* %4, align 4
  %38 = sext i32 %37 to i64
  %39 = load i32, i32* %5, align 4
  %40 = add nsw i32 %39, 2
  %41 = call %struct._stritem* @item_alloc(i8* %36, i64 %38, i32 0, i32 0, i32 %40)
  store %struct._stritem* %41, %struct._stritem** %6, align 8
  %42 = load %struct._stritem*, %struct._stritem** %6, align 8
  %43 = icmp eq %struct._stritem* %42, null
  br i1 %43, label %44, label %60

44:                                               ; preds = %35
  %45 = load i32, i32* %4, align 4
  %46 = sext i32 %45 to i64
  %47 = load i32, i32* %5, align 4
  %48 = add nsw i32 %47, 2
  %49 = call zeroext i1 @item_size_ok(i64 %46, i32 0, i32 %48)
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = load %struct.conn*, %struct.conn** %2, align 8
  %52 = load i32, i32* %5, align 4
  call void @write_bin_error(%struct.conn* %51, i32 3, i8* null, i32 %52)
  br label %58

53:                                               ; preds = %44
  %54 = load %struct.conn*, %struct.conn** %2, align 8
  call void @out_of_memory(%struct.conn* %54, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.37.1192, i64 0, i64 0))
  %55 = load i32, i32* %5, align 4
  %56 = load %struct.conn*, %struct.conn** %2, align 8
  %57 = getelementptr inbounds %struct.conn, %struct.conn* %56, i32 0, i32 24
  store i32 %55, i32* %57, align 8
  br label %58

58:                                               ; preds = %53, %50
  %59 = load %struct.conn*, %struct.conn** %2, align 8
  call void @conn_set_state(%struct.conn* %59, i32 7)
  br label %130

60:                                               ; preds = %35
  %61 = load %struct._stritem*, %struct._stritem** %6, align 8
  %62 = getelementptr inbounds %struct._stritem, %struct._stritem* %61, i32 0, i32 7
  %63 = load i16, i16* %62, align 2
  %64 = zext i16 %63 to i32
  %65 = and i32 %64, 2
  %66 = icmp ne i32 %65, 0
  br i1 %66, label %67, label %77

67:                                               ; preds = %60
  %68 = load %struct.conn*, %struct.conn** %2, align 8
  %69 = getelementptr inbounds %struct.conn, %struct.conn* %68, i32 0, i32 36
  %70 = bitcast %union.protocol_binary_request_header* %69 to %struct.anon.13*
  %71 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %70, i32 0, i32 8
  %72 = load i64, i64* %71, align 8
  %73 = load %struct._stritem*, %struct._stritem** %6, align 8
  %74 = getelementptr inbounds %struct._stritem, %struct._stritem* %73, i32 0, i32 10
  %75 = getelementptr inbounds [0 x %union.anon.10], [0 x %union.anon.10]* %74, i64 0, i64 0
  %76 = bitcast %union.anon.10* %75 to i64*
  store i64 %72, i64* %76, align 8
  br label %77

77:                                               ; preds = %67, %60
  %78 = load %struct.conn*, %struct.conn** %2, align 8
  %79 = getelementptr inbounds %struct.conn, %struct.conn* %78, i32 0, i32 38
  %80 = load i16, i16* %79, align 8
  %81 = sext i16 %80 to i32
  switch i32 %81, label %88 [
    i32 14, label %82
    i32 15, label %85
  ]

82:                                               ; preds = %77
  %83 = load %struct.conn*, %struct.conn** %2, align 8
  %84 = getelementptr inbounds %struct.conn, %struct.conn* %83, i32 0, i32 38
  store i16 4, i16* %84, align 8
  br label %89

85:                                               ; preds = %77
  %86 = load %struct.conn*, %struct.conn** %2, align 8
  %87 = getelementptr inbounds %struct.conn, %struct.conn* %86, i32 0, i32 38
  store i16 5, i16* %87, align 8
  br label %89

88:                                               ; preds = %77
  br label %89

89:                                               ; preds = %88, %85, %82
  %90 = load %struct._stritem*, %struct._stritem** %6, align 8
  %91 = bitcast %struct._stritem* %90 to i8*
  %92 = load %struct.conn*, %struct.conn** %2, align 8
  %93 = getelementptr inbounds %struct.conn, %struct.conn* %92, i32 0, i32 23
  store i8* %91, i8** %93, align 8
  %94 = load %struct._stritem*, %struct._stritem** %6, align 8
  %95 = getelementptr inbounds %struct._stritem, %struct._stritem* %94, i32 0, i32 10
  %96 = bitcast [0 x %union.anon.10]* %95 to i8*
  %97 = load %struct._stritem*, %struct._stritem** %6, align 8
  %98 = getelementptr inbounds %struct._stritem, %struct._stritem* %97, i32 0, i32 9
  %99 = load i8, i8* %98, align 1
  %100 = zext i8 %99 to i32
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds i8, i8* %96, i64 %101
  %103 = getelementptr inbounds i8, i8* %102, i64 1
  %104 = load %struct._stritem*, %struct._stritem** %6, align 8
  %105 = getelementptr inbounds %struct._stritem, %struct._stritem* %104, i32 0, i32 7
  %106 = load i16, i16* %105, align 2
  %107 = zext i16 %106 to i32
  %108 = and i32 %107, 256
  %109 = icmp ne i32 %108, 0
  %110 = zext i1 %109 to i64
  %111 = select i1 %109, i64 4, i64 0
  %112 = getelementptr inbounds i8, i8* %103, i64 %111
  %113 = load %struct._stritem*, %struct._stritem** %6, align 8
  %114 = getelementptr inbounds %struct._stritem, %struct._stritem* %113, i32 0, i32 7
  %115 = load i16, i16* %114, align 2
  %116 = zext i16 %115 to i32
  %117 = and i32 %116, 2
  %118 = icmp ne i32 %117, 0
  %119 = zext i1 %118 to i64
  %120 = select i1 %118, i64 8, i64 0
  %121 = getelementptr inbounds i8, i8* %112, i64 %120
  %122 = load %struct.conn*, %struct.conn** %2, align 8
  %123 = getelementptr inbounds %struct.conn, %struct.conn* %122, i32 0, i32 21
  store i8* %121, i8** %123, align 8
  %124 = load i32, i32* %5, align 4
  %125 = load %struct.conn*, %struct.conn** %2, align 8
  %126 = getelementptr inbounds %struct.conn, %struct.conn* %125, i32 0, i32 22
  store i32 %124, i32* %126, align 8
  %127 = load %struct.conn*, %struct.conn** %2, align 8
  call void @conn_set_state(%struct.conn* %127, i32 6)
  %128 = load %struct.conn*, %struct.conn** %2, align 8
  %129 = getelementptr inbounds %struct.conn, %struct.conn* %128, i32 0, i32 10
  store i32 3, i32* %129, align 8
  br label %130

130:                                              ; preds = %89, %58
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @process_bin_stat(%struct.conn* %0) #0 {
  %2 = alloca %struct.conn*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  store %struct.conn* %0, %struct.conn** %2, align 8
  %9 = load %struct.conn*, %struct.conn** %2, align 8
  %10 = call i8* @binary_get_key(%struct.conn* %9)
  store i8* %10, i8** %3, align 8
  %11 = load %struct.conn*, %struct.conn** %2, align 8
  %12 = getelementptr inbounds %struct.conn, %struct.conn* %11, i32 0, i32 36
  %13 = bitcast %union.protocol_binary_request_header* %12 to %struct.anon.13*
  %14 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %13, i32 0, i32 2
  %15 = load i16, i16* %14, align 2
  %16 = zext i16 %15 to i64
  store i64 %16, i64* %4, align 8
  %17 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %18 = icmp sgt i32 %17, 1
  br i1 %18, label %19, label %45

19:                                               ; preds = %1
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %21 = load %struct.conn*, %struct.conn** %2, align 8
  %22 = getelementptr inbounds %struct.conn, %struct.conn* %21, i32 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %20, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.49.1180, i64 0, i64 0), i32 %23)
  store i32 0, i32* %5, align 4
  br label %25

25:                                               ; preds = %39, %19
  %26 = load i32, i32* %5, align 4
  %27 = sext i32 %26 to i64
  %28 = load i64, i64* %4, align 8
  %29 = icmp ult i64 %27, %28
  br i1 %29, label %30, label %42

30:                                               ; preds = %25
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %32 = load i8*, i8** %3, align 8
  %33 = load i32, i32* %5, align 4
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds i8, i8* %32, i64 %34
  %36 = load i8, i8* %35, align 1
  %37 = sext i8 %36 to i32
  %38 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %31, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35.1181, i64 0, i64 0), i32 %37)
  br label %39

39:                                               ; preds = %30
  %40 = load i32, i32* %5, align 4
  %41 = add nsw i32 %40, 1
  store i32 %41, i32* %5, align 4
  br label %25, !llvm.loop !177

42:                                               ; preds = %25
  %43 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %44 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %43, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.1159, i64 0, i64 0))
  br label %45

45:                                               ; preds = %42, %1
  %46 = load i64, i64* %4, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %53

48:                                               ; preds = %45
  %49 = load %struct.conn*, %struct.conn** %2, align 8
  call void @server_stats(void (i8*, i16, i8*, i32, i8*)* @append_stats, %struct.conn* %49)
  %50 = load %struct.conn*, %struct.conn** %2, align 8
  %51 = bitcast %struct.conn* %50 to i8*
  %52 = call zeroext i1 @get_stats(i8* null, i32 0, void (i8*, i16, i8*, i32, i8*)* @append_stats, i8* %51)
  br label %147

53:                                               ; preds = %45
  %54 = load i8*, i8** %3, align 8
  %55 = call i32 @strncmp(i8* %54, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.50.1182, i64 0, i64 0), i64 5) #16
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %53
  call void @stats_reset()
  br label %146

58:                                               ; preds = %53
  %59 = load i8*, i8** %3, align 8
  %60 = call i32 @strncmp(i8* %59, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.51.1183, i64 0, i64 0), i64 8) #16
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %65

62:                                               ; preds = %58
  %63 = load %struct.conn*, %struct.conn** %2, align 8
  %64 = bitcast %struct.conn* %63 to i8*
  call void @process_stat_settings(void (i8*, i16, i8*, i32, i8*)* @append_stats, i8* %64)
  br label %145

65:                                               ; preds = %58
  %66 = load i8*, i8** %3, align 8
  %67 = call i32 @strncmp(i8* %66, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.52.1184, i64 0, i64 0), i64 6) #16
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %111

69:                                               ; preds = %65
  %70 = load i8*, i8** %3, align 8
  %71 = getelementptr inbounds i8, i8* %70, i64 6
  store i8* %71, i8** %6, align 8
  %72 = load i8*, i8** %6, align 8
  %73 = call i32 @strncmp(i8* %72, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.53.1185, i64 0, i64 0), i64 5) #16
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %96

75:                                               ; preds = %69
  %76 = call i8* @stats_prefix_dump(i32* %7)
  store i8* %76, i8** %8, align 8
  %77 = load i8*, i8** %8, align 8
  %78 = icmp eq i8* %77, null
  br i1 %78, label %82, label %79

79:                                               ; preds = %75
  %80 = load i32, i32* %7, align 4
  %81 = icmp sle i32 %80, 0
  br i1 %81, label %82, label %89

82:                                               ; preds = %79, %75
  %83 = load %struct.conn*, %struct.conn** %2, align 8
  call void @out_of_memory(%struct.conn* %83, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.54.1186, i64 0, i64 0))
  %84 = load i8*, i8** %8, align 8
  %85 = icmp ne i8* %84, null
  br i1 %85, label %86, label %88

86:                                               ; preds = %82
  %87 = load i8*, i8** %8, align 8
  call void @free(i8* %87) #14
  br label %88

88:                                               ; preds = %86, %82
  br label %171

89:                                               ; preds = %79
  %90 = load i8*, i8** %8, align 8
  %91 = load i32, i32* %7, align 4
  %92 = load %struct.conn*, %struct.conn** %2, align 8
  %93 = bitcast %struct.conn* %92 to i8*
  call void @append_stats(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.55.1187, i64 0, i64 0), i16 zeroext 8, i8* %90, i32 %91, i8* %93)
  %94 = load i8*, i8** %8, align 8
  call void @free(i8* %94) #14
  br label %95

95:                                               ; preds = %89
  br label %110

96:                                               ; preds = %69
  %97 = load i8*, i8** %6, align 8
  %98 = call i32 @strncmp(i8* %97, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.56.1188, i64 0, i64 0), i64 3) #16
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %101

100:                                              ; preds = %96
  store i32 1, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 17), align 8
  br label %109

101:                                              ; preds = %96
  %102 = load i8*, i8** %6, align 8
  %103 = call i32 @strncmp(i8* %102, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.57.1189, i64 0, i64 0), i64 4) #16
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %101
  store i32 0, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 17), align 8
  br label %108

106:                                              ; preds = %101
  %107 = load %struct.conn*, %struct.conn** %2, align 8
  call void @write_bin_error(%struct.conn* %107, i32 1, i8* null, i32 0)
  br label %171

108:                                              ; preds = %105
  br label %109

109:                                              ; preds = %108, %100
  br label %110

110:                                              ; preds = %109, %95
  br label %144

111:                                              ; preds = %65
  %112 = load i8*, i8** %3, align 8
  %113 = load i64, i64* %4, align 8
  %114 = trunc i64 %113 to i32
  %115 = load %struct.conn*, %struct.conn** %2, align 8
  %116 = bitcast %struct.conn* %115 to i8*
  %117 = call zeroext i1 @get_stats(i8* %112, i32 %114, void (i8*, i16, i8*, i32, i8*)* @append_stats, i8* %116)
  br i1 %117, label %118, label %141

118:                                              ; preds = %111
  %119 = load %struct.conn*, %struct.conn** %2, align 8
  %120 = getelementptr inbounds %struct.conn, %struct.conn* %119, i32 0, i32 35
  %121 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %120, i32 0, i32 0
  %122 = load i8*, i8** %121, align 8
  %123 = icmp eq i8* %122, null
  br i1 %123, label %124, label %126

124:                                              ; preds = %118
  %125 = load %struct.conn*, %struct.conn** %2, align 8
  call void @out_of_memory(%struct.conn* %125, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.54.1186, i64 0, i64 0))
  br label %140

126:                                              ; preds = %118
  %127 = load %struct.conn*, %struct.conn** %2, align 8
  %128 = load %struct.conn*, %struct.conn** %2, align 8
  %129 = getelementptr inbounds %struct.conn, %struct.conn* %128, i32 0, i32 35
  %130 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %129, i32 0, i32 0
  %131 = load i8*, i8** %130, align 8
  %132 = load %struct.conn*, %struct.conn** %2, align 8
  %133 = getelementptr inbounds %struct.conn, %struct.conn* %132, i32 0, i32 35
  %134 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %133, i32 0, i32 2
  %135 = load i64, i64* %134, align 8
  %136 = trunc i64 %135 to i32
  call void @write_and_free(%struct.conn* %127, i8* %131, i32 %136)
  %137 = load %struct.conn*, %struct.conn** %2, align 8
  %138 = getelementptr inbounds %struct.conn, %struct.conn* %137, i32 0, i32 35
  %139 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %138, i32 0, i32 0
  store i8* null, i8** %139, align 8
  br label %140

140:                                              ; preds = %126, %124
  br label %143

141:                                              ; preds = %111
  %142 = load %struct.conn*, %struct.conn** %2, align 8
  call void @write_bin_error(%struct.conn* %142, i32 1, i8* null, i32 0)
  br label %143

143:                                              ; preds = %141, %140
  br label %171

144:                                              ; preds = %110
  br label %145

145:                                              ; preds = %144, %62
  br label %146

146:                                              ; preds = %145, %57
  br label %147

147:                                              ; preds = %146, %48
  %148 = load %struct.conn*, %struct.conn** %2, align 8
  %149 = bitcast %struct.conn* %148 to i8*
  call void @append_stats(i8* null, i16 zeroext 0, i8* null, i32 0, i8* %149)
  %150 = load %struct.conn*, %struct.conn** %2, align 8
  %151 = getelementptr inbounds %struct.conn, %struct.conn* %150, i32 0, i32 35
  %152 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %151, i32 0, i32 0
  %153 = load i8*, i8** %152, align 8
  %154 = icmp eq i8* %153, null
  br i1 %154, label %155, label %157

155:                                              ; preds = %147
  %156 = load %struct.conn*, %struct.conn** %2, align 8
  call void @out_of_memory(%struct.conn* %156, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.58.1190, i64 0, i64 0))
  br label %171

157:                                              ; preds = %147
  %158 = load %struct.conn*, %struct.conn** %2, align 8
  %159 = load %struct.conn*, %struct.conn** %2, align 8
  %160 = getelementptr inbounds %struct.conn, %struct.conn* %159, i32 0, i32 35
  %161 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %160, i32 0, i32 0
  %162 = load i8*, i8** %161, align 8
  %163 = load %struct.conn*, %struct.conn** %2, align 8
  %164 = getelementptr inbounds %struct.conn, %struct.conn* %163, i32 0, i32 35
  %165 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %164, i32 0, i32 2
  %166 = load i64, i64* %165, align 8
  %167 = trunc i64 %166 to i32
  call void @write_and_free(%struct.conn* %158, i8* %162, i32 %167)
  %168 = load %struct.conn*, %struct.conn** %2, align 8
  %169 = getelementptr inbounds %struct.conn, %struct.conn* %168, i32 0, i32 35
  %170 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %169, i32 0, i32 0
  store i8* null, i8** %170, align 8
  br label %171

171:                                              ; preds = %88, %106, %143, %157, %155
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @bin_list_sasl_mechs(%struct.conn* %0) #0 {
  %2 = alloca %struct.conn*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store %struct.conn* %0, %struct.conn** %2, align 8
  %6 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 26), align 4
  %7 = trunc i8 %6 to i1
  br i1 %7, label %22, label %8

8:                                                ; preds = %1
  %9 = load %struct.conn*, %struct.conn** %2, align 8
  %10 = load %struct.conn*, %struct.conn** %2, align 8
  %11 = getelementptr inbounds %struct.conn, %struct.conn* %10, i32 0, i32 36
  %12 = bitcast %union.protocol_binary_request_header* %11 to %struct.anon.13*
  %13 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %12, i32 0, i32 6
  %14 = load i32, i32* %13, align 8
  %15 = load %struct.conn*, %struct.conn** %2, align 8
  %16 = getelementptr inbounds %struct.conn, %struct.conn* %15, i32 0, i32 36
  %17 = bitcast %union.protocol_binary_request_header* %16 to %struct.anon.13*
  %18 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %17, i32 0, i32 2
  %19 = load i16, i16* %18, align 2
  %20 = zext i16 %19 to i32
  %21 = sub i32 %14, %20
  call void @write_bin_error(%struct.conn* %9, i32 129, i8* null, i32 %21)
  br label %38

22:                                               ; preds = %1
  %23 = load %struct.conn*, %struct.conn** %2, align 8
  call void @init_sasl_conn(%struct.conn* %23)
  store i8* null, i8** %3, align 8
  store i32 0, i32* %4, align 4
  store i32 1, i32* %5, align 4
  %24 = load i32, i32* %5, align 4
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %26, label %34

26:                                               ; preds = %22
  %27 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8
  %28 = icmp ne i32 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %26
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %31 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %30, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.59.1179, i64 0, i64 0))
  br label %32

32:                                               ; preds = %29, %26
  %33 = load %struct.conn*, %struct.conn** %2, align 8
  call void @write_bin_error(%struct.conn* %33, i32 32, i8* null, i32 0)
  br label %38

34:                                               ; preds = %22
  %35 = load %struct.conn*, %struct.conn** %2, align 8
  %36 = load i8*, i8** %3, align 8
  %37 = load i32, i32* %4, align 4
  call void @write_bin_response(%struct.conn* %35, i8* %36, i32 0, i32 0, i32 %37)
  br label %38

38:                                               ; preds = %34, %32, %8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @process_bin_sasl_auth(%struct.conn* %0) #0 {
  %2 = alloca %struct.conn*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca %struct._stritem*, align 8
  store %struct.conn* %0, %struct.conn** %2, align 8
  %7 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 26), align 4
  %8 = trunc i8 %7 to i1
  br i1 %8, label %23, label %9

9:                                                ; preds = %1
  %10 = load %struct.conn*, %struct.conn** %2, align 8
  %11 = load %struct.conn*, %struct.conn** %2, align 8
  %12 = getelementptr inbounds %struct.conn, %struct.conn* %11, i32 0, i32 36
  %13 = bitcast %union.protocol_binary_request_header* %12 to %struct.anon.13*
  %14 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %13, i32 0, i32 6
  %15 = load i32, i32* %14, align 8
  %16 = load %struct.conn*, %struct.conn** %2, align 8
  %17 = getelementptr inbounds %struct.conn, %struct.conn* %16, i32 0, i32 36
  %18 = bitcast %union.protocol_binary_request_header* %17 to %struct.anon.13*
  %19 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %18, i32 0, i32 2
  %20 = load i16, i16* %19, align 2
  %21 = zext i16 %20 to i32
  %22 = sub i32 %15, %21
  call void @write_bin_error(%struct.conn* %10, i32 129, i8* null, i32 %22)
  br label %111

23:                                               ; preds = %1
  %24 = load %struct.conn*, %struct.conn** %2, align 8
  %25 = getelementptr inbounds %struct.conn, %struct.conn* %24, i32 0, i32 36
  %26 = bitcast %union.protocol_binary_request_header* %25 to %struct.anon.13*
  %27 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %26, i32 0, i32 2
  %28 = load i16, i16* %27, align 2
  %29 = zext i16 %28 to i32
  store i32 %29, i32* %3, align 4
  %30 = load %struct.conn*, %struct.conn** %2, align 8
  %31 = getelementptr inbounds %struct.conn, %struct.conn* %30, i32 0, i32 36
  %32 = bitcast %union.protocol_binary_request_header* %31 to %struct.anon.13*
  %33 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %32, i32 0, i32 6
  %34 = load i32, i32* %33, align 8
  %35 = load i32, i32* %3, align 4
  %36 = sub i32 %34, %35
  store i32 %36, i32* %4, align 4
  %37 = load i32, i32* %3, align 4
  %38 = icmp sgt i32 %37, 32
  br i1 %38, label %39, label %43

39:                                               ; preds = %23
  %40 = load %struct.conn*, %struct.conn** %2, align 8
  %41 = load i32, i32* %4, align 4
  call void @write_bin_error(%struct.conn* %40, i32 4, i8* null, i32 %41)
  %42 = load %struct.conn*, %struct.conn** %2, align 8
  call void @conn_set_state(%struct.conn* %42, i32 7)
  br label %111

43:                                               ; preds = %23
  %44 = load %struct.conn*, %struct.conn** %2, align 8
  %45 = call i8* @binary_get_key(%struct.conn* %44)
  store i8* %45, i8** %5, align 8
  %46 = load i8*, i8** %5, align 8
  %47 = load i32, i32* %3, align 4
  %48 = sext i32 %47 to i64
  %49 = load i32, i32* %4, align 4
  %50 = add nsw i32 %49, 2
  %51 = call %struct._stritem* @item_alloc(i8* %46, i64 %48, i32 0, i32 0, i32 %50)
  store %struct._stritem* %51, %struct._stritem** %6, align 8
  %52 = load %struct._stritem*, %struct._stritem** %6, align 8
  %53 = icmp eq %struct._stritem* %52, null
  br i1 %53, label %61, label %54

54:                                               ; preds = %43
  %55 = load %struct._stritem*, %struct._stritem** %6, align 8
  %56 = getelementptr inbounds %struct._stritem, %struct._stritem* %55, i32 0, i32 7
  %57 = load i16, i16* %56, align 2
  %58 = zext i16 %57 to i32
  %59 = and i32 %58, 32
  %60 = icmp ne i32 %59, 0
  br i1 %60, label %61, label %70

61:                                               ; preds = %54, %43
  %62 = load %struct.conn*, %struct.conn** %2, align 8
  %63 = load i32, i32* %4, align 4
  call void @write_bin_error(%struct.conn* %62, i32 130, i8* null, i32 %63)
  %64 = load %struct.conn*, %struct.conn** %2, align 8
  call void @conn_set_state(%struct.conn* %64, i32 7)
  %65 = load %struct._stritem*, %struct._stritem** %6, align 8
  %66 = icmp ne %struct._stritem* %65, null
  br i1 %66, label %67, label %69

67:                                               ; preds = %61
  %68 = load %struct._stritem*, %struct._stritem** %6, align 8
  call void @do_item_remove(%struct._stritem* %68)
  br label %69

69:                                               ; preds = %67, %61
  br label %111

70:                                               ; preds = %54
  %71 = load %struct._stritem*, %struct._stritem** %6, align 8
  %72 = bitcast %struct._stritem* %71 to i8*
  %73 = load %struct.conn*, %struct.conn** %2, align 8
  %74 = getelementptr inbounds %struct.conn, %struct.conn* %73, i32 0, i32 23
  store i8* %72, i8** %74, align 8
  %75 = load %struct._stritem*, %struct._stritem** %6, align 8
  %76 = getelementptr inbounds %struct._stritem, %struct._stritem* %75, i32 0, i32 10
  %77 = bitcast [0 x %union.anon.10]* %76 to i8*
  %78 = load %struct._stritem*, %struct._stritem** %6, align 8
  %79 = getelementptr inbounds %struct._stritem, %struct._stritem* %78, i32 0, i32 9
  %80 = load i8, i8* %79, align 1
  %81 = zext i8 %80 to i32
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds i8, i8* %77, i64 %82
  %84 = getelementptr inbounds i8, i8* %83, i64 1
  %85 = load %struct._stritem*, %struct._stritem** %6, align 8
  %86 = getelementptr inbounds %struct._stritem, %struct._stritem* %85, i32 0, i32 7
  %87 = load i16, i16* %86, align 2
  %88 = zext i16 %87 to i32
  %89 = and i32 %88, 256
  %90 = icmp ne i32 %89, 0
  %91 = zext i1 %90 to i64
  %92 = select i1 %90, i64 4, i64 0
  %93 = getelementptr inbounds i8, i8* %84, i64 %92
  %94 = load %struct._stritem*, %struct._stritem** %6, align 8
  %95 = getelementptr inbounds %struct._stritem, %struct._stritem* %94, i32 0, i32 7
  %96 = load i16, i16* %95, align 2
  %97 = zext i16 %96 to i32
  %98 = and i32 %97, 2
  %99 = icmp ne i32 %98, 0
  %100 = zext i1 %99 to i64
  %101 = select i1 %99, i64 8, i64 0
  %102 = getelementptr inbounds i8, i8* %93, i64 %101
  %103 = load %struct.conn*, %struct.conn** %2, align 8
  %104 = getelementptr inbounds %struct.conn, %struct.conn* %103, i32 0, i32 21
  store i8* %102, i8** %104, align 8
  %105 = load i32, i32* %4, align 4
  %106 = load %struct.conn*, %struct.conn** %2, align 8
  %107 = getelementptr inbounds %struct.conn, %struct.conn* %106, i32 0, i32 22
  store i32 %105, i32* %107, align 8
  %108 = load %struct.conn*, %struct.conn** %2, align 8
  call void @conn_set_state(%struct.conn* %108, i32 6)
  %109 = load %struct.conn*, %struct.conn** %2, align 8
  %110 = getelementptr inbounds %struct.conn, %struct.conn* %109, i32 0, i32 10
  store i32 10, i32* %110, align 8
  br label %111

111:                                              ; preds = %70, %69, %39, %9
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @binary_get_key(%struct.conn* %0) #0 {
  %2 = alloca %struct.conn*, align 8
  store %struct.conn* %0, %struct.conn** %2, align 8
  %3 = load %struct.conn*, %struct.conn** %2, align 8
  %4 = getelementptr inbounds %struct.conn, %struct.conn* %3, i32 0, i32 16
  %5 = load i8*, i8** %4, align 8
  %6 = load %struct.conn*, %struct.conn** %2, align 8
  %7 = getelementptr inbounds %struct.conn, %struct.conn* %6, i32 0, i32 36
  %8 = bitcast %union.protocol_binary_request_header* %7 to %struct.anon.13*
  %9 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %8, i32 0, i32 2
  %10 = load i16, i16* %9, align 2
  %11 = zext i16 %10 to i32
  %12 = sext i32 %11 to i64
  %13 = sub i64 0, %12
  %14 = getelementptr inbounds i8, i8* %5, i64 %13
  ret i8* %14
}

declare dso_local i32 @fputc(i32, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @write_bin_miss_response(%struct.conn* %0, i8* %1, i64 %2) #0 {
  %4 = alloca %struct.conn*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  store %struct.conn* %0, %struct.conn** %4, align 8
  store i8* %1, i8** %5, align 8
  store i64 %2, i64* %6, align 8
  %8 = load i64, i64* %6, align 8
  %9 = icmp ne i64 %8, 0
  br i1 %9, label %10, label %32

10:                                               ; preds = %3
  %11 = load %struct.conn*, %struct.conn** %4, align 8
  %12 = load i64, i64* %6, align 8
  %13 = trunc i64 %12 to i16
  %14 = load i64, i64* %6, align 8
  %15 = trunc i64 %14 to i32
  call void @add_bin_header(%struct.conn* %11, i16 zeroext 1, i8 zeroext 0, i16 zeroext %13, i32 %15)
  %16 = load %struct.conn*, %struct.conn** %4, align 8
  %17 = getelementptr inbounds %struct.conn, %struct.conn* %16, i32 0, i32 19
  %18 = load %struct._mc_resp*, %struct._mc_resp** %17, align 8
  %19 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %18, i32 0, i32 18
  %20 = getelementptr inbounds [1024 x i8], [1024 x i8]* %19, i64 0, i64 0
  %21 = getelementptr inbounds i8, i8* %20, i64 24
  store i8* %21, i8** %7, align 8
  %22 = load i8*, i8** %7, align 8
  %23 = load i8*, i8** %5, align 8
  %24 = load i64, i64* %6, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %22, i8* align 1 %23, i64 %24, i1 false)
  %25 = load %struct.conn*, %struct.conn** %4, align 8
  %26 = getelementptr inbounds %struct.conn, %struct.conn* %25, i32 0, i32 19
  %27 = load %struct._mc_resp*, %struct._mc_resp** %26, align 8
  %28 = load i8*, i8** %7, align 8
  %29 = load i64, i64* %6, align 8
  %30 = trunc i64 %29 to i32
  call void @resp_add_iov(%struct._mc_resp* %27, i8* %28, i32 %30)
  %31 = load %struct.conn*, %struct.conn** %4, align 8
  call void @conn_set_state(%struct.conn* %31, i32 1)
  br label %34

32:                                               ; preds = %3
  %33 = load %struct.conn*, %struct.conn** %4, align 8
  call void @write_bin_error(%struct.conn* %33, i32 1, i8* null, i32 0)
  br label %34

34:                                               ; preds = %32, %10
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @extstore_get_stats(i8* %0, %struct.extstore_stats* %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct.extstore_stats*, align 8
  %5 = alloca %struct.store_engine*, align 8
  %6 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  store %struct.extstore_stats* %1, %struct.extstore_stats** %4, align 8
  %7 = load i8*, i8** %3, align 8
  %8 = bitcast i8* %7 to %struct.store_engine*
  store %struct.store_engine* %8, %struct.store_engine** %5, align 8
  %9 = load %struct.store_engine*, %struct.store_engine** %5, align 8
  %10 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %9, i32 0, i32 18
  %11 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %10) #14
  %12 = load %struct.extstore_stats*, %struct.extstore_stats** %4, align 8
  %13 = bitcast %struct.extstore_stats* %12 to i8*
  %14 = load %struct.store_engine*, %struct.store_engine** %5, align 8
  %15 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %14, i32 0, i32 19
  %16 = bitcast %struct.extstore_stats* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %16, i64 144, i1 false)
  %17 = load %struct.store_engine*, %struct.store_engine** %5, align 8
  %18 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %17, i32 0, i32 18
  %19 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %18) #14
  %20 = load %struct.store_engine*, %struct.store_engine** %5, align 8
  %21 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %20, i32 0, i32 0
  %22 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %21) #14
  %23 = load %struct.store_engine*, %struct.store_engine** %5, align 8
  %24 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %23, i32 0, i32 14
  %25 = load i32, i32* %24, align 8
  %26 = zext i32 %25 to i64
  %27 = load %struct.extstore_stats*, %struct.extstore_stats** %4, align 8
  %28 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %27, i32 0, i32 5
  store i64 %26, i64* %28, align 8
  %29 = load %struct.store_engine*, %struct.store_engine** %5, align 8
  %30 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %29, i32 0, i32 13
  %31 = load i32, i32* %30, align 4
  %32 = load %struct.store_engine*, %struct.store_engine** %5, align 8
  %33 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %32, i32 0, i32 14
  %34 = load i32, i32* %33, align 8
  %35 = sub i32 %31, %34
  %36 = zext i32 %35 to i64
  %37 = load %struct.extstore_stats*, %struct.extstore_stats** %4, align 8
  %38 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %37, i32 0, i32 6
  store i64 %36, i64* %38, align 8
  %39 = load %struct.store_engine*, %struct.store_engine** %5, align 8
  %40 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %39, i32 0, i32 0
  %41 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %40) #14
  %42 = load %struct.extstore_stats*, %struct.extstore_stats** %4, align 8
  %43 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %42, i32 0, i32 16
  store i64 0, i64* %43, align 8
  store i32 0, i32* %6, align 4
  br label %44

44:                                               ; preds = %80, %2
  %45 = load i32, i32* %6, align 4
  %46 = load %struct.store_engine*, %struct.store_engine** %5, align 8
  %47 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %46, i32 0, i32 12
  %48 = load i32, i32* %47, align 8
  %49 = icmp ult i32 %45, %48
  br i1 %49, label %50, label %83

50:                                               ; preds = %44
  %51 = load %struct.store_engine*, %struct.store_engine** %5, align 8
  %52 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %51, i32 0, i32 4
  %53 = load %struct.store_io_thread*, %struct.store_io_thread** %52, align 8
  %54 = load i32, i32* %6, align 4
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds %struct.store_io_thread, %struct.store_io_thread* %53, i64 %55
  %57 = getelementptr inbounds %struct.store_io_thread, %struct.store_io_thread* %56, i32 0, i32 0
  %58 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %57) #14
  %59 = load %struct.store_engine*, %struct.store_engine** %5, align 8
  %60 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %59, i32 0, i32 4
  %61 = load %struct.store_io_thread*, %struct.store_io_thread** %60, align 8
  %62 = load i32, i32* %6, align 4
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds %struct.store_io_thread, %struct.store_io_thread* %61, i64 %63
  %65 = getelementptr inbounds %struct.store_io_thread, %struct.store_io_thread* %64, i32 0, i32 5
  %66 = load i32, i32* %65, align 8
  %67 = zext i32 %66 to i64
  %68 = load %struct.extstore_stats*, %struct.extstore_stats** %4, align 8
  %69 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %68, i32 0, i32 16
  %70 = load i64, i64* %69, align 8
  %71 = add i64 %70, %67
  store i64 %71, i64* %69, align 8
  %72 = load %struct.store_engine*, %struct.store_engine** %5, align 8
  %73 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %72, i32 0, i32 4
  %74 = load %struct.store_io_thread*, %struct.store_io_thread** %73, align 8
  %75 = load i32, i32* %6, align 4
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds %struct.store_io_thread, %struct.store_io_thread* %74, i64 %76
  %78 = getelementptr inbounds %struct.store_io_thread, %struct.store_io_thread* %77, i32 0, i32 0
  %79 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %78) #14
  br label %80

80:                                               ; preds = %50
  %81 = load i32, i32* %6, align 4
  %82 = add nsw i32 %81, 1
  store i32 %82, i32* %6, align 4
  br label %44, !llvm.loop !178

83:                                               ; preds = %44
  %84 = load %struct.extstore_stats*, %struct.extstore_stats** %4, align 8
  %85 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %84, i32 0, i32 6
  %86 = load i64, i64* %85, align 8
  %87 = load %struct.store_engine*, %struct.store_engine** %5, align 8
  %88 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %87, i32 0, i32 9
  %89 = load i64, i64* %88, align 8
  %90 = mul i64 %86, %89
  %91 = load %struct.extstore_stats*, %struct.extstore_stats** %4, align 8
  %92 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %91, i32 0, i32 14
  %93 = load i64, i64* %92, align 8
  %94 = sub i64 %90, %93
  %95 = load %struct.extstore_stats*, %struct.extstore_stats** %4, align 8
  %96 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %95, i32 0, i32 15
  store i64 %94, i64* %96, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @extstore_get_page_data(i8* %0, %struct.extstore_stats* %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct.extstore_stats*, align 8
  %5 = alloca %struct.store_engine*, align 8
  store i8* %0, i8** %3, align 8
  store %struct.extstore_stats* %1, %struct.extstore_stats** %4, align 8
  %6 = load i8*, i8** %3, align 8
  %7 = bitcast i8* %6 to %struct.store_engine*
  store %struct.store_engine* %7, %struct.store_engine** %5, align 8
  %8 = load %struct.store_engine*, %struct.store_engine** %5, align 8
  %9 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %8, i32 0, i32 18
  %10 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %9) #14
  %11 = load %struct.extstore_stats*, %struct.extstore_stats** %4, align 8
  %12 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %11, i32 0, i32 17
  %13 = load %struct.extstore_page_data*, %struct.extstore_page_data** %12, align 8
  %14 = bitcast %struct.extstore_page_data* %13 to i8*
  %15 = load %struct.store_engine*, %struct.store_engine** %5, align 8
  %16 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %15, i32 0, i32 19
  %17 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %16, i32 0, i32 17
  %18 = load %struct.extstore_page_data*, %struct.extstore_page_data** %17, align 8
  %19 = bitcast %struct.extstore_page_data* %18 to i8*
  %20 = load %struct.store_engine*, %struct.store_engine** %5, align 8
  %21 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %20, i32 0, i32 13
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i64
  %24 = mul i64 24, %23
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %19, i64 %24, i1 false)
  %25 = load %struct.store_engine*, %struct.store_engine** %5, align 8
  %26 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %25, i32 0, i32 18
  %27 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %26) #14
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @extstore_err(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  store i32 %0, i32* %2, align 4
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1211, i64 0, i64 0), i8** %3, align 8
  %4 = load i32, i32* %2, align 4
  switch i32 %4, label %13 [
    i32 1, label %5
    i32 2, label %6
    i32 3, label %7
    i32 4, label %8
    i32 5, label %9
    i32 6, label %10
    i32 7, label %11
    i32 8, label %12
  ]

5:                                                ; preds = %1
  store i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.1.1212, i64 0, i64 0), i8** %3, align 8
  br label %13

6:                                                ; preds = %1
  store i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.2.1213, i64 0, i64 0), i8** %3, align 8
  br label %13

7:                                                ; preds = %1
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.3.1214, i64 0, i64 0), i8** %3, align 8
  br label %13

8:                                                ; preds = %1
  store i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.4.1215, i64 0, i64 0), i8** %3, align 8
  br label %13

9:                                                ; preds = %1
  store i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.5.1216, i64 0, i64 0), i8** %3, align 8
  br label %13

10:                                               ; preds = %1
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.6.1217, i64 0, i64 0), i8** %3, align 8
  br label %13

11:                                               ; preds = %1
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.7.1218, i64 0, i64 0), i8** %3, align 8
  br label %13

12:                                               ; preds = %1
  br label %13

13:                                               ; preds = %1, %12, %11, %10, %9, %8, %7, %6, %5
  %14 = load i8*, i8** %3, align 8
  ret i8* %14
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @extstore_init(%struct.extstore_conf_file* %0, %struct.extstore_conf* %1, i32* %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca %struct.extstore_conf_file*, align 8
  %6 = alloca %struct.extstore_conf*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32, align 4
  %9 = alloca %struct.extstore_conf_file*, align 8
  %10 = alloca i64, align 8
  %11 = alloca %struct.store_engine*, align 8
  %12 = alloca i64, align 8
  %13 = alloca %struct.flock, align 8
  %14 = alloca i32, align 4
  %15 = alloca %struct.__store_wbuf*, align 8
  %16 = alloca %struct._obj_io*, align 8
  store %struct.extstore_conf_file* %0, %struct.extstore_conf_file** %5, align 8
  store %struct.extstore_conf* %1, %struct.extstore_conf** %6, align 8
  store i32* %2, i32** %7, align 8
  store %struct.extstore_conf_file* null, %struct.extstore_conf_file** %9, align 8
  %17 = load %struct.extstore_conf*, %struct.extstore_conf** %6, align 8
  %18 = getelementptr inbounds %struct.extstore_conf, %struct.extstore_conf* %17, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = load %struct.extstore_conf*, %struct.extstore_conf** %6, align 8
  %21 = getelementptr inbounds %struct.extstore_conf, %struct.extstore_conf* %20, i32 0, i32 4
  %22 = load i32, i32* %21, align 4
  %23 = urem i32 %19, %22
  %24 = icmp ne i32 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %3
  %26 = load i32*, i32** %7, align 8
  store i32 1, i32* %26, align 4
  store i8* null, i8** %4, align 8
  br label %514

27:                                               ; preds = %3
  %28 = load %struct.extstore_conf*, %struct.extstore_conf** %6, align 8
  %29 = getelementptr inbounds %struct.extstore_conf, %struct.extstore_conf* %28, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = load %struct.extstore_conf*, %struct.extstore_conf** %6, align 8
  %32 = getelementptr inbounds %struct.extstore_conf, %struct.extstore_conf* %31, i32 0, i32 5
  %33 = load i32, i32* %32, align 4
  %34 = icmp ugt i32 %30, %33
  br i1 %34, label %35, label %37

35:                                               ; preds = %27
  %36 = load i32*, i32** %7, align 8
  store i32 2, i32* %36, align 4
  store i8* null, i8** %4, align 8
  br label %514

37:                                               ; preds = %27
  %38 = load %struct.extstore_conf*, %struct.extstore_conf** %6, align 8
  %39 = getelementptr inbounds %struct.extstore_conf, %struct.extstore_conf* %38, i32 0, i32 2
  %40 = load i32, i32* %39, align 4
  %41 = icmp ult i32 %40, 1
  br i1 %41, label %42, label %44

42:                                               ; preds = %37
  %43 = load i32*, i32** %7, align 8
  store i32 3, i32* %43, align 4
  store i8* null, i8** %4, align 8
  br label %514

44:                                               ; preds = %37
  %45 = load %struct.extstore_conf*, %struct.extstore_conf** %6, align 8
  %46 = getelementptr inbounds %struct.extstore_conf, %struct.extstore_conf* %45, i32 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = urem i32 %47, 2097152
  %49 = icmp ne i32 %48, 0
  br i1 %49, label %56, label %50

50:                                               ; preds = %44
  %51 = load %struct.extstore_conf*, %struct.extstore_conf** %6, align 8
  %52 = getelementptr inbounds %struct.extstore_conf, %struct.extstore_conf* %51, i32 0, i32 4
  %53 = load i32, i32* %52, align 4
  %54 = urem i32 %53, 2097152
  %55 = icmp ne i32 %54, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %50, %44
  %57 = load i32*, i32** %7, align 8
  store i32 4, i32* %57, align 4
  store i8* null, i8** %4, align 8
  br label %514

58:                                               ; preds = %50
  %59 = call noalias i8* @calloc(i64 1, i64 328) #14
  %60 = bitcast i8* %59 to %struct.store_engine*
  store %struct.store_engine* %60, %struct.store_engine** %11, align 8
  %61 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %62 = icmp eq %struct.store_engine* %61, null
  br i1 %62, label %63, label %65

63:                                               ; preds = %58
  %64 = load i32*, i32** %7, align 8
  store i32 6, i32* %64, align 4
  store i8* null, i8** %4, align 8
  br label %514

65:                                               ; preds = %58
  %66 = load %struct.extstore_conf*, %struct.extstore_conf** %6, align 8
  %67 = getelementptr inbounds %struct.extstore_conf, %struct.extstore_conf* %66, i32 0, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = zext i32 %68 to i64
  %70 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %71 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %70, i32 0, i32 9
  store i64 %69, i64* %71, align 8
  store i64 0, i64* %12, align 8
  %72 = load %struct.extstore_conf_file*, %struct.extstore_conf_file** %5, align 8
  store %struct.extstore_conf_file* %72, %struct.extstore_conf_file** %9, align 8
  br label %73

73:                                               ; preds = %124, %65
  %74 = load %struct.extstore_conf_file*, %struct.extstore_conf_file** %9, align 8
  %75 = icmp ne %struct.extstore_conf_file* %74, null
  br i1 %75, label %76, label %128

76:                                               ; preds = %73
  %77 = load %struct.extstore_conf_file*, %struct.extstore_conf_file** %9, align 8
  %78 = getelementptr inbounds %struct.extstore_conf_file, %struct.extstore_conf_file* %77, i32 0, i32 1
  %79 = load i8*, i8** %78, align 8
  %80 = call i32 (i8*, i32, ...) @open(i8* %79, i32 66, i32 420)
  %81 = load %struct.extstore_conf_file*, %struct.extstore_conf_file** %9, align 8
  %82 = getelementptr inbounds %struct.extstore_conf_file, %struct.extstore_conf_file* %81, i32 0, i32 2
  store i32 %80, i32* %82, align 8
  %83 = load %struct.extstore_conf_file*, %struct.extstore_conf_file** %9, align 8
  %84 = getelementptr inbounds %struct.extstore_conf_file, %struct.extstore_conf_file* %83, i32 0, i32 2
  %85 = load i32, i32* %84, align 8
  %86 = icmp slt i32 %85, 0
  br i1 %86, label %87, label %91

87:                                               ; preds = %76
  %88 = load i32*, i32** %7, align 8
  store i32 7, i32* %88, align 4
  %89 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %90 = bitcast %struct.store_engine* %89 to i8*
  call void @free(i8* %90) #14
  store i8* null, i8** %4, align 8
  br label %514

91:                                               ; preds = %76
  %92 = getelementptr inbounds %struct.flock, %struct.flock* %13, i32 0, i32 0
  store i16 1, i16* %92, align 8
  %93 = getelementptr inbounds %struct.flock, %struct.flock* %13, i32 0, i32 2
  store i64 0, i64* %93, align 8
  %94 = getelementptr inbounds %struct.flock, %struct.flock* %13, i32 0, i32 1
  store i16 0, i16* %94, align 2
  %95 = getelementptr inbounds %struct.flock, %struct.flock* %13, i32 0, i32 3
  store i64 0, i64* %95, align 8
  %96 = load %struct.extstore_conf_file*, %struct.extstore_conf_file** %9, align 8
  %97 = getelementptr inbounds %struct.extstore_conf_file, %struct.extstore_conf_file* %96, i32 0, i32 2
  %98 = load i32, i32* %97, align 8
  %99 = call i32 (i32, i32, ...) @fcntl(i32 %98, i32 6, %struct.flock* %13)
  %100 = icmp slt i32 %99, 0
  br i1 %100, label %101, label %105

101:                                              ; preds = %91
  %102 = load i32*, i32** %7, align 8
  store i32 7, i32* %102, align 4
  %103 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %104 = bitcast %struct.store_engine* %103 to i8*
  call void @free(i8* %104) #14
  store i8* null, i8** %4, align 8
  br label %514

105:                                              ; preds = %91
  %106 = load %struct.extstore_conf_file*, %struct.extstore_conf_file** %9, align 8
  %107 = getelementptr inbounds %struct.extstore_conf_file, %struct.extstore_conf_file* %106, i32 0, i32 2
  %108 = load i32, i32* %107, align 8
  %109 = call i32 @ftruncate(i32 %108, i64 0) #14
  %110 = icmp slt i32 %109, 0
  br i1 %110, label %111, label %115

111:                                              ; preds = %105
  %112 = load i32*, i32** %7, align 8
  store i32 7, i32* %112, align 4
  %113 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %114 = bitcast %struct.store_engine* %113 to i8*
  call void @free(i8* %114) #14
  store i8* null, i8** %4, align 8
  br label %514

115:                                              ; preds = %105
  %116 = load %struct.extstore_conf_file*, %struct.extstore_conf_file** %9, align 8
  %117 = getelementptr inbounds %struct.extstore_conf_file, %struct.extstore_conf_file* %116, i32 0, i32 0
  %118 = load i32, i32* %117, align 8
  %119 = zext i32 %118 to i64
  %120 = load i64, i64* %12, align 8
  %121 = add i64 %120, %119
  store i64 %121, i64* %12, align 8
  %122 = load %struct.extstore_conf_file*, %struct.extstore_conf_file** %9, align 8
  %123 = getelementptr inbounds %struct.extstore_conf_file, %struct.extstore_conf_file* %122, i32 0, i32 3
  store i64 0, i64* %123, align 8
  br label %124

124:                                              ; preds = %115
  %125 = load %struct.extstore_conf_file*, %struct.extstore_conf_file** %9, align 8
  %126 = getelementptr inbounds %struct.extstore_conf_file, %struct.extstore_conf_file* %125, i32 0, i32 6
  %127 = load %struct.extstore_conf_file*, %struct.extstore_conf_file** %126, align 8
  store %struct.extstore_conf_file* %127, %struct.extstore_conf_file** %9, align 8
  br label %73, !llvm.loop !179

128:                                              ; preds = %73
  %129 = load i64, i64* %12, align 8
  %130 = icmp uge i64 %129, 65535
  br i1 %130, label %131, label %135

131:                                              ; preds = %128
  %132 = load i32*, i32** %7, align 8
  store i32 5, i32* %132, align 4
  %133 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %134 = bitcast %struct.store_engine* %133 to i8*
  call void @free(i8* %134) #14
  store i8* null, i8** %4, align 8
  br label %514

135:                                              ; preds = %128
  %136 = load i64, i64* %12, align 8
  %137 = trunc i64 %136 to i32
  %138 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %139 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %138, i32 0, i32 13
  store i32 %137, i32* %139, align 4
  %140 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %141 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %140, i32 0, i32 13
  %142 = load i32, i32* %141, align 4
  %143 = zext i32 %142 to i64
  %144 = call noalias i8* @calloc(i64 %143, i64 120) #14
  %145 = bitcast i8* %144 to %struct._store_page*
  %146 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %147 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %146, i32 0, i32 1
  store %struct._store_page* %145, %struct._store_page** %147, align 8
  %148 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %149 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %148, i32 0, i32 1
  %150 = load %struct._store_page*, %struct._store_page** %149, align 8
  %151 = icmp eq %struct._store_page* %150, null
  br i1 %151, label %152, label %156

152:                                              ; preds = %135
  %153 = load i32*, i32** %7, align 8
  store i32 6, i32* %153, align 4
  %154 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %155 = bitcast %struct.store_engine* %154 to i8*
  call void @free(i8* %155) #14
  store i8* null, i8** %4, align 8
  br label %514

156:                                              ; preds = %135
  store %struct.extstore_conf_file* null, %struct.extstore_conf_file** %9, align 8
  store i32 0, i32* %8, align 4
  br label %157

157:                                              ; preds = %251, %156
  %158 = load i32, i32* %8, align 4
  %159 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %160 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %159, i32 0, i32 13
  %161 = load i32, i32* %160, align 4
  %162 = icmp ult i32 %158, %161
  br i1 %162, label %163, label %254

163:                                              ; preds = %157
  br label %164

164:                                              ; preds = %163, %188
  %165 = load %struct.extstore_conf_file*, %struct.extstore_conf_file** %9, align 8
  %166 = icmp eq %struct.extstore_conf_file* %165, null
  br i1 %166, label %172, label %167

167:                                              ; preds = %164
  %168 = load %struct.extstore_conf_file*, %struct.extstore_conf_file** %9, align 8
  %169 = getelementptr inbounds %struct.extstore_conf_file, %struct.extstore_conf_file* %168, i32 0, i32 6
  %170 = load %struct.extstore_conf_file*, %struct.extstore_conf_file** %169, align 8
  %171 = icmp eq %struct.extstore_conf_file* %170, null
  br i1 %171, label %172, label %174

172:                                              ; preds = %167, %164
  %173 = load %struct.extstore_conf_file*, %struct.extstore_conf_file** %5, align 8
  store %struct.extstore_conf_file* %173, %struct.extstore_conf_file** %9, align 8
  br label %178

174:                                              ; preds = %167
  %175 = load %struct.extstore_conf_file*, %struct.extstore_conf_file** %9, align 8
  %176 = getelementptr inbounds %struct.extstore_conf_file, %struct.extstore_conf_file* %175, i32 0, i32 6
  %177 = load %struct.extstore_conf_file*, %struct.extstore_conf_file** %176, align 8
  store %struct.extstore_conf_file* %177, %struct.extstore_conf_file** %9, align 8
  br label %178

178:                                              ; preds = %174, %172
  %179 = load %struct.extstore_conf_file*, %struct.extstore_conf_file** %9, align 8
  %180 = getelementptr inbounds %struct.extstore_conf_file, %struct.extstore_conf_file* %179, i32 0, i32 0
  %181 = load i32, i32* %180, align 8
  %182 = icmp ne i32 %181, 0
  br i1 %182, label %183, label %188

183:                                              ; preds = %178
  %184 = load %struct.extstore_conf_file*, %struct.extstore_conf_file** %9, align 8
  %185 = getelementptr inbounds %struct.extstore_conf_file, %struct.extstore_conf_file* %184, i32 0, i32 0
  %186 = load i32, i32* %185, align 8
  %187 = add i32 %186, -1
  store i32 %187, i32* %185, align 8
  br label %189

188:                                              ; preds = %178
  br label %164

189:                                              ; preds = %183
  %190 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %191 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %190, i32 0, i32 1
  %192 = load %struct._store_page*, %struct._store_page** %191, align 8
  %193 = load i32, i32* %8, align 4
  %194 = sext i32 %193 to i64
  %195 = getelementptr inbounds %struct._store_page, %struct._store_page* %192, i64 %194
  %196 = getelementptr inbounds %struct._store_page, %struct._store_page* %195, i32 0, i32 0
  %197 = call i32 @pthread_mutex_init(%union.pthread_mutex_t* %196, %struct.in_addr* null) #14
  %198 = load i32, i32* %8, align 4
  %199 = trunc i32 %198 to i16
  %200 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %201 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %200, i32 0, i32 1
  %202 = load %struct._store_page*, %struct._store_page** %201, align 8
  %203 = load i32, i32* %8, align 4
  %204 = sext i32 %203 to i64
  %205 = getelementptr inbounds %struct._store_page, %struct._store_page* %202, i64 %204
  %206 = getelementptr inbounds %struct._store_page, %struct._store_page* %205, i32 0, i32 11
  store i16 %199, i16* %206, align 4
  %207 = load %struct.extstore_conf_file*, %struct.extstore_conf_file** %9, align 8
  %208 = getelementptr inbounds %struct.extstore_conf_file, %struct.extstore_conf_file* %207, i32 0, i32 2
  %209 = load i32, i32* %208, align 8
  %210 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %211 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %210, i32 0, i32 1
  %212 = load %struct._store_page*, %struct._store_page** %211, align 8
  %213 = load i32, i32* %8, align 4
  %214 = sext i32 %213 to i64
  %215 = getelementptr inbounds %struct._store_page, %struct._store_page* %212, i64 %214
  %216 = getelementptr inbounds %struct._store_page, %struct._store_page* %215, i32 0, i32 10
  store i32 %209, i32* %216, align 8
  %217 = load %struct.extstore_conf_file*, %struct.extstore_conf_file** %9, align 8
  %218 = getelementptr inbounds %struct.extstore_conf_file, %struct.extstore_conf_file* %217, i32 0, i32 5
  %219 = load i32, i32* %218, align 4
  %220 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %221 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %220, i32 0, i32 1
  %222 = load %struct._store_page*, %struct._store_page** %221, align 8
  %223 = load i32, i32* %8, align 4
  %224 = sext i32 %223 to i64
  %225 = getelementptr inbounds %struct._store_page, %struct._store_page* %222, i64 %224
  %226 = getelementptr inbounds %struct._store_page, %struct._store_page* %225, i32 0, i32 9
  store i32 %219, i32* %226, align 4
  %227 = load %struct.extstore_conf_file*, %struct.extstore_conf_file** %9, align 8
  %228 = getelementptr inbounds %struct.extstore_conf_file, %struct.extstore_conf_file* %227, i32 0, i32 3
  %229 = load i64, i64* %228, align 8
  %230 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %231 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %230, i32 0, i32 1
  %232 = load %struct._store_page*, %struct._store_page** %231, align 8
  %233 = load i32, i32* %8, align 4
  %234 = sext i32 %233 to i64
  %235 = getelementptr inbounds %struct._store_page, %struct._store_page* %232, i64 %234
  %236 = getelementptr inbounds %struct._store_page, %struct._store_page* %235, i32 0, i32 3
  store i64 %229, i64* %236, align 8
  %237 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %238 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %237, i32 0, i32 1
  %239 = load %struct._store_page*, %struct._store_page** %238, align 8
  %240 = load i32, i32* %8, align 4
  %241 = sext i32 %240 to i64
  %242 = getelementptr inbounds %struct._store_page, %struct._store_page* %239, i64 %241
  %243 = getelementptr inbounds %struct._store_page, %struct._store_page* %242, i32 0, i32 14
  store i8 1, i8* %243, align 8
  %244 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %245 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %244, i32 0, i32 9
  %246 = load i64, i64* %245, align 8
  %247 = load %struct.extstore_conf_file*, %struct.extstore_conf_file** %9, align 8
  %248 = getelementptr inbounds %struct.extstore_conf_file, %struct.extstore_conf_file* %247, i32 0, i32 3
  %249 = load i64, i64* %248, align 8
  %250 = add i64 %249, %246
  store i64 %250, i64* %248, align 8
  br label %251

251:                                              ; preds = %189
  %252 = load i32, i32* %8, align 4
  %253 = add nsw i32 %252, 1
  store i32 %253, i32* %8, align 4
  br label %157, !llvm.loop !180

254:                                              ; preds = %157
  %255 = load %struct.extstore_conf*, %struct.extstore_conf** %6, align 8
  %256 = getelementptr inbounds %struct.extstore_conf, %struct.extstore_conf* %255, i32 0, i32 2
  %257 = load i32, i32* %256, align 4
  %258 = zext i32 %257 to i64
  %259 = call noalias i8* @calloc(i64 %258, i64 8) #14
  %260 = bitcast i8* %259 to %struct._store_page**
  %261 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %262 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %261, i32 0, i32 8
  store %struct._store_page** %260, %struct._store_page*** %262, align 8
  %263 = load %struct.extstore_conf*, %struct.extstore_conf** %6, align 8
  %264 = getelementptr inbounds %struct.extstore_conf, %struct.extstore_conf* %263, i32 0, i32 2
  %265 = load i32, i32* %264, align 4
  %266 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %267 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %266, i32 0, i32 15
  store i32 %265, i32* %267, align 4
  %268 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %269 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %268, i32 0, i32 13
  %270 = load i32, i32* %269, align 4
  %271 = sub i32 %270, 1
  store i32 %271, i32* %8, align 4
  br label %272

272:                                              ; preds = %344, %254
  %273 = load i32, i32* %8, align 4
  %274 = icmp sgt i32 %273, 0
  br i1 %274, label %275, label %347

275:                                              ; preds = %272
  %276 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %277 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %276, i32 0, i32 14
  %278 = load i32, i32* %277, align 8
  %279 = add i32 %278, 1
  store i32 %279, i32* %277, align 8
  %280 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %281 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %280, i32 0, i32 1
  %282 = load %struct._store_page*, %struct._store_page** %281, align 8
  %283 = load i32, i32* %8, align 4
  %284 = sext i32 %283 to i64
  %285 = getelementptr inbounds %struct._store_page, %struct._store_page* %282, i64 %284
  %286 = getelementptr inbounds %struct._store_page, %struct._store_page* %285, i32 0, i32 9
  %287 = load i32, i32* %286, align 4
  %288 = icmp eq i32 %287, 0
  br i1 %288, label %289, label %308

289:                                              ; preds = %275
  %290 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %291 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %290, i32 0, i32 6
  %292 = load %struct._store_page*, %struct._store_page** %291, align 8
  %293 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %294 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %293, i32 0, i32 1
  %295 = load %struct._store_page*, %struct._store_page** %294, align 8
  %296 = load i32, i32* %8, align 4
  %297 = sext i32 %296 to i64
  %298 = getelementptr inbounds %struct._store_page, %struct._store_page* %295, i64 %297
  %299 = getelementptr inbounds %struct._store_page, %struct._store_page* %298, i32 0, i32 16
  store %struct._store_page* %292, %struct._store_page** %299, align 8
  %300 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %301 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %300, i32 0, i32 1
  %302 = load %struct._store_page*, %struct._store_page** %301, align 8
  %303 = load i32, i32* %8, align 4
  %304 = sext i32 %303 to i64
  %305 = getelementptr inbounds %struct._store_page, %struct._store_page* %302, i64 %304
  %306 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %307 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %306, i32 0, i32 6
  store %struct._store_page* %305, %struct._store_page** %307, align 8
  br label %343

308:                                              ; preds = %275
  %309 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %310 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %309, i32 0, i32 1
  %311 = load %struct._store_page*, %struct._store_page** %310, align 8
  %312 = load i32, i32* %8, align 4
  %313 = sext i32 %312 to i64
  %314 = getelementptr inbounds %struct._store_page, %struct._store_page* %311, i64 %313
  %315 = getelementptr inbounds %struct._store_page, %struct._store_page* %314, i32 0, i32 9
  %316 = load i32, i32* %315, align 4
  store i32 %316, i32* %14, align 4
  %317 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %318 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %317, i32 0, i32 8
  %319 = load %struct._store_page**, %struct._store_page*** %318, align 8
  %320 = load i32, i32* %14, align 4
  %321 = sext i32 %320 to i64
  %322 = getelementptr inbounds %struct._store_page*, %struct._store_page** %319, i64 %321
  %323 = load %struct._store_page*, %struct._store_page** %322, align 8
  %324 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %325 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %324, i32 0, i32 1
  %326 = load %struct._store_page*, %struct._store_page** %325, align 8
  %327 = load i32, i32* %8, align 4
  %328 = sext i32 %327 to i64
  %329 = getelementptr inbounds %struct._store_page, %struct._store_page* %326, i64 %328
  %330 = getelementptr inbounds %struct._store_page, %struct._store_page* %329, i32 0, i32 16
  store %struct._store_page* %323, %struct._store_page** %330, align 8
  %331 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %332 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %331, i32 0, i32 1
  %333 = load %struct._store_page*, %struct._store_page** %332, align 8
  %334 = load i32, i32* %8, align 4
  %335 = sext i32 %334 to i64
  %336 = getelementptr inbounds %struct._store_page, %struct._store_page* %333, i64 %335
  %337 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %338 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %337, i32 0, i32 8
  %339 = load %struct._store_page**, %struct._store_page*** %338, align 8
  %340 = load i32, i32* %14, align 4
  %341 = sext i32 %340 to i64
  %342 = getelementptr inbounds %struct._store_page*, %struct._store_page** %339, i64 %341
  store %struct._store_page* %336, %struct._store_page** %342, align 8
  br label %343

343:                                              ; preds = %308, %289
  br label %344

344:                                              ; preds = %343
  %345 = load i32, i32* %8, align 4
  %346 = add nsw i32 %345, -1
  store i32 %346, i32* %8, align 4
  br label %272, !llvm.loop !181

347:                                              ; preds = %272
  %348 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %349 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %348, i32 0, i32 10
  store i32 1, i32* %349, align 8
  %350 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %351 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %350, i32 0, i32 13
  %352 = load i32, i32* %351, align 4
  %353 = zext i32 %352 to i64
  %354 = call noalias i8* @calloc(i64 %353, i64 24) #14
  %355 = bitcast i8* %354 to %struct.extstore_page_data*
  %356 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %357 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %356, i32 0, i32 19
  %358 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %357, i32 0, i32 17
  store %struct.extstore_page_data* %355, %struct.extstore_page_data** %358, align 8
  %359 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %360 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %359, i32 0, i32 13
  %361 = load i32, i32* %360, align 4
  %362 = zext i32 %361 to i64
  %363 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %364 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %363, i32 0, i32 19
  %365 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %364, i32 0, i32 1
  store i64 %362, i64* %365, align 8
  %366 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %367 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %366, i32 0, i32 9
  %368 = load i64, i64* %367, align 8
  %369 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %370 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %369, i32 0, i32 19
  %371 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %370, i32 0, i32 4
  store i64 %368, i64* %371, align 8
  %372 = load %struct.extstore_conf*, %struct.extstore_conf** %6, align 8
  %373 = getelementptr inbounds %struct.extstore_conf, %struct.extstore_conf* %372, i32 0, i32 2
  %374 = load i32, i32* %373, align 4
  %375 = zext i32 %374 to i64
  %376 = call noalias i8* @calloc(i64 %375, i64 8) #14
  %377 = bitcast i8* %376 to %struct._store_page**
  %378 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %379 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %378, i32 0, i32 7
  store %struct._store_page** %377, %struct._store_page*** %379, align 8
  %380 = load %struct.extstore_conf*, %struct.extstore_conf** %6, align 8
  %381 = getelementptr inbounds %struct.extstore_conf, %struct.extstore_conf* %380, i32 0, i32 2
  %382 = load i32, i32* %381, align 4
  %383 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %384 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %383, i32 0, i32 15
  store i32 %382, i32* %384, align 4
  store i32 0, i32* %8, align 4
  br label %385

385:                                              ; preds = %415, %347
  %386 = load i32, i32* %8, align 4
  %387 = load %struct.extstore_conf*, %struct.extstore_conf** %6, align 8
  %388 = getelementptr inbounds %struct.extstore_conf, %struct.extstore_conf* %387, i32 0, i32 5
  %389 = load i32, i32* %388, align 4
  %390 = icmp ult i32 %386, %389
  br i1 %390, label %391, label %418

391:                                              ; preds = %385
  %392 = load %struct.extstore_conf*, %struct.extstore_conf** %6, align 8
  %393 = getelementptr inbounds %struct.extstore_conf, %struct.extstore_conf* %392, i32 0, i32 4
  %394 = load i32, i32* %393, align 4
  %395 = zext i32 %394 to i64
  %396 = call %struct.__store_wbuf* @wbuf_new(i64 %395)
  store %struct.__store_wbuf* %396, %struct.__store_wbuf** %15, align 8
  %397 = call noalias i8* @calloc(i64 1, i64 64) #14
  %398 = bitcast i8* %397 to %struct._obj_io*
  store %struct._obj_io* %398, %struct._obj_io** %16, align 8
  %399 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %400 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %399, i32 0, i32 2
  %401 = load %struct.__store_wbuf*, %struct.__store_wbuf** %400, align 8
  %402 = load %struct.__store_wbuf*, %struct.__store_wbuf** %15, align 8
  %403 = getelementptr inbounds %struct.__store_wbuf, %struct.__store_wbuf* %402, i32 0, i32 0
  store %struct.__store_wbuf* %401, %struct.__store_wbuf** %403, align 8
  %404 = load %struct.__store_wbuf*, %struct.__store_wbuf** %15, align 8
  %405 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %406 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %405, i32 0, i32 2
  store %struct.__store_wbuf* %404, %struct.__store_wbuf** %406, align 8
  %407 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %408 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %407, i32 0, i32 3
  %409 = load %struct._obj_io*, %struct._obj_io** %408, align 8
  %410 = load %struct._obj_io*, %struct._obj_io** %16, align 8
  %411 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %410, i32 0, i32 1
  store %struct._obj_io* %409, %struct._obj_io** %411, align 8
  %412 = load %struct._obj_io*, %struct._obj_io** %16, align 8
  %413 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %414 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %413, i32 0, i32 3
  store %struct._obj_io* %412, %struct._obj_io** %414, align 8
  br label %415

415:                                              ; preds = %391
  %416 = load i32, i32* %8, align 4
  %417 = add nsw i32 %416, 1
  store i32 %417, i32* %8, align 4
  br label %385, !llvm.loop !182

418:                                              ; preds = %385
  %419 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %420 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %419, i32 0, i32 0
  %421 = call i32 @pthread_mutex_init(%union.pthread_mutex_t* %420, %struct.in_addr* null) #14
  %422 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %423 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %422, i32 0, i32 18
  %424 = call i32 @pthread_mutex_init(%union.pthread_mutex_t* %423, %struct.in_addr* null) #14
  %425 = load %struct.extstore_conf*, %struct.extstore_conf** %6, align 8
  %426 = getelementptr inbounds %struct.extstore_conf, %struct.extstore_conf* %425, i32 0, i32 7
  %427 = load i32, i32* %426, align 4
  %428 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %429 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %428, i32 0, i32 17
  store i32 %427, i32* %429, align 4
  %430 = load %struct.extstore_conf*, %struct.extstore_conf** %6, align 8
  %431 = getelementptr inbounds %struct.extstore_conf, %struct.extstore_conf* %430, i32 0, i32 6
  %432 = load i32, i32* %431, align 4
  %433 = zext i32 %432 to i64
  %434 = call noalias i8* @calloc(i64 %433, i64 120) #14
  %435 = bitcast i8* %434 to %struct.store_io_thread*
  %436 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %437 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %436, i32 0, i32 4
  store %struct.store_io_thread* %435, %struct.store_io_thread** %437, align 8
  store i32 0, i32* %8, align 4
  br label %438

438:                                              ; preds = %477, %418
  %439 = load i32, i32* %8, align 4
  %440 = load %struct.extstore_conf*, %struct.extstore_conf** %6, align 8
  %441 = getelementptr inbounds %struct.extstore_conf, %struct.extstore_conf* %440, i32 0, i32 6
  %442 = load i32, i32* %441, align 4
  %443 = icmp ult i32 %439, %442
  br i1 %443, label %444, label %480

444:                                              ; preds = %438
  %445 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %446 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %445, i32 0, i32 4
  %447 = load %struct.store_io_thread*, %struct.store_io_thread** %446, align 8
  %448 = load i32, i32* %8, align 4
  %449 = sext i32 %448 to i64
  %450 = getelementptr inbounds %struct.store_io_thread, %struct.store_io_thread* %447, i64 %449
  %451 = getelementptr inbounds %struct.store_io_thread, %struct.store_io_thread* %450, i32 0, i32 0
  %452 = call i32 @pthread_mutex_init(%union.pthread_mutex_t* %451, %struct.in_addr* null) #14
  %453 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %454 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %453, i32 0, i32 4
  %455 = load %struct.store_io_thread*, %struct.store_io_thread** %454, align 8
  %456 = load i32, i32* %8, align 4
  %457 = sext i32 %456 to i64
  %458 = getelementptr inbounds %struct.store_io_thread, %struct.store_io_thread* %455, i64 %457
  %459 = getelementptr inbounds %struct.store_io_thread, %struct.store_io_thread* %458, i32 0, i32 1
  %460 = call i32 @pthread_cond_init(%union.pthread_cond_t* %459, %struct.in_addr* null) #14
  %461 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %462 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %463 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %462, i32 0, i32 4
  %464 = load %struct.store_io_thread*, %struct.store_io_thread** %463, align 8
  %465 = load i32, i32* %8, align 4
  %466 = sext i32 %465 to i64
  %467 = getelementptr inbounds %struct.store_io_thread, %struct.store_io_thread* %464, i64 %466
  %468 = getelementptr inbounds %struct.store_io_thread, %struct.store_io_thread* %467, i32 0, i32 4
  store %struct.store_engine* %461, %struct.store_engine** %468, align 8
  %469 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %470 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %469, i32 0, i32 4
  %471 = load %struct.store_io_thread*, %struct.store_io_thread** %470, align 8
  %472 = load i32, i32* %8, align 4
  %473 = sext i32 %472 to i64
  %474 = getelementptr inbounds %struct.store_io_thread, %struct.store_io_thread* %471, i64 %473
  %475 = bitcast %struct.store_io_thread* %474 to i8*
  %476 = call i32 @pthread_create(i64* %10, %union.pthread_attr_t* null, i8* (i8*)* @extstore_io_thread, i8* %475) #14
  br label %477

477:                                              ; preds = %444
  %478 = load i32, i32* %8, align 4
  %479 = add nsw i32 %478, 1
  store i32 %479, i32* %8, align 4
  br label %438, !llvm.loop !183

480:                                              ; preds = %438
  %481 = load %struct.extstore_conf*, %struct.extstore_conf** %6, align 8
  %482 = getelementptr inbounds %struct.extstore_conf, %struct.extstore_conf* %481, i32 0, i32 6
  %483 = load i32, i32* %482, align 4
  %484 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %485 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %484, i32 0, i32 12
  store i32 %483, i32* %485, align 8
  %486 = call noalias i8* @calloc(i64 1, i64 96) #14
  %487 = bitcast i8* %486 to %struct.store_maint_thread*
  %488 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %489 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %488, i32 0, i32 5
  store %struct.store_maint_thread* %487, %struct.store_maint_thread** %489, align 8
  %490 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %491 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %492 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %491, i32 0, i32 5
  %493 = load %struct.store_maint_thread*, %struct.store_maint_thread** %492, align 8
  %494 = getelementptr inbounds %struct.store_maint_thread, %struct.store_maint_thread* %493, i32 0, i32 2
  store %struct.store_engine* %490, %struct.store_engine** %494, align 8
  %495 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %496 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %495, i32 0, i32 5
  %497 = load %struct.store_maint_thread*, %struct.store_maint_thread** %496, align 8
  %498 = getelementptr inbounds %struct.store_maint_thread, %struct.store_maint_thread* %497, i32 0, i32 0
  %499 = call i32 @pthread_mutex_init(%union.pthread_mutex_t* %498, %struct.in_addr* null) #14
  %500 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %501 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %500, i32 0, i32 5
  %502 = load %struct.store_maint_thread*, %struct.store_maint_thread** %501, align 8
  %503 = getelementptr inbounds %struct.store_maint_thread, %struct.store_maint_thread* %502, i32 0, i32 1
  %504 = call i32 @pthread_cond_init(%union.pthread_cond_t* %503, %struct.in_addr* null) #14
  %505 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %506 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %505, i32 0, i32 5
  %507 = load %struct.store_maint_thread*, %struct.store_maint_thread** %506, align 8
  %508 = bitcast %struct.store_maint_thread* %507 to i8*
  %509 = call i32 @pthread_create(i64* %10, %union.pthread_attr_t* null, i8* (i8*)* @extstore_maint_thread, i8* %508) #14
  %510 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %511 = bitcast %struct.store_engine* %510 to i8*
  call void @extstore_run_maint(i8* %511)
  %512 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %513 = bitcast %struct.store_engine* %512 to i8*
  store i8* %513, i8** %4, align 8
  br label %514

514:                                              ; preds = %480, %152, %131, %111, %101, %87, %63, %56, %42, %35, %25
  %515 = load i8*, i8** %4, align 8
  ret i8* %515
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.__store_wbuf* @wbuf_new(i64 %0) #0 {
  %2 = alloca %struct.__store_wbuf*, align 8
  %3 = alloca i64, align 8
  %4 = alloca %struct.__store_wbuf*, align 8
  store i64 %0, i64* %3, align 8
  %5 = call noalias i8* @calloc(i64 1, i64 40) #14
  %6 = bitcast i8* %5 to %struct.__store_wbuf*
  store %struct.__store_wbuf* %6, %struct.__store_wbuf** %4, align 8
  %7 = load %struct.__store_wbuf*, %struct.__store_wbuf** %4, align 8
  %8 = icmp eq %struct.__store_wbuf* %7, null
  br i1 %8, label %9, label %10

9:                                                ; preds = %1
  store %struct.__store_wbuf* null, %struct.__store_wbuf** %2, align 8
  br label %37

10:                                               ; preds = %1
  %11 = load i64, i64* %3, align 8
  %12 = call noalias i8* @calloc(i64 %11, i64 1) #14
  %13 = load %struct.__store_wbuf*, %struct.__store_wbuf** %4, align 8
  %14 = getelementptr inbounds %struct.__store_wbuf, %struct.__store_wbuf* %13, i32 0, i32 1
  store i8* %12, i8** %14, align 8
  %15 = load %struct.__store_wbuf*, %struct.__store_wbuf** %4, align 8
  %16 = getelementptr inbounds %struct.__store_wbuf, %struct.__store_wbuf* %15, i32 0, i32 1
  %17 = load i8*, i8** %16, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %19, label %22

19:                                               ; preds = %10
  %20 = load %struct.__store_wbuf*, %struct.__store_wbuf** %4, align 8
  %21 = bitcast %struct.__store_wbuf* %20 to i8*
  call void @free(i8* %21) #14
  store %struct.__store_wbuf* null, %struct.__store_wbuf** %2, align 8
  br label %37

22:                                               ; preds = %10
  %23 = load %struct.__store_wbuf*, %struct.__store_wbuf** %4, align 8
  %24 = getelementptr inbounds %struct.__store_wbuf, %struct.__store_wbuf* %23, i32 0, i32 1
  %25 = load i8*, i8** %24, align 8
  %26 = load %struct.__store_wbuf*, %struct.__store_wbuf** %4, align 8
  %27 = getelementptr inbounds %struct.__store_wbuf, %struct.__store_wbuf* %26, i32 0, i32 2
  store i8* %25, i8** %27, align 8
  %28 = load i64, i64* %3, align 8
  %29 = trunc i64 %28 to i32
  %30 = load %struct.__store_wbuf*, %struct.__store_wbuf** %4, align 8
  %31 = getelementptr inbounds %struct.__store_wbuf, %struct.__store_wbuf* %30, i32 0, i32 3
  store i32 %29, i32* %31, align 8
  %32 = load i64, i64* %3, align 8
  %33 = trunc i64 %32 to i32
  %34 = load %struct.__store_wbuf*, %struct.__store_wbuf** %4, align 8
  %35 = getelementptr inbounds %struct.__store_wbuf, %struct.__store_wbuf* %34, i32 0, i32 4
  store i32 %33, i32* %35, align 4
  %36 = load %struct.__store_wbuf*, %struct.__store_wbuf** %4, align 8
  store %struct.__store_wbuf* %36, %struct.__store_wbuf** %2, align 8
  br label %37

37:                                               ; preds = %22, %19, %9
  %38 = load %struct.__store_wbuf*, %struct.__store_wbuf** %2, align 8
  ret %struct.__store_wbuf* %38
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @extstore_io_thread(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.store_io_thread*, align 8
  %4 = alloca %struct.store_engine*, align 8
  %5 = alloca %struct._obj_io*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct._obj_io*, align 8
  %8 = alloca %struct._obj_io*, align 8
  %9 = alloca %struct._obj_io*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %struct._store_page*, align 8
  store i8* %0, i8** %2, align 8
  %13 = load i8*, i8** %2, align 8
  %14 = bitcast i8* %13 to %struct.store_io_thread*
  store %struct.store_io_thread* %14, %struct.store_io_thread** %3, align 8
  %15 = load %struct.store_io_thread*, %struct.store_io_thread** %3, align 8
  %16 = getelementptr inbounds %struct.store_io_thread, %struct.store_io_thread* %15, i32 0, i32 4
  %17 = load %struct.store_engine*, %struct.store_engine** %16, align 8
  store %struct.store_engine* %17, %struct.store_engine** %4, align 8
  br label %18

18:                                               ; preds = %1, %270
  store %struct._obj_io* null, %struct._obj_io** %5, align 8
  %19 = load %struct.store_io_thread*, %struct.store_io_thread** %3, align 8
  %20 = getelementptr inbounds %struct.store_io_thread, %struct.store_io_thread* %19, i32 0, i32 0
  %21 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %20) #14
  %22 = load %struct.store_io_thread*, %struct.store_io_thread** %3, align 8
  %23 = getelementptr inbounds %struct.store_io_thread, %struct.store_io_thread* %22, i32 0, i32 2
  %24 = load %struct._obj_io*, %struct._obj_io** %23, align 8
  %25 = icmp eq %struct._obj_io* %24, null
  br i1 %25, label %26, label %32

26:                                               ; preds = %18
  %27 = load %struct.store_io_thread*, %struct.store_io_thread** %3, align 8
  %28 = getelementptr inbounds %struct.store_io_thread, %struct.store_io_thread* %27, i32 0, i32 1
  %29 = load %struct.store_io_thread*, %struct.store_io_thread** %3, align 8
  %30 = getelementptr inbounds %struct.store_io_thread, %struct.store_io_thread* %29, i32 0, i32 0
  %31 = call i32 @pthread_cond_wait(%union.pthread_cond_t* %28, %union.pthread_mutex_t* %30)
  br label %32

32:                                               ; preds = %26, %18
  %33 = load %struct.store_io_thread*, %struct.store_io_thread** %3, align 8
  %34 = getelementptr inbounds %struct.store_io_thread, %struct.store_io_thread* %33, i32 0, i32 2
  %35 = load %struct._obj_io*, %struct._obj_io** %34, align 8
  %36 = icmp ne %struct._obj_io* %35, null
  br i1 %36, label %37, label %80

37:                                               ; preds = %32
  store %struct._obj_io* null, %struct._obj_io** %7, align 8
  %38 = load %struct.store_io_thread*, %struct.store_io_thread** %3, align 8
  %39 = getelementptr inbounds %struct.store_io_thread, %struct.store_io_thread* %38, i32 0, i32 2
  %40 = load %struct._obj_io*, %struct._obj_io** %39, align 8
  store %struct._obj_io* %40, %struct._obj_io** %5, align 8
  %41 = load %struct._obj_io*, %struct._obj_io** %5, align 8
  store %struct._obj_io* %41, %struct._obj_io** %7, align 8
  store i32 1, i32* %6, align 4
  br label %42

42:                                               ; preds = %64, %37
  %43 = load i32, i32* %6, align 4
  %44 = load %struct.store_engine*, %struct.store_engine** %4, align 8
  %45 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %44, i32 0, i32 17
  %46 = load i32, i32* %45, align 4
  %47 = icmp ult i32 %43, %46
  br i1 %47, label %48, label %67

48:                                               ; preds = %42
  %49 = load %struct._obj_io*, %struct._obj_io** %7, align 8
  %50 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %49, i32 0, i32 1
  %51 = load %struct._obj_io*, %struct._obj_io** %50, align 8
  %52 = icmp ne %struct._obj_io* %51, null
  br i1 %52, label %53, label %57

53:                                               ; preds = %48
  %54 = load %struct._obj_io*, %struct._obj_io** %7, align 8
  %55 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %54, i32 0, i32 1
  %56 = load %struct._obj_io*, %struct._obj_io** %55, align 8
  store %struct._obj_io* %56, %struct._obj_io** %7, align 8
  br label %63

57:                                               ; preds = %48
  %58 = load %struct._obj_io*, %struct._obj_io** %7, align 8
  %59 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %58, i32 0, i32 1
  %60 = load %struct._obj_io*, %struct._obj_io** %59, align 8
  %61 = load %struct.store_io_thread*, %struct.store_io_thread** %3, align 8
  %62 = getelementptr inbounds %struct.store_io_thread, %struct.store_io_thread* %61, i32 0, i32 3
  store %struct._obj_io* %60, %struct._obj_io** %62, align 8
  br label %67

63:                                               ; preds = %53
  br label %64

64:                                               ; preds = %63
  %65 = load i32, i32* %6, align 4
  %66 = add nsw i32 %65, 1
  store i32 %66, i32* %6, align 4
  br label %42, !llvm.loop !184

67:                                               ; preds = %57, %42
  %68 = load i32, i32* %6, align 4
  %69 = load %struct.store_io_thread*, %struct.store_io_thread** %3, align 8
  %70 = getelementptr inbounds %struct.store_io_thread, %struct.store_io_thread* %69, i32 0, i32 5
  %71 = load i32, i32* %70, align 8
  %72 = sub i32 %71, %68
  store i32 %72, i32* %70, align 8
  %73 = load %struct._obj_io*, %struct._obj_io** %7, align 8
  %74 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %73, i32 0, i32 1
  %75 = load %struct._obj_io*, %struct._obj_io** %74, align 8
  %76 = load %struct.store_io_thread*, %struct.store_io_thread** %3, align 8
  %77 = getelementptr inbounds %struct.store_io_thread, %struct.store_io_thread* %76, i32 0, i32 2
  store %struct._obj_io* %75, %struct._obj_io** %77, align 8
  %78 = load %struct._obj_io*, %struct._obj_io** %7, align 8
  %79 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %78, i32 0, i32 1
  store %struct._obj_io* null, %struct._obj_io** %79, align 8
  br label %80

80:                                               ; preds = %67, %32
  %81 = load %struct.store_io_thread*, %struct.store_io_thread** %3, align 8
  %82 = getelementptr inbounds %struct.store_io_thread, %struct.store_io_thread* %81, i32 0, i32 0
  %83 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %82) #14
  %84 = load %struct._obj_io*, %struct._obj_io** %5, align 8
  store %struct._obj_io* %84, %struct._obj_io** %8, align 8
  br label %85

85:                                               ; preds = %268, %80
  %86 = load %struct._obj_io*, %struct._obj_io** %8, align 8
  %87 = icmp ne %struct._obj_io* %86, null
  br i1 %87, label %88, label %270

88:                                               ; preds = %85
  %89 = load %struct._obj_io*, %struct._obj_io** %8, align 8
  %90 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %89, i32 0, i32 1
  %91 = load %struct._obj_io*, %struct._obj_io** %90, align 8
  store %struct._obj_io* %91, %struct._obj_io** %9, align 8
  store i32 0, i32* %10, align 4
  store i32 1, i32* %11, align 4
  %92 = load %struct.store_engine*, %struct.store_engine** %4, align 8
  %93 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %92, i32 0, i32 1
  %94 = load %struct._store_page*, %struct._store_page** %93, align 8
  %95 = load %struct._obj_io*, %struct._obj_io** %8, align 8
  %96 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %95, i32 0, i32 8
  %97 = load i16, i16* %96, align 8
  %98 = zext i16 %97 to i64
  %99 = getelementptr inbounds %struct._store_page, %struct._store_page* %94, i64 %98
  store %struct._store_page* %99, %struct._store_page** %12, align 8
  %100 = load %struct._obj_io*, %struct._obj_io** %8, align 8
  %101 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %100, i32 0, i32 9
  %102 = load i32, i32* %101, align 4
  switch i32 %102, label %243 [
    i32 0, label %103
    i32 1, label %222
  ]

103:                                              ; preds = %88
  %104 = load %struct._store_page*, %struct._store_page** %12, align 8
  %105 = getelementptr inbounds %struct._store_page, %struct._store_page* %104, i32 0, i32 0
  %106 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %105) #14
  %107 = load %struct._store_page*, %struct._store_page** %12, align 8
  %108 = getelementptr inbounds %struct._store_page, %struct._store_page* %107, i32 0, i32 14
  %109 = load i8, i8* %108, align 8
  %110 = trunc i8 %109 to i1
  br i1 %110, label %167, label %111

111:                                              ; preds = %103
  %112 = load %struct._store_page*, %struct._store_page** %12, align 8
  %113 = getelementptr inbounds %struct._store_page, %struct._store_page* %112, i32 0, i32 13
  %114 = load i8, i8* %113, align 1
  %115 = trunc i8 %114 to i1
  br i1 %115, label %167, label %116

116:                                              ; preds = %111
  %117 = load %struct._store_page*, %struct._store_page** %12, align 8
  %118 = getelementptr inbounds %struct._store_page, %struct._store_page* %117, i32 0, i32 4
  %119 = load i32, i32* %118, align 8
  %120 = load %struct._obj_io*, %struct._obj_io** %8, align 8
  %121 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %120, i32 0, i32 5
  %122 = load i32, i32* %121, align 4
  %123 = icmp eq i32 %119, %122
  br i1 %123, label %124, label %167

124:                                              ; preds = %116
  %125 = load %struct._store_page*, %struct._store_page** %12, align 8
  %126 = getelementptr inbounds %struct._store_page, %struct._store_page* %125, i32 0, i32 12
  %127 = load i8, i8* %126, align 2
  %128 = trunc i8 %127 to i1
  br i1 %128, label %129, label %141

129:                                              ; preds = %124
  %130 = load %struct._obj_io*, %struct._obj_io** %8, align 8
  %131 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %130, i32 0, i32 7
  %132 = load i32, i32* %131, align 4
  %133 = load %struct._store_page*, %struct._store_page** %12, align 8
  %134 = getelementptr inbounds %struct._store_page, %struct._store_page* %133, i32 0, i32 7
  %135 = load i32, i32* %134, align 4
  %136 = icmp uge i32 %132, %135
  br i1 %136, label %137, label %141

137:                                              ; preds = %129
  %138 = load %struct._store_page*, %struct._store_page** %12, align 8
  %139 = load %struct._obj_io*, %struct._obj_io** %8, align 8
  %140 = call i32 @_read_from_wbuf(%struct._store_page* %138, %struct._obj_io* %139)
  store i32 %140, i32* %10, align 4
  store i32 0, i32* %11, align 4
  br label %146

141:                                              ; preds = %129, %124
  %142 = load %struct._store_page*, %struct._store_page** %12, align 8
  %143 = getelementptr inbounds %struct._store_page, %struct._store_page* %142, i32 0, i32 5
  %144 = load i32, i32* %143, align 4
  %145 = add i32 %144, 1
  store i32 %145, i32* %143, align 4
  br label %146

146:                                              ; preds = %141, %137
  %147 = load %struct.store_engine*, %struct.store_engine** %4, align 8
  %148 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %147, i32 0, i32 18
  %149 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %148) #14
  %150 = load %struct._obj_io*, %struct._obj_io** %8, align 8
  %151 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %150, i32 0, i32 6
  %152 = load i32, i32* %151, align 8
  %153 = zext i32 %152 to i64
  %154 = load %struct.store_engine*, %struct.store_engine** %4, align 8
  %155 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %154, i32 0, i32 19
  %156 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %155, i32 0, i32 13
  %157 = load i64, i64* %156, align 8
  %158 = add i64 %157, %153
  store i64 %158, i64* %156, align 8
  %159 = load %struct.store_engine*, %struct.store_engine** %4, align 8
  %160 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %159, i32 0, i32 19
  %161 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %160, i32 0, i32 8
  %162 = load i64, i64* %161, align 8
  %163 = add i64 %162, 1
  store i64 %163, i64* %161, align 8
  %164 = load %struct.store_engine*, %struct.store_engine** %4, align 8
  %165 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %164, i32 0, i32 18
  %166 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %165) #14
  br label %168

167:                                              ; preds = %116, %111, %103
  store i32 0, i32* %11, align 4
  store i32 -2, i32* %10, align 4
  br label %168

168:                                              ; preds = %167, %146
  %169 = load %struct._store_page*, %struct._store_page** %12, align 8
  %170 = getelementptr inbounds %struct._store_page, %struct._store_page* %169, i32 0, i32 0
  %171 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %170) #14
  %172 = load i32, i32* %11, align 4
  %173 = icmp ne i32 %172, 0
  br i1 %173, label %174, label %221

174:                                              ; preds = %168
  %175 = load %struct._obj_io*, %struct._obj_io** %8, align 8
  %176 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %175, i32 0, i32 3
  %177 = load %struct.iovec*, %struct.iovec** %176, align 8
  %178 = icmp eq %struct.iovec* %177, null
  br i1 %178, label %179, label %200

179:                                              ; preds = %174
  %180 = load %struct._store_page*, %struct._store_page** %12, align 8
  %181 = getelementptr inbounds %struct._store_page, %struct._store_page* %180, i32 0, i32 10
  %182 = load i32, i32* %181, align 8
  %183 = load %struct._obj_io*, %struct._obj_io** %8, align 8
  %184 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %183, i32 0, i32 2
  %185 = load i8*, i8** %184, align 8
  %186 = load %struct._obj_io*, %struct._obj_io** %8, align 8
  %187 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %186, i32 0, i32 6
  %188 = load i32, i32* %187, align 8
  %189 = zext i32 %188 to i64
  %190 = load %struct._store_page*, %struct._store_page** %12, align 8
  %191 = getelementptr inbounds %struct._store_page, %struct._store_page* %190, i32 0, i32 3
  %192 = load i64, i64* %191, align 8
  %193 = load %struct._obj_io*, %struct._obj_io** %8, align 8
  %194 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %193, i32 0, i32 7
  %195 = load i32, i32* %194, align 4
  %196 = zext i32 %195 to i64
  %197 = add i64 %192, %196
  %198 = call i64 @pread(i32 %182, i8* %185, i64 %189, i64 %197)
  %199 = trunc i64 %198 to i32
  store i32 %199, i32* %10, align 4
  br label %220

200:                                              ; preds = %174
  %201 = load %struct._store_page*, %struct._store_page** %12, align 8
  %202 = getelementptr inbounds %struct._store_page, %struct._store_page* %201, i32 0, i32 10
  %203 = load i32, i32* %202, align 8
  %204 = load %struct._obj_io*, %struct._obj_io** %8, align 8
  %205 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %204, i32 0, i32 3
  %206 = load %struct.iovec*, %struct.iovec** %205, align 8
  %207 = load %struct._obj_io*, %struct._obj_io** %8, align 8
  %208 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %207, i32 0, i32 4
  %209 = load i32, i32* %208, align 8
  %210 = load %struct._store_page*, %struct._store_page** %12, align 8
  %211 = getelementptr inbounds %struct._store_page, %struct._store_page* %210, i32 0, i32 3
  %212 = load i64, i64* %211, align 8
  %213 = load %struct._obj_io*, %struct._obj_io** %8, align 8
  %214 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %213, i32 0, i32 7
  %215 = load i32, i32* %214, align 4
  %216 = zext i32 %215 to i64
  %217 = add i64 %212, %216
  %218 = call i64 @preadv(i32 %203, %struct.iovec* %206, i32 %209, i64 %217)
  %219 = trunc i64 %218 to i32
  store i32 %219, i32* %10, align 4
  br label %220

220:                                              ; preds = %200, %179
  br label %221

221:                                              ; preds = %220, %168
  br label %243

222:                                              ; preds = %88
  store i32 0, i32* %11, align 4
  %223 = load %struct._store_page*, %struct._store_page** %12, align 8
  %224 = getelementptr inbounds %struct._store_page, %struct._store_page* %223, i32 0, i32 10
  %225 = load i32, i32* %224, align 8
  %226 = load %struct._obj_io*, %struct._obj_io** %8, align 8
  %227 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %226, i32 0, i32 2
  %228 = load i8*, i8** %227, align 8
  %229 = load %struct._obj_io*, %struct._obj_io** %8, align 8
  %230 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %229, i32 0, i32 6
  %231 = load i32, i32* %230, align 8
  %232 = zext i32 %231 to i64
  %233 = load %struct._store_page*, %struct._store_page** %12, align 8
  %234 = getelementptr inbounds %struct._store_page, %struct._store_page* %233, i32 0, i32 3
  %235 = load i64, i64* %234, align 8
  %236 = load %struct._obj_io*, %struct._obj_io** %8, align 8
  %237 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %236, i32 0, i32 7
  %238 = load i32, i32* %237, align 4
  %239 = zext i32 %238 to i64
  %240 = add i64 %235, %239
  %241 = call i64 @pwrite(i32 %225, i8* %228, i64 %232, i64 %240)
  %242 = trunc i64 %241 to i32
  store i32 %242, i32* %10, align 4
  br label %243

243:                                              ; preds = %88, %222, %221
  %244 = load i32, i32* %10, align 4
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %246, label %247

246:                                              ; preds = %243
  br label %247

247:                                              ; preds = %246, %243
  %248 = load %struct._obj_io*, %struct._obj_io** %8, align 8
  %249 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %248, i32 0, i32 10
  %250 = load void (i8*, %struct._obj_io*, i32)*, void (i8*, %struct._obj_io*, i32)** %249, align 8
  %251 = load %struct.store_engine*, %struct.store_engine** %4, align 8
  %252 = bitcast %struct.store_engine* %251 to i8*
  %253 = load %struct._obj_io*, %struct._obj_io** %8, align 8
  %254 = load i32, i32* %10, align 4
  call void %250(i8* %252, %struct._obj_io* %253, i32 %254)
  %255 = load i32, i32* %11, align 4
  %256 = icmp ne i32 %255, 0
  br i1 %256, label %257, label %268

257:                                              ; preds = %247
  %258 = load %struct._store_page*, %struct._store_page** %12, align 8
  %259 = getelementptr inbounds %struct._store_page, %struct._store_page* %258, i32 0, i32 0
  %260 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %259) #14
  %261 = load %struct._store_page*, %struct._store_page** %12, align 8
  %262 = getelementptr inbounds %struct._store_page, %struct._store_page* %261, i32 0, i32 5
  %263 = load i32, i32* %262, align 4
  %264 = add i32 %263, -1
  store i32 %264, i32* %262, align 4
  %265 = load %struct._store_page*, %struct._store_page** %12, align 8
  %266 = getelementptr inbounds %struct._store_page, %struct._store_page* %265, i32 0, i32 0
  %267 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %266) #14
  br label %268

268:                                              ; preds = %257, %247
  %269 = load %struct._obj_io*, %struct._obj_io** %9, align 8
  store %struct._obj_io* %269, %struct._obj_io** %8, align 8
  br label %85, !llvm.loop !185

270:                                              ; preds = %85
  br label %18
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @extstore_maint_thread(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.store_maint_thread*, align 8
  %4 = alloca %struct.store_engine*, align 8
  %5 = alloca %struct.extstore_page_data*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8, align 1
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  %10 = alloca %struct._store_page*, align 8
  %11 = alloca %struct._store_page*, align 8
  store i8* %0, i8** %2, align 8
  %12 = load i8*, i8** %2, align 8
  %13 = bitcast i8* %12 to %struct.store_maint_thread*
  store %struct.store_maint_thread* %13, %struct.store_maint_thread** %3, align 8
  %14 = load %struct.store_maint_thread*, %struct.store_maint_thread** %3, align 8
  %15 = getelementptr inbounds %struct.store_maint_thread, %struct.store_maint_thread* %14, i32 0, i32 2
  %16 = load %struct.store_engine*, %struct.store_engine** %15, align 8
  store %struct.store_engine* %16, %struct.store_engine** %4, align 8
  %17 = load %struct.store_engine*, %struct.store_engine** %4, align 8
  %18 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %17, i32 0, i32 13
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i64
  %21 = call noalias i8* @calloc(i64 %20, i64 24) #14
  %22 = bitcast i8* %21 to %struct.extstore_page_data*
  store %struct.extstore_page_data* %22, %struct.extstore_page_data** %5, align 8
  %23 = load %struct.store_maint_thread*, %struct.store_maint_thread** %3, align 8
  %24 = getelementptr inbounds %struct.store_maint_thread, %struct.store_maint_thread* %23, i32 0, i32 0
  %25 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %24) #14
  br label %26

26:                                               ; preds = %1, %242
  store i8 0, i8* %7, align 1
  store i32 0, i32* %8, align 4
  store i64 -1, i64* %9, align 8
  %27 = load %struct.store_maint_thread*, %struct.store_maint_thread** %3, align 8
  %28 = getelementptr inbounds %struct.store_maint_thread, %struct.store_maint_thread* %27, i32 0, i32 1
  %29 = load %struct.store_maint_thread*, %struct.store_maint_thread** %3, align 8
  %30 = getelementptr inbounds %struct.store_maint_thread, %struct.store_maint_thread* %29, i32 0, i32 0
  %31 = call i32 @pthread_cond_wait(%union.pthread_cond_t* %28, %union.pthread_mutex_t* %30)
  %32 = load %struct.store_engine*, %struct.store_engine** %4, align 8
  %33 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %32, i32 0, i32 0
  %34 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %33) #14
  %35 = load %struct.store_engine*, %struct.store_engine** %4, align 8
  %36 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %35, i32 0, i32 14
  %37 = load i32, i32* %36, align 8
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %44, label %39

39:                                               ; preds = %26
  %40 = load %struct.store_engine*, %struct.store_engine** %4, align 8
  %41 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %40, i32 0, i32 6
  %42 = load %struct._store_page*, %struct._store_page** %41, align 8
  %43 = icmp eq %struct._store_page* %42, null
  br i1 %43, label %44, label %45

44:                                               ; preds = %39, %26
  store i8 1, i8* %7, align 1
  br label %45

45:                                               ; preds = %44, %39
  %46 = load %struct.store_engine*, %struct.store_engine** %4, align 8
  %47 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %46, i32 0, i32 0
  %48 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %47) #14
  %49 = load %struct.extstore_page_data*, %struct.extstore_page_data** %5, align 8
  %50 = bitcast %struct.extstore_page_data* %49 to i8*
  %51 = load %struct.store_engine*, %struct.store_engine** %4, align 8
  %52 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %51, i32 0, i32 13
  %53 = load i32, i32* %52, align 4
  %54 = zext i32 %53 to i64
  %55 = mul i64 24, %54
  call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 %55, i1 false)
  store i32 0, i32* %6, align 4
  br label %56

56:                                               ; preds = %177, %45
  %57 = load i32, i32* %6, align 4
  %58 = load %struct.store_engine*, %struct.store_engine** %4, align 8
  %59 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %58, i32 0, i32 13
  %60 = load i32, i32* %59, align 4
  %61 = icmp ult i32 %57, %60
  br i1 %61, label %62, label %180

62:                                               ; preds = %56
  %63 = load %struct.store_engine*, %struct.store_engine** %4, align 8
  %64 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %63, i32 0, i32 1
  %65 = load %struct._store_page*, %struct._store_page** %64, align 8
  %66 = load i32, i32* %6, align 4
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds %struct._store_page, %struct._store_page* %65, i64 %67
  store %struct._store_page* %68, %struct._store_page** %10, align 8
  %69 = load %struct._store_page*, %struct._store_page** %10, align 8
  %70 = getelementptr inbounds %struct._store_page, %struct._store_page* %69, i32 0, i32 0
  %71 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %70) #14
  %72 = load %struct._store_page*, %struct._store_page** %10, align 8
  %73 = getelementptr inbounds %struct._store_page, %struct._store_page* %72, i32 0, i32 9
  %74 = load i32, i32* %73, align 4
  %75 = load %struct.extstore_page_data*, %struct.extstore_page_data** %5, align 8
  %76 = load %struct._store_page*, %struct._store_page** %10, align 8
  %77 = getelementptr inbounds %struct._store_page, %struct._store_page* %76, i32 0, i32 11
  %78 = load i16, i16* %77, align 4
  %79 = zext i16 %78 to i64
  %80 = getelementptr inbounds %struct.extstore_page_data, %struct.extstore_page_data* %75, i64 %79
  %81 = getelementptr inbounds %struct.extstore_page_data, %struct.extstore_page_data* %80, i32 0, i32 3
  store i32 %74, i32* %81, align 4
  %82 = load %struct._store_page*, %struct._store_page** %10, align 8
  %83 = getelementptr inbounds %struct._store_page, %struct._store_page* %82, i32 0, i32 12
  %84 = load i8, i8* %83, align 2
  %85 = trunc i8 %84 to i1
  br i1 %85, label %91, label %86

86:                                               ; preds = %62
  %87 = load %struct._store_page*, %struct._store_page** %10, align 8
  %88 = getelementptr inbounds %struct._store_page, %struct._store_page* %87, i32 0, i32 14
  %89 = load i8, i8* %88, align 8
  %90 = trunc i8 %89 to i1
  br i1 %90, label %91, label %95

91:                                               ; preds = %86, %62
  %92 = load %struct._store_page*, %struct._store_page** %10, align 8
  %93 = getelementptr inbounds %struct._store_page, %struct._store_page* %92, i32 0, i32 0
  %94 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %93) #14
  br label %177

95:                                               ; preds = %86
  %96 = load %struct._store_page*, %struct._store_page** %10, align 8
  %97 = getelementptr inbounds %struct._store_page, %struct._store_page* %96, i32 0, i32 1
  %98 = load i64, i64* %97, align 8
  %99 = icmp ugt i64 %98, 0
  br i1 %99, label %100, label %155

100:                                              ; preds = %95
  %101 = load %struct._store_page*, %struct._store_page** %10, align 8
  %102 = getelementptr inbounds %struct._store_page, %struct._store_page* %101, i32 0, i32 13
  %103 = load i8, i8* %102, align 1
  %104 = trunc i8 %103 to i1
  br i1 %104, label %155, label %105

105:                                              ; preds = %100
  %106 = load %struct._store_page*, %struct._store_page** %10, align 8
  %107 = getelementptr inbounds %struct._store_page, %struct._store_page* %106, i32 0, i32 4
  %108 = load i32, i32* %107, align 8
  %109 = zext i32 %108 to i64
  %110 = load %struct.extstore_page_data*, %struct.extstore_page_data** %5, align 8
  %111 = load %struct._store_page*, %struct._store_page** %10, align 8
  %112 = getelementptr inbounds %struct._store_page, %struct._store_page* %111, i32 0, i32 11
  %113 = load i16, i16* %112, align 4
  %114 = zext i16 %113 to i64
  %115 = getelementptr inbounds %struct.extstore_page_data, %struct.extstore_page_data* %110, i64 %114
  %116 = getelementptr inbounds %struct.extstore_page_data, %struct.extstore_page_data* %115, i32 0, i32 0
  store i64 %109, i64* %116, align 8
  %117 = load %struct._store_page*, %struct._store_page** %10, align 8
  %118 = getelementptr inbounds %struct._store_page, %struct._store_page* %117, i32 0, i32 2
  %119 = load i64, i64* %118, align 8
  %120 = load %struct.extstore_page_data*, %struct.extstore_page_data** %5, align 8
  %121 = load %struct._store_page*, %struct._store_page** %10, align 8
  %122 = getelementptr inbounds %struct._store_page, %struct._store_page* %121, i32 0, i32 11
  %123 = load i16, i16* %122, align 4
  %124 = zext i16 %123 to i64
  %125 = getelementptr inbounds %struct.extstore_page_data, %struct.extstore_page_data* %120, i64 %124
  %126 = getelementptr inbounds %struct.extstore_page_data, %struct.extstore_page_data* %125, i32 0, i32 1
  store i64 %119, i64* %126, align 8
  %127 = load %struct._store_page*, %struct._store_page** %10, align 8
  %128 = getelementptr inbounds %struct._store_page, %struct._store_page* %127, i32 0, i32 8
  %129 = load i32, i32* %128, align 8
  %130 = load %struct.extstore_page_data*, %struct.extstore_page_data** %5, align 8
  %131 = load %struct._store_page*, %struct._store_page** %10, align 8
  %132 = getelementptr inbounds %struct._store_page, %struct._store_page* %131, i32 0, i32 11
  %133 = load i16, i16* %132, align 4
  %134 = zext i16 %133 to i64
  %135 = getelementptr inbounds %struct.extstore_page_data, %struct.extstore_page_data* %130, i64 %134
  %136 = getelementptr inbounds %struct.extstore_page_data, %struct.extstore_page_data* %135, i32 0, i32 2
  store i32 %129, i32* %136, align 8
  %137 = load %struct._store_page*, %struct._store_page** %10, align 8
  %138 = getelementptr inbounds %struct._store_page, %struct._store_page* %137, i32 0, i32 9
  %139 = load i32, i32* %138, align 4
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %154

141:                                              ; preds = %105
  %142 = load %struct._store_page*, %struct._store_page** %10, align 8
  %143 = getelementptr inbounds %struct._store_page, %struct._store_page* %142, i32 0, i32 4
  %144 = load i32, i32* %143, align 8
  %145 = zext i32 %144 to i64
  %146 = load i64, i64* %9, align 8
  %147 = icmp ult i64 %145, %146
  br i1 %147, label %148, label %154

148:                                              ; preds = %141
  %149 = load %struct._store_page*, %struct._store_page** %10, align 8
  %150 = getelementptr inbounds %struct._store_page, %struct._store_page* %149, i32 0, i32 4
  %151 = load i32, i32* %150, align 8
  %152 = zext i32 %151 to i64
  store i64 %152, i64* %9, align 8
  %153 = load i32, i32* %6, align 4
  store i32 %153, i32* %8, align 4
  br label %154

154:                                              ; preds = %148, %141, %105
  br label %155

155:                                              ; preds = %154, %100, %95
  %156 = load %struct._store_page*, %struct._store_page** %10, align 8
  %157 = getelementptr inbounds %struct._store_page, %struct._store_page* %156, i32 0, i32 1
  %158 = load i64, i64* %157, align 8
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %165, label %160

160:                                              ; preds = %155
  %161 = load %struct._store_page*, %struct._store_page** %10, align 8
  %162 = getelementptr inbounds %struct._store_page, %struct._store_page* %161, i32 0, i32 13
  %163 = load i8, i8* %162, align 1
  %164 = trunc i8 %163 to i1
  br i1 %164, label %165, label %173

165:                                              ; preds = %160, %155
  %166 = load %struct._store_page*, %struct._store_page** %10, align 8
  %167 = getelementptr inbounds %struct._store_page, %struct._store_page* %166, i32 0, i32 5
  %168 = load i32, i32* %167, align 4
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %173

170:                                              ; preds = %165
  %171 = load %struct.store_engine*, %struct.store_engine** %4, align 8
  %172 = load %struct._store_page*, %struct._store_page** %10, align 8
  call void @_free_page(%struct.store_engine* %171, %struct._store_page* %172)
  store i8 0, i8* %7, align 1
  br label %173

173:                                              ; preds = %170, %165, %160
  %174 = load %struct._store_page*, %struct._store_page** %10, align 8
  %175 = getelementptr inbounds %struct._store_page, %struct._store_page* %174, i32 0, i32 0
  %176 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %175) #14
  br label %177

177:                                              ; preds = %173, %91
  %178 = load i32, i32* %6, align 4
  %179 = add nsw i32 %178, 1
  store i32 %179, i32* %6, align 4
  br label %56, !llvm.loop !186

180:                                              ; preds = %56
  %181 = load i8, i8* %7, align 1
  %182 = trunc i8 %181 to i1
  br i1 %182, label %183, label %242

183:                                              ; preds = %180
  %184 = load i64, i64* %9, align 8
  %185 = icmp ne i64 %184, -1
  br i1 %185, label %186, label %242

186:                                              ; preds = %183
  %187 = load %struct.store_engine*, %struct.store_engine** %4, align 8
  %188 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %187, i32 0, i32 1
  %189 = load %struct._store_page*, %struct._store_page** %188, align 8
  %190 = load i32, i32* %8, align 4
  %191 = zext i32 %190 to i64
  %192 = getelementptr inbounds %struct._store_page, %struct._store_page* %189, i64 %191
  store %struct._store_page* %192, %struct._store_page** %11, align 8
  %193 = load %struct._store_page*, %struct._store_page** %11, align 8
  %194 = getelementptr inbounds %struct._store_page, %struct._store_page* %193, i32 0, i32 0
  %195 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %194) #14
  %196 = load %struct._store_page*, %struct._store_page** %11, align 8
  %197 = getelementptr inbounds %struct._store_page, %struct._store_page* %196, i32 0, i32 13
  %198 = load i8, i8* %197, align 1
  %199 = trunc i8 %198 to i1
  br i1 %199, label %238, label %200

200:                                              ; preds = %186
  %201 = load %struct._store_page*, %struct._store_page** %11, align 8
  %202 = getelementptr inbounds %struct._store_page, %struct._store_page* %201, i32 0, i32 13
  store i8 1, i8* %202, align 1
  %203 = load %struct.store_engine*, %struct.store_engine** %4, align 8
  %204 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %203, i32 0, i32 18
  %205 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %204) #14
  %206 = load %struct.store_engine*, %struct.store_engine** %4, align 8
  %207 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %206, i32 0, i32 19
  %208 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %207, i32 0, i32 2
  %209 = load i64, i64* %208, align 8
  %210 = add i64 %209, 1
  store i64 %210, i64* %208, align 8
  %211 = load %struct._store_page*, %struct._store_page** %11, align 8
  %212 = getelementptr inbounds %struct._store_page, %struct._store_page* %211, i32 0, i32 1
  %213 = load i64, i64* %212, align 8
  %214 = load %struct.store_engine*, %struct.store_engine** %4, align 8
  %215 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %214, i32 0, i32 19
  %216 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %215, i32 0, i32 7
  %217 = load i64, i64* %216, align 8
  %218 = add i64 %217, %213
  store i64 %218, i64* %216, align 8
  %219 = load %struct._store_page*, %struct._store_page** %11, align 8
  %220 = getelementptr inbounds %struct._store_page, %struct._store_page* %219, i32 0, i32 2
  %221 = load i64, i64* %220, align 8
  %222 = load %struct.store_engine*, %struct.store_engine** %4, align 8
  %223 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %222, i32 0, i32 19
  %224 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %223, i32 0, i32 11
  %225 = load i64, i64* %224, align 8
  %226 = add i64 %225, %221
  store i64 %226, i64* %224, align 8
  %227 = load %struct.store_engine*, %struct.store_engine** %4, align 8
  %228 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %227, i32 0, i32 18
  %229 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %228) #14
  %230 = load %struct._store_page*, %struct._store_page** %11, align 8
  %231 = getelementptr inbounds %struct._store_page, %struct._store_page* %230, i32 0, i32 5
  %232 = load i32, i32* %231, align 4
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %234, label %237

234:                                              ; preds = %200
  %235 = load %struct.store_engine*, %struct.store_engine** %4, align 8
  %236 = load %struct._store_page*, %struct._store_page** %11, align 8
  call void @_free_page(%struct.store_engine* %235, %struct._store_page* %236)
  br label %237

237:                                              ; preds = %234, %200
  br label %238

238:                                              ; preds = %237, %186
  %239 = load %struct._store_page*, %struct._store_page** %11, align 8
  %240 = getelementptr inbounds %struct._store_page, %struct._store_page* %239, i32 0, i32 0
  %241 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %240) #14
  br label %242

242:                                              ; preds = %238, %183, %180
  %243 = load %struct.store_engine*, %struct.store_engine** %4, align 8
  %244 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %243, i32 0, i32 18
  %245 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %244) #14
  %246 = load %struct.store_engine*, %struct.store_engine** %4, align 8
  %247 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %246, i32 0, i32 19
  %248 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %247, i32 0, i32 17
  %249 = load %struct.extstore_page_data*, %struct.extstore_page_data** %248, align 8
  %250 = bitcast %struct.extstore_page_data* %249 to i8*
  %251 = load %struct.extstore_page_data*, %struct.extstore_page_data** %5, align 8
  %252 = bitcast %struct.extstore_page_data* %251 to i8*
  %253 = load %struct.store_engine*, %struct.store_engine** %4, align 8
  %254 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %253, i32 0, i32 13
  %255 = load i32, i32* %254, align 4
  %256 = zext i32 %255 to i64
  %257 = mul i64 24, %256
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %250, i8* align 8 %252, i64 %257, i1 false)
  %258 = load %struct.store_engine*, %struct.store_engine** %4, align 8
  %259 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %258, i32 0, i32 18
  %260 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %259) #14
  br label %26
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @extstore_run_maint(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.store_engine*, align 8
  store i8* %0, i8** %2, align 8
  %4 = load i8*, i8** %2, align 8
  %5 = bitcast i8* %4 to %struct.store_engine*
  store %struct.store_engine* %5, %struct.store_engine** %3, align 8
  %6 = load %struct.store_engine*, %struct.store_engine** %3, align 8
  %7 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %6, i32 0, i32 5
  %8 = load %struct.store_maint_thread*, %struct.store_maint_thread** %7, align 8
  %9 = getelementptr inbounds %struct.store_maint_thread, %struct.store_maint_thread* %8, i32 0, i32 1
  %10 = call i32 @pthread_cond_signal(%union.pthread_cond_t* %9) #14
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @_free_page(%struct.store_engine* %0, %struct._store_page* %1) #0 {
  %3 = alloca %struct.store_engine*, align 8
  %4 = alloca %struct._store_page*, align 8
  %5 = alloca %struct._store_page*, align 8
  %6 = alloca %struct._store_page*, align 8
  store %struct.store_engine* %0, %struct.store_engine** %3, align 8
  store %struct._store_page* %1, %struct._store_page** %4, align 8
  store %struct._store_page* null, %struct._store_page** %5, align 8
  store %struct._store_page* null, %struct._store_page** %6, align 8
  %7 = load %struct.store_engine*, %struct.store_engine** %3, align 8
  %8 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %7, i32 0, i32 18
  %9 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %8) #14
  %10 = load %struct._store_page*, %struct._store_page** %4, align 8
  %11 = getelementptr inbounds %struct._store_page, %struct._store_page* %10, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = load %struct.store_engine*, %struct.store_engine** %3, align 8
  %14 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %13, i32 0, i32 19
  %15 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %14, i32 0, i32 10
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %16, %12
  store i64 %17, i64* %15, align 8
  %18 = load %struct._store_page*, %struct._store_page** %4, align 8
  %19 = getelementptr inbounds %struct._store_page, %struct._store_page* %18, i32 0, i32 2
  %20 = load i64, i64* %19, align 8
  %21 = load %struct.store_engine*, %struct.store_engine** %3, align 8
  %22 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %21, i32 0, i32 19
  %23 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %22, i32 0, i32 14
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %24, %20
  store i64 %25, i64* %23, align 8
  %26 = load %struct.store_engine*, %struct.store_engine** %3, align 8
  %27 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %26, i32 0, i32 19
  %28 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %27, i32 0, i32 3
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %28, align 8
  %31 = load %struct.store_engine*, %struct.store_engine** %3, align 8
  %32 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %31, i32 0, i32 18
  %33 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %32) #14
  %34 = load %struct.store_engine*, %struct.store_engine** %3, align 8
  %35 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %34, i32 0, i32 0
  %36 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %35) #14
  %37 = load %struct.store_engine*, %struct.store_engine** %3, align 8
  %38 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %37, i32 0, i32 7
  %39 = load %struct._store_page**, %struct._store_page*** %38, align 8
  %40 = load %struct._store_page*, %struct._store_page** %4, align 8
  %41 = getelementptr inbounds %struct._store_page, %struct._store_page* %40, i32 0, i32 8
  %42 = load i32, i32* %41, align 8
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds %struct._store_page*, %struct._store_page** %39, i64 %43
  %45 = load %struct._store_page*, %struct._store_page** %44, align 8
  store %struct._store_page* %45, %struct._store_page** %5, align 8
  br label %46

46:                                               ; preds = %77, %2
  %47 = load %struct._store_page*, %struct._store_page** %5, align 8
  %48 = icmp ne %struct._store_page* %47, null
  br i1 %48, label %49, label %82

49:                                               ; preds = %46
  %50 = load %struct._store_page*, %struct._store_page** %5, align 8
  %51 = load %struct._store_page*, %struct._store_page** %4, align 8
  %52 = icmp eq %struct._store_page* %50, %51
  br i1 %52, label %53, label %77

53:                                               ; preds = %49
  %54 = load %struct._store_page*, %struct._store_page** %6, align 8
  %55 = icmp ne %struct._store_page* %54, null
  br i1 %55, label %56, label %62

56:                                               ; preds = %53
  %57 = load %struct._store_page*, %struct._store_page** %5, align 8
  %58 = getelementptr inbounds %struct._store_page, %struct._store_page* %57, i32 0, i32 16
  %59 = load %struct._store_page*, %struct._store_page** %58, align 8
  %60 = load %struct._store_page*, %struct._store_page** %6, align 8
  %61 = getelementptr inbounds %struct._store_page, %struct._store_page* %60, i32 0, i32 16
  store %struct._store_page* %59, %struct._store_page** %61, align 8
  br label %74

62:                                               ; preds = %53
  %63 = load %struct._store_page*, %struct._store_page** %5, align 8
  %64 = getelementptr inbounds %struct._store_page, %struct._store_page* %63, i32 0, i32 16
  %65 = load %struct._store_page*, %struct._store_page** %64, align 8
  %66 = load %struct.store_engine*, %struct.store_engine** %3, align 8
  %67 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %66, i32 0, i32 7
  %68 = load %struct._store_page**, %struct._store_page*** %67, align 8
  %69 = load %struct._store_page*, %struct._store_page** %4, align 8
  %70 = getelementptr inbounds %struct._store_page, %struct._store_page* %69, i32 0, i32 8
  %71 = load i32, i32* %70, align 8
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %struct._store_page*, %struct._store_page** %68, i64 %72
  store %struct._store_page* %65, %struct._store_page** %73, align 8
  br label %74

74:                                               ; preds = %62, %56
  %75 = load %struct._store_page*, %struct._store_page** %5, align 8
  %76 = getelementptr inbounds %struct._store_page, %struct._store_page* %75, i32 0, i32 16
  store %struct._store_page* null, %struct._store_page** %76, align 8
  br label %82

77:                                               ; preds = %49
  %78 = load %struct._store_page*, %struct._store_page** %5, align 8
  store %struct._store_page* %78, %struct._store_page** %6, align 8
  %79 = load %struct._store_page*, %struct._store_page** %5, align 8
  %80 = getelementptr inbounds %struct._store_page, %struct._store_page* %79, i32 0, i32 16
  %81 = load %struct._store_page*, %struct._store_page** %80, align 8
  store %struct._store_page* %81, %struct._store_page** %5, align 8
  br label %46, !llvm.loop !187

82:                                               ; preds = %74, %46
  %83 = load %struct._store_page*, %struct._store_page** %4, align 8
  %84 = getelementptr inbounds %struct._store_page, %struct._store_page* %83, i32 0, i32 4
  store i32 0, i32* %84, align 8
  %85 = load %struct._store_page*, %struct._store_page** %4, align 8
  %86 = getelementptr inbounds %struct._store_page, %struct._store_page* %85, i32 0, i32 1
  store i64 0, i64* %86, align 8
  %87 = load %struct._store_page*, %struct._store_page** %4, align 8
  %88 = getelementptr inbounds %struct._store_page, %struct._store_page* %87, i32 0, i32 2
  store i64 0, i64* %88, align 8
  %89 = load %struct._store_page*, %struct._store_page** %4, align 8
  %90 = getelementptr inbounds %struct._store_page, %struct._store_page* %89, i32 0, i32 6
  store i32 0, i32* %90, align 8
  %91 = load %struct._store_page*, %struct._store_page** %4, align 8
  %92 = getelementptr inbounds %struct._store_page, %struct._store_page* %91, i32 0, i32 7
  store i32 0, i32* %92, align 4
  %93 = load %struct._store_page*, %struct._store_page** %4, align 8
  %94 = getelementptr inbounds %struct._store_page, %struct._store_page* %93, i32 0, i32 8
  store i32 0, i32* %94, align 8
  %95 = load %struct._store_page*, %struct._store_page** %4, align 8
  %96 = getelementptr inbounds %struct._store_page, %struct._store_page* %95, i32 0, i32 12
  store i8 0, i8* %96, align 2
  %97 = load %struct._store_page*, %struct._store_page** %4, align 8
  %98 = getelementptr inbounds %struct._store_page, %struct._store_page* %97, i32 0, i32 13
  store i8 0, i8* %98, align 1
  %99 = load %struct._store_page*, %struct._store_page** %4, align 8
  %100 = getelementptr inbounds %struct._store_page, %struct._store_page* %99, i32 0, i32 14
  store i8 1, i8* %100, align 8
  %101 = load %struct._store_page*, %struct._store_page** %4, align 8
  %102 = getelementptr inbounds %struct._store_page, %struct._store_page* %101, i32 0, i32 9
  %103 = load i32, i32* %102, align 4
  %104 = icmp ne i32 %103, 0
  br i1 %104, label %105, label %126

105:                                              ; preds = %82
  %106 = load %struct.store_engine*, %struct.store_engine** %3, align 8
  %107 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %106, i32 0, i32 8
  %108 = load %struct._store_page**, %struct._store_page*** %107, align 8
  %109 = load %struct._store_page*, %struct._store_page** %4, align 8
  %110 = getelementptr inbounds %struct._store_page, %struct._store_page* %109, i32 0, i32 9
  %111 = load i32, i32* %110, align 4
  %112 = zext i32 %111 to i64
  %113 = getelementptr inbounds %struct._store_page*, %struct._store_page** %108, i64 %112
  %114 = load %struct._store_page*, %struct._store_page** %113, align 8
  %115 = load %struct._store_page*, %struct._store_page** %4, align 8
  %116 = getelementptr inbounds %struct._store_page, %struct._store_page* %115, i32 0, i32 16
  store %struct._store_page* %114, %struct._store_page** %116, align 8
  %117 = load %struct._store_page*, %struct._store_page** %4, align 8
  %118 = load %struct.store_engine*, %struct.store_engine** %3, align 8
  %119 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %118, i32 0, i32 8
  %120 = load %struct._store_page**, %struct._store_page*** %119, align 8
  %121 = load %struct._store_page*, %struct._store_page** %4, align 8
  %122 = getelementptr inbounds %struct._store_page, %struct._store_page* %121, i32 0, i32 9
  %123 = load i32, i32* %122, align 4
  %124 = zext i32 %123 to i64
  %125 = getelementptr inbounds %struct._store_page*, %struct._store_page** %120, i64 %124
  store %struct._store_page* %117, %struct._store_page** %125, align 8
  br label %135

126:                                              ; preds = %82
  %127 = load %struct.store_engine*, %struct.store_engine** %3, align 8
  %128 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %127, i32 0, i32 6
  %129 = load %struct._store_page*, %struct._store_page** %128, align 8
  %130 = load %struct._store_page*, %struct._store_page** %4, align 8
  %131 = getelementptr inbounds %struct._store_page, %struct._store_page* %130, i32 0, i32 16
  store %struct._store_page* %129, %struct._store_page** %131, align 8
  %132 = load %struct._store_page*, %struct._store_page** %4, align 8
  %133 = load %struct.store_engine*, %struct.store_engine** %3, align 8
  %134 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %133, i32 0, i32 6
  store %struct._store_page* %132, %struct._store_page** %134, align 8
  br label %135

135:                                              ; preds = %126, %105
  %136 = load %struct.store_engine*, %struct.store_engine** %3, align 8
  %137 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %136, i32 0, i32 14
  %138 = load i32, i32* %137, align 8
  %139 = add i32 %138, 1
  store i32 %139, i32* %137, align 8
  %140 = load %struct.store_engine*, %struct.store_engine** %3, align 8
  %141 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %140, i32 0, i32 0
  %142 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %141) #14
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @_read_from_wbuf(%struct._store_page* %0, %struct._obj_io* %1) #0 {
  %3 = alloca %struct._store_page*, align 8
  %4 = alloca %struct._obj_io*, align 8
  %5 = alloca %struct.__store_wbuf*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.iovec*, align 8
  store %struct._store_page* %0, %struct._store_page** %3, align 8
  store %struct._obj_io* %1, %struct._obj_io** %4, align 8
  %9 = load %struct._store_page*, %struct._store_page** %3, align 8
  %10 = getelementptr inbounds %struct._store_page, %struct._store_page* %9, i32 0, i32 15
  %11 = load %struct.__store_wbuf*, %struct.__store_wbuf** %10, align 8
  store %struct.__store_wbuf* %11, %struct.__store_wbuf** %5, align 8
  %12 = load %struct._obj_io*, %struct._obj_io** %4, align 8
  %13 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %12, i32 0, i32 3
  %14 = load %struct.iovec*, %struct.iovec** %13, align 8
  %15 = icmp eq %struct.iovec* %14, null
  br i1 %15, label %16, label %36

16:                                               ; preds = %2
  %17 = load %struct._obj_io*, %struct._obj_io** %4, align 8
  %18 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %17, i32 0, i32 2
  %19 = load i8*, i8** %18, align 8
  %20 = load %struct.__store_wbuf*, %struct.__store_wbuf** %5, align 8
  %21 = getelementptr inbounds %struct.__store_wbuf, %struct.__store_wbuf* %20, i32 0, i32 1
  %22 = load i8*, i8** %21, align 8
  %23 = load %struct._obj_io*, %struct._obj_io** %4, align 8
  %24 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %23, i32 0, i32 7
  %25 = load i32, i32* %24, align 4
  %26 = load %struct.__store_wbuf*, %struct.__store_wbuf** %5, align 8
  %27 = getelementptr inbounds %struct.__store_wbuf, %struct.__store_wbuf* %26, i32 0, i32 5
  %28 = load i32, i32* %27, align 8
  %29 = sub i32 %25, %28
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds i8, i8* %22, i64 %30
  %32 = load %struct._obj_io*, %struct._obj_io** %4, align 8
  %33 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %32, i32 0, i32 6
  %34 = load i32, i32* %33, align 8
  %35 = zext i32 %34 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %19, i8* align 1 %31, i64 %35, i1 false)
  br label %80

36:                                               ; preds = %2
  %37 = load %struct._obj_io*, %struct._obj_io** %4, align 8
  %38 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %37, i32 0, i32 7
  %39 = load i32, i32* %38, align 4
  %40 = load %struct.__store_wbuf*, %struct.__store_wbuf** %5, align 8
  %41 = getelementptr inbounds %struct.__store_wbuf, %struct.__store_wbuf* %40, i32 0, i32 5
  %42 = load i32, i32* %41, align 8
  %43 = sub i32 %39, %42
  store i32 %43, i32* %7, align 4
  store i32 0, i32* %6, align 4
  br label %44

44:                                               ; preds = %76, %36
  %45 = load i32, i32* %6, align 4
  %46 = load %struct._obj_io*, %struct._obj_io** %4, align 8
  %47 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %46, i32 0, i32 4
  %48 = load i32, i32* %47, align 8
  %49 = icmp ult i32 %45, %48
  br i1 %49, label %50, label %79

50:                                               ; preds = %44
  %51 = load %struct._obj_io*, %struct._obj_io** %4, align 8
  %52 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %51, i32 0, i32 3
  %53 = load %struct.iovec*, %struct.iovec** %52, align 8
  %54 = load i32, i32* %6, align 4
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds %struct.iovec, %struct.iovec* %53, i64 %55
  store %struct.iovec* %56, %struct.iovec** %8, align 8
  %57 = load %struct.iovec*, %struct.iovec** %8, align 8
  %58 = getelementptr inbounds %struct.iovec, %struct.iovec* %57, i32 0, i32 0
  %59 = load i8*, i8** %58, align 8
  %60 = load %struct.__store_wbuf*, %struct.__store_wbuf** %5, align 8
  %61 = getelementptr inbounds %struct.__store_wbuf, %struct.__store_wbuf* %60, i32 0, i32 1
  %62 = load i8*, i8** %61, align 8
  %63 = load i32, i32* %7, align 4
  %64 = zext i32 %63 to i64
  %65 = getelementptr inbounds i8, i8* %62, i64 %64
  %66 = load %struct.iovec*, %struct.iovec** %8, align 8
  %67 = getelementptr inbounds %struct.iovec, %struct.iovec* %66, i32 0, i32 1
  %68 = load i64, i64* %67, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %59, i8* align 1 %65, i64 %68, i1 false)
  %69 = load %struct.iovec*, %struct.iovec** %8, align 8
  %70 = getelementptr inbounds %struct.iovec, %struct.iovec* %69, i32 0, i32 1
  %71 = load i64, i64* %70, align 8
  %72 = load i32, i32* %7, align 4
  %73 = zext i32 %72 to i64
  %74 = add i64 %73, %71
  %75 = trunc i64 %74 to i32
  store i32 %75, i32* %7, align 4
  br label %76

76:                                               ; preds = %50
  %77 = load i32, i32* %6, align 4
  %78 = add nsw i32 %77, 1
  store i32 %78, i32* %6, align 4
  br label %44, !llvm.loop !188

79:                                               ; preds = %44
  br label %80

80:                                               ; preds = %79, %16
  %81 = load %struct._obj_io*, %struct._obj_io** %4, align 8
  %82 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %81, i32 0, i32 6
  %83 = load i32, i32* %82, align 8
  ret i32 %83
}

declare dso_local i64 @pread(i32, i8*, i64, i64) #3

declare dso_local i64 @preadv(i32, %struct.iovec*, i32, i64) #3

declare dso_local i64 @pwrite(i32, i8*, i64, i64) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @extstore_write_request(i8* %0, i32 %1, i32 %2, %struct._obj_io* %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct._obj_io*, align 8
  %10 = alloca %struct.store_engine*, align 8
  %11 = alloca %struct._store_page*, align 8
  %12 = alloca i32, align 4
  store i8* %0, i8** %6, align 8
  store i32 %1, i32* %7, align 4
  store i32 %2, i32* %8, align 4
  store %struct._obj_io* %3, %struct._obj_io** %9, align 8
  %13 = load i8*, i8** %6, align 8
  %14 = bitcast i8* %13 to %struct.store_engine*
  store %struct.store_engine* %14, %struct.store_engine** %10, align 8
  store i32 -1, i32* %12, align 4
  %15 = load i32, i32* %7, align 4
  %16 = load %struct.store_engine*, %struct.store_engine** %10, align 8
  %17 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %16, i32 0, i32 15
  %18 = load i32, i32* %17, align 4
  %19 = icmp uge i32 %15, %18
  br i1 %19, label %20, label %22

20:                                               ; preds = %4
  %21 = load i32, i32* %12, align 4
  store i32 %21, i32* %5, align 4
  br label %178

22:                                               ; preds = %4
  %23 = load %struct.store_engine*, %struct.store_engine** %10, align 8
  %24 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %23, i32 0, i32 0
  %25 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %24) #14
  %26 = load %struct.store_engine*, %struct.store_engine** %10, align 8
  %27 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %26, i32 0, i32 7
  %28 = load %struct._store_page**, %struct._store_page*** %27, align 8
  %29 = load i32, i32* %7, align 4
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds %struct._store_page*, %struct._store_page** %28, i64 %30
  %32 = load %struct._store_page*, %struct._store_page** %31, align 8
  store %struct._store_page* %32, %struct._store_page** %11, align 8
  %33 = load %struct._store_page*, %struct._store_page** %11, align 8
  %34 = icmp ne %struct._store_page* %33, null
  br i1 %34, label %40, label %35

35:                                               ; preds = %22
  %36 = load %struct.store_engine*, %struct.store_engine** %10, align 8
  %37 = load i32, i32* %7, align 4
  %38 = load i32, i32* %8, align 4
  %39 = call %struct._store_page* @_allocate_page(%struct.store_engine* %36, i32 %37, i32 %38)
  store %struct._store_page* %39, %struct._store_page** %11, align 8
  br label %40

40:                                               ; preds = %35, %22
  %41 = load %struct.store_engine*, %struct.store_engine** %10, align 8
  %42 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %41, i32 0, i32 0
  %43 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %42) #14
  %44 = load %struct._store_page*, %struct._store_page** %11, align 8
  %45 = icmp ne %struct._store_page* %44, null
  br i1 %45, label %48, label %46

46:                                               ; preds = %40
  %47 = load i32, i32* %12, align 4
  store i32 %47, i32* %5, align 4
  br label %178

48:                                               ; preds = %40
  %49 = load %struct._store_page*, %struct._store_page** %11, align 8
  %50 = getelementptr inbounds %struct._store_page, %struct._store_page* %49, i32 0, i32 0
  %51 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %50) #14
  %52 = load %struct._store_page*, %struct._store_page** %11, align 8
  %53 = getelementptr inbounds %struct._store_page, %struct._store_page* %52, i32 0, i32 12
  %54 = load i8, i8* %53, align 2
  %55 = trunc i8 %54 to i1
  br i1 %55, label %56, label %77

56:                                               ; preds = %48
  %57 = load %struct._store_page*, %struct._store_page** %11, align 8
  %58 = getelementptr inbounds %struct._store_page, %struct._store_page* %57, i32 0, i32 15
  %59 = load %struct.__store_wbuf*, %struct.__store_wbuf** %58, align 8
  %60 = icmp ne %struct.__store_wbuf* %59, null
  br i1 %60, label %61, label %68

61:                                               ; preds = %56
  %62 = load %struct._store_page*, %struct._store_page** %11, align 8
  %63 = getelementptr inbounds %struct._store_page, %struct._store_page* %62, i32 0, i32 15
  %64 = load %struct.__store_wbuf*, %struct.__store_wbuf** %63, align 8
  %65 = getelementptr inbounds %struct.__store_wbuf, %struct.__store_wbuf* %64, i32 0, i32 6
  %66 = load i8, i8* %65, align 4
  %67 = trunc i8 %66 to i1
  br i1 %67, label %68, label %92

68:                                               ; preds = %61, %56
  %69 = load %struct._store_page*, %struct._store_page** %11, align 8
  %70 = getelementptr inbounds %struct._store_page, %struct._store_page* %69, i32 0, i32 6
  %71 = load i32, i32* %70, align 8
  %72 = zext i32 %71 to i64
  %73 = load %struct.store_engine*, %struct.store_engine** %10, align 8
  %74 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %73, i32 0, i32 9
  %75 = load i64, i64* %74, align 8
  %76 = icmp uge i64 %72, %75
  br i1 %76, label %77, label %92

77:                                               ; preds = %68, %48
  %78 = load %struct._store_page*, %struct._store_page** %11, align 8
  %79 = getelementptr inbounds %struct._store_page, %struct._store_page* %78, i32 0, i32 0
  %80 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %79) #14
  %81 = load %struct.store_engine*, %struct.store_engine** %10, align 8
  %82 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %81, i32 0, i32 0
  %83 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %82) #14
  %84 = load %struct.store_engine*, %struct.store_engine** %10, align 8
  %85 = load i32, i32* %7, align 4
  %86 = load i32, i32* %8, align 4
  %87 = call %struct._store_page* @_allocate_page(%struct.store_engine* %84, i32 %85, i32 %86)
  %88 = load %struct.store_engine*, %struct.store_engine** %10, align 8
  %89 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %88, i32 0, i32 0
  %90 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %89) #14
  %91 = load i32, i32* %12, align 4
  store i32 %91, i32* %5, align 4
  br label %178

92:                                               ; preds = %68, %61
  %93 = load %struct._store_page*, %struct._store_page** %11, align 8
  %94 = getelementptr inbounds %struct._store_page, %struct._store_page* %93, i32 0, i32 15
  %95 = load %struct.__store_wbuf*, %struct.__store_wbuf** %94, align 8
  %96 = icmp ne %struct.__store_wbuf* %95, null
  br i1 %96, label %97, label %121

97:                                               ; preds = %92
  %98 = load %struct._store_page*, %struct._store_page** %11, align 8
  %99 = getelementptr inbounds %struct._store_page, %struct._store_page* %98, i32 0, i32 15
  %100 = load %struct.__store_wbuf*, %struct.__store_wbuf** %99, align 8
  %101 = getelementptr inbounds %struct.__store_wbuf, %struct.__store_wbuf* %100, i32 0, i32 3
  %102 = load i32, i32* %101, align 8
  %103 = load %struct._obj_io*, %struct._obj_io** %9, align 8
  %104 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %103, i32 0, i32 6
  %105 = load i32, i32* %104, align 8
  %106 = icmp ult i32 %102, %105
  br i1 %106, label %107, label %121

107:                                              ; preds = %97
  %108 = load %struct._store_page*, %struct._store_page** %11, align 8
  %109 = getelementptr inbounds %struct._store_page, %struct._store_page* %108, i32 0, i32 15
  %110 = load %struct.__store_wbuf*, %struct.__store_wbuf** %109, align 8
  %111 = getelementptr inbounds %struct.__store_wbuf, %struct.__store_wbuf* %110, i32 0, i32 6
  %112 = load i8, i8* %111, align 4
  %113 = trunc i8 %112 to i1
  br i1 %113, label %121, label %114

114:                                              ; preds = %107
  %115 = load %struct.store_engine*, %struct.store_engine** %10, align 8
  %116 = load %struct._store_page*, %struct._store_page** %11, align 8
  call void @_submit_wbuf(%struct.store_engine* %115, %struct._store_page* %116)
  %117 = load %struct._store_page*, %struct._store_page** %11, align 8
  %118 = getelementptr inbounds %struct._store_page, %struct._store_page* %117, i32 0, i32 15
  %119 = load %struct.__store_wbuf*, %struct.__store_wbuf** %118, align 8
  %120 = getelementptr inbounds %struct.__store_wbuf, %struct.__store_wbuf* %119, i32 0, i32 6
  store i8 1, i8* %120, align 4
  br label %121

121:                                              ; preds = %114, %107, %97, %92
  %122 = load %struct._store_page*, %struct._store_page** %11, align 8
  %123 = getelementptr inbounds %struct._store_page, %struct._store_page* %122, i32 0, i32 15
  %124 = load %struct.__store_wbuf*, %struct.__store_wbuf** %123, align 8
  %125 = icmp ne %struct.__store_wbuf* %124, null
  br i1 %125, label %138, label %126

126:                                              ; preds = %121
  %127 = load %struct._store_page*, %struct._store_page** %11, align 8
  %128 = getelementptr inbounds %struct._store_page, %struct._store_page* %127, i32 0, i32 6
  %129 = load i32, i32* %128, align 8
  %130 = zext i32 %129 to i64
  %131 = load %struct.store_engine*, %struct.store_engine** %10, align 8
  %132 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %131, i32 0, i32 9
  %133 = load i64, i64* %132, align 8
  %134 = icmp ult i64 %130, %133
  br i1 %134, label %135, label %138

135:                                              ; preds = %126
  %136 = load %struct.store_engine*, %struct.store_engine** %10, align 8
  %137 = load %struct._store_page*, %struct._store_page** %11, align 8
  call void @_allocate_wbuf(%struct.store_engine* %136, %struct._store_page* %137)
  br label %138

138:                                              ; preds = %135, %126, %121
  %139 = load %struct._store_page*, %struct._store_page** %11, align 8
  %140 = getelementptr inbounds %struct._store_page, %struct._store_page* %139, i32 0, i32 15
  %141 = load %struct.__store_wbuf*, %struct.__store_wbuf** %140, align 8
  %142 = icmp ne %struct.__store_wbuf* %141, null
  br i1 %142, label %143, label %173

143:                                              ; preds = %138
  %144 = load %struct._store_page*, %struct._store_page** %11, align 8
  %145 = getelementptr inbounds %struct._store_page, %struct._store_page* %144, i32 0, i32 15
  %146 = load %struct.__store_wbuf*, %struct.__store_wbuf** %145, align 8
  %147 = getelementptr inbounds %struct.__store_wbuf, %struct.__store_wbuf* %146, i32 0, i32 6
  %148 = load i8, i8* %147, align 4
  %149 = trunc i8 %148 to i1
  br i1 %149, label %173, label %150

150:                                              ; preds = %143
  %151 = load %struct._store_page*, %struct._store_page** %11, align 8
  %152 = getelementptr inbounds %struct._store_page, %struct._store_page* %151, i32 0, i32 15
  %153 = load %struct.__store_wbuf*, %struct.__store_wbuf** %152, align 8
  %154 = getelementptr inbounds %struct.__store_wbuf, %struct.__store_wbuf* %153, i32 0, i32 3
  %155 = load i32, i32* %154, align 8
  %156 = load %struct._obj_io*, %struct._obj_io** %9, align 8
  %157 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %156, i32 0, i32 6
  %158 = load i32, i32* %157, align 8
  %159 = icmp uge i32 %155, %158
  br i1 %159, label %160, label %173

160:                                              ; preds = %150
  %161 = load %struct._store_page*, %struct._store_page** %11, align 8
  %162 = getelementptr inbounds %struct._store_page, %struct._store_page* %161, i32 0, i32 15
  %163 = load %struct.__store_wbuf*, %struct.__store_wbuf** %162, align 8
  %164 = getelementptr inbounds %struct.__store_wbuf, %struct.__store_wbuf* %163, i32 0, i32 2
  %165 = load i8*, i8** %164, align 8
  %166 = load %struct._obj_io*, %struct._obj_io** %9, align 8
  %167 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %166, i32 0, i32 2
  store i8* %165, i8** %167, align 8
  %168 = load %struct._store_page*, %struct._store_page** %11, align 8
  %169 = getelementptr inbounds %struct._store_page, %struct._store_page* %168, i32 0, i32 11
  %170 = load i16, i16* %169, align 4
  %171 = load %struct._obj_io*, %struct._obj_io** %9, align 8
  %172 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %171, i32 0, i32 8
  store i16 %170, i16* %172, align 8
  store i32 0, i32* %5, align 4
  br label %178

173:                                              ; preds = %150, %143, %138
  %174 = load %struct._store_page*, %struct._store_page** %11, align 8
  %175 = getelementptr inbounds %struct._store_page, %struct._store_page* %174, i32 0, i32 0
  %176 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %175) #14
  %177 = load i32, i32* %12, align 4
  store i32 %177, i32* %5, align 4
  br label %178

178:                                              ; preds = %173, %160, %77, %46, %20
  %179 = load i32, i32* %5, align 4
  ret i32 %179
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct._store_page* @_allocate_page(%struct.store_engine* %0, i32 %1, i32 %2) #0 {
  %4 = alloca %struct.store_engine*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct._store_page*, align 8
  store %struct.store_engine* %0, %struct.store_engine** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  store %struct._store_page* null, %struct._store_page** %7, align 8
  %8 = load i32, i32* %6, align 4
  %9 = icmp ne i32 %8, 0
  br i1 %9, label %10, label %36

10:                                               ; preds = %3
  %11 = load %struct.store_engine*, %struct.store_engine** %4, align 8
  %12 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %11, i32 0, i32 8
  %13 = load %struct._store_page**, %struct._store_page*** %12, align 8
  %14 = load i32, i32* %6, align 4
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %struct._store_page*, %struct._store_page** %13, i64 %15
  %17 = load %struct._store_page*, %struct._store_page** %16, align 8
  %18 = icmp ne %struct._store_page* %17, null
  br i1 %18, label %19, label %36

19:                                               ; preds = %10
  %20 = load %struct.store_engine*, %struct.store_engine** %4, align 8
  %21 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %20, i32 0, i32 8
  %22 = load %struct._store_page**, %struct._store_page*** %21, align 8
  %23 = load i32, i32* %6, align 4
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds %struct._store_page*, %struct._store_page** %22, i64 %24
  %26 = load %struct._store_page*, %struct._store_page** %25, align 8
  store %struct._store_page* %26, %struct._store_page** %7, align 8
  %27 = load %struct._store_page*, %struct._store_page** %7, align 8
  %28 = getelementptr inbounds %struct._store_page, %struct._store_page* %27, i32 0, i32 16
  %29 = load %struct._store_page*, %struct._store_page** %28, align 8
  %30 = load %struct.store_engine*, %struct.store_engine** %4, align 8
  %31 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %30, i32 0, i32 8
  %32 = load %struct._store_page**, %struct._store_page*** %31, align 8
  %33 = load i32, i32* %6, align 4
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds %struct._store_page*, %struct._store_page** %32, i64 %34
  store %struct._store_page* %29, %struct._store_page** %35, align 8
  br label %36

36:                                               ; preds = %19, %10, %3
  %37 = load %struct._store_page*, %struct._store_page** %7, align 8
  %38 = icmp eq %struct._store_page* %37, null
  br i1 %38, label %39, label %53

39:                                               ; preds = %36
  %40 = load %struct.store_engine*, %struct.store_engine** %4, align 8
  %41 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %40, i32 0, i32 6
  %42 = load %struct._store_page*, %struct._store_page** %41, align 8
  %43 = icmp ne %struct._store_page* %42, null
  br i1 %43, label %44, label %53

44:                                               ; preds = %39
  %45 = load %struct.store_engine*, %struct.store_engine** %4, align 8
  %46 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %45, i32 0, i32 6
  %47 = load %struct._store_page*, %struct._store_page** %46, align 8
  store %struct._store_page* %47, %struct._store_page** %7, align 8
  %48 = load %struct._store_page*, %struct._store_page** %7, align 8
  %49 = getelementptr inbounds %struct._store_page, %struct._store_page* %48, i32 0, i32 16
  %50 = load %struct._store_page*, %struct._store_page** %49, align 8
  %51 = load %struct.store_engine*, %struct.store_engine** %4, align 8
  %52 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %51, i32 0, i32 6
  store %struct._store_page* %50, %struct._store_page** %52, align 8
  br label %53

53:                                               ; preds = %44, %39, %36
  %54 = load %struct.store_engine*, %struct.store_engine** %4, align 8
  %55 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %54, i32 0, i32 14
  %56 = load i32, i32* %55, align 8
  %57 = icmp ugt i32 %56, 0
  br i1 %57, label %58, label %107

58:                                               ; preds = %53
  %59 = load %struct._store_page*, %struct._store_page** %7, align 8
  %60 = icmp ne %struct._store_page* %59, null
  br i1 %60, label %61, label %107

61:                                               ; preds = %58
  %62 = load %struct.store_engine*, %struct.store_engine** %4, align 8
  %63 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %62, i32 0, i32 7
  %64 = load %struct._store_page**, %struct._store_page*** %63, align 8
  %65 = load i32, i32* %5, align 4
  %66 = zext i32 %65 to i64
  %67 = getelementptr inbounds %struct._store_page*, %struct._store_page** %64, i64 %66
  %68 = load %struct._store_page*, %struct._store_page** %67, align 8
  %69 = load %struct._store_page*, %struct._store_page** %7, align 8
  %70 = getelementptr inbounds %struct._store_page, %struct._store_page* %69, i32 0, i32 16
  store %struct._store_page* %68, %struct._store_page** %70, align 8
  %71 = load %struct._store_page*, %struct._store_page** %7, align 8
  %72 = load %struct.store_engine*, %struct.store_engine** %4, align 8
  %73 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %72, i32 0, i32 7
  %74 = load %struct._store_page**, %struct._store_page*** %73, align 8
  %75 = load i32, i32* %5, align 4
  %76 = zext i32 %75 to i64
  %77 = getelementptr inbounds %struct._store_page*, %struct._store_page** %74, i64 %76
  store %struct._store_page* %71, %struct._store_page** %77, align 8
  %78 = load %struct._store_page*, %struct._store_page** %7, align 8
  %79 = getelementptr inbounds %struct._store_page, %struct._store_page* %78, i32 0, i32 12
  store i8 1, i8* %79, align 2
  %80 = load %struct._store_page*, %struct._store_page** %7, align 8
  %81 = getelementptr inbounds %struct._store_page, %struct._store_page* %80, i32 0, i32 14
  store i8 0, i8* %81, align 8
  %82 = load %struct._store_page*, %struct._store_page** %7, align 8
  %83 = getelementptr inbounds %struct._store_page, %struct._store_page* %82, i32 0, i32 13
  store i8 0, i8* %83, align 1
  %84 = load %struct.store_engine*, %struct.store_engine** %4, align 8
  %85 = call i64 @_next_version(%struct.store_engine* %84)
  %86 = trunc i64 %85 to i32
  %87 = load %struct._store_page*, %struct._store_page** %7, align 8
  %88 = getelementptr inbounds %struct._store_page, %struct._store_page* %87, i32 0, i32 4
  store i32 %86, i32* %88, align 8
  %89 = load i32, i32* %5, align 4
  %90 = load %struct._store_page*, %struct._store_page** %7, align 8
  %91 = getelementptr inbounds %struct._store_page, %struct._store_page* %90, i32 0, i32 8
  store i32 %89, i32* %91, align 8
  %92 = load %struct.store_engine*, %struct.store_engine** %4, align 8
  %93 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %92, i32 0, i32 14
  %94 = load i32, i32* %93, align 8
  %95 = add i32 %94, -1
  store i32 %95, i32* %93, align 8
  %96 = load %struct.store_engine*, %struct.store_engine** %4, align 8
  %97 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %96, i32 0, i32 18
  %98 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %97) #14
  %99 = load %struct.store_engine*, %struct.store_engine** %4, align 8
  %100 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %99, i32 0, i32 19
  %101 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %100, i32 0, i32 0
  %102 = load i64, i64* %101, align 8
  %103 = add i64 %102, 1
  store i64 %103, i64* %101, align 8
  %104 = load %struct.store_engine*, %struct.store_engine** %4, align 8
  %105 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %104, i32 0, i32 18
  %106 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %105) #14
  br label %110

107:                                              ; preds = %58, %53
  %108 = load %struct.store_engine*, %struct.store_engine** %4, align 8
  %109 = bitcast %struct.store_engine* %108 to i8*
  call void @extstore_run_maint(i8* %109)
  br label %110

110:                                              ; preds = %107, %61
  %111 = load %struct._store_page*, %struct._store_page** %7, align 8
  %112 = icmp ne %struct._store_page* %111, null
  br i1 %112, label %113, label %114

113:                                              ; preds = %110
  br label %114

114:                                              ; preds = %113, %110
  %115 = load %struct._store_page*, %struct._store_page** %7, align 8
  ret %struct._store_page* %115
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @_submit_wbuf(%struct.store_engine* %0, %struct._store_page* %1) #0 {
  %3 = alloca %struct.store_engine*, align 8
  %4 = alloca %struct._store_page*, align 8
  %5 = alloca %struct.__store_wbuf*, align 8
  %6 = alloca %struct._obj_io*, align 8
  store %struct.store_engine* %0, %struct.store_engine** %3, align 8
  store %struct._store_page* %1, %struct._store_page** %4, align 8
  %7 = load %struct.store_engine*, %struct.store_engine** %3, align 8
  %8 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %7, i32 0, i32 0
  %9 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %8) #14
  %10 = load %struct.store_engine*, %struct.store_engine** %3, align 8
  %11 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %10, i32 0, i32 3
  %12 = load %struct._obj_io*, %struct._obj_io** %11, align 8
  store %struct._obj_io* %12, %struct._obj_io** %6, align 8
  %13 = load %struct._obj_io*, %struct._obj_io** %6, align 8
  %14 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %13, i32 0, i32 1
  %15 = load %struct._obj_io*, %struct._obj_io** %14, align 8
  %16 = load %struct.store_engine*, %struct.store_engine** %3, align 8
  %17 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %16, i32 0, i32 3
  store %struct._obj_io* %15, %struct._obj_io** %17, align 8
  %18 = load %struct.store_engine*, %struct.store_engine** %3, align 8
  %19 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %18, i32 0, i32 0
  %20 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %19) #14
  %21 = load %struct._store_page*, %struct._store_page** %4, align 8
  %22 = getelementptr inbounds %struct._store_page, %struct._store_page* %21, i32 0, i32 15
  %23 = load %struct.__store_wbuf*, %struct.__store_wbuf** %22, align 8
  store %struct.__store_wbuf* %23, %struct.__store_wbuf** %5, align 8
  %24 = load %struct.__store_wbuf*, %struct.__store_wbuf** %5, align 8
  %25 = getelementptr inbounds %struct.__store_wbuf, %struct.__store_wbuf* %24, i32 0, i32 1
  %26 = load i8*, i8** %25, align 8
  %27 = load %struct.__store_wbuf*, %struct.__store_wbuf** %5, align 8
  %28 = getelementptr inbounds %struct.__store_wbuf, %struct.__store_wbuf* %27, i32 0, i32 4
  %29 = load i32, i32* %28, align 4
  %30 = load %struct.__store_wbuf*, %struct.__store_wbuf** %5, align 8
  %31 = getelementptr inbounds %struct.__store_wbuf, %struct.__store_wbuf* %30, i32 0, i32 3
  %32 = load i32, i32* %31, align 8
  %33 = sub i32 %29, %32
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds i8, i8* %26, i64 %34
  %36 = load %struct.__store_wbuf*, %struct.__store_wbuf** %5, align 8
  %37 = getelementptr inbounds %struct.__store_wbuf, %struct.__store_wbuf* %36, i32 0, i32 3
  %38 = load i32, i32* %37, align 8
  %39 = zext i32 %38 to i64
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %39, i1 false)
  %40 = load %struct._obj_io*, %struct._obj_io** %6, align 8
  %41 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %40, i32 0, i32 1
  store %struct._obj_io* null, %struct._obj_io** %41, align 8
  %42 = load %struct._obj_io*, %struct._obj_io** %6, align 8
  %43 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %42, i32 0, i32 9
  store i32 1, i32* %43, align 4
  %44 = load %struct._store_page*, %struct._store_page** %4, align 8
  %45 = getelementptr inbounds %struct._store_page, %struct._store_page* %44, i32 0, i32 11
  %46 = load i16, i16* %45, align 4
  %47 = load %struct._obj_io*, %struct._obj_io** %6, align 8
  %48 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %47, i32 0, i32 8
  store i16 %46, i16* %48, align 8
  %49 = load %struct.__store_wbuf*, %struct.__store_wbuf** %5, align 8
  %50 = bitcast %struct.__store_wbuf* %49 to i8*
  %51 = load %struct._obj_io*, %struct._obj_io** %6, align 8
  %52 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %51, i32 0, i32 0
  store i8* %50, i8** %52, align 8
  %53 = load %struct.__store_wbuf*, %struct.__store_wbuf** %5, align 8
  %54 = getelementptr inbounds %struct.__store_wbuf, %struct.__store_wbuf* %53, i32 0, i32 5
  %55 = load i32, i32* %54, align 8
  %56 = load %struct._obj_io*, %struct._obj_io** %6, align 8
  %57 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %56, i32 0, i32 7
  store i32 %55, i32* %57, align 4
  %58 = load %struct.__store_wbuf*, %struct.__store_wbuf** %5, align 8
  %59 = getelementptr inbounds %struct.__store_wbuf, %struct.__store_wbuf* %58, i32 0, i32 4
  %60 = load i32, i32* %59, align 4
  %61 = load %struct._obj_io*, %struct._obj_io** %6, align 8
  %62 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %61, i32 0, i32 6
  store i32 %60, i32* %62, align 8
  %63 = load %struct.__store_wbuf*, %struct.__store_wbuf** %5, align 8
  %64 = getelementptr inbounds %struct.__store_wbuf, %struct.__store_wbuf* %63, i32 0, i32 1
  %65 = load i8*, i8** %64, align 8
  %66 = load %struct._obj_io*, %struct._obj_io** %6, align 8
  %67 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %66, i32 0, i32 2
  store i8* %65, i8** %67, align 8
  %68 = load %struct._obj_io*, %struct._obj_io** %6, align 8
  %69 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %68, i32 0, i32 10
  store void (i8*, %struct._obj_io*, i32)* @_wbuf_cb, void (i8*, %struct._obj_io*, i32)** %69, align 8
  %70 = load %struct.store_engine*, %struct.store_engine** %3, align 8
  %71 = bitcast %struct.store_engine* %70 to i8*
  %72 = load %struct._obj_io*, %struct._obj_io** %6, align 8
  %73 = call i32 @extstore_submit(i8* %71, %struct._obj_io* %72)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @_allocate_wbuf(%struct.store_engine* %0, %struct._store_page* %1) #0 {
  %3 = alloca %struct.store_engine*, align 8
  %4 = alloca %struct._store_page*, align 8
  %5 = alloca %struct.__store_wbuf*, align 8
  store %struct.store_engine* %0, %struct.store_engine** %3, align 8
  store %struct._store_page* %1, %struct._store_page** %4, align 8
  store %struct.__store_wbuf* null, %struct.__store_wbuf** %5, align 8
  %6 = load %struct.store_engine*, %struct.store_engine** %3, align 8
  %7 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %6, i32 0, i32 0
  %8 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %7) #14
  %9 = load %struct.store_engine*, %struct.store_engine** %3, align 8
  %10 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %9, i32 0, i32 2
  %11 = load %struct.__store_wbuf*, %struct.__store_wbuf** %10, align 8
  %12 = icmp ne %struct.__store_wbuf* %11, null
  br i1 %12, label %13, label %24

13:                                               ; preds = %2
  %14 = load %struct.store_engine*, %struct.store_engine** %3, align 8
  %15 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %14, i32 0, i32 2
  %16 = load %struct.__store_wbuf*, %struct.__store_wbuf** %15, align 8
  store %struct.__store_wbuf* %16, %struct.__store_wbuf** %5, align 8
  %17 = load %struct.__store_wbuf*, %struct.__store_wbuf** %5, align 8
  %18 = getelementptr inbounds %struct.__store_wbuf, %struct.__store_wbuf* %17, i32 0, i32 0
  %19 = load %struct.__store_wbuf*, %struct.__store_wbuf** %18, align 8
  %20 = load %struct.store_engine*, %struct.store_engine** %3, align 8
  %21 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %20, i32 0, i32 2
  store %struct.__store_wbuf* %19, %struct.__store_wbuf** %21, align 8
  %22 = load %struct.__store_wbuf*, %struct.__store_wbuf** %5, align 8
  %23 = getelementptr inbounds %struct.__store_wbuf, %struct.__store_wbuf* %22, i32 0, i32 0
  store %struct.__store_wbuf* null, %struct.__store_wbuf** %23, align 8
  br label %24

24:                                               ; preds = %13, %2
  %25 = load %struct.store_engine*, %struct.store_engine** %3, align 8
  %26 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %25, i32 0, i32 0
  %27 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %26) #14
  %28 = load %struct.__store_wbuf*, %struct.__store_wbuf** %5, align 8
  %29 = icmp ne %struct.__store_wbuf* %28, null
  br i1 %29, label %30, label %60

30:                                               ; preds = %24
  %31 = load %struct._store_page*, %struct._store_page** %4, align 8
  %32 = getelementptr inbounds %struct._store_page, %struct._store_page* %31, i32 0, i32 6
  %33 = load i32, i32* %32, align 8
  %34 = load %struct.__store_wbuf*, %struct.__store_wbuf** %5, align 8
  %35 = getelementptr inbounds %struct.__store_wbuf, %struct.__store_wbuf* %34, i32 0, i32 5
  store i32 %33, i32* %35, align 8
  %36 = load %struct.__store_wbuf*, %struct.__store_wbuf** %5, align 8
  %37 = getelementptr inbounds %struct.__store_wbuf, %struct.__store_wbuf* %36, i32 0, i32 4
  %38 = load i32, i32* %37, align 4
  %39 = load %struct._store_page*, %struct._store_page** %4, align 8
  %40 = getelementptr inbounds %struct._store_page, %struct._store_page* %39, i32 0, i32 6
  %41 = load i32, i32* %40, align 8
  %42 = add i32 %41, %38
  store i32 %42, i32* %40, align 8
  %43 = load %struct.__store_wbuf*, %struct.__store_wbuf** %5, align 8
  %44 = getelementptr inbounds %struct.__store_wbuf, %struct.__store_wbuf* %43, i32 0, i32 4
  %45 = load i32, i32* %44, align 4
  %46 = load %struct.__store_wbuf*, %struct.__store_wbuf** %5, align 8
  %47 = getelementptr inbounds %struct.__store_wbuf, %struct.__store_wbuf* %46, i32 0, i32 3
  store i32 %45, i32* %47, align 8
  %48 = load %struct.__store_wbuf*, %struct.__store_wbuf** %5, align 8
  %49 = getelementptr inbounds %struct.__store_wbuf, %struct.__store_wbuf* %48, i32 0, i32 1
  %50 = load i8*, i8** %49, align 8
  %51 = load %struct.__store_wbuf*, %struct.__store_wbuf** %5, align 8
  %52 = getelementptr inbounds %struct.__store_wbuf, %struct.__store_wbuf* %51, i32 0, i32 2
  store i8* %50, i8** %52, align 8
  %53 = load %struct.__store_wbuf*, %struct.__store_wbuf** %5, align 8
  %54 = getelementptr inbounds %struct.__store_wbuf, %struct.__store_wbuf* %53, i32 0, i32 6
  store i8 0, i8* %54, align 4
  %55 = load %struct.__store_wbuf*, %struct.__store_wbuf** %5, align 8
  %56 = getelementptr inbounds %struct.__store_wbuf, %struct.__store_wbuf* %55, i32 0, i32 7
  store i8 0, i8* %56, align 1
  %57 = load %struct.__store_wbuf*, %struct.__store_wbuf** %5, align 8
  %58 = load %struct._store_page*, %struct._store_page** %4, align 8
  %59 = getelementptr inbounds %struct._store_page, %struct._store_page* %58, i32 0, i32 15
  store %struct.__store_wbuf* %57, %struct.__store_wbuf** %59, align 8
  br label %60

60:                                               ; preds = %30, %24
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @_wbuf_cb(i8* %0, %struct._obj_io* %1, i32 %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca %struct._obj_io*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.store_engine*, align 8
  %8 = alloca %struct._store_page*, align 8
  %9 = alloca %struct.__store_wbuf*, align 8
  store i8* %0, i8** %4, align 8
  store %struct._obj_io* %1, %struct._obj_io** %5, align 8
  store i32 %2, i32* %6, align 4
  %10 = load i8*, i8** %4, align 8
  %11 = bitcast i8* %10 to %struct.store_engine*
  store %struct.store_engine* %11, %struct.store_engine** %7, align 8
  %12 = load %struct.store_engine*, %struct.store_engine** %7, align 8
  %13 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %12, i32 0, i32 1
  %14 = load %struct._store_page*, %struct._store_page** %13, align 8
  %15 = load %struct._obj_io*, %struct._obj_io** %5, align 8
  %16 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %15, i32 0, i32 8
  %17 = load i16, i16* %16, align 8
  %18 = zext i16 %17 to i64
  %19 = getelementptr inbounds %struct._store_page, %struct._store_page* %14, i64 %18
  store %struct._store_page* %19, %struct._store_page** %8, align 8
  %20 = load %struct._obj_io*, %struct._obj_io** %5, align 8
  %21 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %20, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = bitcast i8* %22 to %struct.__store_wbuf*
  store %struct.__store_wbuf* %23, %struct.__store_wbuf** %9, align 8
  %24 = load %struct.__store_wbuf*, %struct.__store_wbuf** %9, align 8
  %25 = getelementptr inbounds %struct.__store_wbuf, %struct.__store_wbuf* %24, i32 0, i32 7
  store i8 1, i8* %25, align 1
  %26 = load %struct._store_page*, %struct._store_page** %8, align 8
  %27 = getelementptr inbounds %struct._store_page, %struct._store_page* %26, i32 0, i32 0
  %28 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %27) #14
  %29 = load %struct.__store_wbuf*, %struct.__store_wbuf** %9, align 8
  %30 = getelementptr inbounds %struct.__store_wbuf, %struct.__store_wbuf* %29, i32 0, i32 4
  %31 = load i32, i32* %30, align 4
  %32 = load %struct._store_page*, %struct._store_page** %8, align 8
  %33 = getelementptr inbounds %struct._store_page, %struct._store_page* %32, i32 0, i32 7
  %34 = load i32, i32* %33, align 4
  %35 = add i32 %34, %31
  store i32 %35, i32* %33, align 4
  %36 = load %struct._store_page*, %struct._store_page** %8, align 8
  %37 = getelementptr inbounds %struct._store_page, %struct._store_page* %36, i32 0, i32 15
  store %struct.__store_wbuf* null, %struct.__store_wbuf** %37, align 8
  %38 = load %struct._store_page*, %struct._store_page** %8, align 8
  %39 = getelementptr inbounds %struct._store_page, %struct._store_page* %38, i32 0, i32 7
  %40 = load i32, i32* %39, align 4
  %41 = zext i32 %40 to i64
  %42 = load %struct.store_engine*, %struct.store_engine** %7, align 8
  %43 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %42, i32 0, i32 9
  %44 = load i64, i64* %43, align 8
  %45 = icmp eq i64 %41, %44
  br i1 %45, label %46, label %49

46:                                               ; preds = %3
  %47 = load %struct._store_page*, %struct._store_page** %8, align 8
  %48 = getelementptr inbounds %struct._store_page, %struct._store_page* %47, i32 0, i32 12
  store i8 0, i8* %48, align 2
  br label %49

49:                                               ; preds = %46, %3
  %50 = load %struct.store_engine*, %struct.store_engine** %7, align 8
  %51 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %50, i32 0, i32 0
  %52 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %51) #14
  %53 = load %struct.store_engine*, %struct.store_engine** %7, align 8
  %54 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %53, i32 0, i32 2
  %55 = load %struct.__store_wbuf*, %struct.__store_wbuf** %54, align 8
  %56 = load %struct.__store_wbuf*, %struct.__store_wbuf** %9, align 8
  %57 = getelementptr inbounds %struct.__store_wbuf, %struct.__store_wbuf* %56, i32 0, i32 0
  store %struct.__store_wbuf* %55, %struct.__store_wbuf** %57, align 8
  %58 = load %struct.__store_wbuf*, %struct.__store_wbuf** %9, align 8
  %59 = load %struct.store_engine*, %struct.store_engine** %7, align 8
  %60 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %59, i32 0, i32 2
  store %struct.__store_wbuf* %58, %struct.__store_wbuf** %60, align 8
  %61 = load %struct.store_engine*, %struct.store_engine** %7, align 8
  %62 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %61, i32 0, i32 3
  %63 = load %struct._obj_io*, %struct._obj_io** %62, align 8
  %64 = load %struct._obj_io*, %struct._obj_io** %5, align 8
  %65 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %64, i32 0, i32 1
  store %struct._obj_io* %63, %struct._obj_io** %65, align 8
  %66 = load %struct._obj_io*, %struct._obj_io** %5, align 8
  %67 = load %struct.store_engine*, %struct.store_engine** %7, align 8
  %68 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %67, i32 0, i32 3
  store %struct._obj_io* %66, %struct._obj_io** %68, align 8
  %69 = load %struct.store_engine*, %struct.store_engine** %7, align 8
  %70 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %69, i32 0, i32 0
  %71 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %70) #14
  %72 = load %struct._store_page*, %struct._store_page** %8, align 8
  %73 = getelementptr inbounds %struct._store_page, %struct._store_page* %72, i32 0, i32 0
  %74 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %73) #14
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @extstore_submit(i8* %0, %struct._obj_io* %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct._obj_io*, align 8
  %5 = alloca %struct.store_engine*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct._obj_io*, align 8
  %8 = alloca %struct._obj_io*, align 8
  %9 = alloca %struct.store_io_thread*, align 8
  store i8* %0, i8** %3, align 8
  store %struct._obj_io* %1, %struct._obj_io** %4, align 8
  %10 = load i8*, i8** %3, align 8
  %11 = bitcast i8* %10 to %struct.store_engine*
  store %struct.store_engine* %11, %struct.store_engine** %5, align 8
  store i32 0, i32* %6, align 4
  %12 = load %struct._obj_io*, %struct._obj_io** %4, align 8
  store %struct._obj_io* %12, %struct._obj_io** %7, align 8
  store %struct._obj_io* null, %struct._obj_io** %8, align 8
  br label %13

13:                                               ; preds = %16, %2
  %14 = load %struct._obj_io*, %struct._obj_io** %7, align 8
  %15 = icmp ne %struct._obj_io* %14, null
  br i1 %15, label %16, label %23

16:                                               ; preds = %13
  %17 = load %struct._obj_io*, %struct._obj_io** %7, align 8
  store %struct._obj_io* %17, %struct._obj_io** %8, align 8
  %18 = load i32, i32* %6, align 4
  %19 = add i32 %18, 1
  store i32 %19, i32* %6, align 4
  %20 = load %struct._obj_io*, %struct._obj_io** %7, align 8
  %21 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %20, i32 0, i32 1
  %22 = load %struct._obj_io*, %struct._obj_io** %21, align 8
  store %struct._obj_io* %22, %struct._obj_io** %7, align 8
  br label %13, !llvm.loop !189

23:                                               ; preds = %13
  %24 = load %struct.store_engine*, %struct.store_engine** %5, align 8
  %25 = call %struct.store_io_thread* @_get_io_thread(%struct.store_engine* %24)
  store %struct.store_io_thread* %25, %struct.store_io_thread** %9, align 8
  %26 = load %struct.store_io_thread*, %struct.store_io_thread** %9, align 8
  %27 = getelementptr inbounds %struct.store_io_thread, %struct.store_io_thread* %26, i32 0, i32 0
  %28 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %27) #14
  %29 = load i32, i32* %6, align 4
  %30 = load %struct.store_io_thread*, %struct.store_io_thread** %9, align 8
  %31 = getelementptr inbounds %struct.store_io_thread, %struct.store_io_thread* %30, i32 0, i32 5
  %32 = load i32, i32* %31, align 8
  %33 = add i32 %32, %29
  store i32 %33, i32* %31, align 8
  %34 = load %struct.store_io_thread*, %struct.store_io_thread** %9, align 8
  %35 = getelementptr inbounds %struct.store_io_thread, %struct.store_io_thread* %34, i32 0, i32 2
  %36 = load %struct._obj_io*, %struct._obj_io** %35, align 8
  %37 = icmp eq %struct._obj_io* %36, null
  br i1 %37, label %38, label %45

38:                                               ; preds = %23
  %39 = load %struct._obj_io*, %struct._obj_io** %4, align 8
  %40 = load %struct.store_io_thread*, %struct.store_io_thread** %9, align 8
  %41 = getelementptr inbounds %struct.store_io_thread, %struct.store_io_thread* %40, i32 0, i32 2
  store %struct._obj_io* %39, %struct._obj_io** %41, align 8
  %42 = load %struct._obj_io*, %struct._obj_io** %8, align 8
  %43 = load %struct.store_io_thread*, %struct.store_io_thread** %9, align 8
  %44 = getelementptr inbounds %struct.store_io_thread, %struct.store_io_thread* %43, i32 0, i32 3
  store %struct._obj_io* %42, %struct._obj_io** %44, align 8
  br label %54

45:                                               ; preds = %23
  %46 = load %struct._obj_io*, %struct._obj_io** %4, align 8
  %47 = load %struct.store_io_thread*, %struct.store_io_thread** %9, align 8
  %48 = getelementptr inbounds %struct.store_io_thread, %struct.store_io_thread* %47, i32 0, i32 3
  %49 = load %struct._obj_io*, %struct._obj_io** %48, align 8
  %50 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %49, i32 0, i32 1
  store %struct._obj_io* %46, %struct._obj_io** %50, align 8
  %51 = load %struct._obj_io*, %struct._obj_io** %8, align 8
  %52 = load %struct.store_io_thread*, %struct.store_io_thread** %9, align 8
  %53 = getelementptr inbounds %struct.store_io_thread, %struct.store_io_thread* %52, i32 0, i32 3
  store %struct._obj_io* %51, %struct._obj_io** %53, align 8
  br label %54

54:                                               ; preds = %45, %38
  %55 = load %struct.store_io_thread*, %struct.store_io_thread** %9, align 8
  %56 = getelementptr inbounds %struct.store_io_thread, %struct.store_io_thread* %55, i32 0, i32 0
  %57 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %56) #14
  %58 = load %struct.store_io_thread*, %struct.store_io_thread** %9, align 8
  %59 = getelementptr inbounds %struct.store_io_thread, %struct.store_io_thread* %58, i32 0, i32 1
  %60 = call i32 @pthread_cond_signal(%union.pthread_cond_t* %59) #14
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.store_io_thread* @_get_io_thread(%struct.store_engine* %0) #0 {
  %2 = alloca %struct.store_engine*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  store %struct.store_engine* %0, %struct.store_engine** %2, align 8
  store i32 -1, i32* %3, align 4
  store i64 9223372036854775807, i64* %4, align 8
  %6 = load %struct.store_engine*, %struct.store_engine** %2, align 8
  %7 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %6, i32 0, i32 0
  %8 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %7) #14
  store i32 0, i32* %5, align 4
  br label %9

9:                                                ; preds = %52, %1
  %10 = load i32, i32* %5, align 4
  %11 = load %struct.store_engine*, %struct.store_engine** %2, align 8
  %12 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %11, i32 0, i32 12
  %13 = load i32, i32* %12, align 8
  %14 = icmp ult i32 %10, %13
  br i1 %14, label %15, label %55

15:                                               ; preds = %9
  %16 = load %struct.store_engine*, %struct.store_engine** %2, align 8
  %17 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %16, i32 0, i32 4
  %18 = load %struct.store_io_thread*, %struct.store_io_thread** %17, align 8
  %19 = load i32, i32* %5, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds %struct.store_io_thread, %struct.store_io_thread* %18, i64 %20
  %22 = getelementptr inbounds %struct.store_io_thread, %struct.store_io_thread* %21, i32 0, i32 5
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %15
  %26 = load i32, i32* %5, align 4
  store i32 %26, i32* %3, align 4
  br label %55

27:                                               ; preds = %15
  %28 = load %struct.store_engine*, %struct.store_engine** %2, align 8
  %29 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %28, i32 0, i32 4
  %30 = load %struct.store_io_thread*, %struct.store_io_thread** %29, align 8
  %31 = load i32, i32* %5, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds %struct.store_io_thread, %struct.store_io_thread* %30, i64 %32
  %34 = getelementptr inbounds %struct.store_io_thread, %struct.store_io_thread* %33, i32 0, i32 5
  %35 = load i32, i32* %34, align 8
  %36 = zext i32 %35 to i64
  %37 = load i64, i64* %4, align 8
  %38 = icmp slt i64 %36, %37
  br i1 %38, label %39, label %50

39:                                               ; preds = %27
  %40 = load i32, i32* %5, align 4
  store i32 %40, i32* %3, align 4
  %41 = load %struct.store_engine*, %struct.store_engine** %2, align 8
  %42 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %41, i32 0, i32 4
  %43 = load %struct.store_io_thread*, %struct.store_io_thread** %42, align 8
  %44 = load i32, i32* %5, align 4
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds %struct.store_io_thread, %struct.store_io_thread* %43, i64 %45
  %47 = getelementptr inbounds %struct.store_io_thread, %struct.store_io_thread* %46, i32 0, i32 5
  %48 = load i32, i32* %47, align 8
  %49 = zext i32 %48 to i64
  store i64 %49, i64* %4, align 8
  br label %50

50:                                               ; preds = %39, %27
  br label %51

51:                                               ; preds = %50
  br label %52

52:                                               ; preds = %51
  %53 = load i32, i32* %5, align 4
  %54 = add nsw i32 %53, 1
  store i32 %54, i32* %5, align 4
  br label %9, !llvm.loop !190

55:                                               ; preds = %25, %9
  %56 = load %struct.store_engine*, %struct.store_engine** %2, align 8
  %57 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %56, i32 0, i32 0
  %58 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %57) #14
  %59 = load %struct.store_engine*, %struct.store_engine** %2, align 8
  %60 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %59, i32 0, i32 4
  %61 = load %struct.store_io_thread*, %struct.store_io_thread** %60, align 8
  %62 = load i32, i32* %3, align 4
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds %struct.store_io_thread, %struct.store_io_thread* %61, i64 %63
  ret %struct.store_io_thread* %64
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @_next_version(%struct.store_engine* %0) #0 {
  %2 = alloca %struct.store_engine*, align 8
  store %struct.store_engine* %0, %struct.store_engine** %2, align 8
  %3 = load %struct.store_engine*, %struct.store_engine** %2, align 8
  %4 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %3, i32 0, i32 10
  %5 = load i32, i32* %4, align 8
  %6 = add i32 %5, 1
  store i32 %6, i32* %4, align 8
  %7 = zext i32 %5 to i64
  ret i64 %7
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @extstore_write(i8* %0, %struct._obj_io* %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct._obj_io*, align 8
  %5 = alloca %struct.store_engine*, align 8
  %6 = alloca %struct._store_page*, align 8
  store i8* %0, i8** %3, align 8
  store %struct._obj_io* %1, %struct._obj_io** %4, align 8
  %7 = load i8*, i8** %3, align 8
  %8 = bitcast i8* %7 to %struct.store_engine*
  store %struct.store_engine* %8, %struct.store_engine** %5, align 8
  %9 = load %struct.store_engine*, %struct.store_engine** %5, align 8
  %10 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %9, i32 0, i32 1
  %11 = load %struct._store_page*, %struct._store_page** %10, align 8
  %12 = load %struct._obj_io*, %struct._obj_io** %4, align 8
  %13 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %12, i32 0, i32 8
  %14 = load i16, i16* %13, align 8
  %15 = zext i16 %14 to i64
  %16 = getelementptr inbounds %struct._store_page, %struct._store_page* %11, i64 %15
  store %struct._store_page* %16, %struct._store_page** %6, align 8
  %17 = load %struct._store_page*, %struct._store_page** %6, align 8
  %18 = getelementptr inbounds %struct._store_page, %struct._store_page* %17, i32 0, i32 15
  %19 = load %struct.__store_wbuf*, %struct.__store_wbuf** %18, align 8
  %20 = getelementptr inbounds %struct.__store_wbuf, %struct.__store_wbuf* %19, i32 0, i32 5
  %21 = load i32, i32* %20, align 8
  %22 = load %struct._store_page*, %struct._store_page** %6, align 8
  %23 = getelementptr inbounds %struct._store_page, %struct._store_page* %22, i32 0, i32 15
  %24 = load %struct.__store_wbuf*, %struct.__store_wbuf** %23, align 8
  %25 = getelementptr inbounds %struct.__store_wbuf, %struct.__store_wbuf* %24, i32 0, i32 4
  %26 = load i32, i32* %25, align 4
  %27 = load %struct._store_page*, %struct._store_page** %6, align 8
  %28 = getelementptr inbounds %struct._store_page, %struct._store_page* %27, i32 0, i32 15
  %29 = load %struct.__store_wbuf*, %struct.__store_wbuf** %28, align 8
  %30 = getelementptr inbounds %struct.__store_wbuf, %struct.__store_wbuf* %29, i32 0, i32 3
  %31 = load i32, i32* %30, align 8
  %32 = sub i32 %26, %31
  %33 = add i32 %21, %32
  %34 = load %struct._obj_io*, %struct._obj_io** %4, align 8
  %35 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %34, i32 0, i32 7
  store i32 %33, i32* %35, align 4
  %36 = load %struct._store_page*, %struct._store_page** %6, align 8
  %37 = getelementptr inbounds %struct._store_page, %struct._store_page* %36, i32 0, i32 4
  %38 = load i32, i32* %37, align 8
  %39 = load %struct._obj_io*, %struct._obj_io** %4, align 8
  %40 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %39, i32 0, i32 5
  store i32 %38, i32* %40, align 4
  %41 = load %struct._obj_io*, %struct._obj_io** %4, align 8
  %42 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %41, i32 0, i32 6
  %43 = load i32, i32* %42, align 8
  %44 = load %struct._store_page*, %struct._store_page** %6, align 8
  %45 = getelementptr inbounds %struct._store_page, %struct._store_page* %44, i32 0, i32 15
  %46 = load %struct.__store_wbuf*, %struct.__store_wbuf** %45, align 8
  %47 = getelementptr inbounds %struct.__store_wbuf, %struct.__store_wbuf* %46, i32 0, i32 2
  %48 = load i8*, i8** %47, align 8
  %49 = zext i32 %43 to i64
  %50 = getelementptr inbounds i8, i8* %48, i64 %49
  store i8* %50, i8** %47, align 8
  %51 = load %struct._obj_io*, %struct._obj_io** %4, align 8
  %52 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %51, i32 0, i32 6
  %53 = load i32, i32* %52, align 8
  %54 = load %struct._store_page*, %struct._store_page** %6, align 8
  %55 = getelementptr inbounds %struct._store_page, %struct._store_page* %54, i32 0, i32 15
  %56 = load %struct.__store_wbuf*, %struct.__store_wbuf** %55, align 8
  %57 = getelementptr inbounds %struct.__store_wbuf, %struct.__store_wbuf* %56, i32 0, i32 3
  %58 = load i32, i32* %57, align 8
  %59 = sub i32 %58, %53
  store i32 %59, i32* %57, align 8
  %60 = load %struct._obj_io*, %struct._obj_io** %4, align 8
  %61 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %60, i32 0, i32 6
  %62 = load i32, i32* %61, align 8
  %63 = zext i32 %62 to i64
  %64 = load %struct._store_page*, %struct._store_page** %6, align 8
  %65 = getelementptr inbounds %struct._store_page, %struct._store_page* %64, i32 0, i32 2
  %66 = load i64, i64* %65, align 8
  %67 = add i64 %66, %63
  store i64 %67, i64* %65, align 8
  %68 = load %struct._store_page*, %struct._store_page** %6, align 8
  %69 = getelementptr inbounds %struct._store_page, %struct._store_page* %68, i32 0, i32 1
  %70 = load i64, i64* %69, align 8
  %71 = add i64 %70, 1
  store i64 %71, i64* %69, align 8
  %72 = load %struct.store_engine*, %struct.store_engine** %5, align 8
  %73 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %72, i32 0, i32 18
  %74 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %73) #14
  %75 = load %struct._obj_io*, %struct._obj_io** %4, align 8
  %76 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %75, i32 0, i32 6
  %77 = load i32, i32* %76, align 8
  %78 = zext i32 %77 to i64
  %79 = load %struct.store_engine*, %struct.store_engine** %5, align 8
  %80 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %79, i32 0, i32 19
  %81 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %80, i32 0, i32 12
  %82 = load i64, i64* %81, align 8
  %83 = add i64 %82, %78
  store i64 %83, i64* %81, align 8
  %84 = load %struct._obj_io*, %struct._obj_io** %4, align 8
  %85 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %84, i32 0, i32 6
  %86 = load i32, i32* %85, align 8
  %87 = zext i32 %86 to i64
  %88 = load %struct.store_engine*, %struct.store_engine** %5, align 8
  %89 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %88, i32 0, i32 19
  %90 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %89, i32 0, i32 14
  %91 = load i64, i64* %90, align 8
  %92 = add i64 %91, %87
  store i64 %92, i64* %90, align 8
  %93 = load %struct.store_engine*, %struct.store_engine** %5, align 8
  %94 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %93, i32 0, i32 19
  %95 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %94, i32 0, i32 9
  %96 = load i64, i64* %95, align 8
  %97 = add i64 %96, 1
  store i64 %97, i64* %95, align 8
  %98 = load %struct.store_engine*, %struct.store_engine** %5, align 8
  %99 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %98, i32 0, i32 19
  %100 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %99, i32 0, i32 10
  %101 = load i64, i64* %100, align 8
  %102 = add i64 %101, 1
  store i64 %102, i64* %100, align 8
  %103 = load %struct.store_engine*, %struct.store_engine** %5, align 8
  %104 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %103, i32 0, i32 18
  %105 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %104) #14
  %106 = load %struct._store_page*, %struct._store_page** %6, align 8
  %107 = getelementptr inbounds %struct._store_page, %struct._store_page* %106, i32 0, i32 0
  %108 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %107) #14
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @extstore_delete(i8* %0, i32 %1, i64 %2, i32 %3, i32 %4) #0 {
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct.store_engine*, align 8
  %12 = alloca %struct._store_page*, align 8
  %13 = alloca i32, align 4
  store i8* %0, i8** %6, align 8
  store i32 %1, i32* %7, align 4
  store i64 %2, i64* %8, align 8
  store i32 %3, i32* %9, align 4
  store i32 %4, i32* %10, align 4
  %14 = load i8*, i8** %6, align 8
  %15 = bitcast i8* %14 to %struct.store_engine*
  store %struct.store_engine* %15, %struct.store_engine** %11, align 8
  %16 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %17 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %16, i32 0, i32 1
  %18 = load %struct._store_page*, %struct._store_page** %17, align 8
  %19 = load i32, i32* %7, align 4
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %struct._store_page, %struct._store_page* %18, i64 %20
  store %struct._store_page* %21, %struct._store_page** %12, align 8
  store i32 0, i32* %13, align 4
  %22 = load %struct._store_page*, %struct._store_page** %12, align 8
  %23 = getelementptr inbounds %struct._store_page, %struct._store_page* %22, i32 0, i32 0
  %24 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %23) #14
  %25 = load %struct._store_page*, %struct._store_page** %12, align 8
  %26 = getelementptr inbounds %struct._store_page, %struct._store_page* %25, i32 0, i32 13
  %27 = load i8, i8* %26, align 1
  %28 = trunc i8 %27 to i1
  br i1 %28, label %99, label %29

29:                                               ; preds = %5
  %30 = load %struct._store_page*, %struct._store_page** %12, align 8
  %31 = getelementptr inbounds %struct._store_page, %struct._store_page* %30, i32 0, i32 4
  %32 = load i32, i32* %31, align 8
  %33 = zext i32 %32 to i64
  %34 = load i64, i64* %8, align 8
  %35 = icmp eq i64 %33, %34
  br i1 %35, label %36, label %99

36:                                               ; preds = %29
  %37 = load %struct._store_page*, %struct._store_page** %12, align 8
  %38 = getelementptr inbounds %struct._store_page, %struct._store_page* %37, i32 0, i32 2
  %39 = load i64, i64* %38, align 8
  %40 = load i32, i32* %10, align 4
  %41 = zext i32 %40 to i64
  %42 = icmp uge i64 %39, %41
  br i1 %42, label %43, label %50

43:                                               ; preds = %36
  %44 = load i32, i32* %10, align 4
  %45 = zext i32 %44 to i64
  %46 = load %struct._store_page*, %struct._store_page** %12, align 8
  %47 = getelementptr inbounds %struct._store_page, %struct._store_page* %46, i32 0, i32 2
  %48 = load i64, i64* %47, align 8
  %49 = sub i64 %48, %45
  store i64 %49, i64* %47, align 8
  br label %53

50:                                               ; preds = %36
  %51 = load %struct._store_page*, %struct._store_page** %12, align 8
  %52 = getelementptr inbounds %struct._store_page, %struct._store_page* %51, i32 0, i32 2
  store i64 0, i64* %52, align 8
  br label %53

53:                                               ; preds = %50, %43
  %54 = load %struct._store_page*, %struct._store_page** %12, align 8
  %55 = getelementptr inbounds %struct._store_page, %struct._store_page* %54, i32 0, i32 1
  %56 = load i64, i64* %55, align 8
  %57 = load i32, i32* %9, align 4
  %58 = zext i32 %57 to i64
  %59 = icmp uge i64 %56, %58
  br i1 %59, label %60, label %67

60:                                               ; preds = %53
  %61 = load i32, i32* %9, align 4
  %62 = zext i32 %61 to i64
  %63 = load %struct._store_page*, %struct._store_page** %12, align 8
  %64 = getelementptr inbounds %struct._store_page, %struct._store_page* %63, i32 0, i32 1
  %65 = load i64, i64* %64, align 8
  %66 = sub i64 %65, %62
  store i64 %66, i64* %64, align 8
  br label %70

67:                                               ; preds = %53
  %68 = load %struct._store_page*, %struct._store_page** %12, align 8
  %69 = getelementptr inbounds %struct._store_page, %struct._store_page* %68, i32 0, i32 1
  store i64 0, i64* %69, align 8
  br label %70

70:                                               ; preds = %67, %60
  %71 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %72 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %71, i32 0, i32 18
  %73 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %72) #14
  %74 = load i32, i32* %10, align 4
  %75 = zext i32 %74 to i64
  %76 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %77 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %76, i32 0, i32 19
  %78 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %77, i32 0, i32 14
  %79 = load i64, i64* %78, align 8
  %80 = sub i64 %79, %75
  store i64 %80, i64* %78, align 8
  %81 = load i32, i32* %9, align 4
  %82 = zext i32 %81 to i64
  %83 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %84 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %83, i32 0, i32 19
  %85 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %84, i32 0, i32 10
  %86 = load i64, i64* %85, align 8
  %87 = sub i64 %86, %82
  store i64 %87, i64* %85, align 8
  %88 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %89 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %88, i32 0, i32 18
  %90 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %89) #14
  %91 = load %struct._store_page*, %struct._store_page** %12, align 8
  %92 = getelementptr inbounds %struct._store_page, %struct._store_page* %91, i32 0, i32 1
  %93 = load i64, i64* %92, align 8
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %95, label %98

95:                                               ; preds = %70
  %96 = load %struct.store_engine*, %struct.store_engine** %11, align 8
  %97 = bitcast %struct.store_engine* %96 to i8*
  call void @extstore_run_maint(i8* %97)
  br label %98

98:                                               ; preds = %95, %70
  br label %100

99:                                               ; preds = %29, %5
  store i32 -1, i32* %13, align 4
  br label %100

100:                                              ; preds = %99, %98
  %101 = load %struct._store_page*, %struct._store_page** %12, align 8
  %102 = getelementptr inbounds %struct._store_page, %struct._store_page* %101, i32 0, i32 0
  %103 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %102) #14
  %104 = load i32, i32* %13, align 4
  ret i32 %104
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @extstore_check(i8* %0, i32 %1, i64 %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  %7 = alloca %struct.store_engine*, align 8
  %8 = alloca %struct._store_page*, align 8
  %9 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  store i32 %1, i32* %5, align 4
  store i64 %2, i64* %6, align 8
  %10 = load i8*, i8** %4, align 8
  %11 = bitcast i8* %10 to %struct.store_engine*
  store %struct.store_engine* %11, %struct.store_engine** %7, align 8
  %12 = load %struct.store_engine*, %struct.store_engine** %7, align 8
  %13 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %12, i32 0, i32 1
  %14 = load %struct._store_page*, %struct._store_page** %13, align 8
  %15 = load i32, i32* %5, align 4
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct._store_page, %struct._store_page* %14, i64 %16
  store %struct._store_page* %17, %struct._store_page** %8, align 8
  store i32 0, i32* %9, align 4
  %18 = load %struct._store_page*, %struct._store_page** %8, align 8
  %19 = getelementptr inbounds %struct._store_page, %struct._store_page* %18, i32 0, i32 0
  %20 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %19) #14
  %21 = load %struct._store_page*, %struct._store_page** %8, align 8
  %22 = getelementptr inbounds %struct._store_page, %struct._store_page* %21, i32 0, i32 4
  %23 = load i32, i32* %22, align 8
  %24 = zext i32 %23 to i64
  %25 = load i64, i64* %6, align 8
  %26 = icmp ne i64 %24, %25
  br i1 %26, label %27, label %28

27:                                               ; preds = %3
  store i32 -1, i32* %9, align 4
  br label %28

28:                                               ; preds = %27, %3
  %29 = load %struct._store_page*, %struct._store_page** %8, align 8
  %30 = getelementptr inbounds %struct._store_page, %struct._store_page* %29, i32 0, i32 0
  %31 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %30) #14
  %32 = load i32, i32* %9, align 4
  ret i32 %32
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @extstore_close_page(i8* %0, i32 %1, i64 %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  %7 = alloca %struct.store_engine*, align 8
  %8 = alloca %struct._store_page*, align 8
  store i8* %0, i8** %4, align 8
  store i32 %1, i32* %5, align 4
  store i64 %2, i64* %6, align 8
  %9 = load i8*, i8** %4, align 8
  %10 = bitcast i8* %9 to %struct.store_engine*
  store %struct.store_engine* %10, %struct.store_engine** %7, align 8
  %11 = load %struct.store_engine*, %struct.store_engine** %7, align 8
  %12 = getelementptr inbounds %struct.store_engine, %struct.store_engine* %11, i32 0, i32 1
  %13 = load %struct._store_page*, %struct._store_page** %12, align 8
  %14 = load i32, i32* %5, align 4
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %struct._store_page, %struct._store_page* %13, i64 %15
  store %struct._store_page* %16, %struct._store_page** %8, align 8
  %17 = load %struct._store_page*, %struct._store_page** %8, align 8
  %18 = getelementptr inbounds %struct._store_page, %struct._store_page* %17, i32 0, i32 0
  %19 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %18) #14
  %20 = load %struct._store_page*, %struct._store_page** %8, align 8
  %21 = getelementptr inbounds %struct._store_page, %struct._store_page* %20, i32 0, i32 13
  %22 = load i8, i8* %21, align 1
  %23 = trunc i8 %22 to i1
  br i1 %23, label %36, label %24

24:                                               ; preds = %3
  %25 = load %struct._store_page*, %struct._store_page** %8, align 8
  %26 = getelementptr inbounds %struct._store_page, %struct._store_page* %25, i32 0, i32 4
  %27 = load i32, i32* %26, align 8
  %28 = zext i32 %27 to i64
  %29 = load i64, i64* %6, align 8
  %30 = icmp eq i64 %28, %29
  br i1 %30, label %31, label %36

31:                                               ; preds = %24
  %32 = load %struct._store_page*, %struct._store_page** %8, align 8
  %33 = getelementptr inbounds %struct._store_page, %struct._store_page* %32, i32 0, i32 13
  store i8 1, i8* %33, align 1
  %34 = load %struct.store_engine*, %struct.store_engine** %7, align 8
  %35 = bitcast %struct.store_engine* %34 to i8*
  call void @extstore_run_maint(i8* %35)
  br label %36

36:                                               ; preds = %31, %24, %3
  %37 = load %struct._store_page*, %struct._store_page** %8, align 8
  %38 = getelementptr inbounds %struct._store_page, %struct._store_page* %37, i32 0, i32 0
  %39 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %38) #14
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @crc32c_init() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  br label %4

4:                                                ; preds = %0
  store i32 1, i32* %2, align 4
  %5 = load i32, i32* %2, align 4
  %6 = call i32 asm "cpuid", "={cx},{ax},~{ebx},~{edx},~{dirflag},~{fpsr},~{flags}"(i32 %5) #12, !srcloc !191
  store i32 %6, i32* %3, align 4
  %7 = load i32, i32* %3, align 4
  %8 = lshr i32 %7, 20
  %9 = and i32 %8, 1
  store i32 %9, i32* %1, align 4
  br label %10

10:                                               ; preds = %4
  %11 = load i32, i32* %1, align 4
  %12 = icmp ne i32 %11, 0
  br i1 %12, label %13, label %14

13:                                               ; preds = %10
  store i32 (i32, i8*, i64)* @crc32c_hw, i32 (i32, i8*, i64)** @crc32c, align 8
  br label %15

14:                                               ; preds = %10
  store i32 (i32, i8*, i64)* @crc32c_sw, i32 (i32, i8*, i64)** @crc32c, align 8
  br label %15

15:                                               ; preds = %14, %13
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @crc32c_hw(i32 %0, i8* %1, i64 %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  store i32 %0, i32* %4, align 4
  store i8* %1, i8** %5, align 8
  store i64 %2, i64* %6, align 8
  %16 = call i32 @pthread_once(i32* @crc32c_once_hw, void ()* @crc32c_init_hw)
  %17 = load i32, i32* %4, align 4
  %18 = xor i32 %17, -1
  store i32 %18, i32* %4, align 4
  %19 = load i32, i32* %4, align 4
  %20 = zext i32 %19 to i64
  store i64 %20, i64* %7, align 8
  %21 = load i8*, i8** %5, align 8
  store i8* %21, i8** %8, align 8
  br label %22

22:                                               ; preds = %32, %3
  %23 = load i64, i64* %6, align 8
  %24 = icmp ne i64 %23, 0
  br i1 %24, label %25, label %30

25:                                               ; preds = %22
  %26 = load i8*, i8** %8, align 8
  %27 = ptrtoint i8* %26 to i64
  %28 = and i64 %27, 7
  %29 = icmp ne i64 %28, 0
  br label %30

30:                                               ; preds = %25, %22
  %31 = phi i1 [ false, %22 ], [ %29, %25 ]
  br i1 %31, label %32, label %40

32:                                               ; preds = %30
  %33 = load i8*, i8** %8, align 8
  %34 = load i64, i64* %7, align 8
  %35 = call i64 asm "crc32b\09($1), $0", "=r,r,0,~{dirflag},~{fpsr},~{flags}"(i8* %33, i64 %34) #12, !srcloc !192
  store i64 %35, i64* %7, align 8
  %36 = load i8*, i8** %8, align 8
  %37 = getelementptr inbounds i8, i8* %36, i32 1
  store i8* %37, i8** %8, align 8
  %38 = load i64, i64* %6, align 8
  %39 = add i64 %38, -1
  store i64 %39, i64* %6, align 8
  br label %22, !llvm.loop !193

40:                                               ; preds = %30
  br label %41

41:                                               ; preds = %62, %40
  %42 = load i64, i64* %6, align 8
  %43 = icmp uge i64 %42, 24576
  br i1 %43, label %44, label %79

44:                                               ; preds = %41
  store i64 0, i64* %9, align 8
  store i64 0, i64* %10, align 8
  %45 = load i8*, i8** %8, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 8192
  store i8* %46, i8** %11, align 8
  br label %47

47:                                               ; preds = %58, %44
  %48 = load i8*, i8** %8, align 8
  %49 = load i64, i64* %7, align 8
  %50 = load i64, i64* %9, align 8
  %51 = load i64, i64* %10, align 8
  %52 = call { i64, i64, i64 } asm "crc32q\09($3), $0\0A\09crc32q\098192($3), $1\0A\09crc32q\0916384($3), $2", "=r,=r,=r,r,0,1,2,~{dirflag},~{fpsr},~{flags}"(i8* %48, i64 %49, i64 %50, i64 %51) #12, !srcloc !194
  %53 = extractvalue { i64, i64, i64 } %52, 0
  %54 = extractvalue { i64, i64, i64 } %52, 1
  %55 = extractvalue { i64, i64, i64 } %52, 2
  store i64 %53, i64* %7, align 8
  store i64 %54, i64* %9, align 8
  store i64 %55, i64* %10, align 8
  %56 = load i8*, i8** %8, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 8
  store i8* %57, i8** %8, align 8
  br label %58

58:                                               ; preds = %47
  %59 = load i8*, i8** %8, align 8
  %60 = load i8*, i8** %11, align 8
  %61 = icmp ult i8* %59, %60
  br i1 %61, label %47, label %62, !llvm.loop !195

62:                                               ; preds = %58
  %63 = load i64, i64* %7, align 8
  %64 = trunc i64 %63 to i32
  %65 = call i32 @crc32c_shift([256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @crc32c_long, i64 0, i64 0), i32 %64)
  %66 = zext i32 %65 to i64
  %67 = load i64, i64* %9, align 8
  %68 = xor i64 %66, %67
  store i64 %68, i64* %7, align 8
  %69 = load i64, i64* %7, align 8
  %70 = trunc i64 %69 to i32
  %71 = call i32 @crc32c_shift([256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @crc32c_long, i64 0, i64 0), i32 %70)
  %72 = zext i32 %71 to i64
  %73 = load i64, i64* %10, align 8
  %74 = xor i64 %72, %73
  store i64 %74, i64* %7, align 8
  %75 = load i8*, i8** %8, align 8
  %76 = getelementptr inbounds i8, i8* %75, i64 16384
  store i8* %76, i8** %8, align 8
  %77 = load i64, i64* %6, align 8
  %78 = sub i64 %77, 24576
  store i64 %78, i64* %6, align 8
  br label %41, !llvm.loop !196

79:                                               ; preds = %41
  br label %80

80:                                               ; preds = %101, %79
  %81 = load i64, i64* %6, align 8
  %82 = icmp uge i64 %81, 768
  br i1 %82, label %83, label %118

83:                                               ; preds = %80
  store i64 0, i64* %12, align 8
  store i64 0, i64* %13, align 8
  %84 = load i8*, i8** %8, align 8
  %85 = getelementptr inbounds i8, i8* %84, i64 256
  store i8* %85, i8** %14, align 8
  br label %86

86:                                               ; preds = %97, %83
  %87 = load i8*, i8** %8, align 8
  %88 = load i64, i64* %7, align 8
  %89 = load i64, i64* %12, align 8
  %90 = load i64, i64* %13, align 8
  %91 = call { i64, i64, i64 } asm "crc32q\09($3), $0\0A\09crc32q\09256($3), $1\0A\09crc32q\09512($3), $2", "=r,=r,=r,r,0,1,2,~{dirflag},~{fpsr},~{flags}"(i8* %87, i64 %88, i64 %89, i64 %90) #12, !srcloc !197
  %92 = extractvalue { i64, i64, i64 } %91, 0
  %93 = extractvalue { i64, i64, i64 } %91, 1
  %94 = extractvalue { i64, i64, i64 } %91, 2
  store i64 %92, i64* %7, align 8
  store i64 %93, i64* %12, align 8
  store i64 %94, i64* %13, align 8
  %95 = load i8*, i8** %8, align 8
  %96 = getelementptr inbounds i8, i8* %95, i64 8
  store i8* %96, i8** %8, align 8
  br label %97

97:                                               ; preds = %86
  %98 = load i8*, i8** %8, align 8
  %99 = load i8*, i8** %14, align 8
  %100 = icmp ult i8* %98, %99
  br i1 %100, label %86, label %101, !llvm.loop !198

101:                                              ; preds = %97
  %102 = load i64, i64* %7, align 8
  %103 = trunc i64 %102 to i32
  %104 = call i32 @crc32c_shift([256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @crc32c_short, i64 0, i64 0), i32 %103)
  %105 = zext i32 %104 to i64
  %106 = load i64, i64* %12, align 8
  %107 = xor i64 %105, %106
  store i64 %107, i64* %7, align 8
  %108 = load i64, i64* %7, align 8
  %109 = trunc i64 %108 to i32
  %110 = call i32 @crc32c_shift([256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @crc32c_short, i64 0, i64 0), i32 %109)
  %111 = zext i32 %110 to i64
  %112 = load i64, i64* %13, align 8
  %113 = xor i64 %111, %112
  store i64 %113, i64* %7, align 8
  %114 = load i8*, i8** %8, align 8
  %115 = getelementptr inbounds i8, i8* %114, i64 512
  store i8* %115, i8** %8, align 8
  %116 = load i64, i64* %6, align 8
  %117 = sub i64 %116, 768
  store i64 %117, i64* %6, align 8
  br label %80, !llvm.loop !199

118:                                              ; preds = %80
  %119 = load i8*, i8** %8, align 8
  %120 = load i64, i64* %6, align 8
  %121 = load i64, i64* %6, align 8
  %122 = and i64 %121, 7
  %123 = sub i64 %120, %122
  %124 = getelementptr inbounds i8, i8* %119, i64 %123
  store i8* %124, i8** %15, align 8
  br label %125

125:                                              ; preds = %129, %118
  %126 = load i8*, i8** %8, align 8
  %127 = load i8*, i8** %15, align 8
  %128 = icmp ult i8* %126, %127
  br i1 %128, label %129, label %135

129:                                              ; preds = %125
  %130 = load i8*, i8** %8, align 8
  %131 = load i64, i64* %7, align 8
  %132 = call i64 asm "crc32q\09($1), $0", "=r,r,0,~{dirflag},~{fpsr},~{flags}"(i8* %130, i64 %131) #12, !srcloc !200
  store i64 %132, i64* %7, align 8
  %133 = load i8*, i8** %8, align 8
  %134 = getelementptr inbounds i8, i8* %133, i64 8
  store i8* %134, i8** %8, align 8
  br label %125, !llvm.loop !201

135:                                              ; preds = %125
  %136 = load i64, i64* %6, align 8
  %137 = and i64 %136, 7
  store i64 %137, i64* %6, align 8
  br label %138

138:                                              ; preds = %141, %135
  %139 = load i64, i64* %6, align 8
  %140 = icmp ne i64 %139, 0
  br i1 %140, label %141, label %149

141:                                              ; preds = %138
  %142 = load i8*, i8** %8, align 8
  %143 = load i64, i64* %7, align 8
  %144 = call i64 asm "crc32b\09($1), $0", "=r,r,0,~{dirflag},~{fpsr},~{flags}"(i8* %142, i64 %143) #12, !srcloc !202
  store i64 %144, i64* %7, align 8
  %145 = load i8*, i8** %8, align 8
  %146 = getelementptr inbounds i8, i8* %145, i32 1
  store i8* %146, i8** %8, align 8
  %147 = load i64, i64* %6, align 8
  %148 = add i64 %147, -1
  store i64 %148, i64* %6, align 8
  br label %138, !llvm.loop !203

149:                                              ; preds = %138
  %150 = load i64, i64* %7, align 8
  %151 = xor i64 %150, -1
  %152 = trunc i64 %151 to i32
  ret i32 %152
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @crc32c_sw(i32 %0, i8* %1, i64 %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  store i32 %0, i32* %5, align 4
  store i8* %1, i8** %6, align 8
  store i64 %2, i64* %7, align 8
  %8 = load i8, i8* bitcast (i32* @crc32c_sw.little to i8*), align 4
  %9 = icmp ne i8 %8, 0
  br i1 %9, label %10, label %15

10:                                               ; preds = %3
  %11 = load i32, i32* %5, align 4
  %12 = load i8*, i8** %6, align 8
  %13 = load i64, i64* %7, align 8
  %14 = call i32 @crc32c_sw_little(i32 %11, i8* %12, i64 %13)
  store i32 %14, i32* %4, align 4
  br label %20

15:                                               ; preds = %3
  %16 = load i32, i32* %5, align 4
  %17 = load i8*, i8** %6, align 8
  %18 = load i64, i64* %7, align 8
  %19 = call i32 @crc32c_sw_big(i32 %16, i8* %17, i64 %18)
  store i32 %19, i32* %4, align 4
  br label %20

20:                                               ; preds = %15, %10
  %21 = load i32, i32* %4, align 4
  ret i32 %21
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @crc32c_sw_little(i32 %0, i8* %1, i64 %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  store i32 %0, i32* %4, align 4
  store i8* %1, i8** %5, align 8
  store i64 %2, i64* %6, align 8
  %9 = load i8*, i8** %5, align 8
  store i8* %9, i8** %7, align 8
  %10 = call i32 @pthread_once(i32* @crc32c_once_little, void ()* @crc32c_init_sw_little)
  %11 = load i32, i32* %4, align 4
  %12 = xor i32 %11, -1
  store i32 %12, i32* %4, align 4
  br label %13

13:                                               ; preds = %23, %3
  %14 = load i64, i64* %6, align 8
  %15 = icmp ne i64 %14, 0
  br i1 %15, label %16, label %21

16:                                               ; preds = %13
  %17 = load i8*, i8** %7, align 8
  %18 = ptrtoint i8* %17 to i64
  %19 = and i64 %18, 7
  %20 = icmp ne i64 %19, 0
  br label %21

21:                                               ; preds = %16, %13
  %22 = phi i1 [ false, %13 ], [ %20, %16 ]
  br i1 %22, label %23, label %39

23:                                               ; preds = %21
  %24 = load i32, i32* %4, align 4
  %25 = load i8*, i8** %7, align 8
  %26 = getelementptr inbounds i8, i8* %25, i32 1
  store i8* %26, i8** %7, align 8
  %27 = load i8, i8* %25, align 1
  %28 = zext i8 %27 to i32
  %29 = xor i32 %24, %28
  %30 = and i32 %29, 255
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([8 x [256 x i32]], [8 x [256 x i32]]* @crc32c_table_little, i64 0, i64 0), i64 0, i64 %31
  %33 = load i32, i32* %32, align 4
  %34 = load i32, i32* %4, align 4
  %35 = lshr i32 %34, 8
  %36 = xor i32 %33, %35
  store i32 %36, i32* %4, align 4
  %37 = load i64, i64* %6, align 8
  %38 = add i64 %37, -1
  store i64 %38, i64* %6, align 8
  br label %13, !llvm.loop !204

39:                                               ; preds = %21
  %40 = load i64, i64* %6, align 8
  %41 = icmp uge i64 %40, 8
  br i1 %41, label %42, label %107

42:                                               ; preds = %39
  %43 = load i32, i32* %4, align 4
  %44 = zext i32 %43 to i64
  store i64 %44, i64* %8, align 8
  br label %45

45:                                               ; preds = %101, %42
  %46 = load i8*, i8** %7, align 8
  %47 = bitcast i8* %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = load i64, i64* %8, align 8
  %50 = xor i64 %49, %48
  store i64 %50, i64* %8, align 8
  %51 = load i64, i64* %8, align 8
  %52 = and i64 %51, 255
  %53 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([8 x [256 x i32]], [8 x [256 x i32]]* @crc32c_table_little, i64 0, i64 7), i64 0, i64 %52
  %54 = load i32, i32* %53, align 4
  %55 = load i64, i64* %8, align 8
  %56 = lshr i64 %55, 8
  %57 = and i64 %56, 255
  %58 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([8 x [256 x i32]], [8 x [256 x i32]]* @crc32c_table_little, i64 0, i64 6), i64 0, i64 %57
  %59 = load i32, i32* %58, align 4
  %60 = xor i32 %54, %59
  %61 = load i64, i64* %8, align 8
  %62 = lshr i64 %61, 16
  %63 = and i64 %62, 255
  %64 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([8 x [256 x i32]], [8 x [256 x i32]]* @crc32c_table_little, i64 0, i64 5), i64 0, i64 %63
  %65 = load i32, i32* %64, align 4
  %66 = xor i32 %60, %65
  %67 = load i64, i64* %8, align 8
  %68 = lshr i64 %67, 24
  %69 = and i64 %68, 255
  %70 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([8 x [256 x i32]], [8 x [256 x i32]]* @crc32c_table_little, i64 0, i64 4), i64 0, i64 %69
  %71 = load i32, i32* %70, align 4
  %72 = xor i32 %66, %71
  %73 = load i64, i64* %8, align 8
  %74 = lshr i64 %73, 32
  %75 = and i64 %74, 255
  %76 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([8 x [256 x i32]], [8 x [256 x i32]]* @crc32c_table_little, i64 0, i64 3), i64 0, i64 %75
  %77 = load i32, i32* %76, align 4
  %78 = xor i32 %72, %77
  %79 = load i64, i64* %8, align 8
  %80 = lshr i64 %79, 40
  %81 = and i64 %80, 255
  %82 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([8 x [256 x i32]], [8 x [256 x i32]]* @crc32c_table_little, i64 0, i64 2), i64 0, i64 %81
  %83 = load i32, i32* %82, align 4
  %84 = xor i32 %78, %83
  %85 = load i64, i64* %8, align 8
  %86 = lshr i64 %85, 48
  %87 = and i64 %86, 255
  %88 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([8 x [256 x i32]], [8 x [256 x i32]]* @crc32c_table_little, i64 0, i64 1), i64 0, i64 %87
  %89 = load i32, i32* %88, align 4
  %90 = xor i32 %84, %89
  %91 = load i64, i64* %8, align 8
  %92 = lshr i64 %91, 56
  %93 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([8 x [256 x i32]], [8 x [256 x i32]]* @crc32c_table_little, i64 0, i64 0), i64 0, i64 %92
  %94 = load i32, i32* %93, align 4
  %95 = xor i32 %90, %94
  %96 = zext i32 %95 to i64
  store i64 %96, i64* %8, align 8
  %97 = load i8*, i8** %7, align 8
  %98 = getelementptr inbounds i8, i8* %97, i64 8
  store i8* %98, i8** %7, align 8
  %99 = load i64, i64* %6, align 8
  %100 = sub i64 %99, 8
  store i64 %100, i64* %6, align 8
  br label %101

101:                                              ; preds = %45
  %102 = load i64, i64* %6, align 8
  %103 = icmp uge i64 %102, 8
  br i1 %103, label %45, label %104, !llvm.loop !205

104:                                              ; preds = %101
  %105 = load i64, i64* %8, align 8
  %106 = trunc i64 %105 to i32
  store i32 %106, i32* %4, align 4
  br label %107

107:                                              ; preds = %104, %39
  br label %108

108:                                              ; preds = %111, %107
  %109 = load i64, i64* %6, align 8
  %110 = icmp ne i64 %109, 0
  br i1 %110, label %111, label %127

111:                                              ; preds = %108
  %112 = load i32, i32* %4, align 4
  %113 = load i8*, i8** %7, align 8
  %114 = getelementptr inbounds i8, i8* %113, i32 1
  store i8* %114, i8** %7, align 8
  %115 = load i8, i8* %113, align 1
  %116 = zext i8 %115 to i32
  %117 = xor i32 %112, %116
  %118 = and i32 %117, 255
  %119 = zext i32 %118 to i64
  %120 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([8 x [256 x i32]], [8 x [256 x i32]]* @crc32c_table_little, i64 0, i64 0), i64 0, i64 %119
  %121 = load i32, i32* %120, align 4
  %122 = load i32, i32* %4, align 4
  %123 = lshr i32 %122, 8
  %124 = xor i32 %121, %123
  store i32 %124, i32* %4, align 4
  %125 = load i64, i64* %6, align 8
  %126 = add i64 %125, -1
  store i64 %126, i64* %6, align 8
  br label %108, !llvm.loop !206

127:                                              ; preds = %108
  %128 = load i32, i32* %4, align 4
  %129 = xor i32 %128, -1
  ret i32 %129
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @crc32c_sw_big(i32 %0, i8* %1, i64 %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  store i32 %0, i32* %4, align 4
  store i8* %1, i8** %5, align 8
  store i64 %2, i64* %6, align 8
  %9 = load i8*, i8** %5, align 8
  store i8* %9, i8** %7, align 8
  %10 = call i32 @pthread_once(i32* @crc32c_once_big, void ()* @crc32c_init_sw_big)
  %11 = load i32, i32* %4, align 4
  %12 = xor i32 %11, -1
  store i32 %12, i32* %4, align 4
  br label %13

13:                                               ; preds = %23, %3
  %14 = load i64, i64* %6, align 8
  %15 = icmp ne i64 %14, 0
  br i1 %15, label %16, label %21

16:                                               ; preds = %13
  %17 = load i8*, i8** %7, align 8
  %18 = ptrtoint i8* %17 to i64
  %19 = and i64 %18, 7
  %20 = icmp ne i64 %19, 0
  br label %21

21:                                               ; preds = %16, %13
  %22 = phi i1 [ false, %13 ], [ %20, %16 ]
  br i1 %22, label %23, label %39

23:                                               ; preds = %21
  %24 = load i32, i32* %4, align 4
  %25 = load i8*, i8** %7, align 8
  %26 = getelementptr inbounds i8, i8* %25, i32 1
  store i8* %26, i8** %7, align 8
  %27 = load i8, i8* %25, align 1
  %28 = zext i8 %27 to i32
  %29 = xor i32 %24, %28
  %30 = and i32 %29, 255
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds [256 x i32], [256 x i32]* @crc32c_table_big_byte, i64 0, i64 %31
  %33 = load i32, i32* %32, align 4
  %34 = load i32, i32* %4, align 4
  %35 = lshr i32 %34, 8
  %36 = xor i32 %33, %35
  store i32 %36, i32* %4, align 4
  %37 = load i64, i64* %6, align 8
  %38 = add i64 %37, -1
  store i64 %38, i64* %6, align 8
  br label %13, !llvm.loop !207

39:                                               ; preds = %21
  %40 = load i64, i64* %6, align 8
  %41 = icmp uge i64 %40, 8
  br i1 %41, label %42, label %108

42:                                               ; preds = %39
  %43 = load i32, i32* %4, align 4
  %44 = zext i32 %43 to i64
  %45 = call i64 @llvm.bswap.i64(i64 %44)
  store i64 %45, i64* %8, align 8
  br label %46

46:                                               ; preds = %101, %42
  %47 = load i8*, i8** %7, align 8
  %48 = bitcast i8* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = load i64, i64* %8, align 8
  %51 = xor i64 %50, %49
  store i64 %51, i64* %8, align 8
  %52 = load i64, i64* %8, align 8
  %53 = and i64 %52, 255
  %54 = getelementptr inbounds [256 x i64], [256 x i64]* getelementptr inbounds ([8 x [256 x i64]], [8 x [256 x i64]]* @crc32c_table_big, i64 0, i64 0), i64 0, i64 %53
  %55 = load i64, i64* %54, align 8
  %56 = load i64, i64* %8, align 8
  %57 = lshr i64 %56, 8
  %58 = and i64 %57, 255
  %59 = getelementptr inbounds [256 x i64], [256 x i64]* getelementptr inbounds ([8 x [256 x i64]], [8 x [256 x i64]]* @crc32c_table_big, i64 0, i64 1), i64 0, i64 %58
  %60 = load i64, i64* %59, align 8
  %61 = xor i64 %55, %60
  %62 = load i64, i64* %8, align 8
  %63 = lshr i64 %62, 16
  %64 = and i64 %63, 255
  %65 = getelementptr inbounds [256 x i64], [256 x i64]* getelementptr inbounds ([8 x [256 x i64]], [8 x [256 x i64]]* @crc32c_table_big, i64 0, i64 2), i64 0, i64 %64
  %66 = load i64, i64* %65, align 8
  %67 = xor i64 %61, %66
  %68 = load i64, i64* %8, align 8
  %69 = lshr i64 %68, 24
  %70 = and i64 %69, 255
  %71 = getelementptr inbounds [256 x i64], [256 x i64]* getelementptr inbounds ([8 x [256 x i64]], [8 x [256 x i64]]* @crc32c_table_big, i64 0, i64 3), i64 0, i64 %70
  %72 = load i64, i64* %71, align 8
  %73 = xor i64 %67, %72
  %74 = load i64, i64* %8, align 8
  %75 = lshr i64 %74, 32
  %76 = and i64 %75, 255
  %77 = getelementptr inbounds [256 x i64], [256 x i64]* getelementptr inbounds ([8 x [256 x i64]], [8 x [256 x i64]]* @crc32c_table_big, i64 0, i64 4), i64 0, i64 %76
  %78 = load i64, i64* %77, align 8
  %79 = xor i64 %73, %78
  %80 = load i64, i64* %8, align 8
  %81 = lshr i64 %80, 40
  %82 = and i64 %81, 255
  %83 = getelementptr inbounds [256 x i64], [256 x i64]* getelementptr inbounds ([8 x [256 x i64]], [8 x [256 x i64]]* @crc32c_table_big, i64 0, i64 5), i64 0, i64 %82
  %84 = load i64, i64* %83, align 8
  %85 = xor i64 %79, %84
  %86 = load i64, i64* %8, align 8
  %87 = lshr i64 %86, 48
  %88 = and i64 %87, 255
  %89 = getelementptr inbounds [256 x i64], [256 x i64]* getelementptr inbounds ([8 x [256 x i64]], [8 x [256 x i64]]* @crc32c_table_big, i64 0, i64 6), i64 0, i64 %88
  %90 = load i64, i64* %89, align 8
  %91 = xor i64 %85, %90
  %92 = load i64, i64* %8, align 8
  %93 = lshr i64 %92, 56
  %94 = getelementptr inbounds [256 x i64], [256 x i64]* getelementptr inbounds ([8 x [256 x i64]], [8 x [256 x i64]]* @crc32c_table_big, i64 0, i64 7), i64 0, i64 %93
  %95 = load i64, i64* %94, align 8
  %96 = xor i64 %91, %95
  store i64 %96, i64* %8, align 8
  %97 = load i8*, i8** %7, align 8
  %98 = getelementptr inbounds i8, i8* %97, i64 8
  store i8* %98, i8** %7, align 8
  %99 = load i64, i64* %6, align 8
  %100 = sub i64 %99, 8
  store i64 %100, i64* %6, align 8
  br label %101

101:                                              ; preds = %46
  %102 = load i64, i64* %6, align 8
  %103 = icmp uge i64 %102, 8
  br i1 %103, label %46, label %104, !llvm.loop !208

104:                                              ; preds = %101
  %105 = load i64, i64* %8, align 8
  %106 = call i64 @llvm.bswap.i64(i64 %105)
  %107 = trunc i64 %106 to i32
  store i32 %107, i32* %4, align 4
  br label %108

108:                                              ; preds = %104, %39
  br label %109

109:                                              ; preds = %112, %108
  %110 = load i64, i64* %6, align 8
  %111 = icmp ne i64 %110, 0
  br i1 %111, label %112, label %128

112:                                              ; preds = %109
  %113 = load i32, i32* %4, align 4
  %114 = load i8*, i8** %7, align 8
  %115 = getelementptr inbounds i8, i8* %114, i32 1
  store i8* %115, i8** %7, align 8
  %116 = load i8, i8* %114, align 1
  %117 = zext i8 %116 to i32
  %118 = xor i32 %113, %117
  %119 = and i32 %118, 255
  %120 = zext i32 %119 to i64
  %121 = getelementptr inbounds [256 x i32], [256 x i32]* @crc32c_table_big_byte, i64 0, i64 %120
  %122 = load i32, i32* %121, align 4
  %123 = load i32, i32* %4, align 4
  %124 = lshr i32 %123, 8
  %125 = xor i32 %122, %124
  store i32 %125, i32* %4, align 4
  %126 = load i64, i64* %6, align 8
  %127 = add i64 %126, -1
  store i64 %127, i64* %6, align 8
  br label %109, !llvm.loop !209

128:                                              ; preds = %109
  %129 = load i32, i32* %4, align 4
  %130 = xor i32 %129, -1
  ret i32 %130
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @crc32c_init_sw_big() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  br label %6

6:                                                ; preds = %111, %0
  %7 = load i32, i32* %1, align 4
  %8 = icmp ult i32 %7, 256
  br i1 %8, label %9, label %114

9:                                                ; preds = %6
  %10 = load i32, i32* %1, align 4
  store i32 %10, i32* %2, align 4
  %11 = load i32, i32* %2, align 4
  %12 = and i32 %11, 1
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %14, label %18

14:                                               ; preds = %9
  %15 = load i32, i32* %2, align 4
  %16 = lshr i32 %15, 1
  %17 = xor i32 %16, -2097792136
  br label %21

18:                                               ; preds = %9
  %19 = load i32, i32* %2, align 4
  %20 = lshr i32 %19, 1
  br label %21

21:                                               ; preds = %18, %14
  %22 = phi i32 [ %17, %14 ], [ %20, %18 ]
  store i32 %22, i32* %2, align 4
  %23 = load i32, i32* %2, align 4
  %24 = and i32 %23, 1
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %26, label %30

26:                                               ; preds = %21
  %27 = load i32, i32* %2, align 4
  %28 = lshr i32 %27, 1
  %29 = xor i32 %28, -2097792136
  br label %33

30:                                               ; preds = %21
  %31 = load i32, i32* %2, align 4
  %32 = lshr i32 %31, 1
  br label %33

33:                                               ; preds = %30, %26
  %34 = phi i32 [ %29, %26 ], [ %32, %30 ]
  store i32 %34, i32* %2, align 4
  %35 = load i32, i32* %2, align 4
  %36 = and i32 %35, 1
  %37 = icmp ne i32 %36, 0
  br i1 %37, label %38, label %42

38:                                               ; preds = %33
  %39 = load i32, i32* %2, align 4
  %40 = lshr i32 %39, 1
  %41 = xor i32 %40, -2097792136
  br label %45

42:                                               ; preds = %33
  %43 = load i32, i32* %2, align 4
  %44 = lshr i32 %43, 1
  br label %45

45:                                               ; preds = %42, %38
  %46 = phi i32 [ %41, %38 ], [ %44, %42 ]
  store i32 %46, i32* %2, align 4
  %47 = load i32, i32* %2, align 4
  %48 = and i32 %47, 1
  %49 = icmp ne i32 %48, 0
  br i1 %49, label %50, label %54

50:                                               ; preds = %45
  %51 = load i32, i32* %2, align 4
  %52 = lshr i32 %51, 1
  %53 = xor i32 %52, -2097792136
  br label %57

54:                                               ; preds = %45
  %55 = load i32, i32* %2, align 4
  %56 = lshr i32 %55, 1
  br label %57

57:                                               ; preds = %54, %50
  %58 = phi i32 [ %53, %50 ], [ %56, %54 ]
  store i32 %58, i32* %2, align 4
  %59 = load i32, i32* %2, align 4
  %60 = and i32 %59, 1
  %61 = icmp ne i32 %60, 0
  br i1 %61, label %62, label %66

62:                                               ; preds = %57
  %63 = load i32, i32* %2, align 4
  %64 = lshr i32 %63, 1
  %65 = xor i32 %64, -2097792136
  br label %69

66:                                               ; preds = %57
  %67 = load i32, i32* %2, align 4
  %68 = lshr i32 %67, 1
  br label %69

69:                                               ; preds = %66, %62
  %70 = phi i32 [ %65, %62 ], [ %68, %66 ]
  store i32 %70, i32* %2, align 4
  %71 = load i32, i32* %2, align 4
  %72 = and i32 %71, 1
  %73 = icmp ne i32 %72, 0
  br i1 %73, label %74, label %78

74:                                               ; preds = %69
  %75 = load i32, i32* %2, align 4
  %76 = lshr i32 %75, 1
  %77 = xor i32 %76, -2097792136
  br label %81

78:                                               ; preds = %69
  %79 = load i32, i32* %2, align 4
  %80 = lshr i32 %79, 1
  br label %81

81:                                               ; preds = %78, %74
  %82 = phi i32 [ %77, %74 ], [ %80, %78 ]
  store i32 %82, i32* %2, align 4
  %83 = load i32, i32* %2, align 4
  %84 = and i32 %83, 1
  %85 = icmp ne i32 %84, 0
  br i1 %85, label %86, label %90

86:                                               ; preds = %81
  %87 = load i32, i32* %2, align 4
  %88 = lshr i32 %87, 1
  %89 = xor i32 %88, -2097792136
  br label %93

90:                                               ; preds = %81
  %91 = load i32, i32* %2, align 4
  %92 = lshr i32 %91, 1
  br label %93

93:                                               ; preds = %90, %86
  %94 = phi i32 [ %89, %86 ], [ %92, %90 ]
  store i32 %94, i32* %2, align 4
  %95 = load i32, i32* %2, align 4
  %96 = and i32 %95, 1
  %97 = icmp ne i32 %96, 0
  br i1 %97, label %98, label %102

98:                                               ; preds = %93
  %99 = load i32, i32* %2, align 4
  %100 = lshr i32 %99, 1
  %101 = xor i32 %100, -2097792136
  br label %105

102:                                              ; preds = %93
  %103 = load i32, i32* %2, align 4
  %104 = lshr i32 %103, 1
  br label %105

105:                                              ; preds = %102, %98
  %106 = phi i32 [ %101, %98 ], [ %104, %102 ]
  store i32 %106, i32* %2, align 4
  %107 = load i32, i32* %2, align 4
  %108 = load i32, i32* %1, align 4
  %109 = zext i32 %108 to i64
  %110 = getelementptr inbounds [256 x i32], [256 x i32]* @crc32c_table_big_byte, i64 0, i64 %109
  store i32 %107, i32* %110, align 4
  br label %111

111:                                              ; preds = %105
  %112 = load i32, i32* %1, align 4
  %113 = add i32 %112, 1
  store i32 %113, i32* %1, align 4
  br label %6, !llvm.loop !210

114:                                              ; preds = %6
  store i32 0, i32* %3, align 4
  br label %115

115:                                              ; preds = %154, %114
  %116 = load i32, i32* %3, align 4
  %117 = icmp ult i32 %116, 256
  br i1 %117, label %118, label %157

118:                                              ; preds = %115
  %119 = load i32, i32* %3, align 4
  %120 = zext i32 %119 to i64
  %121 = getelementptr inbounds [256 x i32], [256 x i32]* @crc32c_table_big_byte, i64 0, i64 %120
  %122 = load i32, i32* %121, align 4
  store i32 %122, i32* %4, align 4
  %123 = load i32, i32* %4, align 4
  %124 = zext i32 %123 to i64
  %125 = call i64 @llvm.bswap.i64(i64 %124)
  %126 = load i32, i32* %3, align 4
  %127 = zext i32 %126 to i64
  %128 = getelementptr inbounds [256 x i64], [256 x i64]* getelementptr inbounds ([8 x [256 x i64]], [8 x [256 x i64]]* @crc32c_table_big, i64 0, i64 0), i64 0, i64 %127
  store i64 %125, i64* %128, align 8
  store i32 1, i32* %5, align 4
  br label %129

129:                                              ; preds = %150, %118
  %130 = load i32, i32* %5, align 4
  %131 = icmp ult i32 %130, 8
  br i1 %131, label %132, label %153

132:                                              ; preds = %129
  %133 = load i32, i32* %4, align 4
  %134 = and i32 %133, 255
  %135 = zext i32 %134 to i64
  %136 = getelementptr inbounds [256 x i32], [256 x i32]* @crc32c_table_big_byte, i64 0, i64 %135
  %137 = load i32, i32* %136, align 4
  %138 = load i32, i32* %4, align 4
  %139 = lshr i32 %138, 8
  %140 = xor i32 %137, %139
  store i32 %140, i32* %4, align 4
  %141 = load i32, i32* %4, align 4
  %142 = zext i32 %141 to i64
  %143 = call i64 @llvm.bswap.i64(i64 %142)
  %144 = load i32, i32* %5, align 4
  %145 = zext i32 %144 to i64
  %146 = getelementptr inbounds [8 x [256 x i64]], [8 x [256 x i64]]* @crc32c_table_big, i64 0, i64 %145
  %147 = load i32, i32* %3, align 4
  %148 = zext i32 %147 to i64
  %149 = getelementptr inbounds [256 x i64], [256 x i64]* %146, i64 0, i64 %148
  store i64 %143, i64* %149, align 8
  br label %150

150:                                              ; preds = %132
  %151 = load i32, i32* %5, align 4
  %152 = add i32 %151, 1
  store i32 %152, i32* %5, align 4
  br label %129, !llvm.loop !211

153:                                              ; preds = %129
  br label %154

154:                                              ; preds = %153
  %155 = load i32, i32* %3, align 4
  %156 = add i32 %155, 1
  store i32 %156, i32* %3, align 4
  br label %115, !llvm.loop !212

157:                                              ; preds = %115
  ret void
}

declare dso_local i32 @pthread_once(i32*, void ()*) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.bswap.i64(i64) #9

; Function Attrs: noinline nounwind optnone uwtable
define internal void @crc32c_init_sw_little() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  br label %6

6:                                                ; preds = %111, %0
  %7 = load i32, i32* %1, align 4
  %8 = icmp ult i32 %7, 256
  br i1 %8, label %9, label %114

9:                                                ; preds = %6
  %10 = load i32, i32* %1, align 4
  store i32 %10, i32* %2, align 4
  %11 = load i32, i32* %2, align 4
  %12 = and i32 %11, 1
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %14, label %18

14:                                               ; preds = %9
  %15 = load i32, i32* %2, align 4
  %16 = lshr i32 %15, 1
  %17 = xor i32 %16, -2097792136
  br label %21

18:                                               ; preds = %9
  %19 = load i32, i32* %2, align 4
  %20 = lshr i32 %19, 1
  br label %21

21:                                               ; preds = %18, %14
  %22 = phi i32 [ %17, %14 ], [ %20, %18 ]
  store i32 %22, i32* %2, align 4
  %23 = load i32, i32* %2, align 4
  %24 = and i32 %23, 1
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %26, label %30

26:                                               ; preds = %21
  %27 = load i32, i32* %2, align 4
  %28 = lshr i32 %27, 1
  %29 = xor i32 %28, -2097792136
  br label %33

30:                                               ; preds = %21
  %31 = load i32, i32* %2, align 4
  %32 = lshr i32 %31, 1
  br label %33

33:                                               ; preds = %30, %26
  %34 = phi i32 [ %29, %26 ], [ %32, %30 ]
  store i32 %34, i32* %2, align 4
  %35 = load i32, i32* %2, align 4
  %36 = and i32 %35, 1
  %37 = icmp ne i32 %36, 0
  br i1 %37, label %38, label %42

38:                                               ; preds = %33
  %39 = load i32, i32* %2, align 4
  %40 = lshr i32 %39, 1
  %41 = xor i32 %40, -2097792136
  br label %45

42:                                               ; preds = %33
  %43 = load i32, i32* %2, align 4
  %44 = lshr i32 %43, 1
  br label %45

45:                                               ; preds = %42, %38
  %46 = phi i32 [ %41, %38 ], [ %44, %42 ]
  store i32 %46, i32* %2, align 4
  %47 = load i32, i32* %2, align 4
  %48 = and i32 %47, 1
  %49 = icmp ne i32 %48, 0
  br i1 %49, label %50, label %54

50:                                               ; preds = %45
  %51 = load i32, i32* %2, align 4
  %52 = lshr i32 %51, 1
  %53 = xor i32 %52, -2097792136
  br label %57

54:                                               ; preds = %45
  %55 = load i32, i32* %2, align 4
  %56 = lshr i32 %55, 1
  br label %57

57:                                               ; preds = %54, %50
  %58 = phi i32 [ %53, %50 ], [ %56, %54 ]
  store i32 %58, i32* %2, align 4
  %59 = load i32, i32* %2, align 4
  %60 = and i32 %59, 1
  %61 = icmp ne i32 %60, 0
  br i1 %61, label %62, label %66

62:                                               ; preds = %57
  %63 = load i32, i32* %2, align 4
  %64 = lshr i32 %63, 1
  %65 = xor i32 %64, -2097792136
  br label %69

66:                                               ; preds = %57
  %67 = load i32, i32* %2, align 4
  %68 = lshr i32 %67, 1
  br label %69

69:                                               ; preds = %66, %62
  %70 = phi i32 [ %65, %62 ], [ %68, %66 ]
  store i32 %70, i32* %2, align 4
  %71 = load i32, i32* %2, align 4
  %72 = and i32 %71, 1
  %73 = icmp ne i32 %72, 0
  br i1 %73, label %74, label %78

74:                                               ; preds = %69
  %75 = load i32, i32* %2, align 4
  %76 = lshr i32 %75, 1
  %77 = xor i32 %76, -2097792136
  br label %81

78:                                               ; preds = %69
  %79 = load i32, i32* %2, align 4
  %80 = lshr i32 %79, 1
  br label %81

81:                                               ; preds = %78, %74
  %82 = phi i32 [ %77, %74 ], [ %80, %78 ]
  store i32 %82, i32* %2, align 4
  %83 = load i32, i32* %2, align 4
  %84 = and i32 %83, 1
  %85 = icmp ne i32 %84, 0
  br i1 %85, label %86, label %90

86:                                               ; preds = %81
  %87 = load i32, i32* %2, align 4
  %88 = lshr i32 %87, 1
  %89 = xor i32 %88, -2097792136
  br label %93

90:                                               ; preds = %81
  %91 = load i32, i32* %2, align 4
  %92 = lshr i32 %91, 1
  br label %93

93:                                               ; preds = %90, %86
  %94 = phi i32 [ %89, %86 ], [ %92, %90 ]
  store i32 %94, i32* %2, align 4
  %95 = load i32, i32* %2, align 4
  %96 = and i32 %95, 1
  %97 = icmp ne i32 %96, 0
  br i1 %97, label %98, label %102

98:                                               ; preds = %93
  %99 = load i32, i32* %2, align 4
  %100 = lshr i32 %99, 1
  %101 = xor i32 %100, -2097792136
  br label %105

102:                                              ; preds = %93
  %103 = load i32, i32* %2, align 4
  %104 = lshr i32 %103, 1
  br label %105

105:                                              ; preds = %102, %98
  %106 = phi i32 [ %101, %98 ], [ %104, %102 ]
  store i32 %106, i32* %2, align 4
  %107 = load i32, i32* %2, align 4
  %108 = load i32, i32* %1, align 4
  %109 = zext i32 %108 to i64
  %110 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([8 x [256 x i32]], [8 x [256 x i32]]* @crc32c_table_little, i64 0, i64 0), i64 0, i64 %109
  store i32 %107, i32* %110, align 4
  br label %111

111:                                              ; preds = %105
  %112 = load i32, i32* %1, align 4
  %113 = add i32 %112, 1
  store i32 %113, i32* %1, align 4
  br label %6, !llvm.loop !213

114:                                              ; preds = %6
  store i32 0, i32* %3, align 4
  br label %115

115:                                              ; preds = %146, %114
  %116 = load i32, i32* %3, align 4
  %117 = icmp ult i32 %116, 256
  br i1 %117, label %118, label %149

118:                                              ; preds = %115
  %119 = load i32, i32* %3, align 4
  %120 = zext i32 %119 to i64
  %121 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([8 x [256 x i32]], [8 x [256 x i32]]* @crc32c_table_little, i64 0, i64 0), i64 0, i64 %120
  %122 = load i32, i32* %121, align 4
  store i32 %122, i32* %4, align 4
  store i32 1, i32* %5, align 4
  br label %123

123:                                              ; preds = %142, %118
  %124 = load i32, i32* %5, align 4
  %125 = icmp ult i32 %124, 8
  br i1 %125, label %126, label %145

126:                                              ; preds = %123
  %127 = load i32, i32* %4, align 4
  %128 = and i32 %127, 255
  %129 = zext i32 %128 to i64
  %130 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([8 x [256 x i32]], [8 x [256 x i32]]* @crc32c_table_little, i64 0, i64 0), i64 0, i64 %129
  %131 = load i32, i32* %130, align 4
  %132 = load i32, i32* %4, align 4
  %133 = lshr i32 %132, 8
  %134 = xor i32 %131, %133
  store i32 %134, i32* %4, align 4
  %135 = load i32, i32* %4, align 4
  %136 = load i32, i32* %5, align 4
  %137 = zext i32 %136 to i64
  %138 = getelementptr inbounds [8 x [256 x i32]], [8 x [256 x i32]]* @crc32c_table_little, i64 0, i64 %137
  %139 = load i32, i32* %3, align 4
  %140 = zext i32 %139 to i64
  %141 = getelementptr inbounds [256 x i32], [256 x i32]* %138, i64 0, i64 %140
  store i32 %135, i32* %141, align 4
  br label %142

142:                                              ; preds = %126
  %143 = load i32, i32* %5, align 4
  %144 = add i32 %143, 1
  store i32 %144, i32* %5, align 4
  br label %123, !llvm.loop !214

145:                                              ; preds = %123
  br label %146

146:                                              ; preds = %145
  %147 = load i32, i32* %3, align 4
  %148 = add i32 %147, 1
  store i32 %148, i32* %3, align 4
  br label %115, !llvm.loop !215

149:                                              ; preds = %115
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @crc32c_init_hw() #0 {
  call void @crc32c_zeros([256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @crc32c_long, i64 0, i64 0), i64 8192)
  call void @crc32c_zeros([256 x i32]* getelementptr inbounds ([4 x [256 x i32]], [4 x [256 x i32]]* @crc32c_short, i64 0, i64 0), i64 256)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @crc32c_shift([256 x i32]* %0, i32 %1) #0 {
  %3 = alloca [256 x i32]*, align 8
  %4 = alloca i32, align 4
  store [256 x i32]* %0, [256 x i32]** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load [256 x i32]*, [256 x i32]** %3, align 8
  %6 = getelementptr inbounds [256 x i32], [256 x i32]* %5, i64 0
  %7 = load i32, i32* %4, align 4
  %8 = and i32 %7, 255
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds [256 x i32], [256 x i32]* %6, i64 0, i64 %9
  %11 = load i32, i32* %10, align 4
  %12 = load [256 x i32]*, [256 x i32]** %3, align 8
  %13 = getelementptr inbounds [256 x i32], [256 x i32]* %12, i64 1
  %14 = load i32, i32* %4, align 4
  %15 = lshr i32 %14, 8
  %16 = and i32 %15, 255
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds [256 x i32], [256 x i32]* %13, i64 0, i64 %17
  %19 = load i32, i32* %18, align 4
  %20 = xor i32 %11, %19
  %21 = load [256 x i32]*, [256 x i32]** %3, align 8
  %22 = getelementptr inbounds [256 x i32], [256 x i32]* %21, i64 2
  %23 = load i32, i32* %4, align 4
  %24 = lshr i32 %23, 16
  %25 = and i32 %24, 255
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds [256 x i32], [256 x i32]* %22, i64 0, i64 %26
  %28 = load i32, i32* %27, align 4
  %29 = xor i32 %20, %28
  %30 = load [256 x i32]*, [256 x i32]** %3, align 8
  %31 = getelementptr inbounds [256 x i32], [256 x i32]* %30, i64 3
  %32 = load i32, i32* %4, align 4
  %33 = lshr i32 %32, 24
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds [256 x i32], [256 x i32]* %31, i64 0, i64 %34
  %36 = load i32, i32* %35, align 4
  %37 = xor i32 %29, %36
  ret i32 %37
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @crc32c_zeros([256 x i32]* %0, i64 %1) #0 {
  %3 = alloca [256 x i32]*, align 8
  %4 = alloca i64, align 8
  %5 = alloca [32 x i32], align 16
  %6 = alloca i32, align 4
  store [256 x i32]* %0, [256 x i32]** %3, align 8
  store i64 %1, i64* %4, align 8
  %7 = getelementptr inbounds [32 x i32], [32 x i32]* %5, i64 0, i64 0
  %8 = load i64, i64* %4, align 8
  call void @crc32c_zeros_op(i32* %7, i64 %8)
  store i32 0, i32* %6, align 4
  br label %9

9:                                                ; preds = %48, %2
  %10 = load i32, i32* %6, align 4
  %11 = icmp ult i32 %10, 256
  br i1 %11, label %12, label %51

12:                                               ; preds = %9
  %13 = getelementptr inbounds [32 x i32], [32 x i32]* %5, i64 0, i64 0
  %14 = load i32, i32* %6, align 4
  %15 = call i32 @gf2_matrix_times(i32* %13, i32 %14)
  %16 = load [256 x i32]*, [256 x i32]** %3, align 8
  %17 = getelementptr inbounds [256 x i32], [256 x i32]* %16, i64 0
  %18 = load i32, i32* %6, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds [256 x i32], [256 x i32]* %17, i64 0, i64 %19
  store i32 %15, i32* %20, align 4
  %21 = getelementptr inbounds [32 x i32], [32 x i32]* %5, i64 0, i64 0
  %22 = load i32, i32* %6, align 4
  %23 = shl i32 %22, 8
  %24 = call i32 @gf2_matrix_times(i32* %21, i32 %23)
  %25 = load [256 x i32]*, [256 x i32]** %3, align 8
  %26 = getelementptr inbounds [256 x i32], [256 x i32]* %25, i64 1
  %27 = load i32, i32* %6, align 4
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds [256 x i32], [256 x i32]* %26, i64 0, i64 %28
  store i32 %24, i32* %29, align 4
  %30 = getelementptr inbounds [32 x i32], [32 x i32]* %5, i64 0, i64 0
  %31 = load i32, i32* %6, align 4
  %32 = shl i32 %31, 16
  %33 = call i32 @gf2_matrix_times(i32* %30, i32 %32)
  %34 = load [256 x i32]*, [256 x i32]** %3, align 8
  %35 = getelementptr inbounds [256 x i32], [256 x i32]* %34, i64 2
  %36 = load i32, i32* %6, align 4
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds [256 x i32], [256 x i32]* %35, i64 0, i64 %37
  store i32 %33, i32* %38, align 4
  %39 = getelementptr inbounds [32 x i32], [32 x i32]* %5, i64 0, i64 0
  %40 = load i32, i32* %6, align 4
  %41 = shl i32 %40, 24
  %42 = call i32 @gf2_matrix_times(i32* %39, i32 %41)
  %43 = load [256 x i32]*, [256 x i32]** %3, align 8
  %44 = getelementptr inbounds [256 x i32], [256 x i32]* %43, i64 3
  %45 = load i32, i32* %6, align 4
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds [256 x i32], [256 x i32]* %44, i64 0, i64 %46
  store i32 %42, i32* %47, align 4
  br label %48

48:                                               ; preds = %12
  %49 = load i32, i32* %6, align 4
  %50 = add i32 %49, 1
  store i32 %50, i32* %6, align 4
  br label %9, !llvm.loop !216

51:                                               ; preds = %9
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @crc32c_zeros_op(i32* %0, i64 %1) #0 {
  %3 = alloca i32*, align 8
  %4 = alloca i64, align 8
  %5 = alloca [32 x i32], align 16
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i32* %0, i32** %3, align 8
  store i64 %1, i64* %4, align 8
  %9 = getelementptr inbounds [32 x i32], [32 x i32]* %5, i64 0, i64 0
  store i32 -2097792136, i32* %9, align 16
  store i32 1, i32* %6, align 4
  store i32 1, i32* %7, align 4
  br label %10

10:                                               ; preds = %20, %2
  %11 = load i32, i32* %7, align 4
  %12 = icmp ult i32 %11, 32
  br i1 %12, label %13, label %23

13:                                               ; preds = %10
  %14 = load i32, i32* %6, align 4
  %15 = load i32, i32* %7, align 4
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds [32 x i32], [32 x i32]* %5, i64 0, i64 %16
  store i32 %14, i32* %17, align 4
  %18 = load i32, i32* %6, align 4
  %19 = shl i32 %18, 1
  store i32 %19, i32* %6, align 4
  br label %20

20:                                               ; preds = %13
  %21 = load i32, i32* %7, align 4
  %22 = add i32 %21, 1
  store i32 %22, i32* %7, align 4
  br label %10, !llvm.loop !217

23:                                               ; preds = %10
  %24 = load i32*, i32** %3, align 8
  %25 = getelementptr inbounds [32 x i32], [32 x i32]* %5, i64 0, i64 0
  call void @gf2_matrix_square(i32* %24, i32* %25)
  %26 = getelementptr inbounds [32 x i32], [32 x i32]* %5, i64 0, i64 0
  %27 = load i32*, i32** %3, align 8
  call void @gf2_matrix_square(i32* %26, i32* %27)
  br label %28

28:                                               ; preds = %41, %23
  %29 = load i32*, i32** %3, align 8
  %30 = getelementptr inbounds [32 x i32], [32 x i32]* %5, i64 0, i64 0
  call void @gf2_matrix_square(i32* %29, i32* %30)
  %31 = load i64, i64* %4, align 8
  %32 = lshr i64 %31, 1
  store i64 %32, i64* %4, align 8
  %33 = load i64, i64* %4, align 8
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %28
  br label %60

36:                                               ; preds = %28
  %37 = getelementptr inbounds [32 x i32], [32 x i32]* %5, i64 0, i64 0
  %38 = load i32*, i32** %3, align 8
  call void @gf2_matrix_square(i32* %37, i32* %38)
  %39 = load i64, i64* %4, align 8
  %40 = lshr i64 %39, 1
  store i64 %40, i64* %4, align 8
  br label %41

41:                                               ; preds = %36
  %42 = load i64, i64* %4, align 8
  %43 = icmp ne i64 %42, 0
  br i1 %43, label %28, label %44, !llvm.loop !218

44:                                               ; preds = %41
  store i32 0, i32* %8, align 4
  br label %45

45:                                               ; preds = %57, %44
  %46 = load i32, i32* %8, align 4
  %47 = icmp ult i32 %46, 32
  br i1 %47, label %48, label %60

48:                                               ; preds = %45
  %49 = load i32, i32* %8, align 4
  %50 = zext i32 %49 to i64
  %51 = getelementptr inbounds [32 x i32], [32 x i32]* %5, i64 0, i64 %50
  %52 = load i32, i32* %51, align 4
  %53 = load i32*, i32** %3, align 8
  %54 = load i32, i32* %8, align 4
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i32, i32* %53, i64 %55
  store i32 %52, i32* %56, align 4
  br label %57

57:                                               ; preds = %48
  %58 = load i32, i32* %8, align 4
  %59 = add i32 %58, 1
  store i32 %59, i32* %8, align 4
  br label %45, !llvm.loop !219

60:                                               ; preds = %35, %45
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @gf2_matrix_times(i32* %0, i32 %1) #0 {
  %3 = alloca i32*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i32* %0, i32** %3, align 8
  store i32 %1, i32* %4, align 4
  store i32 0, i32* %5, align 4
  br label %6

6:                                                ; preds = %18, %2
  %7 = load i32, i32* %4, align 4
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %9, label %23

9:                                                ; preds = %6
  %10 = load i32, i32* %4, align 4
  %11 = and i32 %10, 1
  %12 = icmp ne i32 %11, 0
  br i1 %12, label %13, label %18

13:                                               ; preds = %9
  %14 = load i32*, i32** %3, align 8
  %15 = load i32, i32* %14, align 4
  %16 = load i32, i32* %5, align 4
  %17 = xor i32 %16, %15
  store i32 %17, i32* %5, align 4
  br label %18

18:                                               ; preds = %13, %9
  %19 = load i32, i32* %4, align 4
  %20 = lshr i32 %19, 1
  store i32 %20, i32* %4, align 4
  %21 = load i32*, i32** %3, align 8
  %22 = getelementptr inbounds i32, i32* %21, i32 1
  store i32* %22, i32** %3, align 8
  br label %6, !llvm.loop !220

23:                                               ; preds = %6
  %24 = load i32, i32* %5, align 4
  ret i32 %24
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @gf2_matrix_square(i32* %0, i32* %1) #0 {
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32, align 4
  store i32* %0, i32** %3, align 8
  store i32* %1, i32** %4, align 8
  store i32 0, i32* %5, align 4
  br label %6

6:                                                ; preds = %21, %2
  %7 = load i32, i32* %5, align 4
  %8 = icmp ult i32 %7, 32
  br i1 %8, label %9, label %24

9:                                                ; preds = %6
  %10 = load i32*, i32** %4, align 8
  %11 = load i32*, i32** %4, align 8
  %12 = load i32, i32* %5, align 4
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds i32, i32* %11, i64 %13
  %15 = load i32, i32* %14, align 4
  %16 = call i32 @gf2_matrix_times(i32* %10, i32 %15)
  %17 = load i32*, i32** %3, align 8
  %18 = load i32, i32* %5, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds i32, i32* %17, i64 %19
  store i32 %16, i32* %20, align 4
  br label %21

21:                                               ; preds = %9
  %22 = load i32, i32* %5, align 4
  %23 = add i32 %22, 1
  store i32 %23, i32* %5, align 4
  br label %6, !llvm.loop !221

24:                                               ; preds = %6
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @storage_validate_item(i8* %0, %struct._stritem* %1) #0 {
  %3 = alloca i1, align 1
  %4 = alloca i8*, align 8
  %5 = alloca %struct._stritem*, align 8
  %6 = alloca %struct.item_hdr*, align 8
  store i8* %0, i8** %4, align 8
  store %struct._stritem* %1, %struct._stritem** %5, align 8
  %7 = load %struct._stritem*, %struct._stritem** %5, align 8
  %8 = getelementptr inbounds %struct._stritem, %struct._stritem* %7, i32 0, i32 10
  %9 = bitcast [0 x %union.anon.10]* %8 to i8*
  %10 = load %struct._stritem*, %struct._stritem** %5, align 8
  %11 = getelementptr inbounds %struct._stritem, %struct._stritem* %10, i32 0, i32 9
  %12 = load i8, i8* %11, align 1
  %13 = zext i8 %12 to i32
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds i8, i8* %9, i64 %14
  %16 = getelementptr inbounds i8, i8* %15, i64 1
  %17 = load %struct._stritem*, %struct._stritem** %5, align 8
  %18 = getelementptr inbounds %struct._stritem, %struct._stritem* %17, i32 0, i32 7
  %19 = load i16, i16* %18, align 2
  %20 = zext i16 %19 to i32
  %21 = and i32 %20, 256
  %22 = icmp ne i32 %21, 0
  %23 = zext i1 %22 to i64
  %24 = select i1 %22, i64 4, i64 0
  %25 = getelementptr inbounds i8, i8* %16, i64 %24
  %26 = load %struct._stritem*, %struct._stritem** %5, align 8
  %27 = getelementptr inbounds %struct._stritem, %struct._stritem* %26, i32 0, i32 7
  %28 = load i16, i16* %27, align 2
  %29 = zext i16 %28 to i32
  %30 = and i32 %29, 2
  %31 = icmp ne i32 %30, 0
  %32 = zext i1 %31 to i64
  %33 = select i1 %31, i64 8, i64 0
  %34 = getelementptr inbounds i8, i8* %25, i64 %33
  %35 = bitcast i8* %34 to %struct.item_hdr*
  store %struct.item_hdr* %35, %struct.item_hdr** %6, align 8
  %36 = load i8*, i8** %4, align 8
  %37 = load %struct.item_hdr*, %struct.item_hdr** %6, align 8
  %38 = getelementptr inbounds %struct.item_hdr, %struct.item_hdr* %37, i32 0, i32 2
  %39 = load i16, i16* %38, align 4
  %40 = zext i16 %39 to i32
  %41 = load %struct.item_hdr*, %struct.item_hdr** %6, align 8
  %42 = getelementptr inbounds %struct.item_hdr, %struct.item_hdr* %41, i32 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i64
  %45 = call i32 @extstore_check(i8* %36, i32 %40, i64 %44)
  %46 = icmp ne i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %2
  store i1 false, i1* %3, align 1
  br label %49

48:                                               ; preds = %2
  store i1 true, i1* %3, align 1
  br label %49

49:                                               ; preds = %48, %47
  %50 = load i1, i1* %3, align 1
  ret i1 %50
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @storage_delete(i8* %0, %struct._stritem* %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct._stritem*, align 8
  %5 = alloca %struct.item_hdr*, align 8
  store i8* %0, i8** %3, align 8
  store %struct._stritem* %1, %struct._stritem** %4, align 8
  %6 = load %struct._stritem*, %struct._stritem** %4, align 8
  %7 = getelementptr inbounds %struct._stritem, %struct._stritem* %6, i32 0, i32 7
  %8 = load i16, i16* %7, align 2
  %9 = zext i16 %8 to i32
  %10 = and i32 %9, 128
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %12, label %82

12:                                               ; preds = %2
  %13 = load %struct._stritem*, %struct._stritem** %4, align 8
  %14 = getelementptr inbounds %struct._stritem, %struct._stritem* %13, i32 0, i32 10
  %15 = bitcast [0 x %union.anon.10]* %14 to i8*
  %16 = load %struct._stritem*, %struct._stritem** %4, align 8
  %17 = getelementptr inbounds %struct._stritem, %struct._stritem* %16, i32 0, i32 9
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i32
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i8, i8* %15, i64 %20
  %22 = getelementptr inbounds i8, i8* %21, i64 1
  %23 = load %struct._stritem*, %struct._stritem** %4, align 8
  %24 = getelementptr inbounds %struct._stritem, %struct._stritem* %23, i32 0, i32 7
  %25 = load i16, i16* %24, align 2
  %26 = zext i16 %25 to i32
  %27 = and i32 %26, 256
  %28 = icmp ne i32 %27, 0
  %29 = zext i1 %28 to i64
  %30 = select i1 %28, i64 4, i64 0
  %31 = getelementptr inbounds i8, i8* %22, i64 %30
  %32 = load %struct._stritem*, %struct._stritem** %4, align 8
  %33 = getelementptr inbounds %struct._stritem, %struct._stritem* %32, i32 0, i32 7
  %34 = load i16, i16* %33, align 2
  %35 = zext i16 %34 to i32
  %36 = and i32 %35, 2
  %37 = icmp ne i32 %36, 0
  %38 = zext i1 %37 to i64
  %39 = select i1 %37, i64 8, i64 0
  %40 = getelementptr inbounds i8, i8* %31, i64 %39
  %41 = bitcast i8* %40 to %struct.item_hdr*
  store %struct.item_hdr* %41, %struct.item_hdr** %5, align 8
  %42 = load i8*, i8** %3, align 8
  %43 = load %struct.item_hdr*, %struct.item_hdr** %5, align 8
  %44 = getelementptr inbounds %struct.item_hdr, %struct.item_hdr* %43, i32 0, i32 2
  %45 = load i16, i16* %44, align 4
  %46 = zext i16 %45 to i32
  %47 = load %struct.item_hdr*, %struct.item_hdr** %5, align 8
  %48 = getelementptr inbounds %struct.item_hdr, %struct.item_hdr* %47, i32 0, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = zext i32 %49 to i64
  %51 = load %struct._stritem*, %struct._stritem** %4, align 8
  %52 = getelementptr inbounds %struct._stritem, %struct._stritem* %51, i32 0, i32 9
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = add i64 48, %54
  %56 = add i64 %55, 1
  %57 = load %struct._stritem*, %struct._stritem** %4, align 8
  %58 = getelementptr inbounds %struct._stritem, %struct._stritem* %57, i32 0, i32 5
  %59 = load i32, i32* %58, align 8
  %60 = sext i32 %59 to i64
  %61 = add i64 %56, %60
  %62 = load %struct._stritem*, %struct._stritem** %4, align 8
  %63 = getelementptr inbounds %struct._stritem, %struct._stritem* %62, i32 0, i32 7
  %64 = load i16, i16* %63, align 2
  %65 = zext i16 %64 to i32
  %66 = and i32 %65, 256
  %67 = icmp ne i32 %66, 0
  %68 = zext i1 %67 to i64
  %69 = select i1 %67, i64 4, i64 0
  %70 = add i64 %61, %69
  %71 = load %struct._stritem*, %struct._stritem** %4, align 8
  %72 = getelementptr inbounds %struct._stritem, %struct._stritem* %71, i32 0, i32 7
  %73 = load i16, i16* %72, align 2
  %74 = zext i16 %73 to i32
  %75 = and i32 %74, 2
  %76 = icmp ne i32 %75, 0
  %77 = zext i1 %76 to i64
  %78 = select i1 %76, i64 8, i64 0
  %79 = add i64 %70, %78
  %80 = trunc i64 %79 to i32
  %81 = call i32 @extstore_delete(i8* %42, i32 %46, i64 %50, i32 1, i32 %80)
  br label %82

82:                                               ; preds = %12, %2
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @process_extstore_stats(void (i8*, i16, i8*, i32, i8*)* %0, %struct.conn* %1) #0 {
  %3 = alloca void (i8*, i16, i8*, i32, i8*)*, align 8
  %4 = alloca %struct.conn*, align 8
  %5 = alloca i32, align 4
  %6 = alloca [128 x i8], align 16
  %7 = alloca [128 x i8], align 16
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %struct.extstore_stats, align 8
  %11 = alloca i8*, align 8
  store void (i8*, i16, i8*, i32, i8*)* %0, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  store %struct.conn* %1, %struct.conn** %4, align 8
  store i32 0, i32* %8, align 4
  store i32 0, i32* %9, align 4
  %12 = load %struct.conn*, %struct.conn** %4, align 8
  %13 = getelementptr inbounds %struct.conn, %struct.conn* %12, i32 0, i32 42
  %14 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %13, align 8
  %15 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %14, i32 0, i32 10
  %16 = load i8*, i8** %15, align 8
  store i8* %16, i8** %11, align 8
  %17 = load i8*, i8** %11, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %19, label %20

19:                                               ; preds = %2
  br label %118

20:                                               ; preds = %2
  %21 = load i8*, i8** %11, align 8
  call void @extstore_get_stats(i8* %21, %struct.extstore_stats* %10)
  %22 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %10, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = call noalias i8* @calloc(i64 %23, i64 24) #14
  %25 = bitcast i8* %24 to %struct.extstore_page_data*
  %26 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %10, i32 0, i32 17
  store %struct.extstore_page_data* %25, %struct.extstore_page_data** %26, align 8
  %27 = load i8*, i8** %11, align 8
  call void @extstore_get_page_data(i8* %27, %struct.extstore_stats* %10)
  store i32 0, i32* %5, align 4
  br label %28

28:                                               ; preds = %115, %20
  %29 = load i32, i32* %5, align 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %10, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = icmp ult i64 %30, %32
  br i1 %33, label %34, label %118

34:                                               ; preds = %28
  %35 = getelementptr inbounds [128 x i8], [128 x i8]* %6, i64 0, i64 0
  %36 = load i32, i32* %5, align 4
  %37 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %35, i64 128, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1225, i64 0, i64 0), i32 %36, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.1226, i64 0, i64 0)) #14
  store i32 %37, i32* %8, align 4
  %38 = getelementptr inbounds [128 x i8], [128 x i8]* %7, i64 0, i64 0
  %39 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %10, i32 0, i32 17
  %40 = load %struct.extstore_page_data*, %struct.extstore_page_data** %39, align 8
  %41 = load i32, i32* %5, align 4
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds %struct.extstore_page_data, %struct.extstore_page_data* %40, i64 %42
  %44 = getelementptr inbounds %struct.extstore_page_data, %struct.extstore_page_data* %43, i32 0, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %38, i64 128, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.1227, i64 0, i64 0), i64 %45) #14
  store i32 %46, i32* %9, align 4
  %47 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %48 = getelementptr inbounds [128 x i8], [128 x i8]* %6, i64 0, i64 0
  %49 = load i32, i32* %8, align 4
  %50 = trunc i32 %49 to i16
  %51 = getelementptr inbounds [128 x i8], [128 x i8]* %7, i64 0, i64 0
  %52 = load i32, i32* %9, align 4
  %53 = load %struct.conn*, %struct.conn** %4, align 8
  %54 = bitcast %struct.conn* %53 to i8*
  call void %47(i8* %48, i16 zeroext %50, i8* %51, i32 %52, i8* %54)
  %55 = getelementptr inbounds [128 x i8], [128 x i8]* %6, i64 0, i64 0
  %56 = load i32, i32* %5, align 4
  %57 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %55, i64 128, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1225, i64 0, i64 0), i32 %56, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.1228, i64 0, i64 0)) #14
  store i32 %57, i32* %8, align 4
  %58 = getelementptr inbounds [128 x i8], [128 x i8]* %7, i64 0, i64 0
  %59 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %10, i32 0, i32 17
  %60 = load %struct.extstore_page_data*, %struct.extstore_page_data** %59, align 8
  %61 = load i32, i32* %5, align 4
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds %struct.extstore_page_data, %struct.extstore_page_data* %60, i64 %62
  %64 = getelementptr inbounds %struct.extstore_page_data, %struct.extstore_page_data* %63, i32 0, i32 1
  %65 = load i64, i64* %64, align 8
  %66 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %58, i64 128, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.1227, i64 0, i64 0), i64 %65) #14
  store i32 %66, i32* %9, align 4
  %67 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %68 = getelementptr inbounds [128 x i8], [128 x i8]* %6, i64 0, i64 0
  %69 = load i32, i32* %8, align 4
  %70 = trunc i32 %69 to i16
  %71 = getelementptr inbounds [128 x i8], [128 x i8]* %7, i64 0, i64 0
  %72 = load i32, i32* %9, align 4
  %73 = load %struct.conn*, %struct.conn** %4, align 8
  %74 = bitcast %struct.conn* %73 to i8*
  call void %67(i8* %68, i16 zeroext %70, i8* %71, i32 %72, i8* %74)
  %75 = getelementptr inbounds [128 x i8], [128 x i8]* %6, i64 0, i64 0
  %76 = load i32, i32* %5, align 4
  %77 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %75, i64 128, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1225, i64 0, i64 0), i32 %76, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4.1229, i64 0, i64 0)) #14
  store i32 %77, i32* %8, align 4
  %78 = getelementptr inbounds [128 x i8], [128 x i8]* %7, i64 0, i64 0
  %79 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %10, i32 0, i32 17
  %80 = load %struct.extstore_page_data*, %struct.extstore_page_data** %79, align 8
  %81 = load i32, i32* %5, align 4
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds %struct.extstore_page_data, %struct.extstore_page_data* %80, i64 %82
  %84 = getelementptr inbounds %struct.extstore_page_data, %struct.extstore_page_data* %83, i32 0, i32 2
  %85 = load i32, i32* %84, align 8
  %86 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %78, i64 128, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.1230, i64 0, i64 0), i32 %85) #14
  store i32 %86, i32* %9, align 4
  %87 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %88 = getelementptr inbounds [128 x i8], [128 x i8]* %6, i64 0, i64 0
  %89 = load i32, i32* %8, align 4
  %90 = trunc i32 %89 to i16
  %91 = getelementptr inbounds [128 x i8], [128 x i8]* %7, i64 0, i64 0
  %92 = load i32, i32* %9, align 4
  %93 = load %struct.conn*, %struct.conn** %4, align 8
  %94 = bitcast %struct.conn* %93 to i8*
  call void %87(i8* %88, i16 zeroext %90, i8* %91, i32 %92, i8* %94)
  %95 = getelementptr inbounds [128 x i8], [128 x i8]* %6, i64 0, i64 0
  %96 = load i32, i32* %5, align 4
  %97 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %95, i64 128, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1225, i64 0, i64 0), i32 %96, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6.1231, i64 0, i64 0)) #14
  store i32 %97, i32* %8, align 4
  %98 = getelementptr inbounds [128 x i8], [128 x i8]* %7, i64 0, i64 0
  %99 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %10, i32 0, i32 17
  %100 = load %struct.extstore_page_data*, %struct.extstore_page_data** %99, align 8
  %101 = load i32, i32* %5, align 4
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds %struct.extstore_page_data, %struct.extstore_page_data* %100, i64 %102
  %104 = getelementptr inbounds %struct.extstore_page_data, %struct.extstore_page_data* %103, i32 0, i32 3
  %105 = load i32, i32* %104, align 4
  %106 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %98, i64 128, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.1230, i64 0, i64 0), i32 %105) #14
  store i32 %106, i32* %9, align 4
  %107 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %108 = getelementptr inbounds [128 x i8], [128 x i8]* %6, i64 0, i64 0
  %109 = load i32, i32* %8, align 4
  %110 = trunc i32 %109 to i16
  %111 = getelementptr inbounds [128 x i8], [128 x i8]* %7, i64 0, i64 0
  %112 = load i32, i32* %9, align 4
  %113 = load %struct.conn*, %struct.conn** %4, align 8
  %114 = bitcast %struct.conn* %113 to i8*
  call void %107(i8* %108, i16 zeroext %110, i8* %111, i32 %112, i8* %114)
  br label %115

115:                                              ; preds = %34
  %116 = load i32, i32* %5, align 4
  %117 = add nsw i32 %116, 1
  store i32 %117, i32* %5, align 4
  br label %28, !llvm.loop !222

118:                                              ; preds = %19, %28
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @storage_stats(void (i8*, i16, i8*, i32, i8*)* %0, %struct.conn* %1) #0 {
  %3 = alloca void (i8*, i16, i8*, i32, i8*)*, align 8
  %4 = alloca %struct.conn*, align 8
  %5 = alloca %struct.extstore_stats, align 8
  store void (i8*, i16, i8*, i32, i8*)* %0, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  store %struct.conn* %1, %struct.conn** %4, align 8
  %6 = load %struct.conn*, %struct.conn** %4, align 8
  %7 = getelementptr inbounds %struct.conn, %struct.conn* %6, i32 0, i32 42
  %8 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %7, align 8
  %9 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %8, i32 0, i32 10
  %10 = load i8*, i8** %9, align 8
  %11 = icmp ne i8* %10, null
  br i1 %11, label %12, label %94

12:                                               ; preds = %2
  call void @STATS_LOCK()
  %13 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %14 = load %struct.conn*, %struct.conn** %4, align 8
  %15 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 19), align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7.1234, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %13, %struct.conn* %14, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.1227, i64 0, i64 0), i64 %15)
  %16 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %17 = load %struct.conn*, %struct.conn** %4, align 8
  %18 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 20), align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.8.1235, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %16, %struct.conn* %17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.1227, i64 0, i64 0), i64 %18)
  %19 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %20 = load %struct.conn*, %struct.conn** %4, align 8
  %21 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 21), align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.9.1236, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %19, %struct.conn* %20, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.1227, i64 0, i64 0), i64 %21)
  call void @STATS_UNLOCK()
  %22 = load %struct.conn*, %struct.conn** %4, align 8
  %23 = getelementptr inbounds %struct.conn, %struct.conn* %22, i32 0, i32 42
  %24 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %23, align 8
  %25 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %24, i32 0, i32 10
  %26 = load i8*, i8** %25, align 8
  call void @extstore_get_stats(i8* %26, %struct.extstore_stats* %5)
  %27 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %28 = load %struct.conn*, %struct.conn** %4, align 8
  %29 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %5, i32 0, i32 0
  %30 = load i64, i64* %29, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10.1237, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %27, %struct.conn* %28, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.1227, i64 0, i64 0), i64 %30)
  %31 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %32 = load %struct.conn*, %struct.conn** %4, align 8
  %33 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %5, i32 0, i32 2
  %34 = load i64, i64* %33, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.11.1238, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %31, %struct.conn* %32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.1227, i64 0, i64 0), i64 %34)
  %35 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %36 = load %struct.conn*, %struct.conn** %4, align 8
  %37 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %5, i32 0, i32 3
  %38 = load i64, i64* %37, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12.1239, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %35, %struct.conn* %36, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.1227, i64 0, i64 0), i64 %38)
  %39 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %40 = load %struct.conn*, %struct.conn** %4, align 8
  %41 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %5, i32 0, i32 5
  %42 = load i64, i64* %41, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.13.1240, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %39, %struct.conn* %40, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.1227, i64 0, i64 0), i64 %42)
  %43 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %44 = load %struct.conn*, %struct.conn** %4, align 8
  %45 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %5, i32 0, i32 6
  %46 = load i64, i64* %45, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.14.1241, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %43, %struct.conn* %44, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.1227, i64 0, i64 0), i64 %46)
  %47 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %48 = load %struct.conn*, %struct.conn** %4, align 8
  %49 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %5, i32 0, i32 7
  %50 = load i64, i64* %49, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.15.1242, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %47, %struct.conn* %48, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.1227, i64 0, i64 0), i64 %50)
  %51 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %52 = load %struct.conn*, %struct.conn** %4, align 8
  %53 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %5, i32 0, i32 8
  %54 = load i64, i64* %53, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.16.1243, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %51, %struct.conn* %52, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.1227, i64 0, i64 0), i64 %54)
  %55 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %56 = load %struct.conn*, %struct.conn** %4, align 8
  %57 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %5, i32 0, i32 9
  %58 = load i64, i64* %57, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.17.1244, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %55, %struct.conn* %56, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.1227, i64 0, i64 0), i64 %58)
  %59 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %60 = load %struct.conn*, %struct.conn** %4, align 8
  %61 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %5, i32 0, i32 10
  %62 = load i64, i64* %61, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.18.1245, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %59, %struct.conn* %60, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.1227, i64 0, i64 0), i64 %62)
  %63 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %64 = load %struct.conn*, %struct.conn** %4, align 8
  %65 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %5, i32 0, i32 11
  %66 = load i64, i64* %65, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.19.1246, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %63, %struct.conn* %64, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.1227, i64 0, i64 0), i64 %66)
  %67 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %68 = load %struct.conn*, %struct.conn** %4, align 8
  %69 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %5, i32 0, i32 12
  %70 = load i64, i64* %69, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.1247, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %67, %struct.conn* %68, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.1227, i64 0, i64 0), i64 %70)
  %71 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %72 = load %struct.conn*, %struct.conn** %4, align 8
  %73 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %5, i32 0, i32 13
  %74 = load i64, i64* %73, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.21.1248, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %71, %struct.conn* %72, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.1227, i64 0, i64 0), i64 %74)
  %75 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %76 = load %struct.conn*, %struct.conn** %4, align 8
  %77 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %5, i32 0, i32 14
  %78 = load i64, i64* %77, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.22.1249, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %75, %struct.conn* %76, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.1227, i64 0, i64 0), i64 %78)
  %79 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %80 = load %struct.conn*, %struct.conn** %4, align 8
  %81 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %5, i32 0, i32 15
  %82 = load i64, i64* %81, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.23.1250, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %79, %struct.conn* %80, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.1227, i64 0, i64 0), i64 %82)
  %83 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %84 = load %struct.conn*, %struct.conn** %4, align 8
  %85 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %5, i32 0, i32 1
  %86 = load i64, i64* %85, align 8
  %87 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %5, i32 0, i32 4
  %88 = load i64, i64* %87, align 8
  %89 = mul i64 %86, %88
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.24.1251, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %83, %struct.conn* %84, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.1227, i64 0, i64 0), i64 %89)
  %90 = load void (i8*, i16, i8*, i32, i8*)*, void (i8*, i16, i8*, i32, i8*)** %3, align 8
  %91 = load %struct.conn*, %struct.conn** %4, align 8
  %92 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %5, i32 0, i32 16
  %93 = load i64, i64* %92, align 8
  call void (i8*, void (i8*, i16, i8*, i32, i8*)*, %struct.conn*, i8*, ...) @append_stat(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25.1252, i64 0, i64 0), void (i8*, i16, i8*, i32, i8*)* %90, %struct.conn* %91, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.1227, i64 0, i64 0), i64 %93)
  br label %94

94:                                               ; preds = %12, %2
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @storage_get_item(%struct.conn* %0, %struct._stritem* %1, %struct._mc_resp* %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.conn*, align 8
  %6 = alloca %struct._stritem*, align 8
  %7 = alloca %struct._mc_resp*, align 8
  %8 = alloca %struct.item_hdr*, align 8
  %9 = alloca %struct.io_queue_s*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i32, align 4
  %12 = alloca %struct._stritem*, align 8
  %13 = alloca i8, align 1
  %14 = alloca i32, align 4
  %15 = alloca %struct._io_pending_storage_t*, align 8
  %16 = alloca %struct._obj_io*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i64, align 8
  %19 = alloca %struct._strchunk*, align 8
  %20 = alloca i32, align 4
  store %struct.conn* %0, %struct.conn** %5, align 8
  store %struct._stritem* %1, %struct._stritem** %6, align 8
  store %struct._mc_resp* %2, %struct._mc_resp** %7, align 8
  %21 = load %struct._stritem*, %struct._stritem** %6, align 8
  %22 = getelementptr inbounds %struct._stritem, %struct._stritem* %21, i32 0, i32 10
  %23 = bitcast [0 x %union.anon.10]* %22 to i8*
  %24 = load %struct._stritem*, %struct._stritem** %6, align 8
  %25 = getelementptr inbounds %struct._stritem, %struct._stritem* %24, i32 0, i32 9
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i32
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i8, i8* %23, i64 %28
  %30 = getelementptr inbounds i8, i8* %29, i64 1
  %31 = load %struct._stritem*, %struct._stritem** %6, align 8
  %32 = getelementptr inbounds %struct._stritem, %struct._stritem* %31, i32 0, i32 7
  %33 = load i16, i16* %32, align 2
  %34 = zext i16 %33 to i32
  %35 = and i32 %34, 256
  %36 = icmp ne i32 %35, 0
  %37 = zext i1 %36 to i64
  %38 = select i1 %36, i64 4, i64 0
  %39 = getelementptr inbounds i8, i8* %30, i64 %38
  %40 = load %struct._stritem*, %struct._stritem** %6, align 8
  %41 = getelementptr inbounds %struct._stritem, %struct._stritem* %40, i32 0, i32 7
  %42 = load i16, i16* %41, align 2
  %43 = zext i16 %42 to i32
  %44 = and i32 %43, 2
  %45 = icmp ne i32 %44, 0
  %46 = zext i1 %45 to i64
  %47 = select i1 %45, i64 8, i64 0
  %48 = getelementptr inbounds i8, i8* %39, i64 %47
  %49 = bitcast i8* %48 to %struct.item_hdr*
  store %struct.item_hdr* %49, %struct.item_hdr** %8, align 8
  %50 = load %struct.conn*, %struct.conn** %5, align 8
  %51 = call %struct.io_queue_s* @conn_io_queue_get(%struct.conn* %50, i32 1)
  store %struct.io_queue_s* %51, %struct.io_queue_s** %9, align 8
  %52 = load %struct._stritem*, %struct._stritem** %6, align 8
  %53 = getelementptr inbounds %struct._stritem, %struct._stritem* %52, i32 0, i32 9
  %54 = load i8, i8* %53, align 1
  %55 = zext i8 %54 to i64
  %56 = add i64 48, %55
  %57 = add i64 %56, 1
  %58 = load %struct._stritem*, %struct._stritem** %6, align 8
  %59 = getelementptr inbounds %struct._stritem, %struct._stritem* %58, i32 0, i32 5
  %60 = load i32, i32* %59, align 8
  %61 = sext i32 %60 to i64
  %62 = add i64 %57, %61
  %63 = load %struct._stritem*, %struct._stritem** %6, align 8
  %64 = getelementptr inbounds %struct._stritem, %struct._stritem* %63, i32 0, i32 7
  %65 = load i16, i16* %64, align 2
  %66 = zext i16 %65 to i32
  %67 = and i32 %66, 256
  %68 = icmp ne i32 %67, 0
  %69 = zext i1 %68 to i64
  %70 = select i1 %68, i64 4, i64 0
  %71 = add i64 %62, %70
  %72 = load %struct._stritem*, %struct._stritem** %6, align 8
  %73 = getelementptr inbounds %struct._stritem, %struct._stritem* %72, i32 0, i32 7
  %74 = load i16, i16* %73, align 2
  %75 = zext i16 %74 to i32
  %76 = and i32 %75, 2
  %77 = icmp ne i32 %76, 0
  %78 = zext i1 %77 to i64
  %79 = select i1 %77, i64 8, i64 0
  %80 = add i64 %71, %79
  store i64 %80, i64* %10, align 8
  %81 = load i64, i64* %10, align 8
  %82 = call i32 @slabs_clsid(i64 %81)
  store i32 %82, i32* %11, align 4
  store i8 0, i8* %13, align 1
  %83 = load i64, i64* %10, align 8
  %84 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 23), align 8
  %85 = sext i32 %84 to i64
  %86 = icmp ugt i64 %83, %85
  br i1 %86, label %87, label %142

87:                                               ; preds = %3
  %88 = load %struct._stritem*, %struct._stritem** %6, align 8
  %89 = getelementptr inbounds %struct._stritem, %struct._stritem* %88, i32 0, i32 7
  %90 = load i16, i16* %89, align 2
  %91 = zext i16 %90 to i32
  %92 = and i32 %91, 256
  %93 = icmp ne i32 %92, 0
  br i1 %93, label %94, label %116

94:                                               ; preds = %87
  %95 = load %struct._stritem*, %struct._stritem** %6, align 8
  %96 = getelementptr inbounds %struct._stritem, %struct._stritem* %95, i32 0, i32 10
  %97 = bitcast [0 x %union.anon.10]* %96 to i8*
  %98 = load %struct._stritem*, %struct._stritem** %6, align 8
  %99 = getelementptr inbounds %struct._stritem, %struct._stritem* %98, i32 0, i32 9
  %100 = load i8, i8* %99, align 1
  %101 = zext i8 %100 to i32
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds i8, i8* %97, i64 %102
  %104 = getelementptr inbounds i8, i8* %103, i64 1
  %105 = load %struct._stritem*, %struct._stritem** %6, align 8
  %106 = getelementptr inbounds %struct._stritem, %struct._stritem* %105, i32 0, i32 7
  %107 = load i16, i16* %106, align 2
  %108 = zext i16 %107 to i32
  %109 = and i32 %108, 2
  %110 = icmp ne i32 %109, 0
  %111 = zext i1 %110 to i64
  %112 = select i1 %110, i64 8, i64 0
  %113 = getelementptr inbounds i8, i8* %104, i64 %112
  %114 = bitcast i8* %113 to i32*
  %115 = load i32, i32* %114, align 4
  store i32 %115, i32* %14, align 4
  br label %117

116:                                              ; preds = %87
  store i32 0, i32* %14, align 4
  br label %117

117:                                              ; preds = %116, %94
  %118 = load %struct._stritem*, %struct._stritem** %6, align 8
  %119 = getelementptr inbounds %struct._stritem, %struct._stritem* %118, i32 0, i32 10
  %120 = bitcast [0 x %union.anon.10]* %119 to i8*
  %121 = load %struct._stritem*, %struct._stritem** %6, align 8
  %122 = getelementptr inbounds %struct._stritem, %struct._stritem* %121, i32 0, i32 7
  %123 = load i16, i16* %122, align 2
  %124 = zext i16 %123 to i32
  %125 = and i32 %124, 2
  %126 = icmp ne i32 %125, 0
  %127 = zext i1 %126 to i64
  %128 = select i1 %126, i64 8, i64 0
  %129 = getelementptr inbounds i8, i8* %120, i64 %128
  %130 = load %struct._stritem*, %struct._stritem** %6, align 8
  %131 = getelementptr inbounds %struct._stritem, %struct._stritem* %130, i32 0, i32 9
  %132 = load i8, i8* %131, align 1
  %133 = zext i8 %132 to i64
  %134 = load i32, i32* %14, align 4
  %135 = load %struct._stritem*, %struct._stritem** %6, align 8
  %136 = getelementptr inbounds %struct._stritem, %struct._stritem* %135, i32 0, i32 4
  %137 = load i32, i32* %136, align 4
  %138 = load %struct._stritem*, %struct._stritem** %6, align 8
  %139 = getelementptr inbounds %struct._stritem, %struct._stritem* %138, i32 0, i32 5
  %140 = load i32, i32* %139, align 8
  %141 = call %struct._stritem* @item_alloc(i8* %129, i64 %133, i32 %134, i32 %137, i32 %140)
  store %struct._stritem* %141, %struct._stritem** %12, align 8
  store i8 1, i8* %13, align 1
  br label %146

142:                                              ; preds = %3
  %143 = load i64, i64* %10, align 8
  %144 = load i32, i32* %11, align 4
  %145 = call %struct._stritem* @do_item_alloc_pull(i64 %143, i32 %144)
  store %struct._stritem* %145, %struct._stritem** %12, align 8
  br label %146

146:                                              ; preds = %142, %117
  %147 = load %struct._stritem*, %struct._stritem** %12, align 8
  %148 = icmp eq %struct._stritem* %147, null
  br i1 %148, label %149, label %150

149:                                              ; preds = %146
  store i32 -1, i32* %4, align 4
  br label %483

150:                                              ; preds = %146
  %151 = load i32, i32* %11, align 4
  %152 = trunc i32 %151 to i8
  %153 = load %struct._stritem*, %struct._stritem** %12, align 8
  %154 = getelementptr inbounds %struct._stritem, %struct._stritem* %153, i32 0, i32 8
  store i8 %152, i8* %154, align 8
  %155 = load %struct.conn*, %struct.conn** %5, align 8
  %156 = getelementptr inbounds %struct.conn, %struct.conn* %155, i32 0, i32 42
  %157 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %156, align 8
  %158 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %157, i32 0, i32 9
  %159 = load %struct.cache_t*, %struct.cache_t** %158, align 8
  %160 = call i8* @do_cache_alloc(%struct.cache_t* %159)
  %161 = bitcast i8* %160 to %struct._io_pending_storage_t*
  store %struct._io_pending_storage_t* %161, %struct._io_pending_storage_t** %15, align 8
  %162 = load %struct._io_pending_storage_t*, %struct._io_pending_storage_t** %15, align 8
  %163 = bitcast %struct._io_pending_storage_t* %162 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %163, i8 0, i64 112, i1 false)
  %164 = load %struct._io_pending_storage_t*, %struct._io_pending_storage_t** %15, align 8
  %165 = getelementptr inbounds %struct._io_pending_storage_t, %struct._io_pending_storage_t* %164, i32 0, i32 10
  store i8 1, i8* %165, align 1
  %166 = load %struct._io_pending_storage_t*, %struct._io_pending_storage_t** %15, align 8
  %167 = getelementptr inbounds %struct._io_pending_storage_t, %struct._io_pending_storage_t* %166, i32 0, i32 8
  store i8 0, i8* %167, align 1
  %168 = load %struct._io_pending_storage_t*, %struct._io_pending_storage_t** %15, align 8
  %169 = getelementptr inbounds %struct._io_pending_storage_t, %struct._io_pending_storage_t* %168, i32 0, i32 9
  store i8 0, i8* %169, align 2
  %170 = load %struct.conn*, %struct.conn** %5, align 8
  %171 = getelementptr inbounds %struct.conn, %struct.conn* %170, i32 0, i32 34
  %172 = load i8, i8* %171, align 4
  %173 = trunc i8 %172 to i1
  %174 = load %struct._io_pending_storage_t*, %struct._io_pending_storage_t** %15, align 8
  %175 = getelementptr inbounds %struct._io_pending_storage_t, %struct._io_pending_storage_t* %174, i32 0, i32 7
  %176 = zext i1 %173 to i8
  store i8 %176, i8* %175, align 4
  %177 = load %struct._stritem*, %struct._stritem** %6, align 8
  %178 = load %struct._io_pending_storage_t*, %struct._io_pending_storage_t** %15, align 8
  %179 = getelementptr inbounds %struct._io_pending_storage_t, %struct._io_pending_storage_t* %178, i32 0, i32 4
  store %struct._stritem* %177, %struct._stritem** %179, align 8
  %180 = load %struct._mc_resp*, %struct._mc_resp** %7, align 8
  %181 = load %struct._io_pending_storage_t*, %struct._io_pending_storage_t** %15, align 8
  %182 = getelementptr inbounds %struct._io_pending_storage_t, %struct._io_pending_storage_t* %181, i32 0, i32 3
  store %struct._mc_resp* %180, %struct._mc_resp** %182, align 8
  %183 = load %struct._io_pending_storage_t*, %struct._io_pending_storage_t** %15, align 8
  %184 = getelementptr inbounds %struct._io_pending_storage_t, %struct._io_pending_storage_t* %183, i32 0, i32 0
  store i32 1, i32* %184, align 8
  %185 = load %struct._io_pending_storage_t*, %struct._io_pending_storage_t** %15, align 8
  %186 = getelementptr inbounds %struct._io_pending_storage_t, %struct._io_pending_storage_t* %185, i32 0, i32 5
  store %struct._obj_io* %186, %struct._obj_io** %16, align 8
  %187 = load i8, i8* %13, align 1
  %188 = trunc i8 %187 to i1
  br i1 %188, label %189, label %379

189:                                              ; preds = %150
  store i32 0, i32* %17, align 4
  %190 = load %struct._stritem*, %struct._stritem** %12, align 8
  %191 = getelementptr inbounds %struct._stritem, %struct._stritem* %190, i32 0, i32 5
  %192 = load i32, i32* %191, align 8
  %193 = sext i32 %192 to i64
  store i64 %193, i64* %18, align 8
  %194 = load %struct._stritem*, %struct._stritem** %12, align 8
  %195 = getelementptr inbounds %struct._stritem, %struct._stritem* %194, i32 0, i32 10
  %196 = bitcast [0 x %union.anon.10]* %195 to i8*
  %197 = load %struct._stritem*, %struct._stritem** %12, align 8
  %198 = getelementptr inbounds %struct._stritem, %struct._stritem* %197, i32 0, i32 9
  %199 = load i8, i8* %198, align 1
  %200 = zext i8 %199 to i32
  %201 = sext i32 %200 to i64
  %202 = getelementptr inbounds i8, i8* %196, i64 %201
  %203 = getelementptr inbounds i8, i8* %202, i64 1
  %204 = load %struct._stritem*, %struct._stritem** %12, align 8
  %205 = getelementptr inbounds %struct._stritem, %struct._stritem* %204, i32 0, i32 7
  %206 = load i16, i16* %205, align 2
  %207 = zext i16 %206 to i32
  %208 = and i32 %207, 256
  %209 = icmp ne i32 %208, 0
  %210 = zext i1 %209 to i64
  %211 = select i1 %209, i64 4, i64 0
  %212 = getelementptr inbounds i8, i8* %203, i64 %211
  %213 = load %struct._stritem*, %struct._stritem** %12, align 8
  %214 = getelementptr inbounds %struct._stritem, %struct._stritem* %213, i32 0, i32 7
  %215 = load i16, i16* %214, align 2
  %216 = zext i16 %215 to i32
  %217 = and i32 %216, 2
  %218 = icmp ne i32 %217, 0
  %219 = zext i1 %218 to i64
  %220 = select i1 %218, i64 8, i64 0
  %221 = getelementptr inbounds i8, i8* %212, i64 %220
  %222 = bitcast i8* %221 to %struct._strchunk*
  store %struct._strchunk* %222, %struct._strchunk** %19, align 8
  %223 = call noalias i8* @malloc(i64 16384) #14
  %224 = bitcast i8* %223 to %struct.iovec*
  %225 = load %struct._obj_io*, %struct._obj_io** %16, align 8
  %226 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %225, i32 0, i32 3
  store %struct.iovec* %224, %struct.iovec** %226, align 8
  %227 = load %struct._obj_io*, %struct._obj_io** %16, align 8
  %228 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %227, i32 0, i32 3
  %229 = load %struct.iovec*, %struct.iovec** %228, align 8
  %230 = icmp eq %struct.iovec* %229, null
  br i1 %230, label %231, label %240

231:                                              ; preds = %189
  %232 = load %struct._stritem*, %struct._stritem** %12, align 8
  call void @item_remove(%struct._stritem* %232)
  %233 = load %struct.conn*, %struct.conn** %5, align 8
  %234 = getelementptr inbounds %struct.conn, %struct.conn* %233, i32 0, i32 42
  %235 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %234, align 8
  %236 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %235, i32 0, i32 9
  %237 = load %struct.cache_t*, %struct.cache_t** %236, align 8
  %238 = load %struct._io_pending_storage_t*, %struct._io_pending_storage_t** %15, align 8
  %239 = bitcast %struct._io_pending_storage_t* %238 to i8*
  call void @do_cache_free(%struct.cache_t* %237, i8* %239)
  store i32 -1, i32* %4, align 4
  br label %483

240:                                              ; preds = %189
  %241 = load %struct._stritem*, %struct._stritem** %12, align 8
  %242 = bitcast %struct._stritem* %241 to i8*
  %243 = load %struct._obj_io*, %struct._obj_io** %16, align 8
  %244 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %243, i32 0, i32 3
  %245 = load %struct.iovec*, %struct.iovec** %244, align 8
  %246 = getelementptr inbounds %struct.iovec, %struct.iovec* %245, i64 0
  %247 = getelementptr inbounds %struct.iovec, %struct.iovec* %246, i32 0, i32 0
  store i8* %242, i8** %247, align 8
  %248 = load %struct._stritem*, %struct._stritem** %12, align 8
  %249 = getelementptr inbounds %struct._stritem, %struct._stritem* %248, i32 0, i32 9
  %250 = load i8, i8* %249, align 1
  %251 = zext i8 %250 to i64
  %252 = add i64 48, %251
  %253 = add i64 %252, 1
  %254 = load %struct._stritem*, %struct._stritem** %12, align 8
  %255 = getelementptr inbounds %struct._stritem, %struct._stritem* %254, i32 0, i32 5
  %256 = load i32, i32* %255, align 8
  %257 = sext i32 %256 to i64
  %258 = add i64 %253, %257
  %259 = load %struct._stritem*, %struct._stritem** %12, align 8
  %260 = getelementptr inbounds %struct._stritem, %struct._stritem* %259, i32 0, i32 7
  %261 = load i16, i16* %260, align 2
  %262 = zext i16 %261 to i32
  %263 = and i32 %262, 256
  %264 = icmp ne i32 %263, 0
  %265 = zext i1 %264 to i64
  %266 = select i1 %264, i64 4, i64 0
  %267 = add i64 %258, %266
  %268 = load %struct._stritem*, %struct._stritem** %12, align 8
  %269 = getelementptr inbounds %struct._stritem, %struct._stritem* %268, i32 0, i32 7
  %270 = load i16, i16* %269, align 2
  %271 = zext i16 %270 to i32
  %272 = and i32 %271, 2
  %273 = icmp ne i32 %272, 0
  %274 = zext i1 %273 to i64
  %275 = select i1 %273, i64 8, i64 0
  %276 = add i64 %267, %275
  %277 = load %struct._stritem*, %struct._stritem** %12, align 8
  %278 = getelementptr inbounds %struct._stritem, %struct._stritem* %277, i32 0, i32 5
  %279 = load i32, i32* %278, align 8
  %280 = sext i32 %279 to i64
  %281 = sub i64 %276, %280
  %282 = load %struct._obj_io*, %struct._obj_io** %16, align 8
  %283 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %282, i32 0, i32 3
  %284 = load %struct.iovec*, %struct.iovec** %283, align 8
  %285 = getelementptr inbounds %struct.iovec, %struct.iovec* %284, i64 0
  %286 = getelementptr inbounds %struct.iovec, %struct.iovec* %285, i32 0, i32 1
  store i64 %281, i64* %286, align 8
  %287 = load i32, i32* %17, align 4
  %288 = add i32 %287, 1
  store i32 %288, i32* %17, align 4
  br label %289

289:                                              ; preds = %362, %240
  %290 = load i64, i64* %18, align 8
  %291 = icmp ugt i64 %290, 0
  br i1 %291, label %292, label %375

292:                                              ; preds = %289
  %293 = load %struct._strchunk*, %struct._strchunk** %19, align 8
  %294 = load i64, i64* %18, align 8
  %295 = call %struct._strchunk* @do_item_alloc_chunk(%struct._strchunk* %293, i64 %294)
  store %struct._strchunk* %295, %struct._strchunk** %19, align 8
  %296 = load %struct._strchunk*, %struct._strchunk** %19, align 8
  %297 = icmp eq %struct._strchunk* %296, null
  br i1 %297, label %301, label %298

298:                                              ; preds = %292
  %299 = load i32, i32* %17, align 4
  %300 = icmp ugt i32 %299, 1023
  br i1 %300, label %301, label %316

301:                                              ; preds = %298, %292
  %302 = load %struct._stritem*, %struct._stritem** %12, align 8
  call void @item_remove(%struct._stritem* %302)
  %303 = load %struct._obj_io*, %struct._obj_io** %16, align 8
  %304 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %303, i32 0, i32 3
  %305 = load %struct.iovec*, %struct.iovec** %304, align 8
  %306 = bitcast %struct.iovec* %305 to i8*
  call void @free(i8* %306) #14
  %307 = load %struct._obj_io*, %struct._obj_io** %16, align 8
  %308 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %307, i32 0, i32 3
  store %struct.iovec* null, %struct.iovec** %308, align 8
  %309 = load %struct.conn*, %struct.conn** %5, align 8
  %310 = getelementptr inbounds %struct.conn, %struct.conn* %309, i32 0, i32 42
  %311 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %310, align 8
  %312 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %311, i32 0, i32 9
  %313 = load %struct.cache_t*, %struct.cache_t** %312, align 8
  %314 = load %struct._io_pending_storage_t*, %struct._io_pending_storage_t** %15, align 8
  %315 = bitcast %struct._io_pending_storage_t* %314 to i8*
  call void @do_cache_free(%struct.cache_t* %313, i8* %315)
  store i32 -1, i32* %4, align 4
  br label %483

316:                                              ; preds = %298
  %317 = load %struct._strchunk*, %struct._strchunk** %19, align 8
  %318 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %317, i32 0, i32 10
  %319 = getelementptr inbounds [0 x i8], [0 x i8]* %318, i64 0, i64 0
  %320 = load %struct._obj_io*, %struct._obj_io** %16, align 8
  %321 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %320, i32 0, i32 3
  %322 = load %struct.iovec*, %struct.iovec** %321, align 8
  %323 = load i32, i32* %17, align 4
  %324 = zext i32 %323 to i64
  %325 = getelementptr inbounds %struct.iovec, %struct.iovec* %322, i64 %324
  %326 = getelementptr inbounds %struct.iovec, %struct.iovec* %325, i32 0, i32 0
  store i8* %319, i8** %326, align 8
  %327 = load i64, i64* %18, align 8
  %328 = load %struct._strchunk*, %struct._strchunk** %19, align 8
  %329 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %328, i32 0, i32 3
  %330 = load i32, i32* %329, align 8
  %331 = sext i32 %330 to i64
  %332 = icmp ult i64 %327, %331
  br i1 %332, label %333, label %335

333:                                              ; preds = %316
  %334 = load i64, i64* %18, align 8
  br label %340

335:                                              ; preds = %316
  %336 = load %struct._strchunk*, %struct._strchunk** %19, align 8
  %337 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %336, i32 0, i32 3
  %338 = load i32, i32* %337, align 8
  %339 = sext i32 %338 to i64
  br label %340

340:                                              ; preds = %335, %333
  %341 = phi i64 [ %334, %333 ], [ %339, %335 ]
  %342 = load %struct._obj_io*, %struct._obj_io** %16, align 8
  %343 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %342, i32 0, i32 3
  %344 = load %struct.iovec*, %struct.iovec** %343, align 8
  %345 = load i32, i32* %17, align 4
  %346 = zext i32 %345 to i64
  %347 = getelementptr inbounds %struct.iovec, %struct.iovec* %344, i64 %346
  %348 = getelementptr inbounds %struct.iovec, %struct.iovec* %347, i32 0, i32 1
  store i64 %341, i64* %348, align 8
  %349 = load i64, i64* %18, align 8
  %350 = load %struct._strchunk*, %struct._strchunk** %19, align 8
  %351 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %350, i32 0, i32 3
  %352 = load i32, i32* %351, align 8
  %353 = sext i32 %352 to i64
  %354 = icmp ult i64 %349, %353
  br i1 %354, label %355, label %357

355:                                              ; preds = %340
  %356 = load i64, i64* %18, align 8
  br label %362

357:                                              ; preds = %340
  %358 = load %struct._strchunk*, %struct._strchunk** %19, align 8
  %359 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %358, i32 0, i32 3
  %360 = load i32, i32* %359, align 8
  %361 = sext i32 %360 to i64
  br label %362

362:                                              ; preds = %357, %355
  %363 = phi i64 [ %356, %355 ], [ %361, %357 ]
  %364 = trunc i64 %363 to i32
  %365 = load %struct._strchunk*, %struct._strchunk** %19, align 8
  %366 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %365, i32 0, i32 4
  store i32 %364, i32* %366, align 4
  %367 = load %struct._strchunk*, %struct._strchunk** %19, align 8
  %368 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %367, i32 0, i32 3
  %369 = load i32, i32* %368, align 8
  %370 = sext i32 %369 to i64
  %371 = load i64, i64* %18, align 8
  %372 = sub i64 %371, %370
  store i64 %372, i64* %18, align 8
  %373 = load i32, i32* %17, align 4
  %374 = add i32 %373, 1
  store i32 %374, i32* %17, align 4
  br label %289, !llvm.loop !223

375:                                              ; preds = %289
  %376 = load i32, i32* %17, align 4
  %377 = load %struct._obj_io*, %struct._obj_io** %16, align 8
  %378 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %377, i32 0, i32 4
  store i32 %376, i32* %378, align 8
  br label %379

379:                                              ; preds = %375, %150
  %380 = load %struct._mc_resp*, %struct._mc_resp** %7, align 8
  %381 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %380, i32 0, i32 9
  %382 = load i8, i8* %381, align 4
  %383 = zext i8 %382 to i32
  %384 = load %struct._io_pending_storage_t*, %struct._io_pending_storage_t** %15, align 8
  %385 = getelementptr inbounds %struct._io_pending_storage_t, %struct._io_pending_storage_t* %384, i32 0, i32 6
  store i32 %383, i32* %385, align 8
  %386 = load %struct.conn*, %struct.conn** %5, align 8
  %387 = getelementptr inbounds %struct.conn, %struct.conn* %386, i32 0, i32 28
  %388 = load i32, i32* %387, align 4
  %389 = icmp eq i32 %388, 4
  br i1 %389, label %390, label %395

390:                                              ; preds = %379
  %391 = load %struct._stritem*, %struct._stritem** %6, align 8
  %392 = getelementptr inbounds %struct._stritem, %struct._stritem* %391, i32 0, i32 5
  %393 = load i32, i32* %392, align 8
  %394 = sub nsw i32 %393, 2
  br label %399

395:                                              ; preds = %379
  %396 = load %struct._stritem*, %struct._stritem** %6, align 8
  %397 = getelementptr inbounds %struct._stritem, %struct._stritem* %396, i32 0, i32 5
  %398 = load i32, i32* %397, align 8
  br label %399

399:                                              ; preds = %395, %390
  %400 = phi i32 [ %394, %390 ], [ %398, %395 ]
  store i32 %400, i32* %20, align 4
  %401 = load i8, i8* %13, align 1
  %402 = trunc i8 %401 to i1
  br i1 %402, label %403, label %408

403:                                              ; preds = %399
  %404 = load %struct._mc_resp*, %struct._mc_resp** %7, align 8
  %405 = load %struct._stritem*, %struct._stritem** %12, align 8
  %406 = bitcast %struct._stritem* %405 to i8*
  %407 = load i32, i32* %20, align 4
  call void @resp_add_chunked_iov(%struct._mc_resp* %404, i8* %406, i32 %407)
  br label %411

408:                                              ; preds = %399
  %409 = load %struct._mc_resp*, %struct._mc_resp** %7, align 8
  %410 = load i32, i32* %20, align 4
  call void @resp_add_iov(%struct._mc_resp* %409, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.26.1255, i64 0, i64 0), i32 %410)
  br label %411

411:                                              ; preds = %408, %403
  %412 = load %struct._io_pending_storage_t*, %struct._io_pending_storage_t** %15, align 8
  %413 = bitcast %struct._io_pending_storage_t* %412 to %struct._io_pending_t*
  %414 = load %struct._mc_resp*, %struct._mc_resp** %7, align 8
  %415 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %414, i32 0, i32 5
  store %struct._io_pending_t* %413, %struct._io_pending_t** %415, align 8
  %416 = load %struct._stritem*, %struct._stritem** %12, align 8
  %417 = bitcast %struct._stritem* %416 to i8*
  %418 = load %struct._obj_io*, %struct._obj_io** %16, align 8
  %419 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %418, i32 0, i32 2
  store i8* %417, i8** %419, align 8
  %420 = load %struct.conn*, %struct.conn** %5, align 8
  %421 = load %struct._io_pending_storage_t*, %struct._io_pending_storage_t** %15, align 8
  %422 = getelementptr inbounds %struct._io_pending_storage_t, %struct._io_pending_storage_t* %421, i32 0, i32 2
  store %struct.conn* %420, %struct.conn** %422, align 8
  %423 = load %struct.io_queue_s*, %struct.io_queue_s** %9, align 8
  %424 = getelementptr inbounds %struct.io_queue_s, %struct.io_queue_s* %423, i32 0, i32 1
  %425 = load i8*, i8** %424, align 8
  %426 = bitcast i8* %425 to %struct._obj_io*
  %427 = load %struct._obj_io*, %struct._obj_io** %16, align 8
  %428 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %427, i32 0, i32 1
  store %struct._obj_io* %426, %struct._obj_io** %428, align 8
  %429 = load %struct._obj_io*, %struct._obj_io** %16, align 8
  %430 = bitcast %struct._obj_io* %429 to i8*
  %431 = load %struct.io_queue_s*, %struct.io_queue_s** %9, align 8
  %432 = getelementptr inbounds %struct.io_queue_s, %struct.io_queue_s* %431, i32 0, i32 1
  store i8* %430, i8** %432, align 8
  %433 = load %struct.io_queue_s*, %struct.io_queue_s** %9, align 8
  %434 = getelementptr inbounds %struct.io_queue_s, %struct.io_queue_s* %433, i32 0, i32 2
  %435 = load i32, i32* %434, align 8
  %436 = add nsw i32 %435, 1
  store i32 %436, i32* %434, align 8
  %437 = load %struct._io_pending_storage_t*, %struct._io_pending_storage_t** %15, align 8
  %438 = bitcast %struct._io_pending_storage_t* %437 to i8*
  %439 = load %struct._obj_io*, %struct._obj_io** %16, align 8
  %440 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %439, i32 0, i32 0
  store i8* %438, i8** %440, align 8
  %441 = load %struct.item_hdr*, %struct.item_hdr** %8, align 8
  %442 = getelementptr inbounds %struct.item_hdr, %struct.item_hdr* %441, i32 0, i32 0
  %443 = load i32, i32* %442, align 4
  %444 = load %struct._obj_io*, %struct._obj_io** %16, align 8
  %445 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %444, i32 0, i32 5
  store i32 %443, i32* %445, align 4
  %446 = load %struct.item_hdr*, %struct.item_hdr** %8, align 8
  %447 = getelementptr inbounds %struct.item_hdr, %struct.item_hdr* %446, i32 0, i32 2
  %448 = load i16, i16* %447, align 4
  %449 = load %struct._obj_io*, %struct._obj_io** %16, align 8
  %450 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %449, i32 0, i32 8
  store i16 %448, i16* %450, align 8
  %451 = load %struct.item_hdr*, %struct.item_hdr** %8, align 8
  %452 = getelementptr inbounds %struct.item_hdr, %struct.item_hdr* %451, i32 0, i32 1
  %453 = load i32, i32* %452, align 4
  %454 = load %struct._obj_io*, %struct._obj_io** %16, align 8
  %455 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %454, i32 0, i32 7
  store i32 %453, i32* %455, align 4
  %456 = load i64, i64* %10, align 8
  %457 = trunc i64 %456 to i32
  %458 = load %struct._obj_io*, %struct._obj_io** %16, align 8
  %459 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %458, i32 0, i32 6
  store i32 %457, i32* %459, align 8
  %460 = load %struct._obj_io*, %struct._obj_io** %16, align 8
  %461 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %460, i32 0, i32 9
  store i32 0, i32* %461, align 4
  %462 = load %struct._obj_io*, %struct._obj_io** %16, align 8
  %463 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %462, i32 0, i32 10
  store void (i8*, %struct._obj_io*, i32)* @_storage_get_item_cb, void (i8*, %struct._obj_io*, i32)** %463, align 8
  %464 = load %struct.conn*, %struct.conn** %5, align 8
  %465 = getelementptr inbounds %struct.conn, %struct.conn* %464, i32 0, i32 42
  %466 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %465, align 8
  %467 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %466, i32 0, i32 4
  %468 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %467, i32 0, i32 0
  %469 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %468) #14
  %470 = load %struct.conn*, %struct.conn** %5, align 8
  %471 = getelementptr inbounds %struct.conn, %struct.conn* %470, i32 0, i32 42
  %472 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %471, align 8
  %473 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %472, i32 0, i32 4
  %474 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %473, i32 0, i32 25
  %475 = load i64, i64* %474, align 8
  %476 = add i64 %475, 1
  store i64 %476, i64* %474, align 8
  %477 = load %struct.conn*, %struct.conn** %5, align 8
  %478 = getelementptr inbounds %struct.conn, %struct.conn* %477, i32 0, i32 42
  %479 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %478, align 8
  %480 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %479, i32 0, i32 4
  %481 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %480, i32 0, i32 0
  %482 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %481) #14
  store i32 0, i32* %4, align 4
  br label %483

483:                                              ; preds = %411, %301, %231, %149
  %484 = load i32, i32* %4, align 4
  ret i32 %484
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @_storage_get_item_cb(i8* %0, %struct._obj_io* %1, i32 %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca %struct._obj_io*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct._io_pending_storage_t*, align 8
  %8 = alloca %struct._mc_resp*, align 8
  %9 = alloca %struct.conn*, align 8
  %10 = alloca %struct._stritem*, align 8
  %11 = alloca i8, align 1
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %union.protocol_binary_request_header*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i8, align 1
  %18 = alloca i32, align 4
  %19 = alloca %struct.io_queue_s*, align 8
  store i8* %0, i8** %4, align 8
  store %struct._obj_io* %1, %struct._obj_io** %5, align 8
  store i32 %2, i32* %6, align 4
  %20 = load %struct._obj_io*, %struct._obj_io** %5, align 8
  %21 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %20, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = bitcast i8* %22 to %struct._io_pending_storage_t*
  store %struct._io_pending_storage_t* %23, %struct._io_pending_storage_t** %7, align 8
  %24 = load %struct._io_pending_storage_t*, %struct._io_pending_storage_t** %7, align 8
  %25 = getelementptr inbounds %struct._io_pending_storage_t, %struct._io_pending_storage_t* %24, i32 0, i32 3
  %26 = load %struct._mc_resp*, %struct._mc_resp** %25, align 8
  store %struct._mc_resp* %26, %struct._mc_resp** %8, align 8
  %27 = load %struct._io_pending_storage_t*, %struct._io_pending_storage_t** %7, align 8
  %28 = getelementptr inbounds %struct._io_pending_storage_t, %struct._io_pending_storage_t* %27, i32 0, i32 2
  %29 = load %struct.conn*, %struct.conn** %28, align 8
  store %struct.conn* %29, %struct.conn** %9, align 8
  %30 = load %struct._obj_io*, %struct._obj_io** %5, align 8
  %31 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %30, i32 0, i32 2
  %32 = load i8*, i8** %31, align 8
  %33 = bitcast i8* %32 to %struct._stritem*
  store %struct._stritem* %33, %struct._stritem** %10, align 8
  store i8 0, i8* %11, align 1
  %34 = load i32, i32* %6, align 4
  %35 = icmp slt i32 %34, 1
  br i1 %35, label %36, label %37

36:                                               ; preds = %3
  store i8 1, i8* %11, align 1
  br label %116

37:                                               ; preds = %3
  %38 = load %struct._stritem*, %struct._stritem** %10, align 8
  %39 = getelementptr inbounds %struct._stritem, %struct._stritem* %38, i32 0, i32 4
  %40 = load i32, i32* %39, align 4
  store i32 %40, i32* %13, align 4
  %41 = load %struct._obj_io*, %struct._obj_io** %5, align 8
  %42 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %41, i32 0, i32 3
  %43 = load %struct.iovec*, %struct.iovec** %42, align 8
  %44 = icmp ne %struct.iovec* %43, null
  br i1 %44, label %45, label %97

45:                                               ; preds = %37
  %46 = load i32 (i32, i8*, i64)*, i32 (i32, i8*, i64)** @crc32c, align 8
  %47 = load %struct._obj_io*, %struct._obj_io** %5, align 8
  %48 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %47, i32 0, i32 3
  %49 = load %struct.iovec*, %struct.iovec** %48, align 8
  %50 = getelementptr inbounds %struct.iovec, %struct.iovec* %49, i64 0
  %51 = getelementptr inbounds %struct.iovec, %struct.iovec* %50, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = getelementptr inbounds i8, i8* %52, i64 32
  %54 = load %struct._obj_io*, %struct._obj_io** %5, align 8
  %55 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %54, i32 0, i32 3
  %56 = load %struct.iovec*, %struct.iovec** %55, align 8
  %57 = getelementptr inbounds %struct.iovec, %struct.iovec* %56, i64 0
  %58 = getelementptr inbounds %struct.iovec, %struct.iovec* %57, i32 0, i32 1
  %59 = load i64, i64* %58, align 8
  %60 = sub i64 %59, 32
  %61 = call i32 %46(i32 0, i8* %53, i64 %60)
  store i32 %61, i32* %12, align 4
  %62 = load %struct._obj_io*, %struct._obj_io** %5, align 8
  %63 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %62, i32 0, i32 3
  %64 = load %struct.iovec*, %struct.iovec** %63, align 8
  %65 = getelementptr inbounds %struct.iovec, %struct.iovec* %64, i64 0
  %66 = getelementptr inbounds %struct.iovec, %struct.iovec* %65, i32 0, i32 1
  store i64 0, i64* %66, align 8
  store i32 1, i32* %14, align 4
  br label %67

67:                                               ; preds = %93, %45
  %68 = load i32, i32* %14, align 4
  %69 = load %struct._obj_io*, %struct._obj_io** %5, align 8
  %70 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %69, i32 0, i32 4
  %71 = load i32, i32* %70, align 8
  %72 = icmp ult i32 %68, %71
  br i1 %72, label %73, label %96

73:                                               ; preds = %67
  %74 = load i32 (i32, i8*, i64)*, i32 (i32, i8*, i64)** @crc32c, align 8
  %75 = load i32, i32* %12, align 4
  %76 = load %struct._obj_io*, %struct._obj_io** %5, align 8
  %77 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %76, i32 0, i32 3
  %78 = load %struct.iovec*, %struct.iovec** %77, align 8
  %79 = load i32, i32* %14, align 4
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds %struct.iovec, %struct.iovec* %78, i64 %80
  %82 = getelementptr inbounds %struct.iovec, %struct.iovec* %81, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  %84 = load %struct._obj_io*, %struct._obj_io** %5, align 8
  %85 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %84, i32 0, i32 3
  %86 = load %struct.iovec*, %struct.iovec** %85, align 8
  %87 = load i32, i32* %14, align 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds %struct.iovec, %struct.iovec* %86, i64 %88
  %90 = getelementptr inbounds %struct.iovec, %struct.iovec* %89, i32 0, i32 1
  %91 = load i64, i64* %90, align 8
  %92 = call i32 %74(i32 %75, i8* %83, i64 %91)
  store i32 %92, i32* %12, align 4
  br label %93

93:                                               ; preds = %73
  %94 = load i32, i32* %14, align 4
  %95 = add nsw i32 %94, 1
  store i32 %95, i32* %14, align 4
  br label %67, !llvm.loop !224

96:                                               ; preds = %67
  br label %108

97:                                               ; preds = %37
  %98 = load i32 (i32, i8*, i64)*, i32 (i32, i8*, i64)** @crc32c, align 8
  %99 = load %struct._stritem*, %struct._stritem** %10, align 8
  %100 = bitcast %struct._stritem* %99 to i8*
  %101 = getelementptr inbounds i8, i8* %100, i64 32
  %102 = load %struct._obj_io*, %struct._obj_io** %5, align 8
  %103 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %102, i32 0, i32 6
  %104 = load i32, i32* %103, align 8
  %105 = zext i32 %104 to i64
  %106 = sub i64 %105, 32
  %107 = call i32 %98(i32 0, i8* %101, i64 %106)
  store i32 %107, i32* %12, align 4
  br label %108

108:                                              ; preds = %97, %96
  %109 = load i32, i32* %13, align 4
  %110 = load i32, i32* %12, align 4
  %111 = icmp ne i32 %109, %110
  br i1 %111, label %112, label %115

112:                                              ; preds = %108
  store i8 1, i8* %11, align 1
  %113 = load %struct._io_pending_storage_t*, %struct._io_pending_storage_t** %7, align 8
  %114 = getelementptr inbounds %struct._io_pending_storage_t, %struct._io_pending_storage_t* %113, i32 0, i32 9
  store i8 1, i8* %114, align 2
  br label %115

115:                                              ; preds = %112, %108
  br label %116

116:                                              ; preds = %115, %36
  %117 = load i8, i8* %11, align 1
  %118 = trunc i8 %117 to i1
  br i1 %118, label %119, label %285

119:                                              ; preds = %116
  %120 = load %struct._io_pending_storage_t*, %struct._io_pending_storage_t** %7, align 8
  %121 = getelementptr inbounds %struct._io_pending_storage_t, %struct._io_pending_storage_t* %120, i32 0, i32 7
  %122 = load i8, i8* %121, align 4
  %123 = trunc i8 %122 to i1
  br i1 %123, label %124, label %127

124:                                              ; preds = %119
  %125 = load %struct._mc_resp*, %struct._mc_resp** %8, align 8
  %126 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %125, i32 0, i32 11
  store i8 1, i8* %126, align 2
  br label %282

127:                                              ; preds = %119
  %128 = load %struct.conn*, %struct.conn** %9, align 8
  %129 = getelementptr inbounds %struct.conn, %struct.conn* %128, i32 0, i32 28
  %130 = load i32, i32* %129, align 4
  %131 = icmp eq i32 %130, 4
  br i1 %131, label %132, label %211

132:                                              ; preds = %127
  %133 = load %struct._mc_resp*, %struct._mc_resp** %8, align 8
  %134 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %133, i32 0, i32 18
  %135 = getelementptr inbounds [1024 x i8], [1024 x i8]* %134, i64 0, i64 0
  %136 = bitcast i8* %135 to %union.protocol_binary_request_header*
  store %union.protocol_binary_request_header* %136, %union.protocol_binary_request_header** %15, align 8
  %137 = load %union.protocol_binary_request_header*, %union.protocol_binary_request_header** %15, align 8
  %138 = bitcast %union.protocol_binary_request_header* %137 to %struct.anon.13*
  %139 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %138, i32 0, i32 6
  %140 = load i32, i32* %139, align 8
  %141 = call i32 @ntohl(i32 %140) #15
  store i32 %141, i32* %16, align 4
  %142 = load %union.protocol_binary_request_header*, %union.protocol_binary_request_header** %15, align 8
  %143 = bitcast %union.protocol_binary_request_header* %142 to %struct.anon.13*
  %144 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %143, i32 0, i32 3
  %145 = load i8, i8* %144, align 4
  store i8 %145, i8* %17, align 1
  %146 = load %struct._mc_resp*, %struct._mc_resp** %8, align 8
  %147 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %146, i32 0, i32 7
  %148 = load %struct._io_pending_storage_t*, %struct._io_pending_storage_t** %7, align 8
  %149 = getelementptr inbounds %struct._io_pending_storage_t, %struct._io_pending_storage_t* %148, i32 0, i32 6
  %150 = load i32, i32* %149, align 8
  %151 = zext i32 %150 to i64
  %152 = getelementptr inbounds [4 x %struct.iovec], [4 x %struct.iovec]* %147, i64 0, i64 %151
  %153 = getelementptr inbounds %struct.iovec, %struct.iovec* %152, i32 0, i32 1
  %154 = load i64, i64* %153, align 8
  %155 = load i8, i8* %17, align 1
  %156 = zext i8 %155 to i64
  %157 = add i64 %154, %156
  %158 = load i32, i32* %16, align 4
  %159 = zext i32 %158 to i64
  %160 = sub i64 %159, %157
  %161 = trunc i64 %160 to i32
  store i32 %161, i32* %16, align 4
  %162 = load %struct._mc_resp*, %struct._mc_resp** %8, align 8
  %163 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %162, i32 0, i32 7
  %164 = load %struct._io_pending_storage_t*, %struct._io_pending_storage_t** %7, align 8
  %165 = getelementptr inbounds %struct._io_pending_storage_t, %struct._io_pending_storage_t* %164, i32 0, i32 6
  %166 = load i32, i32* %165, align 8
  %167 = zext i32 %166 to i64
  %168 = getelementptr inbounds [4 x %struct.iovec], [4 x %struct.iovec]* %163, i64 0, i64 %167
  %169 = getelementptr inbounds %struct.iovec, %struct.iovec* %168, i32 0, i32 1
  %170 = load i64, i64* %169, align 8
  %171 = load i8, i8* %17, align 1
  %172 = zext i8 %171 to i64
  %173 = add i64 %170, %172
  %174 = load %struct._mc_resp*, %struct._mc_resp** %8, align 8
  %175 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %174, i32 0, i32 3
  %176 = load i32, i32* %175, align 4
  %177 = sext i32 %176 to i64
  %178 = sub i64 %177, %173
  %179 = trunc i64 %178 to i32
  store i32 %179, i32* %175, align 4
  %180 = load %union.protocol_binary_request_header*, %union.protocol_binary_request_header** %15, align 8
  %181 = bitcast %union.protocol_binary_request_header* %180 to %struct.anon.13*
  %182 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %181, i32 0, i32 3
  store i8 0, i8* %182, align 4
  %183 = call zeroext i16 @htons(i16 zeroext 1) #15
  %184 = load %union.protocol_binary_request_header*, %union.protocol_binary_request_header** %15, align 8
  %185 = bitcast %union.protocol_binary_request_header* %184 to %struct.anon.13*
  %186 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %185, i32 0, i32 5
  store i16 %183, i16* %186, align 2
  %187 = load i32, i32* %16, align 4
  %188 = call i32 @htonl(i32 %187) #15
  %189 = load %union.protocol_binary_request_header*, %union.protocol_binary_request_header** %15, align 8
  %190 = bitcast %union.protocol_binary_request_header* %189 to %struct.anon.13*
  %191 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %190, i32 0, i32 6
  store i32 %188, i32* %191, align 8
  %192 = load %struct._mc_resp*, %struct._mc_resp** %8, align 8
  %193 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %192, i32 0, i32 7
  %194 = load %struct._io_pending_storage_t*, %struct._io_pending_storage_t** %7, align 8
  %195 = getelementptr inbounds %struct._io_pending_storage_t, %struct._io_pending_storage_t* %194, i32 0, i32 6
  %196 = load i32, i32* %195, align 8
  %197 = zext i32 %196 to i64
  %198 = getelementptr inbounds [4 x %struct.iovec], [4 x %struct.iovec]* %193, i64 0, i64 %197
  %199 = getelementptr inbounds %struct.iovec, %struct.iovec* %198, i32 0, i32 1
  store i64 0, i64* %199, align 8
  %200 = load %struct._mc_resp*, %struct._mc_resp** %8, align 8
  %201 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %200, i32 0, i32 7
  %202 = load %struct._io_pending_storage_t*, %struct._io_pending_storage_t** %7, align 8
  %203 = getelementptr inbounds %struct._io_pending_storage_t, %struct._io_pending_storage_t* %202, i32 0, i32 6
  %204 = load i32, i32* %203, align 8
  %205 = sub i32 %204, 1
  %206 = zext i32 %205 to i64
  %207 = getelementptr inbounds [4 x %struct.iovec], [4 x %struct.iovec]* %201, i64 0, i64 %206
  %208 = getelementptr inbounds %struct.iovec, %struct.iovec* %207, i32 0, i32 1
  store i64 0, i64* %208, align 8
  %209 = load %struct._mc_resp*, %struct._mc_resp** %8, align 8
  %210 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %209, i32 0, i32 10
  store i8 0, i8* %210, align 1
  br label %281

211:                                              ; preds = %127
  %212 = load %struct._mc_resp*, %struct._mc_resp** %8, align 8
  %213 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %212, i32 0, i32 7
  %214 = getelementptr inbounds [4 x %struct.iovec], [4 x %struct.iovec]* %213, i64 0, i64 0
  %215 = getelementptr inbounds %struct.iovec, %struct.iovec* %214, i32 0, i32 1
  %216 = load i64, i64* %215, align 8
  %217 = icmp uge i64 %216, 3
  br i1 %217, label %218, label %239

218:                                              ; preds = %211
  %219 = load %struct._mc_resp*, %struct._mc_resp** %8, align 8
  %220 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %219, i32 0, i32 7
  %221 = getelementptr inbounds [4 x %struct.iovec], [4 x %struct.iovec]* %220, i64 0, i64 0
  %222 = getelementptr inbounds %struct.iovec, %struct.iovec* %221, i32 0, i32 0
  %223 = load i8*, i8** %222, align 8
  %224 = call i32 @memcmp(i8* %223, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.87.1256, i64 0, i64 0), i64 3) #16
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %226, label %239

226:                                              ; preds = %218
  %227 = load %struct._mc_resp*, %struct._mc_resp** %8, align 8
  %228 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %227, i32 0, i32 9
  store i8 1, i8* %228, align 4
  %229 = load %struct._mc_resp*, %struct._mc_resp** %8, align 8
  %230 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %229, i32 0, i32 7
  %231 = getelementptr inbounds [4 x %struct.iovec], [4 x %struct.iovec]* %230, i64 0, i64 0
  %232 = getelementptr inbounds %struct.iovec, %struct.iovec* %231, i32 0, i32 1
  store i64 4, i64* %232, align 8
  %233 = load %struct._mc_resp*, %struct._mc_resp** %8, align 8
  %234 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %233, i32 0, i32 7
  %235 = getelementptr inbounds [4 x %struct.iovec], [4 x %struct.iovec]* %234, i64 0, i64 0
  %236 = getelementptr inbounds %struct.iovec, %struct.iovec* %235, i32 0, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.88.1257, i64 0, i64 0), i8** %236, align 8
  %237 = load %struct._mc_resp*, %struct._mc_resp** %8, align 8
  %238 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %237, i32 0, i32 3
  store i32 4, i32* %238, align 4
  br label %276

239:                                              ; preds = %218, %211
  store i32 0, i32* %18, align 4
  br label %240

240:                                              ; preds = %272, %239
  %241 = load i32, i32* %18, align 4
  %242 = load %struct._io_pending_storage_t*, %struct._io_pending_storage_t** %7, align 8
  %243 = getelementptr inbounds %struct._io_pending_storage_t, %struct._io_pending_storage_t* %242, i32 0, i32 6
  %244 = load i32, i32* %243, align 8
  %245 = icmp ule i32 %241, %244
  br i1 %245, label %246, label %275

246:                                              ; preds = %240
  %247 = load %struct._mc_resp*, %struct._mc_resp** %8, align 8
  %248 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %247, i32 0, i32 7
  %249 = load i32, i32* %18, align 4
  %250 = sext i32 %249 to i64
  %251 = getelementptr inbounds [4 x %struct.iovec], [4 x %struct.iovec]* %248, i64 0, i64 %250
  %252 = getelementptr inbounds %struct.iovec, %struct.iovec* %251, i32 0, i32 1
  %253 = load i64, i64* %252, align 8
  %254 = load %struct._mc_resp*, %struct._mc_resp** %8, align 8
  %255 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %254, i32 0, i32 3
  %256 = load i32, i32* %255, align 4
  %257 = sext i32 %256 to i64
  %258 = sub i64 %257, %253
  %259 = trunc i64 %258 to i32
  store i32 %259, i32* %255, align 4
  %260 = load %struct._mc_resp*, %struct._mc_resp** %8, align 8
  %261 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %260, i32 0, i32 7
  %262 = load i32, i32* %18, align 4
  %263 = sext i32 %262 to i64
  %264 = getelementptr inbounds [4 x %struct.iovec], [4 x %struct.iovec]* %261, i64 0, i64 %263
  %265 = getelementptr inbounds %struct.iovec, %struct.iovec* %264, i32 0, i32 1
  store i64 0, i64* %265, align 8
  %266 = load %struct._mc_resp*, %struct._mc_resp** %8, align 8
  %267 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %266, i32 0, i32 7
  %268 = load i32, i32* %18, align 4
  %269 = sext i32 %268 to i64
  %270 = getelementptr inbounds [4 x %struct.iovec], [4 x %struct.iovec]* %267, i64 0, i64 %269
  %271 = getelementptr inbounds %struct.iovec, %struct.iovec* %270, i32 0, i32 0
  store i8* null, i8** %271, align 8
  br label %272

272:                                              ; preds = %246
  %273 = load i32, i32* %18, align 4
  %274 = add nsw i32 %273, 1
  store i32 %274, i32* %18, align 4
  br label %240, !llvm.loop !225

275:                                              ; preds = %240
  br label %276

276:                                              ; preds = %275, %226
  %277 = load %struct._mc_resp*, %struct._mc_resp** %8, align 8
  %278 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %277, i32 0, i32 8
  store i32 0, i32* %278, align 8
  %279 = load %struct._mc_resp*, %struct._mc_resp** %8, align 8
  %280 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %279, i32 0, i32 10
  store i8 0, i8* %280, align 1
  br label %281

281:                                              ; preds = %276, %132
  br label %282

282:                                              ; preds = %281, %124
  %283 = load %struct._io_pending_storage_t*, %struct._io_pending_storage_t** %7, align 8
  %284 = getelementptr inbounds %struct._io_pending_storage_t, %struct._io_pending_storage_t* %283, i32 0, i32 8
  store i8 1, i8* %284, align 1
  br label %332

285:                                              ; preds = %116
  %286 = load %struct._stritem*, %struct._stritem** %10, align 8
  %287 = getelementptr inbounds %struct._stritem, %struct._stritem* %286, i32 0, i32 7
  %288 = load i16, i16* %287, align 2
  %289 = zext i16 %288 to i32
  %290 = and i32 %289, 32
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %292, label %329

292:                                              ; preds = %285
  %293 = load %struct._stritem*, %struct._stritem** %10, align 8
  %294 = getelementptr inbounds %struct._stritem, %struct._stritem* %293, i32 0, i32 10
  %295 = bitcast [0 x %union.anon.10]* %294 to i8*
  %296 = load %struct._stritem*, %struct._stritem** %10, align 8
  %297 = getelementptr inbounds %struct._stritem, %struct._stritem* %296, i32 0, i32 9
  %298 = load i8, i8* %297, align 1
  %299 = zext i8 %298 to i32
  %300 = sext i32 %299 to i64
  %301 = getelementptr inbounds i8, i8* %295, i64 %300
  %302 = getelementptr inbounds i8, i8* %301, i64 1
  %303 = load %struct._stritem*, %struct._stritem** %10, align 8
  %304 = getelementptr inbounds %struct._stritem, %struct._stritem* %303, i32 0, i32 7
  %305 = load i16, i16* %304, align 2
  %306 = zext i16 %305 to i32
  %307 = and i32 %306, 256
  %308 = icmp ne i32 %307, 0
  %309 = zext i1 %308 to i64
  %310 = select i1 %308, i64 4, i64 0
  %311 = getelementptr inbounds i8, i8* %302, i64 %310
  %312 = load %struct._stritem*, %struct._stritem** %10, align 8
  %313 = getelementptr inbounds %struct._stritem, %struct._stritem* %312, i32 0, i32 7
  %314 = load i16, i16* %313, align 2
  %315 = zext i16 %314 to i32
  %316 = and i32 %315, 2
  %317 = icmp ne i32 %316, 0
  %318 = zext i1 %317 to i64
  %319 = select i1 %317, i64 8, i64 0
  %320 = getelementptr inbounds i8, i8* %311, i64 %319
  %321 = load %struct._mc_resp*, %struct._mc_resp** %8, align 8
  %322 = getelementptr inbounds %struct._mc_resp, %struct._mc_resp* %321, i32 0, i32 7
  %323 = load %struct._io_pending_storage_t*, %struct._io_pending_storage_t** %7, align 8
  %324 = getelementptr inbounds %struct._io_pending_storage_t, %struct._io_pending_storage_t* %323, i32 0, i32 6
  %325 = load i32, i32* %324, align 8
  %326 = zext i32 %325 to i64
  %327 = getelementptr inbounds [4 x %struct.iovec], [4 x %struct.iovec]* %322, i64 0, i64 %326
  %328 = getelementptr inbounds %struct.iovec, %struct.iovec* %327, i32 0, i32 0
  store i8* %320, i8** %328, align 8
  br label %329

329:                                              ; preds = %292, %285
  %330 = load %struct._io_pending_storage_t*, %struct._io_pending_storage_t** %7, align 8
  %331 = getelementptr inbounds %struct._io_pending_storage_t, %struct._io_pending_storage_t* %330, i32 0, i32 8
  store i8 0, i8* %331, align 1
  br label %332

332:                                              ; preds = %329, %282
  %333 = load %struct._io_pending_storage_t*, %struct._io_pending_storage_t** %7, align 8
  %334 = getelementptr inbounds %struct._io_pending_storage_t, %struct._io_pending_storage_t* %333, i32 0, i32 10
  store i8 0, i8* %334, align 1
  %335 = load %struct._io_pending_storage_t*, %struct._io_pending_storage_t** %7, align 8
  %336 = getelementptr inbounds %struct._io_pending_storage_t, %struct._io_pending_storage_t* %335, i32 0, i32 2
  %337 = load %struct.conn*, %struct.conn** %336, align 8
  %338 = load %struct._io_pending_storage_t*, %struct._io_pending_storage_t** %7, align 8
  %339 = getelementptr inbounds %struct._io_pending_storage_t, %struct._io_pending_storage_t* %338, i32 0, i32 0
  %340 = load i32, i32* %339, align 8
  %341 = call %struct.io_queue_s* @conn_io_queue_get(%struct.conn* %337, i32 %340)
  store %struct.io_queue_s* %341, %struct.io_queue_s** %19, align 8
  %342 = load %struct.io_queue_s*, %struct.io_queue_s** %19, align 8
  %343 = getelementptr inbounds %struct.io_queue_s, %struct.io_queue_s* %342, i32 0, i32 2
  %344 = load i32, i32* %343, align 8
  %345 = add nsw i32 %344, -1
  store i32 %345, i32* %343, align 8
  %346 = load %struct.io_queue_s*, %struct.io_queue_s** %19, align 8
  %347 = getelementptr inbounds %struct.io_queue_s, %struct.io_queue_s* %346, i32 0, i32 2
  %348 = load i32, i32* %347, align 8
  %349 = icmp eq i32 %348, 0
  br i1 %349, label %350, label %352

350:                                              ; preds = %332
  %351 = load %struct.conn*, %struct.conn** %9, align 8
  call void @redispatch_conn(%struct.conn* %351)
  br label %352

352:                                              ; preds = %350, %332
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @storage_submit_cb(%struct.io_queue_s* %0) #0 {
  %2 = alloca %struct.io_queue_s*, align 8
  store %struct.io_queue_s* %0, %struct.io_queue_s** %2, align 8
  %3 = load %struct.io_queue_s*, %struct.io_queue_s** %2, align 8
  %4 = getelementptr inbounds %struct.io_queue_s, %struct.io_queue_s* %3, i32 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = load %struct.io_queue_s*, %struct.io_queue_s** %2, align 8
  %7 = getelementptr inbounds %struct.io_queue_s, %struct.io_queue_s* %6, i32 0, i32 1
  %8 = load i8*, i8** %7, align 8
  %9 = bitcast i8* %8 to %struct._obj_io*
  %10 = call i32 @extstore_submit(i8* %5, %struct._obj_io* %9)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @storage_complete_cb(%struct.io_queue_s* %0) #0 {
  %2 = alloca %struct.io_queue_s*, align 8
  store %struct.io_queue_s* %0, %struct.io_queue_s** %2, align 8
  %3 = load %struct.io_queue_s*, %struct.io_queue_s** %2, align 8
  %4 = getelementptr inbounds %struct.io_queue_s, %struct.io_queue_s* %3, i32 0, i32 1
  store i8* null, i8** %4, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @storage_finalize_cb(%struct._io_pending_t* %0) #0 {
  %2 = alloca %struct._io_pending_t*, align 8
  %3 = alloca %struct._io_pending_storage_t*, align 8
  %4 = alloca %struct._obj_io*, align 8
  store %struct._io_pending_t* %0, %struct._io_pending_t** %2, align 8
  %5 = load %struct._io_pending_t*, %struct._io_pending_t** %2, align 8
  call void @recache_or_free(%struct._io_pending_t* %5)
  %6 = load %struct._io_pending_t*, %struct._io_pending_t** %2, align 8
  %7 = bitcast %struct._io_pending_t* %6 to %struct._io_pending_storage_t*
  store %struct._io_pending_storage_t* %7, %struct._io_pending_storage_t** %3, align 8
  %8 = load %struct._io_pending_storage_t*, %struct._io_pending_storage_t** %3, align 8
  %9 = getelementptr inbounds %struct._io_pending_storage_t, %struct._io_pending_storage_t* %8, i32 0, i32 5
  store %struct._obj_io* %9, %struct._obj_io** %4, align 8
  %10 = load %struct._obj_io*, %struct._obj_io** %4, align 8
  %11 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %10, i32 0, i32 3
  %12 = load %struct.iovec*, %struct.iovec** %11, align 8
  %13 = icmp ne %struct.iovec* %12, null
  br i1 %13, label %14, label %21

14:                                               ; preds = %1
  %15 = load %struct._obj_io*, %struct._obj_io** %4, align 8
  %16 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %15, i32 0, i32 3
  %17 = load %struct.iovec*, %struct.iovec** %16, align 8
  %18 = bitcast %struct.iovec* %17 to i8*
  call void @free(i8* %18) #14
  %19 = load %struct._obj_io*, %struct._obj_io** %4, align 8
  %20 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %19, i32 0, i32 3
  store %struct.iovec* null, %struct.iovec** %20, align 8
  br label %21

21:                                               ; preds = %14, %1
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @recache_or_free(%struct._io_pending_t* %0) #0 {
  %2 = alloca %struct._io_pending_t*, align 8
  %3 = alloca %struct._io_pending_storage_t*, align 8
  %4 = alloca %struct.conn*, align 8
  %5 = alloca %struct._obj_io*, align 8
  %6 = alloca %struct._stritem*, align 8
  %7 = alloca i8, align 1
  %8 = alloca i64, align 8
  %9 = alloca %struct.io_queue_s*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  %13 = alloca %struct._stritem*, align 8
  %14 = alloca i8, align 1
  store %struct._io_pending_t* %0, %struct._io_pending_t** %2, align 8
  %15 = load %struct._io_pending_t*, %struct._io_pending_t** %2, align 8
  %16 = bitcast %struct._io_pending_t* %15 to %struct._io_pending_storage_t*
  store %struct._io_pending_storage_t* %16, %struct._io_pending_storage_t** %3, align 8
  %17 = load %struct._io_pending_storage_t*, %struct._io_pending_storage_t** %3, align 8
  %18 = getelementptr inbounds %struct._io_pending_storage_t, %struct._io_pending_storage_t* %17, i32 0, i32 2
  %19 = load %struct.conn*, %struct.conn** %18, align 8
  store %struct.conn* %19, %struct.conn** %4, align 8
  %20 = load %struct._io_pending_storage_t*, %struct._io_pending_storage_t** %3, align 8
  %21 = getelementptr inbounds %struct._io_pending_storage_t, %struct._io_pending_storage_t* %20, i32 0, i32 5
  store %struct._obj_io* %21, %struct._obj_io** %5, align 8
  %22 = load %struct._obj_io*, %struct._obj_io** %5, align 8
  %23 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %22, i32 0, i32 2
  %24 = load i8*, i8** %23, align 8
  %25 = bitcast i8* %24 to %struct._stritem*
  store %struct._stritem* %25, %struct._stritem** %6, align 8
  store i8 1, i8* %7, align 1
  %26 = load %struct._io_pending_storage_t*, %struct._io_pending_storage_t** %3, align 8
  %27 = getelementptr inbounds %struct._io_pending_storage_t, %struct._io_pending_storage_t* %26, i32 0, i32 10
  %28 = load i8, i8* %27, align 1
  %29 = trunc i8 %28 to i1
  br i1 %29, label %30, label %101

30:                                               ; preds = %1
  store i8 0, i8* %7, align 1
  %31 = load %struct._io_pending_storage_t*, %struct._io_pending_storage_t** %3, align 8
  %32 = getelementptr inbounds %struct._io_pending_storage_t, %struct._io_pending_storage_t* %31, i32 0, i32 4
  %33 = load %struct._stritem*, %struct._stritem** %32, align 8
  %34 = getelementptr inbounds %struct._stritem, %struct._stritem* %33, i32 0, i32 9
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i64
  %37 = add i64 48, %36
  %38 = add i64 %37, 1
  %39 = load %struct._io_pending_storage_t*, %struct._io_pending_storage_t** %3, align 8
  %40 = getelementptr inbounds %struct._io_pending_storage_t, %struct._io_pending_storage_t* %39, i32 0, i32 4
  %41 = load %struct._stritem*, %struct._stritem** %40, align 8
  %42 = getelementptr inbounds %struct._stritem, %struct._stritem* %41, i32 0, i32 5
  %43 = load i32, i32* %42, align 8
  %44 = sext i32 %43 to i64
  %45 = add i64 %38, %44
  %46 = load %struct._io_pending_storage_t*, %struct._io_pending_storage_t** %3, align 8
  %47 = getelementptr inbounds %struct._io_pending_storage_t, %struct._io_pending_storage_t* %46, i32 0, i32 4
  %48 = load %struct._stritem*, %struct._stritem** %47, align 8
  %49 = getelementptr inbounds %struct._stritem, %struct._stritem* %48, i32 0, i32 7
  %50 = load i16, i16* %49, align 2
  %51 = zext i16 %50 to i32
  %52 = and i32 %51, 256
  %53 = icmp ne i32 %52, 0
  %54 = zext i1 %53 to i64
  %55 = select i1 %53, i64 4, i64 0
  %56 = add i64 %45, %55
  %57 = load %struct._io_pending_storage_t*, %struct._io_pending_storage_t** %3, align 8
  %58 = getelementptr inbounds %struct._io_pending_storage_t, %struct._io_pending_storage_t* %57, i32 0, i32 4
  %59 = load %struct._stritem*, %struct._stritem** %58, align 8
  %60 = getelementptr inbounds %struct._stritem, %struct._stritem* %59, i32 0, i32 7
  %61 = load i16, i16* %60, align 2
  %62 = zext i16 %61 to i32
  %63 = and i32 %62, 2
  %64 = icmp ne i32 %63, 0
  %65 = zext i1 %64 to i64
  %66 = select i1 %64, i64 8, i64 0
  %67 = add i64 %56, %66
  store i64 %67, i64* %8, align 8
  %68 = load %struct._stritem*, %struct._stritem** %6, align 8
  %69 = bitcast %struct._stritem* %68 to i8*
  %70 = load i64, i64* %8, align 8
  %71 = load i64, i64* %8, align 8
  %72 = call i32 @slabs_clsid(i64 %71)
  call void @slabs_free(i8* %69, i64 %70, i32 %72)
  %73 = load %struct.conn*, %struct.conn** %4, align 8
  %74 = load %struct._io_pending_storage_t*, %struct._io_pending_storage_t** %3, align 8
  %75 = getelementptr inbounds %struct._io_pending_storage_t, %struct._io_pending_storage_t* %74, i32 0, i32 0
  %76 = load i32, i32* %75, align 8
  %77 = call %struct.io_queue_s* @conn_io_queue_get(%struct.conn* %73, i32 %76)
  store %struct.io_queue_s* %77, %struct.io_queue_s** %9, align 8
  %78 = load %struct.io_queue_s*, %struct.io_queue_s** %9, align 8
  %79 = getelementptr inbounds %struct.io_queue_s, %struct.io_queue_s* %78, i32 0, i32 2
  %80 = load i32, i32* %79, align 8
  %81 = add nsw i32 %80, -1
  store i32 %81, i32* %79, align 8
  %82 = load %struct.conn*, %struct.conn** %4, align 8
  %83 = getelementptr inbounds %struct.conn, %struct.conn* %82, i32 0, i32 42
  %84 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %83, align 8
  %85 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %84, i32 0, i32 4
  %86 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %85, i32 0, i32 0
  %87 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %86) #14
  %88 = load %struct.conn*, %struct.conn** %4, align 8
  %89 = getelementptr inbounds %struct.conn, %struct.conn* %88, i32 0, i32 42
  %90 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %89, align 8
  %91 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %90, i32 0, i32 4
  %92 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %91, i32 0, i32 26
  %93 = load i64, i64* %92, align 8
  %94 = add i64 %93, 1
  store i64 %94, i64* %92, align 8
  %95 = load %struct.conn*, %struct.conn** %4, align 8
  %96 = getelementptr inbounds %struct.conn, %struct.conn* %95, i32 0, i32 42
  %97 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %96, align 8
  %98 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %97, i32 0, i32 4
  %99 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %98, i32 0, i32 0
  %100 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %99) #14
  br label %280

101:                                              ; preds = %1
  %102 = load %struct._io_pending_storage_t*, %struct._io_pending_storage_t** %3, align 8
  %103 = getelementptr inbounds %struct._io_pending_storage_t, %struct._io_pending_storage_t* %102, i32 0, i32 8
  %104 = load i8, i8* %103, align 1
  %105 = trunc i8 %104 to i1
  br i1 %105, label %106, label %184

106:                                              ; preds = %101
  store i8 0, i8* %7, align 1
  %107 = load %struct._io_pending_storage_t*, %struct._io_pending_storage_t** %3, align 8
  %108 = getelementptr inbounds %struct._io_pending_storage_t, %struct._io_pending_storage_t* %107, i32 0, i32 4
  %109 = load %struct._stritem*, %struct._stritem** %108, align 8
  %110 = getelementptr inbounds %struct._stritem, %struct._stritem* %109, i32 0, i32 9
  %111 = load i8, i8* %110, align 1
  %112 = zext i8 %111 to i64
  %113 = add i64 48, %112
  %114 = add i64 %113, 1
  %115 = load %struct._io_pending_storage_t*, %struct._io_pending_storage_t** %3, align 8
  %116 = getelementptr inbounds %struct._io_pending_storage_t, %struct._io_pending_storage_t* %115, i32 0, i32 4
  %117 = load %struct._stritem*, %struct._stritem** %116, align 8
  %118 = getelementptr inbounds %struct._stritem, %struct._stritem* %117, i32 0, i32 5
  %119 = load i32, i32* %118, align 8
  %120 = sext i32 %119 to i64
  %121 = add i64 %114, %120
  %122 = load %struct._io_pending_storage_t*, %struct._io_pending_storage_t** %3, align 8
  %123 = getelementptr inbounds %struct._io_pending_storage_t, %struct._io_pending_storage_t* %122, i32 0, i32 4
  %124 = load %struct._stritem*, %struct._stritem** %123, align 8
  %125 = getelementptr inbounds %struct._stritem, %struct._stritem* %124, i32 0, i32 7
  %126 = load i16, i16* %125, align 2
  %127 = zext i16 %126 to i32
  %128 = and i32 %127, 256
  %129 = icmp ne i32 %128, 0
  %130 = zext i1 %129 to i64
  %131 = select i1 %129, i64 4, i64 0
  %132 = add i64 %121, %131
  %133 = load %struct._io_pending_storage_t*, %struct._io_pending_storage_t** %3, align 8
  %134 = getelementptr inbounds %struct._io_pending_storage_t, %struct._io_pending_storage_t* %133, i32 0, i32 4
  %135 = load %struct._stritem*, %struct._stritem** %134, align 8
  %136 = getelementptr inbounds %struct._stritem, %struct._stritem* %135, i32 0, i32 7
  %137 = load i16, i16* %136, align 2
  %138 = zext i16 %137 to i32
  %139 = and i32 %138, 2
  %140 = icmp ne i32 %139, 0
  %141 = zext i1 %140 to i64
  %142 = select i1 %140, i64 8, i64 0
  %143 = add i64 %132, %142
  store i64 %143, i64* %10, align 8
  %144 = load %struct._io_pending_storage_t*, %struct._io_pending_storage_t** %3, align 8
  %145 = getelementptr inbounds %struct._io_pending_storage_t, %struct._io_pending_storage_t* %144, i32 0, i32 4
  %146 = load %struct._stritem*, %struct._stritem** %145, align 8
  call void @item_unlink(%struct._stritem* %146)
  %147 = load %struct._stritem*, %struct._stritem** %6, align 8
  %148 = bitcast %struct._stritem* %147 to i8*
  %149 = load i64, i64* %10, align 8
  %150 = load i64, i64* %10, align 8
  %151 = call i32 @slabs_clsid(i64 %150)
  call void @slabs_free(i8* %148, i64 %149, i32 %151)
  %152 = load %struct.conn*, %struct.conn** %4, align 8
  %153 = getelementptr inbounds %struct.conn, %struct.conn* %152, i32 0, i32 42
  %154 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %153, align 8
  %155 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %154, i32 0, i32 4
  %156 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %155, i32 0, i32 0
  %157 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %156) #14
  %158 = load %struct.conn*, %struct.conn** %4, align 8
  %159 = getelementptr inbounds %struct.conn, %struct.conn* %158, i32 0, i32 42
  %160 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %159, align 8
  %161 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %160, i32 0, i32 4
  %162 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %161, i32 0, i32 29
  %163 = load i64, i64* %162, align 8
  %164 = add i64 %163, 1
  store i64 %164, i64* %162, align 8
  %165 = load %struct._io_pending_storage_t*, %struct._io_pending_storage_t** %3, align 8
  %166 = getelementptr inbounds %struct._io_pending_storage_t, %struct._io_pending_storage_t* %165, i32 0, i32 9
  %167 = load i8, i8* %166, align 2
  %168 = trunc i8 %167 to i1
  br i1 %168, label %169, label %177

169:                                              ; preds = %106
  %170 = load %struct.conn*, %struct.conn** %4, align 8
  %171 = getelementptr inbounds %struct.conn, %struct.conn* %170, i32 0, i32 42
  %172 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %171, align 8
  %173 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %172, i32 0, i32 4
  %174 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %173, i32 0, i32 30
  %175 = load i64, i64* %174, align 8
  %176 = add i64 %175, 1
  store i64 %176, i64* %174, align 8
  br label %177

177:                                              ; preds = %169, %106
  %178 = load %struct.conn*, %struct.conn** %4, align 8
  %179 = getelementptr inbounds %struct.conn, %struct.conn* %178, i32 0, i32 42
  %180 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %179, align 8
  %181 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %180, i32 0, i32 4
  %182 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %181, i32 0, i32 0
  %183 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %182) #14
  br label %279

184:                                              ; preds = %101
  %185 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 63), align 4
  %186 = icmp ne i32 %185, 0
  br i1 %186, label %187, label %278

187:                                              ; preds = %184
  %188 = load %struct._stritem*, %struct._stritem** %6, align 8
  %189 = getelementptr inbounds %struct._stritem, %struct._stritem* %188, i32 0, i32 3
  %190 = load i32, i32* %189, align 8
  store i32 %190, i32* %11, align 4
  %191 = load i32, i32* %11, align 4
  %192 = call i8* @item_trylock(i32 %191)
  store i8* %192, i8** %12, align 8
  %193 = load i8*, i8** %12, align 8
  %194 = icmp ne i8* %193, null
  br i1 %194, label %195, label %272

195:                                              ; preds = %187
  %196 = load %struct._io_pending_storage_t*, %struct._io_pending_storage_t** %3, align 8
  %197 = getelementptr inbounds %struct._io_pending_storage_t, %struct._io_pending_storage_t* %196, i32 0, i32 4
  %198 = load %struct._stritem*, %struct._stritem** %197, align 8
  store %struct._stritem* %198, %struct._stritem** %13, align 8
  store i8 25, i8* %14, align 1
  %199 = load %struct._stritem*, %struct._stritem** %13, align 8
  %200 = getelementptr inbounds %struct._stritem, %struct._stritem* %199, i32 0, i32 7
  %201 = load i16, i16* %200, align 2
  %202 = zext i16 %201 to i32
  %203 = load i8, i8* %14, align 1
  %204 = zext i8 %203 to i32
  %205 = and i32 %202, %204
  %206 = load i8, i8* %14, align 1
  %207 = zext i8 %206 to i32
  %208 = icmp eq i32 %205, %207
  br i1 %208, label %209, label %271

209:                                              ; preds = %195
  %210 = load %struct._stritem*, %struct._stritem** %13, align 8
  %211 = getelementptr inbounds %struct._stritem, %struct._stritem* %210, i32 0, i32 3
  %212 = load i32, i32* %211, align 8
  %213 = load volatile i32, i32* @current_time, align 4
  %214 = sub i32 %213, 60
  %215 = icmp ugt i32 %212, %214
  br i1 %215, label %216, label %271

216:                                              ; preds = %209
  %217 = load %struct.conn*, %struct.conn** %4, align 8
  %218 = getelementptr inbounds %struct.conn, %struct.conn* %217, i32 0, i32 27
  %219 = load i32, i32* %218, align 8
  %220 = add i32 %219, 1
  store i32 %220, i32* %218, align 8
  %221 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 63), align 4
  %222 = urem i32 %219, %221
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %224, label %271

224:                                              ; preds = %216
  store i8 0, i8* %7, align 1
  %225 = load %struct._stritem*, %struct._stritem** %13, align 8
  %226 = getelementptr inbounds %struct._stritem, %struct._stritem* %225, i32 0, i32 4
  %227 = load i32, i32* %226, align 4
  %228 = load %struct._stritem*, %struct._stritem** %6, align 8
  %229 = getelementptr inbounds %struct._stritem, %struct._stritem* %228, i32 0, i32 4
  store i32 %227, i32* %229, align 4
  %230 = load %struct._stritem*, %struct._stritem** %6, align 8
  %231 = getelementptr inbounds %struct._stritem, %struct._stritem* %230, i32 0, i32 7
  %232 = load i16, i16* %231, align 2
  %233 = zext i16 %232 to i32
  %234 = and i32 %233, -2
  %235 = trunc i32 %234 to i16
  store i16 %235, i16* %231, align 2
  %236 = load %struct._stritem*, %struct._stritem** %6, align 8
  %237 = getelementptr inbounds %struct._stritem, %struct._stritem* %236, i32 0, i32 6
  store i16 0, i16* %237, align 4
  %238 = load %struct._stritem*, %struct._stritem** %6, align 8
  %239 = getelementptr inbounds %struct._stritem, %struct._stritem* %238, i32 0, i32 2
  store %struct._stritem* null, %struct._stritem** %239, align 8
  br label %240

240:                                              ; preds = %224
  %241 = load %struct.conn*, %struct.conn** %4, align 8
  %242 = getelementptr inbounds %struct.conn, %struct.conn* %241, i32 0, i32 42
  %243 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %242, align 8
  %244 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %243, i32 0, i32 10
  %245 = load i8*, i8** %244, align 8
  %246 = load %struct._stritem*, %struct._stritem** %13, align 8
  call void @storage_delete(i8* %245, %struct._stritem* %246)
  br label %247

247:                                              ; preds = %240
  %248 = load %struct._stritem*, %struct._stritem** %13, align 8
  %249 = load %struct._stritem*, %struct._stritem** %6, align 8
  %250 = load i32, i32* %11, align 4
  %251 = call i32 @item_replace(%struct._stritem* %248, %struct._stritem* %249, i32 %250)
  %252 = load %struct.conn*, %struct.conn** %4, align 8
  %253 = getelementptr inbounds %struct.conn, %struct.conn* %252, i32 0, i32 42
  %254 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %253, align 8
  %255 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %254, i32 0, i32 4
  %256 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %255, i32 0, i32 0
  %257 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %256) #14
  %258 = load %struct.conn*, %struct.conn** %4, align 8
  %259 = getelementptr inbounds %struct.conn, %struct.conn* %258, i32 0, i32 42
  %260 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %259, align 8
  %261 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %260, i32 0, i32 4
  %262 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %261, i32 0, i32 28
  %263 = load i64, i64* %262, align 8
  %264 = add i64 %263, 1
  store i64 %264, i64* %262, align 8
  %265 = load %struct.conn*, %struct.conn** %4, align 8
  %266 = getelementptr inbounds %struct.conn, %struct.conn* %265, i32 0, i32 42
  %267 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %266, align 8
  %268 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %267, i32 0, i32 4
  %269 = getelementptr inbounds %struct.thread_stats, %struct.thread_stats* %268, i32 0, i32 0
  %270 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %269) #14
  br label %271

271:                                              ; preds = %247, %216, %209, %195
  br label %272

272:                                              ; preds = %271, %187
  %273 = load i8*, i8** %12, align 8
  %274 = icmp ne i8* %273, null
  br i1 %274, label %275, label %277

275:                                              ; preds = %272
  %276 = load i8*, i8** %12, align 8
  call void @item_trylock_unlock(i8* %276)
  br label %277

277:                                              ; preds = %275, %272
  br label %278

278:                                              ; preds = %277, %184
  br label %279

279:                                              ; preds = %278, %177
  br label %280

280:                                              ; preds = %279, %30
  %281 = load i8, i8* %7, align 1
  %282 = trunc i8 %281 to i1
  br i1 %282, label %283, label %320

283:                                              ; preds = %280
  %284 = load %struct._stritem*, %struct._stritem** %6, align 8
  %285 = bitcast %struct._stritem* %284 to i8*
  %286 = load %struct._stritem*, %struct._stritem** %6, align 8
  %287 = getelementptr inbounds %struct._stritem, %struct._stritem* %286, i32 0, i32 9
  %288 = load i8, i8* %287, align 1
  %289 = zext i8 %288 to i64
  %290 = add i64 48, %289
  %291 = add i64 %290, 1
  %292 = load %struct._stritem*, %struct._stritem** %6, align 8
  %293 = getelementptr inbounds %struct._stritem, %struct._stritem* %292, i32 0, i32 5
  %294 = load i32, i32* %293, align 8
  %295 = sext i32 %294 to i64
  %296 = add i64 %291, %295
  %297 = load %struct._stritem*, %struct._stritem** %6, align 8
  %298 = getelementptr inbounds %struct._stritem, %struct._stritem* %297, i32 0, i32 7
  %299 = load i16, i16* %298, align 2
  %300 = zext i16 %299 to i32
  %301 = and i32 %300, 256
  %302 = icmp ne i32 %301, 0
  %303 = zext i1 %302 to i64
  %304 = select i1 %302, i64 4, i64 0
  %305 = add i64 %296, %304
  %306 = load %struct._stritem*, %struct._stritem** %6, align 8
  %307 = getelementptr inbounds %struct._stritem, %struct._stritem* %306, i32 0, i32 7
  %308 = load i16, i16* %307, align 2
  %309 = zext i16 %308 to i32
  %310 = and i32 %309, 2
  %311 = icmp ne i32 %310, 0
  %312 = zext i1 %311 to i64
  %313 = select i1 %311, i64 8, i64 0
  %314 = add i64 %305, %313
  %315 = load %struct._stritem*, %struct._stritem** %6, align 8
  %316 = getelementptr inbounds %struct._stritem, %struct._stritem* %315, i32 0, i32 8
  %317 = load i8, i8* %316, align 8
  %318 = zext i8 %317 to i32
  %319 = and i32 %318, -193
  call void @slabs_free(i8* %285, i64 %314, i32 %319)
  br label %320

320:                                              ; preds = %283, %280
  %321 = load %struct._io_pending_storage_t*, %struct._io_pending_storage_t** %3, align 8
  %322 = getelementptr inbounds %struct._io_pending_storage_t, %struct._io_pending_storage_t* %321, i32 0, i32 5
  %323 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %322, i32 0, i32 2
  store i8* null, i8** %323, align 8
  %324 = load %struct._io_pending_storage_t*, %struct._io_pending_storage_t** %3, align 8
  %325 = getelementptr inbounds %struct._io_pending_storage_t, %struct._io_pending_storage_t* %324, i32 0, i32 5
  %326 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %325, i32 0, i32 1
  store %struct._obj_io* null, %struct._obj_io** %326, align 8
  %327 = load %struct._io_pending_storage_t*, %struct._io_pending_storage_t** %3, align 8
  %328 = getelementptr inbounds %struct._io_pending_storage_t, %struct._io_pending_storage_t* %327, i32 0, i32 10
  store i8 0, i8* %328, align 1
  %329 = load %struct._io_pending_storage_t*, %struct._io_pending_storage_t** %3, align 8
  %330 = getelementptr inbounds %struct._io_pending_storage_t, %struct._io_pending_storage_t* %329, i32 0, i32 4
  %331 = load %struct._stritem*, %struct._stritem** %330, align 8
  call void @item_remove(%struct._stritem* %331)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @storage_write_pause() #0 {
  %1 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @storage_write_plock) #14
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @storage_write_resume() #0 {
  %1 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @storage_write_plock) #14
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @start_storage_write_thread(i8* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  %5 = call i32 @pthread_mutex_init(%union.pthread_mutex_t* @storage_write_plock, %struct.in_addr* null) #14
  %6 = load i8*, i8** %3, align 8
  %7 = call i32 @pthread_create(i64* @storage_write_tid, %union.pthread_attr_t* null, i8* (i8*)* @storage_write_thread, i8* %6) #14
  store i32 %7, i32* %4, align 4
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %9, label %14

9:                                                ; preds = %1
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %11 = load i32, i32* %4, align 4
  %12 = call i8* @strerror(i32 %11) #14
  %13 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.27.1270, i64 0, i64 0), i8* %12)
  store i32 -1, i32* %2, align 4
  br label %15

14:                                               ; preds = %1
  store i32 0, i32* %2, align 4
  br label %15

15:                                               ; preds = %14, %9
  %16 = load i32, i32* %2, align 4
  ret i32 %16
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @storage_write_thread(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca [64 x i32], align 16
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct._logger*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i8, align 1
  %10 = alloca i32, align 4
  %11 = alloca i8, align 1
  %12 = alloca i8, align 1
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  %16 = load i8*, i8** %2, align 8
  store i8* %16, i8** %3, align 8
  %17 = bitcast [64 x i32]* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %17, i8 0, i64 256, i1 false)
  store i32 0, i32* %5, align 4
  store i32 500, i32* %6, align 4
  %18 = call %struct._logger* @logger_create()
  store %struct._logger* %18, %struct._logger** %7, align 8
  %19 = load %struct._logger*, %struct._logger** %7, align 8
  %20 = icmp eq %struct._logger* %19, null
  br i1 %20, label %21, label %24

21:                                               ; preds = %1
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %23 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %22, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.89.1271, i64 0, i64 0))
  call void @abort() #17
  unreachable

24:                                               ; preds = %1
  %25 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @storage_write_plock) #14
  br label %26

26:                                               ; preds = %24, %138
  %27 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 60), align 8
  %28 = zext i32 %27 to i64
  %29 = call i32 @slabs_clsid(i64 %28)
  store i32 %29, i32* %8, align 4
  store i8 1, i8* %9, align 1
  %30 = load i32, i32* %5, align 4
  %31 = add i32 %30, 1
  store i32 %31, i32* %5, align 4
  %32 = load i32, i32* %6, align 4
  %33 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 67), align 4
  %34 = icmp ugt i32 %32, %33
  br i1 %34, label %35, label %37

35:                                               ; preds = %26
  %36 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 67), align 4
  store i32 %36, i32* %6, align 4
  br label %37

37:                                               ; preds = %35, %26
  store i32 0, i32* %10, align 4
  br label %38

38:                                               ; preds = %126, %37
  %39 = load i32, i32* %10, align 4
  %40 = icmp slt i32 %39, 64
  br i1 %40, label %41, label %129

41:                                               ; preds = %38
  store i8 0, i8* %11, align 1
  store i8 0, i8* %12, align 1
  %42 = load i32, i32* %10, align 4
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 71), i64 0, i64 %43
  %45 = load i32, i32* %44, align 4
  store i32 %45, i32* %15, align 4
  %46 = load i32, i32* %8, align 4
  %47 = load i32, i32* %10, align 4
  %48 = icmp sgt i32 %46, %47
  br i1 %48, label %63, label %49

49:                                               ; preds = %41
  %50 = load i32, i32* %10, align 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds [64 x i32], [64 x i32]* %4, i64 0, i64 %51
  %53 = load i32, i32* %52, align 4
  %54 = icmp ne i32 %53, 0
  br i1 %54, label %55, label %73

55:                                               ; preds = %49
  %56 = load i32, i32* %5, align 4
  %57 = load i32, i32* %10, align 4
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds [64 x i32], [64 x i32]* %4, i64 0, i64 %58
  %60 = load i32, i32* %59, align 4
  %61 = urem i32 %56, %60
  %62 = icmp ne i32 %61, 0
  br i1 %62, label %63, label %73

63:                                               ; preds = %55, %41
  %64 = load i32, i32* %6, align 4
  %65 = icmp ugt i32 %64, 5000
  br i1 %65, label %66, label %72

66:                                               ; preds = %63
  %67 = load i32, i32* %10, align 4
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds [64 x i32], [64 x i32]* %4, i64 0, i64 %68
  %70 = load i32, i32* %69, align 4
  %71 = udiv i32 %70, 2
  store i32 %71, i32* %69, align 4
  br label %72

72:                                               ; preds = %66, %63
  br label %126

73:                                               ; preds = %55, %49
  %74 = load i32, i32* %10, align 4
  %75 = call i32 @slabs_available_chunks(i32 %74, i8* %12, i32* null)
  store i32 %75, i32* %13, align 4
  br label %76

76:                                               ; preds = %73, %102
  %77 = load i32, i32* %13, align 4
  %78 = load i32, i32* %15, align 4
  %79 = icmp ult i32 %77, %78
  br i1 %79, label %80, label %84

80:                                               ; preds = %76
  %81 = load i8, i8* %12, align 1
  %82 = trunc i8 %81 to i1
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  store i32 0, i32* %14, align 4
  br label %86

84:                                               ; preds = %80, %76
  %85 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 61), align 4
  store i32 %85, i32* %14, align 4
  br label %86

86:                                               ; preds = %84, %83
  %87 = load i8*, i8** %3, align 8
  %88 = load i32, i32* %10, align 4
  %89 = load i32, i32* %14, align 4
  %90 = call i32 @storage_write(i8* %87, i32 %88, i32 %89)
  %91 = icmp ne i32 %90, 0
  br i1 %91, label %92, label %101

92:                                               ; preds = %86
  %93 = load i32, i32* %13, align 4
  %94 = add i32 %93, 1
  store i32 %94, i32* %13, align 4
  store i8 1, i8* %11, align 1
  store i8 0, i8* %9, align 1
  %95 = load i32, i32* %6, align 4
  %96 = icmp ugt i32 %95, 500
  br i1 %96, label %97, label %100

97:                                               ; preds = %92
  %98 = load i32, i32* %6, align 4
  %99 = udiv i32 %98, 2
  store i32 %99, i32* %6, align 4
  br label %100

100:                                              ; preds = %97, %92
  br label %102

101:                                              ; preds = %86
  br label %103

102:                                              ; preds = %100
  br label %76

103:                                              ; preds = %101
  %104 = load i8, i8* %11, align 1
  %105 = trunc i8 %104 to i1
  br i1 %105, label %112, label %106

106:                                              ; preds = %103
  %107 = load i32, i32* %10, align 4
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds [64 x i32], [64 x i32]* %4, i64 0, i64 %108
  %110 = load i32, i32* %109, align 4
  %111 = add i32 %110, 1
  store i32 %111, i32* %109, align 4
  br label %125

112:                                              ; preds = %103
  %113 = load i32, i32* %10, align 4
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds [64 x i32], [64 x i32]* %4, i64 0, i64 %114
  %116 = load i32, i32* %115, align 4
  %117 = icmp ne i32 %116, 0
  br i1 %117, label %118, label %124

118:                                              ; preds = %112
  %119 = load i32, i32* %10, align 4
  %120 = sext i32 %119 to i64
  %121 = getelementptr inbounds [64 x i32], [64 x i32]* %4, i64 0, i64 %120
  %122 = load i32, i32* %121, align 4
  %123 = udiv i32 %122, 2
  store i32 %123, i32* %121, align 4
  br label %124

124:                                              ; preds = %118, %112
  br label %125

125:                                              ; preds = %124, %106
  br label %126

126:                                              ; preds = %125, %72
  %127 = load i32, i32* %10, align 4
  %128 = add nsw i32 %127, 1
  store i32 %128, i32* %10, align 4
  br label %38, !llvm.loop !226

129:                                              ; preds = %38
  %130 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @storage_write_plock) #14
  %131 = load i8, i8* %9, align 1
  %132 = trunc i8 %131 to i1
  br i1 %132, label %133, label %138

133:                                              ; preds = %129
  %134 = load i32, i32* %6, align 4
  %135 = call i32 @usleep(i32 %134)
  %136 = load i32, i32* %6, align 4
  %137 = mul i32 %136, 2
  store i32 %137, i32* %6, align 4
  br label %138

138:                                              ; preds = %133, %129
  %139 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @storage_write_plock) #14
  br label %26
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @storage_write(i8* %0, i32 %1, i32 %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct.lru_pull_tail_return, align 8
  %10 = alloca %struct._obj_io, align 8
  %11 = alloca %struct._stritem*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  %14 = alloca %struct._stritem*, align 8
  %15 = alloca i32, align 4
  %16 = alloca %struct._stritem*, align 8
  %17 = alloca %struct._strchunk*, align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca %struct.item_hdr*, align 8
  %22 = alloca %struct._logger*, align 8
  store i8* %0, i8** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  store i32 0, i32* %8, align 4
  %23 = getelementptr inbounds %struct.lru_pull_tail_return, %struct.lru_pull_tail_return* %9, i32 0, i32 0
  store %struct._stritem* null, %struct._stritem** %23, align 8
  %24 = load i32, i32* %6, align 4
  %25 = call i32 @lru_pull_tail(i32 %24, i32 128, i64 0, i8 zeroext 4, i32 0, %struct.lru_pull_tail_return* %9)
  %26 = getelementptr inbounds %struct.lru_pull_tail_return, %struct.lru_pull_tail_return* %9, i32 0, i32 0
  %27 = load %struct._stritem*, %struct._stritem** %26, align 8
  %28 = icmp eq %struct._stritem* %27, null
  br i1 %28, label %29, label %31

29:                                               ; preds = %3
  %30 = load i32, i32* %8, align 4
  store i32 %30, i32* %4, align 4
  br label %462

31:                                               ; preds = %3
  %32 = getelementptr inbounds %struct.lru_pull_tail_return, %struct.lru_pull_tail_return* %9, i32 0, i32 0
  %33 = load %struct._stritem*, %struct._stritem** %32, align 8
  store %struct._stritem* %33, %struct._stritem** %11, align 8
  %34 = load %struct._stritem*, %struct._stritem** %11, align 8
  %35 = getelementptr inbounds %struct._stritem, %struct._stritem* %34, i32 0, i32 9
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = add i64 48, %37
  %39 = add i64 %38, 1
  %40 = load %struct._stritem*, %struct._stritem** %11, align 8
  %41 = getelementptr inbounds %struct._stritem, %struct._stritem* %40, i32 0, i32 5
  %42 = load i32, i32* %41, align 8
  %43 = sext i32 %42 to i64
  %44 = add i64 %39, %43
  %45 = load %struct._stritem*, %struct._stritem** %11, align 8
  %46 = getelementptr inbounds %struct._stritem, %struct._stritem* %45, i32 0, i32 7
  %47 = load i16, i16* %46, align 2
  %48 = zext i16 %47 to i32
  %49 = and i32 %48, 256
  %50 = icmp ne i32 %49, 0
  %51 = zext i1 %50 to i64
  %52 = select i1 %50, i64 4, i64 0
  %53 = add i64 %44, %52
  %54 = load %struct._stritem*, %struct._stritem** %11, align 8
  %55 = getelementptr inbounds %struct._stritem, %struct._stritem* %54, i32 0, i32 7
  %56 = load i16, i16* %55, align 2
  %57 = zext i16 %56 to i32
  %58 = and i32 %57, 2
  %59 = icmp ne i32 %58, 0
  %60 = zext i1 %59 to i64
  %61 = select i1 %59, i64 8, i64 0
  %62 = add i64 %53, %61
  store i64 %62, i64* %12, align 8
  %63 = load %struct._stritem*, %struct._stritem** %11, align 8
  %64 = getelementptr inbounds %struct._stritem, %struct._stritem* %63, i32 0, i32 7
  %65 = load i16, i16* %64, align 2
  %66 = zext i16 %65 to i32
  %67 = and i32 %66, 128
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %457

69:                                               ; preds = %31
  %70 = load i32, i32* %7, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %80, label %72

72:                                               ; preds = %69
  %73 = load volatile i32, i32* @current_time, align 4
  %74 = load %struct._stritem*, %struct._stritem** %11, align 8
  %75 = getelementptr inbounds %struct._stritem, %struct._stritem* %74, i32 0, i32 3
  %76 = load i32, i32* %75, align 8
  %77 = sub i32 %73, %76
  %78 = load i32, i32* %7, align 4
  %79 = icmp ugt i32 %77, %78
  br i1 %79, label %80, label %457

80:                                               ; preds = %72, %69
  %81 = load %struct._stritem*, %struct._stritem** %11, align 8
  %82 = getelementptr inbounds %struct._stritem, %struct._stritem* %81, i32 0, i32 7
  %83 = load i16, i16* %82, align 2
  %84 = zext i16 %83 to i32
  %85 = and i32 %84, 256
  %86 = icmp ne i32 %85, 0
  br i1 %86, label %87, label %109

87:                                               ; preds = %80
  %88 = load %struct._stritem*, %struct._stritem** %11, align 8
  %89 = getelementptr inbounds %struct._stritem, %struct._stritem* %88, i32 0, i32 10
  %90 = bitcast [0 x %union.anon.10]* %89 to i8*
  %91 = load %struct._stritem*, %struct._stritem** %11, align 8
  %92 = getelementptr inbounds %struct._stritem, %struct._stritem* %91, i32 0, i32 9
  %93 = load i8, i8* %92, align 1
  %94 = zext i8 %93 to i32
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds i8, i8* %90, i64 %95
  %97 = getelementptr inbounds i8, i8* %96, i64 1
  %98 = load %struct._stritem*, %struct._stritem** %11, align 8
  %99 = getelementptr inbounds %struct._stritem, %struct._stritem* %98, i32 0, i32 7
  %100 = load i16, i16* %99, align 2
  %101 = zext i16 %100 to i32
  %102 = and i32 %101, 2
  %103 = icmp ne i32 %102, 0
  %104 = zext i1 %103 to i64
  %105 = select i1 %103, i64 8, i64 0
  %106 = getelementptr inbounds i8, i8* %97, i64 %105
  %107 = bitcast i8* %106 to i32*
  %108 = load i32, i32* %107, align 4
  store i32 %108, i32* %13, align 4
  br label %110

109:                                              ; preds = %80
  store i32 0, i32* %13, align 4
  br label %110

110:                                              ; preds = %109, %87
  %111 = load %struct._stritem*, %struct._stritem** %11, align 8
  %112 = getelementptr inbounds %struct._stritem, %struct._stritem* %111, i32 0, i32 10
  %113 = bitcast [0 x %union.anon.10]* %112 to i8*
  %114 = load %struct._stritem*, %struct._stritem** %11, align 8
  %115 = getelementptr inbounds %struct._stritem, %struct._stritem* %114, i32 0, i32 7
  %116 = load i16, i16* %115, align 2
  %117 = zext i16 %116 to i32
  %118 = and i32 %117, 2
  %119 = icmp ne i32 %118, 0
  %120 = zext i1 %119 to i64
  %121 = select i1 %119, i64 8, i64 0
  %122 = getelementptr inbounds i8, i8* %113, i64 %121
  %123 = load %struct._stritem*, %struct._stritem** %11, align 8
  %124 = getelementptr inbounds %struct._stritem, %struct._stritem* %123, i32 0, i32 9
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i64
  %127 = load i32, i32* %13, align 4
  %128 = load %struct._stritem*, %struct._stritem** %11, align 8
  %129 = getelementptr inbounds %struct._stritem, %struct._stritem* %128, i32 0, i32 4
  %130 = load i32, i32* %129, align 4
  %131 = call %struct._stritem* @do_item_alloc(i8* %122, i64 %126, i32 %127, i32 %130, i32 12)
  store %struct._stritem* %131, %struct._stritem** %14, align 8
  %132 = load %struct._stritem*, %struct._stritem** %14, align 8
  %133 = icmp ne %struct._stritem* %132, null
  br i1 %133, label %134, label %456

134:                                              ; preds = %110
  %135 = load %struct._stritem*, %struct._stritem** %11, align 8
  %136 = getelementptr inbounds %struct._stritem, %struct._stritem* %135, i32 0, i32 7
  %137 = load i16, i16* %136, align 2
  %138 = zext i16 %137 to i32
  %139 = and i32 %138, 32
  %140 = icmp ne i32 %139, 0
  %141 = zext i1 %140 to i64
  %142 = select i1 %140, i32 2, i32 0
  store i32 %142, i32* %15, align 4
  %143 = load %struct._stritem*, %struct._stritem** %11, align 8
  %144 = getelementptr inbounds %struct._stritem, %struct._stritem* %143, i32 0, i32 4
  %145 = load i32, i32* %144, align 4
  %146 = load volatile i32, i32* @current_time, align 4
  %147 = sub i32 %145, %146
  %148 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 62), align 8
  %149 = icmp ult i32 %147, %148
  br i1 %149, label %150, label %151

150:                                              ; preds = %134
  store i32 3, i32* %15, align 4
  br label %151

151:                                              ; preds = %150, %134
  %152 = load %struct._stritem*, %struct._stritem** %14, align 8
  %153 = getelementptr inbounds %struct._stritem, %struct._stritem* %152, i32 0, i32 7
  %154 = load i16, i16* %153, align 2
  %155 = zext i16 %154 to i32
  %156 = or i32 %155, 128
  %157 = trunc i32 %156 to i16
  store i16 %157, i16* %153, align 2
  %158 = load i64, i64* %12, align 8
  %159 = trunc i64 %158 to i32
  %160 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %10, i32 0, i32 6
  store i32 %159, i32* %160, align 8
  %161 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %10, i32 0, i32 9
  store i32 1, i32* %161, align 4
  %162 = load i8*, i8** %5, align 8
  %163 = load i32, i32* %15, align 4
  %164 = load i32, i32* %15, align 4
  %165 = call i32 @extstore_write_request(i8* %162, i32 %163, i32 %164, %struct._obj_io* %10)
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %167, label %418

167:                                              ; preds = %151
  %168 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %10, i32 0, i32 2
  %169 = load i8*, i8** %168, align 8
  %170 = bitcast i8* %169 to %struct._stritem*
  store %struct._stritem* %170, %struct._stritem** %16, align 8
  %171 = getelementptr inbounds %struct.lru_pull_tail_return, %struct.lru_pull_tail_return* %9, i32 0, i32 1
  %172 = load i32, i32* %171, align 8
  %173 = load %struct._stritem*, %struct._stritem** %16, align 8
  %174 = getelementptr inbounds %struct._stritem, %struct._stritem* %173, i32 0, i32 3
  store i32 %172, i32* %174, align 8
  %175 = load %struct._stritem*, %struct._stritem** %11, align 8
  %176 = getelementptr inbounds %struct._stritem, %struct._stritem* %175, i32 0, i32 7
  %177 = load i16, i16* %176, align 2
  %178 = zext i16 %177 to i32
  %179 = and i32 %178, 32
  %180 = icmp ne i32 %179, 0
  br i1 %180, label %181, label %293

181:                                              ; preds = %167
  %182 = load %struct._stritem*, %struct._stritem** %11, align 8
  %183 = getelementptr inbounds %struct._stritem, %struct._stritem* %182, i32 0, i32 10
  %184 = bitcast [0 x %union.anon.10]* %183 to i8*
  %185 = load %struct._stritem*, %struct._stritem** %11, align 8
  %186 = getelementptr inbounds %struct._stritem, %struct._stritem* %185, i32 0, i32 9
  %187 = load i8, i8* %186, align 1
  %188 = zext i8 %187 to i32
  %189 = sext i32 %188 to i64
  %190 = getelementptr inbounds i8, i8* %184, i64 %189
  %191 = getelementptr inbounds i8, i8* %190, i64 1
  %192 = load %struct._stritem*, %struct._stritem** %11, align 8
  %193 = getelementptr inbounds %struct._stritem, %struct._stritem* %192, i32 0, i32 7
  %194 = load i16, i16* %193, align 2
  %195 = zext i16 %194 to i32
  %196 = and i32 %195, 256
  %197 = icmp ne i32 %196, 0
  %198 = zext i1 %197 to i64
  %199 = select i1 %197, i64 4, i64 0
  %200 = getelementptr inbounds i8, i8* %191, i64 %199
  %201 = load %struct._stritem*, %struct._stritem** %11, align 8
  %202 = getelementptr inbounds %struct._stritem, %struct._stritem* %201, i32 0, i32 7
  %203 = load i16, i16* %202, align 2
  %204 = zext i16 %203 to i32
  %205 = and i32 %204, 2
  %206 = icmp ne i32 %205, 0
  %207 = zext i1 %206 to i64
  %208 = select i1 %206, i64 8, i64 0
  %209 = getelementptr inbounds i8, i8* %200, i64 %208
  %210 = bitcast i8* %209 to %struct._strchunk*
  store %struct._strchunk* %210, %struct._strchunk** %17, align 8
  %211 = load i64, i64* %12, align 8
  %212 = trunc i64 %211 to i32
  store i32 %212, i32* %18, align 4
  store i32 0, i32* %19, align 4
  %213 = load %struct._stritem*, %struct._stritem** %11, align 8
  %214 = getelementptr inbounds %struct._stritem, %struct._stritem* %213, i32 0, i32 9
  %215 = load i8, i8* %214, align 1
  %216 = zext i8 %215 to i64
  %217 = add i64 48, %216
  %218 = add i64 %217, 1
  %219 = load %struct._stritem*, %struct._stritem** %11, align 8
  %220 = getelementptr inbounds %struct._stritem, %struct._stritem* %219, i32 0, i32 5
  %221 = load i32, i32* %220, align 8
  %222 = sext i32 %221 to i64
  %223 = add i64 %218, %222
  %224 = load %struct._stritem*, %struct._stritem** %11, align 8
  %225 = getelementptr inbounds %struct._stritem, %struct._stritem* %224, i32 0, i32 7
  %226 = load i16, i16* %225, align 2
  %227 = zext i16 %226 to i32
  %228 = and i32 %227, 256
  %229 = icmp ne i32 %228, 0
  %230 = zext i1 %229 to i64
  %231 = select i1 %229, i64 4, i64 0
  %232 = add i64 %223, %231
  %233 = load %struct._stritem*, %struct._stritem** %11, align 8
  %234 = getelementptr inbounds %struct._stritem, %struct._stritem* %233, i32 0, i32 7
  %235 = load i16, i16* %234, align 2
  %236 = zext i16 %235 to i32
  %237 = and i32 %236, 2
  %238 = icmp ne i32 %237, 0
  %239 = zext i1 %238 to i64
  %240 = select i1 %238, i64 8, i64 0
  %241 = add i64 %232, %240
  %242 = load %struct._stritem*, %struct._stritem** %11, align 8
  %243 = getelementptr inbounds %struct._stritem, %struct._stritem* %242, i32 0, i32 5
  %244 = load i32, i32* %243, align 8
  %245 = sext i32 %244 to i64
  %246 = sub i64 %241, %245
  %247 = trunc i64 %246 to i32
  store i32 %247, i32* %20, align 4
  %248 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %10, i32 0, i32 2
  %249 = load i8*, i8** %248, align 8
  %250 = getelementptr inbounds i8, i8* %249, i64 32
  %251 = load %struct._stritem*, %struct._stritem** %11, align 8
  %252 = bitcast %struct._stritem* %251 to i8*
  %253 = getelementptr inbounds i8, i8* %252, i64 32
  %254 = load i32, i32* %20, align 4
  %255 = sext i32 %254 to i64
  %256 = sub i64 %255, 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %250, i8* align 1 %253, i64 %256, i1 false)
  %257 = load i32, i32* %20, align 4
  store i32 %257, i32* %19, align 4
  br label %258

258:                                              ; preds = %266, %181
  %259 = load %struct._strchunk*, %struct._strchunk** %17, align 8
  %260 = icmp ne %struct._strchunk* %259, null
  br i1 %260, label %261, label %264

261:                                              ; preds = %258
  %262 = load i32, i32* %18, align 4
  %263 = icmp ne i32 %262, 0
  br label %264

264:                                              ; preds = %261, %258
  %265 = phi i1 [ false, %258 ], [ %263, %261 ]
  br i1 %265, label %266, label %292

266:                                              ; preds = %264
  %267 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %10, i32 0, i32 2
  %268 = load i8*, i8** %267, align 8
  %269 = load i32, i32* %19, align 4
  %270 = sext i32 %269 to i64
  %271 = getelementptr inbounds i8, i8* %268, i64 %270
  %272 = load %struct._strchunk*, %struct._strchunk** %17, align 8
  %273 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %272, i32 0, i32 10
  %274 = getelementptr inbounds [0 x i8], [0 x i8]* %273, i64 0, i64 0
  %275 = load %struct._strchunk*, %struct._strchunk** %17, align 8
  %276 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %275, i32 0, i32 4
  %277 = load i32, i32* %276, align 4
  %278 = sext i32 %277 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %271, i8* align 2 %274, i64 %278, i1 false)
  %279 = load %struct._strchunk*, %struct._strchunk** %17, align 8
  %280 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %279, i32 0, i32 4
  %281 = load i32, i32* %280, align 4
  %282 = load i32, i32* %18, align 4
  %283 = sub nsw i32 %282, %281
  store i32 %283, i32* %18, align 4
  %284 = load %struct._strchunk*, %struct._strchunk** %17, align 8
  %285 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %284, i32 0, i32 4
  %286 = load i32, i32* %285, align 4
  %287 = load i32, i32* %19, align 4
  %288 = add nsw i32 %287, %286
  store i32 %288, i32* %19, align 4
  %289 = load %struct._strchunk*, %struct._strchunk** %17, align 8
  %290 = getelementptr inbounds %struct._strchunk, %struct._strchunk* %289, i32 0, i32 0
  %291 = load %struct._strchunk*, %struct._strchunk** %290, align 8
  store %struct._strchunk* %291, %struct._strchunk** %17, align 8
  br label %258, !llvm.loop !227

292:                                              ; preds = %264
  br label %304

293:                                              ; preds = %167
  %294 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %10, i32 0, i32 2
  %295 = load i8*, i8** %294, align 8
  %296 = getelementptr inbounds i8, i8* %295, i64 32
  %297 = load %struct._stritem*, %struct._stritem** %11, align 8
  %298 = bitcast %struct._stritem* %297 to i8*
  %299 = getelementptr inbounds i8, i8* %298, i64 32
  %300 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %10, i32 0, i32 6
  %301 = load i32, i32* %300, align 8
  %302 = zext i32 %301 to i64
  %303 = sub i64 %302, 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %296, i8* align 1 %299, i64 %303, i1 false)
  br label %304

304:                                              ; preds = %293, %292
  %305 = load %struct._stritem*, %struct._stritem** %16, align 8
  %306 = getelementptr inbounds %struct._stritem, %struct._stritem* %305, i32 0, i32 7
  %307 = load i16, i16* %306, align 2
  %308 = zext i16 %307 to i32
  %309 = and i32 %308, -2
  %310 = trunc i32 %309 to i16
  store i16 %310, i16* %306, align 2
  %311 = load i32 (i32, i8*, i64)*, i32 (i32, i8*, i64)** @crc32c, align 8
  %312 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %10, i32 0, i32 2
  %313 = load i8*, i8** %312, align 8
  %314 = getelementptr inbounds i8, i8* %313, i64 32
  %315 = load i64, i64* %12, align 8
  %316 = sub i64 %315, 32
  %317 = call i32 %311(i32 0, i8* %314, i64 %316)
  %318 = load %struct._stritem*, %struct._stritem** %16, align 8
  %319 = getelementptr inbounds %struct._stritem, %struct._stritem* %318, i32 0, i32 4
  store i32 %317, i32* %319, align 4
  %320 = load i8*, i8** %5, align 8
  call void @extstore_write(i8* %320, %struct._obj_io* %10)
  %321 = load %struct._stritem*, %struct._stritem** %14, align 8
  %322 = getelementptr inbounds %struct._stritem, %struct._stritem* %321, i32 0, i32 10
  %323 = bitcast [0 x %union.anon.10]* %322 to i8*
  %324 = load %struct._stritem*, %struct._stritem** %14, align 8
  %325 = getelementptr inbounds %struct._stritem, %struct._stritem* %324, i32 0, i32 9
  %326 = load i8, i8* %325, align 1
  %327 = zext i8 %326 to i32
  %328 = sext i32 %327 to i64
  %329 = getelementptr inbounds i8, i8* %323, i64 %328
  %330 = getelementptr inbounds i8, i8* %329, i64 1
  %331 = load %struct._stritem*, %struct._stritem** %14, align 8
  %332 = getelementptr inbounds %struct._stritem, %struct._stritem* %331, i32 0, i32 7
  %333 = load i16, i16* %332, align 2
  %334 = zext i16 %333 to i32
  %335 = and i32 %334, 256
  %336 = icmp ne i32 %335, 0
  %337 = zext i1 %336 to i64
  %338 = select i1 %336, i64 4, i64 0
  %339 = getelementptr inbounds i8, i8* %330, i64 %338
  %340 = load %struct._stritem*, %struct._stritem** %14, align 8
  %341 = getelementptr inbounds %struct._stritem, %struct._stritem* %340, i32 0, i32 7
  %342 = load i16, i16* %341, align 2
  %343 = zext i16 %342 to i32
  %344 = and i32 %343, 2
  %345 = icmp ne i32 %344, 0
  %346 = zext i1 %345 to i64
  %347 = select i1 %345, i64 8, i64 0
  %348 = getelementptr inbounds i8, i8* %339, i64 %347
  %349 = bitcast i8* %348 to %struct.item_hdr*
  store %struct.item_hdr* %349, %struct.item_hdr** %21, align 8
  %350 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %10, i32 0, i32 5
  %351 = load i32, i32* %350, align 4
  %352 = load %struct.item_hdr*, %struct.item_hdr** %21, align 8
  %353 = getelementptr inbounds %struct.item_hdr, %struct.item_hdr* %352, i32 0, i32 0
  store i32 %351, i32* %353, align 4
  %354 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %10, i32 0, i32 8
  %355 = load i16, i16* %354, align 8
  %356 = load %struct.item_hdr*, %struct.item_hdr** %21, align 8
  %357 = getelementptr inbounds %struct.item_hdr, %struct.item_hdr* %356, i32 0, i32 2
  store i16 %355, i16* %357, align 4
  %358 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %10, i32 0, i32 7
  %359 = load i32, i32* %358, align 4
  %360 = load %struct.item_hdr*, %struct.item_hdr** %21, align 8
  %361 = getelementptr inbounds %struct.item_hdr, %struct.item_hdr* %360, i32 0, i32 1
  store i32 %359, i32* %361, align 4
  %362 = load %struct._stritem*, %struct._stritem** %11, align 8
  %363 = getelementptr inbounds %struct._stritem, %struct._stritem* %362, i32 0, i32 5
  %364 = load i32, i32* %363, align 8
  %365 = load %struct._stritem*, %struct._stritem** %14, align 8
  %366 = getelementptr inbounds %struct._stritem, %struct._stritem* %365, i32 0, i32 5
  store i32 %364, i32* %366, align 8
  %367 = load %struct._stritem*, %struct._stritem** %11, align 8
  %368 = load %struct._stritem*, %struct._stritem** %14, align 8
  %369 = getelementptr inbounds %struct.lru_pull_tail_return, %struct.lru_pull_tail_return* %9, i32 0, i32 1
  %370 = load i32, i32* %369, align 8
  %371 = call i32 @item_replace(%struct._stritem* %367, %struct._stritem* %368, i32 %370)
  %372 = load %struct._stritem*, %struct._stritem** %14, align 8
  %373 = getelementptr inbounds %struct._stritem, %struct._stritem* %372, i32 0, i32 7
  %374 = load i16, i16* %373, align 2
  %375 = zext i16 %374 to i32
  %376 = and i32 %375, 2
  %377 = icmp ne i32 %376, 0
  br i1 %377, label %378, label %398

378:                                              ; preds = %304
  %379 = load %struct._stritem*, %struct._stritem** %11, align 8
  %380 = getelementptr inbounds %struct._stritem, %struct._stritem* %379, i32 0, i32 7
  %381 = load i16, i16* %380, align 2
  %382 = zext i16 %381 to i32
  %383 = and i32 %382, 2
  %384 = icmp ne i32 %383, 0
  br i1 %384, label %385, label %391

385:                                              ; preds = %378
  %386 = load %struct._stritem*, %struct._stritem** %11, align 8
  %387 = getelementptr inbounds %struct._stritem, %struct._stritem* %386, i32 0, i32 10
  %388 = getelementptr inbounds [0 x %union.anon.10], [0 x %union.anon.10]* %387, i64 0, i64 0
  %389 = bitcast %union.anon.10* %388 to i64*
  %390 = load i64, i64* %389, align 8
  br label %392

391:                                              ; preds = %378
  br label %392

392:                                              ; preds = %391, %385
  %393 = phi i64 [ %390, %385 ], [ 0, %391 ]
  %394 = load %struct._stritem*, %struct._stritem** %14, align 8
  %395 = getelementptr inbounds %struct._stritem, %struct._stritem* %394, i32 0, i32 10
  %396 = getelementptr inbounds [0 x %union.anon.10], [0 x %union.anon.10]* %395, i64 0, i64 0
  %397 = bitcast %union.anon.10* %396 to i64*
  store i64 %393, i64* %397, align 8
  br label %398

398:                                              ; preds = %392, %304
  %399 = load %struct._stritem*, %struct._stritem** %14, align 8
  call void @do_item_remove(%struct._stritem* %399)
  store i32 1, i32* %8, align 4
  br label %400

400:                                              ; preds = %398
  store %struct._logger* null, %struct._logger** %22, align 8
  %401 = load i32, i32* @logger_key, align 4
  %402 = call i8* @pthread_getspecific(i32 %401) #14
  %403 = bitcast i8* %402 to %struct._logger*
  store %struct._logger* %403, %struct._logger** %22, align 8
  %404 = load %struct._logger*, %struct._logger** %22, align 8
  %405 = getelementptr inbounds %struct._logger, %struct._logger* %404, i32 0, i32 8
  %406 = load i16, i16* %405, align 4
  %407 = zext i16 %406 to i32
  %408 = and i32 %407, 64
  %409 = icmp ne i32 %408, 0
  br i1 %409, label %410, label %416

410:                                              ; preds = %400
  %411 = load %struct._logger*, %struct._logger** %22, align 8
  %412 = load %struct._stritem*, %struct._stritem** %11, align 8
  %413 = bitcast %struct._stritem* %412 to i8*
  %414 = load i32, i32* %15, align 4
  %415 = call i32 (%struct._logger*, i32, i8*, ...) @logger_log(%struct._logger* %411, i32 8, i8* %413, i32 %414)
  br label %416

416:                                              ; preds = %410, %400
  br label %417

417:                                              ; preds = %416
  br label %455

418:                                              ; preds = %151
  %419 = load %struct._stritem*, %struct._stritem** %14, align 8
  %420 = bitcast %struct._stritem* %419 to i8*
  %421 = load %struct._stritem*, %struct._stritem** %14, align 8
  %422 = getelementptr inbounds %struct._stritem, %struct._stritem* %421, i32 0, i32 9
  %423 = load i8, i8* %422, align 1
  %424 = zext i8 %423 to i64
  %425 = add i64 48, %424
  %426 = add i64 %425, 1
  %427 = load %struct._stritem*, %struct._stritem** %14, align 8
  %428 = getelementptr inbounds %struct._stritem, %struct._stritem* %427, i32 0, i32 5
  %429 = load i32, i32* %428, align 8
  %430 = sext i32 %429 to i64
  %431 = add i64 %426, %430
  %432 = load %struct._stritem*, %struct._stritem** %14, align 8
  %433 = getelementptr inbounds %struct._stritem, %struct._stritem* %432, i32 0, i32 7
  %434 = load i16, i16* %433, align 2
  %435 = zext i16 %434 to i32
  %436 = and i32 %435, 256
  %437 = icmp ne i32 %436, 0
  %438 = zext i1 %437 to i64
  %439 = select i1 %437, i64 4, i64 0
  %440 = add i64 %431, %439
  %441 = load %struct._stritem*, %struct._stritem** %14, align 8
  %442 = getelementptr inbounds %struct._stritem, %struct._stritem* %441, i32 0, i32 7
  %443 = load i16, i16* %442, align 2
  %444 = zext i16 %443 to i32
  %445 = and i32 %444, 2
  %446 = icmp ne i32 %445, 0
  %447 = zext i1 %446 to i64
  %448 = select i1 %446, i64 8, i64 0
  %449 = add i64 %440, %448
  %450 = load %struct._stritem*, %struct._stritem** %14, align 8
  %451 = getelementptr inbounds %struct._stritem, %struct._stritem* %450, i32 0, i32 8
  %452 = load i8, i8* %451, align 8
  %453 = zext i8 %452 to i32
  %454 = and i32 %453, -193
  call void @slabs_free(i8* %420, i64 %449, i32 %454)
  br label %455

455:                                              ; preds = %418, %417
  br label %456

456:                                              ; preds = %455, %110
  br label %457

457:                                              ; preds = %456, %72, %31
  %458 = load %struct._stritem*, %struct._stritem** %11, align 8
  call void @do_item_remove(%struct._stritem* %458)
  %459 = getelementptr inbounds %struct.lru_pull_tail_return, %struct.lru_pull_tail_return* %9, i32 0, i32 1
  %460 = load i32, i32* %459, align 8
  call void @item_unlock(i32 %460)
  %461 = load i32, i32* %8, align 4
  store i32 %461, i32* %4, align 4
  br label %462

462:                                              ; preds = %457, %29
  %463 = load i32, i32* %4, align 4
  ret i32 %463
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @storage_compact_pause() #0 {
  %1 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @storage_compact_plock) #14
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @storage_compact_resume() #0 {
  %1 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @storage_compact_plock) #14
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @start_storage_compact_thread(i8* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  %5 = call i32 @pthread_mutex_init(%union.pthread_mutex_t* @storage_compact_plock, %struct.in_addr* null) #14
  %6 = load i8*, i8** %3, align 8
  %7 = call i32 @pthread_create(i64* @storage_compact_tid, %union.pthread_attr_t* null, i8* (i8*)* @storage_compact_thread, i8* %6) #14
  store i32 %7, i32* %4, align 4
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %9, label %14

9:                                                ; preds = %1
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %11 = load i32, i32* %4, align 4
  %12 = call i8* @strerror(i32 %11) #14
  %13 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.28.1278, i64 0, i64 0), i8* %12)
  store i32 -1, i32* %2, align 4
  br label %15

14:                                               ; preds = %1
  store i32 0, i32* %2, align 4
  br label %15

15:                                               ; preds = %14, %9
  %16 = load i32, i32* %2, align 4
  ret i32 %16
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @storage_compact_thread(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i8, align 1
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca i8, align 1
  %11 = alloca i8*, align 8
  %12 = alloca %struct.storage_compact_wrap, align 8
  %13 = alloca %struct._logger*, align 8
  %14 = alloca %struct._logger*, align 8
  %15 = alloca %struct._logger*, align 8
  %16 = alloca %struct._logger*, align 8
  %17 = alloca %struct._logger*, align 8
  store i8* %0, i8** %2, align 8
  %18 = load i8*, i8** %2, align 8
  store i8* %18, i8** %3, align 8
  %19 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 67), align 4
  store i32 %19, i32* %4, align 4
  store i8 0, i8* %5, align 1
  store i64 0, i64* %6, align 8
  store i64 0, i64* %7, align 8
  store i64 0, i64* %8, align 8
  store i32 0, i32* %9, align 4
  store i8 0, i8* %10, align 1
  store i8* null, i8** %11, align 8
  %20 = call %struct._logger* @logger_create()
  store %struct._logger* %20, %struct._logger** %13, align 8
  %21 = load %struct._logger*, %struct._logger** %13, align 8
  %22 = icmp eq %struct._logger* %21, null
  br i1 %22, label %23, label %26

23:                                               ; preds = %1
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %25 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %24, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.89.1271, i64 0, i64 0))
  call void @abort() #17
  unreachable

26:                                               ; preds = %1
  %27 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 64), align 8
  %28 = zext i32 %27 to i64
  %29 = call noalias i8* @malloc(i64 %28) #14
  store i8* %29, i8** %11, align 8
  %30 = load i8*, i8** %11, align 8
  %31 = icmp eq i8* %30, null
  br i1 %31, label %32, label %35

32:                                               ; preds = %26
  %33 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %34 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %33, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.90.1279, i64 0, i64 0))
  call void @abort() #17
  unreachable

35:                                               ; preds = %26
  %36 = getelementptr inbounds %struct.storage_compact_wrap, %struct.storage_compact_wrap* %12, i32 0, i32 1
  %37 = call i32 @pthread_mutex_init(%union.pthread_mutex_t* %36, %struct.in_addr* null) #14
  %38 = getelementptr inbounds %struct.storage_compact_wrap, %struct.storage_compact_wrap* %12, i32 0, i32 2
  store i8 0, i8* %38, align 8
  %39 = getelementptr inbounds %struct.storage_compact_wrap, %struct.storage_compact_wrap* %12, i32 0, i32 3
  store i8 0, i8* %39, align 1
  %40 = bitcast %struct.storage_compact_wrap* %12 to i8*
  %41 = getelementptr inbounds %struct.storage_compact_wrap, %struct.storage_compact_wrap* %12, i32 0, i32 0
  %42 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %41, i32 0, i32 0
  store i8* %40, i8** %42, align 8
  %43 = getelementptr inbounds %struct.storage_compact_wrap, %struct.storage_compact_wrap* %12, i32 0, i32 0
  %44 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %43, i32 0, i32 3
  store %struct.iovec* null, %struct.iovec** %44, align 8
  %45 = load i8*, i8** %11, align 8
  %46 = getelementptr inbounds %struct.storage_compact_wrap, %struct.storage_compact_wrap* %12, i32 0, i32 0
  %47 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %46, i32 0, i32 2
  store i8* %45, i8** %47, align 8
  %48 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 64), align 8
  %49 = getelementptr inbounds %struct.storage_compact_wrap, %struct.storage_compact_wrap* %12, i32 0, i32 0
  %50 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %49, i32 0, i32 6
  store i32 %48, i32* %50, align 8
  %51 = getelementptr inbounds %struct.storage_compact_wrap, %struct.storage_compact_wrap* %12, i32 0, i32 0
  %52 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %51, i32 0, i32 9
  store i32 0, i32* %52, align 4
  %53 = getelementptr inbounds %struct.storage_compact_wrap, %struct.storage_compact_wrap* %12, i32 0, i32 0
  %54 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %53, i32 0, i32 10
  store void (i8*, %struct._obj_io*, i32)* @_storage_compact_cb, void (i8*, %struct._obj_io*, i32)** %54, align 8
  %55 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @storage_compact_plock) #14
  br label %56

56:                                               ; preds = %35, %253
  %57 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @storage_compact_plock) #14
  %58 = load i32, i32* %4, align 4
  %59 = icmp ne i32 %58, 0
  br i1 %59, label %60, label %64

60:                                               ; preds = %56
  %61 = load i8*, i8** %3, align 8
  call void @extstore_run_maint(i8* %61)
  %62 = load i32, i32* %4, align 4
  %63 = call i32 @usleep(i32 %62)
  br label %64

64:                                               ; preds = %60, %56
  %65 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @storage_compact_plock) #14
  %66 = load i8, i8* %5, align 1
  %67 = trunc i8 %66 to i1
  br i1 %67, label %96, label %68

68:                                               ; preds = %64
  %69 = load i8*, i8** %3, align 8
  %70 = load %struct._logger*, %struct._logger** %13, align 8
  %71 = call i32 @storage_compact_check(i8* %69, %struct._logger* %70, i32* %9, i64* %6, i64* %7, i8* %10)
  %72 = icmp ne i32 %71, 0
  br i1 %72, label %73, label %96

73:                                               ; preds = %68
  store i64 0, i64* %8, align 8
  store i8 1, i8* %5, align 1
  br label %74

74:                                               ; preds = %73
  %75 = load %struct._logger*, %struct._logger** %13, align 8
  store %struct._logger* %75, %struct._logger** %14, align 8
  %76 = load %struct._logger*, %struct._logger** %13, align 8
  %77 = icmp eq %struct._logger* %76, null
  br i1 %77, label %78, label %82

78:                                               ; preds = %74
  %79 = load i32, i32* @logger_key, align 4
  %80 = call i8* @pthread_getspecific(i32 %79) #14
  %81 = bitcast i8* %80 to %struct._logger*
  store %struct._logger* %81, %struct._logger** %14, align 8
  br label %82

82:                                               ; preds = %78, %74
  %83 = load %struct._logger*, %struct._logger** %14, align 8
  %84 = getelementptr inbounds %struct._logger, %struct._logger* %83, i32 0, i32 8
  %85 = load i16, i16* %84, align 4
  %86 = zext i16 %85 to i32
  %87 = and i32 %86, 2
  %88 = icmp ne i32 %87, 0
  br i1 %88, label %89, label %94

89:                                               ; preds = %82
  %90 = load %struct._logger*, %struct._logger** %14, align 8
  %91 = load i32, i32* %9, align 4
  %92 = load i64, i64* %6, align 8
  %93 = call i32 (%struct._logger*, i32, i8*, ...) @logger_log(%struct._logger* %90, i32 9, i8* null, i32 %91, i64 %92)
  br label %94

94:                                               ; preds = %89, %82
  br label %95

95:                                               ; preds = %94
  br label %96

96:                                               ; preds = %95, %68, %64
  %97 = load i8, i8* %5, align 1
  %98 = trunc i8 %97 to i1
  br i1 %98, label %99, label %244

99:                                               ; preds = %96
  %100 = getelementptr inbounds %struct.storage_compact_wrap, %struct.storage_compact_wrap* %12, i32 0, i32 1
  %101 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %100) #14
  %102 = load i64, i64* %8, align 8
  %103 = load i64, i64* %7, align 8
  %104 = icmp ult i64 %102, %103
  br i1 %104, label %105, label %133

105:                                              ; preds = %99
  %106 = getelementptr inbounds %struct.storage_compact_wrap, %struct.storage_compact_wrap* %12, i32 0, i32 2
  %107 = load i8, i8* %106, align 8
  %108 = trunc i8 %107 to i1
  br i1 %108, label %133, label %109

109:                                              ; preds = %105
  %110 = getelementptr inbounds %struct.storage_compact_wrap, %struct.storage_compact_wrap* %12, i32 0, i32 3
  %111 = load i8, i8* %110, align 1
  %112 = trunc i8 %111 to i1
  br i1 %112, label %133, label %113

113:                                              ; preds = %109
  %114 = load i64, i64* %6, align 8
  %115 = trunc i64 %114 to i32
  %116 = getelementptr inbounds %struct.storage_compact_wrap, %struct.storage_compact_wrap* %12, i32 0, i32 0
  %117 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %116, i32 0, i32 5
  store i32 %115, i32* %117, align 4
  %118 = load i32, i32* %9, align 4
  %119 = trunc i32 %118 to i16
  %120 = getelementptr inbounds %struct.storage_compact_wrap, %struct.storage_compact_wrap* %12, i32 0, i32 0
  %121 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %120, i32 0, i32 8
  store i16 %119, i16* %121, align 8
  %122 = load i64, i64* %8, align 8
  %123 = trunc i64 %122 to i32
  %124 = getelementptr inbounds %struct.storage_compact_wrap, %struct.storage_compact_wrap* %12, i32 0, i32 0
  %125 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %124, i32 0, i32 7
  store i32 %123, i32* %125, align 4
  %126 = getelementptr inbounds %struct.storage_compact_wrap, %struct.storage_compact_wrap* %12, i32 0, i32 0
  %127 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %126, i32 0, i32 1
  store %struct._obj_io* null, %struct._obj_io** %127, align 8
  %128 = getelementptr inbounds %struct.storage_compact_wrap, %struct.storage_compact_wrap* %12, i32 0, i32 3
  store i8 1, i8* %128, align 1
  %129 = getelementptr inbounds %struct.storage_compact_wrap, %struct.storage_compact_wrap* %12, i32 0, i32 4
  store i8 0, i8* %129, align 2
  %130 = load i8*, i8** %3, align 8
  %131 = getelementptr inbounds %struct.storage_compact_wrap, %struct.storage_compact_wrap* %12, i32 0, i32 0
  %132 = call i32 @extstore_submit(i8* %130, %struct._obj_io* %131)
  br label %241

133:                                              ; preds = %109, %105, %99
  %134 = getelementptr inbounds %struct.storage_compact_wrap, %struct.storage_compact_wrap* %12, i32 0, i32 4
  %135 = load i8, i8* %134, align 2
  %136 = trunc i8 %135 to i1
  br i1 %136, label %137, label %161

137:                                              ; preds = %133
  br label %138

138:                                              ; preds = %137
  %139 = load %struct._logger*, %struct._logger** %13, align 8
  store %struct._logger* %139, %struct._logger** %15, align 8
  %140 = load %struct._logger*, %struct._logger** %13, align 8
  %141 = icmp eq %struct._logger* %140, null
  br i1 %141, label %142, label %146

142:                                              ; preds = %138
  %143 = load i32, i32* @logger_key, align 4
  %144 = call i8* @pthread_getspecific(i32 %143) #14
  %145 = bitcast i8* %144 to %struct._logger*
  store %struct._logger* %145, %struct._logger** %15, align 8
  br label %146

146:                                              ; preds = %142, %138
  %147 = load %struct._logger*, %struct._logger** %15, align 8
  %148 = getelementptr inbounds %struct._logger, %struct._logger* %147, i32 0, i32 8
  %149 = load i16, i16* %148, align 4
  %150 = zext i16 %149 to i32
  %151 = and i32 %150, 2
  %152 = icmp ne i32 %151, 0
  br i1 %152, label %153, label %157

153:                                              ; preds = %146
  %154 = load %struct._logger*, %struct._logger** %15, align 8
  %155 = load i32, i32* %9, align 4
  %156 = call i32 (%struct._logger*, i32, i8*, ...) @logger_log(%struct._logger* %154, i32 10, i8* null, i32 %155)
  br label %157

157:                                              ; preds = %153, %146
  br label %158

158:                                              ; preds = %157
  %159 = getelementptr inbounds %struct.storage_compact_wrap, %struct.storage_compact_wrap* %12, i32 0, i32 2
  store i8 0, i8* %159, align 8
  %160 = getelementptr inbounds %struct.storage_compact_wrap, %struct.storage_compact_wrap* %12, i32 0, i32 3
  store i8 0, i8* %160, align 1
  store i8 0, i8* %5, align 1
  br label %240

161:                                              ; preds = %133
  %162 = getelementptr inbounds %struct.storage_compact_wrap, %struct.storage_compact_wrap* %12, i32 0, i32 3
  %163 = load i8, i8* %162, align 1
  %164 = trunc i8 %163 to i1
  br i1 %164, label %165, label %207

165:                                              ; preds = %161
  %166 = getelementptr inbounds %struct.storage_compact_wrap, %struct.storage_compact_wrap* %12, i32 0, i32 2
  %167 = load i8, i8* %166, align 8
  %168 = trunc i8 %167 to i1
  br i1 %168, label %169, label %207

169:                                              ; preds = %165
  br label %170

170:                                              ; preds = %169
  %171 = load %struct._logger*, %struct._logger** %13, align 8
  store %struct._logger* %171, %struct._logger** %16, align 8
  %172 = load %struct._logger*, %struct._logger** %13, align 8
  %173 = icmp eq %struct._logger* %172, null
  br i1 %173, label %174, label %178

174:                                              ; preds = %170
  %175 = load i32, i32* @logger_key, align 4
  %176 = call i8* @pthread_getspecific(i32 %175) #14
  %177 = bitcast i8* %176 to %struct._logger*
  store %struct._logger* %177, %struct._logger** %16, align 8
  br label %178

178:                                              ; preds = %174, %170
  %179 = load %struct._logger*, %struct._logger** %16, align 8
  %180 = getelementptr inbounds %struct._logger, %struct._logger* %179, i32 0, i32 8
  %181 = load i16, i16* %180, align 4
  %182 = zext i16 %181 to i32
  %183 = and i32 %182, 2
  %184 = icmp ne i32 %183, 0
  br i1 %184, label %185, label %190

185:                                              ; preds = %178
  %186 = load %struct._logger*, %struct._logger** %16, align 8
  %187 = load i32, i32* %9, align 4
  %188 = load i64, i64* %8, align 8
  %189 = call i32 (%struct._logger*, i32, i8*, ...) @logger_log(%struct._logger* %186, i32 11, i8* null, i32 %187, i64 %188)
  br label %190

190:                                              ; preds = %185, %178
  br label %191

191:                                              ; preds = %190
  %192 = load i8*, i8** %3, align 8
  %193 = load %struct._logger*, %struct._logger** %13, align 8
  %194 = load i8, i8* %10, align 1
  %195 = trunc i8 %194 to i1
  %196 = load i8*, i8** %11, align 8
  %197 = load i32, i32* %9, align 4
  %198 = load i64, i64* %6, align 8
  %199 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 64), align 8
  %200 = zext i32 %199 to i64
  call void @storage_compact_readback(i8* %192, %struct._logger* %193, i1 zeroext %195, i8* %196, i32 %197, i64 %198, i64 %200)
  %201 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 64), align 8
  %202 = zext i32 %201 to i64
  %203 = load i64, i64* %8, align 8
  %204 = add i64 %203, %202
  store i64 %204, i64* %8, align 8
  %205 = getelementptr inbounds %struct.storage_compact_wrap, %struct.storage_compact_wrap* %12, i32 0, i32 2
  store i8 0, i8* %205, align 8
  %206 = getelementptr inbounds %struct.storage_compact_wrap, %struct.storage_compact_wrap* %12, i32 0, i32 3
  store i8 0, i8* %206, align 1
  br label %239

207:                                              ; preds = %165, %161
  %208 = load i64, i64* %8, align 8
  %209 = load i64, i64* %7, align 8
  %210 = icmp uge i64 %208, %209
  br i1 %210, label %211, label %238

211:                                              ; preds = %207
  store i8 0, i8* %5, align 1
  %212 = getelementptr inbounds %struct.storage_compact_wrap, %struct.storage_compact_wrap* %12, i32 0, i32 2
  store i8 0, i8* %212, align 8
  %213 = getelementptr inbounds %struct.storage_compact_wrap, %struct.storage_compact_wrap* %12, i32 0, i32 3
  store i8 0, i8* %213, align 1
  %214 = load i8*, i8** %3, align 8
  %215 = load i32, i32* %9, align 4
  %216 = load i64, i64* %6, align 8
  call void @extstore_close_page(i8* %214, i32 %215, i64 %216)
  br label %217

217:                                              ; preds = %211
  %218 = load %struct._logger*, %struct._logger** %13, align 8
  store %struct._logger* %218, %struct._logger** %17, align 8
  %219 = load %struct._logger*, %struct._logger** %13, align 8
  %220 = icmp eq %struct._logger* %219, null
  br i1 %220, label %221, label %225

221:                                              ; preds = %217
  %222 = load i32, i32* @logger_key, align 4
  %223 = call i8* @pthread_getspecific(i32 %222) #14
  %224 = bitcast i8* %223 to %struct._logger*
  store %struct._logger* %224, %struct._logger** %17, align 8
  br label %225

225:                                              ; preds = %221, %217
  %226 = load %struct._logger*, %struct._logger** %17, align 8
  %227 = getelementptr inbounds %struct._logger, %struct._logger* %226, i32 0, i32 8
  %228 = load i16, i16* %227, align 4
  %229 = zext i16 %228 to i32
  %230 = and i32 %229, 2
  %231 = icmp ne i32 %230, 0
  br i1 %231, label %232, label %236

232:                                              ; preds = %225
  %233 = load %struct._logger*, %struct._logger** %17, align 8
  %234 = load i32, i32* %9, align 4
  %235 = call i32 (%struct._logger*, i32, i8*, ...) @logger_log(%struct._logger* %233, i32 13, i8* null, i32 %234)
  br label %236

236:                                              ; preds = %232, %225
  br label %237

237:                                              ; preds = %236
  br label %238

238:                                              ; preds = %237, %207
  br label %239

239:                                              ; preds = %238, %191
  br label %240

240:                                              ; preds = %239, %158
  br label %241

241:                                              ; preds = %240, %113
  %242 = getelementptr inbounds %struct.storage_compact_wrap, %struct.storage_compact_wrap* %12, i32 0, i32 1
  %243 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %242) #14
  store i32 10000, i32* %4, align 4
  br label %253

244:                                              ; preds = %96
  %245 = load i32, i32* %4, align 4
  %246 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 67), align 4
  %247 = icmp ult i32 %245, %246
  br i1 %247, label %248, label %252

248:                                              ; preds = %244
  %249 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 67), align 4
  %250 = load i32, i32* %4, align 4
  %251 = add i32 %250, %249
  store i32 %251, i32* %4, align 4
  br label %252

252:                                              ; preds = %248, %244
  br label %253

253:                                              ; preds = %252, %241
  br label %56
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @_storage_compact_cb(i8* %0, %struct._obj_io* %1, i32 %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca %struct._obj_io*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.storage_compact_wrap*, align 8
  store i8* %0, i8** %4, align 8
  store %struct._obj_io* %1, %struct._obj_io** %5, align 8
  store i32 %2, i32* %6, align 4
  %8 = load %struct._obj_io*, %struct._obj_io** %5, align 8
  %9 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %8, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = bitcast i8* %10 to %struct.storage_compact_wrap*
  store %struct.storage_compact_wrap* %11, %struct.storage_compact_wrap** %7, align 8
  %12 = load %struct.storage_compact_wrap*, %struct.storage_compact_wrap** %7, align 8
  %13 = getelementptr inbounds %struct.storage_compact_wrap, %struct.storage_compact_wrap* %12, i32 0, i32 1
  %14 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %13) #14
  %15 = load i32, i32* %6, align 4
  %16 = icmp slt i32 %15, 1
  br i1 %16, label %17, label %20

17:                                               ; preds = %3
  %18 = load %struct.storage_compact_wrap*, %struct.storage_compact_wrap** %7, align 8
  %19 = getelementptr inbounds %struct.storage_compact_wrap, %struct.storage_compact_wrap* %18, i32 0, i32 4
  store i8 1, i8* %19, align 2
  br label %20

20:                                               ; preds = %17, %3
  %21 = load %struct.storage_compact_wrap*, %struct.storage_compact_wrap** %7, align 8
  %22 = getelementptr inbounds %struct.storage_compact_wrap, %struct.storage_compact_wrap* %21, i32 0, i32 2
  store i8 1, i8* %22, align 8
  %23 = load %struct.storage_compact_wrap*, %struct.storage_compact_wrap** %7, align 8
  %24 = getelementptr inbounds %struct.storage_compact_wrap, %struct.storage_compact_wrap* %23, i32 0, i32 1
  %25 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %24) #14
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @storage_compact_check(i8* %0, %struct._logger* %1, i32* %2, i64* %3, i64* %4, i8* %5) #0 {
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca %struct._logger*, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i64*, align 8
  %12 = alloca i64*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca %struct.extstore_stats, align 8
  %15 = alloca i32, align 4
  %16 = alloca double, align 8
  %17 = alloca i64, align 8
  %18 = alloca i64, align 8
  %19 = alloca i64, align 8
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca %struct._logger*, align 8
  store i8* %0, i8** %8, align 8
  store %struct._logger* %1, %struct._logger** %9, align 8
  store i32* %2, i32** %10, align 8
  store i64* %3, i64** %11, align 8
  store i64* %4, i64** %12, align 8
  store i8* %5, i8** %13, align 8
  store i64 -1, i64* %18, align 8
  store i64 -1, i64* %19, align 8
  store i32 0, i32* %20, align 4
  store i32 0, i32* %21, align 4
  %23 = load i8*, i8** %8, align 8
  call void @extstore_get_stats(i8* %23, %struct.extstore_stats* %14)
  %24 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %14, i32 0, i32 6
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %6
  store i32 0, i32* %7, align 4
  br label %194

28:                                               ; preds = %6
  %29 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %14, i32 0, i32 5
  %30 = load i64, i64* %29, align 8
  %31 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 65), align 4
  %32 = zext i32 %31 to i64
  %33 = icmp ugt i64 %30, %32
  br i1 %33, label %34, label %35

34:                                               ; preds = %28
  store i32 0, i32* %7, align 4
  br label %194

35:                                               ; preds = %28
  %36 = load i8*, i8** %13, align 8
  store i8 0, i8* %36, align 1
  %37 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %14, i32 0, i32 5
  %38 = load i64, i64* %37, align 8
  %39 = uitofp i64 %38 to double
  %40 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %14, i32 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = uitofp i64 %41 to double
  %43 = fdiv double %39, %42
  %44 = fsub double 1.000000e+00, %43
  store double %44, double* %16, align 8
  %45 = load double, double* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 68), align 8
  %46 = load double, double* %16, align 8
  %47 = fmul double %46, %45
  store double %47, double* %16, align 8
  %48 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %14, i32 0, i32 4
  %49 = load i64, i64* %48, align 8
  %50 = uitofp i64 %49 to double
  %51 = load double, double* %16, align 8
  %52 = fmul double %50, %51
  %53 = fptoui double %52 to i64
  store i64 %53, i64* %17, align 8
  br label %54

54:                                               ; preds = %35
  %55 = load %struct._logger*, %struct._logger** %9, align 8
  store %struct._logger* %55, %struct._logger** %22, align 8
  %56 = load %struct._logger*, %struct._logger** %9, align 8
  %57 = icmp eq %struct._logger* %56, null
  br i1 %57, label %58, label %62

58:                                               ; preds = %54
  %59 = load i32, i32* @logger_key, align 4
  %60 = call i8* @pthread_getspecific(i32 %59) #14
  %61 = bitcast i8* %60 to %struct._logger*
  store %struct._logger* %61, %struct._logger** %22, align 8
  br label %62

62:                                               ; preds = %58, %54
  %63 = load %struct._logger*, %struct._logger** %22, align 8
  %64 = getelementptr inbounds %struct._logger, %struct._logger* %63, i32 0, i32 8
  %65 = load i16, i16* %64, align 4
  %66 = zext i16 %65 to i32
  %67 = and i32 %66, 2
  %68 = icmp ne i32 %67, 0
  br i1 %68, label %69, label %74

69:                                               ; preds = %62
  %70 = load %struct._logger*, %struct._logger** %22, align 8
  %71 = load double, double* %16, align 8
  %72 = load i64, i64* %17, align 8
  %73 = call i32 (%struct._logger*, i32, i8*, ...) @logger_log(%struct._logger* %70, i32 14, i8* null, double %71, i64 %72)
  br label %74

74:                                               ; preds = %69, %62
  br label %75

75:                                               ; preds = %74
  %76 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %14, i32 0, i32 1
  %77 = load i64, i64* %76, align 8
  %78 = call noalias i8* @calloc(i64 %77, i64 24) #14
  %79 = bitcast i8* %78 to %struct.extstore_page_data*
  %80 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %14, i32 0, i32 17
  store %struct.extstore_page_data* %79, %struct.extstore_page_data** %80, align 8
  %81 = load i8*, i8** %8, align 8
  call void @extstore_get_page_data(i8* %81, %struct.extstore_stats* %14)
  store i32 0, i32* %15, align 4
  br label %82

82:                                               ; preds = %157, %75
  %83 = load i32, i32* %15, align 4
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %14, i32 0, i32 1
  %86 = load i64, i64* %85, align 8
  %87 = icmp ult i64 %84, %86
  br i1 %87, label %88, label %160

88:                                               ; preds = %82
  %89 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %14, i32 0, i32 17
  %90 = load %struct.extstore_page_data*, %struct.extstore_page_data** %89, align 8
  %91 = load i32, i32* %15, align 4
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds %struct.extstore_page_data, %struct.extstore_page_data* %90, i64 %92
  %94 = getelementptr inbounds %struct.extstore_page_data, %struct.extstore_page_data* %93, i32 0, i32 0
  %95 = load i64, i64* %94, align 8
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %106, label %97

97:                                               ; preds = %88
  %98 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %14, i32 0, i32 17
  %99 = load %struct.extstore_page_data*, %struct.extstore_page_data** %98, align 8
  %100 = load i32, i32* %15, align 4
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds %struct.extstore_page_data, %struct.extstore_page_data* %99, i64 %101
  %103 = getelementptr inbounds %struct.extstore_page_data, %struct.extstore_page_data* %102, i32 0, i32 2
  %104 = load i32, i32* %103, align 8
  %105 = icmp eq i32 %104, 3
  br i1 %105, label %106, label %107

106:                                              ; preds = %97, %88
  br label %157

107:                                              ; preds = %97
  %108 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %14, i32 0, i32 17
  %109 = load %struct.extstore_page_data*, %struct.extstore_page_data** %108, align 8
  %110 = load i32, i32* %15, align 4
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds %struct.extstore_page_data, %struct.extstore_page_data* %109, i64 %111
  %113 = getelementptr inbounds %struct.extstore_page_data, %struct.extstore_page_data* %112, i32 0, i32 0
  %114 = load i64, i64* %113, align 8
  %115 = load i64, i64* %19, align 8
  %116 = icmp ult i64 %114, %115
  br i1 %116, label %117, label %126

117:                                              ; preds = %107
  %118 = load i32, i32* %15, align 4
  store i32 %118, i32* %21, align 4
  %119 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %14, i32 0, i32 17
  %120 = load %struct.extstore_page_data*, %struct.extstore_page_data** %119, align 8
  %121 = load i32, i32* %15, align 4
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds %struct.extstore_page_data, %struct.extstore_page_data* %120, i64 %122
  %124 = getelementptr inbounds %struct.extstore_page_data, %struct.extstore_page_data* %123, i32 0, i32 0
  %125 = load i64, i64* %124, align 8
  store i64 %125, i64* %19, align 8
  br label %126

126:                                              ; preds = %117, %107
  %127 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %14, i32 0, i32 17
  %128 = load %struct.extstore_page_data*, %struct.extstore_page_data** %127, align 8
  %129 = load i32, i32* %15, align 4
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds %struct.extstore_page_data, %struct.extstore_page_data* %128, i64 %130
  %132 = getelementptr inbounds %struct.extstore_page_data, %struct.extstore_page_data* %131, i32 0, i32 1
  %133 = load i64, i64* %132, align 8
  %134 = load i64, i64* %17, align 8
  %135 = icmp ult i64 %133, %134
  br i1 %135, label %136, label %156

136:                                              ; preds = %126
  %137 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %14, i32 0, i32 17
  %138 = load %struct.extstore_page_data*, %struct.extstore_page_data** %137, align 8
  %139 = load i32, i32* %15, align 4
  %140 = sext i32 %139 to i64
  %141 = getelementptr inbounds %struct.extstore_page_data, %struct.extstore_page_data* %138, i64 %140
  %142 = getelementptr inbounds %struct.extstore_page_data, %struct.extstore_page_data* %141, i32 0, i32 0
  %143 = load i64, i64* %142, align 8
  %144 = load i64, i64* %18, align 8
  %145 = icmp ult i64 %143, %144
  br i1 %145, label %146, label %155

146:                                              ; preds = %136
  %147 = load i32, i32* %15, align 4
  store i32 %147, i32* %20, align 4
  %148 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %14, i32 0, i32 17
  %149 = load %struct.extstore_page_data*, %struct.extstore_page_data** %148, align 8
  %150 = load i32, i32* %15, align 4
  %151 = sext i32 %150 to i64
  %152 = getelementptr inbounds %struct.extstore_page_data, %struct.extstore_page_data* %149, i64 %151
  %153 = getelementptr inbounds %struct.extstore_page_data, %struct.extstore_page_data* %152, i32 0, i32 0
  %154 = load i64, i64* %153, align 8
  store i64 %154, i64* %18, align 8
  br label %155

155:                                              ; preds = %146, %136
  br label %156

156:                                              ; preds = %155, %126
  br label %157

157:                                              ; preds = %156, %106
  %158 = load i32, i32* %15, align 4
  %159 = add nsw i32 %158, 1
  store i32 %159, i32* %15, align 4
  br label %82, !llvm.loop !228

160:                                              ; preds = %82
  %161 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %14, i32 0, i32 4
  %162 = load i64, i64* %161, align 8
  %163 = load i64*, i64** %12, align 8
  store i64 %162, i64* %163, align 8
  %164 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %14, i32 0, i32 17
  %165 = load %struct.extstore_page_data*, %struct.extstore_page_data** %164, align 8
  %166 = bitcast %struct.extstore_page_data* %165 to i8*
  call void @free(i8* %166) #14
  %167 = load i64, i64* %18, align 8
  %168 = icmp ne i64 %167, -1
  br i1 %168, label %169, label %174

169:                                              ; preds = %160
  %170 = load i32, i32* %20, align 4
  %171 = load i32*, i32** %10, align 8
  store i32 %170, i32* %171, align 4
  %172 = load i64, i64* %18, align 8
  %173 = load i64*, i64** %11, align 8
  store i64 %172, i64* %173, align 8
  store i32 1, i32* %7, align 4
  br label %194

174:                                              ; preds = %160
  %175 = load i64, i64* %19, align 8
  %176 = icmp ne i64 %175, -1
  br i1 %176, label %177, label %192

177:                                              ; preds = %174
  %178 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 70), align 8
  %179 = trunc i8 %178 to i1
  br i1 %179, label %180, label %192

180:                                              ; preds = %177
  %181 = getelementptr inbounds %struct.extstore_stats, %struct.extstore_stats* %14, i32 0, i32 5
  %182 = load i64, i64* %181, align 8
  %183 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 66), align 8
  %184 = zext i32 %183 to i64
  %185 = icmp ule i64 %182, %184
  br i1 %185, label %186, label %192

186:                                              ; preds = %180
  %187 = load i32, i32* %21, align 4
  %188 = load i32*, i32** %10, align 8
  store i32 %187, i32* %188, align 4
  %189 = load i64, i64* %19, align 8
  %190 = load i64*, i64** %11, align 8
  store i64 %189, i64* %190, align 8
  %191 = load i8*, i8** %13, align 8
  store i8 1, i8* %191, align 1
  store i32 1, i32* %7, align 4
  br label %194

192:                                              ; preds = %180, %177, %174
  br label %193

193:                                              ; preds = %192
  store i32 0, i32* %7, align 4
  br label %194

194:                                              ; preds = %193, %186, %169, %34, %27
  %195 = load i32, i32* %7, align 4
  ret i32 %195
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @storage_compact_readback(i8* %0, %struct._logger* %1, i1 zeroext %2, i8* %3, i32 %4, i64 %5, i64 %6) #0 {
  %8 = alloca i8*, align 8
  %9 = alloca %struct._logger*, align 8
  %10 = alloca i8, align 1
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca %struct._stritem*, align 8
  %20 = alloca %struct.item_hdr*, align 8
  %21 = alloca %struct._stritem*, align 8
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i8, align 1
  %25 = alloca i8, align 1
  %26 = alloca i32, align 4
  %27 = alloca %struct._obj_io, align 8
  %28 = alloca %struct._logger*, align 8
  store i8* %0, i8** %8, align 8
  store %struct._logger* %1, %struct._logger** %9, align 8
  %29 = zext i1 %2 to i8
  store i8 %29, i8* %10, align 1
  store i8* %3, i8** %11, align 8
  store i32 %4, i32* %12, align 4
  store i64 %5, i64* %13, align 8
  store i64 %6, i64* %14, align 8
  store i64 0, i64* %15, align 8
  store i32 0, i32* %16, align 4
  store i32 0, i32* %17, align 4
  store i32 0, i32* %18, align 4
  br label %30

30:                                               ; preds = %264, %7
  %31 = load i64, i64* %15, align 8
  %32 = load i64, i64* %14, align 8
  %33 = icmp ult i64 %31, %32
  br i1 %33, label %34, label %265

34:                                               ; preds = %30
  store %struct._stritem* null, %struct._stritem** %19, align 8
  store %struct.item_hdr* null, %struct.item_hdr** %20, align 8
  %35 = load i8*, i8** %11, align 8
  %36 = load i64, i64* %15, align 8
  %37 = getelementptr inbounds i8, i8* %35, i64 %36
  %38 = bitcast i8* %37 to %struct._stritem*
  store %struct._stritem* %38, %struct._stritem** %21, align 8
  %39 = load %struct._stritem*, %struct._stritem** %21, align 8
  %40 = getelementptr inbounds %struct._stritem, %struct._stritem* %39, i32 0, i32 9
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i32
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %34
  br label %265

45:                                               ; preds = %34
  %46 = load %struct._stritem*, %struct._stritem** %21, align 8
  %47 = getelementptr inbounds %struct._stritem, %struct._stritem* %46, i32 0, i32 9
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i64
  %50 = add i64 48, %49
  %51 = add i64 %50, 1
  %52 = load %struct._stritem*, %struct._stritem** %21, align 8
  %53 = getelementptr inbounds %struct._stritem, %struct._stritem* %52, i32 0, i32 5
  %54 = load i32, i32* %53, align 8
  %55 = sext i32 %54 to i64
  %56 = add i64 %51, %55
  %57 = load %struct._stritem*, %struct._stritem** %21, align 8
  %58 = getelementptr inbounds %struct._stritem, %struct._stritem* %57, i32 0, i32 7
  %59 = load i16, i16* %58, align 2
  %60 = zext i16 %59 to i32
  %61 = and i32 %60, 256
  %62 = icmp ne i32 %61, 0
  %63 = zext i1 %62 to i64
  %64 = select i1 %62, i64 4, i64 0
  %65 = add i64 %56, %64
  %66 = load %struct._stritem*, %struct._stritem** %21, align 8
  %67 = getelementptr inbounds %struct._stritem, %struct._stritem* %66, i32 0, i32 7
  %68 = load i16, i16* %67, align 2
  %69 = zext i16 %68 to i32
  %70 = and i32 %69, 2
  %71 = icmp ne i32 %70, 0
  %72 = zext i1 %71 to i64
  %73 = select i1 %71, i64 8, i64 0
  %74 = add i64 %65, %73
  %75 = trunc i64 %74 to i32
  store i32 %75, i32* %22, align 4
  %76 = load %struct._stritem*, %struct._stritem** %21, align 8
  %77 = getelementptr inbounds %struct._stritem, %struct._stritem* %76, i32 0, i32 3
  %78 = load i32, i32* %77, align 8
  store i32 %78, i32* %23, align 4
  %79 = load i32, i32* %23, align 4
  call void @item_lock(i32 %79)
  %80 = load %struct._stritem*, %struct._stritem** %21, align 8
  %81 = getelementptr inbounds %struct._stritem, %struct._stritem* %80, i32 0, i32 10
  %82 = bitcast [0 x %union.anon.10]* %81 to i8*
  %83 = load %struct._stritem*, %struct._stritem** %21, align 8
  %84 = getelementptr inbounds %struct._stritem, %struct._stritem* %83, i32 0, i32 7
  %85 = load i16, i16* %84, align 2
  %86 = zext i16 %85 to i32
  %87 = and i32 %86, 2
  %88 = icmp ne i32 %87, 0
  %89 = zext i1 %88 to i64
  %90 = select i1 %88, i64 8, i64 0
  %91 = getelementptr inbounds i8, i8* %82, i64 %90
  %92 = load %struct._stritem*, %struct._stritem** %21, align 8
  %93 = getelementptr inbounds %struct._stritem, %struct._stritem* %92, i32 0, i32 9
  %94 = load i8, i8* %93, align 1
  %95 = zext i8 %94 to i64
  %96 = load i32, i32* %23, align 4
  %97 = call %struct._stritem* @assoc_find(i8* %91, i64 %95, i32 %96)
  store %struct._stritem* %97, %struct._stritem** %19, align 8
  %98 = load %struct._stritem*, %struct._stritem** %19, align 8
  %99 = icmp ne %struct._stritem* %98, null
  br i1 %99, label %100, label %253

100:                                              ; preds = %45
  store i8 0, i8* %24, align 1
  %101 = load %struct._stritem*, %struct._stritem** %19, align 8
  %102 = getelementptr inbounds %struct._stritem, %struct._stritem* %101, i32 0, i32 6
  %103 = load i16, i16* %102, align 4
  %104 = add i16 %103, 1
  store i16 %104, i16* %102, align 4
  %105 = load %struct._stritem*, %struct._stritem** %19, align 8
  %106 = getelementptr inbounds %struct._stritem, %struct._stritem* %105, i32 0, i32 7
  %107 = load i16, i16* %106, align 2
  %108 = zext i16 %107 to i32
  %109 = and i32 %108, 128
  %110 = icmp ne i32 %109, 0
  br i1 %110, label %111, label %190

111:                                              ; preds = %100
  %112 = load %struct._stritem*, %struct._stritem** %19, align 8
  %113 = call i32 @item_is_flushed(%struct._stritem* %112)
  %114 = icmp ne i32 %113, 0
  br i1 %114, label %190, label %115

115:                                              ; preds = %111
  %116 = load %struct._stritem*, %struct._stritem** %19, align 8
  %117 = getelementptr inbounds %struct._stritem, %struct._stritem* %116, i32 0, i32 4
  %118 = load i32, i32* %117, align 4
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %126, label %120

120:                                              ; preds = %115
  %121 = load %struct._stritem*, %struct._stritem** %19, align 8
  %122 = getelementptr inbounds %struct._stritem, %struct._stritem* %121, i32 0, i32 4
  %123 = load i32, i32* %122, align 4
  %124 = load volatile i32, i32* @current_time, align 4
  %125 = icmp ugt i32 %123, %124
  br i1 %125, label %126, label %190

126:                                              ; preds = %120, %115
  %127 = load %struct._stritem*, %struct._stritem** %19, align 8
  %128 = getelementptr inbounds %struct._stritem, %struct._stritem* %127, i32 0, i32 10
  %129 = bitcast [0 x %union.anon.10]* %128 to i8*
  %130 = load %struct._stritem*, %struct._stritem** %19, align 8
  %131 = getelementptr inbounds %struct._stritem, %struct._stritem* %130, i32 0, i32 9
  %132 = load i8, i8* %131, align 1
  %133 = zext i8 %132 to i32
  %134 = sext i32 %133 to i64
  %135 = getelementptr inbounds i8, i8* %129, i64 %134
  %136 = getelementptr inbounds i8, i8* %135, i64 1
  %137 = load %struct._stritem*, %struct._stritem** %19, align 8
  %138 = getelementptr inbounds %struct._stritem, %struct._stritem* %137, i32 0, i32 7
  %139 = load i16, i16* %138, align 2
  %140 = zext i16 %139 to i32
  %141 = and i32 %140, 256
  %142 = icmp ne i32 %141, 0
  %143 = zext i1 %142 to i64
  %144 = select i1 %142, i64 4, i64 0
  %145 = getelementptr inbounds i8, i8* %136, i64 %144
  %146 = load %struct._stritem*, %struct._stritem** %19, align 8
  %147 = getelementptr inbounds %struct._stritem, %struct._stritem* %146, i32 0, i32 7
  %148 = load i16, i16* %147, align 2
  %149 = zext i16 %148 to i32
  %150 = and i32 %149, 2
  %151 = icmp ne i32 %150, 0
  %152 = zext i1 %151 to i64
  %153 = select i1 %151, i64 8, i64 0
  %154 = getelementptr inbounds i8, i8* %145, i64 %153
  %155 = bitcast i8* %154 to %struct.item_hdr*
  store %struct.item_hdr* %155, %struct.item_hdr** %20, align 8
  %156 = load %struct.item_hdr*, %struct.item_hdr** %20, align 8
  %157 = getelementptr inbounds %struct.item_hdr, %struct.item_hdr* %156, i32 0, i32 2
  %158 = load i16, i16* %157, align 4
  %159 = zext i16 %158 to i32
  %160 = load i32, i32* %12, align 4
  %161 = icmp eq i32 %159, %160
  br i1 %161, label %162, label %189

162:                                              ; preds = %126
  %163 = load %struct.item_hdr*, %struct.item_hdr** %20, align 8
  %164 = getelementptr inbounds %struct.item_hdr, %struct.item_hdr* %163, i32 0, i32 0
  %165 = load i32, i32* %164, align 4
  %166 = zext i32 %165 to i64
  %167 = load i64, i64* %13, align 8
  %168 = icmp eq i64 %166, %167
  br i1 %168, label %169, label %189

169:                                              ; preds = %162
  %170 = load i8*, i8** %8, align 8
  %171 = load i32, i32* %12, align 4
  %172 = load i64, i64* %13, align 8
  %173 = load i32, i32* %22, align 4
  %174 = call i32 @extstore_delete(i8* %170, i32 %171, i64 %172, i32 1, i32 %173)
  %175 = load i8, i8* %10, align 1
  %176 = trunc i8 %175 to i1
  br i1 %176, label %177, label %187

177:                                              ; preds = %169
  %178 = load %struct._stritem*, %struct._stritem** %19, align 8
  %179 = getelementptr inbounds %struct._stritem, %struct._stritem* %178, i32 0, i32 8
  %180 = load i8, i8* %179, align 8
  %181 = zext i8 %180 to i32
  %182 = and i32 %181, 192
  %183 = icmp eq i32 %182, 128
  br i1 %183, label %184, label %187

184:                                              ; preds = %177
  store i8 0, i8* %24, align 1
  %185 = load i32, i32* %18, align 4
  %186 = add i32 %185, 1
  store i32 %186, i32* %18, align 4
  br label %188

187:                                              ; preds = %177, %169
  store i8 1, i8* %24, align 1
  br label %188

188:                                              ; preds = %187, %184
  br label %189

189:                                              ; preds = %188, %162, %126
  br label %190

190:                                              ; preds = %189, %120, %111, %100
  %191 = load i8, i8* %24, align 1
  %192 = trunc i8 %191 to i1
  br i1 %192, label %193, label %251

193:                                              ; preds = %190
  store i8 0, i8* %25, align 1
  %194 = load i32, i32* %22, align 4
  %195 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %27, i32 0, i32 6
  store i32 %194, i32* %195, align 8
  %196 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %27, i32 0, i32 9
  store i32 1, i32* %196, align 4
  store i32 10, i32* %26, align 4
  br label %197

197:                                              ; preds = %216, %193
  %198 = load i32, i32* %26, align 4
  %199 = icmp sgt i32 %198, 0
  br i1 %199, label %200, label %219

200:                                              ; preds = %197
  %201 = load i8*, i8** %8, align 8
  %202 = call i32 @extstore_write_request(i8* %201, i32 1, i32 1, %struct._obj_io* %27)
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %204, label %213

204:                                              ; preds = %200
  %205 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %27, i32 0, i32 2
  %206 = load i8*, i8** %205, align 8
  %207 = load %struct._stritem*, %struct._stritem** %21, align 8
  %208 = bitcast %struct._stritem* %207 to i8*
  %209 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %27, i32 0, i32 6
  %210 = load i32, i32* %209, align 8
  %211 = zext i32 %210 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %206, i8* align 8 %208, i64 %211, i1 false)
  %212 = load i8*, i8** %8, align 8
  call void @extstore_write(i8* %212, %struct._obj_io* %27)
  store i8 1, i8* %25, align 1
  br label %219

213:                                              ; preds = %200
  %214 = call i32 @usleep(i32 1000)
  br label %215

215:                                              ; preds = %213
  br label %216

216:                                              ; preds = %215
  %217 = load i32, i32* %26, align 4
  %218 = add nsw i32 %217, -1
  store i32 %218, i32* %26, align 4
  br label %197, !llvm.loop !229

219:                                              ; preds = %204, %197
  %220 = load i8, i8* %25, align 1
  %221 = trunc i8 %220 to i1
  br i1 %221, label %222, label %247

222:                                              ; preds = %219
  %223 = load %struct._stritem*, %struct._stritem** %21, align 8
  %224 = getelementptr inbounds %struct._stritem, %struct._stritem* %223, i32 0, i32 6
  %225 = load i16, i16* %224, align 4
  %226 = zext i16 %225 to i32
  %227 = icmp eq i32 %226, 2
  br i1 %227, label %228, label %243

228:                                              ; preds = %222
  %229 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %27, i32 0, i32 5
  %230 = load i32, i32* %229, align 4
  %231 = load %struct.item_hdr*, %struct.item_hdr** %20, align 8
  %232 = getelementptr inbounds %struct.item_hdr, %struct.item_hdr* %231, i32 0, i32 0
  store i32 %230, i32* %232, align 4
  %233 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %27, i32 0, i32 8
  %234 = load i16, i16* %233, align 8
  %235 = load %struct.item_hdr*, %struct.item_hdr** %20, align 8
  %236 = getelementptr inbounds %struct.item_hdr, %struct.item_hdr* %235, i32 0, i32 2
  store i16 %234, i16* %236, align 4
  %237 = getelementptr inbounds %struct._obj_io, %struct._obj_io* %27, i32 0, i32 7
  %238 = load i32, i32* %237, align 4
  %239 = load %struct.item_hdr*, %struct.item_hdr** %20, align 8
  %240 = getelementptr inbounds %struct.item_hdr, %struct.item_hdr* %239, i32 0, i32 1
  store i32 %238, i32* %240, align 4
  %241 = load i32, i32* %16, align 4
  %242 = add i32 %241, 1
  store i32 %242, i32* %16, align 4
  br label %246

243:                                              ; preds = %222
  %244 = load i32, i32* %17, align 4
  %245 = add i32 %244, 1
  store i32 %245, i32* %17, align 4
  br label %246

246:                                              ; preds = %243, %228
  br label %250

247:                                              ; preds = %219
  %248 = load i32, i32* %17, align 4
  %249 = add i32 %248, 1
  store i32 %249, i32* %17, align 4
  br label %250

250:                                              ; preds = %247, %246
  br label %251

251:                                              ; preds = %250, %190
  %252 = load %struct._stritem*, %struct._stritem** %19, align 8
  call void @do_item_remove(%struct._stritem* %252)
  br label %253

253:                                              ; preds = %251, %45
  %254 = load i32, i32* %23, align 4
  call void @item_unlock(i32 %254)
  %255 = load i32, i32* %22, align 4
  %256 = zext i32 %255 to i64
  %257 = load i64, i64* %15, align 8
  %258 = add i64 %257, %256
  store i64 %258, i64* %15, align 8
  %259 = load i64, i64* %14, align 8
  %260 = load i64, i64* %15, align 8
  %261 = sub i64 %259, %260
  %262 = icmp ult i64 %261, 48
  br i1 %262, label %263, label %264

263:                                              ; preds = %253
  br label %265

264:                                              ; preds = %253
  br label %30, !llvm.loop !230

265:                                              ; preds = %263, %44, %30
  call void @STATS_LOCK()
  %266 = load i32, i32* %17, align 4
  %267 = zext i32 %266 to i64
  %268 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 19), align 8
  %269 = add i64 %268, %267
  store i64 %269, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 19), align 8
  %270 = load i32, i32* %16, align 4
  %271 = zext i32 %270 to i64
  %272 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 20), align 8
  %273 = add i64 %272, %271
  store i64 %273, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 20), align 8
  %274 = load i32, i32* %18, align 4
  %275 = zext i32 %274 to i64
  %276 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 21), align 8
  %277 = add i64 %276, %275
  store i64 %277, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 21), align 8
  call void @STATS_UNLOCK()
  br label %278

278:                                              ; preds = %265
  %279 = load %struct._logger*, %struct._logger** %9, align 8
  store %struct._logger* %279, %struct._logger** %28, align 8
  %280 = load %struct._logger*, %struct._logger** %9, align 8
  %281 = icmp eq %struct._logger* %280, null
  br i1 %281, label %282, label %286

282:                                              ; preds = %278
  %283 = load i32, i32* @logger_key, align 4
  %284 = call i8* @pthread_getspecific(i32 %283) #14
  %285 = bitcast i8* %284 to %struct._logger*
  store %struct._logger* %285, %struct._logger** %28, align 8
  br label %286

286:                                              ; preds = %282, %278
  %287 = load %struct._logger*, %struct._logger** %28, align 8
  %288 = getelementptr inbounds %struct._logger, %struct._logger* %287, i32 0, i32 8
  %289 = load i16, i16* %288, align 4
  %290 = zext i16 %289 to i32
  %291 = and i32 %290, 2
  %292 = icmp ne i32 %291, 0
  br i1 %292, label %293, label %301

293:                                              ; preds = %286
  %294 = load %struct._logger*, %struct._logger** %28, align 8
  %295 = load i32, i32* %12, align 4
  %296 = load i64, i64* %15, align 8
  %297 = load i32, i32* %16, align 4
  %298 = load i32, i32* %17, align 4
  %299 = load i32, i32* %18, align 4
  %300 = call i32 (%struct._logger*, i32, i8*, ...) @logger_log(%struct._logger* %294, i32 12, i8* null, i32 %295, i64 %296, i32 %297, i32 %298, i32 %299)
  br label %301

301:                                              ; preds = %293, %286
  br label %302

302:                                              ; preds = %301
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.extstore_conf_file* @storage_conf_parse(i8* %0, i32 %1) #0 {
  %3 = alloca %struct.extstore_conf_file*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.extstore_conf_file*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8, align 1
  %10 = alloca i64, align 8
  %11 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  store i32 %1, i32* %5, align 4
  store %struct.extstore_conf_file* null, %struct.extstore_conf_file** %6, align 8
  store i8* null, i8** %7, align 8
  %12 = load i8*, i8** %4, align 8
  %13 = call i8* @strtok_r(i8* %12, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29.1280, i64 0, i64 0), i8** %7) #14
  store i8* %13, i8** %8, align 8
  store i8 0, i8* %9, align 1
  store i64 0, i64* %10, align 8
  store i32 0, i32* %11, align 4
  %14 = load i8*, i8** %8, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %16, label %17

16:                                               ; preds = %2
  br label %121

17:                                               ; preds = %2
  %18 = call noalias i8* @calloc(i64 1, i64 48) #14
  %19 = bitcast i8* %18 to %struct.extstore_conf_file*
  store %struct.extstore_conf_file* %19, %struct.extstore_conf_file** %6, align 8
  %20 = load i8*, i8** %8, align 8
  %21 = call noalias i8* @strdup(i8* %20) #14
  %22 = load %struct.extstore_conf_file*, %struct.extstore_conf_file** %6, align 8
  %23 = getelementptr inbounds %struct.extstore_conf_file, %struct.extstore_conf_file* %22, i32 0, i32 1
  store i8* %21, i8** %23, align 8
  %24 = call i8* @strtok_r(i8* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29.1280, i64 0, i64 0), i8** %7) #14
  store i8* %24, i8** %8, align 8
  %25 = load i8*, i8** %8, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %27, label %30

27:                                               ; preds = %17
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %29 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %28, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.30.1281, i64 0, i64 0))
  br label %121

30:                                               ; preds = %17
  %31 = load i8*, i8** %8, align 8
  %32 = load i8*, i8** %8, align 8
  %33 = call i64 @strlen(i8* %32) #16
  %34 = sub i64 %33, 1
  %35 = getelementptr inbounds i8, i8* %31, i64 %34
  %36 = load i8, i8* %35, align 1
  %37 = sext i8 %36 to i32
  %38 = call i32 @tolower(i32 %37) #16
  %39 = trunc i32 %38 to i8
  store i8 %39, i8* %9, align 1
  %40 = load i8*, i8** %8, align 8
  %41 = load i8*, i8** %8, align 8
  %42 = call i64 @strlen(i8* %41) #16
  %43 = sub i64 %42, 1
  %44 = getelementptr inbounds i8, i8* %40, i64 %43
  store i8 0, i8* %44, align 1
  %45 = load i8, i8* %9, align 1
  %46 = sext i8 %45 to i32
  switch i32 %46, label %55 [
    i32 109, label %47
    i32 103, label %48
    i32 116, label %49
    i32 112, label %52
  ]

47:                                               ; preds = %30
  store i64 1048576, i64* %10, align 8
  br label %55

48:                                               ; preds = %30
  store i64 1073741824, i64* %10, align 8
  br label %55

49:                                               ; preds = %30
  store i64 1048576, i64* %10, align 8
  %50 = load i64, i64* %10, align 8
  %51 = mul i64 %50, 1048576
  store i64 %51, i64* %10, align 8
  br label %55

52:                                               ; preds = %30
  store i64 1048576, i64* %10, align 8
  %53 = load i64, i64* %10, align 8
  %54 = mul i64 %53, 1073741824
  store i64 %54, i64* %10, align 8
  br label %55

55:                                               ; preds = %30, %52, %49, %48, %47
  %56 = load i8*, i8** %8, align 8
  %57 = call i32 @atoi(i8* %56) #16
  store i32 %57, i32* %11, align 4
  %58 = load i32, i32* %11, align 4
  %59 = sext i32 %58 to i64
  %60 = load i64, i64* %10, align 8
  %61 = mul i64 %60, %59
  store i64 %61, i64* %10, align 8
  %62 = load i64, i64* %10, align 8
  %63 = load i32, i32* %5, align 4
  %64 = zext i32 %63 to i64
  %65 = udiv i64 %62, %64
  %66 = trunc i64 %65 to i32
  %67 = load %struct.extstore_conf_file*, %struct.extstore_conf_file** %6, align 8
  %68 = getelementptr inbounds %struct.extstore_conf_file, %struct.extstore_conf_file* %67, i32 0, i32 0
  store i32 %66, i32* %68, align 8
  %69 = call i8* @strtok_r(i8* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31.1282, i64 0, i64 0), i8** %7) #14
  store i8* %69, i8** %8, align 8
  %70 = load i8*, i8** %8, align 8
  %71 = icmp ne i8* %70, null
  br i1 %71, label %72, label %108

72:                                               ; preds = %55
  %73 = load i8*, i8** %8, align 8
  %74 = call i32 @strcmp(i8* %73, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.32.1283, i64 0, i64 0)) #16
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %79

76:                                               ; preds = %72
  %77 = load %struct.extstore_conf_file*, %struct.extstore_conf_file** %6, align 8
  %78 = getelementptr inbounds %struct.extstore_conf_file, %struct.extstore_conf_file* %77, i32 0, i32 5
  store i32 1, i32* %78, align 4
  br label %107

79:                                               ; preds = %72
  %80 = load i8*, i8** %8, align 8
  %81 = call i32 @strcmp(i8* %80, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33.1284, i64 0, i64 0)) #16
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %79
  %84 = load %struct.extstore_conf_file*, %struct.extstore_conf_file** %6, align 8
  %85 = getelementptr inbounds %struct.extstore_conf_file, %struct.extstore_conf_file* %84, i32 0, i32 5
  store i32 3, i32* %85, align 4
  br label %106

86:                                               ; preds = %79
  %87 = load i8*, i8** %8, align 8
  %88 = call i32 @strcmp(i8* %87, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.34.1285, i64 0, i64 0)) #16
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %93

90:                                               ; preds = %86
  %91 = load %struct.extstore_conf_file*, %struct.extstore_conf_file** %6, align 8
  %92 = getelementptr inbounds %struct.extstore_conf_file, %struct.extstore_conf_file* %91, i32 0, i32 5
  store i32 2, i32* %92, align 4
  br label %105

93:                                               ; preds = %86
  %94 = load i8*, i8** %8, align 8
  %95 = call i32 @strcmp(i8* %94, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.35.1286, i64 0, i64 0)) #16
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %100

97:                                               ; preds = %93
  %98 = load %struct.extstore_conf_file*, %struct.extstore_conf_file** %6, align 8
  %99 = getelementptr inbounds %struct.extstore_conf_file, %struct.extstore_conf_file* %98, i32 0, i32 5
  store i32 0, i32* %99, align 4
  br label %104

100:                                              ; preds = %93
  %101 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %102 = load i8*, i8** %8, align 8
  %103 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %101, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.36.1287, i64 0, i64 0), i8* %102)
  br label %121

104:                                              ; preds = %97
  br label %105

105:                                              ; preds = %104, %90
  br label %106

106:                                              ; preds = %105, %83
  br label %107

107:                                              ; preds = %106, %76
  br label %111

108:                                              ; preds = %55
  %109 = load %struct.extstore_conf_file*, %struct.extstore_conf_file** %6, align 8
  %110 = getelementptr inbounds %struct.extstore_conf_file, %struct.extstore_conf_file* %109, i32 0, i32 5
  store i32 0, i32* %110, align 4
  br label %111

111:                                              ; preds = %108, %107
  %112 = load %struct.extstore_conf_file*, %struct.extstore_conf_file** %6, align 8
  %113 = getelementptr inbounds %struct.extstore_conf_file, %struct.extstore_conf_file* %112, i32 0, i32 5
  %114 = load i32, i32* %113, align 4
  %115 = icmp ne i32 %114, 0
  br i1 %115, label %116, label %119

116:                                              ; preds = %111
  %117 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %118 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %117, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.37.1288, i64 0, i64 0))
  br label %121

119:                                              ; preds = %111
  %120 = load %struct.extstore_conf_file*, %struct.extstore_conf_file** %6, align 8
  store %struct.extstore_conf_file* %120, %struct.extstore_conf_file** %3, align 8
  br label %137

121:                                              ; preds = %116, %100, %27, %16
  %122 = load %struct.extstore_conf_file*, %struct.extstore_conf_file** %6, align 8
  %123 = icmp ne %struct.extstore_conf_file* %122, null
  br i1 %123, label %124, label %136

124:                                              ; preds = %121
  %125 = load %struct.extstore_conf_file*, %struct.extstore_conf_file** %6, align 8
  %126 = getelementptr inbounds %struct.extstore_conf_file, %struct.extstore_conf_file* %125, i32 0, i32 1
  %127 = load i8*, i8** %126, align 8
  %128 = icmp ne i8* %127, null
  br i1 %128, label %129, label %133

129:                                              ; preds = %124
  %130 = load %struct.extstore_conf_file*, %struct.extstore_conf_file** %6, align 8
  %131 = getelementptr inbounds %struct.extstore_conf_file, %struct.extstore_conf_file* %130, i32 0, i32 1
  %132 = load i8*, i8** %131, align 8
  call void @free(i8* %132) #14
  br label %133

133:                                              ; preds = %129, %124
  %134 = load %struct.extstore_conf_file*, %struct.extstore_conf_file** %6, align 8
  %135 = bitcast %struct.extstore_conf_file* %134 to i8*
  call void @free(i8* %135) #14
  br label %136

136:                                              ; preds = %133, %121
  store %struct.extstore_conf_file* null, %struct.extstore_conf_file** %3, align 8
  br label %137

137:                                              ; preds = %136, %119
  %138 = load %struct.extstore_conf_file*, %struct.extstore_conf_file** %3, align 8
  ret %struct.extstore_conf_file* %138
}

; Function Attrs: nounwind readonly willreturn
declare dso_local i32 @tolower(i32) #6

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @storage_init_config(%struct.settings* %0) #0 {
  %2 = alloca %struct.settings*, align 8
  %3 = alloca %struct.storage_settings*, align 8
  store %struct.settings* %0, %struct.settings** %2, align 8
  %4 = call noalias i8* @calloc(i64 1, i64 40) #14
  %5 = bitcast i8* %4 to %struct.storage_settings*
  store %struct.storage_settings* %5, %struct.storage_settings** %3, align 8
  %6 = load %struct.settings*, %struct.settings** %2, align 8
  %7 = getelementptr inbounds %struct.settings, %struct.settings* %6, i32 0, i32 60
  store i32 512, i32* %7, align 8
  %8 = load %struct.settings*, %struct.settings** %2, align 8
  %9 = getelementptr inbounds %struct.settings, %struct.settings* %8, i32 0, i32 61
  store i32 -1, i32* %9, align 4
  %10 = load %struct.settings*, %struct.settings** %2, align 8
  %11 = getelementptr inbounds %struct.settings, %struct.settings* %10, i32 0, i32 62
  store i32 0, i32* %11, align 8
  %12 = load %struct.settings*, %struct.settings** %2, align 8
  %13 = getelementptr inbounds %struct.settings, %struct.settings* %12, i32 0, i32 63
  store i32 2000, i32* %13, align 4
  %14 = load %struct.settings*, %struct.settings** %2, align 8
  %15 = getelementptr inbounds %struct.settings, %struct.settings* %14, i32 0, i32 68
  store double 8.000000e-01, double* %15, align 8
  %16 = load %struct.settings*, %struct.settings** %2, align 8
  %17 = getelementptr inbounds %struct.settings, %struct.settings* %16, i32 0, i32 70
  store i8 0, i8* %17, align 8
  %18 = load %struct.settings*, %struct.settings** %2, align 8
  %19 = getelementptr inbounds %struct.settings, %struct.settings* %18, i32 0, i32 64
  store i32 4194304, i32* %19, align 8
  %20 = load %struct.settings*, %struct.settings** %2, align 8
  %21 = getelementptr inbounds %struct.settings, %struct.settings* %20, i32 0, i32 65
  store i32 0, i32* %21, align 4
  %22 = load %struct.settings*, %struct.settings** %2, align 8
  %23 = getelementptr inbounds %struct.settings, %struct.settings* %22, i32 0, i32 66
  store i32 0, i32* %23, align 8
  %24 = load %struct.settings*, %struct.settings** %2, align 8
  %25 = getelementptr inbounds %struct.settings, %struct.settings* %24, i32 0, i32 67
  store i32 1000000, i32* %25, align 4
  %26 = load %struct.settings*, %struct.settings** %2, align 8
  %27 = getelementptr inbounds %struct.settings, %struct.settings* %26, i32 0, i32 69
  store double 1.000000e-02, double* %27, align 8
  %28 = load %struct.settings*, %struct.settings** %2, align 8
  %29 = getelementptr inbounds %struct.settings, %struct.settings* %28, i32 0, i32 59
  store i32 67108864, i32* %29, align 4
  %30 = load %struct.settings*, %struct.settings** %2, align 8
  %31 = getelementptr inbounds %struct.settings, %struct.settings* %30, i32 0, i32 58
  store i32 1, i32* %31, align 8
  %32 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 59), align 4
  %33 = load %struct.storage_settings*, %struct.storage_settings** %3, align 8
  %34 = getelementptr inbounds %struct.storage_settings, %struct.storage_settings* %33, i32 0, i32 1
  %35 = getelementptr inbounds %struct.extstore_conf, %struct.extstore_conf* %34, i32 0, i32 0
  store i32 %32, i32* %35, align 8
  %36 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 64), align 8
  %37 = load %struct.storage_settings*, %struct.storage_settings** %3, align 8
  %38 = getelementptr inbounds %struct.storage_settings, %struct.storage_settings* %37, i32 0, i32 1
  %39 = getelementptr inbounds %struct.extstore_conf, %struct.extstore_conf* %38, i32 0, i32 4
  store i32 %36, i32* %39, align 8
  %40 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 58), align 8
  %41 = load %struct.storage_settings*, %struct.storage_settings** %3, align 8
  %42 = getelementptr inbounds %struct.storage_settings, %struct.storage_settings* %41, i32 0, i32 1
  %43 = getelementptr inbounds %struct.extstore_conf, %struct.extstore_conf* %42, i32 0, i32 6
  store i32 %40, i32* %43, align 8
  %44 = load %struct.storage_settings*, %struct.storage_settings** %3, align 8
  %45 = getelementptr inbounds %struct.storage_settings, %struct.storage_settings* %44, i32 0, i32 1
  %46 = getelementptr inbounds %struct.extstore_conf, %struct.extstore_conf* %45, i32 0, i32 7
  store i32 1, i32* %46, align 4
  %47 = load %struct.storage_settings*, %struct.storage_settings** %3, align 8
  %48 = getelementptr inbounds %struct.storage_settings, %struct.storage_settings* %47, i32 0, i32 1
  %49 = getelementptr inbounds %struct.extstore_conf, %struct.extstore_conf* %48, i32 0, i32 2
  store i32 4, i32* %49, align 8
  %50 = load %struct.storage_settings*, %struct.storage_settings** %3, align 8
  %51 = getelementptr inbounds %struct.storage_settings, %struct.storage_settings* %50, i32 0, i32 1
  %52 = getelementptr inbounds %struct.extstore_conf, %struct.extstore_conf* %51, i32 0, i32 2
  %53 = load i32, i32* %52, align 8
  %54 = load %struct.storage_settings*, %struct.storage_settings** %3, align 8
  %55 = getelementptr inbounds %struct.storage_settings, %struct.storage_settings* %54, i32 0, i32 1
  %56 = getelementptr inbounds %struct.extstore_conf, %struct.extstore_conf* %55, i32 0, i32 5
  store i32 %53, i32* %56, align 4
  %57 = load %struct.storage_settings*, %struct.storage_settings** %3, align 8
  %58 = bitcast %struct.storage_settings* %57 to i8*
  ret i8* %58
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @storage_read_config(i8* %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i8**, align 8
  %6 = alloca %struct.storage_settings*, align 8
  %7 = alloca %struct.extstore_conf*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca [16 x i8*], align 16
  %10 = alloca %struct.extstore_conf_file*, align 8
  store i8* %0, i8** %4, align 8
  store i8** %1, i8*** %5, align 8
  %11 = load i8*, i8** %4, align 8
  %12 = bitcast i8* %11 to %struct.storage_settings*
  store %struct.storage_settings* %12, %struct.storage_settings** %6, align 8
  %13 = load %struct.storage_settings*, %struct.storage_settings** %6, align 8
  %14 = getelementptr inbounds %struct.storage_settings, %struct.storage_settings* %13, i32 0, i32 1
  store %struct.extstore_conf* %14, %struct.extstore_conf** %7, align 8
  %15 = bitcast [16 x i8*]* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %15, i8* align 16 bitcast ([16 x i8*]* @__const.storage_read_config.subopts_tokens to i8*), i64 128, i1 false)
  %16 = load i8**, i8*** %5, align 8
  %17 = getelementptr inbounds [16 x i8*], [16 x i8*]* %9, i64 0, i64 0
  %18 = call i32 @getsubopt(i8** %16, i8** %17, i8** %8) #14
  switch i32 %18, label %249 [
    i32 0, label %19
    i32 1, label %46
    i32 2, label %68
    i32 3, label %83
    i32 5, label %98
    i32 6, label %111
    i32 7, label %124
    i32 8, label %137
    i32 9, label %150
    i32 10, label %163
    i32 11, label %176
    i32 12, label %189
    i32 14, label %202
    i32 13, label %215
    i32 4, label %216
  ]

19:                                               ; preds = %2
  %20 = load %struct.storage_settings*, %struct.storage_settings** %6, align 8
  %21 = getelementptr inbounds %struct.storage_settings, %struct.storage_settings* %20, i32 0, i32 0
  %22 = load %struct.extstore_conf_file*, %struct.extstore_conf_file** %21, align 8
  %23 = icmp ne %struct.extstore_conf_file* %22, null
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %26 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %25, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.53.1293, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %254

27:                                               ; preds = %19
  %28 = load i8*, i8** %8, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %32 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %31, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.54.1294, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %254

33:                                               ; preds = %27
  %34 = load i8*, i8** %8, align 8
  %35 = load %struct.extstore_conf*, %struct.extstore_conf** %7, align 8
  %36 = getelementptr inbounds %struct.extstore_conf, %struct.extstore_conf* %35, i32 0, i32 0
  %37 = call zeroext i1 @safe_strtoul(i8* %34, i32* %36)
  br i1 %37, label %41, label %38

38:                                               ; preds = %33
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %40 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %39, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.55.1295, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %254

41:                                               ; preds = %33
  %42 = load %struct.extstore_conf*, %struct.extstore_conf** %7, align 8
  %43 = getelementptr inbounds %struct.extstore_conf, %struct.extstore_conf* %42, i32 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = mul i32 %44, 1048576
  store i32 %45, i32* %43, align 4
  br label %253

46:                                               ; preds = %2
  %47 = load i8*, i8** %8, align 8
  %48 = icmp eq i8* %47, null
  br i1 %48, label %49, label %52

49:                                               ; preds = %46
  %50 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %51 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %50, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.56.1296, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %254

52:                                               ; preds = %46
  %53 = load i8*, i8** %8, align 8
  %54 = load %struct.extstore_conf*, %struct.extstore_conf** %7, align 8
  %55 = getelementptr inbounds %struct.extstore_conf, %struct.extstore_conf* %54, i32 0, i32 4
  %56 = call zeroext i1 @safe_strtoul(i8* %53, i32* %55)
  br i1 %56, label %60, label %57

57:                                               ; preds = %52
  %58 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %59 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %58, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.57.1297, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %254

60:                                               ; preds = %52
  %61 = load %struct.extstore_conf*, %struct.extstore_conf** %7, align 8
  %62 = getelementptr inbounds %struct.extstore_conf, %struct.extstore_conf* %61, i32 0, i32 4
  %63 = load i32, i32* %62, align 4
  %64 = mul i32 %63, 1048576
  store i32 %64, i32* %62, align 4
  %65 = load %struct.extstore_conf*, %struct.extstore_conf** %7, align 8
  %66 = getelementptr inbounds %struct.extstore_conf, %struct.extstore_conf* %65, i32 0, i32 4
  %67 = load i32, i32* %66, align 4
  store i32 %67, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 64), align 8
  br label %253

68:                                               ; preds = %2
  %69 = load i8*, i8** %8, align 8
  %70 = icmp eq i8* %69, null
  br i1 %70, label %71, label %74

71:                                               ; preds = %68
  %72 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %73 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %72, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.58.1298, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %254

74:                                               ; preds = %68
  %75 = load i8*, i8** %8, align 8
  %76 = load %struct.extstore_conf*, %struct.extstore_conf** %7, align 8
  %77 = getelementptr inbounds %struct.extstore_conf, %struct.extstore_conf* %76, i32 0, i32 6
  %78 = call zeroext i1 @safe_strtoul(i8* %75, i32* %77)
  br i1 %78, label %82, label %79

79:                                               ; preds = %74
  %80 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %81 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %80, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.59.1299, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %254

82:                                               ; preds = %74
  br label %253

83:                                               ; preds = %2
  %84 = load i8*, i8** %8, align 8
  %85 = icmp eq i8* %84, null
  br i1 %85, label %86, label %89

86:                                               ; preds = %83
  %87 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %88 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %87, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.60.1300, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %254

89:                                               ; preds = %83
  %90 = load i8*, i8** %8, align 8
  %91 = load %struct.extstore_conf*, %struct.extstore_conf** %7, align 8
  %92 = getelementptr inbounds %struct.extstore_conf, %struct.extstore_conf* %91, i32 0, i32 7
  %93 = call zeroext i1 @safe_strtoul(i8* %90, i32* %92)
  br i1 %93, label %97, label %94

94:                                               ; preds = %89
  %95 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %96 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %95, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.61.1301, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %254

97:                                               ; preds = %89
  br label %253

98:                                               ; preds = %2
  %99 = load i8*, i8** %8, align 8
  %100 = icmp eq i8* %99, null
  br i1 %100, label %101, label %104

101:                                              ; preds = %98
  %102 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %103 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %102, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.62.1302, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %254

104:                                              ; preds = %98
  %105 = load i8*, i8** %8, align 8
  %106 = call zeroext i1 @safe_strtoul(i8* %105, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 60))
  br i1 %106, label %110, label %107

107:                                              ; preds = %104
  %108 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %109 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %108, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.63.1303, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %254

110:                                              ; preds = %104
  br label %253

111:                                              ; preds = %2
  %112 = load i8*, i8** %8, align 8
  %113 = icmp eq i8* %112, null
  br i1 %113, label %114, label %117

114:                                              ; preds = %111
  %115 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %116 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %115, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.64.1304, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %254

117:                                              ; preds = %111
  %118 = load i8*, i8** %8, align 8
  %119 = call zeroext i1 @safe_strtoul(i8* %118, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 61))
  br i1 %119, label %123, label %120

120:                                              ; preds = %117
  %121 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %122 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %121, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.65.1305, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %254

123:                                              ; preds = %117
  br label %253

124:                                              ; preds = %2
  %125 = load i8*, i8** %8, align 8
  %126 = icmp eq i8* %125, null
  br i1 %126, label %127, label %130

127:                                              ; preds = %124
  %128 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %129 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %128, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.66.1306, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %254

130:                                              ; preds = %124
  %131 = load i8*, i8** %8, align 8
  %132 = call zeroext i1 @safe_strtoul(i8* %131, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 62))
  br i1 %132, label %136, label %133

133:                                              ; preds = %130
  %134 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %135 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %134, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.67.1307, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %254

136:                                              ; preds = %130
  br label %253

137:                                              ; preds = %2
  %138 = load i8*, i8** %8, align 8
  %139 = icmp eq i8* %138, null
  br i1 %139, label %140, label %143

140:                                              ; preds = %137
  %141 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %142 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %141, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.68.1308, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %254

143:                                              ; preds = %137
  %144 = load i8*, i8** %8, align 8
  %145 = call zeroext i1 @safe_strtoul(i8* %144, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 63))
  br i1 %145, label %149, label %146

146:                                              ; preds = %143
  %147 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %148 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %147, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.69.1309, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %254

149:                                              ; preds = %143
  br label %253

150:                                              ; preds = %2
  %151 = load i8*, i8** %8, align 8
  %152 = icmp eq i8* %151, null
  br i1 %152, label %153, label %156

153:                                              ; preds = %150
  %154 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %155 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %154, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.70.1310, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %254

156:                                              ; preds = %150
  %157 = load i8*, i8** %8, align 8
  %158 = call zeroext i1 @safe_strtoul(i8* %157, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 65))
  br i1 %158, label %162, label %159

159:                                              ; preds = %156
  %160 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %161 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %160, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.71.1311, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %254

162:                                              ; preds = %156
  br label %253

163:                                              ; preds = %2
  %164 = load i8*, i8** %8, align 8
  %165 = icmp eq i8* %164, null
  br i1 %165, label %166, label %169

166:                                              ; preds = %163
  %167 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %168 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %167, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.72.1312, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %254

169:                                              ; preds = %163
  %170 = load i8*, i8** %8, align 8
  %171 = call zeroext i1 @safe_strtoul(i8* %170, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 66))
  br i1 %171, label %175, label %172

172:                                              ; preds = %169
  %173 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %174 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %173, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.73.1313, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %254

175:                                              ; preds = %169
  br label %253

176:                                              ; preds = %2
  %177 = load i8*, i8** %8, align 8
  %178 = icmp eq i8* %177, null
  br i1 %178, label %179, label %182

179:                                              ; preds = %176
  %180 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %181 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %180, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.74.1314, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %254

182:                                              ; preds = %176
  %183 = load i8*, i8** %8, align 8
  %184 = call zeroext i1 @safe_strtoul(i8* %183, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 67))
  br i1 %184, label %188, label %185

185:                                              ; preds = %182
  %186 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %187 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %186, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.75.1315, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %254

188:                                              ; preds = %182
  br label %253

189:                                              ; preds = %2
  %190 = load i8*, i8** %8, align 8
  %191 = icmp eq i8* %190, null
  br i1 %191, label %192, label %195

192:                                              ; preds = %189
  %193 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %194 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %193, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.76.1316, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %254

195:                                              ; preds = %189
  %196 = load i8*, i8** %8, align 8
  %197 = call zeroext i1 @safe_strtod(i8* %196, double* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 68))
  br i1 %197, label %201, label %198

198:                                              ; preds = %195
  %199 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %200 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %199, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.77.1317, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %254

201:                                              ; preds = %195
  br label %253

202:                                              ; preds = %2
  %203 = load i8*, i8** %8, align 8
  %204 = icmp eq i8* %203, null
  br i1 %204, label %205, label %208

205:                                              ; preds = %202
  %206 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %207 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %206, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.78.1318, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %254

208:                                              ; preds = %202
  %209 = load i8*, i8** %8, align 8
  %210 = call zeroext i1 @safe_strtod(i8* %209, double* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 69))
  br i1 %210, label %214, label %211

211:                                              ; preds = %208
  %212 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %213 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %212, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.79.1319, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %254

214:                                              ; preds = %208
  br label %253

215:                                              ; preds = %2
  store i8 1, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 70), align 8
  br label %253

216:                                              ; preds = %2
  %217 = load i8*, i8** %8, align 8
  %218 = icmp ne i8* %217, null
  br i1 %218, label %219, label %245

219:                                              ; preds = %216
  %220 = load i8*, i8** %8, align 8
  %221 = load %struct.extstore_conf*, %struct.extstore_conf** %7, align 8
  %222 = getelementptr inbounds %struct.extstore_conf, %struct.extstore_conf* %221, i32 0, i32 0
  %223 = load i32, i32* %222, align 4
  %224 = call %struct.extstore_conf_file* @storage_conf_parse(i8* %220, i32 %223)
  store %struct.extstore_conf_file* %224, %struct.extstore_conf_file** %10, align 8
  %225 = load %struct.extstore_conf_file*, %struct.extstore_conf_file** %10, align 8
  %226 = icmp eq %struct.extstore_conf_file* %225, null
  br i1 %226, label %227, label %230

227:                                              ; preds = %219
  %228 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %229 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %228, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.80.1320, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %254

230:                                              ; preds = %219
  %231 = load %struct.storage_settings*, %struct.storage_settings** %6, align 8
  %232 = getelementptr inbounds %struct.storage_settings, %struct.storage_settings* %231, i32 0, i32 0
  %233 = load %struct.extstore_conf_file*, %struct.extstore_conf_file** %232, align 8
  %234 = icmp ne %struct.extstore_conf_file* %233, null
  br i1 %234, label %235, label %241

235:                                              ; preds = %230
  %236 = load %struct.storage_settings*, %struct.storage_settings** %6, align 8
  %237 = getelementptr inbounds %struct.storage_settings, %struct.storage_settings* %236, i32 0, i32 0
  %238 = load %struct.extstore_conf_file*, %struct.extstore_conf_file** %237, align 8
  %239 = load %struct.extstore_conf_file*, %struct.extstore_conf_file** %10, align 8
  %240 = getelementptr inbounds %struct.extstore_conf_file, %struct.extstore_conf_file* %239, i32 0, i32 6
  store %struct.extstore_conf_file* %238, %struct.extstore_conf_file** %240, align 8
  br label %241

241:                                              ; preds = %235, %230
  %242 = load %struct.extstore_conf_file*, %struct.extstore_conf_file** %10, align 8
  %243 = load %struct.storage_settings*, %struct.storage_settings** %6, align 8
  %244 = getelementptr inbounds %struct.storage_settings, %struct.storage_settings* %243, i32 0, i32 0
  store %struct.extstore_conf_file* %242, %struct.extstore_conf_file** %244, align 8
  br label %248

245:                                              ; preds = %216
  %246 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %247 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %246, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.81.1321, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %254

248:                                              ; preds = %241
  br label %253

249:                                              ; preds = %2
  %250 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %251 = load i8*, i8** %8, align 8
  %252 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %250, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.82.1322, i64 0, i64 0), i8* %251)
  store i32 1, i32* %3, align 4
  br label %254

253:                                              ; preds = %248, %215, %214, %201, %188, %175, %162, %149, %136, %123, %110, %97, %82, %60, %41
  store i32 0, i32* %3, align 4
  br label %254

254:                                              ; preds = %253, %249, %245, %227, %211, %205, %198, %192, %185, %179, %172, %166, %159, %153, %146, %140, %133, %127, %120, %114, %107, %101, %94, %86, %79, %71, %57, %49, %38, %30, %24
  %255 = load i32, i32* %3, align 4
  ret i32 %255
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @storage_check_config(i8* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  %4 = alloca %struct.storage_settings*, align 8
  %5 = alloca %struct.extstore_conf*, align 8
  store i8* %0, i8** %3, align 8
  %6 = load i8*, i8** %3, align 8
  %7 = bitcast i8* %6 to %struct.storage_settings*
  store %struct.storage_settings* %7, %struct.storage_settings** %4, align 8
  %8 = load %struct.storage_settings*, %struct.storage_settings** %4, align 8
  %9 = getelementptr inbounds %struct.storage_settings, %struct.storage_settings* %8, i32 0, i32 1
  store %struct.extstore_conf* %9, %struct.extstore_conf** %5, align 8
  %10 = load %struct.storage_settings*, %struct.storage_settings** %4, align 8
  %11 = getelementptr inbounds %struct.storage_settings, %struct.storage_settings* %10, i32 0, i32 0
  %12 = load %struct.extstore_conf_file*, %struct.extstore_conf_file** %11, align 8
  %13 = icmp ne %struct.extstore_conf_file* %12, null
  br i1 %13, label %14, label %34

14:                                               ; preds = %1
  %15 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 22), align 4
  %16 = load %struct.extstore_conf*, %struct.extstore_conf** %5, align 8
  %17 = getelementptr inbounds %struct.extstore_conf, %struct.extstore_conf* %16, i32 0, i32 4
  %18 = load i32, i32* %17, align 4
  %19 = icmp ugt i32 %15, %18
  br i1 %19, label %20, label %27

20:                                               ; preds = %14
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %22 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 22), align 4
  %23 = load %struct.extstore_conf*, %struct.extstore_conf** %5, align 8
  %24 = getelementptr inbounds %struct.extstore_conf, %struct.extstore_conf* %23, i32 0, i32 4
  %25 = load i32, i32* %24, align 4
  %26 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %21, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.83.1340, i64 0, i64 0), i32 %22, i32 %25)
  store i32 1, i32* %2, align 4
  br label %35

27:                                               ; preds = %14
  %28 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 3), align 8
  %29 = icmp ne i32 %28, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %32 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %31, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.84.1341, i64 0, i64 0))
  store i32 1, i32* %2, align 4
  br label %35

33:                                               ; preds = %27
  store i32 0, i32* %2, align 4
  br label %35

34:                                               ; preds = %1
  store i32 2, i32* %2, align 4
  br label %35

35:                                               ; preds = %34, %33, %30, %20
  %36 = load i32, i32* %2, align 4
  ret i32 %36
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @storage_init(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca %struct.storage_settings*, align 8
  %5 = alloca %struct.extstore_conf*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  %9 = load i8*, i8** %3, align 8
  %10 = bitcast i8* %9 to %struct.storage_settings*
  store %struct.storage_settings* %10, %struct.storage_settings** %4, align 8
  %11 = load %struct.storage_settings*, %struct.storage_settings** %4, align 8
  %12 = getelementptr inbounds %struct.storage_settings, %struct.storage_settings* %11, i32 0, i32 1
  store %struct.extstore_conf* %12, %struct.extstore_conf** %5, align 8
  store i8* null, i8** %7, align 8
  %13 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 65), align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %28

15:                                               ; preds = %1
  %16 = load %struct.storage_settings*, %struct.storage_settings** %4, align 8
  %17 = getelementptr inbounds %struct.storage_settings, %struct.storage_settings* %16, i32 0, i32 0
  %18 = load %struct.extstore_conf_file*, %struct.extstore_conf_file** %17, align 8
  %19 = getelementptr inbounds %struct.extstore_conf_file, %struct.extstore_conf_file* %18, i32 0, i32 0
  %20 = load i32, i32* %19, align 8
  %21 = udiv i32 %20, 4
  store i32 %21, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 65), align 4
  %22 = load %struct.storage_settings*, %struct.storage_settings** %4, align 8
  %23 = getelementptr inbounds %struct.storage_settings, %struct.storage_settings* %22, i32 0, i32 0
  %24 = load %struct.extstore_conf_file*, %struct.extstore_conf_file** %23, align 8
  %25 = getelementptr inbounds %struct.extstore_conf_file, %struct.extstore_conf_file* %24, i32 0, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = udiv i32 %26, 4
  store i32 %27, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 66), align 8
  br label %28

28:                                               ; preds = %15, %1
  call void @crc32c_init()
  store i32 0, i32* %8, align 4
  br label %29

29:                                               ; preds = %36, %28
  %30 = load i32, i32* %8, align 4
  %31 = icmp slt i32 %30, 64
  br i1 %31, label %32, label %39

32:                                               ; preds = %29
  %33 = load i32, i32* %8, align 4
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 71), i64 0, i64 %34
  store i32 0, i32* %35, align 4
  br label %36

36:                                               ; preds = %32
  %37 = load i32, i32* %8, align 4
  %38 = add nsw i32 %37, 1
  store i32 %38, i32* %8, align 4
  br label %29, !llvm.loop !231

39:                                               ; preds = %29
  %40 = load %struct.storage_settings*, %struct.storage_settings** %4, align 8
  %41 = getelementptr inbounds %struct.storage_settings, %struct.storage_settings* %40, i32 0, i32 0
  %42 = load %struct.extstore_conf_file*, %struct.extstore_conf_file** %41, align 8
  %43 = load %struct.extstore_conf*, %struct.extstore_conf** %5, align 8
  %44 = call i8* @extstore_init(%struct.extstore_conf_file* %42, %struct.extstore_conf* %43, i32* %6)
  store i8* %44, i8** %7, align 8
  %45 = load i8*, i8** %7, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %47, label %56

47:                                               ; preds = %39
  %48 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %49 = load i32, i32* %6, align 4
  %50 = call i8* @extstore_err(i32 %49)
  %51 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %48, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.85.1344, i64 0, i64 0), i8* %50)
  %52 = load i32, i32* %6, align 4
  %53 = icmp eq i32 %52, 7
  br i1 %53, label %54, label %55

54:                                               ; preds = %47
  call void @perror(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.86.1345, i64 0, i64 0))
  br label %55

55:                                               ; preds = %54, %47
  store i8* null, i8** %2, align 8
  br label %58

56:                                               ; preds = %39
  %57 = load i8*, i8** %7, align 8
  store i8* %57, i8** %2, align 8
  br label %58

58:                                               ; preds = %56, %55
  %59 = load i8*, i8** %2, align 8
  ret i8* %59
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @slab_automove_extstore_init(%struct.settings* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.settings*, align 8
  %4 = alloca i32, align 4
  %5 = alloca double, align 8
  %6 = alloca %struct.slab_automove.433*, align 8
  store %struct.settings* %0, %struct.settings** %3, align 8
  %7 = load %struct.settings*, %struct.settings** %3, align 8
  %8 = getelementptr inbounds %struct.settings, %struct.settings* %7, i32 0, i32 34
  %9 = load i32, i32* %8, align 8
  store i32 %9, i32* %4, align 4
  %10 = load %struct.settings*, %struct.settings** %3, align 8
  %11 = getelementptr inbounds %struct.settings, %struct.settings* %10, i32 0, i32 33
  %12 = load double, double* %11, align 8
  store double %12, double* %5, align 8
  %13 = call noalias i8* @calloc(i64 1, i64 6464) #14
  %14 = bitcast i8* %13 to %struct.slab_automove.433*
  store %struct.slab_automove.433* %14, %struct.slab_automove.433** %6, align 8
  %15 = load %struct.slab_automove.433*, %struct.slab_automove.433** %6, align 8
  %16 = icmp eq %struct.slab_automove.433* %15, null
  br i1 %16, label %17, label %18

17:                                               ; preds = %1
  store i8* null, i8** %2, align 8
  br label %96

18:                                               ; preds = %1
  %19 = load i32, i32* %4, align 4
  %20 = mul i32 %19, 64
  %21 = zext i32 %20 to i64
  %22 = call noalias i8* @calloc(i64 %21, i64 32) #14
  %23 = bitcast i8* %22 to %struct.window_data.432*
  %24 = load %struct.slab_automove.433*, %struct.slab_automove.433** %6, align 8
  %25 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %24, i32 0, i32 0
  store %struct.window_data.432* %23, %struct.window_data.432** %25, align 8
  %26 = load i32, i32* %4, align 4
  %27 = zext i32 %26 to i64
  %28 = call noalias i8* @calloc(i64 %27, i64 8) #14
  %29 = bitcast i8* %28 to %struct.timezone*
  %30 = load %struct.slab_automove.433*, %struct.slab_automove.433** %6, align 8
  %31 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %30, i32 0, i32 1
  store %struct.timezone* %29, %struct.timezone** %31, align 8
  %32 = load i32, i32* %4, align 4
  %33 = load %struct.slab_automove.433*, %struct.slab_automove.433** %6, align 8
  %34 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %33, i32 0, i32 3
  store i32 %32, i32* %34, align 8
  %35 = load double, double* %5, align 8
  %36 = load %struct.slab_automove.433*, %struct.slab_automove.433** %6, align 8
  %37 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %36, i32 0, i32 7
  store double %35, double* %37, align 8
  %38 = load %struct.settings*, %struct.settings** %3, align 8
  %39 = getelementptr inbounds %struct.settings, %struct.settings* %38, i32 0, i32 69
  %40 = load double, double* %39, align 8
  %41 = load %struct.slab_automove.433*, %struct.slab_automove.433** %6, align 8
  %42 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %41, i32 0, i32 8
  store double %40, double* %42, align 8
  %43 = load %struct.settings*, %struct.settings** %3, align 8
  %44 = getelementptr inbounds %struct.settings, %struct.settings* %43, i32 0, i32 60
  %45 = load i32, i32* %44, align 8
  %46 = load %struct.slab_automove.433*, %struct.slab_automove.433** %6, align 8
  %47 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %46, i32 0, i32 5
  store i32 %45, i32* %47, align 8
  %48 = load %struct.slab_automove.433*, %struct.slab_automove.433** %6, align 8
  %49 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %48, i32 0, i32 6
  store i32 0, i32* %49, align 4
  %50 = load %struct.settings*, %struct.settings** %3, align 8
  %51 = load %struct.slab_automove.433*, %struct.slab_automove.433** %6, align 8
  %52 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %51, i32 0, i32 2
  store %struct.settings* %50, %struct.settings** %52, align 8
  %53 = load %struct.slab_automove.433*, %struct.slab_automove.433** %6, align 8
  %54 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %53, i32 0, i32 9
  store i8 0, i8* %54, align 8
  %55 = load %struct.slab_automove.433*, %struct.slab_automove.433** %6, align 8
  %56 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %55, i32 0, i32 0
  %57 = load %struct.window_data.432*, %struct.window_data.432** %56, align 8
  %58 = icmp eq %struct.window_data.432* %57, null
  br i1 %58, label %64, label %59

59:                                               ; preds = %18
  %60 = load %struct.slab_automove.433*, %struct.slab_automove.433** %6, align 8
  %61 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %60, i32 0, i32 1
  %62 = load %struct.timezone*, %struct.timezone** %61, align 8
  %63 = icmp eq %struct.timezone* %62, null
  br i1 %63, label %64, label %87

64:                                               ; preds = %59, %18
  %65 = load %struct.slab_automove.433*, %struct.slab_automove.433** %6, align 8
  %66 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %65, i32 0, i32 0
  %67 = load %struct.window_data.432*, %struct.window_data.432** %66, align 8
  %68 = icmp ne %struct.window_data.432* %67, null
  br i1 %68, label %69, label %74

69:                                               ; preds = %64
  %70 = load %struct.slab_automove.433*, %struct.slab_automove.433** %6, align 8
  %71 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %70, i32 0, i32 0
  %72 = load %struct.window_data.432*, %struct.window_data.432** %71, align 8
  %73 = bitcast %struct.window_data.432* %72 to i8*
  call void @free(i8* %73) #14
  br label %74

74:                                               ; preds = %69, %64
  %75 = load %struct.slab_automove.433*, %struct.slab_automove.433** %6, align 8
  %76 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %75, i32 0, i32 1
  %77 = load %struct.timezone*, %struct.timezone** %76, align 8
  %78 = icmp ne %struct.timezone* %77, null
  br i1 %78, label %79, label %84

79:                                               ; preds = %74
  %80 = load %struct.slab_automove.433*, %struct.slab_automove.433** %6, align 8
  %81 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %80, i32 0, i32 1
  %82 = load %struct.timezone*, %struct.timezone** %81, align 8
  %83 = bitcast %struct.timezone* %82 to i8*
  call void @free(i8* %83) #14
  br label %84

84:                                               ; preds = %79, %74
  %85 = load %struct.slab_automove.433*, %struct.slab_automove.433** %6, align 8
  %86 = bitcast %struct.slab_automove.433* %85 to i8*
  call void @free(i8* %86) #14
  store i8* null, i8** %2, align 8
  br label %96

87:                                               ; preds = %59
  %88 = load %struct.slab_automove.433*, %struct.slab_automove.433** %6, align 8
  %89 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %88, i32 0, i32 11
  %90 = getelementptr inbounds [64 x %struct.item_stats_automove], [64 x %struct.item_stats_automove]* %89, i64 0, i64 0
  call void @fill_item_stats_automove(%struct.item_stats_automove* %90)
  %91 = load %struct.slab_automove.433*, %struct.slab_automove.433** %6, align 8
  %92 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %91, i32 0, i32 13
  %93 = getelementptr inbounds [64 x %struct.slab_stats_automove], [64 x %struct.slab_stats_automove]* %92, i64 0, i64 0
  call void @fill_slab_stats_automove(%struct.slab_stats_automove* %93)
  %94 = load %struct.slab_automove.433*, %struct.slab_automove.433** %6, align 8
  %95 = bitcast %struct.slab_automove.433* %94 to i8*
  store i8* %95, i8** %2, align 8
  br label %96

96:                                               ; preds = %87, %84, %17
  %97 = load i8*, i8** %2, align 8
  ret i8* %97
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @slab_automove_extstore_free(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.slab_automove.433*, align 8
  store i8* %0, i8** %2, align 8
  %4 = load i8*, i8** %2, align 8
  %5 = bitcast i8* %4 to %struct.slab_automove.433*
  store %struct.slab_automove.433* %5, %struct.slab_automove.433** %3, align 8
  %6 = load %struct.slab_automove.433*, %struct.slab_automove.433** %3, align 8
  %7 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %6, i32 0, i32 0
  %8 = load %struct.window_data.432*, %struct.window_data.432** %7, align 8
  %9 = bitcast %struct.window_data.432* %8 to i8*
  call void @free(i8* %9) #14
  %10 = load %struct.slab_automove.433*, %struct.slab_automove.433** %3, align 8
  %11 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %10, i32 0, i32 1
  %12 = load %struct.timezone*, %struct.timezone** %11, align 8
  %13 = bitcast %struct.timezone* %12 to i8*
  call void @free(i8* %13) #14
  %14 = load %struct.slab_automove.433*, %struct.slab_automove.433** %3, align 8
  %15 = bitcast %struct.slab_automove.433* %14 to i8*
  call void @free(i8* %15) #14
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @slab_automove_extstore_run(i8* %0, i32* %1, i32* %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca %struct.slab_automove.433*, align 8
  %8 = alloca i32, align 4
  %9 = alloca %struct.window_data.432, align 8
  %10 = alloca i32, align 4
  %11 = alloca i64, align 8
  %12 = alloca i32, align 4
  %13 = alloca i64, align 8
  %14 = alloca i8, align 1
  %15 = alloca %struct.timezone, align 4
  %16 = alloca i8, align 1
  %17 = alloca i8, align 1
  %18 = alloca %struct.window_data.432*, align 8
  %19 = alloca i32, align 4
  %20 = alloca i64, align 8
  %21 = alloca %struct.window_data.432*, align 8
  %22 = alloca %struct.window_data.432*, align 8
  store i8* %0, i8** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %23 = load i8*, i8** %4, align 8
  %24 = bitcast i8* %23 to %struct.slab_automove.433*
  store %struct.slab_automove.433* %24, %struct.slab_automove.433** %7, align 8
  store i32 -1, i32* %10, align 4
  store i64 0, i64* %11, align 8
  store i32 -1, i32* %12, align 4
  store i64 -1, i64* %13, align 8
  store i8 0, i8* %14, align 1
  %25 = load i32*, i32** %5, align 8
  store i32 -1, i32* %25, align 4
  %26 = load i32*, i32** %6, align 8
  store i32 -1, i32* %26, align 4
  %27 = load %struct.slab_automove.433*, %struct.slab_automove.433** %7, align 8
  call void @global_pool_check(%struct.slab_automove.433* %27)
  %28 = bitcast %struct.timezone* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %28, i8 0, i64 8, i1 false)
  %29 = load %struct.slab_automove.433*, %struct.slab_automove.433** %7, align 8
  %30 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %29, i32 0, i32 1
  %31 = load %struct.timezone*, %struct.timezone** %30, align 8
  %32 = load %struct.slab_automove.433*, %struct.slab_automove.433** %7, align 8
  %33 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %32, i32 0, i32 3
  %34 = load i32, i32* %33, align 8
  call void @window_global_sum(%struct.timezone* %31, %struct.timezone* %15, i32 %34)
  %35 = load %struct.slab_automove.433*, %struct.slab_automove.433** %7, align 8
  %36 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %35, i32 0, i32 12
  %37 = getelementptr inbounds [64 x %struct.item_stats_automove], [64 x %struct.item_stats_automove]* %36, i64 0, i64 0
  call void @fill_item_stats_automove(%struct.item_stats_automove* %37)
  %38 = load %struct.slab_automove.433*, %struct.slab_automove.433** %7, align 8
  %39 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %38, i32 0, i32 14
  %40 = getelementptr inbounds [64 x %struct.slab_stats_automove], [64 x %struct.slab_stats_automove]* %39, i64 0, i64 0
  call void @fill_slab_stats_automove(%struct.slab_stats_automove* %40)
  %41 = load %struct.slab_automove.433*, %struct.slab_automove.433** %7, align 8
  %42 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %41, i32 0, i32 4
  %43 = load i32, i32* %42, align 4
  %44 = add i32 %43, 1
  store i32 %44, i32* %42, align 4
  %45 = load %struct.slab_automove.433*, %struct.slab_automove.433** %7, align 8
  call void @memcheck(%struct.slab_automove.433* %45)
  store i32 1, i32* %8, align 4
  br label %46

46:                                               ; preds = %302, %3
  %47 = load i32, i32* %8, align 4
  %48 = icmp slt i32 %47, 64
  br i1 %48, label %49, label %305

49:                                               ; preds = %46
  %50 = load %struct.slab_automove.433*, %struct.slab_automove.433** %7, align 8
  %51 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %50, i32 0, i32 13
  %52 = load i32, i32* %8, align 4
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds [64 x %struct.slab_stats_automove], [64 x %struct.slab_stats_automove]* %51, i64 0, i64 %53
  %55 = getelementptr inbounds %struct.slab_stats_automove, %struct.slab_stats_automove* %54, i32 0, i32 1
  %56 = load i32, i32* %55, align 4
  %57 = load %struct.slab_automove.433*, %struct.slab_automove.433** %7, align 8
  %58 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %57, i32 0, i32 5
  %59 = load i32, i32* %58, align 8
  %60 = icmp ult i32 %56, %59
  %61 = zext i1 %60 to i64
  %62 = select i1 %60, i32 1, i32 0
  %63 = icmp ne i32 %62, 0
  %64 = zext i1 %63 to i8
  store i8 %64, i8* %16, align 1
  store i8 0, i8* %17, align 1
  %65 = load %struct.slab_automove.433*, %struct.slab_automove.433** %7, align 8
  %66 = load i32, i32* %8, align 4
  %67 = call %struct.window_data.432* @get_window_data(%struct.slab_automove.433* %65, i32 %66)
  store %struct.window_data.432* %67, %struct.window_data.432** %18, align 8
  %68 = bitcast %struct.window_data.432* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 32, i1 false)
  %69 = load i32, i32* %8, align 4
  %70 = load %struct.slab_automove.433*, %struct.slab_automove.433** %7, align 8
  %71 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %70, i32 0, i32 3
  %72 = load i32, i32* %71, align 8
  %73 = mul i32 %69, %72
  store i32 %73, i32* %19, align 4
  %74 = load %struct.slab_automove.433*, %struct.slab_automove.433** %7, align 8
  %75 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %74, i32 0, i32 0
  %76 = load %struct.window_data.432*, %struct.window_data.432** %75, align 8
  %77 = load i32, i32* %19, align 4
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds %struct.window_data.432, %struct.window_data.432* %76, i64 %78
  %80 = load %struct.slab_automove.433*, %struct.slab_automove.433** %7, align 8
  %81 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %80, i32 0, i32 3
  %82 = load i32, i32* %81, align 8
  call void @window_sum.1352(%struct.window_data.432* %79, %struct.window_data.432* %9, i32 %82)
  %83 = load %struct.window_data.432*, %struct.window_data.432** %18, align 8
  %84 = bitcast %struct.window_data.432* %83 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 0, i64 32, i1 false)
  %85 = load %struct.slab_automove.433*, %struct.slab_automove.433** %7, align 8
  %86 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %85, i32 0, i32 12
  %87 = load i32, i32* %8, align 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds [64 x %struct.item_stats_automove], [64 x %struct.item_stats_automove]* %86, i64 0, i64 %88
  %90 = getelementptr inbounds %struct.item_stats_automove, %struct.item_stats_automove* %89, i32 0, i32 0
  %91 = load i64, i64* %90, align 8
  %92 = load %struct.slab_automove.433*, %struct.slab_automove.433** %7, align 8
  %93 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %92, i32 0, i32 11
  %94 = load i32, i32* %8, align 4
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds [64 x %struct.item_stats_automove], [64 x %struct.item_stats_automove]* %93, i64 0, i64 %95
  %97 = getelementptr inbounds %struct.item_stats_automove, %struct.item_stats_automove* %96, i32 0, i32 0
  %98 = load i64, i64* %97, align 8
  %99 = sub nsw i64 %91, %98
  %100 = icmp sgt i64 %99, 0
  br i1 %100, label %118, label %101

101:                                              ; preds = %49
  %102 = load %struct.slab_automove.433*, %struct.slab_automove.433** %7, align 8
  %103 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %102, i32 0, i32 12
  %104 = load i32, i32* %8, align 4
  %105 = sext i32 %104 to i64
  %106 = getelementptr inbounds [64 x %struct.item_stats_automove], [64 x %struct.item_stats_automove]* %103, i64 0, i64 %105
  %107 = getelementptr inbounds %struct.item_stats_automove, %struct.item_stats_automove* %106, i32 0, i32 1
  %108 = load i64, i64* %107, align 8
  %109 = load %struct.slab_automove.433*, %struct.slab_automove.433** %7, align 8
  %110 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %109, i32 0, i32 11
  %111 = load i32, i32* %8, align 4
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds [64 x %struct.item_stats_automove], [64 x %struct.item_stats_automove]* %110, i64 0, i64 %112
  %114 = getelementptr inbounds %struct.item_stats_automove, %struct.item_stats_automove* %113, i32 0, i32 1
  %115 = load i64, i64* %114, align 8
  %116 = sub nsw i64 %108, %115
  %117 = icmp sgt i64 %116, 0
  br i1 %117, label %118, label %123

118:                                              ; preds = %101, %49
  %119 = load %struct.window_data.432*, %struct.window_data.432** %18, align 8
  %120 = getelementptr inbounds %struct.window_data.432, %struct.window_data.432* %119, i32 0, i32 2
  store i64 1, i64* %120, align 8
  %121 = load %struct.window_data.432*, %struct.window_data.432** %18, align 8
  %122 = getelementptr inbounds %struct.window_data.432, %struct.window_data.432* %121, i32 0, i32 1
  store i64 1, i64* %122, align 8
  br label %123

123:                                              ; preds = %118, %101
  %124 = load %struct.slab_automove.433*, %struct.slab_automove.433** %7, align 8
  %125 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %124, i32 0, i32 14
  %126 = load i32, i32* %8, align 4
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds [64 x %struct.slab_stats_automove], [64 x %struct.slab_stats_automove]* %125, i64 0, i64 %127
  %129 = getelementptr inbounds %struct.slab_stats_automove, %struct.slab_stats_automove* %128, i32 0, i32 3
  %130 = load i64, i64* %129, align 8
  %131 = load %struct.slab_automove.433*, %struct.slab_automove.433** %7, align 8
  %132 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %131, i32 0, i32 13
  %133 = load i32, i32* %8, align 4
  %134 = sext i32 %133 to i64
  %135 = getelementptr inbounds [64 x %struct.slab_stats_automove], [64 x %struct.slab_stats_automove]* %132, i64 0, i64 %134
  %136 = getelementptr inbounds %struct.slab_stats_automove, %struct.slab_stats_automove* %135, i32 0, i32 3
  %137 = load i64, i64* %136, align 8
  %138 = sub nsw i64 %130, %137
  %139 = icmp sgt i64 %138, 0
  br i1 %139, label %140, label %143

140:                                              ; preds = %123
  %141 = load %struct.window_data.432*, %struct.window_data.432** %18, align 8
  %142 = getelementptr inbounds %struct.window_data.432, %struct.window_data.432* %141, i32 0, i32 1
  store i64 1, i64* %142, align 8
  br label %143

143:                                              ; preds = %140, %123
  %144 = load %struct.slab_automove.433*, %struct.slab_automove.433** %7, align 8
  %145 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %144, i32 0, i32 14
  %146 = load i32, i32* %8, align 4
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds [64 x %struct.slab_stats_automove], [64 x %struct.slab_stats_automove]* %145, i64 0, i64 %147
  %149 = getelementptr inbounds %struct.slab_stats_automove, %struct.slab_stats_automove* %148, i32 0, i32 2
  %150 = load i64, i64* %149, align 8
  %151 = load %struct.slab_automove.433*, %struct.slab_automove.433** %7, align 8
  %152 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %151, i32 0, i32 10
  %153 = load i32, i32* %8, align 4
  %154 = sext i32 %153 to i64
  %155 = getelementptr inbounds [64 x i32], [64 x i32]* %152, i64 0, i64 %154
  %156 = load i32, i32* %155, align 4
  %157 = zext i32 %156 to i64
  %158 = icmp sgt i64 %150, %157
  br i1 %158, label %159, label %160

159:                                              ; preds = %143
  store i8 1, i8* %17, align 1
  br label %160

160:                                              ; preds = %159, %143
  %161 = load %struct.slab_automove.433*, %struct.slab_automove.433** %7, align 8
  %162 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %161, i32 0, i32 14
  %163 = load i32, i32* %8, align 4
  %164 = sext i32 %163 to i64
  %165 = getelementptr inbounds [64 x %struct.slab_stats_automove], [64 x %struct.slab_stats_automove]* %162, i64 0, i64 %164
  %166 = getelementptr inbounds %struct.slab_stats_automove, %struct.slab_stats_automove* %165, i32 0, i32 2
  %167 = load i64, i64* %166, align 8
  %168 = load %struct.slab_automove.433*, %struct.slab_automove.433** %7, align 8
  %169 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %168, i32 0, i32 10
  %170 = load i32, i32* %8, align 4
  %171 = sext i32 %170 to i64
  %172 = getelementptr inbounds [64 x i32], [64 x i32]* %169, i64 0, i64 %171
  %173 = load i32, i32* %172, align 4
  %174 = mul i32 %173, 2
  %175 = zext i32 %174 to i64
  %176 = icmp sgt i64 %167, %175
  br i1 %176, label %177, label %188

177:                                              ; preds = %160
  %178 = load %struct.slab_automove.433*, %struct.slab_automove.433** %7, align 8
  %179 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %178, i32 0, i32 10
  %180 = load i32, i32* %8, align 4
  %181 = sext i32 %180 to i64
  %182 = getelementptr inbounds [64 x i32], [64 x i32]* %179, i64 0, i64 %181
  %183 = load i32, i32* %182, align 4
  %184 = icmp ugt i32 %183, 0
  br i1 %184, label %185, label %188

185:                                              ; preds = %177
  %186 = load %struct.window_data.432*, %struct.window_data.432** %18, align 8
  %187 = getelementptr inbounds %struct.window_data.432, %struct.window_data.432* %186, i32 0, i32 3
  store i32 1, i32* %187, align 8
  br label %188

188:                                              ; preds = %185, %177, %160
  %189 = load %struct.slab_automove.433*, %struct.slab_automove.433** %7, align 8
  %190 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %189, i32 0, i32 12
  %191 = load i32, i32* %8, align 4
  %192 = sext i32 %191 to i64
  %193 = getelementptr inbounds [64 x %struct.item_stats_automove], [64 x %struct.item_stats_automove]* %190, i64 0, i64 %192
  %194 = getelementptr inbounds %struct.item_stats_automove, %struct.item_stats_automove* %193, i32 0, i32 2
  %195 = load i32, i32* %194, align 8
  %196 = zext i32 %195 to i64
  %197 = load %struct.window_data.432*, %struct.window_data.432** %18, align 8
  %198 = getelementptr inbounds %struct.window_data.432, %struct.window_data.432* %197, i32 0, i32 0
  store i64 %196, i64* %198, align 8
  %199 = getelementptr inbounds %struct.window_data.432, %struct.window_data.432* %9, i32 0, i32 0
  %200 = load i64, i64* %199, align 8
  %201 = load %struct.slab_automove.433*, %struct.slab_automove.433** %7, align 8
  %202 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %201, i32 0, i32 3
  %203 = load i32, i32* %202, align 8
  %204 = zext i32 %203 to i64
  %205 = udiv i64 %200, %204
  store i64 %205, i64* %20, align 8
  %206 = load %struct.slab_automove.433*, %struct.slab_automove.433** %7, align 8
  %207 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %206, i32 0, i32 14
  %208 = load i32, i32* %8, align 4
  %209 = sext i32 %208 to i64
  %210 = getelementptr inbounds [64 x %struct.slab_stats_automove], [64 x %struct.slab_stats_automove]* %207, i64 0, i64 %209
  %211 = getelementptr inbounds %struct.slab_stats_automove, %struct.slab_stats_automove* %210, i32 0, i32 2
  %212 = load i64, i64* %211, align 8
  %213 = sitofp i64 %212 to double
  %214 = load %struct.slab_automove.433*, %struct.slab_automove.433** %7, align 8
  %215 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %214, i32 0, i32 14
  %216 = load i32, i32* %8, align 4
  %217 = sext i32 %216 to i64
  %218 = getelementptr inbounds [64 x %struct.slab_stats_automove], [64 x %struct.slab_stats_automove]* %215, i64 0, i64 %217
  %219 = getelementptr inbounds %struct.slab_stats_automove, %struct.slab_stats_automove* %218, i32 0, i32 0
  %220 = load i32, i32* %219, align 8
  %221 = uitofp i32 %220 to double
  %222 = fmul double %221, 2.500000e+00
  %223 = fcmp ogt double %213, %222
  br i1 %223, label %224, label %251

224:                                              ; preds = %188
  %225 = getelementptr inbounds %struct.window_data.432, %struct.window_data.432* %9, i32 0, i32 1
  %226 = load i64, i64* %225, align 8
  %227 = icmp eq i64 %226, 0
  br i1 %227, label %228, label %251

228:                                              ; preds = %224
  %229 = load i8, i8* %16, align 1
  %230 = trunc i8 %229 to i1
  br i1 %230, label %231, label %235

231:                                              ; preds = %228
  %232 = load i32, i32* %8, align 4
  %233 = load i32*, i32** %5, align 8
  store i32 %232, i32* %233, align 4
  %234 = load i32*, i32** %6, align 8
  store i32 0, i32* %234, align 4
  store i8 1, i8* %14, align 1
  br label %250

235:                                              ; preds = %228
  %236 = load i8, i8* %16, align 1
  %237 = trunc i8 %236 to i1
  br i1 %237, label %249, label %238

238:                                              ; preds = %235
  %239 = getelementptr inbounds %struct.window_data.432, %struct.window_data.432* %9, i32 0, i32 3
  %240 = load i32, i32* %239, align 8
  %241 = load %struct.slab_automove.433*, %struct.slab_automove.433** %7, align 8
  %242 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %241, i32 0, i32 3
  %243 = load i32, i32* %242, align 8
  %244 = icmp uge i32 %240, %243
  br i1 %244, label %245, label %249

245:                                              ; preds = %238
  %246 = load i32, i32* %8, align 4
  %247 = load i32*, i32** %5, align 8
  store i32 %246, i32* %247, align 4
  %248 = load i32*, i32** %6, align 8
  store i32 0, i32* %248, align 4
  store i8 1, i8* %14, align 1
  br label %249

249:                                              ; preds = %245, %238, %235
  br label %250

250:                                              ; preds = %249, %231
  br label %251

251:                                              ; preds = %250, %224, %188
  %252 = load i8, i8* %16, align 1
  %253 = trunc i8 %252 to i1
  br i1 %253, label %301, label %254

254:                                              ; preds = %251
  %255 = load i64, i64* %20, align 8
  %256 = load i64, i64* %11, align 8
  %257 = icmp ugt i64 %255, %256
  br i1 %257, label %258, label %270

258:                                              ; preds = %254
  %259 = load %struct.slab_automove.433*, %struct.slab_automove.433** %7, align 8
  %260 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %259, i32 0, i32 14
  %261 = load i32, i32* %8, align 4
  %262 = sext i32 %261 to i64
  %263 = getelementptr inbounds [64 x %struct.slab_stats_automove], [64 x %struct.slab_stats_automove]* %260, i64 0, i64 %262
  %264 = getelementptr inbounds %struct.slab_stats_automove, %struct.slab_stats_automove* %263, i32 0, i32 3
  %265 = load i64, i64* %264, align 8
  %266 = icmp sgt i64 %265, 2
  br i1 %266, label %267, label %270

267:                                              ; preds = %258
  %268 = load i32, i32* %8, align 4
  store i32 %268, i32* %10, align 4
  %269 = load i64, i64* %20, align 8
  store i64 %269, i64* %11, align 8
  br label %270

270:                                              ; preds = %267, %258, %254
  %271 = load i64, i64* %20, align 8
  %272 = load i64, i64* %13, align 8
  %273 = icmp ult i64 %271, %272
  br i1 %273, label %274, label %300

274:                                              ; preds = %270
  %275 = load %struct.slab_automove.433*, %struct.slab_automove.433** %7, align 8
  %276 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %275, i32 0, i32 14
  %277 = load i32, i32* %8, align 4
  %278 = sext i32 %277 to i64
  %279 = getelementptr inbounds [64 x %struct.slab_stats_automove], [64 x %struct.slab_stats_automove]* %276, i64 0, i64 %278
  %280 = getelementptr inbounds %struct.slab_stats_automove, %struct.slab_stats_automove* %279, i32 0, i32 3
  %281 = load i64, i64* %280, align 8
  %282 = icmp ne i64 %281, 0
  br i1 %282, label %283, label %300

283:                                              ; preds = %274
  %284 = getelementptr inbounds %struct.window_data.432, %struct.window_data.432* %9, i32 0, i32 3
  %285 = load i32, i32* %284, align 8
  %286 = load %struct.slab_automove.433*, %struct.slab_automove.433** %7, align 8
  %287 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %286, i32 0, i32 3
  %288 = load i32, i32* %287, align 8
  %289 = icmp ult i32 %285, %288
  br i1 %289, label %290, label %300

290:                                              ; preds = %283
  %291 = getelementptr inbounds %struct.window_data.432, %struct.window_data.432* %9, i32 0, i32 4
  %292 = load i32, i32* %291, align 4
  %293 = icmp ne i32 %292, 0
  br i1 %293, label %294, label %297

294:                                              ; preds = %290
  %295 = load i8, i8* %17, align 1
  %296 = trunc i8 %295 to i1
  br i1 %296, label %300, label %297

297:                                              ; preds = %294, %290
  %298 = load i32, i32* %8, align 4
  store i32 %298, i32* %12, align 4
  %299 = load i64, i64* %20, align 8
  store i64 %299, i64* %13, align 8
  br label %300

300:                                              ; preds = %297, %294, %283, %274, %270
  br label %301

301:                                              ; preds = %300, %251
  br label %302

302:                                              ; preds = %301
  %303 = load i32, i32* %8, align 4
  %304 = add nsw i32 %303, 1
  store i32 %304, i32* %8, align 4
  br label %46, !llvm.loop !232

305:                                              ; preds = %46
  %306 = load %struct.slab_automove.433*, %struct.slab_automove.433** %7, align 8
  %307 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %306, i32 0, i32 11
  %308 = getelementptr inbounds [64 x %struct.item_stats_automove], [64 x %struct.item_stats_automove]* %307, i64 0, i64 0
  %309 = bitcast %struct.item_stats_automove* %308 to i8*
  %310 = load %struct.slab_automove.433*, %struct.slab_automove.433** %7, align 8
  %311 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %310, i32 0, i32 12
  %312 = getelementptr inbounds [64 x %struct.item_stats_automove], [64 x %struct.item_stats_automove]* %311, i64 0, i64 0
  %313 = bitcast %struct.item_stats_automove* %312 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %309, i8* align 8 %313, i64 1536, i1 false)
  %314 = load %struct.slab_automove.433*, %struct.slab_automove.433** %7, align 8
  %315 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %314, i32 0, i32 13
  %316 = getelementptr inbounds [64 x %struct.slab_stats_automove], [64 x %struct.slab_stats_automove]* %315, i64 0, i64 0
  %317 = bitcast %struct.slab_stats_automove* %316 to i8*
  %318 = load %struct.slab_automove.433*, %struct.slab_automove.433** %7, align 8
  %319 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %318, i32 0, i32 14
  %320 = getelementptr inbounds [64 x %struct.slab_stats_automove], [64 x %struct.slab_stats_automove]* %319, i64 0, i64 0
  %321 = bitcast %struct.slab_stats_automove* %320 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %317, i8* align 8 %321, i64 1536, i1 false)
  %322 = load %struct.slab_automove.433*, %struct.slab_automove.433** %7, align 8
  %323 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %322, i32 0, i32 4
  %324 = load i32, i32* %323, align 4
  %325 = load %struct.slab_automove.433*, %struct.slab_automove.433** %7, align 8
  %326 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %325, i32 0, i32 3
  %327 = load i32, i32* %326, align 8
  %328 = icmp ult i32 %324, %327
  br i1 %328, label %329, label %330

329:                                              ; preds = %305
  br label %437

330:                                              ; preds = %305
  %331 = getelementptr inbounds %struct.timezone, %struct.timezone* %15, i32 0, i32 1
  %332 = load i32, i32* %331, align 4
  %333 = load %struct.slab_automove.433*, %struct.slab_automove.433** %7, align 8
  %334 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %333, i32 0, i32 3
  %335 = load i32, i32* %334, align 8
  %336 = icmp uge i32 %332, %335
  br i1 %336, label %337, label %370

337:                                              ; preds = %330
  %338 = getelementptr inbounds %struct.timezone, %struct.timezone* %15, i32 0, i32 0
  %339 = load i32, i32* %338, align 4
  %340 = icmp ne i32 %339, 0
  br i1 %340, label %370, label %341

341:                                              ; preds = %337
  %342 = load i32, i32* %12, align 4
  %343 = icmp ne i32 %342, -1
  br i1 %343, label %344, label %370

344:                                              ; preds = %341
  %345 = load %struct.slab_automove.433*, %struct.slab_automove.433** %7, align 8
  %346 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %345, i32 0, i32 14
  %347 = load i32, i32* %12, align 4
  %348 = sext i32 %347 to i64
  %349 = getelementptr inbounds [64 x %struct.slab_stats_automove], [64 x %struct.slab_stats_automove]* %346, i64 0, i64 %348
  %350 = getelementptr inbounds %struct.slab_stats_automove, %struct.slab_stats_automove* %349, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = load %struct.slab_automove.433*, %struct.slab_automove.433** %7, align 8
  %353 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %352, i32 0, i32 10
  %354 = load i32, i32* %12, align 4
  %355 = sext i32 %354 to i64
  %356 = getelementptr inbounds [64 x i32], [64 x i32]* %353, i64 0, i64 %355
  %357 = load i32, i32* %356, align 4
  %358 = zext i32 %357 to i64
  %359 = icmp sle i64 %351, %358
  br i1 %359, label %360, label %364

360:                                              ; preds = %344
  %361 = load i32*, i32** %5, align 8
  store i32 0, i32* %361, align 4
  %362 = load i32, i32* %12, align 4
  %363 = load i32*, i32** %6, align 8
  store i32 %362, i32* %363, align 4
  br label %364

364:                                              ; preds = %360, %344
  %365 = load %struct.slab_automove.433*, %struct.slab_automove.433** %7, align 8
  %366 = load i32, i32* %12, align 4
  %367 = call %struct.window_data.432* @get_window_data(%struct.slab_automove.433* %365, i32 %366)
  store %struct.window_data.432* %367, %struct.window_data.432** %21, align 8
  %368 = load %struct.window_data.432*, %struct.window_data.432** %21, align 8
  %369 = getelementptr inbounds %struct.window_data.432, %struct.window_data.432* %368, i32 0, i32 4
  store i32 1, i32* %369, align 4
  br label %436

370:                                              ; preds = %341, %337, %330
  %371 = load i8, i8* %14, align 1
  %372 = trunc i8 %371 to i1
  br i1 %372, label %384, label %373

373:                                              ; preds = %370
  %374 = getelementptr inbounds %struct.timezone, %struct.timezone* %15, i32 0, i32 0
  %375 = load i32, i32* %374, align 4
  %376 = icmp ne i32 %375, 0
  br i1 %376, label %377, label %384

377:                                              ; preds = %373
  %378 = load i32, i32* %10, align 4
  %379 = icmp ne i32 %378, -1
  br i1 %379, label %380, label %384

380:                                              ; preds = %377
  %381 = load i32, i32* %10, align 4
  %382 = load i32*, i32** %5, align 8
  store i32 %381, i32* %382, align 4
  %383 = load i32*, i32** %6, align 8
  store i32 0, i32* %383, align 4
  br label %435

384:                                              ; preds = %377, %373, %370
  %385 = load i8, i8* %14, align 1
  %386 = trunc i8 %385 to i1
  br i1 %386, label %434, label %387

387:                                              ; preds = %384
  %388 = load i32, i32* %12, align 4
  %389 = icmp ne i32 %388, -1
  br i1 %389, label %390, label %434

390:                                              ; preds = %387
  %391 = load i32, i32* %10, align 4
  %392 = icmp ne i32 %391, -1
  br i1 %392, label %393, label %434

393:                                              ; preds = %390
  %394 = load i32, i32* %12, align 4
  %395 = load i32, i32* %10, align 4
  %396 = icmp ne i32 %394, %395
  br i1 %396, label %397, label %434

397:                                              ; preds = %393
  %398 = load i64, i64* %13, align 8
  %399 = uitofp i64 %398 to double
  %400 = load i64, i64* %11, align 8
  %401 = uitofp i64 %400 to double
  %402 = load %struct.slab_automove.433*, %struct.slab_automove.433** %7, align 8
  %403 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %402, i32 0, i32 7
  %404 = load double, double* %403, align 8
  %405 = fmul double %401, %404
  %406 = fcmp olt double %399, %405
  br i1 %406, label %407, label %433

407:                                              ; preds = %397
  %408 = load %struct.slab_automove.433*, %struct.slab_automove.433** %7, align 8
  %409 = load i32, i32* %12, align 4
  %410 = call %struct.window_data.432* @get_window_data(%struct.slab_automove.433* %408, i32 %409)
  store %struct.window_data.432* %410, %struct.window_data.432** %22, align 8
  %411 = load %struct.window_data.432*, %struct.window_data.432** %22, align 8
  %412 = getelementptr inbounds %struct.window_data.432, %struct.window_data.432* %411, i32 0, i32 4
  store i32 1, i32* %412, align 4
  %413 = load %struct.slab_automove.433*, %struct.slab_automove.433** %7, align 8
  %414 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %413, i32 0, i32 14
  %415 = load i32, i32* %12, align 4
  %416 = sext i32 %415 to i64
  %417 = getelementptr inbounds [64 x %struct.slab_stats_automove], [64 x %struct.slab_stats_automove]* %414, i64 0, i64 %416
  %418 = getelementptr inbounds %struct.slab_stats_automove, %struct.slab_stats_automove* %417, i32 0, i32 2
  %419 = load i64, i64* %418, align 8
  %420 = load %struct.slab_automove.433*, %struct.slab_automove.433** %7, align 8
  %421 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %420, i32 0, i32 10
  %422 = load i32, i32* %12, align 4
  %423 = sext i32 %422 to i64
  %424 = getelementptr inbounds [64 x i32], [64 x i32]* %421, i64 0, i64 %423
  %425 = load i32, i32* %424, align 4
  %426 = zext i32 %425 to i64
  %427 = icmp sle i64 %419, %426
  br i1 %427, label %428, label %432

428:                                              ; preds = %407
  %429 = load i32*, i32** %5, align 8
  store i32 0, i32* %429, align 4
  %430 = load i32, i32* %12, align 4
  %431 = load i32*, i32** %6, align 8
  store i32 %430, i32* %431, align 4
  br label %432

432:                                              ; preds = %428, %407
  br label %433

433:                                              ; preds = %432, %397
  br label %434

434:                                              ; preds = %433, %393, %390, %387, %384
  br label %435

435:                                              ; preds = %434, %380
  br label %436

436:                                              ; preds = %435, %364
  br label %437

437:                                              ; preds = %436, %329
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @global_pool_check(%struct.slab_automove.433* %0) #0 {
  %2 = alloca %struct.slab_automove.433*, align 8
  %3 = alloca i8, align 1
  %4 = alloca i32, align 4
  %5 = alloca %struct.timezone*, align 8
  %6 = alloca i32, align 4
  store %struct.slab_automove.433* %0, %struct.slab_automove.433** %2, align 8
  %7 = load %struct.slab_automove.433*, %struct.slab_automove.433** %2, align 8
  %8 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %7, i32 0, i32 10
  %9 = getelementptr inbounds [64 x i32], [64 x i32]* %8, i64 0, i64 0
  %10 = load i32, i32* %9, align 4
  store i32 %10, i32* %4, align 4
  %11 = load %struct.slab_automove.433*, %struct.slab_automove.433** %2, align 8
  %12 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %11, i32 0, i32 1
  %13 = load %struct.timezone*, %struct.timezone** %12, align 8
  %14 = load %struct.slab_automove.433*, %struct.slab_automove.433** %2, align 8
  %15 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %14, i32 0, i32 4
  %16 = load i32, i32* %15, align 4
  %17 = load %struct.slab_automove.433*, %struct.slab_automove.433** %2, align 8
  %18 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %17, i32 0, i32 3
  %19 = load i32, i32* %18, align 8
  %20 = urem i32 %16, %19
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds %struct.timezone, %struct.timezone* %13, i64 %21
  store %struct.timezone* %22, %struct.timezone** %5, align 8
  %23 = call i32 @global_page_pool_size(i8* %3)
  store i32 %23, i32* %6, align 4
  %24 = load %struct.timezone*, %struct.timezone** %5, align 8
  %25 = bitcast %struct.timezone* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %25, i8 0, i64 8, i1 false)
  %26 = load i8, i8* %3, align 1
  %27 = trunc i8 %26 to i1
  br i1 %27, label %29, label %28

28:                                               ; preds = %1
  br label %50

29:                                               ; preds = %1
  %30 = load i32, i32* %6, align 4
  %31 = load i32, i32* %4, align 4
  %32 = udiv i32 %31, 2
  %33 = icmp ult i32 %30, %32
  br i1 %33, label %34, label %39

34:                                               ; preds = %29
  %35 = load %struct.timezone*, %struct.timezone** %5, align 8
  %36 = getelementptr inbounds %struct.timezone, %struct.timezone* %35, i32 0, i32 0
  store i32 1, i32* %36, align 4
  %37 = load %struct.slab_automove.433*, %struct.slab_automove.433** %2, align 8
  %38 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %37, i32 0, i32 9
  store i8 1, i8* %38, align 8
  br label %50

39:                                               ; preds = %29
  %40 = load i32, i32* %6, align 4
  %41 = load i32, i32* %4, align 4
  %42 = icmp ugt i32 %40, %41
  br i1 %42, label %43, label %46

43:                                               ; preds = %39
  %44 = load %struct.timezone*, %struct.timezone** %5, align 8
  %45 = getelementptr inbounds %struct.timezone, %struct.timezone* %44, i32 0, i32 1
  store i32 1, i32* %45, align 4
  br label %49

46:                                               ; preds = %39
  %47 = load %struct.slab_automove.433*, %struct.slab_automove.433** %2, align 8
  %48 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %47, i32 0, i32 9
  store i8 1, i8* %48, align 8
  br label %49

49:                                               ; preds = %46, %43
  br label %50

50:                                               ; preds = %28, %49, %34
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @window_global_sum(%struct.timezone* %0, %struct.timezone* %1, i32 %2) #0 {
  %4 = alloca %struct.timezone*, align 8
  %5 = alloca %struct.timezone*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.timezone*, align 8
  store %struct.timezone* %0, %struct.timezone** %4, align 8
  store %struct.timezone* %1, %struct.timezone** %5, align 8
  store i32 %2, i32* %6, align 4
  store i32 0, i32* %7, align 4
  br label %9

9:                                                ; preds = %32, %3
  %10 = load i32, i32* %7, align 4
  %11 = load i32, i32* %6, align 4
  %12 = icmp ult i32 %10, %11
  br i1 %12, label %13, label %35

13:                                               ; preds = %9
  %14 = load %struct.timezone*, %struct.timezone** %4, align 8
  %15 = load i32, i32* %7, align 4
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds %struct.timezone, %struct.timezone* %14, i64 %16
  store %struct.timezone* %17, %struct.timezone** %8, align 8
  %18 = load %struct.timezone*, %struct.timezone** %8, align 8
  %19 = getelementptr inbounds %struct.timezone, %struct.timezone* %18, i32 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = load %struct.timezone*, %struct.timezone** %5, align 8
  %22 = getelementptr inbounds %struct.timezone, %struct.timezone* %21, i32 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = add i32 %23, %20
  store i32 %24, i32* %22, align 4
  %25 = load %struct.timezone*, %struct.timezone** %8, align 8
  %26 = getelementptr inbounds %struct.timezone, %struct.timezone* %25, i32 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = load %struct.timezone*, %struct.timezone** %5, align 8
  %29 = getelementptr inbounds %struct.timezone, %struct.timezone* %28, i32 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = add i32 %30, %27
  store i32 %31, i32* %29, align 4
  br label %32

32:                                               ; preds = %13
  %33 = load i32, i32* %7, align 4
  %34 = add nsw i32 %33, 1
  store i32 %34, i32* %7, align 4
  br label %9, !llvm.loop !233

35:                                               ; preds = %9
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @memcheck(%struct.slab_automove.433* %0) #0 {
  %2 = alloca %struct.slab_automove.433*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.slab_stats_automove*, align 8
  %6 = alloca i32, align 4
  store %struct.slab_automove.433* %0, %struct.slab_automove.433** %2, align 8
  store i32 0, i32* %3, align 4
  %7 = load volatile i32, i32* @current_time, align 4
  %8 = load %struct.slab_automove.433*, %struct.slab_automove.433** %2, align 8
  %9 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %8, i32 0, i32 6
  %10 = load i32, i32* %9, align 4
  %11 = add i32 %10, 60
  %12 = icmp ult i32 %7, %11
  br i1 %12, label %13, label %14

13:                                               ; preds = %1
  br label %118

14:                                               ; preds = %1
  %15 = load volatile i32, i32* @current_time, align 4
  %16 = load %struct.slab_automove.433*, %struct.slab_automove.433** %2, align 8
  %17 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %16, i32 0, i32 6
  store i32 %15, i32* %17, align 4
  store i32 1, i32* %4, align 4
  br label %18

18:                                               ; preds = %95, %14
  %19 = load i32, i32* %4, align 4
  %20 = icmp slt i32 %19, 64
  br i1 %20, label %21, label %98

21:                                               ; preds = %18
  %22 = load %struct.slab_automove.433*, %struct.slab_automove.433** %2, align 8
  %23 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %22, i32 0, i32 14
  %24 = load i32, i32* %4, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [64 x %struct.slab_stats_automove], [64 x %struct.slab_stats_automove]* %23, i64 0, i64 %25
  store %struct.slab_stats_automove* %26, %struct.slab_stats_automove** %5, align 8
  %27 = load %struct.slab_stats_automove*, %struct.slab_stats_automove** %5, align 8
  %28 = getelementptr inbounds %struct.slab_stats_automove, %struct.slab_stats_automove* %27, i32 0, i32 3
  %29 = load i64, i64* %28, align 8
  %30 = load i32, i32* %3, align 4
  %31 = zext i32 %30 to i64
  %32 = add nsw i64 %31, %29
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %3, align 4
  %34 = load %struct.slab_stats_automove*, %struct.slab_stats_automove** %5, align 8
  %35 = getelementptr inbounds %struct.slab_stats_automove, %struct.slab_stats_automove* %34, i32 0, i32 3
  %36 = load i64, i64* %35, align 8
  %37 = load %struct.slab_stats_automove*, %struct.slab_stats_automove** %5, align 8
  %38 = getelementptr inbounds %struct.slab_stats_automove, %struct.slab_stats_automove* %37, i32 0, i32 0
  %39 = load i32, i32* %38, align 8
  %40 = zext i32 %39 to i64
  %41 = mul nsw i64 %36, %40
  %42 = sitofp i64 %41 to double
  %43 = load %struct.slab_automove.433*, %struct.slab_automove.433** %2, align 8
  %44 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %43, i32 0, i32 8
  %45 = load double, double* %44, align 8
  %46 = fmul double %42, %45
  %47 = fptoui double %46 to i32
  store i32 %47, i32* %6, align 4
  %48 = load %struct.slab_stats_automove*, %struct.slab_stats_automove** %5, align 8
  %49 = getelementptr inbounds %struct.slab_stats_automove, %struct.slab_stats_automove* %48, i32 0, i32 0
  %50 = load i32, i32* %49, align 8
  %51 = uitofp i32 %50 to double
  %52 = fmul double %51, 1.500000e+00
  %53 = load i32, i32* %6, align 4
  %54 = uitofp i32 %53 to double
  %55 = fcmp ogt double %52, %54
  br i1 %55, label %56, label %63

56:                                               ; preds = %21
  %57 = load %struct.slab_stats_automove*, %struct.slab_stats_automove** %5, align 8
  %58 = getelementptr inbounds %struct.slab_stats_automove, %struct.slab_stats_automove* %57, i32 0, i32 0
  %59 = load i32, i32* %58, align 8
  %60 = uitofp i32 %59 to double
  %61 = fmul double %60, 1.500000e+00
  %62 = fptoui double %61 to i32
  store i32 %62, i32* %6, align 4
  br label %63

63:                                               ; preds = %56, %21
  %64 = load i32, i32* %6, align 4
  %65 = load %struct.slab_automove.433*, %struct.slab_automove.433** %2, align 8
  %66 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %65, i32 0, i32 10
  %67 = load i32, i32* %4, align 4
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds [64 x i32], [64 x i32]* %66, i64 0, i64 %68
  store i32 %64, i32* %69, align 4
  %70 = load %struct.slab_automove.433*, %struct.slab_automove.433** %2, align 8
  %71 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %70, i32 0, i32 2
  %72 = load %struct.settings*, %struct.settings** %71, align 8
  %73 = getelementptr inbounds %struct.settings, %struct.settings* %72, i32 0, i32 71
  %74 = load i32, i32* %4, align 4
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds [64 x i32], [64 x i32]* %73, i64 0, i64 %75
  %77 = load i32, i32* %76, align 4
  %78 = load i32, i32* %6, align 4
  %79 = icmp ne i32 %77, %78
  br i1 %79, label %80, label %94

80:                                               ; preds = %63
  %81 = load %struct.slab_automove.433*, %struct.slab_automove.433** %2, align 8
  %82 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %81, i32 0, i32 9
  %83 = load i8, i8* %82, align 8
  %84 = trunc i8 %83 to i1
  br i1 %84, label %85, label %94

85:                                               ; preds = %80
  %86 = load i32, i32* %6, align 4
  %87 = load %struct.slab_automove.433*, %struct.slab_automove.433** %2, align 8
  %88 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %87, i32 0, i32 2
  %89 = load %struct.settings*, %struct.settings** %88, align 8
  %90 = getelementptr inbounds %struct.settings, %struct.settings* %89, i32 0, i32 71
  %91 = load i32, i32* %4, align 4
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds [64 x i32], [64 x i32]* %90, i64 0, i64 %92
  store i32 %86, i32* %93, align 4
  br label %94

94:                                               ; preds = %85, %80, %63
  br label %95

95:                                               ; preds = %94
  %96 = load i32, i32* %4, align 4
  %97 = add nsw i32 %96, 1
  store i32 %97, i32* %4, align 4
  br label %18, !llvm.loop !234

98:                                               ; preds = %18
  %99 = load %struct.slab_automove.433*, %struct.slab_automove.433** %2, align 8
  %100 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %99, i32 0, i32 14
  %101 = getelementptr inbounds [64 x %struct.slab_stats_automove], [64 x %struct.slab_stats_automove]* %100, i64 0, i64 0
  %102 = getelementptr inbounds %struct.slab_stats_automove, %struct.slab_stats_automove* %101, i32 0, i32 3
  %103 = load i64, i64* %102, align 8
  %104 = load i32, i32* %3, align 4
  %105 = zext i32 %104 to i64
  %106 = add nsw i64 %105, %103
  %107 = trunc i64 %106 to i32
  store i32 %107, i32* %3, align 4
  %108 = load i32, i32* %3, align 4
  %109 = uitofp i32 %108 to double
  %110 = load %struct.slab_automove.433*, %struct.slab_automove.433** %2, align 8
  %111 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %110, i32 0, i32 8
  %112 = load double, double* %111, align 8
  %113 = fmul double %109, %112
  %114 = fptoui double %113 to i32
  %115 = load %struct.slab_automove.433*, %struct.slab_automove.433** %2, align 8
  %116 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %115, i32 0, i32 10
  %117 = getelementptr inbounds [64 x i32], [64 x i32]* %116, i64 0, i64 0
  store i32 %114, i32* %117, align 4
  br label %118

118:                                              ; preds = %98, %13
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.window_data.432* @get_window_data(%struct.slab_automove.433* %0, i32 %1) #0 {
  %3 = alloca %struct.slab_automove.433*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store %struct.slab_automove.433* %0, %struct.slab_automove.433** %3, align 8
  store i32 %1, i32* %4, align 4
  %6 = load i32, i32* %4, align 4
  %7 = load %struct.slab_automove.433*, %struct.slab_automove.433** %3, align 8
  %8 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %7, i32 0, i32 3
  %9 = load i32, i32* %8, align 8
  %10 = mul i32 %6, %9
  store i32 %10, i32* %5, align 4
  %11 = load %struct.slab_automove.433*, %struct.slab_automove.433** %3, align 8
  %12 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %11, i32 0, i32 0
  %13 = load %struct.window_data.432*, %struct.window_data.432** %12, align 8
  %14 = load i32, i32* %5, align 4
  %15 = load %struct.slab_automove.433*, %struct.slab_automove.433** %3, align 8
  %16 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %15, i32 0, i32 4
  %17 = load i32, i32* %16, align 4
  %18 = load %struct.slab_automove.433*, %struct.slab_automove.433** %3, align 8
  %19 = getelementptr inbounds %struct.slab_automove.433, %struct.slab_automove.433* %18, i32 0, i32 3
  %20 = load i32, i32* %19, align 8
  %21 = urem i32 %17, %20
  %22 = add i32 %14, %21
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds %struct.window_data.432, %struct.window_data.432* %13, i64 %23
  ret %struct.window_data.432* %24
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @window_sum.1352(%struct.window_data.432* %0, %struct.window_data.432* %1, i32 %2) #0 {
  %4 = alloca %struct.window_data.432*, align 8
  %5 = alloca %struct.window_data.432*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.window_data.432*, align 8
  store %struct.window_data.432* %0, %struct.window_data.432** %4, align 8
  store %struct.window_data.432* %1, %struct.window_data.432** %5, align 8
  store i32 %2, i32* %6, align 4
  store i32 0, i32* %7, align 4
  br label %9

9:                                                ; preds = %53, %3
  %10 = load i32, i32* %7, align 4
  %11 = load i32, i32* %6, align 4
  %12 = icmp ult i32 %10, %11
  br i1 %12, label %13, label %56

13:                                               ; preds = %9
  %14 = load %struct.window_data.432*, %struct.window_data.432** %4, align 8
  %15 = load i32, i32* %7, align 4
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds %struct.window_data.432, %struct.window_data.432* %14, i64 %16
  store %struct.window_data.432* %17, %struct.window_data.432** %8, align 8
  %18 = load %struct.window_data.432*, %struct.window_data.432** %8, align 8
  %19 = getelementptr inbounds %struct.window_data.432, %struct.window_data.432* %18, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = load %struct.window_data.432*, %struct.window_data.432** %5, align 8
  %22 = getelementptr inbounds %struct.window_data.432, %struct.window_data.432* %21, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, %20
  store i64 %24, i64* %22, align 8
  %25 = load %struct.window_data.432*, %struct.window_data.432** %8, align 8
  %26 = getelementptr inbounds %struct.window_data.432, %struct.window_data.432* %25, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = load %struct.window_data.432*, %struct.window_data.432** %5, align 8
  %29 = getelementptr inbounds %struct.window_data.432, %struct.window_data.432* %28, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, %27
  store i64 %31, i64* %29, align 8
  %32 = load %struct.window_data.432*, %struct.window_data.432** %8, align 8
  %33 = getelementptr inbounds %struct.window_data.432, %struct.window_data.432* %32, i32 0, i32 2
  %34 = load i64, i64* %33, align 8
  %35 = load %struct.window_data.432*, %struct.window_data.432** %5, align 8
  %36 = getelementptr inbounds %struct.window_data.432, %struct.window_data.432* %35, i32 0, i32 2
  %37 = load i64, i64* %36, align 8
  %38 = add i64 %37, %34
  store i64 %38, i64* %36, align 8
  %39 = load %struct.window_data.432*, %struct.window_data.432** %8, align 8
  %40 = getelementptr inbounds %struct.window_data.432, %struct.window_data.432* %39, i32 0, i32 3
  %41 = load i32, i32* %40, align 8
  %42 = load %struct.window_data.432*, %struct.window_data.432** %5, align 8
  %43 = getelementptr inbounds %struct.window_data.432, %struct.window_data.432* %42, i32 0, i32 3
  %44 = load i32, i32* %43, align 8
  %45 = add i32 %44, %41
  store i32 %45, i32* %43, align 8
  %46 = load %struct.window_data.432*, %struct.window_data.432** %8, align 8
  %47 = getelementptr inbounds %struct.window_data.432, %struct.window_data.432* %46, i32 0, i32 4
  %48 = load i32, i32* %47, align 4
  %49 = load %struct.window_data.432*, %struct.window_data.432** %5, align 8
  %50 = getelementptr inbounds %struct.window_data.432, %struct.window_data.432* %49, i32 0, i32 4
  %51 = load i32, i32* %50, align 4
  %52 = add i32 %51, %48
  store i32 %52, i32* %50, align 4
  br label %53

53:                                               ; preds = %13
  %54 = load i32, i32* %7, align 4
  %55 = add nsw i32 %54, 1
  store i32 %55, i32* %7, align 4
  br label %9, !llvm.loop !235

56:                                               ; preds = %9
  ret void
}

attributes #0 = { noinline nounwind optnone uwtable "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nofree nosync nounwind willreturn writeonly }
attributes #2 = { nounwind "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nofree nosync nounwind willreturn }
attributes #5 = { nounwind readnone willreturn "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly willreturn "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nosync nounwind willreturn }
attributes #9 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #10 = { noinline nounwind optnone uwtable "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { inaccessiblemem_or_argmemonly nofree nosync nounwind willreturn }
attributes #12 = { nounwind readnone }
attributes #13 = { noreturn "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind }
attributes #15 = { nounwind readnone willreturn }
attributes #16 = { nounwind readonly willreturn }
attributes #17 = { noreturn nounwind }
attributes #18 = { noreturn }

!llvm.ident = !{!0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0}
!llvm.module.flags = !{!1}

!0 = !{!"clang version 12.0.1 (https://github.com/llvm/llvm-project.git fed41342a82f5a3a9201819a82bf7a48313e296b)"}
!1 = !{i32 1, !"wchar_size", i32 4}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.mustprogress"}
!4 = distinct !{!4, !3}
!5 = distinct !{!5, !3}
!6 = distinct !{!6, !3}
!7 = distinct !{!7, !3}
!8 = distinct !{!8, !3}
!9 = distinct !{!9, !3}
!10 = distinct !{!10, !3}
!11 = distinct !{!11, !3}
!12 = distinct !{!12, !3}
!13 = distinct !{!13, !3}
!14 = distinct !{!14, !3}
!15 = distinct !{!15, !3}
!16 = distinct !{!16, !3}
!17 = distinct !{!17, !3}
!18 = distinct !{!18, !3}
!19 = distinct !{!19, !3}
!20 = distinct !{!20, !3}
!21 = distinct !{!21, !3}
!22 = distinct !{!22, !3}
!23 = distinct !{!23, !3}
!24 = distinct !{!24, !3}
!25 = distinct !{!25, !3}
!26 = distinct !{!26, !3}
!27 = distinct !{!27, !3}
!28 = distinct !{!28, !3}
!29 = distinct !{!29, !3}
!30 = distinct !{!30, !3}
!31 = distinct !{!31, !3}
!32 = distinct !{!32, !3}
!33 = distinct !{!33, !3}
!34 = distinct !{!34, !3}
!35 = distinct !{!35, !3}
!36 = distinct !{!36, !3}
!37 = distinct !{!37, !3}
!38 = distinct !{!38, !3}
!39 = distinct !{!39, !3}
!40 = distinct !{!40, !3}
!41 = distinct !{!41, !3}
!42 = distinct !{!42, !3}
!43 = distinct !{!43, !3}
!44 = distinct !{!44, !3}
!45 = distinct !{!45, !3}
!46 = distinct !{!46, !3}
!47 = distinct !{!47, !3}
!48 = distinct !{!48, !3}
!49 = distinct !{!49, !3}
!50 = distinct !{!50, !3}
!51 = distinct !{!51, !3}
!52 = distinct !{!52, !3}
!53 = distinct !{!53, !3}
!54 = distinct !{!54, !3}
!55 = distinct !{!55, !3}
!56 = distinct !{!56, !3}
!57 = distinct !{!57, !3}
!58 = distinct !{!58, !3}
!59 = distinct !{!59, !3}
!60 = distinct !{!60, !3}
!61 = distinct !{!61, !3}
!62 = distinct !{!62, !3}
!63 = distinct !{!63, !3}
!64 = distinct !{!64, !3}
!65 = distinct !{!65, !3}
!66 = distinct !{!66, !3}
!67 = distinct !{!67, !3}
!68 = distinct !{!68, !3}
!69 = distinct !{!69, !3}
!70 = distinct !{!70, !3}
!71 = distinct !{!71, !3}
!72 = distinct !{!72, !3}
!73 = distinct !{!73, !3}
!74 = distinct !{!74, !3}
!75 = distinct !{!75, !3}
!76 = distinct !{!76, !3}
!77 = distinct !{!77, !3}
!78 = distinct !{!78, !3}
!79 = distinct !{!79, !3}
!80 = distinct !{!80, !3}
!81 = distinct !{!81, !3}
!82 = distinct !{!82, !3}
!83 = distinct !{!83, !3}
!84 = distinct !{!84, !3}
!85 = distinct !{!85, !3}
!86 = distinct !{!86, !3}
!87 = distinct !{!87, !3}
!88 = distinct !{!88, !3}
!89 = distinct !{!89, !3}
!90 = distinct !{!90, !3}
!91 = distinct !{!91, !3}
!92 = distinct !{!92, !3}
!93 = distinct !{!93, !3}
!94 = distinct !{!94, !3}
!95 = distinct !{!95, !3}
!96 = distinct !{!96, !3}
!97 = distinct !{!97, !3}
!98 = distinct !{!98, !3}
!99 = distinct !{!99, !3}
!100 = distinct !{!100, !3}
!101 = distinct !{!101, !3}
!102 = distinct !{!102, !3}
!103 = distinct !{!103, !3}
!104 = distinct !{!104, !3}
!105 = distinct !{!105, !3}
!106 = distinct !{!106, !3}
!107 = distinct !{!107, !3}
!108 = distinct !{!108, !3}
!109 = distinct !{!109, !3}
!110 = distinct !{!110, !3}
!111 = distinct !{!111, !3}
!112 = distinct !{!112, !3}
!113 = distinct !{!113, !3}
!114 = distinct !{!114, !3}
!115 = distinct !{!115, !3}
!116 = distinct !{!116, !3}
!117 = distinct !{!117, !3}
!118 = distinct !{!118, !3}
!119 = distinct !{!119, !3}
!120 = distinct !{!120, !3}
!121 = distinct !{!121, !3}
!122 = distinct !{!122, !3}
!123 = distinct !{!123, !3}
!124 = distinct !{!124, !3}
!125 = distinct !{!125, !3}
!126 = distinct !{!126, !3}
!127 = distinct !{!127, !3}
!128 = distinct !{!128, !3}
!129 = distinct !{!129, !3}
!130 = distinct !{!130, !3}
!131 = distinct !{!131, !3}
!132 = distinct !{!132, !3}
!133 = distinct !{!133, !3}
!134 = distinct !{!134, !3}
!135 = distinct !{!135, !3}
!136 = distinct !{!136, !3}
!137 = distinct !{!137, !3}
!138 = distinct !{!138, !3}
!139 = distinct !{!139, !3}
!140 = distinct !{!140, !3}
!141 = distinct !{!141, !3}
!142 = distinct !{!142, !3}
!143 = distinct !{!143, !3}
!144 = distinct !{!144, !3}
!145 = distinct !{!145, !3}
!146 = distinct !{!146, !3}
!147 = distinct !{!147, !3}
!148 = distinct !{!148, !3}
!149 = distinct !{!149, !3}
!150 = distinct !{!150, !3}
!151 = distinct !{!151, !3}
!152 = distinct !{!152, !3}
!153 = distinct !{!153, !3}
!154 = distinct !{!154, !3}
!155 = distinct !{!155, !3}
!156 = distinct !{!156, !3}
!157 = distinct !{!157, !3}
!158 = distinct !{!158, !3}
!159 = distinct !{!159, !3}
!160 = distinct !{!160, !3}
!161 = distinct !{!161, !3}
!162 = distinct !{!162, !3}
!163 = distinct !{!163, !3}
!164 = distinct !{!164, !3}
!165 = distinct !{!165, !3}
!166 = distinct !{!166, !3}
!167 = distinct !{!167, !3}
!168 = distinct !{!168, !3}
!169 = distinct !{!169, !3}
!170 = distinct !{!170, !3}
!171 = distinct !{!171, !3}
!172 = distinct !{!172, !3}
!173 = distinct !{!173, !3}
!174 = distinct !{!174, !3}
!175 = distinct !{!175, !3}
!176 = distinct !{!176, !3}
!177 = distinct !{!177, !3}
!178 = distinct !{!178, !3}
!179 = distinct !{!179, !3}
!180 = distinct !{!180, !3}
!181 = distinct !{!181, !3}
!182 = distinct !{!182, !3}
!183 = distinct !{!183, !3}
!184 = distinct !{!184, !3}
!185 = distinct !{!185, !3}
!186 = distinct !{!186, !3}
!187 = distinct !{!187, !3}
!188 = distinct !{!188, !3}
!189 = distinct !{!189, !3}
!190 = distinct !{!190, !3}
!191 = !{i32 -2147248384}
!192 = !{i32 6375}
!193 = distinct !{!193, !3}
!194 = !{i32 6980, i32 7002, i32 7055}
!195 = distinct !{!195, !3}
!196 = distinct !{!196, !3}
!197 = !{i32 7731, i32 7753, i32 7807}
!198 = distinct !{!198, !3}
!199 = distinct !{!199, !3}
!200 = !{i32 8422}
!201 = distinct !{!201, !3}
!202 = !{i32 8671}
!203 = distinct !{!203, !3}
!204 = distinct !{!204, !3}
!205 = distinct !{!205, !3}
!206 = distinct !{!206, !3}
!207 = distinct !{!207, !3}
!208 = distinct !{!208, !3}
!209 = distinct !{!209, !3}
!210 = distinct !{!210, !3}
!211 = distinct !{!211, !3}
!212 = distinct !{!212, !3}
!213 = distinct !{!213, !3}
!214 = distinct !{!214, !3}
!215 = distinct !{!215, !3}
!216 = distinct !{!216, !3}
!217 = distinct !{!217, !3}
!218 = distinct !{!218, !3}
!219 = distinct !{!219, !3}
!220 = distinct !{!220, !3}
!221 = distinct !{!221, !3}
!222 = distinct !{!222, !3}
!223 = distinct !{!223, !3}
!224 = distinct !{!224, !3}
!225 = distinct !{!225, !3}
!226 = distinct !{!226, !3}
!227 = distinct !{!227, !3}
!228 = distinct !{!228, !3}
!229 = distinct !{!229, !3}
!230 = distinct !{!230, !3}
!231 = distinct !{!231, !3}
!232 = distinct !{!232, !3}
!233 = distinct !{!233, !3}
!234 = distinct !{!234, !3}
!235 = distinct !{!235, !3}
