; ModuleID = 'wc.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.infomap = type { i8*, i8* }
%struct.option = type { i8*, i32, i32*, i32 }
%struct.quoting_options = type { i32, i32, [8 x i32], i8*, i8* }
%struct.slotvec = type { i64, i8* }
%struct.fstatus = type { i32, %struct.stat }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.Tokens = type { i64, i8**, i64*, %struct.obstack, %struct.obstack, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, %union.anon, i64, %union.anon.0, %union.anon.1, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [0 x i8] }
%union.anon = type { i64 }
%union.anon.0 = type { i8* (i64)* }
%union.anon.1 = type { void (i8*)* }
%struct.argv_iterator = type { %struct._IO_FILE*, i64, i8*, i64, i8**, i8** }
%struct.__mbstate_t = type { i32, %union.anon.2 }
%union.anon.2 = type { i32 }
%struct.mbchar = type { i8*, i64, i8, i32, [24 x i8] }
%struct.sysinfo = type { i64, [3 x i64], i64, i64, i64, i64, i64, i64, i16, i16, i64, i64, i32, [0 x i8] }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

@stderr = external dso_local global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [39 x i8] c"Try '%s --help' for more information.\0A\00", align 1
@.str.1 = private unnamed_addr constant [71 x i8] c"Usage: %s [OPTION]... [FILE]...\0A  or:  %s [OPTION]... --files0-from=F\0A\00", align 1
@stdout = external dso_local global %struct._IO_FILE*, align 8
@.str.2 = private unnamed_addr constant [184 x i8] c"Print newline, word, and byte counts for each FILE, and a total line if\0Amore than one FILE is specified.  A word is a non-zero-length sequence of\0Acharacters delimited by white space.\0A\00", align 1
@.str.3 = private unnamed_addr constant [301 x i8] c"\0AThe options below may be used to select which counts are printed, always in\0Athe following order: newline, word, character, byte, maximum line length.\0A  -c, --bytes            print the byte counts\0A  -m, --chars            print the character counts\0A  -l, --lines            print the newline counts\0A\00", align 1
@.str.4 = private unnamed_addr constant [301 x i8] c"      --files0-from=F    read input from the files specified by\0A                           NUL-terminated names in file F;\0A                           If F is - then read names from standard input\0A  -L, --max-line-length  print the maximum display width\0A  -w, --words            print the word counts\0A\00", align 1
@.str.5 = private unnamed_addr constant [45 x i8] c"      --help     display this help and exit\0A\00", align 1
@.str.6 = private unnamed_addr constant [54 x i8] c"      --version  output version information and exit\0A\00", align 1
@.str.7 = private unnamed_addr constant [3 x i8] c"wc\00", align 1
@__const.emit_ancillary_info.infomap = private unnamed_addr constant [7 x %struct.infomap] [%struct.infomap { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.33, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35, i32 0, i32 0) }, %struct.infomap zeroinitializer], align 16
@.str.39 = private unnamed_addr constant [23 x i8] c"\0A%s online help: <%s>\0A\00", align 1
@.str.11 = private unnamed_addr constant [14 x i8] c"GNU coreutils\00", align 1
@.str.40 = private unnamed_addr constant [40 x i8] c"https://www.gnu.org/software/coreutils/\00", align 1
@.str.41 = private unnamed_addr constant [4 x i8] c"en_\00", align 1
@.str.42 = private unnamed_addr constant [71 x i8] c"Report any translation bugs to <https://translationproject.org/team/>\0A\00", align 1
@.str.43 = private unnamed_addr constant [27 x i8] c"Full documentation <%s%s>\0A\00", align 1
@.str.45 = private unnamed_addr constant [12 x i8] c" invocation\00", align 1
@.str.8 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.44 = private unnamed_addr constant [51 x i8] c"or available locally via: info '(coreutils) %s%s'\0A\00", align 1
@.str.30 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.31 = private unnamed_addr constant [16 x i8] c"test invocation\00", align 1
@.str.32 = private unnamed_addr constant [10 x i8] c"coreutils\00", align 1
@.str.33 = private unnamed_addr constant [22 x i8] c"Multi-call invocation\00", align 1
@.str.34 = private unnamed_addr constant [10 x i8] c"sha224sum\00", align 1
@.str.35 = private unnamed_addr constant [15 x i8] c"sha2 utilities\00", align 1
@.str.36 = private unnamed_addr constant [10 x i8] c"sha256sum\00", align 1
@.str.37 = private unnamed_addr constant [10 x i8] c"sha384sum\00", align 1
@.str.38 = private unnamed_addr constant [10 x i8] c"sha512sum\00", align 1
@.str.29 = private unnamed_addr constant [56 x i8] c"\0AWith no FILE, or when FILE is -, read standard input.\0A\00", align 1
@page_size = internal global i64 0, align 8, !dbg !0
@.str.9 = private unnamed_addr constant [16 x i8] c"POSIXLY_CORRECT\00", align 1
@posixly_correct = internal global i8 0, align 1, !dbg !102
@print_bytes = internal global i8 0, align 1, !dbg !94
@print_chars = internal global i8 0, align 1, !dbg !92
@print_words = internal global i8 0, align 1, !dbg !90
@print_lines = internal global i8 0, align 1, !dbg !87
@print_linelength = internal global i8 0, align 1, !dbg !96
@max_line_length = internal global i64 0, align 8, !dbg !85
@total_bytes = internal global i64 0, align 8, !dbg !83
@total_chars = internal global i64 0, align 8, !dbg !81
@total_words = internal global i64 0, align 8, !dbg !79
@total_lines = internal global i64 0, align 8, !dbg !73
@.str.10 = private unnamed_addr constant [6 x i8] c"clLmw\00", align 1
@longopts = internal constant [9 x %struct.option] [%struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.46, i32 0, i32 0), i32 0, i32* null, i32 99 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.47, i32 0, i32 0), i32 0, i32* null, i32 109 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.48, i32 0, i32 0), i32 0, i32* null, i32 108 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.49, i32 0, i32 0), i32 0, i32* null, i32 119 }, %struct.option { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.50, i32 0, i32 0), i32 1, i32* null, i32 128 }, %struct.option { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.51, i32 0, i32 0), i32 0, i32* null, i32 76 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.52, i32 0, i32 0), i32 0, i32* null, i32 -130 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.53, i32 0, i32 0), i32 0, i32* null, i32 -131 }, %struct.option zeroinitializer], align 16, !dbg !104
@optarg = external dso_local global i8*, align 8
@.str.12 = private unnamed_addr constant [11 x i8] c"Paul Rubin\00", align 1
@.str.13 = private unnamed_addr constant [16 x i8] c"David MacKenzie\00", align 1
@optind = external dso_local global i32, align 4
@.str.14 = private unnamed_addr constant [17 x i8] c"extra operand %s\00", align 1
@.str.15 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.16 = private unnamed_addr constant [52 x i8] c"file operands cannot be combined with --files0-from\00", align 1
@.str.17 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@stdin = external dso_local global %struct._IO_FILE*, align 8
@.str.18 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.19 = private unnamed_addr constant [27 x i8] c"cannot open %s for reading\00", align 1
@.str.20 = private unnamed_addr constant [31 x i8] c"cannot read file names from %s\00", align 1
@main.stdin_only = internal global [1 x i8*] zeroinitializer, align 8, !dbg !63
@number_width = internal global i32 0, align 4, !dbg !98
@.str.21 = private unnamed_addr constant [15 x i8] c"%s: read error\00", align 1
@.str.22 = private unnamed_addr constant [40 x i8] c"!\22unexpected error code from argv_iter\22\00", align 1
@.str.23 = private unnamed_addr constant [12 x i8] c"../src/wc.c\00", align 1
@__PRETTY_FUNCTION__.main = private unnamed_addr constant [23 x i8] c"int main(int, char **)\00", align 1
@.str.24 = private unnamed_addr constant [63 x i8] c"when reading file names from stdin, no file name of %s allowed\00", align 1
@.str.25 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.26 = private unnamed_addr constant [30 x i8] c"invalid zero-length file name\00", align 1
@.str.27 = private unnamed_addr constant [11 x i8] c"%s:%lu: %s\00", align 1
@.str.28 = private unnamed_addr constant [6 x i8] c"total\00", align 1
@have_read_stdin = internal global i8 0, align 1, !dbg !100
@write_counts.format_sp_int = internal constant [5 x i8] c" %*s\00", align 1, !dbg !118
@.str.55 = private unnamed_addr constant [4 x i8] c" %s\00", align 1
@.str.54 = private unnamed_addr constant [15 x i8] c"standard input\00", align 1
@.str.46 = private unnamed_addr constant [6 x i8] c"bytes\00", align 1
@.str.47 = private unnamed_addr constant [6 x i8] c"chars\00", align 1
@.str.48 = private unnamed_addr constant [6 x i8] c"lines\00", align 1
@.str.49 = private unnamed_addr constant [6 x i8] c"words\00", align 1
@.str.50 = private unnamed_addr constant [12 x i8] c"files0-from\00", align 1
@.str.51 = private unnamed_addr constant [16 x i8] c"max-line-length\00", align 1
@.str.52 = private unnamed_addr constant [5 x i8] c"help\00", align 1
@.str.53 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@Version = dso_local global i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.56, i32 0, i32 0), align 8, !dbg !126
@.str.56 = private unnamed_addr constant [5 x i8] c"8.32\00", align 1
@file_name = internal global i8* null, align 8, !dbg !131
@ignore_EPIPE = internal global i8 0, align 1, !dbg !137
@.str.69 = private unnamed_addr constant [12 x i8] c"write error\00", align 1
@.str.1.70 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.2.71 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@exit_failure = dso_local global i32 1, align 4, !dbg !139
@is_basic_table = dso_local constant [8 x i32] [i32 6656, i32 -17, i32 -2, i32 2147483646, i32 0, i32 0, i32 0, i32 0], align 16, !dbg !145
@program_name = dso_local global i8* null, align 8, !dbg !156
@.str.86 = private unnamed_addr constant [56 x i8] c"A NULL argv[0] was passed through an exec system call.\0A\00", align 1
@.str.1.87 = private unnamed_addr constant [8 x i8] c"/.libs/\00", align 1
@.str.2.88 = private unnamed_addr constant [4 x i8] c"lt-\00", align 1
@program_invocation_short_name = external dso_local global i8*, align 8
@program_invocation_name = external dso_local global i8*, align 8
@quoting_style_args = dso_local constant [11 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.89, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.90, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2.91, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3.92, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4.93, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.94, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6.95, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.96, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8.97, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9.98, i32 0, i32 0), i8* null], align 16, !dbg !162
@.str.89 = private unnamed_addr constant [8 x i8] c"literal\00", align 1
@.str.1.90 = private unnamed_addr constant [6 x i8] c"shell\00", align 1
@.str.2.91 = private unnamed_addr constant [13 x i8] c"shell-always\00", align 1
@.str.3.92 = private unnamed_addr constant [13 x i8] c"shell-escape\00", align 1
@.str.4.93 = private unnamed_addr constant [20 x i8] c"shell-escape-always\00", align 1
@.str.5.94 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@.str.6.95 = private unnamed_addr constant [8 x i8] c"c-maybe\00", align 1
@.str.7.96 = private unnamed_addr constant [7 x i8] c"escape\00", align 1
@.str.8.97 = private unnamed_addr constant [7 x i8] c"locale\00", align 1
@.str.9.98 = private unnamed_addr constant [8 x i8] c"clocale\00", align 1
@quoting_style_vals = dso_local constant [10 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9], align 16, !dbg !174
@quote_quoting_options = dso_local global %struct.quoting_options { i32 8, i32 0, [8 x i32] zeroinitializer, i8* null, i8* null }, align 8, !dbg !180
@default_quoting_options = internal global %struct.quoting_options zeroinitializer, align 8, !dbg !190
@.str.10.99 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.11.100 = private unnamed_addr constant [2 x i8] c"`\00", align 1
@.str.12.101 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@.str.13.102 = private unnamed_addr constant [6 x i8] c"UTF-8\00", align 1
@.str.14.103 = private unnamed_addr constant [4 x i8] c"\E2\80\98\00", align 1
@.str.15.104 = private unnamed_addr constant [4 x i8] c"\E2\80\99\00", align 1
@.str.16.105 = private unnamed_addr constant [8 x i8] c"GB18030\00", align 1
@.str.17.106 = private unnamed_addr constant [4 x i8] c"\A1\07e\00", align 1
@.str.18.107 = private unnamed_addr constant [3 x i8] c"\A1\AF\00", align 1
@slotvec = internal global %struct.slotvec* @slotvec0, align 8, !dbg !197
@nslots = internal global i32 1, align 4, !dbg !204
@slot0 = internal global [256 x i8] zeroinitializer, align 16, !dbg !192
@slotvec0 = internal global %struct.slotvec { i64 256, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i32 0, i32 0) }, align 8, !dbg !206
@.str.122 = private unnamed_addr constant [12 x i8] c"%s (%s) %s\0A\00", align 1
@.str.1.123 = private unnamed_addr constant [7 x i8] c"%s %s\0A\00", align 1
@.str.2.124 = private unnamed_addr constant [4 x i8] c"(C)\00", align 1
@.str.3.125 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.4.126 = private unnamed_addr constant [171 x i8] c"License GPLv3+: GNU GPL version 3 or later <%s>.\0AThis is free software: you are free to change and redistribute it.\0AThere is NO WARRANTY, to the extent permitted by law.\0A\00", align 1
@.str.5.127 = private unnamed_addr constant [34 x i8] c"https://gnu.org/licenses/gpl.html\00", align 1
@.str.6.128 = private unnamed_addr constant [16 x i8] c"Written by %s.\0A\00", align 1
@.str.7.129 = private unnamed_addr constant [23 x i8] c"Written by %s and %s.\0A\00", align 1
@.str.8.130 = private unnamed_addr constant [28 x i8] c"Written by %s, %s, and %s.\0A\00", align 1
@.str.9.131 = private unnamed_addr constant [32 x i8] c"Written by %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.10.132 = private unnamed_addr constant [36 x i8] c"Written by %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.11.133 = private unnamed_addr constant [40 x i8] c"Written by %s, %s, %s,\0A%s, %s, and %s.\0A\00", align 1
@.str.12.134 = private unnamed_addr constant [44 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, and %s.\0A\00", align 1
@.str.13.135 = private unnamed_addr constant [48 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.14.136 = private unnamed_addr constant [52 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.15.137 = private unnamed_addr constant [60 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, %s, and others.\0A\00", align 1
@.str.16.140 = private unnamed_addr constant [20 x i8] c"Report bugs to: %s\0A\00", align 1
@.str.17.141 = private unnamed_addr constant [22 x i8] c"bug-coreutils@gnu.org\00", align 1
@.str.18.142 = private unnamed_addr constant [20 x i8] c"%s home page: <%s>\0A\00", align 1
@.str.19.143 = private unnamed_addr constant [14 x i8] c"GNU coreutils\00", align 1
@.str.20.144 = private unnamed_addr constant [40 x i8] c"https://www.gnu.org/software/coreutils/\00", align 1
@.str.21.145 = private unnamed_addr constant [39 x i8] c"General help using GNU software: <%s>\0A\00", align 1
@.str.22.146 = private unnamed_addr constant [29 x i8] c"https://www.gnu.org/gethelp/\00", align 1
@version_etc_copyright = dso_local constant [47 x i8] c"Copyright %s %d Free Software Foundation, Inc.\00", align 16, !dbg !212
@.str.159 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.1.160 = private unnamed_addr constant [17 x i8] c"memory exhausted\00", align 1
@obstack_alloc_failed_handler = dso_local global void ()* @print_and_abort, align 8, !dbg !220
@.str.171 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.1.172 = private unnamed_addr constant [17 x i8] c"memory exhausted\00", align 1
@.str.187 = private unnamed_addr constant [2 x i8] c"C\00", align 1
@.str.1.188 = private unnamed_addr constant [6 x i8] c"POSIX\00", align 1
@.str.191 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1.192 = private unnamed_addr constant [6 x i8] c"ASCII\00", align 1

; Function Attrs: noinline noreturn nounwind optnone uwtable
define dso_local void @usage(i32 %0) #0 !dbg !915 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !918, metadata !DIExpression()), !dbg !919
  %3 = load i32, i32* %2, align 4, !dbg !920
  %4 = icmp ne i32 %3, 0, !dbg !922
  br i1 %4, label %5, label %11, !dbg !923

5:                                                ; preds = %1
  br label %6, !dbg !924

6:                                                ; preds = %5
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !925
  %8 = load i8*, i8** @program_name, align 8, !dbg !925
  %9 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0), i8* %8), !dbg !925
  br label %10, !dbg !925

10:                                               ; preds = %6
  br label %25, !dbg !925

11:                                               ; preds = %1
  %12 = load i8*, i8** @program_name, align 8, !dbg !927
  %13 = load i8*, i8** @program_name, align 8, !dbg !929
  %14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.1, i64 0, i64 0), i8* %12, i8* %13), !dbg !930
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !931
  %16 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([184 x i8], [184 x i8]* @.str.2, i64 0, i64 0), %struct._IO_FILE* %15), !dbg !931
  call void @emit_stdin_note(), !dbg !932
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !933
  %18 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([301 x i8], [301 x i8]* @.str.3, i64 0, i64 0), %struct._IO_FILE* %17), !dbg !933
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !934
  %20 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([301 x i8], [301 x i8]* @.str.4, i64 0, i64 0), %struct._IO_FILE* %19), !dbg !934
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !935
  %22 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.5, i64 0, i64 0), %struct._IO_FILE* %21), !dbg !935
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !936
  %24 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.6, i64 0, i64 0), %struct._IO_FILE* %23), !dbg !936
  call void @emit_ancillary_info(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0)), !dbg !937
  br label %25

25:                                               ; preds = %11, %10
  %26 = load i32, i32* %2, align 4, !dbg !938
  call void @exit(i32 %26) #13, !dbg !939
  unreachable, !dbg !939
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #2

declare dso_local i32 @printf(i8*, ...) #2

declare dso_local i32 @fputs_unlocked(i8*, %struct._IO_FILE*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_stdin_note() #3 !dbg !940 {
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !942
  %2 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.29, i64 0, i64 0), %struct._IO_FILE* %1), !dbg !942
  ret void, !dbg !943
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_ancillary_info(i8* %0) #3 !dbg !944 {
  %2 = alloca i8*, align 8
  %3 = alloca [7 x %struct.infomap], align 16
  %4 = alloca i8*, align 8
  %5 = alloca %struct.infomap*, align 8
  %6 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !947, metadata !DIExpression()), !dbg !948
  call void @llvm.dbg.declare(metadata [7 x %struct.infomap]* %3, metadata !949, metadata !DIExpression()), !dbg !958
  %7 = bitcast [7 x %struct.infomap]* %3 to i8*, !dbg !958
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %7, i8* align 16 bitcast ([7 x %struct.infomap]* @__const.emit_ancillary_info.infomap to i8*), i64 112, i1 false), !dbg !958
  call void @llvm.dbg.declare(metadata i8** %4, metadata !959, metadata !DIExpression()), !dbg !960
  %8 = load i8*, i8** %2, align 8, !dbg !961
  store i8* %8, i8** %4, align 8, !dbg !960
  call void @llvm.dbg.declare(metadata %struct.infomap** %5, metadata !962, metadata !DIExpression()), !dbg !964
  %9 = getelementptr inbounds [7 x %struct.infomap], [7 x %struct.infomap]* %3, i64 0, i64 0, !dbg !965
  store %struct.infomap* %9, %struct.infomap** %5, align 8, !dbg !964
  br label %10, !dbg !966

10:                                               ; preds = %25, %1
  %11 = load %struct.infomap*, %struct.infomap** %5, align 8, !dbg !967
  %12 = getelementptr inbounds %struct.infomap, %struct.infomap* %11, i32 0, i32 0, !dbg !968
  %13 = load i8*, i8** %12, align 8, !dbg !968
  %14 = icmp ne i8* %13, null, !dbg !967
  br i1 %14, label %15, label %23, !dbg !969

15:                                               ; preds = %10
  %16 = load i8*, i8** %2, align 8, !dbg !970
  %17 = load %struct.infomap*, %struct.infomap** %5, align 8, !dbg !970
  %18 = getelementptr inbounds %struct.infomap, %struct.infomap* %17, i32 0, i32 0, !dbg !970
  %19 = load i8*, i8** %18, align 8, !dbg !970
  %20 = call i32 @strcmp(i8* %16, i8* %19) #14, !dbg !970
  %21 = icmp eq i32 %20, 0, !dbg !970
  %22 = xor i1 %21, true, !dbg !971
  br label %23

23:                                               ; preds = %15, %10
  %24 = phi i1 [ false, %10 ], [ %22, %15 ], !dbg !972
  br i1 %24, label %25, label %28, !dbg !966

25:                                               ; preds = %23
  %26 = load %struct.infomap*, %struct.infomap** %5, align 8, !dbg !973
  %27 = getelementptr inbounds %struct.infomap, %struct.infomap* %26, i32 1, !dbg !973
  store %struct.infomap* %27, %struct.infomap** %5, align 8, !dbg !973
  br label %10, !dbg !966, !llvm.loop !974

28:                                               ; preds = %23
  %29 = load %struct.infomap*, %struct.infomap** %5, align 8, !dbg !976
  %30 = getelementptr inbounds %struct.infomap, %struct.infomap* %29, i32 0, i32 1, !dbg !978
  %31 = load i8*, i8** %30, align 8, !dbg !978
  %32 = icmp ne i8* %31, null, !dbg !976
  br i1 %32, label %33, label %37, !dbg !979

33:                                               ; preds = %28
  %34 = load %struct.infomap*, %struct.infomap** %5, align 8, !dbg !980
  %35 = getelementptr inbounds %struct.infomap, %struct.infomap* %34, i32 0, i32 1, !dbg !981
  %36 = load i8*, i8** %35, align 8, !dbg !981
  store i8* %36, i8** %4, align 8, !dbg !982
  br label %37, !dbg !983

37:                                               ; preds = %33, %28
  %38 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.39, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.40, i64 0, i64 0)), !dbg !984
  call void @llvm.dbg.declare(metadata i8** %6, metadata !985, metadata !DIExpression()), !dbg !986
  %39 = call i8* @setlocale(i32 5, i8* null) #15, !dbg !987
  store i8* %39, i8** %6, align 8, !dbg !986
  %40 = load i8*, i8** %6, align 8, !dbg !988
  %41 = icmp ne i8* %40, null, !dbg !988
  br i1 %41, label %42, label %49, !dbg !990

42:                                               ; preds = %37
  %43 = load i8*, i8** %6, align 8, !dbg !991
  %44 = call i32 @strncmp(i8* %43, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.41, i64 0, i64 0), i64 3) #14, !dbg !991
  %45 = icmp ne i32 %44, 0, !dbg !991
  br i1 %45, label %46, label %49, !dbg !992

46:                                               ; preds = %42
  %47 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !993
  %48 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.42, i64 0, i64 0), %struct._IO_FILE* %47), !dbg !993
  br label %49, !dbg !995

49:                                               ; preds = %46, %42, %37
  %50 = load i8*, i8** %2, align 8, !dbg !996
  %51 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.40, i64 0, i64 0), i8* %50), !dbg !997
  %52 = load i8*, i8** %4, align 8, !dbg !998
  %53 = load i8*, i8** %4, align 8, !dbg !999
  %54 = load i8*, i8** %2, align 8, !dbg !1000
  %55 = icmp eq i8* %53, %54, !dbg !1001
  %56 = zext i1 %55 to i64, !dbg !999
  %57 = select i1 %55, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.45, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), !dbg !999
  %58 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.44, i64 0, i64 0), i8* %52, i8* %57), !dbg !1002
  ret void, !dbg !1003
}

; Function Attrs: noreturn nounwind
declare dso_local void @exit(i32) #4

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #5

; Function Attrs: nounwind readonly willreturn
declare dso_local i32 @strcmp(i8*, i8*) #6

; Function Attrs: nounwind
declare dso_local i8* @setlocale(i32, i8*) #7

; Function Attrs: nounwind readonly willreturn
declare dso_local i32 @strncmp(i8*, i8*, i64) #6

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @klee_dump_memory() #3 !dbg !1004 {
  ret void, !dbg !1005
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #3 !dbg !65 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i8, align 1
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  %9 = alloca i8**, align 8
  %10 = alloca i8*, align 8
  %11 = alloca %struct.fstatus*, align 8
  %12 = alloca %struct.Tokens, align 8
  %13 = alloca i8, align 1
  %14 = alloca %struct.argv_iterator*, align 8
  %15 = alloca %struct._IO_FILE*, align 8
  %16 = alloca %struct.stat, align 8
  %17 = alloca i32, align 4
  %18 = alloca i8, align 1
  %19 = alloca i32, align 4
  %20 = alloca i8*, align 8
  %21 = alloca i64, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !1006, metadata !DIExpression()), !dbg !1007
  store i8** %1, i8*** %5, align 8
  call void @llvm.dbg.declare(metadata i8*** %5, metadata !1008, metadata !DIExpression()), !dbg !1009
  call void @llvm.dbg.declare(metadata i8* %6, metadata !1010, metadata !DIExpression()), !dbg !1011
  call void @llvm.dbg.declare(metadata i32* %7, metadata !1012, metadata !DIExpression()), !dbg !1013
  call void @llvm.dbg.declare(metadata i64* %8, metadata !1014, metadata !DIExpression()), !dbg !1015
  call void @llvm.dbg.declare(metadata i8*** %9, metadata !1016, metadata !DIExpression()), !dbg !1017
  call void @llvm.dbg.declare(metadata i8** %10, metadata !1018, metadata !DIExpression()), !dbg !1019
  store i8* null, i8** %10, align 8, !dbg !1019
  call void @llvm.dbg.declare(metadata %struct.fstatus** %11, metadata !1020, metadata !DIExpression()), !dbg !1064
  call void @llvm.dbg.declare(metadata %struct.Tokens* %12, metadata !1065, metadata !DIExpression()), !dbg !1124
  %22 = load i8**, i8*** %5, align 8, !dbg !1125
  %23 = getelementptr inbounds i8*, i8** %22, i64 0, !dbg !1125
  %24 = load i8*, i8** %23, align 8, !dbg !1125
  call void @set_program_name(i8* %24), !dbg !1126
  %25 = call i8* @setlocale(i32 6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0)) #15, !dbg !1127
  %26 = call i32 @atexit(void ()* @close_stdout) #15, !dbg !1128
  %27 = call i32 @getpagesize() #16, !dbg !1129
  %28 = sext i32 %27 to i64, !dbg !1129
  store i64 %28, i64* @page_size, align 8, !dbg !1130
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1131
  %30 = call i32 @setvbuf(%struct._IO_FILE* %29, i8* null, i32 1, i64 0) #15, !dbg !1132
  %31 = call i8* @getenv(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.9, i64 0, i64 0)) #15, !dbg !1133
  %32 = icmp ne i8* %31, null, !dbg !1134
  %33 = zext i1 %32 to i8, !dbg !1135
  store i8 %33, i8* @posixly_correct, align 1, !dbg !1135
  store i8 0, i8* @print_bytes, align 1, !dbg !1136
  store i8 0, i8* @print_chars, align 1, !dbg !1137
  store i8 0, i8* @print_words, align 1, !dbg !1138
  store i8 0, i8* @print_lines, align 1, !dbg !1139
  store i8 0, i8* @print_linelength, align 1, !dbg !1140
  store i64 0, i64* @max_line_length, align 8, !dbg !1141
  store i64 0, i64* @total_bytes, align 8, !dbg !1142
  store i64 0, i64* @total_chars, align 8, !dbg !1143
  store i64 0, i64* @total_words, align 8, !dbg !1144
  store i64 0, i64* @total_lines, align 8, !dbg !1145
  br label %34, !dbg !1146

34:                                               ; preds = %53, %2
  %35 = load i32, i32* %4, align 4, !dbg !1147
  %36 = load i8**, i8*** %5, align 8, !dbg !1148
  %37 = call i32 @getopt_long(i32 %35, i8** %36, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i64 0, i64 0), %struct.option* getelementptr inbounds ([9 x %struct.option], [9 x %struct.option]* @longopts, i64 0, i64 0), i32* null) #15, !dbg !1149
  store i32 %37, i32* %7, align 4, !dbg !1150
  %38 = icmp ne i32 %37, -1, !dbg !1151
  br i1 %38, label %39, label %54, !dbg !1146

39:                                               ; preds = %34
  %40 = load i32, i32* %7, align 4, !dbg !1152
  switch i32 %40, label %52 [
    i32 99, label %41
    i32 109, label %42
    i32 108, label %43
    i32 119, label %44
    i32 76, label %45
    i32 128, label %46
    i32 -130, label %48
    i32 -131, label %49
  ], !dbg !1153

41:                                               ; preds = %39
  store i8 1, i8* @print_bytes, align 1, !dbg !1154
  br label %53, !dbg !1156

42:                                               ; preds = %39
  store i8 1, i8* @print_chars, align 1, !dbg !1157
  br label %53, !dbg !1158

43:                                               ; preds = %39
  store i8 1, i8* @print_lines, align 1, !dbg !1159
  br label %53, !dbg !1160

44:                                               ; preds = %39
  store i8 1, i8* @print_words, align 1, !dbg !1161
  br label %53, !dbg !1162

45:                                               ; preds = %39
  store i8 1, i8* @print_linelength, align 1, !dbg !1163
  br label %53, !dbg !1164

46:                                               ; preds = %39
  %47 = load i8*, i8** @optarg, align 8, !dbg !1165
  store i8* %47, i8** %10, align 8, !dbg !1166
  br label %53, !dbg !1167

48:                                               ; preds = %39
  call void @usage(i32 0) #17, !dbg !1168
  unreachable, !dbg !1168

49:                                               ; preds = %39
  %50 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1169
  %51 = load i8*, i8** @Version, align 8, !dbg !1169
  call void (%struct._IO_FILE*, i8*, i8*, i8*, ...) @version_etc(%struct._IO_FILE* %50, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0), i8* %51, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.13, i64 0, i64 0), i8* null), !dbg !1169
  call void @exit(i32 0) #13, !dbg !1169
  unreachable, !dbg !1169

52:                                               ; preds = %39
  call void @usage(i32 1) #17, !dbg !1170
  unreachable, !dbg !1170

53:                                               ; preds = %46, %45, %44, %43, %42, %41
  br label %34, !dbg !1146, !llvm.loop !1171

54:                                               ; preds = %34
  call void @klee_dump_memory(), !dbg !1173
  %55 = load i8, i8* @print_lines, align 1, !dbg !1174
  %56 = trunc i8 %55 to i1, !dbg !1174
  br i1 %56, label %70, label %57, !dbg !1176

57:                                               ; preds = %54
  %58 = load i8, i8* @print_words, align 1, !dbg !1177
  %59 = trunc i8 %58 to i1, !dbg !1177
  br i1 %59, label %70, label %60, !dbg !1178

60:                                               ; preds = %57
  %61 = load i8, i8* @print_chars, align 1, !dbg !1179
  %62 = trunc i8 %61 to i1, !dbg !1179
  br i1 %62, label %70, label %63, !dbg !1180

63:                                               ; preds = %60
  %64 = load i8, i8* @print_bytes, align 1, !dbg !1181
  %65 = trunc i8 %64 to i1, !dbg !1181
  br i1 %65, label %70, label %66, !dbg !1182

66:                                               ; preds = %63
  %67 = load i8, i8* @print_linelength, align 1, !dbg !1183
  %68 = trunc i8 %67 to i1, !dbg !1183
  br i1 %68, label %70, label %69, !dbg !1184

69:                                               ; preds = %66
  store i8 1, i8* @print_bytes, align 1, !dbg !1185
  store i8 1, i8* @print_words, align 1, !dbg !1186
  store i8 1, i8* @print_lines, align 1, !dbg !1187
  br label %70, !dbg !1188

70:                                               ; preds = %69, %66, %63, %60, %57, %54
  call void @llvm.dbg.declare(metadata i8* %13, metadata !1189, metadata !DIExpression()), !dbg !1190
  store i8 0, i8* %13, align 1, !dbg !1190
  call void @llvm.dbg.declare(metadata %struct.argv_iterator** %14, metadata !1191, metadata !DIExpression()), !dbg !1194
  %71 = load i8*, i8** %10, align 8, !dbg !1195
  %72 = icmp ne i8* %71, null, !dbg !1195
  br i1 %72, label %73, label %148, !dbg !1197

73:                                               ; preds = %70
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %15, metadata !1198, metadata !DIExpression()), !dbg !1250
  %74 = load i32, i32* @optind, align 4, !dbg !1251
  %75 = load i32, i32* %4, align 4, !dbg !1253
  %76 = icmp slt i32 %74, %75, !dbg !1254
  br i1 %76, label %77, label %86, !dbg !1255

77:                                               ; preds = %73
  %78 = load i8**, i8*** %5, align 8, !dbg !1256
  %79 = load i32, i32* @optind, align 4, !dbg !1256
  %80 = sext i32 %79 to i64, !dbg !1256
  %81 = getelementptr inbounds i8*, i8** %78, i64 %80, !dbg !1256
  %82 = load i8*, i8** %81, align 8, !dbg !1256
  %83 = call i8* @quotearg_style(i32 4, i8* %82), !dbg !1256
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.14, i64 0, i64 0), i8* %83), !dbg !1258
  %84 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1259
  %85 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %84, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.16, i64 0, i64 0)), !dbg !1260
  call void @usage(i32 1) #17, !dbg !1261
  unreachable, !dbg !1261

86:                                               ; preds = %73
  %87 = load i8*, i8** %10, align 8, !dbg !1262
  %88 = call i32 @strcmp(i8* %87, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0)) #14, !dbg !1262
  %89 = icmp eq i32 %88, 0, !dbg !1262
  br i1 %89, label %90, label %92, !dbg !1264

90:                                               ; preds = %86
  %91 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !1265
  store %struct._IO_FILE* %91, %struct._IO_FILE** %15, align 8, !dbg !1266
  br label %103, !dbg !1267

92:                                               ; preds = %86
  %93 = load i8*, i8** %10, align 8, !dbg !1268
  %94 = call %struct._IO_FILE* @fopen(i8* %93, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.18, i64 0, i64 0)), !dbg !1270
  store %struct._IO_FILE* %94, %struct._IO_FILE** %15, align 8, !dbg !1271
  %95 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !1272
  %96 = icmp eq %struct._IO_FILE* %95, null, !dbg !1274
  br i1 %96, label %97, label %102, !dbg !1275

97:                                               ; preds = %92
  %98 = call i32* @__errno_location() #16, !dbg !1276
  %99 = load i32, i32* %98, align 4, !dbg !1276
  %100 = load i8*, i8** %10, align 8, !dbg !1276
  %101 = call i8* @quotearg_style(i32 4, i8* %100), !dbg !1276
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %99, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19, i64 0, i64 0), i8* %101), !dbg !1276
  unreachable, !dbg !1276

102:                                              ; preds = %92
  br label %103

103:                                              ; preds = %102, %90
  call void @llvm.dbg.declare(metadata %struct.stat* %16, metadata !1277, metadata !DIExpression()), !dbg !1278
  %104 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !1279
  %105 = call i32 @fileno(%struct._IO_FILE* %104) #15, !dbg !1281
  %106 = call i32 @fstat(i32 %105, %struct.stat* %16) #15, !dbg !1282
  %107 = icmp eq i32 %106, 0, !dbg !1283
  br i1 %107, label %108, label %144, !dbg !1284

108:                                              ; preds = %103
  %109 = getelementptr inbounds %struct.stat, %struct.stat* %16, i32 0, i32 3, !dbg !1285
  %110 = load i32, i32* %109, align 8, !dbg !1285
  %111 = and i32 %110, 61440, !dbg !1285
  %112 = icmp eq i32 %111, 32768, !dbg !1285
  br i1 %112, label %113, label %144, !dbg !1286

113:                                              ; preds = %108
  %114 = getelementptr inbounds %struct.stat, %struct.stat* %16, i32 0, i32 8, !dbg !1287
  %115 = load i64, i64* %114, align 8, !dbg !1287
  %116 = sitofp i64 %115 to double, !dbg !1288
  %117 = call double @physmem_available(), !dbg !1289
  %118 = fdiv double %117, 2.000000e+00, !dbg !1289
  %119 = fcmp olt double 0x4164000000000000, %118, !dbg !1289
  br i1 %119, label %120, label %121, !dbg !1289

120:                                              ; preds = %113
  br label %124, !dbg !1289

121:                                              ; preds = %113
  %122 = call double @physmem_available(), !dbg !1289
  %123 = fdiv double %122, 2.000000e+00, !dbg !1289
  br label %124, !dbg !1289

124:                                              ; preds = %121, %120
  %125 = phi double [ 0x4164000000000000, %120 ], [ %123, %121 ], !dbg !1289
  %126 = fcmp ole double %116, %125, !dbg !1290
  br i1 %126, label %127, label %144, !dbg !1291

127:                                              ; preds = %124
  store i8 1, i8* %13, align 1, !dbg !1292
  call void @readtokens0_init(%struct.Tokens* %12), !dbg !1294
  %128 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !1295
  %129 = call zeroext i1 @readtokens0(%struct._IO_FILE* %128, %struct.Tokens* %12), !dbg !1297
  br i1 %129, label %130, label %134, !dbg !1298

130:                                              ; preds = %127
  %131 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !1299
  %132 = call i32 @rpl_fclose(%struct._IO_FILE* %131), !dbg !1300
  %133 = icmp ne i32 %132, 0, !dbg !1301
  br i1 %133, label %134, label %137, !dbg !1302

134:                                              ; preds = %130, %127
  %135 = load i8*, i8** %10, align 8, !dbg !1303
  %136 = call i8* @quotearg_style(i32 4, i8* %135), !dbg !1303
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.20, i64 0, i64 0), i8* %136), !dbg !1303
  unreachable, !dbg !1303

137:                                              ; preds = %130
  %138 = getelementptr inbounds %struct.Tokens, %struct.Tokens* %12, i32 0, i32 1, !dbg !1304
  %139 = load i8**, i8*** %138, align 8, !dbg !1304
  store i8** %139, i8*** %9, align 8, !dbg !1305
  %140 = getelementptr inbounds %struct.Tokens, %struct.Tokens* %12, i32 0, i32 0, !dbg !1306
  %141 = load i64, i64* %140, align 8, !dbg !1306
  store i64 %141, i64* %8, align 8, !dbg !1307
  %142 = load i8**, i8*** %9, align 8, !dbg !1308
  %143 = call %struct.argv_iterator* @argv_iter_init_argv(i8** %142), !dbg !1309
  store %struct.argv_iterator* %143, %struct.argv_iterator** %14, align 8, !dbg !1310
  br label %147, !dbg !1311

144:                                              ; preds = %124, %108, %103
  store i8** null, i8*** %9, align 8, !dbg !1312
  store i64 0, i64* %8, align 8, !dbg !1314
  %145 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !1315
  %146 = call %struct.argv_iterator* @argv_iter_init_stream(%struct._IO_FILE* %145), !dbg !1316
  store %struct.argv_iterator* %146, %struct.argv_iterator** %14, align 8, !dbg !1317
  br label %147

147:                                              ; preds = %144, %137
  br label %173, !dbg !1318

148:                                              ; preds = %70
  %149 = load i32, i32* @optind, align 4, !dbg !1319
  %150 = load i32, i32* %4, align 4, !dbg !1321
  %151 = icmp slt i32 %149, %150, !dbg !1322
  br i1 %151, label %152, label %157, !dbg !1319

152:                                              ; preds = %148
  %153 = load i8**, i8*** %5, align 8, !dbg !1323
  %154 = load i32, i32* @optind, align 4, !dbg !1324
  %155 = sext i32 %154 to i64, !dbg !1325
  %156 = getelementptr inbounds i8*, i8** %153, i64 %155, !dbg !1325
  br label %158, !dbg !1319

157:                                              ; preds = %148
  br label %158, !dbg !1319

158:                                              ; preds = %157, %152
  %159 = phi i8** [ %156, %152 ], [ getelementptr inbounds ([1 x i8*], [1 x i8*]* @main.stdin_only, i64 0, i64 0), %157 ], !dbg !1319
  store i8** %159, i8*** %9, align 8, !dbg !1326
  %160 = load i32, i32* @optind, align 4, !dbg !1327
  %161 = load i32, i32* %4, align 4, !dbg !1328
  %162 = icmp slt i32 %160, %161, !dbg !1329
  br i1 %162, label %163, label %167, !dbg !1327

163:                                              ; preds = %158
  %164 = load i32, i32* %4, align 4, !dbg !1330
  %165 = load i32, i32* @optind, align 4, !dbg !1331
  %166 = sub nsw i32 %164, %165, !dbg !1332
  br label %168, !dbg !1327

167:                                              ; preds = %158
  br label %168, !dbg !1327

168:                                              ; preds = %167, %163
  %169 = phi i32 [ %166, %163 ], [ 1, %167 ], !dbg !1327
  %170 = sext i32 %169 to i64, !dbg !1333
  store i64 %170, i64* %8, align 8, !dbg !1334
  %171 = load i8**, i8*** %9, align 8, !dbg !1335
  %172 = call %struct.argv_iterator* @argv_iter_init_argv(i8** %171), !dbg !1336
  store %struct.argv_iterator* %172, %struct.argv_iterator** %14, align 8, !dbg !1337
  br label %173

173:                                              ; preds = %168, %147
  %174 = load %struct.argv_iterator*, %struct.argv_iterator** %14, align 8, !dbg !1338
  %175 = icmp ne %struct.argv_iterator* %174, null, !dbg !1338
  br i1 %175, label %177, label %176, !dbg !1340

176:                                              ; preds = %173
  call void @xalloc_die() #17, !dbg !1341
  unreachable, !dbg !1341

177:                                              ; preds = %173
  %178 = load i64, i64* %8, align 8, !dbg !1342
  %179 = load i8**, i8*** %9, align 8, !dbg !1343
  %180 = call %struct.fstatus* @get_input_fstatus(i64 %178, i8** %179), !dbg !1344
  store %struct.fstatus* %180, %struct.fstatus** %11, align 8, !dbg !1345
  %181 = load i64, i64* %8, align 8, !dbg !1346
  %182 = load %struct.fstatus*, %struct.fstatus** %11, align 8, !dbg !1347
  %183 = call i32 @compute_number_width(i64 %181, %struct.fstatus* %182) #14, !dbg !1348
  store i32 %183, i32* @number_width, align 4, !dbg !1349
  store i8 1, i8* %6, align 1, !dbg !1350
  call void @llvm.dbg.declare(metadata i32* %17, metadata !1351, metadata !DIExpression()), !dbg !1353
  store i32 0, i32* %17, align 4, !dbg !1353
  br label %184, !dbg !1354

184:                                              ; preds = %261, %177
  call void @llvm.dbg.declare(metadata i8* %18, metadata !1355, metadata !DIExpression()), !dbg !1358
  store i8 0, i8* %18, align 1, !dbg !1358
  call void @llvm.dbg.declare(metadata i32* %19, metadata !1359, metadata !DIExpression()), !dbg !1360
  call void @llvm.dbg.declare(metadata i8** %20, metadata !1361, metadata !DIExpression()), !dbg !1362
  %185 = load %struct.argv_iterator*, %struct.argv_iterator** %14, align 8, !dbg !1363
  %186 = call i8* @argv_iter(%struct.argv_iterator* %185, i32* %19), !dbg !1364
  store i8* %186, i8** %20, align 8, !dbg !1362
  %187 = load i8*, i8** %20, align 8, !dbg !1365
  %188 = icmp ne i8* %187, null, !dbg !1365
  br i1 %188, label %199, label %189, !dbg !1367

189:                                              ; preds = %184
  %190 = load i32, i32* %19, align 4, !dbg !1368
  switch i32 %190, label %198 [
    i32 2, label %191
    i32 4, label %192
    i32 3, label %197
  ], !dbg !1370

191:                                              ; preds = %189
  br label %264, !dbg !1371

192:                                              ; preds = %189
  %193 = call i32* @__errno_location() #16, !dbg !1373
  %194 = load i32, i32* %193, align 4, !dbg !1373
  %195 = load i8*, i8** %10, align 8, !dbg !1374
  %196 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %195), !dbg !1374
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %194, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.21, i64 0, i64 0), i8* %196), !dbg !1375
  store i8 0, i8* %6, align 1, !dbg !1376
  br label %264, !dbg !1377

197:                                              ; preds = %189
  call void @xalloc_die() #17, !dbg !1378
  unreachable, !dbg !1378

198:                                              ; preds = %189
  call void @__assert_fail(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.23, i64 0, i64 0), i32 837, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__PRETTY_FUNCTION__.main, i64 0, i64 0)) #13, !dbg !1379
  unreachable, !dbg !1379

199:                                              ; preds = %184
  %200 = load i8*, i8** %10, align 8, !dbg !1382
  %201 = icmp ne i8* %200, null, !dbg !1382
  br i1 %201, label %202, label %213, !dbg !1384

202:                                              ; preds = %199
  %203 = load i8*, i8** %10, align 8, !dbg !1385
  %204 = call i32 @strcmp(i8* %203, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0)) #14, !dbg !1385
  %205 = icmp eq i32 %204, 0, !dbg !1385
  br i1 %205, label %206, label %213, !dbg !1386

206:                                              ; preds = %202
  %207 = load i8*, i8** %20, align 8, !dbg !1387
  %208 = call i32 @strcmp(i8* %207, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0)) #14, !dbg !1387
  %209 = icmp eq i32 %208, 0, !dbg !1387
  br i1 %209, label %210, label %213, !dbg !1388

210:                                              ; preds = %206
  %211 = load i8*, i8** %20, align 8, !dbg !1389
  %212 = call i8* @quotearg_style(i32 4, i8* %211), !dbg !1389
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.24, i64 0, i64 0), i8* %212), !dbg !1391
  store i8 1, i8* %18, align 1, !dbg !1392
  br label %213, !dbg !1393

213:                                              ; preds = %210, %206, %202, %199
  %214 = load i8*, i8** %20, align 8, !dbg !1394
  %215 = getelementptr inbounds i8, i8* %214, i64 0, !dbg !1394
  %216 = load i8, i8* %215, align 1, !dbg !1394
  %217 = icmp ne i8 %216, 0, !dbg !1394
  br i1 %217, label %229, label %218, !dbg !1396

218:                                              ; preds = %213
  %219 = load i8*, i8** %10, align 8, !dbg !1397
  %220 = icmp eq i8* %219, null, !dbg !1400
  br i1 %220, label %221, label %222, !dbg !1401

221:                                              ; preds = %218
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.26, i64 0, i64 0)), !dbg !1402
  br label %228, !dbg !1402

222:                                              ; preds = %218
  call void @llvm.dbg.declare(metadata i64* %21, metadata !1403, metadata !DIExpression()), !dbg !1405
  %223 = load %struct.argv_iterator*, %struct.argv_iterator** %14, align 8, !dbg !1406
  %224 = call i64 @argv_iter_n_args(%struct.argv_iterator* %223) #14, !dbg !1407
  store i64 %224, i64* %21, align 8, !dbg !1405
  %225 = load i8*, i8** %10, align 8, !dbg !1408
  %226 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %225), !dbg !1408
  %227 = load i64, i64* %21, align 8, !dbg !1409
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.27, i64 0, i64 0), i8* %226, i64 %227, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.26, i64 0, i64 0)), !dbg !1410
  br label %228

228:                                              ; preds = %222, %221
  store i8 1, i8* %18, align 1, !dbg !1411
  br label %229, !dbg !1412

229:                                              ; preds = %228, %213
  %230 = load i8, i8* %18, align 1, !dbg !1413
  %231 = trunc i8 %230 to i1, !dbg !1413
  br i1 %231, label %232, label %233, !dbg !1415

232:                                              ; preds = %229
  store i8 0, i8* %6, align 1, !dbg !1416
  br label %253, !dbg !1417

233:                                              ; preds = %229
  %234 = load i8*, i8** %20, align 8, !dbg !1418
  %235 = load %struct.fstatus*, %struct.fstatus** %11, align 8, !dbg !1419
  %236 = load i64, i64* %8, align 8, !dbg !1420
  %237 = icmp ne i64 %236, 0, !dbg !1420
  br i1 %237, label %238, label %240, !dbg !1420

238:                                              ; preds = %233
  %239 = load i32, i32* %17, align 4, !dbg !1421
  br label %241, !dbg !1420

240:                                              ; preds = %233
  br label %241, !dbg !1420

241:                                              ; preds = %240, %238
  %242 = phi i32 [ %239, %238 ], [ 0, %240 ], !dbg !1420
  %243 = sext i32 %242 to i64, !dbg !1419
  %244 = getelementptr inbounds %struct.fstatus, %struct.fstatus* %235, i64 %243, !dbg !1419
  %245 = call zeroext i1 @wc_file(i8* %234, %struct.fstatus* %244), !dbg !1422
  %246 = zext i1 %245 to i32, !dbg !1422
  %247 = load i8, i8* %6, align 1, !dbg !1423
  %248 = trunc i8 %247 to i1, !dbg !1423
  %249 = zext i1 %248 to i32, !dbg !1423
  %250 = and i32 %249, %246, !dbg !1423
  %251 = icmp ne i32 %250, 0, !dbg !1423
  %252 = zext i1 %251 to i8, !dbg !1423
  store i8 %252, i8* %6, align 1, !dbg !1423
  br label %253

253:                                              ; preds = %241, %232
  %254 = load i64, i64* %8, align 8, !dbg !1424
  %255 = icmp ne i64 %254, 0, !dbg !1424
  br i1 %255, label %260, label %256, !dbg !1426

256:                                              ; preds = %253
  %257 = load %struct.fstatus*, %struct.fstatus** %11, align 8, !dbg !1427
  %258 = getelementptr inbounds %struct.fstatus, %struct.fstatus* %257, i64 0, !dbg !1427
  %259 = getelementptr inbounds %struct.fstatus, %struct.fstatus* %258, i32 0, i32 0, !dbg !1428
  store i32 1, i32* %259, align 8, !dbg !1429
  br label %260, !dbg !1427

260:                                              ; preds = %256, %253
  br label %261, !dbg !1430

261:                                              ; preds = %260
  %262 = load i32, i32* %17, align 4, !dbg !1431
  %263 = add nsw i32 %262, 1, !dbg !1431
  store i32 %263, i32* %17, align 4, !dbg !1431
  br label %184, !dbg !1432, !llvm.loop !1433

264:                                              ; preds = %192, %191
  call void @llvm.dbg.label(metadata !1436), !dbg !1437
  %265 = load i8, i8* %6, align 1, !dbg !1438
  %266 = trunc i8 %265 to i1, !dbg !1438
  br i1 %266, label %267, label %285, !dbg !1440

267:                                              ; preds = %264
  %268 = load i8*, i8** %10, align 8, !dbg !1441
  %269 = icmp ne i8* %268, null, !dbg !1441
  br i1 %269, label %285, label %270, !dbg !1442

270:                                              ; preds = %267
  %271 = load %struct.argv_iterator*, %struct.argv_iterator** %14, align 8, !dbg !1443
  %272 = call i64 @argv_iter_n_args(%struct.argv_iterator* %271) #14, !dbg !1444
  %273 = icmp eq i64 %272, 0, !dbg !1445
  br i1 %273, label %274, label %285, !dbg !1446

274:                                              ; preds = %270
  %275 = load %struct.fstatus*, %struct.fstatus** %11, align 8, !dbg !1447
  %276 = getelementptr inbounds %struct.fstatus, %struct.fstatus* %275, i64 0, !dbg !1447
  %277 = call zeroext i1 @wc_file(i8* null, %struct.fstatus* %276), !dbg !1448
  %278 = zext i1 %277 to i32, !dbg !1448
  %279 = load i8, i8* %6, align 1, !dbg !1449
  %280 = trunc i8 %279 to i1, !dbg !1449
  %281 = zext i1 %280 to i32, !dbg !1449
  %282 = and i32 %281, %278, !dbg !1449
  %283 = icmp ne i32 %282, 0, !dbg !1449
  %284 = zext i1 %283 to i8, !dbg !1449
  store i8 %284, i8* %6, align 1, !dbg !1449
  br label %285, !dbg !1450

285:                                              ; preds = %274, %270, %267, %264
  %286 = load i8, i8* %13, align 1, !dbg !1451
  %287 = trunc i8 %286 to i1, !dbg !1451
  br i1 %287, label %288, label %289, !dbg !1453

288:                                              ; preds = %285
  call void @readtokens0_free(%struct.Tokens* %12), !dbg !1454
  br label %289, !dbg !1454

289:                                              ; preds = %288, %285
  %290 = load %struct.argv_iterator*, %struct.argv_iterator** %14, align 8, !dbg !1455
  %291 = call i64 @argv_iter_n_args(%struct.argv_iterator* %290) #14, !dbg !1457
  %292 = icmp ult i64 1, %291, !dbg !1458
  br i1 %292, label %293, label %299, !dbg !1459

293:                                              ; preds = %289
  %294 = load i64, i64* @total_lines, align 8, !dbg !1460
  %295 = load i64, i64* @total_words, align 8, !dbg !1461
  %296 = load i64, i64* @total_chars, align 8, !dbg !1462
  %297 = load i64, i64* @total_bytes, align 8, !dbg !1463
  %298 = load i64, i64* @max_line_length, align 8, !dbg !1464
  call void @write_counts(i64 %294, i64 %295, i64 %296, i64 %297, i64 %298, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i64 0, i64 0)), !dbg !1465
  br label %299, !dbg !1465

299:                                              ; preds = %293, %289
  %300 = load %struct.argv_iterator*, %struct.argv_iterator** %14, align 8, !dbg !1466
  call void @argv_iter_free(%struct.argv_iterator* %300), !dbg !1467
  %301 = load %struct.fstatus*, %struct.fstatus** %11, align 8, !dbg !1468
  %302 = bitcast %struct.fstatus* %301 to i8*, !dbg !1468
  call void @free(i8* %302) #15, !dbg !1469
  %303 = load i8, i8* @have_read_stdin, align 1, !dbg !1470
  %304 = trunc i8 %303 to i1, !dbg !1470
  br i1 %304, label %305, label %311, !dbg !1472

305:                                              ; preds = %299
  %306 = call i32 @close(i32 0), !dbg !1473
  %307 = icmp ne i32 %306, 0, !dbg !1474
  br i1 %307, label %308, label %311, !dbg !1475

308:                                              ; preds = %305
  %309 = call i32* @__errno_location() #16, !dbg !1476
  %310 = load i32, i32* %309, align 4, !dbg !1476
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %310, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0)), !dbg !1476
  unreachable, !dbg !1476

311:                                              ; preds = %305, %299
  %312 = load i8, i8* %6, align 1, !dbg !1477
  %313 = trunc i8 %312 to i1, !dbg !1477
  %314 = zext i1 %313 to i64, !dbg !1477
  %315 = select i1 %313, i32 0, i32 1, !dbg !1477
  ret i32 %315, !dbg !1478
}

; Function Attrs: nounwind
declare dso_local i32 @atexit(void ()*) #7

; Function Attrs: nounwind readnone willreturn
declare dso_local i32 @getpagesize() #8

; Function Attrs: nounwind
declare dso_local i32 @setvbuf(%struct._IO_FILE*, i8*, i32, i64) #7

; Function Attrs: nounwind
declare dso_local i8* @getenv(i8*) #7

; Function Attrs: nounwind
declare dso_local i32 @getopt_long(i32, i8**, i8*, %struct.option*, i32*) #7

declare dso_local void @error(i32, i32, i8*, ...) #2

declare dso_local %struct._IO_FILE* @fopen(i8*, i8*) #2

; Function Attrs: nounwind readnone willreturn
declare dso_local i32* @__errno_location() #8

; Function Attrs: nounwind
declare dso_local i32 @fileno(%struct._IO_FILE*) #7

; Function Attrs: nounwind
declare dso_local i32 @fstat(i32, %struct.stat*) #7

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.fstatus* @get_input_fstatus(i64 %0, i8** %1) #3 !dbg !1479 {
  %3 = alloca i64, align 8
  %4 = alloca i8**, align 8
  %5 = alloca %struct.fstatus*, align 8
  %6 = alloca i64, align 8
  store i64 %0, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !1484, metadata !DIExpression()), !dbg !1485
  store i8** %1, i8*** %4, align 8
  call void @llvm.dbg.declare(metadata i8*** %4, metadata !1486, metadata !DIExpression()), !dbg !1487
  call void @llvm.dbg.declare(metadata %struct.fstatus** %5, metadata !1488, metadata !DIExpression()), !dbg !1489
  %7 = load i64, i64* %3, align 8, !dbg !1490
  %8 = icmp ne i64 %7, 0, !dbg !1490
  br i1 %8, label %9, label %11, !dbg !1490

9:                                                ; preds = %2
  %10 = load i64, i64* %3, align 8, !dbg !1491
  br label %12, !dbg !1490

11:                                               ; preds = %2
  br label %12, !dbg !1490

12:                                               ; preds = %11, %9
  %13 = phi i64 [ %10, %9 ], [ 1, %11 ], !dbg !1490
  %14 = call noalias i8* @xnmalloc(i64 %13, i64 152), !dbg !1492
  %15 = bitcast i8* %14 to %struct.fstatus*, !dbg !1492
  store %struct.fstatus* %15, %struct.fstatus** %5, align 8, !dbg !1489
  %16 = load i64, i64* %3, align 8, !dbg !1493
  %17 = icmp eq i64 %16, 0, !dbg !1495
  br i1 %17, label %42, label %18, !dbg !1496

18:                                               ; preds = %12
  %19 = load i64, i64* %3, align 8, !dbg !1497
  %20 = icmp eq i64 %19, 1, !dbg !1498
  br i1 %20, label %21, label %46, !dbg !1499

21:                                               ; preds = %18
  %22 = load i8, i8* @print_lines, align 1, !dbg !1500
  %23 = trunc i8 %22 to i1, !dbg !1500
  %24 = zext i1 %23 to i32, !dbg !1500
  %25 = load i8, i8* @print_words, align 1, !dbg !1501
  %26 = trunc i8 %25 to i1, !dbg !1501
  %27 = zext i1 %26 to i32, !dbg !1501
  %28 = add nsw i32 %24, %27, !dbg !1502
  %29 = load i8, i8* @print_chars, align 1, !dbg !1503
  %30 = trunc i8 %29 to i1, !dbg !1503
  %31 = zext i1 %30 to i32, !dbg !1503
  %32 = add nsw i32 %28, %31, !dbg !1504
  %33 = load i8, i8* @print_bytes, align 1, !dbg !1505
  %34 = trunc i8 %33 to i1, !dbg !1505
  %35 = zext i1 %34 to i32, !dbg !1505
  %36 = add nsw i32 %32, %35, !dbg !1506
  %37 = load i8, i8* @print_linelength, align 1, !dbg !1507
  %38 = trunc i8 %37 to i1, !dbg !1507
  %39 = zext i1 %38 to i32, !dbg !1507
  %40 = add nsw i32 %36, %39, !dbg !1508
  %41 = icmp eq i32 %40, 1, !dbg !1509
  br i1 %41, label %42, label %46, !dbg !1510

42:                                               ; preds = %21, %12
  %43 = load %struct.fstatus*, %struct.fstatus** %5, align 8, !dbg !1511
  %44 = getelementptr inbounds %struct.fstatus, %struct.fstatus* %43, i64 0, !dbg !1511
  %45 = getelementptr inbounds %struct.fstatus, %struct.fstatus* %44, i32 0, i32 0, !dbg !1512
  store i32 1, i32* %45, align 8, !dbg !1513
  br label %90, !dbg !1511

46:                                               ; preds = %21, %18
  call void @llvm.dbg.declare(metadata i64* %6, metadata !1514, metadata !DIExpression()), !dbg !1517
  store i64 0, i64* %6, align 8, !dbg !1517
  br label %47, !dbg !1518

47:                                               ; preds = %86, %46
  %48 = load i64, i64* %6, align 8, !dbg !1519
  %49 = load i64, i64* %3, align 8, !dbg !1521
  %50 = icmp ult i64 %48, %49, !dbg !1522
  br i1 %50, label %51, label %89, !dbg !1523

51:                                               ; preds = %47
  %52 = load i8**, i8*** %4, align 8, !dbg !1524
  %53 = load i64, i64* %6, align 8, !dbg !1525
  %54 = getelementptr inbounds i8*, i8** %52, i64 %53, !dbg !1524
  %55 = load i8*, i8** %54, align 8, !dbg !1524
  %56 = icmp ne i8* %55, null, !dbg !1524
  br i1 %56, label %57, label %64, !dbg !1526

57:                                               ; preds = %51
  %58 = load i8**, i8*** %4, align 8, !dbg !1527
  %59 = load i64, i64* %6, align 8, !dbg !1527
  %60 = getelementptr inbounds i8*, i8** %58, i64 %59, !dbg !1527
  %61 = load i8*, i8** %60, align 8, !dbg !1527
  %62 = call i32 @strcmp(i8* %61, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0)) #14, !dbg !1527
  %63 = icmp eq i32 %62, 0, !dbg !1527
  br i1 %63, label %64, label %70, !dbg !1528

64:                                               ; preds = %57, %51
  %65 = load %struct.fstatus*, %struct.fstatus** %5, align 8, !dbg !1529
  %66 = load i64, i64* %6, align 8, !dbg !1530
  %67 = getelementptr inbounds %struct.fstatus, %struct.fstatus* %65, i64 %66, !dbg !1529
  %68 = getelementptr inbounds %struct.fstatus, %struct.fstatus* %67, i32 0, i32 1, !dbg !1531
  %69 = call i32 @fstat(i32 0, %struct.stat* %68) #15, !dbg !1532
  br label %80, !dbg !1528

70:                                               ; preds = %57
  %71 = load i8**, i8*** %4, align 8, !dbg !1533
  %72 = load i64, i64* %6, align 8, !dbg !1534
  %73 = getelementptr inbounds i8*, i8** %71, i64 %72, !dbg !1533
  %74 = load i8*, i8** %73, align 8, !dbg !1533
  %75 = load %struct.fstatus*, %struct.fstatus** %5, align 8, !dbg !1535
  %76 = load i64, i64* %6, align 8, !dbg !1536
  %77 = getelementptr inbounds %struct.fstatus, %struct.fstatus* %75, i64 %76, !dbg !1535
  %78 = getelementptr inbounds %struct.fstatus, %struct.fstatus* %77, i32 0, i32 1, !dbg !1537
  %79 = call i32 @stat(i8* %74, %struct.stat* %78) #15, !dbg !1538
  br label %80, !dbg !1528

80:                                               ; preds = %70, %64
  %81 = phi i32 [ %69, %64 ], [ %79, %70 ], !dbg !1528
  %82 = load %struct.fstatus*, %struct.fstatus** %5, align 8, !dbg !1539
  %83 = load i64, i64* %6, align 8, !dbg !1540
  %84 = getelementptr inbounds %struct.fstatus, %struct.fstatus* %82, i64 %83, !dbg !1539
  %85 = getelementptr inbounds %struct.fstatus, %struct.fstatus* %84, i32 0, i32 0, !dbg !1541
  store i32 %81, i32* %85, align 8, !dbg !1542
  br label %86, !dbg !1539

86:                                               ; preds = %80
  %87 = load i64, i64* %6, align 8, !dbg !1543
  %88 = add i64 %87, 1, !dbg !1543
  store i64 %88, i64* %6, align 8, !dbg !1543
  br label %47, !dbg !1544, !llvm.loop !1545

89:                                               ; preds = %47
  br label %90

90:                                               ; preds = %89, %42
  %91 = load %struct.fstatus*, %struct.fstatus** %5, align 8, !dbg !1547
  ret %struct.fstatus* %91, !dbg !1548
}

; Function Attrs: noinline nounwind optnone readonly uwtable willreturn
define internal i32 @compute_number_width(i64 %0, %struct.fstatus* %1) #9 !dbg !1549 {
  %3 = alloca i64, align 8
  %4 = alloca %struct.fstatus*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  store i64 %0, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !1554, metadata !DIExpression()), !dbg !1555
  store %struct.fstatus* %1, %struct.fstatus** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.fstatus** %4, metadata !1556, metadata !DIExpression()), !dbg !1557
  call void @llvm.dbg.declare(metadata i32* %5, metadata !1558, metadata !DIExpression()), !dbg !1559
  store i32 1, i32* %5, align 4, !dbg !1559
  %9 = load i64, i64* %3, align 8, !dbg !1560
  %10 = icmp ult i64 0, %9, !dbg !1562
  br i1 %10, label %11, label %70, !dbg !1563

11:                                               ; preds = %2
  %12 = load %struct.fstatus*, %struct.fstatus** %4, align 8, !dbg !1564
  %13 = getelementptr inbounds %struct.fstatus, %struct.fstatus* %12, i64 0, !dbg !1564
  %14 = getelementptr inbounds %struct.fstatus, %struct.fstatus* %13, i32 0, i32 0, !dbg !1565
  %15 = load i32, i32* %14, align 8, !dbg !1565
  %16 = icmp sle i32 %15, 0, !dbg !1566
  br i1 %16, label %17, label %70, !dbg !1567

17:                                               ; preds = %11
  call void @llvm.dbg.declare(metadata i32* %6, metadata !1568, metadata !DIExpression()), !dbg !1570
  store i32 1, i32* %6, align 4, !dbg !1570
  call void @llvm.dbg.declare(metadata i64* %7, metadata !1571, metadata !DIExpression()), !dbg !1572
  store i64 0, i64* %7, align 8, !dbg !1572
  call void @llvm.dbg.declare(metadata i64* %8, metadata !1573, metadata !DIExpression()), !dbg !1575
  store i64 0, i64* %8, align 8, !dbg !1575
  br label %18, !dbg !1576

18:                                               ; preds = %50, %17
  %19 = load i64, i64* %8, align 8, !dbg !1577
  %20 = load i64, i64* %3, align 8, !dbg !1579
  %21 = icmp ult i64 %19, %20, !dbg !1580
  br i1 %21, label %22, label %53, !dbg !1581

22:                                               ; preds = %18
  %23 = load %struct.fstatus*, %struct.fstatus** %4, align 8, !dbg !1582
  %24 = load i64, i64* %8, align 8, !dbg !1584
  %25 = getelementptr inbounds %struct.fstatus, %struct.fstatus* %23, i64 %24, !dbg !1582
  %26 = getelementptr inbounds %struct.fstatus, %struct.fstatus* %25, i32 0, i32 0, !dbg !1585
  %27 = load i32, i32* %26, align 8, !dbg !1585
  %28 = icmp ne i32 %27, 0, !dbg !1582
  br i1 %28, label %49, label %29, !dbg !1586

29:                                               ; preds = %22
  %30 = load %struct.fstatus*, %struct.fstatus** %4, align 8, !dbg !1587
  %31 = load i64, i64* %8, align 8, !dbg !1587
  %32 = getelementptr inbounds %struct.fstatus, %struct.fstatus* %30, i64 %31, !dbg !1587
  %33 = getelementptr inbounds %struct.fstatus, %struct.fstatus* %32, i32 0, i32 1, !dbg !1587
  %34 = getelementptr inbounds %struct.stat, %struct.stat* %33, i32 0, i32 3, !dbg !1587
  %35 = load i32, i32* %34, align 8, !dbg !1587
  %36 = and i32 %35, 61440, !dbg !1587
  %37 = icmp eq i32 %36, 32768, !dbg !1587
  br i1 %37, label %38, label %47, !dbg !1590

38:                                               ; preds = %29
  %39 = load %struct.fstatus*, %struct.fstatus** %4, align 8, !dbg !1591
  %40 = load i64, i64* %8, align 8, !dbg !1592
  %41 = getelementptr inbounds %struct.fstatus, %struct.fstatus* %39, i64 %40, !dbg !1591
  %42 = getelementptr inbounds %struct.fstatus, %struct.fstatus* %41, i32 0, i32 1, !dbg !1593
  %43 = getelementptr inbounds %struct.stat, %struct.stat* %42, i32 0, i32 8, !dbg !1594
  %44 = load i64, i64* %43, align 8, !dbg !1594
  %45 = load i64, i64* %7, align 8, !dbg !1595
  %46 = add i64 %45, %44, !dbg !1595
  store i64 %46, i64* %7, align 8, !dbg !1595
  br label %48, !dbg !1596

47:                                               ; preds = %29
  store i32 7, i32* %6, align 4, !dbg !1597
  br label %48

48:                                               ; preds = %47, %38
  br label %49, !dbg !1598

49:                                               ; preds = %48, %22
  br label %50, !dbg !1585

50:                                               ; preds = %49
  %51 = load i64, i64* %8, align 8, !dbg !1599
  %52 = add i64 %51, 1, !dbg !1599
  store i64 %52, i64* %8, align 8, !dbg !1599
  br label %18, !dbg !1600, !llvm.loop !1601

53:                                               ; preds = %18
  br label %54, !dbg !1603

54:                                               ; preds = %60, %53
  %55 = load i64, i64* %7, align 8, !dbg !1604
  %56 = icmp ule i64 10, %55, !dbg !1607
  br i1 %56, label %57, label %63, !dbg !1608

57:                                               ; preds = %54
  %58 = load i32, i32* %5, align 4, !dbg !1609
  %59 = add nsw i32 %58, 1, !dbg !1609
  store i32 %59, i32* %5, align 4, !dbg !1609
  br label %60, !dbg !1610

60:                                               ; preds = %57
  %61 = load i64, i64* %7, align 8, !dbg !1611
  %62 = udiv i64 %61, 10, !dbg !1611
  store i64 %62, i64* %7, align 8, !dbg !1611
  br label %54, !dbg !1612, !llvm.loop !1613

63:                                               ; preds = %54
  %64 = load i32, i32* %5, align 4, !dbg !1615
  %65 = load i32, i32* %6, align 4, !dbg !1617
  %66 = icmp slt i32 %64, %65, !dbg !1618
  br i1 %66, label %67, label %69, !dbg !1619

67:                                               ; preds = %63
  %68 = load i32, i32* %6, align 4, !dbg !1620
  store i32 %68, i32* %5, align 4, !dbg !1621
  br label %69, !dbg !1622

69:                                               ; preds = %67, %63
  br label %70, !dbg !1623

70:                                               ; preds = %69, %11, %2
  %71 = load i32, i32* %5, align 4, !dbg !1624
  ret i32 %71, !dbg !1625
}

; Function Attrs: noreturn nounwind
declare dso_local void @__assert_fail(i8*, i8*, i32, i8*) #4

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @wc_file(i8* %0, %struct.fstatus* %1) #3 !dbg !1626 {
  %3 = alloca i1, align 1
  %4 = alloca i8*, align 8
  %5 = alloca %struct.fstatus*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8, align 1
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !1629, metadata !DIExpression()), !dbg !1630
  store %struct.fstatus* %1, %struct.fstatus** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.fstatus** %5, metadata !1631, metadata !DIExpression()), !dbg !1632
  %8 = load i8*, i8** %4, align 8, !dbg !1633
  %9 = icmp ne i8* %8, null, !dbg !1633
  br i1 %9, label %10, label %14, !dbg !1635

10:                                               ; preds = %2
  %11 = load i8*, i8** %4, align 8, !dbg !1636
  %12 = call i32 @strcmp(i8* %11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0)) #14, !dbg !1636
  %13 = icmp eq i32 %12, 0, !dbg !1636
  br i1 %13, label %14, label %18, !dbg !1637

14:                                               ; preds = %10, %2
  store i8 1, i8* @have_read_stdin, align 1, !dbg !1638
  call void @xset_binary_mode(i32 0, i32 0), !dbg !1640
  %15 = load i8*, i8** %4, align 8, !dbg !1641
  %16 = load %struct.fstatus*, %struct.fstatus** %5, align 8, !dbg !1642
  %17 = call zeroext i1 @wc(i32 0, i8* %15, %struct.fstatus* %16, i64 -1), !dbg !1643
  store i1 %17, i1* %3, align 1, !dbg !1644
  br label %45, !dbg !1644

18:                                               ; preds = %10
  call void @llvm.dbg.declare(metadata i32* %6, metadata !1645, metadata !DIExpression()), !dbg !1647
  %19 = load i8*, i8** %4, align 8, !dbg !1648
  %20 = call i32 (i8*, i32, ...) @open(i8* %19, i32 0), !dbg !1649
  store i32 %20, i32* %6, align 4, !dbg !1647
  %21 = load i32, i32* %6, align 4, !dbg !1650
  %22 = icmp eq i32 %21, -1, !dbg !1652
  br i1 %22, label %23, label %28, !dbg !1653

23:                                               ; preds = %18
  %24 = call i32* @__errno_location() #16, !dbg !1654
  %25 = load i32, i32* %24, align 4, !dbg !1654
  %26 = load i8*, i8** %4, align 8, !dbg !1656
  %27 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %26), !dbg !1656
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %25, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), i8* %27), !dbg !1657
  store i1 false, i1* %3, align 1, !dbg !1658
  br label %45, !dbg !1658

28:                                               ; preds = %18
  call void @llvm.dbg.declare(metadata i8* %7, metadata !1659, metadata !DIExpression()), !dbg !1661
  %29 = load i32, i32* %6, align 4, !dbg !1662
  %30 = load i8*, i8** %4, align 8, !dbg !1663
  %31 = load %struct.fstatus*, %struct.fstatus** %5, align 8, !dbg !1664
  %32 = call zeroext i1 @wc(i32 %29, i8* %30, %struct.fstatus* %31, i64 0), !dbg !1665
  %33 = zext i1 %32 to i8, !dbg !1661
  store i8 %33, i8* %7, align 1, !dbg !1661
  %34 = load i32, i32* %6, align 4, !dbg !1666
  %35 = call i32 @close(i32 %34), !dbg !1668
  %36 = icmp ne i32 %35, 0, !dbg !1669
  br i1 %36, label %37, label %42, !dbg !1670

37:                                               ; preds = %28
  %38 = call i32* @__errno_location() #16, !dbg !1671
  %39 = load i32, i32* %38, align 4, !dbg !1671
  %40 = load i8*, i8** %4, align 8, !dbg !1673
  %41 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %40), !dbg !1673
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %39, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), i8* %41), !dbg !1674
  store i1 false, i1* %3, align 1, !dbg !1675
  br label %45, !dbg !1675

42:                                               ; preds = %28
  %43 = load i8, i8* %7, align 1, !dbg !1676
  %44 = trunc i8 %43 to i1, !dbg !1676
  store i1 %44, i1* %3, align 1, !dbg !1677
  br label %45, !dbg !1677

45:                                               ; preds = %42, %37, %23, %14
  %46 = load i1, i1* %3, align 1, !dbg !1678
  ret i1 %46, !dbg !1678
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal void @write_counts(i64 %0, i64 %1, i64 %2, i64 %3, i64 %4, i8* %5) #3 !dbg !120 {
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca [21 x i8], align 16
  store i64 %0, i64* %7, align 8
  call void @llvm.dbg.declare(metadata i64* %7, metadata !1679, metadata !DIExpression()), !dbg !1680
  store i64 %1, i64* %8, align 8
  call void @llvm.dbg.declare(metadata i64* %8, metadata !1681, metadata !DIExpression()), !dbg !1682
  store i64 %2, i64* %9, align 8
  call void @llvm.dbg.declare(metadata i64* %9, metadata !1683, metadata !DIExpression()), !dbg !1684
  store i64 %3, i64* %10, align 8
  call void @llvm.dbg.declare(metadata i64* %10, metadata !1685, metadata !DIExpression()), !dbg !1686
  store i64 %4, i64* %11, align 8
  call void @llvm.dbg.declare(metadata i64* %11, metadata !1687, metadata !DIExpression()), !dbg !1688
  store i8* %5, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !1689, metadata !DIExpression()), !dbg !1690
  call void @llvm.dbg.declare(metadata i8** %13, metadata !1691, metadata !DIExpression()), !dbg !1692
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @write_counts.format_sp_int, i64 0, i64 1), i8** %13, align 8, !dbg !1692
  call void @llvm.dbg.declare(metadata [21 x i8]* %14, metadata !1693, metadata !DIExpression()), !dbg !1697
  %15 = load i8, i8* @print_lines, align 1, !dbg !1698
  %16 = trunc i8 %15 to i1, !dbg !1698
  br i1 %16, label %17, label %24, !dbg !1700

17:                                               ; preds = %6
  %18 = load i8*, i8** %13, align 8, !dbg !1701
  %19 = load i32, i32* @number_width, align 4, !dbg !1703
  %20 = load i64, i64* %7, align 8, !dbg !1704
  %21 = getelementptr inbounds [21 x i8], [21 x i8]* %14, i64 0, i64 0, !dbg !1705
  %22 = call i8* @umaxtostr(i64 %20, i8* %21), !dbg !1706
  %23 = call i32 (i8*, ...) @printf(i8* %18, i32 %19, i8* %22), !dbg !1707
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @write_counts.format_sp_int, i64 0, i64 0), i8** %13, align 8, !dbg !1708
  br label %24, !dbg !1709

24:                                               ; preds = %17, %6
  %25 = load i8, i8* @print_words, align 1, !dbg !1710
  %26 = trunc i8 %25 to i1, !dbg !1710
  br i1 %26, label %27, label %34, !dbg !1712

27:                                               ; preds = %24
  %28 = load i8*, i8** %13, align 8, !dbg !1713
  %29 = load i32, i32* @number_width, align 4, !dbg !1715
  %30 = load i64, i64* %8, align 8, !dbg !1716
  %31 = getelementptr inbounds [21 x i8], [21 x i8]* %14, i64 0, i64 0, !dbg !1717
  %32 = call i8* @umaxtostr(i64 %30, i8* %31), !dbg !1718
  %33 = call i32 (i8*, ...) @printf(i8* %28, i32 %29, i8* %32), !dbg !1719
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @write_counts.format_sp_int, i64 0, i64 0), i8** %13, align 8, !dbg !1720
  br label %34, !dbg !1721

34:                                               ; preds = %27, %24
  %35 = load i8, i8* @print_chars, align 1, !dbg !1722
  %36 = trunc i8 %35 to i1, !dbg !1722
  br i1 %36, label %37, label %44, !dbg !1724

37:                                               ; preds = %34
  %38 = load i8*, i8** %13, align 8, !dbg !1725
  %39 = load i32, i32* @number_width, align 4, !dbg !1727
  %40 = load i64, i64* %9, align 8, !dbg !1728
  %41 = getelementptr inbounds [21 x i8], [21 x i8]* %14, i64 0, i64 0, !dbg !1729
  %42 = call i8* @umaxtostr(i64 %40, i8* %41), !dbg !1730
  %43 = call i32 (i8*, ...) @printf(i8* %38, i32 %39, i8* %42), !dbg !1731
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @write_counts.format_sp_int, i64 0, i64 0), i8** %13, align 8, !dbg !1732
  br label %44, !dbg !1733

44:                                               ; preds = %37, %34
  %45 = load i8, i8* @print_bytes, align 1, !dbg !1734
  %46 = trunc i8 %45 to i1, !dbg !1734
  br i1 %46, label %47, label %54, !dbg !1736

47:                                               ; preds = %44
  %48 = load i8*, i8** %13, align 8, !dbg !1737
  %49 = load i32, i32* @number_width, align 4, !dbg !1739
  %50 = load i64, i64* %10, align 8, !dbg !1740
  %51 = getelementptr inbounds [21 x i8], [21 x i8]* %14, i64 0, i64 0, !dbg !1741
  %52 = call i8* @umaxtostr(i64 %50, i8* %51), !dbg !1742
  %53 = call i32 (i8*, ...) @printf(i8* %48, i32 %49, i8* %52), !dbg !1743
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @write_counts.format_sp_int, i64 0, i64 0), i8** %13, align 8, !dbg !1744
  br label %54, !dbg !1745

54:                                               ; preds = %47, %44
  %55 = load i8, i8* @print_linelength, align 1, !dbg !1746
  %56 = trunc i8 %55 to i1, !dbg !1746
  br i1 %56, label %57, label %64, !dbg !1748

57:                                               ; preds = %54
  %58 = load i8*, i8** %13, align 8, !dbg !1749
  %59 = load i32, i32* @number_width, align 4, !dbg !1751
  %60 = load i64, i64* %11, align 8, !dbg !1752
  %61 = getelementptr inbounds [21 x i8], [21 x i8]* %14, i64 0, i64 0, !dbg !1753
  %62 = call i8* @umaxtostr(i64 %60, i8* %61), !dbg !1754
  %63 = call i32 (i8*, ...) @printf(i8* %58, i32 %59, i8* %62), !dbg !1755
  br label %64, !dbg !1756

64:                                               ; preds = %57, %54
  %65 = load i8*, i8** %12, align 8, !dbg !1757
  %66 = icmp ne i8* %65, null, !dbg !1757
  br i1 %66, label %67, label %79, !dbg !1759

67:                                               ; preds = %64
  %68 = load i8*, i8** %12, align 8, !dbg !1760
  %69 = call i8* @strchr(i8* %68, i32 10) #14, !dbg !1761
  %70 = icmp ne i8* %69, null, !dbg !1761
  br i1 %70, label %71, label %74, !dbg !1761

71:                                               ; preds = %67
  %72 = load i8*, i8** %12, align 8, !dbg !1762
  %73 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %72), !dbg !1762
  br label %76, !dbg !1761

74:                                               ; preds = %67
  %75 = load i8*, i8** %12, align 8, !dbg !1763
  br label %76, !dbg !1761

76:                                               ; preds = %74, %71
  %77 = phi i8* [ %73, %71 ], [ %75, %74 ], !dbg !1761
  %78 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.55, i64 0, i64 0), i8* %77), !dbg !1764
  br label %79, !dbg !1764

79:                                               ; preds = %76, %64
  %80 = call i32 @putchar_unlocked(i32 10), !dbg !1765
  ret void, !dbg !1766
}

; Function Attrs: nounwind
declare dso_local void @free(i8*) #7

declare dso_local i32 @close(i32) #2

; Function Attrs: nounwind readonly willreturn
declare dso_local i8* @strchr(i8*, i32) #6

declare dso_local i32 @putchar_unlocked(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @wc(i32 %0, i8* %1, %struct.fstatus* %2, i64 %3) #3 !dbg !1767 {
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca %struct.fstatus*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8, align 1
  %10 = alloca [16385 x i8], align 16
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  %17 = alloca i8, align 1
  %18 = alloca i8, align 1
  %19 = alloca i8, align 1
  %20 = alloca i8*, align 8
  %21 = alloca i8, align 1
  %22 = alloca i64, align 8
  %23 = alloca i64, align 8
  %24 = alloca i8, align 1
  %25 = alloca i8*, align 8
  %26 = alloca i8*, align 8
  %27 = alloca i64, align 8
  %28 = alloca i8, align 1
  %29 = alloca i64, align 8
  %30 = alloca %struct.__mbstate_t, align 4
  %31 = alloca i8, align 1
  %32 = alloca i64, align 8
  %33 = alloca i8*, align 8
  %34 = alloca %struct.__mbstate_t, align 4
  %35 = alloca i32, align 4
  %36 = alloca i64, align 8
  %37 = alloca i8, align 1
  %38 = alloca i32, align 4
  %39 = alloca i8, align 1
  %40 = alloca i64, align 8
  %41 = alloca i8*, align 8
  store i32 %0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !1772, metadata !DIExpression()), !dbg !1773
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !1774, metadata !DIExpression()), !dbg !1775
  store %struct.fstatus* %2, %struct.fstatus** %7, align 8
  call void @llvm.dbg.declare(metadata %struct.fstatus** %7, metadata !1776, metadata !DIExpression()), !dbg !1777
  store i64 %3, i64* %8, align 8
  call void @llvm.dbg.declare(metadata i64* %8, metadata !1778, metadata !DIExpression()), !dbg !1779
  call void @llvm.dbg.declare(metadata i8* %9, metadata !1780, metadata !DIExpression()), !dbg !1781
  store i8 1, i8* %9, align 1, !dbg !1781
  call void @llvm.dbg.declare(metadata [16385 x i8]* %10, metadata !1782, metadata !DIExpression()), !dbg !1786
  call void @llvm.dbg.declare(metadata i64* %11, metadata !1787, metadata !DIExpression()), !dbg !1788
  call void @llvm.dbg.declare(metadata i64* %12, metadata !1789, metadata !DIExpression()), !dbg !1790
  call void @llvm.dbg.declare(metadata i64* %13, metadata !1791, metadata !DIExpression()), !dbg !1792
  call void @llvm.dbg.declare(metadata i64* %14, metadata !1793, metadata !DIExpression()), !dbg !1794
  call void @llvm.dbg.declare(metadata i64* %15, metadata !1795, metadata !DIExpression()), !dbg !1796
  call void @llvm.dbg.declare(metadata i64* %16, metadata !1797, metadata !DIExpression()), !dbg !1798
  call void @llvm.dbg.declare(metadata i8* %17, metadata !1799, metadata !DIExpression()), !dbg !1800
  call void @llvm.dbg.declare(metadata i8* %18, metadata !1801, metadata !DIExpression()), !dbg !1802
  call void @llvm.dbg.declare(metadata i8* %19, metadata !1803, metadata !DIExpression()), !dbg !1804
  call void @llvm.dbg.declare(metadata i8** %20, metadata !1805, metadata !DIExpression()), !dbg !1806
  %42 = load i8*, i8** %6, align 8, !dbg !1807
  %43 = icmp ne i8* %42, null, !dbg !1807
  br i1 %43, label %44, label %46, !dbg !1807

44:                                               ; preds = %4
  %45 = load i8*, i8** %6, align 8, !dbg !1808
  br label %47, !dbg !1807

46:                                               ; preds = %4
  br label %47, !dbg !1807

47:                                               ; preds = %46, %44
  %48 = phi i8* [ %45, %44 ], [ getelementptr inbounds ([15 x i8], [15 x i8]* @.str.54, i64 0, i64 0), %46 ], !dbg !1807
  store i8* %48, i8** %20, align 8, !dbg !1806
  store i64 0, i64* %16, align 8, !dbg !1809
  store i64 0, i64* %15, align 8, !dbg !1810
  store i64 0, i64* %14, align 8, !dbg !1811
  store i64 0, i64* %13, align 8, !dbg !1812
  store i64 0, i64* %12, align 8, !dbg !1813
  %49 = call i64 @__ctype_get_mb_cur_max() #15, !dbg !1814
  %50 = icmp ugt i64 %49, 1, !dbg !1816
  br i1 %50, label %51, label %58, !dbg !1817

51:                                               ; preds = %47
  %52 = load i8, i8* @print_bytes, align 1, !dbg !1818
  %53 = trunc i8 %52 to i1, !dbg !1818
  %54 = zext i1 %53 to i8, !dbg !1820
  store i8 %54, i8* %17, align 1, !dbg !1820
  %55 = load i8, i8* @print_chars, align 1, !dbg !1821
  %56 = trunc i8 %55 to i1, !dbg !1821
  %57 = zext i1 %56 to i8, !dbg !1822
  store i8 %57, i8* %18, align 1, !dbg !1822
  br label %67, !dbg !1823

58:                                               ; preds = %47
  %59 = load i8, i8* @print_bytes, align 1, !dbg !1824
  %60 = trunc i8 %59 to i1, !dbg !1824
  br i1 %60, label %64, label %61, !dbg !1826

61:                                               ; preds = %58
  %62 = load i8, i8* @print_chars, align 1, !dbg !1827
  %63 = trunc i8 %62 to i1, !dbg !1827
  br label %64, !dbg !1826

64:                                               ; preds = %61, %58
  %65 = phi i1 [ true, %58 ], [ %63, %61 ]
  %66 = zext i1 %65 to i8, !dbg !1828
  store i8 %66, i8* %17, align 1, !dbg !1828
  store i8 0, i8* %18, align 1, !dbg !1829
  br label %67

67:                                               ; preds = %64, %51
  %68 = load i8, i8* @print_words, align 1, !dbg !1830
  %69 = trunc i8 %68 to i1, !dbg !1830
  br i1 %69, label %73, label %70, !dbg !1831

70:                                               ; preds = %67
  %71 = load i8, i8* @print_linelength, align 1, !dbg !1832
  %72 = trunc i8 %71 to i1, !dbg !1832
  br label %73, !dbg !1831

73:                                               ; preds = %70, %67
  %74 = phi i1 [ true, %67 ], [ %72, %70 ]
  %75 = zext i1 %74 to i8, !dbg !1833
  store i8 %75, i8* %19, align 1, !dbg !1833
  %76 = load i8, i8* %17, align 1, !dbg !1834
  %77 = trunc i8 %76 to i1, !dbg !1834
  br i1 %77, label %78, label %87, !dbg !1836

78:                                               ; preds = %73
  %79 = load i8, i8* %18, align 1, !dbg !1837
  %80 = trunc i8 %79 to i1, !dbg !1837
  br i1 %80, label %87, label %81, !dbg !1838

81:                                               ; preds = %78
  %82 = load i8, i8* @print_lines, align 1, !dbg !1839
  %83 = trunc i8 %82 to i1, !dbg !1839
  br i1 %83, label %87, label %84, !dbg !1840

84:                                               ; preds = %81
  %85 = load i8, i8* %19, align 1, !dbg !1841
  %86 = trunc i8 %85 to i1, !dbg !1841
  br i1 %86, label %87, label %89, !dbg !1842

87:                                               ; preds = %84, %81, %78, %73
  %88 = load i32, i32* %5, align 4, !dbg !1843
  call void @fdadvise(i32 %88, i64 0, i64 0, i32 2), !dbg !1844
  br label %89, !dbg !1844

89:                                               ; preds = %87, %84
  %90 = load i8, i8* %17, align 1, !dbg !1845
  %91 = trunc i8 %90 to i1, !dbg !1845
  br i1 %91, label %92, label %220, !dbg !1847

92:                                               ; preds = %89
  %93 = load i8, i8* %18, align 1, !dbg !1848
  %94 = trunc i8 %93 to i1, !dbg !1848
  br i1 %94, label %220, label %95, !dbg !1849

95:                                               ; preds = %92
  %96 = load i8, i8* @print_lines, align 1, !dbg !1850
  %97 = trunc i8 %96 to i1, !dbg !1850
  br i1 %97, label %220, label %98, !dbg !1851

98:                                               ; preds = %95
  %99 = load i8, i8* %19, align 1, !dbg !1852
  %100 = trunc i8 %99 to i1, !dbg !1852
  br i1 %100, label %220, label %101, !dbg !1853

101:                                              ; preds = %98
  call void @llvm.dbg.declare(metadata i8* %21, metadata !1854, metadata !DIExpression()), !dbg !1856
  store i8 0, i8* %21, align 1, !dbg !1856
  %102 = load %struct.fstatus*, %struct.fstatus** %7, align 8, !dbg !1857
  %103 = getelementptr inbounds %struct.fstatus, %struct.fstatus* %102, i32 0, i32 0, !dbg !1859
  %104 = load i32, i32* %103, align 8, !dbg !1859
  %105 = icmp slt i32 0, %104, !dbg !1860
  br i1 %105, label %106, label %113, !dbg !1861

106:                                              ; preds = %101
  %107 = load i32, i32* %5, align 4, !dbg !1862
  %108 = load %struct.fstatus*, %struct.fstatus** %7, align 8, !dbg !1863
  %109 = getelementptr inbounds %struct.fstatus, %struct.fstatus* %108, i32 0, i32 1, !dbg !1864
  %110 = call i32 @fstat(i32 %107, %struct.stat* %109) #15, !dbg !1865
  %111 = load %struct.fstatus*, %struct.fstatus** %7, align 8, !dbg !1866
  %112 = getelementptr inbounds %struct.fstatus, %struct.fstatus* %111, i32 0, i32 0, !dbg !1867
  store i32 %110, i32* %112, align 8, !dbg !1868
  br label %113, !dbg !1866

113:                                              ; preds = %106, %101
  %114 = load %struct.fstatus*, %struct.fstatus** %7, align 8, !dbg !1869
  %115 = getelementptr inbounds %struct.fstatus, %struct.fstatus* %114, i32 0, i32 0, !dbg !1871
  %116 = load i32, i32* %115, align 8, !dbg !1871
  %117 = icmp ne i32 %116, 0, !dbg !1869
  br i1 %117, label %196, label %118, !dbg !1872

118:                                              ; preds = %113
  %119 = load %struct.fstatus*, %struct.fstatus** %7, align 8, !dbg !1873
  %120 = getelementptr inbounds %struct.fstatus, %struct.fstatus* %119, i32 0, i32 1, !dbg !1874
  %121 = call zeroext i1 @usable_st_size(%struct.stat* %120), !dbg !1875
  br i1 %121, label %122, label %196, !dbg !1876

122:                                              ; preds = %118
  %123 = load %struct.fstatus*, %struct.fstatus** %7, align 8, !dbg !1877
  %124 = getelementptr inbounds %struct.fstatus, %struct.fstatus* %123, i32 0, i32 1, !dbg !1878
  %125 = getelementptr inbounds %struct.stat, %struct.stat* %124, i32 0, i32 8, !dbg !1879
  %126 = load i64, i64* %125, align 8, !dbg !1879
  %127 = icmp sle i64 0, %126, !dbg !1880
  br i1 %127, label %128, label %196, !dbg !1881

128:                                              ; preds = %122
  call void @llvm.dbg.declare(metadata i64* %22, metadata !1882, metadata !DIExpression()), !dbg !1884
  %129 = load %struct.fstatus*, %struct.fstatus** %7, align 8, !dbg !1885
  %130 = getelementptr inbounds %struct.fstatus, %struct.fstatus* %129, i32 0, i32 1, !dbg !1886
  %131 = getelementptr inbounds %struct.stat, %struct.stat* %130, i32 0, i32 8, !dbg !1887
  %132 = load i64, i64* %131, align 8, !dbg !1887
  store i64 %132, i64* %22, align 8, !dbg !1884
  %133 = load i64, i64* %8, align 8, !dbg !1888
  %134 = icmp slt i64 %133, 0, !dbg !1890
  br i1 %134, label %135, label %138, !dbg !1891

135:                                              ; preds = %128
  %136 = load i32, i32* %5, align 4, !dbg !1892
  %137 = call i64 @lseek(i32 %136, i64 0, i32 1) #15, !dbg !1893
  store i64 %137, i64* %8, align 8, !dbg !1894
  br label %138, !dbg !1895

138:                                              ; preds = %135, %128
  %139 = load i64, i64* %22, align 8, !dbg !1896
  %140 = load i64, i64* @page_size, align 8, !dbg !1898
  %141 = urem i64 %139, %140, !dbg !1899
  %142 = icmp ne i64 %141, 0, !dbg !1899
  br i1 %142, label %143, label %154, !dbg !1900

143:                                              ; preds = %138
  %144 = load i64, i64* %22, align 8, !dbg !1901
  %145 = load i64, i64* %8, align 8, !dbg !1903
  %146 = icmp ult i64 %144, %145, !dbg !1904
  br i1 %146, label %147, label %148, !dbg !1901

147:                                              ; preds = %143
  br label %152, !dbg !1901

148:                                              ; preds = %143
  %149 = load i64, i64* %22, align 8, !dbg !1905
  %150 = load i64, i64* %8, align 8, !dbg !1906
  %151 = sub i64 %149, %150, !dbg !1907
  br label %152, !dbg !1901

152:                                              ; preds = %148, %147
  %153 = phi i64 [ 0, %147 ], [ %151, %148 ], !dbg !1901
  store i64 %153, i64* %15, align 8, !dbg !1908
  store i8 1, i8* %21, align 1, !dbg !1909
  br label %195, !dbg !1910

154:                                              ; preds = %138
  call void @llvm.dbg.declare(metadata i64* %23, metadata !1911, metadata !DIExpression()), !dbg !1913
  %155 = load i64, i64* %22, align 8, !dbg !1914
  %156 = load i64, i64* %22, align 8, !dbg !1915
  %157 = load %struct.fstatus*, %struct.fstatus** %7, align 8, !dbg !1916
  %158 = getelementptr inbounds %struct.fstatus, %struct.fstatus* %157, i32 0, i32 1, !dbg !1916
  %159 = getelementptr inbounds %struct.stat, %struct.stat* %158, i32 0, i32 9, !dbg !1916
  %160 = load i64, i64* %159, align 8, !dbg !1916
  %161 = icmp slt i64 0, %160, !dbg !1916
  br i1 %161, label %162, label %173, !dbg !1916

162:                                              ; preds = %154
  %163 = load %struct.fstatus*, %struct.fstatus** %7, align 8, !dbg !1916
  %164 = getelementptr inbounds %struct.fstatus, %struct.fstatus* %163, i32 0, i32 1, !dbg !1916
  %165 = getelementptr inbounds %struct.stat, %struct.stat* %164, i32 0, i32 9, !dbg !1916
  %166 = load i64, i64* %165, align 8, !dbg !1916
  %167 = icmp ule i64 %166, 2305843009213693952, !dbg !1916
  br i1 %167, label %168, label %173, !dbg !1916

168:                                              ; preds = %162
  %169 = load %struct.fstatus*, %struct.fstatus** %7, align 8, !dbg !1916
  %170 = getelementptr inbounds %struct.fstatus, %struct.fstatus* %169, i32 0, i32 1, !dbg !1916
  %171 = getelementptr inbounds %struct.stat, %struct.stat* %170, i32 0, i32 9, !dbg !1916
  %172 = load i64, i64* %171, align 8, !dbg !1916
  br label %174, !dbg !1916

173:                                              ; preds = %162, %154
  br label %174, !dbg !1916

174:                                              ; preds = %173, %168
  %175 = phi i64 [ %172, %168 ], [ 512, %173 ], !dbg !1916
  %176 = add nsw i64 %175, 1, !dbg !1917
  %177 = urem i64 %156, %176, !dbg !1918
  %178 = sub i64 %155, %177, !dbg !1919
  store i64 %178, i64* %23, align 8, !dbg !1913
  %179 = load i64, i64* %8, align 8, !dbg !1920
  %180 = icmp sle i64 0, %179, !dbg !1922
  br i1 %180, label %181, label %194, !dbg !1923

181:                                              ; preds = %174
  %182 = load i64, i64* %8, align 8, !dbg !1924
  %183 = load i64, i64* %23, align 8, !dbg !1925
  %184 = icmp slt i64 %182, %183, !dbg !1926
  br i1 %184, label %185, label %194, !dbg !1927

185:                                              ; preds = %181
  %186 = load i32, i32* %5, align 4, !dbg !1928
  %187 = load i64, i64* %23, align 8, !dbg !1929
  %188 = call i64 @lseek(i32 %186, i64 %187, i32 1) #15, !dbg !1930
  %189 = icmp sle i64 0, %188, !dbg !1931
  br i1 %189, label %190, label %194, !dbg !1932

190:                                              ; preds = %185
  %191 = load i64, i64* %23, align 8, !dbg !1933
  %192 = load i64, i64* %8, align 8, !dbg !1934
  %193 = sub nsw i64 %191, %192, !dbg !1935
  store i64 %193, i64* %15, align 8, !dbg !1936
  br label %194, !dbg !1937

194:                                              ; preds = %190, %185, %181, %174
  br label %195

195:                                              ; preds = %194, %152
  br label %196, !dbg !1938

196:                                              ; preds = %195, %122, %118, %113
  %197 = load i8, i8* %21, align 1, !dbg !1939
  %198 = trunc i8 %197 to i1, !dbg !1939
  br i1 %198, label %219, label %199, !dbg !1941

199:                                              ; preds = %196
  %200 = load i32, i32* %5, align 4, !dbg !1942
  call void @fdadvise(i32 %200, i64 0, i64 0, i32 2), !dbg !1944
  br label %201, !dbg !1945

201:                                              ; preds = %214, %199
  %202 = load i32, i32* %5, align 4, !dbg !1946
  %203 = getelementptr inbounds [16385 x i8], [16385 x i8]* %10, i64 0, i64 0, !dbg !1947
  %204 = call i64 @safe_read(i32 %202, i8* %203, i64 16384), !dbg !1948
  store i64 %204, i64* %11, align 8, !dbg !1949
  %205 = icmp ugt i64 %204, 0, !dbg !1950
  br i1 %205, label %206, label %218, !dbg !1945

206:                                              ; preds = %201
  %207 = load i64, i64* %11, align 8, !dbg !1951
  %208 = icmp eq i64 %207, -1, !dbg !1954
  br i1 %208, label %209, label %214, !dbg !1955

209:                                              ; preds = %206
  %210 = call i32* @__errno_location() #16, !dbg !1956
  %211 = load i32, i32* %210, align 4, !dbg !1956
  %212 = load i8*, i8** %20, align 8, !dbg !1958
  %213 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %212), !dbg !1958
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %211, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), i8* %213), !dbg !1959
  store i8 0, i8* %9, align 1, !dbg !1960
  br label %218, !dbg !1961

214:                                              ; preds = %206
  %215 = load i64, i64* %11, align 8, !dbg !1962
  %216 = load i64, i64* %15, align 8, !dbg !1963
  %217 = add i64 %216, %215, !dbg !1963
  store i64 %217, i64* %15, align 8, !dbg !1963
  br label %201, !dbg !1945, !llvm.loop !1964

218:                                              ; preds = %209, %201
  br label %219, !dbg !1966

219:                                              ; preds = %218, %196
  br label %609, !dbg !1967

220:                                              ; preds = %98, %95, %92, %89
  %221 = load i8, i8* %18, align 1, !dbg !1968
  %222 = trunc i8 %221 to i1, !dbg !1968
  br i1 %222, label %294, label %223, !dbg !1970

223:                                              ; preds = %220
  %224 = load i8, i8* %19, align 1, !dbg !1971
  %225 = trunc i8 %224 to i1, !dbg !1971
  br i1 %225, label %294, label %226, !dbg !1972

226:                                              ; preds = %223
  call void @llvm.dbg.declare(metadata i8* %24, metadata !1973, metadata !DIExpression()), !dbg !1975
  store i8 0, i8* %24, align 1, !dbg !1975
  br label %227, !dbg !1976

227:                                              ; preds = %292, %226
  %228 = load i32, i32* %5, align 4, !dbg !1977
  %229 = getelementptr inbounds [16385 x i8], [16385 x i8]* %10, i64 0, i64 0, !dbg !1978
  %230 = call i64 @safe_read(i32 %228, i8* %229, i64 16384), !dbg !1979
  store i64 %230, i64* %11, align 8, !dbg !1980
  %231 = icmp ugt i64 %230, 0, !dbg !1981
  br i1 %231, label %232, label %293, !dbg !1976

232:                                              ; preds = %227
  %233 = load i64, i64* %11, align 8, !dbg !1982
  %234 = icmp eq i64 %233, -1, !dbg !1985
  br i1 %234, label %235, label %240, !dbg !1986

235:                                              ; preds = %232
  %236 = call i32* @__errno_location() #16, !dbg !1987
  %237 = load i32, i32* %236, align 4, !dbg !1987
  %238 = load i8*, i8** %20, align 8, !dbg !1989
  %239 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %238), !dbg !1989
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %237, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), i8* %239), !dbg !1990
  store i8 0, i8* %9, align 1, !dbg !1991
  br label %293, !dbg !1992

240:                                              ; preds = %232
  %241 = load i64, i64* %11, align 8, !dbg !1993
  %242 = load i64, i64* %15, align 8, !dbg !1994
  %243 = add i64 %242, %241, !dbg !1994
  store i64 %243, i64* %15, align 8, !dbg !1994
  call void @llvm.dbg.declare(metadata i8** %25, metadata !1995, metadata !DIExpression()), !dbg !1996
  %244 = getelementptr inbounds [16385 x i8], [16385 x i8]* %10, i64 0, i64 0, !dbg !1997
  store i8* %244, i8** %25, align 8, !dbg !1996
  call void @llvm.dbg.declare(metadata i8** %26, metadata !1998, metadata !DIExpression()), !dbg !1999
  %245 = load i8*, i8** %25, align 8, !dbg !2000
  %246 = load i64, i64* %11, align 8, !dbg !2001
  %247 = getelementptr inbounds i8, i8* %245, i64 %246, !dbg !2002
  store i8* %247, i8** %26, align 8, !dbg !1999
  call void @llvm.dbg.declare(metadata i64* %27, metadata !2003, metadata !DIExpression()), !dbg !2004
  %248 = load i64, i64* %12, align 8, !dbg !2005
  store i64 %248, i64* %27, align 8, !dbg !2004
  %249 = load i8, i8* %24, align 1, !dbg !2006
  %250 = trunc i8 %249 to i1, !dbg !2006
  br i1 %250, label %267, label %251, !dbg !2008

251:                                              ; preds = %240
  br label %252, !dbg !2009

252:                                              ; preds = %256, %251
  %253 = load i8*, i8** %25, align 8, !dbg !2011
  %254 = load i8*, i8** %26, align 8, !dbg !2012
  %255 = icmp ne i8* %253, %254, !dbg !2013
  br i1 %255, label %256, label %266, !dbg !2009

256:                                              ; preds = %252
  %257 = load i8*, i8** %25, align 8, !dbg !2014
  %258 = getelementptr inbounds i8, i8* %257, i32 1, !dbg !2014
  store i8* %258, i8** %25, align 8, !dbg !2014
  %259 = load i8, i8* %257, align 1, !dbg !2015
  %260 = sext i8 %259 to i32, !dbg !2015
  %261 = icmp eq i32 %260, 10, !dbg !2016
  %262 = zext i1 %261 to i32, !dbg !2016
  %263 = sext i32 %262 to i64, !dbg !2015
  %264 = load i64, i64* %12, align 8, !dbg !2017
  %265 = add i64 %264, %263, !dbg !2017
  store i64 %265, i64* %12, align 8, !dbg !2017
  br label %252, !dbg !2009, !llvm.loop !2018

266:                                              ; preds = %252
  br label %283, !dbg !2020

267:                                              ; preds = %240
  br label %268, !dbg !2021

268:                                              ; preds = %277, %267
  %269 = load i8*, i8** %25, align 8, !dbg !2023
  %270 = load i8*, i8** %26, align 8, !dbg !2024
  %271 = load i8*, i8** %25, align 8, !dbg !2025
  %272 = ptrtoint i8* %270 to i64, !dbg !2026
  %273 = ptrtoint i8* %271 to i64, !dbg !2026
  %274 = sub i64 %272, %273, !dbg !2026
  %275 = call i8* @memchr(i8* %269, i32 10, i64 %274) #14, !dbg !2027
  store i8* %275, i8** %25, align 8, !dbg !2028
  %276 = icmp ne i8* %275, null, !dbg !2021
  br i1 %276, label %277, label %282, !dbg !2021

277:                                              ; preds = %268
  %278 = load i8*, i8** %25, align 8, !dbg !2029
  %279 = getelementptr inbounds i8, i8* %278, i32 1, !dbg !2029
  store i8* %279, i8** %25, align 8, !dbg !2029
  %280 = load i64, i64* %12, align 8, !dbg !2031
  %281 = add i64 %280, 1, !dbg !2031
  store i64 %281, i64* %12, align 8, !dbg !2031
  br label %268, !dbg !2021, !llvm.loop !2032

282:                                              ; preds = %268
  br label %283

283:                                              ; preds = %282, %266
  %284 = load i64, i64* %12, align 8, !dbg !2034
  %285 = load i64, i64* %27, align 8, !dbg !2036
  %286 = sub i64 %284, %285, !dbg !2037
  %287 = load i64, i64* %11, align 8, !dbg !2038
  %288 = udiv i64 %287, 15, !dbg !2039
  %289 = icmp ule i64 %286, %288, !dbg !2040
  br i1 %289, label %290, label %291, !dbg !2041

290:                                              ; preds = %283
  store i8 1, i8* %24, align 1, !dbg !2042
  br label %292, !dbg !2043

291:                                              ; preds = %283
  store i8 0, i8* %24, align 1, !dbg !2044
  br label %292

292:                                              ; preds = %291, %290
  br label %227, !dbg !1976, !llvm.loop !2045

293:                                              ; preds = %235, %227
  br label %608, !dbg !2047

294:                                              ; preds = %223, %220
  %295 = call i64 @__ctype_get_mb_cur_max() #15, !dbg !2048
  %296 = icmp ugt i64 %295, 1, !dbg !2050
  br i1 %296, label %297, label %498, !dbg !2051

297:                                              ; preds = %294
  call void @llvm.dbg.declare(metadata i8* %28, metadata !2052, metadata !DIExpression()), !dbg !2054
  store i8 0, i8* %28, align 1, !dbg !2054
  call void @llvm.dbg.declare(metadata i64* %29, metadata !2055, metadata !DIExpression()), !dbg !2056
  store i64 0, i64* %29, align 8, !dbg !2056
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t* %30, metadata !2057, metadata !DIExpression()), !dbg !2073
  %298 = bitcast %struct.__mbstate_t* %30 to i8*, !dbg !2073
  call void @llvm.memset.p0i8.i64(i8* align 4 %298, i8 0, i64 8, i1 false), !dbg !2073
  call void @llvm.dbg.declare(metadata i8* %31, metadata !2074, metadata !DIExpression()), !dbg !2075
  store i8 0, i8* %31, align 1, !dbg !2075
  call void @llvm.dbg.declare(metadata i64* %32, metadata !2076, metadata !DIExpression()), !dbg !2077
  store i64 0, i64* %32, align 8, !dbg !2077
  br label %299, !dbg !2078

299:                                              ; preds = %484, %297
  %300 = load i32, i32* %5, align 4, !dbg !2079
  %301 = getelementptr inbounds [16385 x i8], [16385 x i8]* %10, i64 0, i64 0, !dbg !2080
  %302 = load i64, i64* %32, align 8, !dbg !2081
  %303 = getelementptr inbounds i8, i8* %301, i64 %302, !dbg !2082
  %304 = load i64, i64* %32, align 8, !dbg !2083
  %305 = sub i64 16384, %304, !dbg !2084
  %306 = call i64 @safe_read(i32 %300, i8* %303, i64 %305), !dbg !2085
  store i64 %306, i64* %11, align 8, !dbg !2086
  %307 = icmp ugt i64 %306, 0, !dbg !2087
  br i1 %307, label %308, label %486, !dbg !2078

308:                                              ; preds = %299
  call void @llvm.dbg.declare(metadata i8** %33, metadata !2088, metadata !DIExpression()), !dbg !2090
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t* %34, metadata !2091, metadata !DIExpression()), !dbg !2092
  %309 = load i64, i64* %11, align 8, !dbg !2093
  %310 = icmp eq i64 %309, -1, !dbg !2095
  br i1 %310, label %311, label %316, !dbg !2096

311:                                              ; preds = %308
  %312 = call i32* @__errno_location() #16, !dbg !2097
  %313 = load i32, i32* %312, align 4, !dbg !2097
  %314 = load i8*, i8** %20, align 8, !dbg !2099
  %315 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %314), !dbg !2099
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %313, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), i8* %315), !dbg !2100
  store i8 0, i8* %9, align 1, !dbg !2101
  br label %486, !dbg !2102

316:                                              ; preds = %308
  %317 = load i64, i64* %11, align 8, !dbg !2103
  %318 = load i64, i64* %15, align 8, !dbg !2104
  %319 = add i64 %318, %317, !dbg !2104
  store i64 %319, i64* %15, align 8, !dbg !2104
  %320 = getelementptr inbounds [16385 x i8], [16385 x i8]* %10, i64 0, i64 0, !dbg !2105
  store i8* %320, i8** %33, align 8, !dbg !2106
  %321 = load i64, i64* %32, align 8, !dbg !2107
  %322 = load i64, i64* %11, align 8, !dbg !2108
  %323 = add i64 %322, %321, !dbg !2108
  store i64 %323, i64* %11, align 8, !dbg !2108
  br label %324, !dbg !2109

324:                                              ; preds = %466, %316
  call void @llvm.dbg.declare(metadata i32* %35, metadata !2110, metadata !DIExpression()), !dbg !2113
  call void @llvm.dbg.declare(metadata i64* %36, metadata !2114, metadata !DIExpression()), !dbg !2115
  call void @llvm.dbg.declare(metadata i8* %37, metadata !2116, metadata !DIExpression()), !dbg !2117
  store i8 1, i8* %37, align 1, !dbg !2117
  %325 = load i8, i8* %31, align 1, !dbg !2118
  %326 = trunc i8 %325 to i1, !dbg !2118
  br i1 %326, label %335, label %327, !dbg !2120

327:                                              ; preds = %324
  %328 = load i8*, i8** %33, align 8, !dbg !2121
  %329 = load i8, i8* %328, align 1, !dbg !2122
  %330 = call zeroext i1 @is_basic(i8 signext %329), !dbg !2123
  br i1 %330, label %331, label %335, !dbg !2124

331:                                              ; preds = %327
  store i64 1, i64* %36, align 8, !dbg !2125
  %332 = load i8*, i8** %33, align 8, !dbg !2127
  %333 = load i8, i8* %332, align 1, !dbg !2128
  %334 = sext i8 %333 to i32, !dbg !2128
  store i32 %334, i32* %35, align 4, !dbg !2129
  store i8 0, i8* %37, align 1, !dbg !2130
  br label %363, !dbg !2131

335:                                              ; preds = %327, %324
  store i8 1, i8* %31, align 1, !dbg !2132
  %336 = bitcast %struct.__mbstate_t* %34 to i8*, !dbg !2134
  %337 = bitcast %struct.__mbstate_t* %30 to i8*, !dbg !2134
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %336, i8* align 4 %337, i64 8, i1 false), !dbg !2134
  %338 = load i8*, i8** %33, align 8, !dbg !2135
  %339 = load i64, i64* %11, align 8, !dbg !2136
  %340 = call i64 @rpl_mbrtowc(i32* %35, i8* %338, i64 %339, %struct.__mbstate_t* %30), !dbg !2137
  store i64 %340, i64* %36, align 8, !dbg !2138
  %341 = load i64, i64* %36, align 8, !dbg !2139
  %342 = icmp eq i64 %341, -2, !dbg !2141
  br i1 %342, label %343, label %346, !dbg !2142

343:                                              ; preds = %335
  %344 = bitcast %struct.__mbstate_t* %30 to i8*, !dbg !2143
  %345 = bitcast %struct.__mbstate_t* %34 to i8*, !dbg !2143
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %344, i8* align 4 %345, i64 8, i1 false), !dbg !2143
  br label %469, !dbg !2145

346:                                              ; preds = %335
  %347 = load i64, i64* %36, align 8, !dbg !2146
  %348 = icmp eq i64 %347, -1, !dbg !2148
  br i1 %348, label %349, label %354, !dbg !2149

349:                                              ; preds = %346
  %350 = load i8*, i8** %33, align 8, !dbg !2150
  %351 = getelementptr inbounds i8, i8* %350, i32 1, !dbg !2150
  store i8* %351, i8** %33, align 8, !dbg !2150
  %352 = load i64, i64* %11, align 8, !dbg !2152
  %353 = add i64 %352, -1, !dbg !2152
  store i64 %353, i64* %11, align 8, !dbg !2152
  br label %466, !dbg !2153

354:                                              ; preds = %346
  %355 = call i32 @mbsinit(%struct.__mbstate_t* %30) #14, !dbg !2154
  %356 = icmp ne i32 %355, 0, !dbg !2154
  br i1 %356, label %357, label %358, !dbg !2156

357:                                              ; preds = %354
  store i8 0, i8* %31, align 1, !dbg !2157
  br label %358, !dbg !2158

358:                                              ; preds = %357, %354
  %359 = load i64, i64* %36, align 8, !dbg !2159
  %360 = icmp eq i64 %359, 0, !dbg !2161
  br i1 %360, label %361, label %362, !dbg !2162

361:                                              ; preds = %358
  store i32 0, i32* %35, align 4, !dbg !2163
  store i64 1, i64* %36, align 8, !dbg !2165
  br label %362, !dbg !2166

362:                                              ; preds = %361, %358
  br label %363

363:                                              ; preds = %362, %331
  %364 = load i32, i32* %35, align 4, !dbg !2167
  switch i32 %364, label %391 [
    i32 10, label %365
    i32 13, label %368
    i32 12, label %368
    i32 9, label %375
    i32 32, label %381
    i32 11, label %384
  ], !dbg !2168

365:                                              ; preds = %363
  %366 = load i64, i64* %12, align 8, !dbg !2169
  %367 = add i64 %366, 1, !dbg !2169
  store i64 %367, i64* %12, align 8, !dbg !2169
  br label %368, !dbg !2171

368:                                              ; preds = %363, %363, %365
  %369 = load i64, i64* %29, align 8, !dbg !2172
  %370 = load i64, i64* %16, align 8, !dbg !2174
  %371 = icmp ugt i64 %369, %370, !dbg !2175
  br i1 %371, label %372, label %374, !dbg !2176

372:                                              ; preds = %368
  %373 = load i64, i64* %29, align 8, !dbg !2177
  store i64 %373, i64* %16, align 8, !dbg !2178
  br label %374, !dbg !2179

374:                                              ; preds = %372, %368
  store i64 0, i64* %29, align 8, !dbg !2180
  br label %385, !dbg !2181

375:                                              ; preds = %363
  %376 = load i64, i64* %29, align 8, !dbg !2182
  %377 = urem i64 %376, 8, !dbg !2183
  %378 = sub i64 8, %377, !dbg !2184
  %379 = load i64, i64* %29, align 8, !dbg !2185
  %380 = add i64 %379, %378, !dbg !2185
  store i64 %380, i64* %29, align 8, !dbg !2185
  br label %385, !dbg !2186

381:                                              ; preds = %363
  %382 = load i64, i64* %29, align 8, !dbg !2187
  %383 = add i64 %382, 1, !dbg !2187
  store i64 %383, i64* %29, align 8, !dbg !2187
  br label %384, !dbg !2188

384:                                              ; preds = %363, %381
  br label %385, !dbg !2188

385:                                              ; preds = %453, %420, %384, %375, %374
  call void @llvm.dbg.label(metadata !2189), !dbg !2190
  %386 = load i8, i8* %28, align 1, !dbg !2191
  %387 = trunc i8 %386 to i1, !dbg !2191
  %388 = zext i1 %387 to i64, !dbg !2191
  %389 = load i64, i64* %13, align 8, !dbg !2192
  %390 = add i64 %389, %388, !dbg !2192
  store i64 %390, i64* %13, align 8, !dbg !2192
  store i8 0, i8* %28, align 1, !dbg !2193
  br label %457, !dbg !2194

391:                                              ; preds = %363
  %392 = load i8, i8* %37, align 1, !dbg !2195
  %393 = trunc i8 %392 to i1, !dbg !2195
  br i1 %393, label %394, label %422, !dbg !2197

394:                                              ; preds = %391
  %395 = load i32, i32* %35, align 4, !dbg !2198
  %396 = call i32 @iswprint(i32 %395) #15, !dbg !2199
  %397 = icmp ne i32 %396, 0, !dbg !2199
  br i1 %397, label %398, label %422, !dbg !2200

398:                                              ; preds = %394
  %399 = load i8, i8* @print_linelength, align 1, !dbg !2201
  %400 = trunc i8 %399 to i1, !dbg !2201
  br i1 %400, label %401, label %412, !dbg !2204

401:                                              ; preds = %398
  call void @llvm.dbg.declare(metadata i32* %38, metadata !2205, metadata !DIExpression()), !dbg !2207
  %402 = load i32, i32* %35, align 4, !dbg !2208
  %403 = call i32 @wcwidth(i32 %402) #15, !dbg !2209
  store i32 %403, i32* %38, align 4, !dbg !2207
  %404 = load i32, i32* %38, align 4, !dbg !2210
  %405 = icmp sgt i32 %404, 0, !dbg !2212
  br i1 %405, label %406, label %411, !dbg !2213

406:                                              ; preds = %401
  %407 = load i32, i32* %38, align 4, !dbg !2214
  %408 = sext i32 %407 to i64, !dbg !2214
  %409 = load i64, i64* %29, align 8, !dbg !2215
  %410 = add i64 %409, %408, !dbg !2215
  store i64 %410, i64* %29, align 8, !dbg !2215
  br label %411, !dbg !2216

411:                                              ; preds = %406, %401
  br label %412, !dbg !2217

412:                                              ; preds = %411, %398
  %413 = load i32, i32* %35, align 4, !dbg !2218
  %414 = call i32 @iswspace(i32 %413) #15, !dbg !2220
  %415 = icmp ne i32 %414, 0, !dbg !2220
  br i1 %415, label %420, label %416, !dbg !2221

416:                                              ; preds = %412
  %417 = load i32, i32* %35, align 4, !dbg !2222
  %418 = call i32 @iswnbspace(i32 %417) #14, !dbg !2223
  %419 = icmp ne i32 %418, 0, !dbg !2223
  br i1 %419, label %420, label %421, !dbg !2224

420:                                              ; preds = %416, %412
  br label %385, !dbg !2225

421:                                              ; preds = %416
  store i8 1, i8* %28, align 1, !dbg !2226
  br label %456, !dbg !2227

422:                                              ; preds = %394, %391
  %423 = load i8, i8* %37, align 1, !dbg !2228
  %424 = trunc i8 %423 to i1, !dbg !2228
  br i1 %424, label %455, label %425, !dbg !2230

425:                                              ; preds = %422
  %426 = call i16** @__ctype_b_loc() #16, !dbg !2231
  %427 = load i16*, i16** %426, align 8, !dbg !2231
  %428 = load i8*, i8** %33, align 8, !dbg !2231
  %429 = load i8, i8* %428, align 1, !dbg !2231
  %430 = call zeroext i8 @to_uchar(i8 signext %429), !dbg !2231
  %431 = zext i8 %430 to i32, !dbg !2231
  %432 = sext i32 %431 to i64, !dbg !2231
  %433 = getelementptr inbounds i16, i16* %427, i64 %432, !dbg !2231
  %434 = load i16, i16* %433, align 2, !dbg !2231
  %435 = zext i16 %434 to i32, !dbg !2231
  %436 = and i32 %435, 16384, !dbg !2231
  %437 = icmp ne i32 %436, 0, !dbg !2231
  br i1 %437, label %438, label %455, !dbg !2232

438:                                              ; preds = %425
  %439 = load i64, i64* %29, align 8, !dbg !2233
  %440 = add i64 %439, 1, !dbg !2233
  store i64 %440, i64* %29, align 8, !dbg !2233
  %441 = call i16** @__ctype_b_loc() #16, !dbg !2235
  %442 = load i16*, i16** %441, align 8, !dbg !2235
  %443 = load i8*, i8** %33, align 8, !dbg !2235
  %444 = load i8, i8* %443, align 1, !dbg !2235
  %445 = call zeroext i8 @to_uchar(i8 signext %444), !dbg !2235
  %446 = zext i8 %445 to i32, !dbg !2235
  %447 = sext i32 %446 to i64, !dbg !2235
  %448 = getelementptr inbounds i16, i16* %442, i64 %447, !dbg !2235
  %449 = load i16, i16* %448, align 2, !dbg !2235
  %450 = zext i16 %449 to i32, !dbg !2235
  %451 = and i32 %450, 8192, !dbg !2235
  %452 = icmp ne i32 %451, 0, !dbg !2235
  br i1 %452, label %453, label %454, !dbg !2237

453:                                              ; preds = %438
  br label %385, !dbg !2238

454:                                              ; preds = %438
  store i8 1, i8* %28, align 1, !dbg !2239
  br label %455, !dbg !2240

455:                                              ; preds = %454, %425, %422
  br label %456

456:                                              ; preds = %455, %421
  br label %457, !dbg !2241

457:                                              ; preds = %456, %385
  %458 = load i64, i64* %36, align 8, !dbg !2242
  %459 = load i8*, i8** %33, align 8, !dbg !2243
  %460 = getelementptr inbounds i8, i8* %459, i64 %458, !dbg !2243
  store i8* %460, i8** %33, align 8, !dbg !2243
  %461 = load i64, i64* %36, align 8, !dbg !2244
  %462 = load i64, i64* %11, align 8, !dbg !2245
  %463 = sub i64 %462, %461, !dbg !2245
  store i64 %463, i64* %11, align 8, !dbg !2245
  %464 = load i64, i64* %14, align 8, !dbg !2246
  %465 = add i64 %464, 1, !dbg !2246
  store i64 %465, i64* %14, align 8, !dbg !2246
  br label %466, !dbg !2247

466:                                              ; preds = %457, %349
  %467 = load i64, i64* %11, align 8, !dbg !2248
  %468 = icmp ugt i64 %467, 0, !dbg !2249
  br i1 %468, label %324, label %469, !dbg !2247, !llvm.loop !2250

469:                                              ; preds = %466, %343
  %470 = load i64, i64* %11, align 8, !dbg !2252
  %471 = icmp ugt i64 %470, 0, !dbg !2254
  br i1 %471, label %472, label %484, !dbg !2255

472:                                              ; preds = %469
  %473 = load i64, i64* %11, align 8, !dbg !2256
  %474 = icmp eq i64 %473, 16384, !dbg !2259
  br i1 %474, label %475, label %480, !dbg !2260

475:                                              ; preds = %472
  %476 = load i8*, i8** %33, align 8, !dbg !2261
  %477 = getelementptr inbounds i8, i8* %476, i32 1, !dbg !2261
  store i8* %477, i8** %33, align 8, !dbg !2261
  %478 = load i64, i64* %11, align 8, !dbg !2263
  %479 = add i64 %478, -1, !dbg !2263
  store i64 %479, i64* %11, align 8, !dbg !2263
  br label %480, !dbg !2264

480:                                              ; preds = %475, %472
  %481 = getelementptr inbounds [16385 x i8], [16385 x i8]* %10, i64 0, i64 0, !dbg !2265
  %482 = load i8*, i8** %33, align 8, !dbg !2266
  %483 = load i64, i64* %11, align 8, !dbg !2267
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 16 %481, i8* align 1 %482, i64 %483, i1 false), !dbg !2265
  br label %484, !dbg !2268

484:                                              ; preds = %480, %469
  %485 = load i64, i64* %11, align 8, !dbg !2269
  store i64 %485, i64* %32, align 8, !dbg !2270
  br label %299, !dbg !2078, !llvm.loop !2271

486:                                              ; preds = %311, %299
  %487 = load i64, i64* %29, align 8, !dbg !2273
  %488 = load i64, i64* %16, align 8, !dbg !2275
  %489 = icmp ugt i64 %487, %488, !dbg !2276
  br i1 %489, label %490, label %492, !dbg !2277

490:                                              ; preds = %486
  %491 = load i64, i64* %29, align 8, !dbg !2278
  store i64 %491, i64* %16, align 8, !dbg !2279
  br label %492, !dbg !2280

492:                                              ; preds = %490, %486
  %493 = load i8, i8* %28, align 1, !dbg !2281
  %494 = trunc i8 %493 to i1, !dbg !2281
  %495 = zext i1 %494 to i64, !dbg !2281
  %496 = load i64, i64* %13, align 8, !dbg !2282
  %497 = add i64 %496, %495, !dbg !2282
  store i64 %497, i64* %13, align 8, !dbg !2282
  br label %607, !dbg !2283

498:                                              ; preds = %294
  call void @llvm.dbg.declare(metadata i8* %39, metadata !2284, metadata !DIExpression()), !dbg !2286
  store i8 0, i8* %39, align 1, !dbg !2286
  call void @llvm.dbg.declare(metadata i64* %40, metadata !2287, metadata !DIExpression()), !dbg !2288
  store i64 0, i64* %40, align 8, !dbg !2288
  br label %499, !dbg !2289

499:                                              ; preds = %594, %498
  %500 = load i32, i32* %5, align 4, !dbg !2290
  %501 = getelementptr inbounds [16385 x i8], [16385 x i8]* %10, i64 0, i64 0, !dbg !2291
  %502 = call i64 @safe_read(i32 %500, i8* %501, i64 16384), !dbg !2292
  store i64 %502, i64* %11, align 8, !dbg !2293
  %503 = icmp ugt i64 %502, 0, !dbg !2294
  br i1 %503, label %504, label %595, !dbg !2289

504:                                              ; preds = %499
  call void @llvm.dbg.declare(metadata i8** %41, metadata !2295, metadata !DIExpression()), !dbg !2297
  %505 = getelementptr inbounds [16385 x i8], [16385 x i8]* %10, i64 0, i64 0, !dbg !2298
  store i8* %505, i8** %41, align 8, !dbg !2297
  %506 = load i64, i64* %11, align 8, !dbg !2299
  %507 = icmp eq i64 %506, -1, !dbg !2301
  br i1 %507, label %508, label %513, !dbg !2302

508:                                              ; preds = %504
  %509 = call i32* @__errno_location() #16, !dbg !2303
  %510 = load i32, i32* %509, align 4, !dbg !2303
  %511 = load i8*, i8** %20, align 8, !dbg !2305
  %512 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %511), !dbg !2305
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %510, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), i8* %512), !dbg !2306
  store i8 0, i8* %9, align 1, !dbg !2307
  br label %595, !dbg !2308

513:                                              ; preds = %504
  %514 = load i64, i64* %11, align 8, !dbg !2309
  %515 = load i64, i64* %15, align 8, !dbg !2310
  %516 = add i64 %515, %514, !dbg !2310
  store i64 %516, i64* %15, align 8, !dbg !2310
  br label %517, !dbg !2311

517:                                              ; preds = %590, %513
  %518 = load i8*, i8** %41, align 8, !dbg !2312
  %519 = getelementptr inbounds i8, i8* %518, i32 1, !dbg !2312
  store i8* %519, i8** %41, align 8, !dbg !2312
  %520 = load i8, i8* %518, align 1, !dbg !2314
  %521 = sext i8 %520 to i32, !dbg !2314
  switch i32 %521, label %548 [
    i32 10, label %522
    i32 13, label %525
    i32 12, label %525
    i32 9, label %532
    i32 32, label %538
    i32 11, label %541
  ], !dbg !2315

522:                                              ; preds = %517
  %523 = load i64, i64* %12, align 8, !dbg !2316
  %524 = add i64 %523, 1, !dbg !2316
  store i64 %524, i64* %12, align 8, !dbg !2316
  br label %525, !dbg !2318

525:                                              ; preds = %517, %517, %522
  %526 = load i64, i64* %40, align 8, !dbg !2319
  %527 = load i64, i64* %16, align 8, !dbg !2321
  %528 = icmp ugt i64 %526, %527, !dbg !2322
  br i1 %528, label %529, label %531, !dbg !2323

529:                                              ; preds = %525
  %530 = load i64, i64* %40, align 8, !dbg !2324
  store i64 %530, i64* %16, align 8, !dbg !2325
  br label %531, !dbg !2326

531:                                              ; preds = %529, %525
  store i64 0, i64* %40, align 8, !dbg !2327
  br label %542, !dbg !2328

532:                                              ; preds = %517
  %533 = load i64, i64* %40, align 8, !dbg !2329
  %534 = urem i64 %533, 8, !dbg !2330
  %535 = sub i64 8, %534, !dbg !2331
  %536 = load i64, i64* %40, align 8, !dbg !2332
  %537 = add i64 %536, %535, !dbg !2332
  store i64 %537, i64* %40, align 8, !dbg !2332
  br label %542, !dbg !2333

538:                                              ; preds = %517
  %539 = load i64, i64* %40, align 8, !dbg !2334
  %540 = add i64 %539, 1, !dbg !2334
  store i64 %540, i64* %40, align 8, !dbg !2334
  br label %541, !dbg !2335

541:                                              ; preds = %517, %538
  br label %542, !dbg !2335

542:                                              ; preds = %586, %541, %532, %531
  call void @llvm.dbg.label(metadata !2336), !dbg !2337
  %543 = load i8, i8* %39, align 1, !dbg !2338
  %544 = trunc i8 %543 to i1, !dbg !2338
  %545 = zext i1 %544 to i64, !dbg !2338
  %546 = load i64, i64* %13, align 8, !dbg !2339
  %547 = add i64 %546, %545, !dbg !2339
  store i64 %547, i64* %13, align 8, !dbg !2339
  store i8 0, i8* %39, align 1, !dbg !2340
  br label %589, !dbg !2341

548:                                              ; preds = %517
  %549 = call i16** @__ctype_b_loc() #16, !dbg !2342
  %550 = load i16*, i16** %549, align 8, !dbg !2342
  %551 = load i8*, i8** %41, align 8, !dbg !2342
  %552 = getelementptr inbounds i8, i8* %551, i64 -1, !dbg !2342
  %553 = load i8, i8* %552, align 1, !dbg !2342
  %554 = call zeroext i8 @to_uchar(i8 signext %553), !dbg !2342
  %555 = zext i8 %554 to i32, !dbg !2342
  %556 = sext i32 %555 to i64, !dbg !2342
  %557 = getelementptr inbounds i16, i16* %550, i64 %556, !dbg !2342
  %558 = load i16, i16* %557, align 2, !dbg !2342
  %559 = zext i16 %558 to i32, !dbg !2342
  %560 = and i32 %559, 16384, !dbg !2342
  %561 = icmp ne i32 %560, 0, !dbg !2342
  br i1 %561, label %562, label %588, !dbg !2344

562:                                              ; preds = %548
  %563 = load i64, i64* %40, align 8, !dbg !2345
  %564 = add i64 %563, 1, !dbg !2345
  store i64 %564, i64* %40, align 8, !dbg !2345
  %565 = call i16** @__ctype_b_loc() #16, !dbg !2347
  %566 = load i16*, i16** %565, align 8, !dbg !2347
  %567 = load i8*, i8** %41, align 8, !dbg !2347
  %568 = getelementptr inbounds i8, i8* %567, i64 -1, !dbg !2347
  %569 = load i8, i8* %568, align 1, !dbg !2347
  %570 = call zeroext i8 @to_uchar(i8 signext %569), !dbg !2347
  %571 = zext i8 %570 to i32, !dbg !2347
  %572 = sext i32 %571 to i64, !dbg !2347
  %573 = getelementptr inbounds i16, i16* %566, i64 %572, !dbg !2347
  %574 = load i16, i16* %573, align 2, !dbg !2347
  %575 = zext i16 %574 to i32, !dbg !2347
  %576 = and i32 %575, 8192, !dbg !2347
  %577 = icmp ne i32 %576, 0, !dbg !2347
  br i1 %577, label %586, label %578, !dbg !2349

578:                                              ; preds = %562
  %579 = load i8*, i8** %41, align 8, !dbg !2350
  %580 = getelementptr inbounds i8, i8* %579, i64 -1, !dbg !2350
  %581 = load i8, i8* %580, align 1, !dbg !2350
  %582 = call zeroext i8 @to_uchar(i8 signext %581), !dbg !2351
  %583 = zext i8 %582 to i32, !dbg !2351
  %584 = call i32 @isnbspace(i32 %583), !dbg !2352
  %585 = icmp ne i32 %584, 0, !dbg !2352
  br i1 %585, label %586, label %587, !dbg !2353

586:                                              ; preds = %578, %562
  br label %542, !dbg !2354

587:                                              ; preds = %578
  store i8 1, i8* %39, align 1, !dbg !2355
  br label %588, !dbg !2356

588:                                              ; preds = %587, %548
  br label %589, !dbg !2357

589:                                              ; preds = %588, %542
  br label %590, !dbg !2358

590:                                              ; preds = %589
  %591 = load i64, i64* %11, align 8, !dbg !2359
  %592 = add i64 %591, -1, !dbg !2359
  store i64 %592, i64* %11, align 8, !dbg !2359
  %593 = icmp ne i64 %592, 0, !dbg !2358
  br i1 %593, label %517, label %594, !dbg !2358, !llvm.loop !2360

594:                                              ; preds = %590
  br label %499, !dbg !2289, !llvm.loop !2362

595:                                              ; preds = %508, %499
  %596 = load i64, i64* %40, align 8, !dbg !2364
  %597 = load i64, i64* %16, align 8, !dbg !2366
  %598 = icmp ugt i64 %596, %597, !dbg !2367
  br i1 %598, label %599, label %601, !dbg !2368

599:                                              ; preds = %595
  %600 = load i64, i64* %40, align 8, !dbg !2369
  store i64 %600, i64* %16, align 8, !dbg !2370
  br label %601, !dbg !2371

601:                                              ; preds = %599, %595
  %602 = load i8, i8* %39, align 1, !dbg !2372
  %603 = trunc i8 %602 to i1, !dbg !2372
  %604 = zext i1 %603 to i64, !dbg !2372
  %605 = load i64, i64* %13, align 8, !dbg !2373
  %606 = add i64 %605, %604, !dbg !2373
  store i64 %606, i64* %13, align 8, !dbg !2373
  br label %607

607:                                              ; preds = %601, %492
  br label %608

608:                                              ; preds = %607, %293
  br label %609

609:                                              ; preds = %608, %219
  %610 = load i8, i8* %18, align 1, !dbg !2374
  %611 = trunc i8 %610 to i1, !dbg !2374
  %612 = zext i1 %611 to i32, !dbg !2374
  %613 = load i8, i8* @print_chars, align 1, !dbg !2376
  %614 = trunc i8 %613 to i1, !dbg !2376
  %615 = zext i1 %614 to i32, !dbg !2376
  %616 = icmp slt i32 %612, %615, !dbg !2377
  br i1 %616, label %617, label %619, !dbg !2378

617:                                              ; preds = %609
  %618 = load i64, i64* %15, align 8, !dbg !2379
  store i64 %618, i64* %14, align 8, !dbg !2380
  br label %619, !dbg !2381

619:                                              ; preds = %617, %609
  %620 = load i64, i64* %12, align 8, !dbg !2382
  %621 = load i64, i64* %13, align 8, !dbg !2383
  %622 = load i64, i64* %14, align 8, !dbg !2384
  %623 = load i64, i64* %15, align 8, !dbg !2385
  %624 = load i64, i64* %16, align 8, !dbg !2386
  %625 = load i8*, i8** %6, align 8, !dbg !2387
  call void @write_counts(i64 %620, i64 %621, i64 %622, i64 %623, i64 %624, i8* %625), !dbg !2388
  %626 = load i64, i64* %12, align 8, !dbg !2389
  %627 = load i64, i64* @total_lines, align 8, !dbg !2390
  %628 = add i64 %627, %626, !dbg !2390
  store i64 %628, i64* @total_lines, align 8, !dbg !2390
  %629 = load i64, i64* %13, align 8, !dbg !2391
  %630 = load i64, i64* @total_words, align 8, !dbg !2392
  %631 = add i64 %630, %629, !dbg !2392
  store i64 %631, i64* @total_words, align 8, !dbg !2392
  %632 = load i64, i64* %14, align 8, !dbg !2393
  %633 = load i64, i64* @total_chars, align 8, !dbg !2394
  %634 = add i64 %633, %632, !dbg !2394
  store i64 %634, i64* @total_chars, align 8, !dbg !2394
  %635 = load i64, i64* %15, align 8, !dbg !2395
  %636 = load i64, i64* @total_bytes, align 8, !dbg !2396
  %637 = add i64 %636, %635, !dbg !2396
  store i64 %637, i64* @total_bytes, align 8, !dbg !2396
  %638 = load i64, i64* %16, align 8, !dbg !2397
  %639 = load i64, i64* @max_line_length, align 8, !dbg !2399
  %640 = icmp ugt i64 %638, %639, !dbg !2400
  br i1 %640, label %641, label %643, !dbg !2401

641:                                              ; preds = %619
  %642 = load i64, i64* %16, align 8, !dbg !2402
  store i64 %642, i64* @max_line_length, align 8, !dbg !2403
  br label %643, !dbg !2404

643:                                              ; preds = %641, %619
  %644 = load i8, i8* %9, align 1, !dbg !2405
  %645 = trunc i8 %644 to i1, !dbg !2405
  ret i1 %645, !dbg !2406
}

declare dso_local i32 @open(i8*, i32, ...) #2

; Function Attrs: nounwind
declare dso_local i64 @__ctype_get_mb_cur_max() #7

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @usable_st_size(%struct.stat* %0) #3 !dbg !2407 {
  %2 = alloca %struct.stat*, align 8
  store %struct.stat* %0, %struct.stat** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %2, metadata !2412, metadata !DIExpression()), !dbg !2413
  %3 = load %struct.stat*, %struct.stat** %2, align 8, !dbg !2414
  %4 = getelementptr inbounds %struct.stat, %struct.stat* %3, i32 0, i32 3, !dbg !2414
  %5 = load i32, i32* %4, align 8, !dbg !2414
  %6 = and i32 %5, 61440, !dbg !2414
  %7 = icmp eq i32 %6, 32768, !dbg !2414
  br i1 %7, label %24, label %8, !dbg !2415

8:                                                ; preds = %1
  %9 = load %struct.stat*, %struct.stat** %2, align 8, !dbg !2416
  %10 = getelementptr inbounds %struct.stat, %struct.stat* %9, i32 0, i32 3, !dbg !2416
  %11 = load i32, i32* %10, align 8, !dbg !2416
  %12 = and i32 %11, 61440, !dbg !2416
  %13 = icmp eq i32 %12, 40960, !dbg !2416
  br i1 %13, label %24, label %14, !dbg !2417

14:                                               ; preds = %8
  %15 = load %struct.stat*, %struct.stat** %2, align 8, !dbg !2418
  %16 = getelementptr inbounds %struct.stat, %struct.stat* %15, i32 0, i32 3, !dbg !2418
  %17 = load i32, i32* %16, align 8, !dbg !2418
  %18 = load %struct.stat*, %struct.stat** %2, align 8, !dbg !2418
  %19 = getelementptr inbounds %struct.stat, %struct.stat* %18, i32 0, i32 3, !dbg !2418
  %20 = load i32, i32* %19, align 8, !dbg !2418
  %21 = sub i32 %17, %20, !dbg !2418
  %22 = icmp ne i32 %21, 0, !dbg !2418
  br i1 %22, label %24, label %23, !dbg !2419

23:                                               ; preds = %14
  br label %24, !dbg !2419

24:                                               ; preds = %23, %14, %8, %1
  %25 = phi i1 [ true, %14 ], [ true, %8 ], [ true, %1 ], [ false, %23 ]
  ret i1 %25, !dbg !2420
}

; Function Attrs: nounwind
declare dso_local i64 @lseek(i32, i64, i32) #7

; Function Attrs: nounwind readonly willreturn
declare dso_local i8* @memchr(i8*, i32, i64) #6

; Function Attrs: argmemonly nofree nosync nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #10

; Function Attrs: nounwind readonly willreturn
declare dso_local i32 @mbsinit(%struct.__mbstate_t*) #6

; Function Attrs: nounwind
declare dso_local i32 @iswprint(i32) #7

; Function Attrs: nounwind
declare dso_local i32 @wcwidth(i32) #7

; Function Attrs: nounwind
declare dso_local i32 @iswspace(i32) #7

; Function Attrs: noinline nounwind optnone readonly uwtable willreturn
define internal i32 @iswnbspace(i32 %0) #9 !dbg !2421 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !2426, metadata !DIExpression()), !dbg !2427
  %3 = load i8, i8* @posixly_correct, align 1, !dbg !2428
  %4 = trunc i8 %3 to i1, !dbg !2428
  br i1 %4, label %19, label %5, !dbg !2429

5:                                                ; preds = %1
  %6 = load i32, i32* %2, align 4, !dbg !2430
  %7 = icmp eq i32 %6, 160, !dbg !2431
  br i1 %7, label %17, label %8, !dbg !2432

8:                                                ; preds = %5
  %9 = load i32, i32* %2, align 4, !dbg !2433
  %10 = icmp eq i32 %9, 8199, !dbg !2434
  br i1 %10, label %17, label %11, !dbg !2435

11:                                               ; preds = %8
  %12 = load i32, i32* %2, align 4, !dbg !2436
  %13 = icmp eq i32 %12, 8239, !dbg !2437
  br i1 %13, label %17, label %14, !dbg !2438

14:                                               ; preds = %11
  %15 = load i32, i32* %2, align 4, !dbg !2439
  %16 = icmp eq i32 %15, 8288, !dbg !2440
  br label %17, !dbg !2438

17:                                               ; preds = %14, %11, %8, %5
  %18 = phi i1 [ true, %11 ], [ true, %8 ], [ true, %5 ], [ %16, %14 ]
  br label %19

19:                                               ; preds = %17, %1
  %20 = phi i1 [ false, %1 ], [ %18, %17 ], !dbg !2441
  %21 = zext i1 %20 to i32, !dbg !2429
  ret i32 %21, !dbg !2442
}

; Function Attrs: nounwind readnone willreturn
declare dso_local i16** @__ctype_b_loc() #8

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i8 @to_uchar(i8 signext %0) #3 !dbg !2443 {
  %2 = alloca i8, align 1
  store i8 %0, i8* %2, align 1
  call void @llvm.dbg.declare(metadata i8* %2, metadata !2446, metadata !DIExpression()), !dbg !2447
  %3 = load i8, i8* %2, align 1, !dbg !2448
  ret i8 %3, !dbg !2449
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @isnbspace(i32 %0) #3 !dbg !2450 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !2453, metadata !DIExpression()), !dbg !2454
  %3 = load i32, i32* %2, align 4, !dbg !2455
  %4 = call i32 @btowc(i32 %3) #15, !dbg !2456
  %5 = call i32 @iswnbspace(i32 %4) #14, !dbg !2457
  ret i32 %5, !dbg !2458
}

; Function Attrs: nounwind
declare dso_local i32 @btowc(i32) #7

; Function Attrs: nounwind
declare dso_local i32 @stat(i8*, %struct.stat*) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.argv_iterator* @argv_iter_init_argv(i8** nonnull %0) #3 !dbg !2459 {
  %2 = alloca %struct.argv_iterator*, align 8
  %3 = alloca i8**, align 8
  %4 = alloca %struct.argv_iterator*, align 8
  store i8** %0, i8*** %3, align 8
  call void @llvm.dbg.declare(metadata i8*** %3, metadata !2505, metadata !DIExpression()), !dbg !2506
  call void @llvm.dbg.declare(metadata %struct.argv_iterator** %4, metadata !2507, metadata !DIExpression()), !dbg !2508
  %5 = call noalias i8* @malloc(i64 48) #15, !dbg !2509
  %6 = bitcast i8* %5 to %struct.argv_iterator*, !dbg !2509
  store %struct.argv_iterator* %6, %struct.argv_iterator** %4, align 8, !dbg !2508
  %7 = load %struct.argv_iterator*, %struct.argv_iterator** %4, align 8, !dbg !2510
  %8 = icmp ne %struct.argv_iterator* %7, null, !dbg !2510
  br i1 %8, label %10, label %9, !dbg !2512

9:                                                ; preds = %1
  store %struct.argv_iterator* null, %struct.argv_iterator** %2, align 8, !dbg !2513
  br label %20, !dbg !2513

10:                                               ; preds = %1
  %11 = load %struct.argv_iterator*, %struct.argv_iterator** %4, align 8, !dbg !2514
  %12 = getelementptr inbounds %struct.argv_iterator, %struct.argv_iterator* %11, i32 0, i32 0, !dbg !2515
  store %struct._IO_FILE* null, %struct._IO_FILE** %12, align 8, !dbg !2516
  %13 = load i8**, i8*** %3, align 8, !dbg !2517
  %14 = load %struct.argv_iterator*, %struct.argv_iterator** %4, align 8, !dbg !2518
  %15 = getelementptr inbounds %struct.argv_iterator, %struct.argv_iterator* %14, i32 0, i32 4, !dbg !2519
  store i8** %13, i8*** %15, align 8, !dbg !2520
  %16 = load i8**, i8*** %3, align 8, !dbg !2521
  %17 = load %struct.argv_iterator*, %struct.argv_iterator** %4, align 8, !dbg !2522
  %18 = getelementptr inbounds %struct.argv_iterator, %struct.argv_iterator* %17, i32 0, i32 5, !dbg !2523
  store i8** %16, i8*** %18, align 8, !dbg !2524
  %19 = load %struct.argv_iterator*, %struct.argv_iterator** %4, align 8, !dbg !2525
  store %struct.argv_iterator* %19, %struct.argv_iterator** %2, align 8, !dbg !2526
  br label %20, !dbg !2526

20:                                               ; preds = %10, %9
  %21 = load %struct.argv_iterator*, %struct.argv_iterator** %2, align 8, !dbg !2527
  ret %struct.argv_iterator* %21, !dbg !2527
}

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.argv_iterator* @argv_iter_init_stream(%struct._IO_FILE* nonnull %0) #3 !dbg !2528 {
  %2 = alloca %struct.argv_iterator*, align 8
  %3 = alloca %struct._IO_FILE*, align 8
  %4 = alloca %struct.argv_iterator*, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %3, metadata !2531, metadata !DIExpression()), !dbg !2532
  call void @llvm.dbg.declare(metadata %struct.argv_iterator** %4, metadata !2533, metadata !DIExpression()), !dbg !2534
  %5 = call noalias i8* @malloc(i64 48) #15, !dbg !2535
  %6 = bitcast i8* %5 to %struct.argv_iterator*, !dbg !2535
  store %struct.argv_iterator* %6, %struct.argv_iterator** %4, align 8, !dbg !2534
  %7 = load %struct.argv_iterator*, %struct.argv_iterator** %4, align 8, !dbg !2536
  %8 = icmp ne %struct.argv_iterator* %7, null, !dbg !2536
  br i1 %8, label %10, label %9, !dbg !2538

9:                                                ; preds = %1
  store %struct.argv_iterator* null, %struct.argv_iterator** %2, align 8, !dbg !2539
  br label %23, !dbg !2539

10:                                               ; preds = %1
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !2540
  %12 = load %struct.argv_iterator*, %struct.argv_iterator** %4, align 8, !dbg !2541
  %13 = getelementptr inbounds %struct.argv_iterator, %struct.argv_iterator* %12, i32 0, i32 0, !dbg !2542
  store %struct._IO_FILE* %11, %struct._IO_FILE** %13, align 8, !dbg !2543
  %14 = load %struct.argv_iterator*, %struct.argv_iterator** %4, align 8, !dbg !2544
  %15 = getelementptr inbounds %struct.argv_iterator, %struct.argv_iterator* %14, i32 0, i32 2, !dbg !2545
  store i8* null, i8** %15, align 8, !dbg !2546
  %16 = load %struct.argv_iterator*, %struct.argv_iterator** %4, align 8, !dbg !2547
  %17 = getelementptr inbounds %struct.argv_iterator, %struct.argv_iterator* %16, i32 0, i32 3, !dbg !2548
  store i64 0, i64* %17, align 8, !dbg !2549
  %18 = load %struct.argv_iterator*, %struct.argv_iterator** %4, align 8, !dbg !2550
  %19 = getelementptr inbounds %struct.argv_iterator, %struct.argv_iterator* %18, i32 0, i32 1, !dbg !2551
  store i64 0, i64* %19, align 8, !dbg !2552
  %20 = load %struct.argv_iterator*, %struct.argv_iterator** %4, align 8, !dbg !2553
  %21 = getelementptr inbounds %struct.argv_iterator, %struct.argv_iterator* %20, i32 0, i32 4, !dbg !2554
  store i8** null, i8*** %21, align 8, !dbg !2555
  %22 = load %struct.argv_iterator*, %struct.argv_iterator** %4, align 8, !dbg !2556
  store %struct.argv_iterator* %22, %struct.argv_iterator** %2, align 8, !dbg !2557
  br label %23, !dbg !2557

23:                                               ; preds = %10, %9
  %24 = load %struct.argv_iterator*, %struct.argv_iterator** %2, align 8, !dbg !2558
  ret %struct.argv_iterator* %24, !dbg !2558
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @argv_iter(%struct.argv_iterator* nonnull %0, i32* nonnull %1) #3 !dbg !2559 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct.argv_iterator*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i64, align 8
  store %struct.argv_iterator* %0, %struct.argv_iterator** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.argv_iterator** %4, metadata !2563, metadata !DIExpression()), !dbg !2564
  store i32* %1, i32** %5, align 8
  call void @llvm.dbg.declare(metadata i32** %5, metadata !2565, metadata !DIExpression()), !dbg !2566
  %7 = load %struct.argv_iterator*, %struct.argv_iterator** %4, align 8, !dbg !2567
  %8 = getelementptr inbounds %struct.argv_iterator, %struct.argv_iterator* %7, i32 0, i32 0, !dbg !2569
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8, !dbg !2569
  %10 = icmp ne %struct._IO_FILE* %9, null, !dbg !2567
  br i1 %10, label %11, label %40, !dbg !2570

11:                                               ; preds = %2
  call void @llvm.dbg.declare(metadata i64* %6, metadata !2571, metadata !DIExpression()), !dbg !2575
  %12 = load %struct.argv_iterator*, %struct.argv_iterator** %4, align 8, !dbg !2576
  %13 = getelementptr inbounds %struct.argv_iterator, %struct.argv_iterator* %12, i32 0, i32 2, !dbg !2577
  %14 = load %struct.argv_iterator*, %struct.argv_iterator** %4, align 8, !dbg !2578
  %15 = getelementptr inbounds %struct.argv_iterator, %struct.argv_iterator* %14, i32 0, i32 3, !dbg !2579
  %16 = load %struct.argv_iterator*, %struct.argv_iterator** %4, align 8, !dbg !2580
  %17 = getelementptr inbounds %struct.argv_iterator, %struct.argv_iterator* %16, i32 0, i32 0, !dbg !2581
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8, !dbg !2581
  %19 = call i64 @getdelim(i8** %13, i64* %15, i32 0, %struct._IO_FILE* %18), !dbg !2582
  store i64 %19, i64* %6, align 8, !dbg !2575
  %20 = load i64, i64* %6, align 8, !dbg !2583
  %21 = icmp slt i64 %20, 0, !dbg !2585
  br i1 %21, label %22, label %31, !dbg !2586

22:                                               ; preds = %11
  %23 = load %struct.argv_iterator*, %struct.argv_iterator** %4, align 8, !dbg !2587
  %24 = getelementptr inbounds %struct.argv_iterator, %struct.argv_iterator* %23, i32 0, i32 0, !dbg !2589
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** %24, align 8, !dbg !2589
  %26 = call i32 @feof(%struct._IO_FILE* %25) #15, !dbg !2590
  %27 = icmp ne i32 %26, 0, !dbg !2590
  %28 = zext i1 %27 to i64, !dbg !2590
  %29 = select i1 %27, i32 2, i32 4, !dbg !2590
  %30 = load i32*, i32** %5, align 8, !dbg !2591
  store i32 %29, i32* %30, align 4, !dbg !2592
  store i8* null, i8** %3, align 8, !dbg !2593
  br label %55, !dbg !2593

31:                                               ; preds = %11
  %32 = load i32*, i32** %5, align 8, !dbg !2594
  store i32 1, i32* %32, align 4, !dbg !2595
  %33 = load %struct.argv_iterator*, %struct.argv_iterator** %4, align 8, !dbg !2596
  %34 = getelementptr inbounds %struct.argv_iterator, %struct.argv_iterator* %33, i32 0, i32 1, !dbg !2597
  %35 = load i64, i64* %34, align 8, !dbg !2598
  %36 = add i64 %35, 1, !dbg !2598
  store i64 %36, i64* %34, align 8, !dbg !2598
  %37 = load %struct.argv_iterator*, %struct.argv_iterator** %4, align 8, !dbg !2599
  %38 = getelementptr inbounds %struct.argv_iterator, %struct.argv_iterator* %37, i32 0, i32 2, !dbg !2600
  %39 = load i8*, i8** %38, align 8, !dbg !2600
  store i8* %39, i8** %3, align 8, !dbg !2601
  br label %55, !dbg !2601

40:                                               ; preds = %2
  %41 = load %struct.argv_iterator*, %struct.argv_iterator** %4, align 8, !dbg !2602
  %42 = getelementptr inbounds %struct.argv_iterator, %struct.argv_iterator* %41, i32 0, i32 5, !dbg !2605
  %43 = load i8**, i8*** %42, align 8, !dbg !2605
  %44 = load i8*, i8** %43, align 8, !dbg !2606
  %45 = icmp eq i8* %44, null, !dbg !2607
  br i1 %45, label %46, label %48, !dbg !2608

46:                                               ; preds = %40
  %47 = load i32*, i32** %5, align 8, !dbg !2609
  store i32 2, i32* %47, align 4, !dbg !2611
  store i8* null, i8** %3, align 8, !dbg !2612
  br label %55, !dbg !2612

48:                                               ; preds = %40
  %49 = load i32*, i32** %5, align 8, !dbg !2613
  store i32 1, i32* %49, align 4, !dbg !2615
  %50 = load %struct.argv_iterator*, %struct.argv_iterator** %4, align 8, !dbg !2616
  %51 = getelementptr inbounds %struct.argv_iterator, %struct.argv_iterator* %50, i32 0, i32 5, !dbg !2617
  %52 = load i8**, i8*** %51, align 8, !dbg !2618
  %53 = getelementptr inbounds i8*, i8** %52, i32 1, !dbg !2618
  store i8** %53, i8*** %51, align 8, !dbg !2618
  %54 = load i8*, i8** %52, align 8, !dbg !2619
  store i8* %54, i8** %3, align 8, !dbg !2620
  br label %55, !dbg !2620

55:                                               ; preds = %48, %46, %31, %22
  %56 = load i8*, i8** %3, align 8, !dbg !2621
  ret i8* %56, !dbg !2621
}

declare dso_local i64 @getdelim(i8**, i64*, i32, %struct._IO_FILE*) #2

; Function Attrs: nounwind
declare dso_local i32 @feof(%struct._IO_FILE*) #7

; Function Attrs: noinline nounwind optnone readonly uwtable willreturn
define dso_local i64 @argv_iter_n_args(%struct.argv_iterator* nonnull %0) #9 !dbg !2622 {
  %2 = alloca %struct.argv_iterator*, align 8
  store %struct.argv_iterator* %0, %struct.argv_iterator** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.argv_iterator** %2, metadata !2627, metadata !DIExpression()), !dbg !2628
  %3 = load %struct.argv_iterator*, %struct.argv_iterator** %2, align 8, !dbg !2629
  %4 = getelementptr inbounds %struct.argv_iterator, %struct.argv_iterator* %3, i32 0, i32 0, !dbg !2630
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !dbg !2630
  %6 = icmp ne %struct._IO_FILE* %5, null, !dbg !2629
  br i1 %6, label %7, label %11, !dbg !2629

7:                                                ; preds = %1
  %8 = load %struct.argv_iterator*, %struct.argv_iterator** %2, align 8, !dbg !2631
  %9 = getelementptr inbounds %struct.argv_iterator, %struct.argv_iterator* %8, i32 0, i32 1, !dbg !2632
  %10 = load i64, i64* %9, align 8, !dbg !2632
  br label %22, !dbg !2629

11:                                               ; preds = %1
  %12 = load %struct.argv_iterator*, %struct.argv_iterator** %2, align 8, !dbg !2633
  %13 = getelementptr inbounds %struct.argv_iterator, %struct.argv_iterator* %12, i32 0, i32 5, !dbg !2634
  %14 = load i8**, i8*** %13, align 8, !dbg !2634
  %15 = load %struct.argv_iterator*, %struct.argv_iterator** %2, align 8, !dbg !2635
  %16 = getelementptr inbounds %struct.argv_iterator, %struct.argv_iterator* %15, i32 0, i32 4, !dbg !2636
  %17 = load i8**, i8*** %16, align 8, !dbg !2636
  %18 = ptrtoint i8** %14 to i64, !dbg !2637
  %19 = ptrtoint i8** %17 to i64, !dbg !2637
  %20 = sub i64 %18, %19, !dbg !2637
  %21 = sdiv exact i64 %20, 8, !dbg !2637
  br label %22, !dbg !2629

22:                                               ; preds = %11, %7
  %23 = phi i64 [ %10, %7 ], [ %21, %11 ], !dbg !2629
  ret i64 %23, !dbg !2638
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @argv_iter_free(%struct.argv_iterator* nonnull %0) #3 !dbg !2639 {
  %2 = alloca %struct.argv_iterator*, align 8
  store %struct.argv_iterator* %0, %struct.argv_iterator** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.argv_iterator** %2, metadata !2642, metadata !DIExpression()), !dbg !2643
  %3 = load %struct.argv_iterator*, %struct.argv_iterator** %2, align 8, !dbg !2644
  %4 = getelementptr inbounds %struct.argv_iterator, %struct.argv_iterator* %3, i32 0, i32 0, !dbg !2646
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !dbg !2646
  %6 = icmp ne %struct._IO_FILE* %5, null, !dbg !2644
  br i1 %6, label %7, label %11, !dbg !2647

7:                                                ; preds = %1
  %8 = load %struct.argv_iterator*, %struct.argv_iterator** %2, align 8, !dbg !2648
  %9 = getelementptr inbounds %struct.argv_iterator, %struct.argv_iterator* %8, i32 0, i32 2, !dbg !2649
  %10 = load i8*, i8** %9, align 8, !dbg !2649
  call void @free(i8* %10) #15, !dbg !2650
  br label %11, !dbg !2650

11:                                               ; preds = %7, %1
  %12 = load %struct.argv_iterator*, %struct.argv_iterator** %2, align 8, !dbg !2651
  %13 = bitcast %struct.argv_iterator* %12 to i8*, !dbg !2651
  call void @free(i8* %13) #15, !dbg !2652
  ret void, !dbg !2653
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdout_set_file_name(i8* %0) #3 !dbg !2654 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !2655, metadata !DIExpression()), !dbg !2656
  %3 = load i8*, i8** %2, align 8, !dbg !2657
  store i8* %3, i8** @file_name, align 8, !dbg !2658
  ret void, !dbg !2659
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdout_set_ignore_EPIPE(i1 zeroext %0) #3 !dbg !2660 {
  %2 = alloca i8, align 1
  %3 = zext i1 %0 to i8
  store i8 %3, i8* %2, align 1
  call void @llvm.dbg.declare(metadata i8* %2, metadata !2663, metadata !DIExpression()), !dbg !2664
  %4 = load i8, i8* %2, align 1, !dbg !2665
  %5 = trunc i8 %4 to i1, !dbg !2665
  %6 = zext i1 %5 to i8, !dbg !2666
  store i8 %6, i8* @ignore_EPIPE, align 1, !dbg !2666
  ret void, !dbg !2667
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdout() #3 !dbg !2668 {
  %1 = alloca i8*, align 8
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2669
  %3 = call i32 @close_stream(%struct._IO_FILE* %2), !dbg !2671
  %4 = icmp ne i32 %3, 0, !dbg !2672
  br i1 %4, label %5, label %27, !dbg !2673

5:                                                ; preds = %0
  %6 = load i8, i8* @ignore_EPIPE, align 1, !dbg !2674
  %7 = trunc i8 %6 to i1, !dbg !2674
  br i1 %7, label %8, label %12, !dbg !2675

8:                                                ; preds = %5
  %9 = call i32* @__errno_location() #16, !dbg !2676
  %10 = load i32, i32* %9, align 4, !dbg !2676
  %11 = icmp eq i32 %10, 32, !dbg !2677
  br i1 %11, label %27, label %12, !dbg !2678

12:                                               ; preds = %8, %5
  call void @llvm.dbg.declare(metadata i8** %1, metadata !2679, metadata !DIExpression()), !dbg !2681
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.69, i64 0, i64 0), i8** %1, align 8, !dbg !2681
  %13 = load i8*, i8** @file_name, align 8, !dbg !2682
  %14 = icmp ne i8* %13, null, !dbg !2682
  br i1 %14, label %15, label %21, !dbg !2684

15:                                               ; preds = %12
  %16 = call i32* @__errno_location() #16, !dbg !2685
  %17 = load i32, i32* %16, align 4, !dbg !2685
  %18 = load i8*, i8** @file_name, align 8, !dbg !2686
  %19 = call i8* @quotearg_colon(i8* %18), !dbg !2687
  %20 = load i8*, i8** %1, align 8, !dbg !2688
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %17, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.70, i64 0, i64 0), i8* %19, i8* %20), !dbg !2689
  br label %25, !dbg !2689

21:                                               ; preds = %12
  %22 = call i32* @__errno_location() #16, !dbg !2690
  %23 = load i32, i32* %22, align 4, !dbg !2690
  %24 = load i8*, i8** %1, align 8, !dbg !2691
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %23, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.71, i64 0, i64 0), i8* %24), !dbg !2692
  br label %25

25:                                               ; preds = %21, %15
  %26 = load volatile i32, i32* @exit_failure, align 4, !dbg !2693
  call void @_exit(i32 %26) #17, !dbg !2694
  unreachable, !dbg !2694

27:                                               ; preds = %8, %0
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2695
  %29 = call i32 @close_stream(%struct._IO_FILE* %28), !dbg !2697
  %30 = icmp ne i32 %29, 0, !dbg !2698
  br i1 %30, label %31, label %33, !dbg !2699

31:                                               ; preds = %27
  %32 = load volatile i32, i32* @exit_failure, align 4, !dbg !2700
  call void @_exit(i32 %32) #17, !dbg !2701
  unreachable, !dbg !2701

33:                                               ; preds = %27
  ret void, !dbg !2702
}

; Function Attrs: noreturn
declare dso_local void @_exit(i32) #11

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @fdadvise(i32 %0, i64 %1, i64 %2, i32 %3) #3 !dbg !2703 {
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store i32 %0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !2707, metadata !DIExpression()), !dbg !2708
  store i64 %1, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !2709, metadata !DIExpression()), !dbg !2710
  store i64 %2, i64* %7, align 8
  call void @llvm.dbg.declare(metadata i64* %7, metadata !2711, metadata !DIExpression()), !dbg !2712
  store i32 %3, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !2713, metadata !DIExpression()), !dbg !2714
  call void @llvm.dbg.declare(metadata i32* %9, metadata !2715, metadata !DIExpression()), !dbg !2717
  %10 = load i32, i32* %5, align 4, !dbg !2717
  %11 = load i64, i64* %6, align 8, !dbg !2717
  %12 = load i64, i64* %7, align 8, !dbg !2717
  %13 = load i32, i32* %8, align 4, !dbg !2717
  %14 = call i32 @posix_fadvise(i32 %10, i64 %11, i64 %12, i32 %13) #15, !dbg !2717
  store i32 %14, i32* %9, align 4, !dbg !2717
  %15 = load i32, i32* %9, align 4, !dbg !2717
  ret void, !dbg !2718
}

; Function Attrs: nounwind
declare dso_local i32 @posix_fadvise(i32, i64, i64, i32) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @fadvise(%struct._IO_FILE* %0, i32 %1) #3 !dbg !2719 {
  %3 = alloca %struct._IO_FILE*, align 8
  %4 = alloca i32, align 4
  store %struct._IO_FILE* %0, %struct._IO_FILE** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %3, metadata !2756, metadata !DIExpression()), !dbg !2757
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !2758, metadata !DIExpression()), !dbg !2759
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !2760
  %6 = icmp ne %struct._IO_FILE* %5, null, !dbg !2760
  br i1 %6, label %7, label %11, !dbg !2762

7:                                                ; preds = %2
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !2763
  %9 = call i32 @fileno(%struct._IO_FILE* %8) #15, !dbg !2764
  %10 = load i32, i32* %4, align 4, !dbg !2765
  call void @fdadvise(i32 %9, i64 0, i64 0, i32 %10), !dbg !2766
  br label %11, !dbg !2766

11:                                               ; preds = %7, %2
  ret void, !dbg !2767
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @umaxtostr(i64 %0, i8* %1) #3 !dbg !2768 {
  %3 = alloca i64, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  store i64 %0, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !2772, metadata !DIExpression()), !dbg !2773
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !2774, metadata !DIExpression()), !dbg !2775
  call void @llvm.dbg.declare(metadata i8** %5, metadata !2776, metadata !DIExpression()), !dbg !2777
  %6 = load i8*, i8** %4, align 8, !dbg !2778
  %7 = getelementptr inbounds i8, i8* %6, i64 20, !dbg !2779
  store i8* %7, i8** %5, align 8, !dbg !2777
  %8 = load i8*, i8** %5, align 8, !dbg !2780
  store i8 0, i8* %8, align 1, !dbg !2781
  %9 = load i64, i64* %3, align 8, !dbg !2782
  %10 = icmp ult i64 %9, 0, !dbg !2784
  br i1 %10, label %11, label %26, !dbg !2785

11:                                               ; preds = %2
  br label %12, !dbg !2786

12:                                               ; preds = %19, %11
  %13 = load i64, i64* %3, align 8, !dbg !2788
  %14 = urem i64 %13, 10, !dbg !2789
  %15 = sub i64 48, %14, !dbg !2790
  %16 = trunc i64 %15 to i8, !dbg !2791
  %17 = load i8*, i8** %5, align 8, !dbg !2792
  %18 = getelementptr inbounds i8, i8* %17, i32 -1, !dbg !2792
  store i8* %18, i8** %5, align 8, !dbg !2792
  store i8 %16, i8* %18, align 1, !dbg !2793
  br label %19, !dbg !2794

19:                                               ; preds = %12
  %20 = load i64, i64* %3, align 8, !dbg !2795
  %21 = udiv i64 %20, 10, !dbg !2795
  store i64 %21, i64* %3, align 8, !dbg !2795
  %22 = icmp ne i64 %21, 0, !dbg !2796
  br i1 %22, label %12, label %23, !dbg !2794, !llvm.loop !2797

23:                                               ; preds = %19
  %24 = load i8*, i8** %5, align 8, !dbg !2799
  %25 = getelementptr inbounds i8, i8* %24, i32 -1, !dbg !2799
  store i8* %25, i8** %5, align 8, !dbg !2799
  store i8 45, i8* %25, align 1, !dbg !2800
  br label %39, !dbg !2801

26:                                               ; preds = %2
  br label %27, !dbg !2802

27:                                               ; preds = %34, %26
  %28 = load i64, i64* %3, align 8, !dbg !2804
  %29 = urem i64 %28, 10, !dbg !2805
  %30 = add i64 48, %29, !dbg !2806
  %31 = trunc i64 %30 to i8, !dbg !2807
  %32 = load i8*, i8** %5, align 8, !dbg !2808
  %33 = getelementptr inbounds i8, i8* %32, i32 -1, !dbg !2808
  store i8* %33, i8** %5, align 8, !dbg !2808
  store i8 %31, i8* %33, align 1, !dbg !2809
  br label %34, !dbg !2810

34:                                               ; preds = %27
  %35 = load i64, i64* %3, align 8, !dbg !2811
  %36 = udiv i64 %35, 10, !dbg !2811
  store i64 %36, i64* %3, align 8, !dbg !2811
  %37 = icmp ne i64 %36, 0, !dbg !2812
  br i1 %37, label %27, label %38, !dbg !2810, !llvm.loop !2813

38:                                               ; preds = %34
  br label %39

39:                                               ; preds = %38, %23
  %40 = load i8*, i8** %5, align 8, !dbg !2815
  ret i8* %40, !dbg !2816
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mb_width_aux(i32 %0) #3 !dbg !2817 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !2819, metadata !DIExpression()), !dbg !2820
  call void @llvm.dbg.declare(metadata i32* %3, metadata !2821, metadata !DIExpression()), !dbg !2822
  %4 = load i32, i32* %2, align 4, !dbg !2823
  %5 = call i32 @wcwidth(i32 %4) #15, !dbg !2824
  store i32 %5, i32* %3, align 4, !dbg !2822
  %6 = load i32, i32* %3, align 4, !dbg !2825
  %7 = icmp sge i32 %6, 0, !dbg !2826
  br i1 %7, label %8, label %10, !dbg !2825

8:                                                ; preds = %1
  %9 = load i32, i32* %3, align 4, !dbg !2827
  br label %16, !dbg !2825

10:                                               ; preds = %1
  %11 = load i32, i32* %2, align 4, !dbg !2828
  %12 = call i32 @iswcntrl(i32 %11) #15, !dbg !2829
  %13 = icmp ne i32 %12, 0, !dbg !2829
  %14 = zext i1 %13 to i64, !dbg !2829
  %15 = select i1 %13, i32 0, i32 1, !dbg !2829
  br label %16, !dbg !2825

16:                                               ; preds = %10, %8
  %17 = phi i32 [ %9, %8 ], [ %15, %10 ], !dbg !2825
  ret i32 %17, !dbg !2830
}

; Function Attrs: nounwind
declare dso_local i32 @iswcntrl(i32) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @mb_copy(%struct.mbchar* %0, %struct.mbchar* %1) #3 !dbg !2831 {
  %3 = alloca %struct.mbchar*, align 8
  %4 = alloca %struct.mbchar*, align 8
  store %struct.mbchar* %0, %struct.mbchar** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.mbchar** %3, metadata !2848, metadata !DIExpression()), !dbg !2849
  store %struct.mbchar* %1, %struct.mbchar** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.mbchar** %4, metadata !2850, metadata !DIExpression()), !dbg !2851
  %5 = load %struct.mbchar*, %struct.mbchar** %4, align 8, !dbg !2852
  %6 = getelementptr inbounds %struct.mbchar, %struct.mbchar* %5, i32 0, i32 0, !dbg !2854
  %7 = load i8*, i8** %6, align 8, !dbg !2854
  %8 = load %struct.mbchar*, %struct.mbchar** %4, align 8, !dbg !2855
  %9 = getelementptr inbounds %struct.mbchar, %struct.mbchar* %8, i32 0, i32 4, !dbg !2856
  %10 = getelementptr inbounds [24 x i8], [24 x i8]* %9, i64 0, i64 0, !dbg !2855
  %11 = icmp eq i8* %7, %10, !dbg !2857
  br i1 %11, label %12, label %27, !dbg !2858

12:                                               ; preds = %2
  %13 = load %struct.mbchar*, %struct.mbchar** %3, align 8, !dbg !2859
  %14 = getelementptr inbounds %struct.mbchar, %struct.mbchar* %13, i32 0, i32 4, !dbg !2861
  %15 = getelementptr inbounds [24 x i8], [24 x i8]* %14, i64 0, i64 0, !dbg !2859
  %16 = load %struct.mbchar*, %struct.mbchar** %4, align 8, !dbg !2862
  %17 = getelementptr inbounds %struct.mbchar, %struct.mbchar* %16, i32 0, i32 4, !dbg !2863
  %18 = getelementptr inbounds [24 x i8], [24 x i8]* %17, i64 0, i64 0, !dbg !2862
  %19 = load %struct.mbchar*, %struct.mbchar** %4, align 8, !dbg !2864
  %20 = getelementptr inbounds %struct.mbchar, %struct.mbchar* %19, i32 0, i32 1, !dbg !2865
  %21 = load i64, i64* %20, align 8, !dbg !2865
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %18, i64 %21, i1 false), !dbg !2866
  %22 = load %struct.mbchar*, %struct.mbchar** %3, align 8, !dbg !2867
  %23 = getelementptr inbounds %struct.mbchar, %struct.mbchar* %22, i32 0, i32 4, !dbg !2868
  %24 = getelementptr inbounds [24 x i8], [24 x i8]* %23, i64 0, i64 0, !dbg !2867
  %25 = load %struct.mbchar*, %struct.mbchar** %3, align 8, !dbg !2869
  %26 = getelementptr inbounds %struct.mbchar, %struct.mbchar* %25, i32 0, i32 0, !dbg !2870
  store i8* %24, i8** %26, align 8, !dbg !2871
  br label %33, !dbg !2872

27:                                               ; preds = %2
  %28 = load %struct.mbchar*, %struct.mbchar** %4, align 8, !dbg !2873
  %29 = getelementptr inbounds %struct.mbchar, %struct.mbchar* %28, i32 0, i32 0, !dbg !2874
  %30 = load i8*, i8** %29, align 8, !dbg !2874
  %31 = load %struct.mbchar*, %struct.mbchar** %3, align 8, !dbg !2875
  %32 = getelementptr inbounds %struct.mbchar, %struct.mbchar* %31, i32 0, i32 0, !dbg !2876
  store i8* %30, i8** %32, align 8, !dbg !2877
  br label %33

33:                                               ; preds = %27, %12
  %34 = load %struct.mbchar*, %struct.mbchar** %4, align 8, !dbg !2878
  %35 = getelementptr inbounds %struct.mbchar, %struct.mbchar* %34, i32 0, i32 1, !dbg !2879
  %36 = load i64, i64* %35, align 8, !dbg !2879
  %37 = load %struct.mbchar*, %struct.mbchar** %3, align 8, !dbg !2880
  %38 = getelementptr inbounds %struct.mbchar, %struct.mbchar* %37, i32 0, i32 1, !dbg !2881
  store i64 %36, i64* %38, align 8, !dbg !2882
  %39 = load %struct.mbchar*, %struct.mbchar** %4, align 8, !dbg !2883
  %40 = getelementptr inbounds %struct.mbchar, %struct.mbchar* %39, i32 0, i32 2, !dbg !2885
  %41 = load i8, i8* %40, align 8, !dbg !2885
  %42 = trunc i8 %41 to i1, !dbg !2885
  %43 = load %struct.mbchar*, %struct.mbchar** %3, align 8, !dbg !2886
  %44 = getelementptr inbounds %struct.mbchar, %struct.mbchar* %43, i32 0, i32 2, !dbg !2887
  %45 = zext i1 %42 to i8, !dbg !2888
  store i8 %45, i8* %44, align 8, !dbg !2888
  br i1 %42, label %46, label %52, !dbg !2889

46:                                               ; preds = %33
  %47 = load %struct.mbchar*, %struct.mbchar** %4, align 8, !dbg !2890
  %48 = getelementptr inbounds %struct.mbchar, %struct.mbchar* %47, i32 0, i32 3, !dbg !2891
  %49 = load i32, i32* %48, align 4, !dbg !2891
  %50 = load %struct.mbchar*, %struct.mbchar** %3, align 8, !dbg !2892
  %51 = getelementptr inbounds %struct.mbchar, %struct.mbchar* %50, i32 0, i32 3, !dbg !2893
  store i32 %49, i32* %51, align 4, !dbg !2894
  br label %52, !dbg !2892

52:                                               ; preds = %46, %33
  ret void, !dbg !2895
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @is_basic(i8 signext %0) #3 !dbg !2896 {
  %2 = alloca i8, align 1
  store i8 %0, i8* %2, align 1
  call void @llvm.dbg.declare(metadata i8* %2, metadata !2899, metadata !DIExpression()), !dbg !2900
  %3 = load i8, i8* %2, align 1, !dbg !2901
  %4 = zext i8 %3 to i32, !dbg !2902
  %5 = ashr i32 %4, 5, !dbg !2903
  %6 = sext i32 %5 to i64, !dbg !2904
  %7 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([8 x i32]* @is_basic_table to [0 x i32]*), i64 0, i64 %6, !dbg !2904
  %8 = load i32, i32* %7, align 4, !dbg !2904
  %9 = load i8, i8* %2, align 1, !dbg !2905
  %10 = zext i8 %9 to i32, !dbg !2906
  %11 = and i32 %10, 31, !dbg !2907
  %12 = lshr i32 %8, %11, !dbg !2908
  %13 = and i32 %12, 1, !dbg !2909
  %14 = icmp ne i32 %13, 0, !dbg !2910
  ret i1 %14, !dbg !2911
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local double @physmem_total() #3 !dbg !2912 {
  %1 = alloca double, align 8
  %2 = alloca double, align 8
  %3 = alloca double, align 8
  %4 = alloca %struct.sysinfo, align 8
  call void @llvm.dbg.declare(metadata double* %2, metadata !2914, metadata !DIExpression()), !dbg !2916
  %5 = call i64 @sysconf(i32 85) #15, !dbg !2917
  %6 = sitofp i64 %5 to double, !dbg !2917
  store double %6, double* %2, align 8, !dbg !2916
  call void @llvm.dbg.declare(metadata double* %3, metadata !2918, metadata !DIExpression()), !dbg !2919
  %7 = call i64 @sysconf(i32 30) #15, !dbg !2920
  %8 = sitofp i64 %7 to double, !dbg !2920
  store double %8, double* %3, align 8, !dbg !2919
  %9 = load double, double* %2, align 8, !dbg !2921
  %10 = fcmp ole double 0.000000e+00, %9, !dbg !2923
  br i1 %10, label %11, label %18, !dbg !2924

11:                                               ; preds = %0
  %12 = load double, double* %3, align 8, !dbg !2925
  %13 = fcmp ole double 0.000000e+00, %12, !dbg !2926
  br i1 %13, label %14, label %18, !dbg !2927

14:                                               ; preds = %11
  %15 = load double, double* %2, align 8, !dbg !2928
  %16 = load double, double* %3, align 8, !dbg !2929
  %17 = fmul double %15, %16, !dbg !2930
  store double %17, double* %1, align 8, !dbg !2931
  br label %30, !dbg !2931

18:                                               ; preds = %11, %0
  call void @llvm.dbg.declare(metadata %struct.sysinfo* %4, metadata !2932, metadata !DIExpression()), !dbg !2961
  %19 = call i32 @sysinfo(%struct.sysinfo* %4) #15, !dbg !2962
  %20 = icmp eq i32 %19, 0, !dbg !2964
  br i1 %20, label %21, label %29, !dbg !2965

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.sysinfo, %struct.sysinfo* %4, i32 0, i32 2, !dbg !2966
  %23 = load i64, i64* %22, align 8, !dbg !2966
  %24 = uitofp i64 %23 to double, !dbg !2967
  %25 = getelementptr inbounds %struct.sysinfo, %struct.sysinfo* %4, i32 0, i32 12, !dbg !2968
  %26 = load i32, i32* %25, align 8, !dbg !2968
  %27 = uitofp i32 %26 to double, !dbg !2969
  %28 = fmul double %24, %27, !dbg !2970
  store double %28, double* %1, align 8, !dbg !2971
  br label %30, !dbg !2971

29:                                               ; preds = %18
  store double 0x4190000000000000, double* %1, align 8, !dbg !2972
  br label %30, !dbg !2972

30:                                               ; preds = %29, %21, %14
  %31 = load double, double* %1, align 8, !dbg !2973
  ret double %31, !dbg !2973
}

; Function Attrs: nounwind
declare dso_local i64 @sysconf(i32) #7

; Function Attrs: nounwind
declare dso_local i32 @sysinfo(%struct.sysinfo*) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local double @physmem_available() #3 !dbg !2974 {
  %1 = alloca double, align 8
  %2 = alloca double, align 8
  %3 = alloca double, align 8
  %4 = alloca %struct.sysinfo, align 8
  call void @llvm.dbg.declare(metadata double* %2, metadata !2975, metadata !DIExpression()), !dbg !2977
  %5 = call i64 @sysconf(i32 86) #15, !dbg !2978
  %6 = sitofp i64 %5 to double, !dbg !2978
  store double %6, double* %2, align 8, !dbg !2977
  call void @llvm.dbg.declare(metadata double* %3, metadata !2979, metadata !DIExpression()), !dbg !2980
  %7 = call i64 @sysconf(i32 30) #15, !dbg !2981
  %8 = sitofp i64 %7 to double, !dbg !2981
  store double %8, double* %3, align 8, !dbg !2980
  %9 = load double, double* %2, align 8, !dbg !2982
  %10 = fcmp ole double 0.000000e+00, %9, !dbg !2984
  br i1 %10, label %11, label %18, !dbg !2985

11:                                               ; preds = %0
  %12 = load double, double* %3, align 8, !dbg !2986
  %13 = fcmp ole double 0.000000e+00, %12, !dbg !2987
  br i1 %13, label %14, label %18, !dbg !2988

14:                                               ; preds = %11
  %15 = load double, double* %2, align 8, !dbg !2989
  %16 = load double, double* %3, align 8, !dbg !2990
  %17 = fmul double %15, %16, !dbg !2991
  store double %17, double* %1, align 8, !dbg !2992
  br label %36, !dbg !2992

18:                                               ; preds = %11, %0
  call void @llvm.dbg.declare(metadata %struct.sysinfo* %4, metadata !2993, metadata !DIExpression()), !dbg !2995
  %19 = call i32 @sysinfo(%struct.sysinfo* %4) #15, !dbg !2996
  %20 = icmp eq i32 %19, 0, !dbg !2998
  br i1 %20, label %21, label %33, !dbg !2999

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.sysinfo, %struct.sysinfo* %4, i32 0, i32 3, !dbg !3000
  %23 = load i64, i64* %22, align 8, !dbg !3000
  %24 = uitofp i64 %23 to double, !dbg !3001
  %25 = getelementptr inbounds %struct.sysinfo, %struct.sysinfo* %4, i32 0, i32 5, !dbg !3002
  %26 = load i64, i64* %25, align 8, !dbg !3002
  %27 = uitofp i64 %26 to double, !dbg !3003
  %28 = fadd double %24, %27, !dbg !3004
  %29 = getelementptr inbounds %struct.sysinfo, %struct.sysinfo* %4, i32 0, i32 12, !dbg !3005
  %30 = load i32, i32* %29, align 8, !dbg !3005
  %31 = uitofp i32 %30 to double, !dbg !3006
  %32 = fmul double %28, %31, !dbg !3007
  store double %32, double* %1, align 8, !dbg !3008
  br label %36, !dbg !3008

33:                                               ; preds = %18
  %34 = call double @physmem_total(), !dbg !3009
  %35 = fdiv double %34, 4.000000e+00, !dbg !3010
  store double %35, double* %1, align 8, !dbg !3011
  br label %36, !dbg !3011

36:                                               ; preds = %33, %21, %14
  %37 = load double, double* %1, align 8, !dbg !3012
  ret double %37, !dbg !3012
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @set_program_name(i8* %0) #3 !dbg !3013 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !3014, metadata !DIExpression()), !dbg !3015
  call void @llvm.dbg.declare(metadata i8** %3, metadata !3016, metadata !DIExpression()), !dbg !3017
  call void @llvm.dbg.declare(metadata i8** %4, metadata !3018, metadata !DIExpression()), !dbg !3019
  %5 = load i8*, i8** %2, align 8, !dbg !3020
  %6 = icmp eq i8* %5, null, !dbg !3022
  br i1 %6, label %7, label %10, !dbg !3023

7:                                                ; preds = %1
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3024
  %9 = call i32 @fputs(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.86, i64 0, i64 0), %struct._IO_FILE* %8), !dbg !3026
  call void @abort() #13, !dbg !3027
  unreachable, !dbg !3027

10:                                               ; preds = %1
  %11 = load i8*, i8** %2, align 8, !dbg !3028
  %12 = call i8* @strrchr(i8* %11, i32 47) #14, !dbg !3029
  store i8* %12, i8** %3, align 8, !dbg !3030
  %13 = load i8*, i8** %3, align 8, !dbg !3031
  %14 = icmp ne i8* %13, null, !dbg !3032
  br i1 %14, label %15, label %18, !dbg !3031

15:                                               ; preds = %10
  %16 = load i8*, i8** %3, align 8, !dbg !3033
  %17 = getelementptr inbounds i8, i8* %16, i64 1, !dbg !3034
  br label %20, !dbg !3031

18:                                               ; preds = %10
  %19 = load i8*, i8** %2, align 8, !dbg !3035
  br label %20, !dbg !3031

20:                                               ; preds = %18, %15
  %21 = phi i8* [ %17, %15 ], [ %19, %18 ], !dbg !3031
  store i8* %21, i8** %4, align 8, !dbg !3036
  %22 = load i8*, i8** %4, align 8, !dbg !3037
  %23 = load i8*, i8** %2, align 8, !dbg !3039
  %24 = ptrtoint i8* %22 to i64, !dbg !3040
  %25 = ptrtoint i8* %23 to i64, !dbg !3040
  %26 = sub i64 %24, %25, !dbg !3040
  %27 = icmp sge i64 %26, 7, !dbg !3041
  br i1 %27, label %28, label %43, !dbg !3042

28:                                               ; preds = %20
  %29 = load i8*, i8** %4, align 8, !dbg !3043
  %30 = getelementptr inbounds i8, i8* %29, i64 -7, !dbg !3044
  %31 = call i32 @strncmp(i8* %30, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.87, i64 0, i64 0), i64 7) #14, !dbg !3045
  %32 = icmp eq i32 %31, 0, !dbg !3046
  br i1 %32, label %33, label %43, !dbg !3047

33:                                               ; preds = %28
  %34 = load i8*, i8** %4, align 8, !dbg !3048
  store i8* %34, i8** %2, align 8, !dbg !3050
  %35 = load i8*, i8** %4, align 8, !dbg !3051
  %36 = call i32 @strncmp(i8* %35, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.88, i64 0, i64 0), i64 3) #14, !dbg !3053
  %37 = icmp eq i32 %36, 0, !dbg !3054
  br i1 %37, label %38, label %42, !dbg !3055

38:                                               ; preds = %33
  %39 = load i8*, i8** %4, align 8, !dbg !3056
  %40 = getelementptr inbounds i8, i8* %39, i64 3, !dbg !3058
  store i8* %40, i8** %2, align 8, !dbg !3059
  %41 = load i8*, i8** %2, align 8, !dbg !3060
  store i8* %41, i8** @program_invocation_short_name, align 8, !dbg !3061
  br label %42, !dbg !3062

42:                                               ; preds = %38, %33
  br label %43, !dbg !3063

43:                                               ; preds = %42, %28, %20
  %44 = load i8*, i8** %2, align 8, !dbg !3064
  store i8* %44, i8** @program_name, align 8, !dbg !3065
  %45 = load i8*, i8** %2, align 8, !dbg !3066
  store i8* %45, i8** @program_invocation_name, align 8, !dbg !3067
  ret void, !dbg !3068
}

declare dso_local i32 @fputs(i8*, %struct._IO_FILE*) #2

; Function Attrs: noreturn nounwind
declare dso_local void @abort() #4

; Function Attrs: nounwind readonly willreturn
declare dso_local i8* @strrchr(i8*, i32) #6

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.quoting_options* @clone_quoting_options(%struct.quoting_options* %0) #3 !dbg !3069 {
  %2 = alloca %struct.quoting_options*, align 8
  %3 = alloca i32, align 4
  %4 = alloca %struct.quoting_options*, align 8
  store %struct.quoting_options* %0, %struct.quoting_options** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %2, metadata !3073, metadata !DIExpression()), !dbg !3074
  call void @llvm.dbg.declare(metadata i32* %3, metadata !3075, metadata !DIExpression()), !dbg !3076
  %5 = call i32* @__errno_location() #16, !dbg !3077
  %6 = load i32, i32* %5, align 4, !dbg !3077
  store i32 %6, i32* %3, align 4, !dbg !3076
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %4, metadata !3078, metadata !DIExpression()), !dbg !3079
  %7 = load %struct.quoting_options*, %struct.quoting_options** %2, align 8, !dbg !3080
  %8 = icmp ne %struct.quoting_options* %7, null, !dbg !3080
  br i1 %8, label %9, label %11, !dbg !3080

9:                                                ; preds = %1
  %10 = load %struct.quoting_options*, %struct.quoting_options** %2, align 8, !dbg !3081
  br label %12, !dbg !3080

11:                                               ; preds = %1
  br label %12, !dbg !3080

12:                                               ; preds = %11, %9
  %13 = phi %struct.quoting_options* [ %10, %9 ], [ @default_quoting_options, %11 ], !dbg !3080
  %14 = bitcast %struct.quoting_options* %13 to i8*, !dbg !3080
  %15 = call i8* @xmemdup(i8* %14, i64 56), !dbg !3082
  %16 = bitcast i8* %15 to %struct.quoting_options*, !dbg !3082
  store %struct.quoting_options* %16, %struct.quoting_options** %4, align 8, !dbg !3079
  %17 = load i32, i32* %3, align 4, !dbg !3083
  %18 = call i32* @__errno_location() #16, !dbg !3084
  store i32 %17, i32* %18, align 4, !dbg !3085
  %19 = load %struct.quoting_options*, %struct.quoting_options** %4, align 8, !dbg !3086
  ret %struct.quoting_options* %19, !dbg !3087
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @get_quoting_style(%struct.quoting_options* %0) #3 !dbg !3088 {
  %2 = alloca %struct.quoting_options*, align 8
  store %struct.quoting_options* %0, %struct.quoting_options** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %2, metadata !3093, metadata !DIExpression()), !dbg !3094
  %3 = load %struct.quoting_options*, %struct.quoting_options** %2, align 8, !dbg !3095
  %4 = icmp ne %struct.quoting_options* %3, null, !dbg !3095
  br i1 %4, label %5, label %7, !dbg !3095

5:                                                ; preds = %1
  %6 = load %struct.quoting_options*, %struct.quoting_options** %2, align 8, !dbg !3096
  br label %8, !dbg !3095

7:                                                ; preds = %1
  br label %8, !dbg !3095

8:                                                ; preds = %7, %5
  %9 = phi %struct.quoting_options* [ %6, %5 ], [ @default_quoting_options, %7 ], !dbg !3095
  %10 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %9, i32 0, i32 0, !dbg !3097
  %11 = load i32, i32* %10, align 8, !dbg !3097
  ret i32 %11, !dbg !3098
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @set_quoting_style(%struct.quoting_options* %0, i32 %1) #3 !dbg !3099 {
  %3 = alloca %struct.quoting_options*, align 8
  %4 = alloca i32, align 4
  store %struct.quoting_options* %0, %struct.quoting_options** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %3, metadata !3102, metadata !DIExpression()), !dbg !3103
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3104, metadata !DIExpression()), !dbg !3105
  %5 = load i32, i32* %4, align 4, !dbg !3106
  %6 = load %struct.quoting_options*, %struct.quoting_options** %3, align 8, !dbg !3107
  %7 = icmp ne %struct.quoting_options* %6, null, !dbg !3107
  br i1 %7, label %8, label %10, !dbg !3107

8:                                                ; preds = %2
  %9 = load %struct.quoting_options*, %struct.quoting_options** %3, align 8, !dbg !3108
  br label %11, !dbg !3107

10:                                               ; preds = %2
  br label %11, !dbg !3107

11:                                               ; preds = %10, %8
  %12 = phi %struct.quoting_options* [ %9, %8 ], [ @default_quoting_options, %10 ], !dbg !3107
  %13 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %12, i32 0, i32 0, !dbg !3109
  store i32 %5, i32* %13, align 8, !dbg !3110
  ret void, !dbg !3111
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @set_char_quoting(%struct.quoting_options* %0, i8 signext %1, i32 %2) #3 !dbg !3112 {
  %4 = alloca %struct.quoting_options*, align 8
  %5 = alloca i8, align 1
  %6 = alloca i32, align 4
  %7 = alloca i8, align 1
  %8 = alloca i32*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store %struct.quoting_options* %0, %struct.quoting_options** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %4, metadata !3115, metadata !DIExpression()), !dbg !3116
  store i8 %1, i8* %5, align 1
  call void @llvm.dbg.declare(metadata i8* %5, metadata !3117, metadata !DIExpression()), !dbg !3118
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !3119, metadata !DIExpression()), !dbg !3120
  call void @llvm.dbg.declare(metadata i8* %7, metadata !3121, metadata !DIExpression()), !dbg !3122
  %11 = load i8, i8* %5, align 1, !dbg !3123
  store i8 %11, i8* %7, align 1, !dbg !3122
  call void @llvm.dbg.declare(metadata i32** %8, metadata !3124, metadata !DIExpression()), !dbg !3126
  %12 = load %struct.quoting_options*, %struct.quoting_options** %4, align 8, !dbg !3127
  %13 = icmp ne %struct.quoting_options* %12, null, !dbg !3127
  br i1 %13, label %14, label %16, !dbg !3127

14:                                               ; preds = %3
  %15 = load %struct.quoting_options*, %struct.quoting_options** %4, align 8, !dbg !3128
  br label %17, !dbg !3127

16:                                               ; preds = %3
  br label %17, !dbg !3127

17:                                               ; preds = %16, %14
  %18 = phi %struct.quoting_options* [ %15, %14 ], [ @default_quoting_options, %16 ], !dbg !3127
  %19 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %18, i32 0, i32 2, !dbg !3129
  %20 = getelementptr inbounds [8 x i32], [8 x i32]* %19, i64 0, i64 0, !dbg !3130
  %21 = load i8, i8* %7, align 1, !dbg !3131
  %22 = zext i8 %21 to i64, !dbg !3131
  %23 = udiv i64 %22, 32, !dbg !3132
  %24 = getelementptr inbounds i32, i32* %20, i64 %23, !dbg !3133
  store i32* %24, i32** %8, align 8, !dbg !3126
  call void @llvm.dbg.declare(metadata i32* %9, metadata !3134, metadata !DIExpression()), !dbg !3135
  %25 = load i8, i8* %7, align 1, !dbg !3136
  %26 = zext i8 %25 to i64, !dbg !3136
  %27 = urem i64 %26, 32, !dbg !3137
  %28 = trunc i64 %27 to i32, !dbg !3136
  store i32 %28, i32* %9, align 4, !dbg !3135
  call void @llvm.dbg.declare(metadata i32* %10, metadata !3138, metadata !DIExpression()), !dbg !3139
  %29 = load i32*, i32** %8, align 8, !dbg !3140
  %30 = load i32, i32* %29, align 4, !dbg !3141
  %31 = load i32, i32* %9, align 4, !dbg !3142
  %32 = lshr i32 %30, %31, !dbg !3143
  %33 = and i32 %32, 1, !dbg !3144
  store i32 %33, i32* %10, align 4, !dbg !3139
  %34 = load i32, i32* %6, align 4, !dbg !3145
  %35 = and i32 %34, 1, !dbg !3146
  %36 = load i32, i32* %10, align 4, !dbg !3147
  %37 = xor i32 %35, %36, !dbg !3148
  %38 = load i32, i32* %9, align 4, !dbg !3149
  %39 = shl i32 %37, %38, !dbg !3150
  %40 = load i32*, i32** %8, align 8, !dbg !3151
  %41 = load i32, i32* %40, align 4, !dbg !3152
  %42 = xor i32 %41, %39, !dbg !3152
  store i32 %42, i32* %40, align 4, !dbg !3152
  %43 = load i32, i32* %10, align 4, !dbg !3153
  ret i32 %43, !dbg !3154
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @set_quoting_flags(%struct.quoting_options* %0, i32 %1) #3 !dbg !3155 {
  %3 = alloca %struct.quoting_options*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store %struct.quoting_options* %0, %struct.quoting_options** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %3, metadata !3158, metadata !DIExpression()), !dbg !3159
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3160, metadata !DIExpression()), !dbg !3161
  call void @llvm.dbg.declare(metadata i32* %5, metadata !3162, metadata !DIExpression()), !dbg !3163
  %6 = load %struct.quoting_options*, %struct.quoting_options** %3, align 8, !dbg !3164
  %7 = icmp ne %struct.quoting_options* %6, null, !dbg !3164
  br i1 %7, label %9, label %8, !dbg !3166

8:                                                ; preds = %2
  store %struct.quoting_options* @default_quoting_options, %struct.quoting_options** %3, align 8, !dbg !3167
  br label %9, !dbg !3168

9:                                                ; preds = %8, %2
  %10 = load %struct.quoting_options*, %struct.quoting_options** %3, align 8, !dbg !3169
  %11 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %10, i32 0, i32 1, !dbg !3170
  %12 = load i32, i32* %11, align 4, !dbg !3170
  store i32 %12, i32* %5, align 4, !dbg !3171
  %13 = load i32, i32* %4, align 4, !dbg !3172
  %14 = load %struct.quoting_options*, %struct.quoting_options** %3, align 8, !dbg !3173
  %15 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %14, i32 0, i32 1, !dbg !3174
  store i32 %13, i32* %15, align 4, !dbg !3175
  %16 = load i32, i32* %5, align 4, !dbg !3176
  ret i32 %16, !dbg !3177
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @set_custom_quoting(%struct.quoting_options* %0, i8* %1, i8* %2) #3 !dbg !3178 {
  %4 = alloca %struct.quoting_options*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  store %struct.quoting_options* %0, %struct.quoting_options** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %4, metadata !3181, metadata !DIExpression()), !dbg !3182
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !3183, metadata !DIExpression()), !dbg !3184
  store i8* %2, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !3185, metadata !DIExpression()), !dbg !3186
  %7 = load %struct.quoting_options*, %struct.quoting_options** %4, align 8, !dbg !3187
  %8 = icmp ne %struct.quoting_options* %7, null, !dbg !3187
  br i1 %8, label %10, label %9, !dbg !3189

9:                                                ; preds = %3
  store %struct.quoting_options* @default_quoting_options, %struct.quoting_options** %4, align 8, !dbg !3190
  br label %10, !dbg !3191

10:                                               ; preds = %9, %3
  %11 = load %struct.quoting_options*, %struct.quoting_options** %4, align 8, !dbg !3192
  %12 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %11, i32 0, i32 0, !dbg !3193
  store i32 10, i32* %12, align 8, !dbg !3194
  %13 = load i8*, i8** %5, align 8, !dbg !3195
  %14 = icmp ne i8* %13, null, !dbg !3195
  br i1 %14, label %15, label %18, !dbg !3197

15:                                               ; preds = %10
  %16 = load i8*, i8** %6, align 8, !dbg !3198
  %17 = icmp ne i8* %16, null, !dbg !3198
  br i1 %17, label %19, label %18, !dbg !3199

18:                                               ; preds = %15, %10
  call void @abort() #13, !dbg !3200
  unreachable, !dbg !3200

19:                                               ; preds = %15
  %20 = load i8*, i8** %5, align 8, !dbg !3201
  %21 = load %struct.quoting_options*, %struct.quoting_options** %4, align 8, !dbg !3202
  %22 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %21, i32 0, i32 3, !dbg !3203
  store i8* %20, i8** %22, align 8, !dbg !3204
  %23 = load i8*, i8** %6, align 8, !dbg !3205
  %24 = load %struct.quoting_options*, %struct.quoting_options** %4, align 8, !dbg !3206
  %25 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %24, i32 0, i32 4, !dbg !3207
  store i8* %23, i8** %25, align 8, !dbg !3208
  ret void, !dbg !3209
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @quotearg_buffer(i8* %0, i64 %1, i8* %2, i64 %3, %struct.quoting_options* %4) #3 !dbg !3210 {
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca %struct.quoting_options*, align 8
  %11 = alloca %struct.quoting_options*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i64, align 8
  store i8* %0, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !3213, metadata !DIExpression()), !dbg !3214
  store i64 %1, i64* %7, align 8
  call void @llvm.dbg.declare(metadata i64* %7, metadata !3215, metadata !DIExpression()), !dbg !3216
  store i8* %2, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !3217, metadata !DIExpression()), !dbg !3218
  store i64 %3, i64* %9, align 8
  call void @llvm.dbg.declare(metadata i64* %9, metadata !3219, metadata !DIExpression()), !dbg !3220
  store %struct.quoting_options* %4, %struct.quoting_options** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %10, metadata !3221, metadata !DIExpression()), !dbg !3222
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %11, metadata !3223, metadata !DIExpression()), !dbg !3224
  %14 = load %struct.quoting_options*, %struct.quoting_options** %10, align 8, !dbg !3225
  %15 = icmp ne %struct.quoting_options* %14, null, !dbg !3225
  br i1 %15, label %16, label %18, !dbg !3225

16:                                               ; preds = %5
  %17 = load %struct.quoting_options*, %struct.quoting_options** %10, align 8, !dbg !3226
  br label %19, !dbg !3225

18:                                               ; preds = %5
  br label %19, !dbg !3225

19:                                               ; preds = %18, %16
  %20 = phi %struct.quoting_options* [ %17, %16 ], [ @default_quoting_options, %18 ], !dbg !3225
  store %struct.quoting_options* %20, %struct.quoting_options** %11, align 8, !dbg !3224
  call void @llvm.dbg.declare(metadata i32* %12, metadata !3227, metadata !DIExpression()), !dbg !3228
  %21 = call i32* @__errno_location() #16, !dbg !3229
  %22 = load i32, i32* %21, align 4, !dbg !3229
  store i32 %22, i32* %12, align 4, !dbg !3228
  call void @llvm.dbg.declare(metadata i64* %13, metadata !3230, metadata !DIExpression()), !dbg !3231
  %23 = load i8*, i8** %6, align 8, !dbg !3232
  %24 = load i64, i64* %7, align 8, !dbg !3233
  %25 = load i8*, i8** %8, align 8, !dbg !3234
  %26 = load i64, i64* %9, align 8, !dbg !3235
  %27 = load %struct.quoting_options*, %struct.quoting_options** %11, align 8, !dbg !3236
  %28 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %27, i32 0, i32 0, !dbg !3237
  %29 = load i32, i32* %28, align 8, !dbg !3237
  %30 = load %struct.quoting_options*, %struct.quoting_options** %11, align 8, !dbg !3238
  %31 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %30, i32 0, i32 1, !dbg !3239
  %32 = load i32, i32* %31, align 4, !dbg !3239
  %33 = load %struct.quoting_options*, %struct.quoting_options** %11, align 8, !dbg !3240
  %34 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %33, i32 0, i32 2, !dbg !3241
  %35 = getelementptr inbounds [8 x i32], [8 x i32]* %34, i64 0, i64 0, !dbg !3240
  %36 = load %struct.quoting_options*, %struct.quoting_options** %11, align 8, !dbg !3242
  %37 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %36, i32 0, i32 3, !dbg !3243
  %38 = load i8*, i8** %37, align 8, !dbg !3243
  %39 = load %struct.quoting_options*, %struct.quoting_options** %11, align 8, !dbg !3244
  %40 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %39, i32 0, i32 4, !dbg !3245
  %41 = load i8*, i8** %40, align 8, !dbg !3245
  %42 = call i64 @quotearg_buffer_restyled(i8* %23, i64 %24, i8* %25, i64 %26, i32 %29, i32 %32, i32* %35, i8* %38, i8* %41), !dbg !3246
  store i64 %42, i64* %13, align 8, !dbg !3231
  %43 = load i32, i32* %12, align 4, !dbg !3247
  %44 = call i32* @__errno_location() #16, !dbg !3248
  store i32 %43, i32* %44, align 4, !dbg !3249
  %45 = load i64, i64* %13, align 8, !dbg !3250
  ret i64 %45, !dbg !3251
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @quotearg_buffer_restyled(i8* %0, i64 %1, i8* %2, i64 %3, i32 %4, i32 %5, i32* %6, i8* %7, i8* %8) #3 !dbg !3252 {
  %10 = alloca i64, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i64, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i64, align 8
  %21 = alloca i64, align 8
  %22 = alloca i64, align 8
  %23 = alloca i8*, align 8
  %24 = alloca i64, align 8
  %25 = alloca i8, align 1
  %26 = alloca i8, align 1
  %27 = alloca i8, align 1
  %28 = alloca i8, align 1
  %29 = alloca i8, align 1
  %30 = alloca i8, align 1
  %31 = alloca i8, align 1
  %32 = alloca i8, align 1
  %33 = alloca i8, align 1
  %34 = alloca i8, align 1
  %35 = alloca i8, align 1
  %36 = alloca i64, align 8
  %37 = alloca i8, align 1
  %38 = alloca %struct.__mbstate_t, align 4
  %39 = alloca i32, align 4
  %40 = alloca i64, align 8
  %41 = alloca i64, align 8
  %42 = alloca i64, align 8
  store i8* %0, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !3256, metadata !DIExpression()), !dbg !3257
  store i64 %1, i64* %12, align 8
  call void @llvm.dbg.declare(metadata i64* %12, metadata !3258, metadata !DIExpression()), !dbg !3259
  store i8* %2, i8** %13, align 8
  call void @llvm.dbg.declare(metadata i8** %13, metadata !3260, metadata !DIExpression()), !dbg !3261
  store i64 %3, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !3262, metadata !DIExpression()), !dbg !3263
  store i32 %4, i32* %15, align 4
  call void @llvm.dbg.declare(metadata i32* %15, metadata !3264, metadata !DIExpression()), !dbg !3265
  store i32 %5, i32* %16, align 4
  call void @llvm.dbg.declare(metadata i32* %16, metadata !3266, metadata !DIExpression()), !dbg !3267
  store i32* %6, i32** %17, align 8
  call void @llvm.dbg.declare(metadata i32** %17, metadata !3268, metadata !DIExpression()), !dbg !3269
  store i8* %7, i8** %18, align 8
  call void @llvm.dbg.declare(metadata i8** %18, metadata !3270, metadata !DIExpression()), !dbg !3271
  store i8* %8, i8** %19, align 8
  call void @llvm.dbg.declare(metadata i8** %19, metadata !3272, metadata !DIExpression()), !dbg !3273
  call void @llvm.dbg.declare(metadata i64* %20, metadata !3274, metadata !DIExpression()), !dbg !3275
  call void @llvm.dbg.declare(metadata i64* %21, metadata !3276, metadata !DIExpression()), !dbg !3277
  store i64 0, i64* %21, align 8, !dbg !3277
  call void @llvm.dbg.declare(metadata i64* %22, metadata !3278, metadata !DIExpression()), !dbg !3279
  store i64 0, i64* %22, align 8, !dbg !3279
  call void @llvm.dbg.declare(metadata i8** %23, metadata !3280, metadata !DIExpression()), !dbg !3281
  store i8* null, i8** %23, align 8, !dbg !3281
  call void @llvm.dbg.declare(metadata i64* %24, metadata !3282, metadata !DIExpression()), !dbg !3283
  store i64 0, i64* %24, align 8, !dbg !3283
  call void @llvm.dbg.declare(metadata i8* %25, metadata !3284, metadata !DIExpression()), !dbg !3285
  store i8 0, i8* %25, align 1, !dbg !3285
  call void @llvm.dbg.declare(metadata i8* %26, metadata !3286, metadata !DIExpression()), !dbg !3287
  %43 = call i64 @__ctype_get_mb_cur_max() #15, !dbg !3288
  %44 = icmp eq i64 %43, 1, !dbg !3289
  %45 = zext i1 %44 to i8, !dbg !3287
  store i8 %45, i8* %26, align 1, !dbg !3287
  call void @llvm.dbg.declare(metadata i8* %27, metadata !3290, metadata !DIExpression()), !dbg !3291
  %46 = load i32, i32* %16, align 4, !dbg !3292
  %47 = and i32 %46, 2, !dbg !3293
  %48 = icmp ne i32 %47, 0, !dbg !3294
  %49 = zext i1 %48 to i8, !dbg !3291
  store i8 %49, i8* %27, align 1, !dbg !3291
  call void @llvm.dbg.declare(metadata i8* %28, metadata !3295, metadata !DIExpression()), !dbg !3296
  store i8 0, i8* %28, align 1, !dbg !3296
  call void @llvm.dbg.declare(metadata i8* %29, metadata !3297, metadata !DIExpression()), !dbg !3298
  store i8 0, i8* %29, align 1, !dbg !3298
  call void @llvm.dbg.declare(metadata i8* %30, metadata !3299, metadata !DIExpression()), !dbg !3300
  store i8 1, i8* %30, align 1, !dbg !3300
  br label %50, !dbg !3301

50:                                               ; preds = %1042, %9
  call void @llvm.dbg.label(metadata !3302), !dbg !3303
  %51 = load i32, i32* %15, align 4, !dbg !3304
  switch i32 %51, label %136 [
    i32 6, label %52
    i32 5, label %53
    i32 7, label %70
    i32 8, label %71
    i32 9, label %71
    i32 10, label %71
    i32 3, label %111
    i32 1, label %112
    i32 4, label %113
    i32 2, label %118
    i32 0, label %135
  ], !dbg !3305

52:                                               ; preds = %50
  store i32 5, i32* %15, align 4, !dbg !3306
  store i8 1, i8* %27, align 1, !dbg !3308
  br label %53, !dbg !3309

53:                                               ; preds = %50, %52
  %54 = load i8, i8* %27, align 1, !dbg !3310
  %55 = trunc i8 %54 to i1, !dbg !3310
  br i1 %55, label %69, label %56, !dbg !3312

56:                                               ; preds = %53
  br label %57, !dbg !3313

57:                                               ; preds = %56
  %58 = load i64, i64* %21, align 8, !dbg !3314
  %59 = load i64, i64* %12, align 8, !dbg !3314
  %60 = icmp ult i64 %58, %59, !dbg !3314
  br i1 %60, label %61, label %65, !dbg !3317

61:                                               ; preds = %57
  %62 = load i8*, i8** %11, align 8, !dbg !3314
  %63 = load i64, i64* %21, align 8, !dbg !3314
  %64 = getelementptr inbounds i8, i8* %62, i64 %63, !dbg !3314
  store i8 34, i8* %64, align 1, !dbg !3314
  br label %65, !dbg !3314

65:                                               ; preds = %61, %57
  %66 = load i64, i64* %21, align 8, !dbg !3317
  %67 = add i64 %66, 1, !dbg !3317
  store i64 %67, i64* %21, align 8, !dbg !3317
  br label %68, !dbg !3317

68:                                               ; preds = %65
  br label %69, !dbg !3317

69:                                               ; preds = %68, %53
  store i8 1, i8* %25, align 1, !dbg !3318
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.99, i64 0, i64 0), i8** %23, align 8, !dbg !3319
  store i64 1, i64* %24, align 8, !dbg !3320
  br label %137, !dbg !3321

70:                                               ; preds = %50
  store i8 1, i8* %25, align 1, !dbg !3322
  store i8 0, i8* %27, align 1, !dbg !3323
  br label %137, !dbg !3324

71:                                               ; preds = %50, %50, %50
  %72 = load i32, i32* %15, align 4, !dbg !3325
  %73 = icmp ne i32 %72, 10, !dbg !3328
  br i1 %73, label %74, label %79, !dbg !3329

74:                                               ; preds = %71
  %75 = load i32, i32* %15, align 4, !dbg !3330
  %76 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11.100, i64 0, i64 0), i32 %75), !dbg !3332
  store i8* %76, i8** %18, align 8, !dbg !3333
  %77 = load i32, i32* %15, align 4, !dbg !3334
  %78 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.101, i64 0, i64 0), i32 %77), !dbg !3335
  store i8* %78, i8** %19, align 8, !dbg !3336
  br label %79, !dbg !3337

79:                                               ; preds = %74, %71
  %80 = load i8, i8* %27, align 1, !dbg !3338
  %81 = trunc i8 %80 to i1, !dbg !3338
  br i1 %81, label %107, label %82, !dbg !3340

82:                                               ; preds = %79
  %83 = load i8*, i8** %18, align 8, !dbg !3341
  store i8* %83, i8** %23, align 8, !dbg !3343
  br label %84, !dbg !3344

84:                                               ; preds = %103, %82
  %85 = load i8*, i8** %23, align 8, !dbg !3345
  %86 = load i8, i8* %85, align 1, !dbg !3347
  %87 = icmp ne i8 %86, 0, !dbg !3348
  br i1 %87, label %88, label %106, !dbg !3348

88:                                               ; preds = %84
  br label %89, !dbg !3349

89:                                               ; preds = %88
  %90 = load i64, i64* %21, align 8, !dbg !3350
  %91 = load i64, i64* %12, align 8, !dbg !3350
  %92 = icmp ult i64 %90, %91, !dbg !3350
  br i1 %92, label %93, label %99, !dbg !3353

93:                                               ; preds = %89
  %94 = load i8*, i8** %23, align 8, !dbg !3350
  %95 = load i8, i8* %94, align 1, !dbg !3350
  %96 = load i8*, i8** %11, align 8, !dbg !3350
  %97 = load i64, i64* %21, align 8, !dbg !3350
  %98 = getelementptr inbounds i8, i8* %96, i64 %97, !dbg !3350
  store i8 %95, i8* %98, align 1, !dbg !3350
  br label %99, !dbg !3350

99:                                               ; preds = %93, %89
  %100 = load i64, i64* %21, align 8, !dbg !3353
  %101 = add i64 %100, 1, !dbg !3353
  store i64 %101, i64* %21, align 8, !dbg !3353
  br label %102, !dbg !3353

102:                                              ; preds = %99
  br label %103, !dbg !3353

103:                                              ; preds = %102
  %104 = load i8*, i8** %23, align 8, !dbg !3354
  %105 = getelementptr inbounds i8, i8* %104, i32 1, !dbg !3354
  store i8* %105, i8** %23, align 8, !dbg !3354
  br label %84, !dbg !3355, !llvm.loop !3356

106:                                              ; preds = %84
  br label %107, !dbg !3357

107:                                              ; preds = %106, %79
  store i8 1, i8* %25, align 1, !dbg !3358
  %108 = load i8*, i8** %19, align 8, !dbg !3359
  store i8* %108, i8** %23, align 8, !dbg !3360
  %109 = load i8*, i8** %23, align 8, !dbg !3361
  %110 = call i64 @strlen(i8* %109) #14, !dbg !3362
  store i64 %110, i64* %24, align 8, !dbg !3363
  br label %137, !dbg !3364

111:                                              ; preds = %50
  store i8 1, i8* %25, align 1, !dbg !3365
  br label %112, !dbg !3366

112:                                              ; preds = %50, %111
  store i8 1, i8* %27, align 1, !dbg !3367
  br label %113, !dbg !3368

113:                                              ; preds = %50, %112
  %114 = load i8, i8* %27, align 1, !dbg !3369
  %115 = trunc i8 %114 to i1, !dbg !3369
  br i1 %115, label %117, label %116, !dbg !3371

116:                                              ; preds = %113
  store i8 1, i8* %25, align 1, !dbg !3372
  br label %117, !dbg !3373

117:                                              ; preds = %116, %113
  br label %118, !dbg !3374

118:                                              ; preds = %50, %117
  store i32 2, i32* %15, align 4, !dbg !3375
  %119 = load i8, i8* %27, align 1, !dbg !3376
  %120 = trunc i8 %119 to i1, !dbg !3376
  br i1 %120, label %134, label %121, !dbg !3378

121:                                              ; preds = %118
  br label %122, !dbg !3379

122:                                              ; preds = %121
  %123 = load i64, i64* %21, align 8, !dbg !3380
  %124 = load i64, i64* %12, align 8, !dbg !3380
  %125 = icmp ult i64 %123, %124, !dbg !3380
  br i1 %125, label %126, label %130, !dbg !3383

126:                                              ; preds = %122
  %127 = load i8*, i8** %11, align 8, !dbg !3380
  %128 = load i64, i64* %21, align 8, !dbg !3380
  %129 = getelementptr inbounds i8, i8* %127, i64 %128, !dbg !3380
  store i8 39, i8* %129, align 1, !dbg !3380
  br label %130, !dbg !3380

130:                                              ; preds = %126, %122
  %131 = load i64, i64* %21, align 8, !dbg !3383
  %132 = add i64 %131, 1, !dbg !3383
  store i64 %132, i64* %21, align 8, !dbg !3383
  br label %133, !dbg !3383

133:                                              ; preds = %130
  br label %134, !dbg !3383

134:                                              ; preds = %133, %118
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.101, i64 0, i64 0), i8** %23, align 8, !dbg !3384
  store i64 1, i64* %24, align 8, !dbg !3385
  br label %137, !dbg !3386

135:                                              ; preds = %50
  store i8 0, i8* %27, align 1, !dbg !3387
  br label %137, !dbg !3388

136:                                              ; preds = %50
  call void @abort() #13, !dbg !3389
  unreachable, !dbg !3389

137:                                              ; preds = %135, %134, %107, %70, %69
  store i64 0, i64* %20, align 8, !dbg !3390
  br label %138, !dbg !3392

138:                                              ; preds = %1001, %137
  %139 = load i64, i64* %14, align 8, !dbg !3393
  %140 = icmp eq i64 %139, -1, !dbg !3395
  br i1 %140, label %141, label %149, !dbg !3393

141:                                              ; preds = %138
  %142 = load i8*, i8** %13, align 8, !dbg !3396
  %143 = load i64, i64* %20, align 8, !dbg !3397
  %144 = getelementptr inbounds i8, i8* %142, i64 %143, !dbg !3396
  %145 = load i8, i8* %144, align 1, !dbg !3396
  %146 = sext i8 %145 to i32, !dbg !3396
  %147 = icmp eq i32 %146, 0, !dbg !3398
  %148 = zext i1 %147 to i32, !dbg !3398
  br label %154, !dbg !3393

149:                                              ; preds = %138
  %150 = load i64, i64* %20, align 8, !dbg !3399
  %151 = load i64, i64* %14, align 8, !dbg !3400
  %152 = icmp eq i64 %150, %151, !dbg !3401
  %153 = zext i1 %152 to i32, !dbg !3401
  br label %154, !dbg !3393

154:                                              ; preds = %149, %141
  %155 = phi i32 [ %148, %141 ], [ %153, %149 ], !dbg !3393
  %156 = icmp ne i32 %155, 0, !dbg !3402
  %157 = xor i1 %156, true, !dbg !3402
  br i1 %157, label %158, label %1004, !dbg !3403

158:                                              ; preds = %154
  call void @llvm.dbg.declare(metadata i8* %31, metadata !3404, metadata !DIExpression()), !dbg !3406
  call void @llvm.dbg.declare(metadata i8* %32, metadata !3407, metadata !DIExpression()), !dbg !3408
  call void @llvm.dbg.declare(metadata i8* %33, metadata !3409, metadata !DIExpression()), !dbg !3410
  store i8 0, i8* %33, align 1, !dbg !3410
  call void @llvm.dbg.declare(metadata i8* %34, metadata !3411, metadata !DIExpression()), !dbg !3412
  store i8 0, i8* %34, align 1, !dbg !3412
  call void @llvm.dbg.declare(metadata i8* %35, metadata !3413, metadata !DIExpression()), !dbg !3414
  store i8 0, i8* %35, align 1, !dbg !3414
  %159 = load i8, i8* %25, align 1, !dbg !3415
  %160 = trunc i8 %159 to i1, !dbg !3415
  br i1 %160, label %161, label %197, !dbg !3417

161:                                              ; preds = %158
  %162 = load i32, i32* %15, align 4, !dbg !3418
  %163 = icmp ne i32 %162, 2, !dbg !3419
  br i1 %163, label %164, label %197, !dbg !3420

164:                                              ; preds = %161
  %165 = load i64, i64* %24, align 8, !dbg !3421
  %166 = icmp ne i64 %165, 0, !dbg !3421
  br i1 %166, label %167, label %197, !dbg !3422

167:                                              ; preds = %164
  %168 = load i64, i64* %20, align 8, !dbg !3423
  %169 = load i64, i64* %24, align 8, !dbg !3424
  %170 = add i64 %168, %169, !dbg !3425
  %171 = load i64, i64* %14, align 8, !dbg !3426
  %172 = icmp eq i64 %171, -1, !dbg !3427
  br i1 %172, label %173, label %179, !dbg !3428

173:                                              ; preds = %167
  %174 = load i64, i64* %24, align 8, !dbg !3429
  %175 = icmp ult i64 1, %174, !dbg !3430
  br i1 %175, label %176, label %179, !dbg !3426

176:                                              ; preds = %173
  %177 = load i8*, i8** %13, align 8, !dbg !3431
  %178 = call i64 @strlen(i8* %177) #14, !dbg !3432
  store i64 %178, i64* %14, align 8, !dbg !3433
  br label %181, !dbg !3426

179:                                              ; preds = %173, %167
  %180 = load i64, i64* %14, align 8, !dbg !3434
  br label %181, !dbg !3426

181:                                              ; preds = %179, %176
  %182 = phi i64 [ %178, %176 ], [ %180, %179 ], !dbg !3426
  %183 = icmp ule i64 %170, %182, !dbg !3435
  br i1 %183, label %184, label %197, !dbg !3436

184:                                              ; preds = %181
  %185 = load i8*, i8** %13, align 8, !dbg !3437
  %186 = load i64, i64* %20, align 8, !dbg !3438
  %187 = getelementptr inbounds i8, i8* %185, i64 %186, !dbg !3439
  %188 = load i8*, i8** %23, align 8, !dbg !3440
  %189 = load i64, i64* %24, align 8, !dbg !3441
  %190 = call i32 @memcmp(i8* %187, i8* %188, i64 %189) #14, !dbg !3442
  %191 = icmp eq i32 %190, 0, !dbg !3443
  br i1 %191, label %192, label %197, !dbg !3444

192:                                              ; preds = %184
  %193 = load i8, i8* %27, align 1, !dbg !3445
  %194 = trunc i8 %193 to i1, !dbg !3445
  br i1 %194, label %195, label %196, !dbg !3448

195:                                              ; preds = %192
  br label %1086, !dbg !3449

196:                                              ; preds = %192
  store i8 1, i8* %33, align 1, !dbg !3450
  br label %197, !dbg !3451

197:                                              ; preds = %196, %184, %181, %164, %161, %158
  %198 = load i8*, i8** %13, align 8, !dbg !3452
  %199 = load i64, i64* %20, align 8, !dbg !3453
  %200 = getelementptr inbounds i8, i8* %198, i64 %199, !dbg !3452
  %201 = load i8, i8* %200, align 1, !dbg !3452
  store i8 %201, i8* %31, align 1, !dbg !3454
  %202 = load i8, i8* %31, align 1, !dbg !3455
  %203 = zext i8 %202 to i32, !dbg !3455
  switch i32 %203, label %544 [
    i32 0, label %204
    i32 63, label %325
    i32 7, label %421
    i32 8, label %422
    i32 12, label %423
    i32 10, label %424
    i32 13, label %425
    i32 9, label %426
    i32 11, label %427
    i32 92, label %428
    i32 123, label %462
    i32 125, label %462
    i32 35, label %476
    i32 126, label %476
    i32 32, label %481
    i32 33, label %482
    i32 34, label %482
    i32 36, label %482
    i32 38, label %482
    i32 40, label %482
    i32 41, label %482
    i32 42, label %482
    i32 59, label %482
    i32 60, label %482
    i32 61, label %482
    i32 62, label %482
    i32 91, label %482
    i32 94, label %482
    i32 96, label %482
    i32 124, label %482
    i32 39, label %490
    i32 37, label %543
    i32 43, label %543
    i32 44, label %543
    i32 45, label %543
    i32 46, label %543
    i32 47, label %543
    i32 48, label %543
    i32 49, label %543
    i32 50, label %543
    i32 51, label %543
    i32 52, label %543
    i32 53, label %543
    i32 54, label %543
    i32 55, label %543
    i32 56, label %543
    i32 57, label %543
    i32 58, label %543
    i32 65, label %543
    i32 66, label %543
    i32 67, label %543
    i32 68, label %543
    i32 69, label %543
    i32 70, label %543
    i32 71, label %543
    i32 72, label %543
    i32 73, label %543
    i32 74, label %543
    i32 75, label %543
    i32 76, label %543
    i32 77, label %543
    i32 78, label %543
    i32 79, label %543
    i32 80, label %543
    i32 81, label %543
    i32 82, label %543
    i32 83, label %543
    i32 84, label %543
    i32 85, label %543
    i32 86, label %543
    i32 87, label %543
    i32 88, label %543
    i32 89, label %543
    i32 90, label %543
    i32 93, label %543
    i32 95, label %543
    i32 97, label %543
    i32 98, label %543
    i32 99, label %543
    i32 100, label %543
    i32 101, label %543
    i32 102, label %543
    i32 103, label %543
    i32 104, label %543
    i32 105, label %543
    i32 106, label %543
    i32 107, label %543
    i32 108, label %543
    i32 109, label %543
    i32 110, label %543
    i32 111, label %543
    i32 112, label %543
    i32 113, label %543
    i32 114, label %543
    i32 115, label %543
    i32 116, label %543
    i32 117, label %543
    i32 118, label %543
    i32 119, label %543
    i32 120, label %543
    i32 121, label %543
    i32 122, label %543
  ], !dbg !3456

204:                                              ; preds = %197
  %205 = load i8, i8* %25, align 1, !dbg !3457
  %206 = trunc i8 %205 to i1, !dbg !3457
  br i1 %206, label %207, label %318, !dbg !3460

207:                                              ; preds = %204
  br label %208, !dbg !3461

208:                                              ; preds = %207
  %209 = load i8, i8* %27, align 1, !dbg !3463
  %210 = trunc i8 %209 to i1, !dbg !3463
  br i1 %210, label %211, label %212, !dbg !3466

211:                                              ; preds = %208
  br label %1086, !dbg !3463

212:                                              ; preds = %208
  store i8 1, i8* %34, align 1, !dbg !3466
  %213 = load i32, i32* %15, align 4, !dbg !3467
  %214 = icmp eq i32 %213, 2, !dbg !3467
  br i1 %214, label %215, label %255, !dbg !3467

215:                                              ; preds = %212
  %216 = load i8, i8* %28, align 1, !dbg !3467
  %217 = trunc i8 %216 to i1, !dbg !3467
  br i1 %217, label %255, label %218, !dbg !3466

218:                                              ; preds = %215
  br label %219, !dbg !3469

219:                                              ; preds = %218
  %220 = load i64, i64* %21, align 8, !dbg !3471
  %221 = load i64, i64* %12, align 8, !dbg !3471
  %222 = icmp ult i64 %220, %221, !dbg !3471
  br i1 %222, label %223, label %227, !dbg !3474

223:                                              ; preds = %219
  %224 = load i8*, i8** %11, align 8, !dbg !3471
  %225 = load i64, i64* %21, align 8, !dbg !3471
  %226 = getelementptr inbounds i8, i8* %224, i64 %225, !dbg !3471
  store i8 39, i8* %226, align 1, !dbg !3471
  br label %227, !dbg !3471

227:                                              ; preds = %223, %219
  %228 = load i64, i64* %21, align 8, !dbg !3474
  %229 = add i64 %228, 1, !dbg !3474
  store i64 %229, i64* %21, align 8, !dbg !3474
  br label %230, !dbg !3474

230:                                              ; preds = %227
  br label %231, !dbg !3469

231:                                              ; preds = %230
  %232 = load i64, i64* %21, align 8, !dbg !3475
  %233 = load i64, i64* %12, align 8, !dbg !3475
  %234 = icmp ult i64 %232, %233, !dbg !3475
  br i1 %234, label %235, label %239, !dbg !3478

235:                                              ; preds = %231
  %236 = load i8*, i8** %11, align 8, !dbg !3475
  %237 = load i64, i64* %21, align 8, !dbg !3475
  %238 = getelementptr inbounds i8, i8* %236, i64 %237, !dbg !3475
  store i8 36, i8* %238, align 1, !dbg !3475
  br label %239, !dbg !3475

239:                                              ; preds = %235, %231
  %240 = load i64, i64* %21, align 8, !dbg !3478
  %241 = add i64 %240, 1, !dbg !3478
  store i64 %241, i64* %21, align 8, !dbg !3478
  br label %242, !dbg !3478

242:                                              ; preds = %239
  br label %243, !dbg !3469

243:                                              ; preds = %242
  %244 = load i64, i64* %21, align 8, !dbg !3479
  %245 = load i64, i64* %12, align 8, !dbg !3479
  %246 = icmp ult i64 %244, %245, !dbg !3479
  br i1 %246, label %247, label %251, !dbg !3482

247:                                              ; preds = %243
  %248 = load i8*, i8** %11, align 8, !dbg !3479
  %249 = load i64, i64* %21, align 8, !dbg !3479
  %250 = getelementptr inbounds i8, i8* %248, i64 %249, !dbg !3479
  store i8 39, i8* %250, align 1, !dbg !3479
  br label %251, !dbg !3479

251:                                              ; preds = %247, %243
  %252 = load i64, i64* %21, align 8, !dbg !3482
  %253 = add i64 %252, 1, !dbg !3482
  store i64 %253, i64* %21, align 8, !dbg !3482
  br label %254, !dbg !3482

254:                                              ; preds = %251
  store i8 1, i8* %28, align 1, !dbg !3469
  br label %255, !dbg !3469

255:                                              ; preds = %254, %215, %212
  br label %256, !dbg !3466

256:                                              ; preds = %255
  %257 = load i64, i64* %21, align 8, !dbg !3483
  %258 = load i64, i64* %12, align 8, !dbg !3483
  %259 = icmp ult i64 %257, %258, !dbg !3483
  br i1 %259, label %260, label %264, !dbg !3486

260:                                              ; preds = %256
  %261 = load i8*, i8** %11, align 8, !dbg !3483
  %262 = load i64, i64* %21, align 8, !dbg !3483
  %263 = getelementptr inbounds i8, i8* %261, i64 %262, !dbg !3483
  store i8 92, i8* %263, align 1, !dbg !3483
  br label %264, !dbg !3483

264:                                              ; preds = %260, %256
  %265 = load i64, i64* %21, align 8, !dbg !3486
  %266 = add i64 %265, 1, !dbg !3486
  store i64 %266, i64* %21, align 8, !dbg !3486
  br label %267, !dbg !3486

267:                                              ; preds = %264
  br label %268, !dbg !3466

268:                                              ; preds = %267
  %269 = load i32, i32* %15, align 4, !dbg !3487
  %270 = icmp ne i32 %269, 2, !dbg !3489
  br i1 %270, label %271, label %317, !dbg !3490

271:                                              ; preds = %268
  %272 = load i64, i64* %20, align 8, !dbg !3491
  %273 = add i64 %272, 1, !dbg !3492
  %274 = load i64, i64* %14, align 8, !dbg !3493
  %275 = icmp ult i64 %273, %274, !dbg !3494
  br i1 %275, label %276, label %317, !dbg !3495

276:                                              ; preds = %271
  %277 = load i8*, i8** %13, align 8, !dbg !3496
  %278 = load i64, i64* %20, align 8, !dbg !3497
  %279 = add i64 %278, 1, !dbg !3498
  %280 = getelementptr inbounds i8, i8* %277, i64 %279, !dbg !3496
  %281 = load i8, i8* %280, align 1, !dbg !3496
  %282 = sext i8 %281 to i32, !dbg !3496
  %283 = icmp sle i32 48, %282, !dbg !3499
  br i1 %283, label %284, label %317, !dbg !3500

284:                                              ; preds = %276
  %285 = load i8*, i8** %13, align 8, !dbg !3501
  %286 = load i64, i64* %20, align 8, !dbg !3502
  %287 = add i64 %286, 1, !dbg !3503
  %288 = getelementptr inbounds i8, i8* %285, i64 %287, !dbg !3501
  %289 = load i8, i8* %288, align 1, !dbg !3501
  %290 = sext i8 %289 to i32, !dbg !3501
  %291 = icmp sle i32 %290, 57, !dbg !3504
  br i1 %291, label %292, label %317, !dbg !3505

292:                                              ; preds = %284
  br label %293, !dbg !3506

293:                                              ; preds = %292
  %294 = load i64, i64* %21, align 8, !dbg !3508
  %295 = load i64, i64* %12, align 8, !dbg !3508
  %296 = icmp ult i64 %294, %295, !dbg !3508
  br i1 %296, label %297, label %301, !dbg !3511

297:                                              ; preds = %293
  %298 = load i8*, i8** %11, align 8, !dbg !3508
  %299 = load i64, i64* %21, align 8, !dbg !3508
  %300 = getelementptr inbounds i8, i8* %298, i64 %299, !dbg !3508
  store i8 48, i8* %300, align 1, !dbg !3508
  br label %301, !dbg !3508

301:                                              ; preds = %297, %293
  %302 = load i64, i64* %21, align 8, !dbg !3511
  %303 = add i64 %302, 1, !dbg !3511
  store i64 %303, i64* %21, align 8, !dbg !3511
  br label %304, !dbg !3511

304:                                              ; preds = %301
  br label %305, !dbg !3512

305:                                              ; preds = %304
  %306 = load i64, i64* %21, align 8, !dbg !3513
  %307 = load i64, i64* %12, align 8, !dbg !3513
  %308 = icmp ult i64 %306, %307, !dbg !3513
  br i1 %308, label %309, label %313, !dbg !3516

309:                                              ; preds = %305
  %310 = load i8*, i8** %11, align 8, !dbg !3513
  %311 = load i64, i64* %21, align 8, !dbg !3513
  %312 = getelementptr inbounds i8, i8* %310, i64 %311, !dbg !3513
  store i8 48, i8* %312, align 1, !dbg !3513
  br label %313, !dbg !3513

313:                                              ; preds = %309, %305
  %314 = load i64, i64* %21, align 8, !dbg !3516
  %315 = add i64 %314, 1, !dbg !3516
  store i64 %315, i64* %21, align 8, !dbg !3516
  br label %316, !dbg !3516

316:                                              ; preds = %313
  br label %317, !dbg !3517

317:                                              ; preds = %316, %284, %276, %271, %268
  store i8 48, i8* %31, align 1, !dbg !3518
  br label %324, !dbg !3519

318:                                              ; preds = %204
  %319 = load i32, i32* %16, align 4, !dbg !3520
  %320 = and i32 %319, 1, !dbg !3522
  %321 = icmp ne i32 %320, 0, !dbg !3522
  br i1 %321, label %322, label %323, !dbg !3523

322:                                              ; preds = %318
  br label %1001, !dbg !3524

323:                                              ; preds = %318
  br label %324

324:                                              ; preds = %323, %317
  br label %857, !dbg !3525

325:                                              ; preds = %197
  %326 = load i32, i32* %15, align 4, !dbg !3526
  switch i32 %326, label %419 [
    i32 2, label %327
    i32 5, label %332
  ], !dbg !3527

327:                                              ; preds = %325
  %328 = load i8, i8* %27, align 1, !dbg !3528
  %329 = trunc i8 %328 to i1, !dbg !3528
  br i1 %329, label %330, label %331, !dbg !3531

330:                                              ; preds = %327
  br label %1086, !dbg !3532

331:                                              ; preds = %327
  br label %420, !dbg !3533

332:                                              ; preds = %325
  %333 = load i32, i32* %16, align 4, !dbg !3534
  %334 = and i32 %333, 4, !dbg !3536
  %335 = icmp ne i32 %334, 0, !dbg !3536
  br i1 %335, label %336, label %418, !dbg !3537

336:                                              ; preds = %332
  %337 = load i64, i64* %20, align 8, !dbg !3538
  %338 = add i64 %337, 2, !dbg !3539
  %339 = load i64, i64* %14, align 8, !dbg !3540
  %340 = icmp ult i64 %338, %339, !dbg !3541
  br i1 %340, label %341, label %418, !dbg !3542

341:                                              ; preds = %336
  %342 = load i8*, i8** %13, align 8, !dbg !3543
  %343 = load i64, i64* %20, align 8, !dbg !3544
  %344 = add i64 %343, 1, !dbg !3545
  %345 = getelementptr inbounds i8, i8* %342, i64 %344, !dbg !3543
  %346 = load i8, i8* %345, align 1, !dbg !3543
  %347 = sext i8 %346 to i32, !dbg !3543
  %348 = icmp eq i32 %347, 63, !dbg !3546
  br i1 %348, label %349, label %418, !dbg !3547

349:                                              ; preds = %341
  %350 = load i8*, i8** %13, align 8, !dbg !3548
  %351 = load i64, i64* %20, align 8, !dbg !3549
  %352 = add i64 %351, 2, !dbg !3550
  %353 = getelementptr inbounds i8, i8* %350, i64 %352, !dbg !3548
  %354 = load i8, i8* %353, align 1, !dbg !3548
  %355 = sext i8 %354 to i32, !dbg !3548
  switch i32 %355, label %416 [
    i32 33, label %356
    i32 39, label %356
    i32 40, label %356
    i32 41, label %356
    i32 45, label %356
    i32 47, label %356
    i32 60, label %356
    i32 61, label %356
    i32 62, label %356
  ], !dbg !3551

356:                                              ; preds = %349, %349, %349, %349, %349, %349, %349, %349, %349
  %357 = load i8, i8* %27, align 1, !dbg !3552
  %358 = trunc i8 %357 to i1, !dbg !3552
  br i1 %358, label %359, label %360, !dbg !3555

359:                                              ; preds = %356
  br label %1086, !dbg !3556

360:                                              ; preds = %356
  %361 = load i8*, i8** %13, align 8, !dbg !3557
  %362 = load i64, i64* %20, align 8, !dbg !3558
  %363 = add i64 %362, 2, !dbg !3559
  %364 = getelementptr inbounds i8, i8* %361, i64 %363, !dbg !3557
  %365 = load i8, i8* %364, align 1, !dbg !3557
  store i8 %365, i8* %31, align 1, !dbg !3560
  %366 = load i64, i64* %20, align 8, !dbg !3561
  %367 = add i64 %366, 2, !dbg !3561
  store i64 %367, i64* %20, align 8, !dbg !3561
  br label %368, !dbg !3562

368:                                              ; preds = %360
  %369 = load i64, i64* %21, align 8, !dbg !3563
  %370 = load i64, i64* %12, align 8, !dbg !3563
  %371 = icmp ult i64 %369, %370, !dbg !3563
  br i1 %371, label %372, label %376, !dbg !3566

372:                                              ; preds = %368
  %373 = load i8*, i8** %11, align 8, !dbg !3563
  %374 = load i64, i64* %21, align 8, !dbg !3563
  %375 = getelementptr inbounds i8, i8* %373, i64 %374, !dbg !3563
  store i8 63, i8* %375, align 1, !dbg !3563
  br label %376, !dbg !3563

376:                                              ; preds = %372, %368
  %377 = load i64, i64* %21, align 8, !dbg !3566
  %378 = add i64 %377, 1, !dbg !3566
  store i64 %378, i64* %21, align 8, !dbg !3566
  br label %379, !dbg !3566

379:                                              ; preds = %376
  br label %380, !dbg !3567

380:                                              ; preds = %379
  %381 = load i64, i64* %21, align 8, !dbg !3568
  %382 = load i64, i64* %12, align 8, !dbg !3568
  %383 = icmp ult i64 %381, %382, !dbg !3568
  br i1 %383, label %384, label %388, !dbg !3571

384:                                              ; preds = %380
  %385 = load i8*, i8** %11, align 8, !dbg !3568
  %386 = load i64, i64* %21, align 8, !dbg !3568
  %387 = getelementptr inbounds i8, i8* %385, i64 %386, !dbg !3568
  store i8 34, i8* %387, align 1, !dbg !3568
  br label %388, !dbg !3568

388:                                              ; preds = %384, %380
  %389 = load i64, i64* %21, align 8, !dbg !3571
  %390 = add i64 %389, 1, !dbg !3571
  store i64 %390, i64* %21, align 8, !dbg !3571
  br label %391, !dbg !3571

391:                                              ; preds = %388
  br label %392, !dbg !3572

392:                                              ; preds = %391
  %393 = load i64, i64* %21, align 8, !dbg !3573
  %394 = load i64, i64* %12, align 8, !dbg !3573
  %395 = icmp ult i64 %393, %394, !dbg !3573
  br i1 %395, label %396, label %400, !dbg !3576

396:                                              ; preds = %392
  %397 = load i8*, i8** %11, align 8, !dbg !3573
  %398 = load i64, i64* %21, align 8, !dbg !3573
  %399 = getelementptr inbounds i8, i8* %397, i64 %398, !dbg !3573
  store i8 34, i8* %399, align 1, !dbg !3573
  br label %400, !dbg !3573

400:                                              ; preds = %396, %392
  %401 = load i64, i64* %21, align 8, !dbg !3576
  %402 = add i64 %401, 1, !dbg !3576
  store i64 %402, i64* %21, align 8, !dbg !3576
  br label %403, !dbg !3576

403:                                              ; preds = %400
  br label %404, !dbg !3577

404:                                              ; preds = %403
  %405 = load i64, i64* %21, align 8, !dbg !3578
  %406 = load i64, i64* %12, align 8, !dbg !3578
  %407 = icmp ult i64 %405, %406, !dbg !3578
  br i1 %407, label %408, label %412, !dbg !3581

408:                                              ; preds = %404
  %409 = load i8*, i8** %11, align 8, !dbg !3578
  %410 = load i64, i64* %21, align 8, !dbg !3578
  %411 = getelementptr inbounds i8, i8* %409, i64 %410, !dbg !3578
  store i8 63, i8* %411, align 1, !dbg !3578
  br label %412, !dbg !3578

412:                                              ; preds = %408, %404
  %413 = load i64, i64* %21, align 8, !dbg !3581
  %414 = add i64 %413, 1, !dbg !3581
  store i64 %414, i64* %21, align 8, !dbg !3581
  br label %415, !dbg !3581

415:                                              ; preds = %412
  br label %417, !dbg !3582

416:                                              ; preds = %349
  br label %417, !dbg !3583

417:                                              ; preds = %416, %415
  br label %418, !dbg !3584

418:                                              ; preds = %417, %341, %336, %332
  br label %420, !dbg !3585

419:                                              ; preds = %325
  br label %420, !dbg !3586

420:                                              ; preds = %419, %418, %331
  br label %857, !dbg !3587

421:                                              ; preds = %197
  store i8 97, i8* %32, align 1, !dbg !3588
  br label %456, !dbg !3589

422:                                              ; preds = %197
  store i8 98, i8* %32, align 1, !dbg !3590
  br label %456, !dbg !3591

423:                                              ; preds = %197
  store i8 102, i8* %32, align 1, !dbg !3592
  br label %456, !dbg !3593

424:                                              ; preds = %197
  store i8 110, i8* %32, align 1, !dbg !3594
  br label %448, !dbg !3595

425:                                              ; preds = %197
  store i8 114, i8* %32, align 1, !dbg !3596
  br label %448, !dbg !3597

426:                                              ; preds = %197
  store i8 116, i8* %32, align 1, !dbg !3598
  br label %448, !dbg !3599

427:                                              ; preds = %197
  store i8 118, i8* %32, align 1, !dbg !3600
  br label %456, !dbg !3601

428:                                              ; preds = %197
  %429 = load i8, i8* %31, align 1, !dbg !3602
  store i8 %429, i8* %32, align 1, !dbg !3603
  %430 = load i32, i32* %15, align 4, !dbg !3604
  %431 = icmp eq i32 %430, 2, !dbg !3606
  br i1 %431, label %432, label %437, !dbg !3607

432:                                              ; preds = %428
  %433 = load i8, i8* %27, align 1, !dbg !3608
  %434 = trunc i8 %433 to i1, !dbg !3608
  br i1 %434, label %435, label %436, !dbg !3611

435:                                              ; preds = %432
  br label %1086, !dbg !3612

436:                                              ; preds = %432
  br label %950, !dbg !3613

437:                                              ; preds = %428
  %438 = load i8, i8* %25, align 1, !dbg !3614
  %439 = trunc i8 %438 to i1, !dbg !3614
  br i1 %439, label %440, label %447, !dbg !3616

440:                                              ; preds = %437
  %441 = load i8, i8* %27, align 1, !dbg !3617
  %442 = trunc i8 %441 to i1, !dbg !3617
  br i1 %442, label %443, label %447, !dbg !3618

443:                                              ; preds = %440
  %444 = load i64, i64* %24, align 8, !dbg !3619
  %445 = icmp ne i64 %444, 0, !dbg !3619
  br i1 %445, label %446, label %447, !dbg !3620

446:                                              ; preds = %443
  br label %950, !dbg !3621

447:                                              ; preds = %443, %440, %437
  br label %448, !dbg !3619

448:                                              ; preds = %447, %426, %425, %424
  call void @llvm.dbg.label(metadata !3622), !dbg !3623
  %449 = load i32, i32* %15, align 4, !dbg !3624
  %450 = icmp eq i32 %449, 2, !dbg !3626
  br i1 %450, label %451, label %455, !dbg !3627

451:                                              ; preds = %448
  %452 = load i8, i8* %27, align 1, !dbg !3628
  %453 = trunc i8 %452 to i1, !dbg !3628
  br i1 %453, label %454, label %455, !dbg !3629

454:                                              ; preds = %451
  br label %1086, !dbg !3630

455:                                              ; preds = %451, %448
  br label %456, !dbg !3628

456:                                              ; preds = %455, %427, %423, %422, %421
  call void @llvm.dbg.label(metadata !3631), !dbg !3632
  %457 = load i8, i8* %25, align 1, !dbg !3633
  %458 = trunc i8 %457 to i1, !dbg !3633
  br i1 %458, label %459, label %461, !dbg !3635

459:                                              ; preds = %456
  %460 = load i8, i8* %32, align 1, !dbg !3636
  store i8 %460, i8* %31, align 1, !dbg !3638
  br label %888, !dbg !3639

461:                                              ; preds = %456
  br label %857, !dbg !3640

462:                                              ; preds = %197, %197
  %463 = load i64, i64* %14, align 8, !dbg !3641
  %464 = icmp eq i64 %463, -1, !dbg !3643
  br i1 %464, label %465, label %471, !dbg !3644

465:                                              ; preds = %462
  %466 = load i8*, i8** %13, align 8, !dbg !3645
  %467 = getelementptr inbounds i8, i8* %466, i64 1, !dbg !3645
  %468 = load i8, i8* %467, align 1, !dbg !3645
  %469 = sext i8 %468 to i32, !dbg !3645
  %470 = icmp eq i32 %469, 0, !dbg !3646
  br i1 %470, label %475, label %474, !dbg !3641

471:                                              ; preds = %462
  %472 = load i64, i64* %14, align 8, !dbg !3647
  %473 = icmp eq i64 %472, 1, !dbg !3648
  br i1 %473, label %475, label %474, !dbg !3644

474:                                              ; preds = %471, %465
  br label %857, !dbg !3649

475:                                              ; preds = %471, %465
  br label %476, !dbg !3650

476:                                              ; preds = %197, %197, %475
  %477 = load i64, i64* %20, align 8, !dbg !3651
  %478 = icmp ne i64 %477, 0, !dbg !3653
  br i1 %478, label %479, label %480, !dbg !3654

479:                                              ; preds = %476
  br label %857, !dbg !3655

480:                                              ; preds = %476
  br label %481, !dbg !3656

481:                                              ; preds = %197, %480
  store i8 1, i8* %35, align 1, !dbg !3657
  br label %482, !dbg !3658

482:                                              ; preds = %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %481
  %483 = load i32, i32* %15, align 4, !dbg !3659
  %484 = icmp eq i32 %483, 2, !dbg !3661
  br i1 %484, label %485, label %489, !dbg !3662

485:                                              ; preds = %482
  %486 = load i8, i8* %27, align 1, !dbg !3663
  %487 = trunc i8 %486 to i1, !dbg !3663
  br i1 %487, label %488, label %489, !dbg !3664

488:                                              ; preds = %485
  br label %1086, !dbg !3665

489:                                              ; preds = %485, %482
  br label %857, !dbg !3666

490:                                              ; preds = %197
  store i8 1, i8* %29, align 1, !dbg !3667
  store i8 1, i8* %35, align 1, !dbg !3668
  %491 = load i32, i32* %15, align 4, !dbg !3669
  %492 = icmp eq i32 %491, 2, !dbg !3671
  br i1 %492, label %493, label %542, !dbg !3672

493:                                              ; preds = %490
  %494 = load i8, i8* %27, align 1, !dbg !3673
  %495 = trunc i8 %494 to i1, !dbg !3673
  br i1 %495, label %496, label %497, !dbg !3676

496:                                              ; preds = %493
  br label %1086, !dbg !3677

497:                                              ; preds = %493
  %498 = load i64, i64* %12, align 8, !dbg !3678
  %499 = icmp ne i64 %498, 0, !dbg !3678
  br i1 %499, label %500, label %505, !dbg !3680

500:                                              ; preds = %497
  %501 = load i64, i64* %22, align 8, !dbg !3681
  %502 = icmp ne i64 %501, 0, !dbg !3681
  br i1 %502, label %505, label %503, !dbg !3682

503:                                              ; preds = %500
  %504 = load i64, i64* %12, align 8, !dbg !3683
  store i64 %504, i64* %22, align 8, !dbg !3685
  store i64 0, i64* %12, align 8, !dbg !3686
  br label %505, !dbg !3687

505:                                              ; preds = %503, %500, %497
  br label %506, !dbg !3688

506:                                              ; preds = %505
  %507 = load i64, i64* %21, align 8, !dbg !3689
  %508 = load i64, i64* %12, align 8, !dbg !3689
  %509 = icmp ult i64 %507, %508, !dbg !3689
  br i1 %509, label %510, label %514, !dbg !3692

510:                                              ; preds = %506
  %511 = load i8*, i8** %11, align 8, !dbg !3689
  %512 = load i64, i64* %21, align 8, !dbg !3689
  %513 = getelementptr inbounds i8, i8* %511, i64 %512, !dbg !3689
  store i8 39, i8* %513, align 1, !dbg !3689
  br label %514, !dbg !3689

514:                                              ; preds = %510, %506
  %515 = load i64, i64* %21, align 8, !dbg !3692
  %516 = add i64 %515, 1, !dbg !3692
  store i64 %516, i64* %21, align 8, !dbg !3692
  br label %517, !dbg !3692

517:                                              ; preds = %514
  br label %518, !dbg !3693

518:                                              ; preds = %517
  %519 = load i64, i64* %21, align 8, !dbg !3694
  %520 = load i64, i64* %12, align 8, !dbg !3694
  %521 = icmp ult i64 %519, %520, !dbg !3694
  br i1 %521, label %522, label %526, !dbg !3697

522:                                              ; preds = %518
  %523 = load i8*, i8** %11, align 8, !dbg !3694
  %524 = load i64, i64* %21, align 8, !dbg !3694
  %525 = getelementptr inbounds i8, i8* %523, i64 %524, !dbg !3694
  store i8 92, i8* %525, align 1, !dbg !3694
  br label %526, !dbg !3694

526:                                              ; preds = %522, %518
  %527 = load i64, i64* %21, align 8, !dbg !3697
  %528 = add i64 %527, 1, !dbg !3697
  store i64 %528, i64* %21, align 8, !dbg !3697
  br label %529, !dbg !3697

529:                                              ; preds = %526
  br label %530, !dbg !3698

530:                                              ; preds = %529
  %531 = load i64, i64* %21, align 8, !dbg !3699
  %532 = load i64, i64* %12, align 8, !dbg !3699
  %533 = icmp ult i64 %531, %532, !dbg !3699
  br i1 %533, label %534, label %538, !dbg !3702

534:                                              ; preds = %530
  %535 = load i8*, i8** %11, align 8, !dbg !3699
  %536 = load i64, i64* %21, align 8, !dbg !3699
  %537 = getelementptr inbounds i8, i8* %535, i64 %536, !dbg !3699
  store i8 39, i8* %537, align 1, !dbg !3699
  br label %538, !dbg !3699

538:                                              ; preds = %534, %530
  %539 = load i64, i64* %21, align 8, !dbg !3702
  %540 = add i64 %539, 1, !dbg !3702
  store i64 %540, i64* %21, align 8, !dbg !3702
  br label %541, !dbg !3702

541:                                              ; preds = %538
  store i8 0, i8* %28, align 1, !dbg !3703
  br label %542, !dbg !3704

542:                                              ; preds = %541, %490
  br label %857, !dbg !3705

543:                                              ; preds = %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197
  store i8 1, i8* %35, align 1, !dbg !3706
  br label %857, !dbg !3707

544:                                              ; preds = %197
  call void @llvm.dbg.declare(metadata i64* %36, metadata !3708, metadata !DIExpression()), !dbg !3710
  call void @llvm.dbg.declare(metadata i8* %37, metadata !3711, metadata !DIExpression()), !dbg !3712
  %545 = load i8, i8* %26, align 1, !dbg !3713
  %546 = trunc i8 %545 to i1, !dbg !3713
  br i1 %546, label %547, label %559, !dbg !3715

547:                                              ; preds = %544
  store i64 1, i64* %36, align 8, !dbg !3716
  %548 = call i16** @__ctype_b_loc() #16, !dbg !3718
  %549 = load i16*, i16** %548, align 8, !dbg !3718
  %550 = load i8, i8* %31, align 1, !dbg !3718
  %551 = zext i8 %550 to i32, !dbg !3718
  %552 = sext i32 %551 to i64, !dbg !3718
  %553 = getelementptr inbounds i16, i16* %549, i64 %552, !dbg !3718
  %554 = load i16, i16* %553, align 2, !dbg !3718
  %555 = zext i16 %554 to i32, !dbg !3718
  %556 = and i32 %555, 16384, !dbg !3718
  %557 = icmp ne i32 %556, 0, !dbg !3719
  %558 = zext i1 %557 to i8, !dbg !3720
  store i8 %558, i8* %37, align 1, !dbg !3720
  br label %656, !dbg !3721

559:                                              ; preds = %544
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t* %38, metadata !3722, metadata !DIExpression()), !dbg !3734
  %560 = bitcast %struct.__mbstate_t* %38 to i8*, !dbg !3735
  call void @llvm.memset.p0i8.i64(i8* align 4 %560, i8 0, i64 8, i1 false), !dbg !3735
  store i64 0, i64* %36, align 8, !dbg !3736
  store i8 1, i8* %37, align 1, !dbg !3737
  %561 = load i64, i64* %14, align 8, !dbg !3738
  %562 = icmp eq i64 %561, -1, !dbg !3740
  br i1 %562, label %563, label %566, !dbg !3741

563:                                              ; preds = %559
  %564 = load i8*, i8** %13, align 8, !dbg !3742
  %565 = call i64 @strlen(i8* %564) #14, !dbg !3743
  store i64 %565, i64* %14, align 8, !dbg !3744
  br label %566, !dbg !3745

566:                                              ; preds = %563, %559
  br label %567, !dbg !3746

567:                                              ; preds = %651, %566
  call void @llvm.dbg.declare(metadata i32* %39, metadata !3747, metadata !DIExpression()), !dbg !3749
  call void @llvm.dbg.declare(metadata i64* %40, metadata !3750, metadata !DIExpression()), !dbg !3751
  %568 = load i8*, i8** %13, align 8, !dbg !3752
  %569 = load i64, i64* %20, align 8, !dbg !3753
  %570 = load i64, i64* %36, align 8, !dbg !3754
  %571 = add i64 %569, %570, !dbg !3755
  %572 = getelementptr inbounds i8, i8* %568, i64 %571, !dbg !3752
  %573 = load i64, i64* %14, align 8, !dbg !3756
  %574 = load i64, i64* %20, align 8, !dbg !3757
  %575 = load i64, i64* %36, align 8, !dbg !3758
  %576 = add i64 %574, %575, !dbg !3759
  %577 = sub i64 %573, %576, !dbg !3760
  %578 = call i64 @rpl_mbrtowc(i32* %39, i8* %572, i64 %577, %struct.__mbstate_t* %38), !dbg !3761
  store i64 %578, i64* %40, align 8, !dbg !3751
  %579 = load i64, i64* %40, align 8, !dbg !3762
  %580 = icmp eq i64 %579, 0, !dbg !3764
  br i1 %580, label %581, label %582, !dbg !3765

581:                                              ; preds = %567
  br label %655, !dbg !3766

582:                                              ; preds = %567
  %583 = load i64, i64* %40, align 8, !dbg !3767
  %584 = icmp eq i64 %583, -1, !dbg !3769
  br i1 %584, label %585, label %586, !dbg !3770

585:                                              ; preds = %582
  store i8 0, i8* %37, align 1, !dbg !3771
  br label %655, !dbg !3773

586:                                              ; preds = %582
  %587 = load i64, i64* %40, align 8, !dbg !3774
  %588 = icmp eq i64 %587, -2, !dbg !3776
  br i1 %588, label %589, label %611, !dbg !3777

589:                                              ; preds = %586
  store i8 0, i8* %37, align 1, !dbg !3778
  br label %590, !dbg !3780

590:                                              ; preds = %607, %589
  %591 = load i64, i64* %20, align 8, !dbg !3781
  %592 = load i64, i64* %36, align 8, !dbg !3782
  %593 = add i64 %591, %592, !dbg !3783
  %594 = load i64, i64* %14, align 8, !dbg !3784
  %595 = icmp ult i64 %593, %594, !dbg !3785
  br i1 %595, label %596, label %605, !dbg !3786

596:                                              ; preds = %590
  %597 = load i8*, i8** %13, align 8, !dbg !3787
  %598 = load i64, i64* %20, align 8, !dbg !3788
  %599 = load i64, i64* %36, align 8, !dbg !3789
  %600 = add i64 %598, %599, !dbg !3790
  %601 = getelementptr inbounds i8, i8* %597, i64 %600, !dbg !3787
  %602 = load i8, i8* %601, align 1, !dbg !3787
  %603 = sext i8 %602 to i32, !dbg !3787
  %604 = icmp ne i32 %603, 0, !dbg !3786
  br label %605

605:                                              ; preds = %596, %590
  %606 = phi i1 [ false, %590 ], [ %604, %596 ], !dbg !3791
  br i1 %606, label %607, label %610, !dbg !3780

607:                                              ; preds = %605
  %608 = load i64, i64* %36, align 8, !dbg !3792
  %609 = add i64 %608, 1, !dbg !3792
  store i64 %609, i64* %36, align 8, !dbg !3792
  br label %590, !dbg !3780, !llvm.loop !3793

610:                                              ; preds = %605
  br label %655, !dbg !3794

611:                                              ; preds = %586
  %612 = load i8, i8* %27, align 1, !dbg !3795
  %613 = trunc i8 %612 to i1, !dbg !3795
  br i1 %613, label %614, label %639, !dbg !3798

614:                                              ; preds = %611
  %615 = load i32, i32* %15, align 4, !dbg !3799
  %616 = icmp eq i32 %615, 2, !dbg !3800
  br i1 %616, label %617, label %639, !dbg !3801

617:                                              ; preds = %614
  call void @llvm.dbg.declare(metadata i64* %41, metadata !3802, metadata !DIExpression()), !dbg !3804
  store i64 1, i64* %41, align 8, !dbg !3805
  br label %618, !dbg !3807

618:                                              ; preds = %635, %617
  %619 = load i64, i64* %41, align 8, !dbg !3808
  %620 = load i64, i64* %40, align 8, !dbg !3810
  %621 = icmp ult i64 %619, %620, !dbg !3811
  br i1 %621, label %622, label %638, !dbg !3812

622:                                              ; preds = %618
  %623 = load i8*, i8** %13, align 8, !dbg !3813
  %624 = load i64, i64* %20, align 8, !dbg !3814
  %625 = load i64, i64* %36, align 8, !dbg !3815
  %626 = add i64 %624, %625, !dbg !3816
  %627 = load i64, i64* %41, align 8, !dbg !3817
  %628 = add i64 %626, %627, !dbg !3818
  %629 = getelementptr inbounds i8, i8* %623, i64 %628, !dbg !3813
  %630 = load i8, i8* %629, align 1, !dbg !3813
  %631 = sext i8 %630 to i32, !dbg !3813
  switch i32 %631, label %633 [
    i32 91, label %632
    i32 92, label %632
    i32 94, label %632
    i32 96, label %632
    i32 124, label %632
  ], !dbg !3819

632:                                              ; preds = %622, %622, %622, %622, %622
  br label %1086, !dbg !3820

633:                                              ; preds = %622
  br label %634, !dbg !3822

634:                                              ; preds = %633
  br label %635, !dbg !3823

635:                                              ; preds = %634
  %636 = load i64, i64* %41, align 8, !dbg !3824
  %637 = add i64 %636, 1, !dbg !3824
  store i64 %637, i64* %41, align 8, !dbg !3824
  br label %618, !dbg !3825, !llvm.loop !3826

638:                                              ; preds = %618
  br label %639, !dbg !3828

639:                                              ; preds = %638, %614, %611
  %640 = load i32, i32* %39, align 4, !dbg !3829
  %641 = call i32 @iswprint(i32 %640) #15, !dbg !3831
  %642 = icmp ne i32 %641, 0, !dbg !3831
  br i1 %642, label %644, label %643, !dbg !3832

643:                                              ; preds = %639
  store i8 0, i8* %37, align 1, !dbg !3833
  br label %644, !dbg !3834

644:                                              ; preds = %643, %639
  %645 = load i64, i64* %40, align 8, !dbg !3835
  %646 = load i64, i64* %36, align 8, !dbg !3836
  %647 = add i64 %646, %645, !dbg !3836
  store i64 %647, i64* %36, align 8, !dbg !3836
  br label %648

648:                                              ; preds = %644
  br label %649

649:                                              ; preds = %648
  br label %650

650:                                              ; preds = %649
  br label %651, !dbg !3837

651:                                              ; preds = %650
  %652 = call i32 @mbsinit(%struct.__mbstate_t* %38) #14, !dbg !3838
  %653 = icmp ne i32 %652, 0, !dbg !3839
  %654 = xor i1 %653, true, !dbg !3839
  br i1 %654, label %567, label %655, !dbg !3837, !llvm.loop !3840

655:                                              ; preds = %651, %610, %585, %581
  br label %656

656:                                              ; preds = %655, %547
  %657 = load i8, i8* %37, align 1, !dbg !3842
  %658 = trunc i8 %657 to i1, !dbg !3842
  %659 = zext i1 %658 to i8, !dbg !3843
  store i8 %659, i8* %35, align 1, !dbg !3843
  %660 = load i64, i64* %36, align 8, !dbg !3844
  %661 = icmp ult i64 1, %660, !dbg !3846
  br i1 %661, label %668, label %662, !dbg !3847

662:                                              ; preds = %656
  %663 = load i8, i8* %25, align 1, !dbg !3848
  %664 = trunc i8 %663 to i1, !dbg !3848
  br i1 %664, label %665, label %856, !dbg !3849

665:                                              ; preds = %662
  %666 = load i8, i8* %37, align 1, !dbg !3850
  %667 = trunc i8 %666 to i1, !dbg !3850
  br i1 %667, label %856, label %668, !dbg !3851

668:                                              ; preds = %665, %656
  call void @llvm.dbg.declare(metadata i64* %42, metadata !3852, metadata !DIExpression()), !dbg !3854
  %669 = load i64, i64* %20, align 8, !dbg !3855
  %670 = load i64, i64* %36, align 8, !dbg !3856
  %671 = add i64 %669, %670, !dbg !3857
  store i64 %671, i64* %42, align 8, !dbg !3854
  br label %672, !dbg !3858

672:                                              ; preds = %849, %668
  %673 = load i8, i8* %25, align 1, !dbg !3859
  %674 = trunc i8 %673 to i1, !dbg !3859
  br i1 %674, label %675, label %780, !dbg !3864

675:                                              ; preds = %672
  %676 = load i8, i8* %37, align 1, !dbg !3865
  %677 = trunc i8 %676 to i1, !dbg !3865
  br i1 %677, label %780, label %678, !dbg !3866

678:                                              ; preds = %675
  br label %679, !dbg !3867

679:                                              ; preds = %678
  %680 = load i8, i8* %27, align 1, !dbg !3869
  %681 = trunc i8 %680 to i1, !dbg !3869
  br i1 %681, label %682, label %683, !dbg !3872

682:                                              ; preds = %679
  br label %1086, !dbg !3869

683:                                              ; preds = %679
  store i8 1, i8* %34, align 1, !dbg !3872
  %684 = load i32, i32* %15, align 4, !dbg !3873
  %685 = icmp eq i32 %684, 2, !dbg !3873
  br i1 %685, label %686, label %726, !dbg !3873

686:                                              ; preds = %683
  %687 = load i8, i8* %28, align 1, !dbg !3873
  %688 = trunc i8 %687 to i1, !dbg !3873
  br i1 %688, label %726, label %689, !dbg !3872

689:                                              ; preds = %686
  br label %690, !dbg !3875

690:                                              ; preds = %689
  %691 = load i64, i64* %21, align 8, !dbg !3877
  %692 = load i64, i64* %12, align 8, !dbg !3877
  %693 = icmp ult i64 %691, %692, !dbg !3877
  br i1 %693, label %694, label %698, !dbg !3880

694:                                              ; preds = %690
  %695 = load i8*, i8** %11, align 8, !dbg !3877
  %696 = load i64, i64* %21, align 8, !dbg !3877
  %697 = getelementptr inbounds i8, i8* %695, i64 %696, !dbg !3877
  store i8 39, i8* %697, align 1, !dbg !3877
  br label %698, !dbg !3877

698:                                              ; preds = %694, %690
  %699 = load i64, i64* %21, align 8, !dbg !3880
  %700 = add i64 %699, 1, !dbg !3880
  store i64 %700, i64* %21, align 8, !dbg !3880
  br label %701, !dbg !3880

701:                                              ; preds = %698
  br label %702, !dbg !3875

702:                                              ; preds = %701
  %703 = load i64, i64* %21, align 8, !dbg !3881
  %704 = load i64, i64* %12, align 8, !dbg !3881
  %705 = icmp ult i64 %703, %704, !dbg !3881
  br i1 %705, label %706, label %710, !dbg !3884

706:                                              ; preds = %702
  %707 = load i8*, i8** %11, align 8, !dbg !3881
  %708 = load i64, i64* %21, align 8, !dbg !3881
  %709 = getelementptr inbounds i8, i8* %707, i64 %708, !dbg !3881
  store i8 36, i8* %709, align 1, !dbg !3881
  br label %710, !dbg !3881

710:                                              ; preds = %706, %702
  %711 = load i64, i64* %21, align 8, !dbg !3884
  %712 = add i64 %711, 1, !dbg !3884
  store i64 %712, i64* %21, align 8, !dbg !3884
  br label %713, !dbg !3884

713:                                              ; preds = %710
  br label %714, !dbg !3875

714:                                              ; preds = %713
  %715 = load i64, i64* %21, align 8, !dbg !3885
  %716 = load i64, i64* %12, align 8, !dbg !3885
  %717 = icmp ult i64 %715, %716, !dbg !3885
  br i1 %717, label %718, label %722, !dbg !3888

718:                                              ; preds = %714
  %719 = load i8*, i8** %11, align 8, !dbg !3885
  %720 = load i64, i64* %21, align 8, !dbg !3885
  %721 = getelementptr inbounds i8, i8* %719, i64 %720, !dbg !3885
  store i8 39, i8* %721, align 1, !dbg !3885
  br label %722, !dbg !3885

722:                                              ; preds = %718, %714
  %723 = load i64, i64* %21, align 8, !dbg !3888
  %724 = add i64 %723, 1, !dbg !3888
  store i64 %724, i64* %21, align 8, !dbg !3888
  br label %725, !dbg !3888

725:                                              ; preds = %722
  store i8 1, i8* %28, align 1, !dbg !3875
  br label %726, !dbg !3875

726:                                              ; preds = %725, %686, %683
  br label %727, !dbg !3872

727:                                              ; preds = %726
  %728 = load i64, i64* %21, align 8, !dbg !3889
  %729 = load i64, i64* %12, align 8, !dbg !3889
  %730 = icmp ult i64 %728, %729, !dbg !3889
  br i1 %730, label %731, label %735, !dbg !3892

731:                                              ; preds = %727
  %732 = load i8*, i8** %11, align 8, !dbg !3889
  %733 = load i64, i64* %21, align 8, !dbg !3889
  %734 = getelementptr inbounds i8, i8* %732, i64 %733, !dbg !3889
  store i8 92, i8* %734, align 1, !dbg !3889
  br label %735, !dbg !3889

735:                                              ; preds = %731, %727
  %736 = load i64, i64* %21, align 8, !dbg !3892
  %737 = add i64 %736, 1, !dbg !3892
  store i64 %737, i64* %21, align 8, !dbg !3892
  br label %738, !dbg !3892

738:                                              ; preds = %735
  br label %739, !dbg !3872

739:                                              ; preds = %738
  br label %740, !dbg !3893

740:                                              ; preds = %739
  %741 = load i64, i64* %21, align 8, !dbg !3894
  %742 = load i64, i64* %12, align 8, !dbg !3894
  %743 = icmp ult i64 %741, %742, !dbg !3894
  br i1 %743, label %744, label %753, !dbg !3897

744:                                              ; preds = %740
  %745 = load i8, i8* %31, align 1, !dbg !3894
  %746 = zext i8 %745 to i32, !dbg !3894
  %747 = ashr i32 %746, 6, !dbg !3894
  %748 = add nsw i32 48, %747, !dbg !3894
  %749 = trunc i32 %748 to i8, !dbg !3894
  %750 = load i8*, i8** %11, align 8, !dbg !3894
  %751 = load i64, i64* %21, align 8, !dbg !3894
  %752 = getelementptr inbounds i8, i8* %750, i64 %751, !dbg !3894
  store i8 %749, i8* %752, align 1, !dbg !3894
  br label %753, !dbg !3894

753:                                              ; preds = %744, %740
  %754 = load i64, i64* %21, align 8, !dbg !3897
  %755 = add i64 %754, 1, !dbg !3897
  store i64 %755, i64* %21, align 8, !dbg !3897
  br label %756, !dbg !3897

756:                                              ; preds = %753
  br label %757, !dbg !3898

757:                                              ; preds = %756
  %758 = load i64, i64* %21, align 8, !dbg !3899
  %759 = load i64, i64* %12, align 8, !dbg !3899
  %760 = icmp ult i64 %758, %759, !dbg !3899
  br i1 %760, label %761, label %771, !dbg !3902

761:                                              ; preds = %757
  %762 = load i8, i8* %31, align 1, !dbg !3899
  %763 = zext i8 %762 to i32, !dbg !3899
  %764 = ashr i32 %763, 3, !dbg !3899
  %765 = and i32 %764, 7, !dbg !3899
  %766 = add nsw i32 48, %765, !dbg !3899
  %767 = trunc i32 %766 to i8, !dbg !3899
  %768 = load i8*, i8** %11, align 8, !dbg !3899
  %769 = load i64, i64* %21, align 8, !dbg !3899
  %770 = getelementptr inbounds i8, i8* %768, i64 %769, !dbg !3899
  store i8 %767, i8* %770, align 1, !dbg !3899
  br label %771, !dbg !3899

771:                                              ; preds = %761, %757
  %772 = load i64, i64* %21, align 8, !dbg !3902
  %773 = add i64 %772, 1, !dbg !3902
  store i64 %773, i64* %21, align 8, !dbg !3902
  br label %774, !dbg !3902

774:                                              ; preds = %771
  %775 = load i8, i8* %31, align 1, !dbg !3903
  %776 = zext i8 %775 to i32, !dbg !3903
  %777 = and i32 %776, 7, !dbg !3904
  %778 = add nsw i32 48, %777, !dbg !3905
  %779 = trunc i32 %778 to i8, !dbg !3906
  store i8 %779, i8* %31, align 1, !dbg !3907
  br label %797, !dbg !3908

780:                                              ; preds = %675, %672
  %781 = load i8, i8* %33, align 1, !dbg !3909
  %782 = trunc i8 %781 to i1, !dbg !3909
  br i1 %782, label %783, label %796, !dbg !3911

783:                                              ; preds = %780
  br label %784, !dbg !3912

784:                                              ; preds = %783
  %785 = load i64, i64* %21, align 8, !dbg !3914
  %786 = load i64, i64* %12, align 8, !dbg !3914
  %787 = icmp ult i64 %785, %786, !dbg !3914
  br i1 %787, label %788, label %792, !dbg !3917

788:                                              ; preds = %784
  %789 = load i8*, i8** %11, align 8, !dbg !3914
  %790 = load i64, i64* %21, align 8, !dbg !3914
  %791 = getelementptr inbounds i8, i8* %789, i64 %790, !dbg !3914
  store i8 92, i8* %791, align 1, !dbg !3914
  br label %792, !dbg !3914

792:                                              ; preds = %788, %784
  %793 = load i64, i64* %21, align 8, !dbg !3917
  %794 = add i64 %793, 1, !dbg !3917
  store i64 %794, i64* %21, align 8, !dbg !3917
  br label %795, !dbg !3917

795:                                              ; preds = %792
  store i8 0, i8* %33, align 1, !dbg !3918
  br label %796, !dbg !3919

796:                                              ; preds = %795, %780
  br label %797

797:                                              ; preds = %796, %774
  %798 = load i64, i64* %42, align 8, !dbg !3920
  %799 = load i64, i64* %20, align 8, !dbg !3922
  %800 = add i64 %799, 1, !dbg !3923
  %801 = icmp ule i64 %798, %800, !dbg !3924
  br i1 %801, label %802, label %803, !dbg !3925

802:                                              ; preds = %797
  br label %855, !dbg !3926

803:                                              ; preds = %797
  br label %804, !dbg !3927

804:                                              ; preds = %803
  %805 = load i8, i8* %28, align 1, !dbg !3928
  %806 = trunc i8 %805 to i1, !dbg !3928
  br i1 %806, label %807, label %835, !dbg !3928

807:                                              ; preds = %804
  %808 = load i8, i8* %34, align 1, !dbg !3928
  %809 = trunc i8 %808 to i1, !dbg !3928
  br i1 %809, label %835, label %810, !dbg !3931

810:                                              ; preds = %807
  br label %811, !dbg !3932

811:                                              ; preds = %810
  %812 = load i64, i64* %21, align 8, !dbg !3934
  %813 = load i64, i64* %12, align 8, !dbg !3934
  %814 = icmp ult i64 %812, %813, !dbg !3934
  br i1 %814, label %815, label %819, !dbg !3937

815:                                              ; preds = %811
  %816 = load i8*, i8** %11, align 8, !dbg !3934
  %817 = load i64, i64* %21, align 8, !dbg !3934
  %818 = getelementptr inbounds i8, i8* %816, i64 %817, !dbg !3934
  store i8 39, i8* %818, align 1, !dbg !3934
  br label %819, !dbg !3934

819:                                              ; preds = %815, %811
  %820 = load i64, i64* %21, align 8, !dbg !3937
  %821 = add i64 %820, 1, !dbg !3937
  store i64 %821, i64* %21, align 8, !dbg !3937
  br label %822, !dbg !3937

822:                                              ; preds = %819
  br label %823, !dbg !3932

823:                                              ; preds = %822
  %824 = load i64, i64* %21, align 8, !dbg !3938
  %825 = load i64, i64* %12, align 8, !dbg !3938
  %826 = icmp ult i64 %824, %825, !dbg !3938
  br i1 %826, label %827, label %831, !dbg !3941

827:                                              ; preds = %823
  %828 = load i8*, i8** %11, align 8, !dbg !3938
  %829 = load i64, i64* %21, align 8, !dbg !3938
  %830 = getelementptr inbounds i8, i8* %828, i64 %829, !dbg !3938
  store i8 39, i8* %830, align 1, !dbg !3938
  br label %831, !dbg !3938

831:                                              ; preds = %827, %823
  %832 = load i64, i64* %21, align 8, !dbg !3941
  %833 = add i64 %832, 1, !dbg !3941
  store i64 %833, i64* %21, align 8, !dbg !3941
  br label %834, !dbg !3941

834:                                              ; preds = %831
  store i8 0, i8* %28, align 1, !dbg !3932
  br label %835, !dbg !3932

835:                                              ; preds = %834, %807, %804
  br label %836, !dbg !3931

836:                                              ; preds = %835
  br label %837, !dbg !3942

837:                                              ; preds = %836
  %838 = load i64, i64* %21, align 8, !dbg !3943
  %839 = load i64, i64* %12, align 8, !dbg !3943
  %840 = icmp ult i64 %838, %839, !dbg !3943
  br i1 %840, label %841, label %846, !dbg !3946

841:                                              ; preds = %837
  %842 = load i8, i8* %31, align 1, !dbg !3943
  %843 = load i8*, i8** %11, align 8, !dbg !3943
  %844 = load i64, i64* %21, align 8, !dbg !3943
  %845 = getelementptr inbounds i8, i8* %843, i64 %844, !dbg !3943
  store i8 %842, i8* %845, align 1, !dbg !3943
  br label %846, !dbg !3943

846:                                              ; preds = %841, %837
  %847 = load i64, i64* %21, align 8, !dbg !3946
  %848 = add i64 %847, 1, !dbg !3946
  store i64 %848, i64* %21, align 8, !dbg !3946
  br label %849, !dbg !3946

849:                                              ; preds = %846
  %850 = load i8*, i8** %13, align 8, !dbg !3947
  %851 = load i64, i64* %20, align 8, !dbg !3948
  %852 = add i64 %851, 1, !dbg !3948
  store i64 %852, i64* %20, align 8, !dbg !3948
  %853 = getelementptr inbounds i8, i8* %850, i64 %852, !dbg !3947
  %854 = load i8, i8* %853, align 1, !dbg !3947
  store i8 %854, i8* %31, align 1, !dbg !3949
  br label %672, !dbg !3950, !llvm.loop !3951

855:                                              ; preds = %802
  br label %950, !dbg !3954

856:                                              ; preds = %665, %662
  br label %857, !dbg !3955

857:                                              ; preds = %856, %543, %542, %489, %479, %474, %461, %420, %324
  %858 = load i8, i8* %25, align 1, !dbg !3956
  %859 = trunc i8 %858 to i1, !dbg !3956
  br i1 %859, label %860, label %863, !dbg !3958

860:                                              ; preds = %857
  %861 = load i32, i32* %15, align 4, !dbg !3959
  %862 = icmp ne i32 %861, 2, !dbg !3960
  br i1 %862, label %866, label %863, !dbg !3961

863:                                              ; preds = %860, %857
  %864 = load i8, i8* %27, align 1, !dbg !3962
  %865 = trunc i8 %864 to i1, !dbg !3962
  br i1 %865, label %866, label %883, !dbg !3963

866:                                              ; preds = %863, %860
  %867 = load i32*, i32** %17, align 8, !dbg !3964
  %868 = icmp ne i32* %867, null, !dbg !3964
  br i1 %868, label %869, label %883, !dbg !3965

869:                                              ; preds = %866
  %870 = load i32*, i32** %17, align 8, !dbg !3966
  %871 = load i8, i8* %31, align 1, !dbg !3967
  %872 = zext i8 %871 to i64, !dbg !3967
  %873 = udiv i64 %872, 32, !dbg !3968
  %874 = getelementptr inbounds i32, i32* %870, i64 %873, !dbg !3966
  %875 = load i32, i32* %874, align 4, !dbg !3966
  %876 = load i8, i8* %31, align 1, !dbg !3969
  %877 = zext i8 %876 to i64, !dbg !3969
  %878 = urem i64 %877, 32, !dbg !3970
  %879 = trunc i64 %878 to i32, !dbg !3971
  %880 = lshr i32 %875, %879, !dbg !3971
  %881 = and i32 %880, 1, !dbg !3972
  %882 = icmp ne i32 %881, 0, !dbg !3972
  br i1 %882, label %887, label %883, !dbg !3973

883:                                              ; preds = %869, %866, %863
  %884 = load i8, i8* %33, align 1, !dbg !3974
  %885 = trunc i8 %884 to i1, !dbg !3974
  br i1 %885, label %887, label %886, !dbg !3975

886:                                              ; preds = %883
  br label %950, !dbg !3976

887:                                              ; preds = %883, %869
  br label %888, !dbg !3974

888:                                              ; preds = %887, %459
  call void @llvm.dbg.label(metadata !3977), !dbg !3978
  br label %889, !dbg !3979

889:                                              ; preds = %888
  %890 = load i8, i8* %27, align 1, !dbg !3980
  %891 = trunc i8 %890 to i1, !dbg !3980
  br i1 %891, label %892, label %893, !dbg !3983

892:                                              ; preds = %889
  br label %1086, !dbg !3980

893:                                              ; preds = %889
  store i8 1, i8* %34, align 1, !dbg !3983
  %894 = load i32, i32* %15, align 4, !dbg !3984
  %895 = icmp eq i32 %894, 2, !dbg !3984
  br i1 %895, label %896, label %936, !dbg !3984

896:                                              ; preds = %893
  %897 = load i8, i8* %28, align 1, !dbg !3984
  %898 = trunc i8 %897 to i1, !dbg !3984
  br i1 %898, label %936, label %899, !dbg !3983

899:                                              ; preds = %896
  br label %900, !dbg !3986

900:                                              ; preds = %899
  %901 = load i64, i64* %21, align 8, !dbg !3988
  %902 = load i64, i64* %12, align 8, !dbg !3988
  %903 = icmp ult i64 %901, %902, !dbg !3988
  br i1 %903, label %904, label %908, !dbg !3991

904:                                              ; preds = %900
  %905 = load i8*, i8** %11, align 8, !dbg !3988
  %906 = load i64, i64* %21, align 8, !dbg !3988
  %907 = getelementptr inbounds i8, i8* %905, i64 %906, !dbg !3988
  store i8 39, i8* %907, align 1, !dbg !3988
  br label %908, !dbg !3988

908:                                              ; preds = %904, %900
  %909 = load i64, i64* %21, align 8, !dbg !3991
  %910 = add i64 %909, 1, !dbg !3991
  store i64 %910, i64* %21, align 8, !dbg !3991
  br label %911, !dbg !3991

911:                                              ; preds = %908
  br label %912, !dbg !3986

912:                                              ; preds = %911
  %913 = load i64, i64* %21, align 8, !dbg !3992
  %914 = load i64, i64* %12, align 8, !dbg !3992
  %915 = icmp ult i64 %913, %914, !dbg !3992
  br i1 %915, label %916, label %920, !dbg !3995

916:                                              ; preds = %912
  %917 = load i8*, i8** %11, align 8, !dbg !3992
  %918 = load i64, i64* %21, align 8, !dbg !3992
  %919 = getelementptr inbounds i8, i8* %917, i64 %918, !dbg !3992
  store i8 36, i8* %919, align 1, !dbg !3992
  br label %920, !dbg !3992

920:                                              ; preds = %916, %912
  %921 = load i64, i64* %21, align 8, !dbg !3995
  %922 = add i64 %921, 1, !dbg !3995
  store i64 %922, i64* %21, align 8, !dbg !3995
  br label %923, !dbg !3995

923:                                              ; preds = %920
  br label %924, !dbg !3986

924:                                              ; preds = %923
  %925 = load i64, i64* %21, align 8, !dbg !3996
  %926 = load i64, i64* %12, align 8, !dbg !3996
  %927 = icmp ult i64 %925, %926, !dbg !3996
  br i1 %927, label %928, label %932, !dbg !3999

928:                                              ; preds = %924
  %929 = load i8*, i8** %11, align 8, !dbg !3996
  %930 = load i64, i64* %21, align 8, !dbg !3996
  %931 = getelementptr inbounds i8, i8* %929, i64 %930, !dbg !3996
  store i8 39, i8* %931, align 1, !dbg !3996
  br label %932, !dbg !3996

932:                                              ; preds = %928, %924
  %933 = load i64, i64* %21, align 8, !dbg !3999
  %934 = add i64 %933, 1, !dbg !3999
  store i64 %934, i64* %21, align 8, !dbg !3999
  br label %935, !dbg !3999

935:                                              ; preds = %932
  store i8 1, i8* %28, align 1, !dbg !3986
  br label %936, !dbg !3986

936:                                              ; preds = %935, %896, %893
  br label %937, !dbg !3983

937:                                              ; preds = %936
  %938 = load i64, i64* %21, align 8, !dbg !4000
  %939 = load i64, i64* %12, align 8, !dbg !4000
  %940 = icmp ult i64 %938, %939, !dbg !4000
  br i1 %940, label %941, label %945, !dbg !4003

941:                                              ; preds = %937
  %942 = load i8*, i8** %11, align 8, !dbg !4000
  %943 = load i64, i64* %21, align 8, !dbg !4000
  %944 = getelementptr inbounds i8, i8* %942, i64 %943, !dbg !4000
  store i8 92, i8* %944, align 1, !dbg !4000
  br label %945, !dbg !4000

945:                                              ; preds = %941, %937
  %946 = load i64, i64* %21, align 8, !dbg !4003
  %947 = add i64 %946, 1, !dbg !4003
  store i64 %947, i64* %21, align 8, !dbg !4003
  br label %948, !dbg !4003

948:                                              ; preds = %945
  br label %949, !dbg !3983

949:                                              ; preds = %948
  br label %950, !dbg !3983

950:                                              ; preds = %949, %886, %855, %446, %436
  call void @llvm.dbg.label(metadata !4004), !dbg !4005
  br label %951, !dbg !4006

951:                                              ; preds = %950
  %952 = load i8, i8* %28, align 1, !dbg !4007
  %953 = trunc i8 %952 to i1, !dbg !4007
  br i1 %953, label %954, label %982, !dbg !4007

954:                                              ; preds = %951
  %955 = load i8, i8* %34, align 1, !dbg !4007
  %956 = trunc i8 %955 to i1, !dbg !4007
  br i1 %956, label %982, label %957, !dbg !4010

957:                                              ; preds = %954
  br label %958, !dbg !4011

958:                                              ; preds = %957
  %959 = load i64, i64* %21, align 8, !dbg !4013
  %960 = load i64, i64* %12, align 8, !dbg !4013
  %961 = icmp ult i64 %959, %960, !dbg !4013
  br i1 %961, label %962, label %966, !dbg !4016

962:                                              ; preds = %958
  %963 = load i8*, i8** %11, align 8, !dbg !4013
  %964 = load i64, i64* %21, align 8, !dbg !4013
  %965 = getelementptr inbounds i8, i8* %963, i64 %964, !dbg !4013
  store i8 39, i8* %965, align 1, !dbg !4013
  br label %966, !dbg !4013

966:                                              ; preds = %962, %958
  %967 = load i64, i64* %21, align 8, !dbg !4016
  %968 = add i64 %967, 1, !dbg !4016
  store i64 %968, i64* %21, align 8, !dbg !4016
  br label %969, !dbg !4016

969:                                              ; preds = %966
  br label %970, !dbg !4011

970:                                              ; preds = %969
  %971 = load i64, i64* %21, align 8, !dbg !4017
  %972 = load i64, i64* %12, align 8, !dbg !4017
  %973 = icmp ult i64 %971, %972, !dbg !4017
  br i1 %973, label %974, label %978, !dbg !4020

974:                                              ; preds = %970
  %975 = load i8*, i8** %11, align 8, !dbg !4017
  %976 = load i64, i64* %21, align 8, !dbg !4017
  %977 = getelementptr inbounds i8, i8* %975, i64 %976, !dbg !4017
  store i8 39, i8* %977, align 1, !dbg !4017
  br label %978, !dbg !4017

978:                                              ; preds = %974, %970
  %979 = load i64, i64* %21, align 8, !dbg !4020
  %980 = add i64 %979, 1, !dbg !4020
  store i64 %980, i64* %21, align 8, !dbg !4020
  br label %981, !dbg !4020

981:                                              ; preds = %978
  store i8 0, i8* %28, align 1, !dbg !4011
  br label %982, !dbg !4011

982:                                              ; preds = %981, %954, %951
  br label %983, !dbg !4010

983:                                              ; preds = %982
  br label %984, !dbg !4021

984:                                              ; preds = %983
  %985 = load i64, i64* %21, align 8, !dbg !4022
  %986 = load i64, i64* %12, align 8, !dbg !4022
  %987 = icmp ult i64 %985, %986, !dbg !4022
  br i1 %987, label %988, label %993, !dbg !4025

988:                                              ; preds = %984
  %989 = load i8, i8* %31, align 1, !dbg !4022
  %990 = load i8*, i8** %11, align 8, !dbg !4022
  %991 = load i64, i64* %21, align 8, !dbg !4022
  %992 = getelementptr inbounds i8, i8* %990, i64 %991, !dbg !4022
  store i8 %989, i8* %992, align 1, !dbg !4022
  br label %993, !dbg !4022

993:                                              ; preds = %988, %984
  %994 = load i64, i64* %21, align 8, !dbg !4025
  %995 = add i64 %994, 1, !dbg !4025
  store i64 %995, i64* %21, align 8, !dbg !4025
  br label %996, !dbg !4025

996:                                              ; preds = %993
  %997 = load i8, i8* %35, align 1, !dbg !4026
  %998 = trunc i8 %997 to i1, !dbg !4026
  br i1 %998, label %1000, label %999, !dbg !4028

999:                                              ; preds = %996
  store i8 0, i8* %30, align 1, !dbg !4029
  br label %1000, !dbg !4030

1000:                                             ; preds = %999, %996
  br label %1001, !dbg !4031

1001:                                             ; preds = %1000, %322
  %1002 = load i64, i64* %20, align 8, !dbg !4032
  %1003 = add i64 %1002, 1, !dbg !4032
  store i64 %1003, i64* %20, align 8, !dbg !4032
  br label %138, !dbg !4033, !llvm.loop !4034

1004:                                             ; preds = %154
  %1005 = load i64, i64* %21, align 8, !dbg !4036
  %1006 = icmp eq i64 %1005, 0, !dbg !4038
  br i1 %1006, label %1007, label %1014, !dbg !4039

1007:                                             ; preds = %1004
  %1008 = load i32, i32* %15, align 4, !dbg !4040
  %1009 = icmp eq i32 %1008, 2, !dbg !4041
  br i1 %1009, label %1010, label %1014, !dbg !4042

1010:                                             ; preds = %1007
  %1011 = load i8, i8* %27, align 1, !dbg !4043
  %1012 = trunc i8 %1011 to i1, !dbg !4043
  br i1 %1012, label %1013, label %1014, !dbg !4044

1013:                                             ; preds = %1010
  br label %1086, !dbg !4045

1014:                                             ; preds = %1010, %1007, %1004
  %1015 = load i32, i32* %15, align 4, !dbg !4046
  %1016 = icmp eq i32 %1015, 2, !dbg !4048
  br i1 %1016, label %1017, label %1046, !dbg !4049

1017:                                             ; preds = %1014
  %1018 = load i8, i8* %27, align 1, !dbg !4050
  %1019 = trunc i8 %1018 to i1, !dbg !4050
  br i1 %1019, label %1046, label %1020, !dbg !4051

1020:                                             ; preds = %1017
  %1021 = load i8, i8* %29, align 1, !dbg !4052
  %1022 = trunc i8 %1021 to i1, !dbg !4052
  br i1 %1022, label %1023, label %1046, !dbg !4053

1023:                                             ; preds = %1020
  %1024 = load i8, i8* %30, align 1, !dbg !4054
  %1025 = trunc i8 %1024 to i1, !dbg !4054
  br i1 %1025, label %1026, label %1036, !dbg !4057

1026:                                             ; preds = %1023
  %1027 = load i8*, i8** %11, align 8, !dbg !4058
  %1028 = load i64, i64* %22, align 8, !dbg !4059
  %1029 = load i8*, i8** %13, align 8, !dbg !4060
  %1030 = load i64, i64* %14, align 8, !dbg !4061
  %1031 = load i32, i32* %16, align 4, !dbg !4062
  %1032 = load i32*, i32** %17, align 8, !dbg !4063
  %1033 = load i8*, i8** %18, align 8, !dbg !4064
  %1034 = load i8*, i8** %19, align 8, !dbg !4065
  %1035 = call i64 @quotearg_buffer_restyled(i8* %1027, i64 %1028, i8* %1029, i64 %1030, i32 5, i32 %1031, i32* %1032, i8* %1033, i8* %1034), !dbg !4066
  store i64 %1035, i64* %10, align 8, !dbg !4067
  br label %1104, !dbg !4067

1036:                                             ; preds = %1023
  %1037 = load i64, i64* %12, align 8, !dbg !4068
  %1038 = icmp ne i64 %1037, 0, !dbg !4068
  br i1 %1038, label %1044, label %1039, !dbg !4070

1039:                                             ; preds = %1036
  %1040 = load i64, i64* %22, align 8, !dbg !4071
  %1041 = icmp ne i64 %1040, 0, !dbg !4071
  br i1 %1041, label %1042, label %1044, !dbg !4072

1042:                                             ; preds = %1039
  %1043 = load i64, i64* %22, align 8, !dbg !4073
  store i64 %1043, i64* %12, align 8, !dbg !4075
  store i64 0, i64* %21, align 8, !dbg !4076
  br label %50, !dbg !4077

1044:                                             ; preds = %1039, %1036
  br label %1045

1045:                                             ; preds = %1044
  br label %1046, !dbg !4078

1046:                                             ; preds = %1045, %1020, %1017, %1014
  %1047 = load i8*, i8** %23, align 8, !dbg !4079
  %1048 = icmp ne i8* %1047, null, !dbg !4079
  br i1 %1048, label %1049, label %1076, !dbg !4081

1049:                                             ; preds = %1046
  %1050 = load i8, i8* %27, align 1, !dbg !4082
  %1051 = trunc i8 %1050 to i1, !dbg !4082
  br i1 %1051, label %1076, label %1052, !dbg !4083

1052:                                             ; preds = %1049
  br label %1053, !dbg !4084

1053:                                             ; preds = %1072, %1052
  %1054 = load i8*, i8** %23, align 8, !dbg !4085
  %1055 = load i8, i8* %1054, align 1, !dbg !4088
  %1056 = icmp ne i8 %1055, 0, !dbg !4089
  br i1 %1056, label %1057, label %1075, !dbg !4089

1057:                                             ; preds = %1053
  br label %1058, !dbg !4090

1058:                                             ; preds = %1057
  %1059 = load i64, i64* %21, align 8, !dbg !4091
  %1060 = load i64, i64* %12, align 8, !dbg !4091
  %1061 = icmp ult i64 %1059, %1060, !dbg !4091
  br i1 %1061, label %1062, label %1068, !dbg !4094

1062:                                             ; preds = %1058
  %1063 = load i8*, i8** %23, align 8, !dbg !4091
  %1064 = load i8, i8* %1063, align 1, !dbg !4091
  %1065 = load i8*, i8** %11, align 8, !dbg !4091
  %1066 = load i64, i64* %21, align 8, !dbg !4091
  %1067 = getelementptr inbounds i8, i8* %1065, i64 %1066, !dbg !4091
  store i8 %1064, i8* %1067, align 1, !dbg !4091
  br label %1068, !dbg !4091

1068:                                             ; preds = %1062, %1058
  %1069 = load i64, i64* %21, align 8, !dbg !4094
  %1070 = add i64 %1069, 1, !dbg !4094
  store i64 %1070, i64* %21, align 8, !dbg !4094
  br label %1071, !dbg !4094

1071:                                             ; preds = %1068
  br label %1072, !dbg !4094

1072:                                             ; preds = %1071
  %1073 = load i8*, i8** %23, align 8, !dbg !4095
  %1074 = getelementptr inbounds i8, i8* %1073, i32 1, !dbg !4095
  store i8* %1074, i8** %23, align 8, !dbg !4095
  br label %1053, !dbg !4096, !llvm.loop !4097

1075:                                             ; preds = %1053
  br label %1076, !dbg !4098

1076:                                             ; preds = %1075, %1049, %1046
  %1077 = load i64, i64* %21, align 8, !dbg !4099
  %1078 = load i64, i64* %12, align 8, !dbg !4101
  %1079 = icmp ult i64 %1077, %1078, !dbg !4102
  br i1 %1079, label %1080, label %1084, !dbg !4103

1080:                                             ; preds = %1076
  %1081 = load i8*, i8** %11, align 8, !dbg !4104
  %1082 = load i64, i64* %21, align 8, !dbg !4105
  %1083 = getelementptr inbounds i8, i8* %1081, i64 %1082, !dbg !4104
  store i8 0, i8* %1083, align 1, !dbg !4106
  br label %1084, !dbg !4104

1084:                                             ; preds = %1080, %1076
  %1085 = load i64, i64* %21, align 8, !dbg !4107
  store i64 %1085, i64* %10, align 8, !dbg !4108
  br label %1104, !dbg !4108

1086:                                             ; preds = %1013, %892, %682, %632, %496, %488, %454, %435, %359, %330, %211, %195
  call void @llvm.dbg.label(metadata !4109), !dbg !4110
  %1087 = load i32, i32* %15, align 4, !dbg !4111
  %1088 = icmp eq i32 %1087, 2, !dbg !4113
  br i1 %1088, label %1089, label %1093, !dbg !4114

1089:                                             ; preds = %1086
  %1090 = load i8, i8* %25, align 1, !dbg !4115
  %1091 = trunc i8 %1090 to i1, !dbg !4115
  br i1 %1091, label %1092, label %1093, !dbg !4116

1092:                                             ; preds = %1089
  store i32 4, i32* %15, align 4, !dbg !4117
  br label %1093, !dbg !4118

1093:                                             ; preds = %1092, %1089, %1086
  %1094 = load i8*, i8** %11, align 8, !dbg !4119
  %1095 = load i64, i64* %12, align 8, !dbg !4120
  %1096 = load i8*, i8** %13, align 8, !dbg !4121
  %1097 = load i64, i64* %14, align 8, !dbg !4122
  %1098 = load i32, i32* %15, align 4, !dbg !4123
  %1099 = load i32, i32* %16, align 4, !dbg !4124
  %1100 = and i32 %1099, -3, !dbg !4125
  %1101 = load i8*, i8** %18, align 8, !dbg !4126
  %1102 = load i8*, i8** %19, align 8, !dbg !4127
  %1103 = call i64 @quotearg_buffer_restyled(i8* %1094, i64 %1095, i8* %1096, i64 %1097, i32 %1098, i32 %1100, i32* null, i8* %1101, i8* %1102), !dbg !4128
  store i64 %1103, i64* %10, align 8, !dbg !4129
  br label %1104, !dbg !4129

1104:                                             ; preds = %1093, %1084, %1026
  %1105 = load i64, i64* %10, align 8, !dbg !4130
  ret i64 %1105, !dbg !4130
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @gettext_quote(i8* %0, i32 %1) #3 !dbg !4131 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !4134, metadata !DIExpression()), !dbg !4135
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !4136, metadata !DIExpression()), !dbg !4137
  call void @llvm.dbg.declare(metadata i8** %6, metadata !4138, metadata !DIExpression()), !dbg !4139
  %8 = load i8*, i8** %4, align 8, !dbg !4140
  store i8* %8, i8** %6, align 8, !dbg !4139
  call void @llvm.dbg.declare(metadata i8** %7, metadata !4141, metadata !DIExpression()), !dbg !4142
  %9 = load i8*, i8** %6, align 8, !dbg !4143
  %10 = load i8*, i8** %4, align 8, !dbg !4145
  %11 = icmp ne i8* %9, %10, !dbg !4146
  br i1 %11, label %12, label %14, !dbg !4147

12:                                               ; preds = %2
  %13 = load i8*, i8** %6, align 8, !dbg !4148
  store i8* %13, i8** %3, align 8, !dbg !4149
  br label %44, !dbg !4149

14:                                               ; preds = %2
  %15 = call i8* @locale_charset(), !dbg !4150
  store i8* %15, i8** %7, align 8, !dbg !4151
  %16 = load i8*, i8** %7, align 8, !dbg !4152
  %17 = call i32 @c_strcasecmp(i8* %16, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.102, i64 0, i64 0)) #14, !dbg !4152
  %18 = icmp eq i32 %17, 0, !dbg !4152
  br i1 %18, label %19, label %27, !dbg !4154

19:                                               ; preds = %14
  %20 = load i8*, i8** %4, align 8, !dbg !4155
  %21 = getelementptr inbounds i8, i8* %20, i64 0, !dbg !4155
  %22 = load i8, i8* %21, align 1, !dbg !4155
  %23 = sext i8 %22 to i32, !dbg !4155
  %24 = icmp eq i32 %23, 96, !dbg !4156
  %25 = zext i1 %24 to i64, !dbg !4155
  %26 = select i1 %24, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.103, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15.104, i64 0, i64 0), !dbg !4155
  store i8* %26, i8** %3, align 8, !dbg !4157
  br label %44, !dbg !4157

27:                                               ; preds = %14
  %28 = load i8*, i8** %7, align 8, !dbg !4158
  %29 = call i32 @c_strcasecmp(i8* %28, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16.105, i64 0, i64 0)) #14, !dbg !4158
  %30 = icmp eq i32 %29, 0, !dbg !4158
  br i1 %30, label %31, label %39, !dbg !4160

31:                                               ; preds = %27
  %32 = load i8*, i8** %4, align 8, !dbg !4161
  %33 = getelementptr inbounds i8, i8* %32, i64 0, !dbg !4161
  %34 = load i8, i8* %33, align 1, !dbg !4161
  %35 = sext i8 %34 to i32, !dbg !4161
  %36 = icmp eq i32 %35, 96, !dbg !4162
  %37 = zext i1 %36 to i64, !dbg !4161
  %38 = select i1 %36, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17.106, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.107, i64 0, i64 0), !dbg !4161
  store i8* %38, i8** %3, align 8, !dbg !4163
  br label %44, !dbg !4163

39:                                               ; preds = %27
  %40 = load i32, i32* %5, align 4, !dbg !4164
  %41 = icmp eq i32 %40, 9, !dbg !4165
  %42 = zext i1 %41 to i64, !dbg !4164
  %43 = select i1 %41, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.99, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.101, i64 0, i64 0), !dbg !4164
  store i8* %43, i8** %3, align 8, !dbg !4166
  br label %44, !dbg !4166

44:                                               ; preds = %39, %31, %19, %12
  %45 = load i8*, i8** %3, align 8, !dbg !4167
  ret i8* %45, !dbg !4167
}

; Function Attrs: nounwind readonly willreturn
declare dso_local i64 @strlen(i8*) #6

; Function Attrs: nounwind readonly willreturn
declare dso_local i32 @memcmp(i8*, i8*, i64) #6

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_alloc(i8* %0, i64 %1, %struct.quoting_options* %2) #3 !dbg !4168 {
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %struct.quoting_options*, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !4171, metadata !DIExpression()), !dbg !4172
  store i64 %1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata i64* %5, metadata !4173, metadata !DIExpression()), !dbg !4174
  store %struct.quoting_options* %2, %struct.quoting_options** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %6, metadata !4175, metadata !DIExpression()), !dbg !4176
  %7 = load i8*, i8** %4, align 8, !dbg !4177
  %8 = load i64, i64* %5, align 8, !dbg !4178
  %9 = load %struct.quoting_options*, %struct.quoting_options** %6, align 8, !dbg !4179
  %10 = call i8* @quotearg_alloc_mem(i8* %7, i64 %8, i64* null, %struct.quoting_options* %9), !dbg !4180
  ret i8* %10, !dbg !4181
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_alloc_mem(i8* %0, i64 %1, i64* %2, %struct.quoting_options* %3) #3 !dbg !4182 {
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64*, align 8
  %8 = alloca %struct.quoting_options*, align 8
  %9 = alloca %struct.quoting_options*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i64, align 8
  %13 = alloca i8*, align 8
  store i8* %0, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !4185, metadata !DIExpression()), !dbg !4186
  store i64 %1, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !4187, metadata !DIExpression()), !dbg !4188
  store i64* %2, i64** %7, align 8
  call void @llvm.dbg.declare(metadata i64** %7, metadata !4189, metadata !DIExpression()), !dbg !4190
  store %struct.quoting_options* %3, %struct.quoting_options** %8, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %8, metadata !4191, metadata !DIExpression()), !dbg !4192
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %9, metadata !4193, metadata !DIExpression()), !dbg !4194
  %14 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !4195
  %15 = icmp ne %struct.quoting_options* %14, null, !dbg !4195
  br i1 %15, label %16, label %18, !dbg !4195

16:                                               ; preds = %4
  %17 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !4196
  br label %19, !dbg !4195

18:                                               ; preds = %4
  br label %19, !dbg !4195

19:                                               ; preds = %18, %16
  %20 = phi %struct.quoting_options* [ %17, %16 ], [ @default_quoting_options, %18 ], !dbg !4195
  store %struct.quoting_options* %20, %struct.quoting_options** %9, align 8, !dbg !4194
  call void @llvm.dbg.declare(metadata i32* %10, metadata !4197, metadata !DIExpression()), !dbg !4198
  %21 = call i32* @__errno_location() #16, !dbg !4199
  %22 = load i32, i32* %21, align 4, !dbg !4199
  store i32 %22, i32* %10, align 4, !dbg !4198
  call void @llvm.dbg.declare(metadata i32* %11, metadata !4200, metadata !DIExpression()), !dbg !4201
  %23 = load %struct.quoting_options*, %struct.quoting_options** %9, align 8, !dbg !4202
  %24 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %23, i32 0, i32 1, !dbg !4203
  %25 = load i32, i32* %24, align 4, !dbg !4203
  %26 = load i64*, i64** %7, align 8, !dbg !4204
  %27 = icmp ne i64* %26, null, !dbg !4204
  %28 = zext i1 %27 to i64, !dbg !4204
  %29 = select i1 %27, i32 0, i32 1, !dbg !4204
  %30 = or i32 %25, %29, !dbg !4205
  store i32 %30, i32* %11, align 4, !dbg !4201
  call void @llvm.dbg.declare(metadata i64* %12, metadata !4206, metadata !DIExpression()), !dbg !4207
  %31 = load i8*, i8** %5, align 8, !dbg !4208
  %32 = load i64, i64* %6, align 8, !dbg !4209
  %33 = load %struct.quoting_options*, %struct.quoting_options** %9, align 8, !dbg !4210
  %34 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %33, i32 0, i32 0, !dbg !4211
  %35 = load i32, i32* %34, align 8, !dbg !4211
  %36 = load i32, i32* %11, align 4, !dbg !4212
  %37 = load %struct.quoting_options*, %struct.quoting_options** %9, align 8, !dbg !4213
  %38 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %37, i32 0, i32 2, !dbg !4214
  %39 = getelementptr inbounds [8 x i32], [8 x i32]* %38, i64 0, i64 0, !dbg !4213
  %40 = load %struct.quoting_options*, %struct.quoting_options** %9, align 8, !dbg !4215
  %41 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %40, i32 0, i32 3, !dbg !4216
  %42 = load i8*, i8** %41, align 8, !dbg !4216
  %43 = load %struct.quoting_options*, %struct.quoting_options** %9, align 8, !dbg !4217
  %44 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %43, i32 0, i32 4, !dbg !4218
  %45 = load i8*, i8** %44, align 8, !dbg !4218
  %46 = call i64 @quotearg_buffer_restyled(i8* null, i64 0, i8* %31, i64 %32, i32 %35, i32 %36, i32* %39, i8* %42, i8* %45), !dbg !4219
  %47 = add i64 %46, 1, !dbg !4220
  store i64 %47, i64* %12, align 8, !dbg !4207
  call void @llvm.dbg.declare(metadata i8** %13, metadata !4221, metadata !DIExpression()), !dbg !4222
  %48 = load i64, i64* %12, align 8, !dbg !4223
  %49 = call noalias i8* @xcharalloc(i64 %48), !dbg !4224
  store i8* %49, i8** %13, align 8, !dbg !4222
  %50 = load i8*, i8** %13, align 8, !dbg !4225
  %51 = load i64, i64* %12, align 8, !dbg !4226
  %52 = load i8*, i8** %5, align 8, !dbg !4227
  %53 = load i64, i64* %6, align 8, !dbg !4228
  %54 = load %struct.quoting_options*, %struct.quoting_options** %9, align 8, !dbg !4229
  %55 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %54, i32 0, i32 0, !dbg !4230
  %56 = load i32, i32* %55, align 8, !dbg !4230
  %57 = load i32, i32* %11, align 4, !dbg !4231
  %58 = load %struct.quoting_options*, %struct.quoting_options** %9, align 8, !dbg !4232
  %59 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %58, i32 0, i32 2, !dbg !4233
  %60 = getelementptr inbounds [8 x i32], [8 x i32]* %59, i64 0, i64 0, !dbg !4232
  %61 = load %struct.quoting_options*, %struct.quoting_options** %9, align 8, !dbg !4234
  %62 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %61, i32 0, i32 3, !dbg !4235
  %63 = load i8*, i8** %62, align 8, !dbg !4235
  %64 = load %struct.quoting_options*, %struct.quoting_options** %9, align 8, !dbg !4236
  %65 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %64, i32 0, i32 4, !dbg !4237
  %66 = load i8*, i8** %65, align 8, !dbg !4237
  %67 = call i64 @quotearg_buffer_restyled(i8* %50, i64 %51, i8* %52, i64 %53, i32 %56, i32 %57, i32* %60, i8* %63, i8* %66), !dbg !4238
  %68 = load i32, i32* %10, align 4, !dbg !4239
  %69 = call i32* @__errno_location() #16, !dbg !4240
  store i32 %68, i32* %69, align 4, !dbg !4241
  %70 = load i64*, i64** %7, align 8, !dbg !4242
  %71 = icmp ne i64* %70, null, !dbg !4242
  br i1 %71, label %72, label %76, !dbg !4244

72:                                               ; preds = %19
  %73 = load i64, i64* %12, align 8, !dbg !4245
  %74 = sub i64 %73, 1, !dbg !4246
  %75 = load i64*, i64** %7, align 8, !dbg !4247
  store i64 %74, i64* %75, align 8, !dbg !4248
  br label %76, !dbg !4249

76:                                               ; preds = %72, %19
  %77 = load i8*, i8** %13, align 8, !dbg !4250
  ret i8* %77, !dbg !4251
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @quotearg_free() #3 !dbg !4252 {
  %1 = alloca %struct.slotvec*, align 8
  %2 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata %struct.slotvec** %1, metadata !4253, metadata !DIExpression()), !dbg !4254
  %3 = load %struct.slotvec*, %struct.slotvec** @slotvec, align 8, !dbg !4255
  store %struct.slotvec* %3, %struct.slotvec** %1, align 8, !dbg !4254
  call void @llvm.dbg.declare(metadata i32* %2, metadata !4256, metadata !DIExpression()), !dbg !4257
  store i32 1, i32* %2, align 4, !dbg !4258
  br label %4, !dbg !4260

4:                                                ; preds = %15, %0
  %5 = load i32, i32* %2, align 4, !dbg !4261
  %6 = load i32, i32* @nslots, align 4, !dbg !4263
  %7 = icmp slt i32 %5, %6, !dbg !4264
  br i1 %7, label %8, label %18, !dbg !4265

8:                                                ; preds = %4
  %9 = load %struct.slotvec*, %struct.slotvec** %1, align 8, !dbg !4266
  %10 = load i32, i32* %2, align 4, !dbg !4267
  %11 = sext i32 %10 to i64, !dbg !4266
  %12 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %9, i64 %11, !dbg !4266
  %13 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %12, i32 0, i32 1, !dbg !4268
  %14 = load i8*, i8** %13, align 8, !dbg !4268
  call void @free(i8* %14) #15, !dbg !4269
  br label %15, !dbg !4269

15:                                               ; preds = %8
  %16 = load i32, i32* %2, align 4, !dbg !4270
  %17 = add nsw i32 %16, 1, !dbg !4270
  store i32 %17, i32* %2, align 4, !dbg !4270
  br label %4, !dbg !4271, !llvm.loop !4272

18:                                               ; preds = %4
  %19 = load %struct.slotvec*, %struct.slotvec** %1, align 8, !dbg !4274
  %20 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %19, i64 0, !dbg !4274
  %21 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %20, i32 0, i32 1, !dbg !4276
  %22 = load i8*, i8** %21, align 8, !dbg !4276
  %23 = icmp ne i8* %22, getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), !dbg !4277
  br i1 %23, label %24, label %29, !dbg !4278

24:                                               ; preds = %18
  %25 = load %struct.slotvec*, %struct.slotvec** %1, align 8, !dbg !4279
  %26 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %25, i64 0, !dbg !4279
  %27 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %26, i32 0, i32 1, !dbg !4281
  %28 = load i8*, i8** %27, align 8, !dbg !4281
  call void @free(i8* %28) #15, !dbg !4282
  store i64 256, i64* getelementptr inbounds (%struct.slotvec, %struct.slotvec* @slotvec0, i32 0, i32 0), align 8, !dbg !4283
  store i8* getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), i8** getelementptr inbounds (%struct.slotvec, %struct.slotvec* @slotvec0, i32 0, i32 1), align 8, !dbg !4284
  br label %29, !dbg !4285

29:                                               ; preds = %24, %18
  %30 = load %struct.slotvec*, %struct.slotvec** %1, align 8, !dbg !4286
  %31 = icmp ne %struct.slotvec* %30, @slotvec0, !dbg !4288
  br i1 %31, label %32, label %35, !dbg !4289

32:                                               ; preds = %29
  %33 = load %struct.slotvec*, %struct.slotvec** %1, align 8, !dbg !4290
  %34 = bitcast %struct.slotvec* %33 to i8*, !dbg !4290
  call void @free(i8* %34) #15, !dbg !4292
  store %struct.slotvec* @slotvec0, %struct.slotvec** @slotvec, align 8, !dbg !4293
  br label %35, !dbg !4294

35:                                               ; preds = %32, %29
  store i32 1, i32* @nslots, align 4, !dbg !4295
  ret void, !dbg !4296
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n(i32 %0, i8* %1) #3 !dbg !4297 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !4300, metadata !DIExpression()), !dbg !4301
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !4302, metadata !DIExpression()), !dbg !4303
  %5 = load i32, i32* %3, align 4, !dbg !4304
  %6 = load i8*, i8** %4, align 8, !dbg !4305
  %7 = call i8* @quotearg_n_options(i32 %5, i8* %6, i64 -1, %struct.quoting_options* @default_quoting_options), !dbg !4306
  ret i8* %7, !dbg !4307
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_n_options(i32 %0, i8* %1, i64 %2, %struct.quoting_options* %3) #3 !dbg !4308 {
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %struct.quoting_options*, align 8
  %9 = alloca i32, align 4
  %10 = alloca %struct.slotvec*, align 8
  %11 = alloca i8, align 1
  %12 = alloca i32, align 4
  %13 = alloca i64, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i64, align 8
  store i32 %0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !4311, metadata !DIExpression()), !dbg !4312
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !4313, metadata !DIExpression()), !dbg !4314
  store i64 %2, i64* %7, align 8
  call void @llvm.dbg.declare(metadata i64* %7, metadata !4315, metadata !DIExpression()), !dbg !4316
  store %struct.quoting_options* %3, %struct.quoting_options** %8, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %8, metadata !4317, metadata !DIExpression()), !dbg !4318
  call void @llvm.dbg.declare(metadata i32* %9, metadata !4319, metadata !DIExpression()), !dbg !4320
  %17 = call i32* @__errno_location() #16, !dbg !4321
  %18 = load i32, i32* %17, align 4, !dbg !4321
  store i32 %18, i32* %9, align 4, !dbg !4320
  call void @llvm.dbg.declare(metadata %struct.slotvec** %10, metadata !4322, metadata !DIExpression()), !dbg !4323
  %19 = load %struct.slotvec*, %struct.slotvec** @slotvec, align 8, !dbg !4324
  store %struct.slotvec* %19, %struct.slotvec** %10, align 8, !dbg !4323
  %20 = load i32, i32* %5, align 4, !dbg !4325
  %21 = icmp slt i32 %20, 0, !dbg !4327
  br i1 %21, label %22, label %23, !dbg !4328

22:                                               ; preds = %4
  call void @abort() #13, !dbg !4329
  unreachable, !dbg !4329

23:                                               ; preds = %4
  %24 = load i32, i32* @nslots, align 4, !dbg !4330
  %25 = load i32, i32* %5, align 4, !dbg !4332
  %26 = icmp sle i32 %24, %25, !dbg !4333
  br i1 %26, label %27, label %69, !dbg !4334

27:                                               ; preds = %23
  call void @llvm.dbg.declare(metadata i8* %11, metadata !4335, metadata !DIExpression()), !dbg !4337
  %28 = load %struct.slotvec*, %struct.slotvec** %10, align 8, !dbg !4338
  %29 = icmp eq %struct.slotvec* %28, @slotvec0, !dbg !4339
  %30 = zext i1 %29 to i8, !dbg !4337
  store i8 %30, i8* %11, align 1, !dbg !4337
  call void @llvm.dbg.declare(metadata i32* %12, metadata !4340, metadata !DIExpression()), !dbg !4341
  store i32 2147483646, i32* %12, align 4, !dbg !4341
  %31 = load i32, i32* %12, align 4, !dbg !4342
  %32 = load i32, i32* %5, align 4, !dbg !4344
  %33 = icmp slt i32 %31, %32, !dbg !4345
  br i1 %33, label %34, label %35, !dbg !4346

34:                                               ; preds = %27
  call void @xalloc_die() #17, !dbg !4347
  unreachable, !dbg !4347

35:                                               ; preds = %27
  %36 = load i8, i8* %11, align 1, !dbg !4348
  %37 = trunc i8 %36 to i1, !dbg !4348
  br i1 %37, label %38, label %39, !dbg !4348

38:                                               ; preds = %35
  br label %41, !dbg !4348

39:                                               ; preds = %35
  %40 = load %struct.slotvec*, %struct.slotvec** %10, align 8, !dbg !4349
  br label %41, !dbg !4348

41:                                               ; preds = %39, %38
  %42 = phi %struct.slotvec* [ null, %38 ], [ %40, %39 ], !dbg !4348
  %43 = bitcast %struct.slotvec* %42 to i8*, !dbg !4348
  %44 = load i32, i32* %5, align 4, !dbg !4350
  %45 = add nsw i32 %44, 1, !dbg !4351
  %46 = sext i32 %45 to i64, !dbg !4352
  %47 = mul i64 %46, 16, !dbg !4353
  %48 = call i8* @xrealloc(i8* %43, i64 %47), !dbg !4354
  %49 = bitcast i8* %48 to %struct.slotvec*, !dbg !4354
  store %struct.slotvec* %49, %struct.slotvec** %10, align 8, !dbg !4355
  store %struct.slotvec* %49, %struct.slotvec** @slotvec, align 8, !dbg !4356
  %50 = load i8, i8* %11, align 1, !dbg !4357
  %51 = trunc i8 %50 to i1, !dbg !4357
  br i1 %51, label %52, label %55, !dbg !4359

52:                                               ; preds = %41
  %53 = load %struct.slotvec*, %struct.slotvec** %10, align 8, !dbg !4360
  %54 = bitcast %struct.slotvec* %53 to i8*, !dbg !4361
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 bitcast (%struct.slotvec* @slotvec0 to i8*), i64 16, i1 false), !dbg !4361
  br label %55, !dbg !4362

55:                                               ; preds = %52, %41
  %56 = load %struct.slotvec*, %struct.slotvec** %10, align 8, !dbg !4363
  %57 = load i32, i32* @nslots, align 4, !dbg !4364
  %58 = sext i32 %57 to i64, !dbg !4365
  %59 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %56, i64 %58, !dbg !4365
  %60 = bitcast %struct.slotvec* %59 to i8*, !dbg !4366
  %61 = load i32, i32* %5, align 4, !dbg !4367
  %62 = add nsw i32 %61, 1, !dbg !4368
  %63 = load i32, i32* @nslots, align 4, !dbg !4369
  %64 = sub nsw i32 %62, %63, !dbg !4370
  %65 = sext i32 %64 to i64, !dbg !4371
  %66 = mul i64 %65, 16, !dbg !4372
  call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 %66, i1 false), !dbg !4366
  %67 = load i32, i32* %5, align 4, !dbg !4373
  %68 = add nsw i32 %67, 1, !dbg !4374
  store i32 %68, i32* @nslots, align 4, !dbg !4375
  br label %69, !dbg !4376

69:                                               ; preds = %55, %23
  call void @llvm.dbg.declare(metadata i64* %13, metadata !4377, metadata !DIExpression()), !dbg !4379
  %70 = load %struct.slotvec*, %struct.slotvec** %10, align 8, !dbg !4380
  %71 = load i32, i32* %5, align 4, !dbg !4381
  %72 = sext i32 %71 to i64, !dbg !4380
  %73 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %70, i64 %72, !dbg !4380
  %74 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %73, i32 0, i32 0, !dbg !4382
  %75 = load i64, i64* %74, align 8, !dbg !4382
  store i64 %75, i64* %13, align 8, !dbg !4379
  call void @llvm.dbg.declare(metadata i8** %14, metadata !4383, metadata !DIExpression()), !dbg !4384
  %76 = load %struct.slotvec*, %struct.slotvec** %10, align 8, !dbg !4385
  %77 = load i32, i32* %5, align 4, !dbg !4386
  %78 = sext i32 %77 to i64, !dbg !4385
  %79 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %76, i64 %78, !dbg !4385
  %80 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %79, i32 0, i32 1, !dbg !4387
  %81 = load i8*, i8** %80, align 8, !dbg !4387
  store i8* %81, i8** %14, align 8, !dbg !4384
  call void @llvm.dbg.declare(metadata i32* %15, metadata !4388, metadata !DIExpression()), !dbg !4389
  %82 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !4390
  %83 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %82, i32 0, i32 1, !dbg !4391
  %84 = load i32, i32* %83, align 4, !dbg !4391
  %85 = or i32 %84, 1, !dbg !4392
  store i32 %85, i32* %15, align 4, !dbg !4389
  call void @llvm.dbg.declare(metadata i64* %16, metadata !4393, metadata !DIExpression()), !dbg !4394
  %86 = load i8*, i8** %14, align 8, !dbg !4395
  %87 = load i64, i64* %13, align 8, !dbg !4396
  %88 = load i8*, i8** %6, align 8, !dbg !4397
  %89 = load i64, i64* %7, align 8, !dbg !4398
  %90 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !4399
  %91 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %90, i32 0, i32 0, !dbg !4400
  %92 = load i32, i32* %91, align 8, !dbg !4400
  %93 = load i32, i32* %15, align 4, !dbg !4401
  %94 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !4402
  %95 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %94, i32 0, i32 2, !dbg !4403
  %96 = getelementptr inbounds [8 x i32], [8 x i32]* %95, i64 0, i64 0, !dbg !4402
  %97 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !4404
  %98 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %97, i32 0, i32 3, !dbg !4405
  %99 = load i8*, i8** %98, align 8, !dbg !4405
  %100 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !4406
  %101 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %100, i32 0, i32 4, !dbg !4407
  %102 = load i8*, i8** %101, align 8, !dbg !4407
  %103 = call i64 @quotearg_buffer_restyled(i8* %86, i64 %87, i8* %88, i64 %89, i32 %92, i32 %93, i32* %96, i8* %99, i8* %102), !dbg !4408
  store i64 %103, i64* %16, align 8, !dbg !4394
  %104 = load i64, i64* %13, align 8, !dbg !4409
  %105 = load i64, i64* %16, align 8, !dbg !4411
  %106 = icmp ule i64 %104, %105, !dbg !4412
  br i1 %106, label %107, label %145, !dbg !4413

107:                                              ; preds = %69
  %108 = load i64, i64* %16, align 8, !dbg !4414
  %109 = add i64 %108, 1, !dbg !4416
  store i64 %109, i64* %13, align 8, !dbg !4417
  %110 = load %struct.slotvec*, %struct.slotvec** %10, align 8, !dbg !4418
  %111 = load i32, i32* %5, align 4, !dbg !4419
  %112 = sext i32 %111 to i64, !dbg !4418
  %113 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %110, i64 %112, !dbg !4418
  %114 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %113, i32 0, i32 0, !dbg !4420
  store i64 %109, i64* %114, align 8, !dbg !4421
  %115 = load i8*, i8** %14, align 8, !dbg !4422
  %116 = icmp ne i8* %115, getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), !dbg !4424
  br i1 %116, label %117, label %119, !dbg !4425

117:                                              ; preds = %107
  %118 = load i8*, i8** %14, align 8, !dbg !4426
  call void @free(i8* %118) #15, !dbg !4427
  br label %119, !dbg !4427

119:                                              ; preds = %117, %107
  %120 = load i64, i64* %13, align 8, !dbg !4428
  %121 = call noalias i8* @xcharalloc(i64 %120), !dbg !4429
  store i8* %121, i8** %14, align 8, !dbg !4430
  %122 = load %struct.slotvec*, %struct.slotvec** %10, align 8, !dbg !4431
  %123 = load i32, i32* %5, align 4, !dbg !4432
  %124 = sext i32 %123 to i64, !dbg !4431
  %125 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %122, i64 %124, !dbg !4431
  %126 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %125, i32 0, i32 1, !dbg !4433
  store i8* %121, i8** %126, align 8, !dbg !4434
  %127 = load i8*, i8** %14, align 8, !dbg !4435
  %128 = load i64, i64* %13, align 8, !dbg !4436
  %129 = load i8*, i8** %6, align 8, !dbg !4437
  %130 = load i64, i64* %7, align 8, !dbg !4438
  %131 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !4439
  %132 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %131, i32 0, i32 0, !dbg !4440
  %133 = load i32, i32* %132, align 8, !dbg !4440
  %134 = load i32, i32* %15, align 4, !dbg !4441
  %135 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !4442
  %136 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %135, i32 0, i32 2, !dbg !4443
  %137 = getelementptr inbounds [8 x i32], [8 x i32]* %136, i64 0, i64 0, !dbg !4442
  %138 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !4444
  %139 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %138, i32 0, i32 3, !dbg !4445
  %140 = load i8*, i8** %139, align 8, !dbg !4445
  %141 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8, !dbg !4446
  %142 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %141, i32 0, i32 4, !dbg !4447
  %143 = load i8*, i8** %142, align 8, !dbg !4447
  %144 = call i64 @quotearg_buffer_restyled(i8* %127, i64 %128, i8* %129, i64 %130, i32 %133, i32 %134, i32* %137, i8* %140, i8* %143), !dbg !4448
  br label %145, !dbg !4449

145:                                              ; preds = %119, %69
  %146 = load i32, i32* %9, align 4, !dbg !4450
  %147 = call i32* @__errno_location() #16, !dbg !4451
  store i32 %146, i32* %147, align 4, !dbg !4452
  %148 = load i8*, i8** %14, align 8, !dbg !4453
  ret i8* %148, !dbg !4454
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_mem(i32 %0, i8* %1, i64 %2) #3 !dbg !4455 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !4458, metadata !DIExpression()), !dbg !4459
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !4460, metadata !DIExpression()), !dbg !4461
  store i64 %2, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !4462, metadata !DIExpression()), !dbg !4463
  %7 = load i32, i32* %4, align 4, !dbg !4464
  %8 = load i8*, i8** %5, align 8, !dbg !4465
  %9 = load i64, i64* %6, align 8, !dbg !4466
  %10 = call i8* @quotearg_n_options(i32 %7, i8* %8, i64 %9, %struct.quoting_options* @default_quoting_options), !dbg !4467
  ret i8* %10, !dbg !4468
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg(i8* %0) #3 !dbg !4469 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !4472, metadata !DIExpression()), !dbg !4473
  %3 = load i8*, i8** %2, align 8, !dbg !4474
  %4 = call i8* @quotearg_n(i32 0, i8* %3), !dbg !4475
  ret i8* %4, !dbg !4476
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_mem(i8* %0, i64 %1) #3 !dbg !4477 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !4480, metadata !DIExpression()), !dbg !4481
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !4482, metadata !DIExpression()), !dbg !4483
  %5 = load i8*, i8** %3, align 8, !dbg !4484
  %6 = load i64, i64* %4, align 8, !dbg !4485
  %7 = call i8* @quotearg_n_mem(i32 0, i8* %5, i64 %6), !dbg !4486
  ret i8* %7, !dbg !4487
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_style(i32 %0, i32 %1, i8* %2) #3 !dbg !4488 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca %struct.quoting_options, align 8
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !4491, metadata !DIExpression()), !dbg !4492
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !4493, metadata !DIExpression()), !dbg !4494
  store i8* %2, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !4495, metadata !DIExpression()), !dbg !4496
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %7, metadata !4497, metadata !DIExpression()), !dbg !4498
  %8 = load i32, i32* %5, align 4, !dbg !4499
  call void @quoting_options_from_style(%struct.quoting_options* sret(%struct.quoting_options) align 8 %7, i32 %8), !dbg !4500
  %9 = load i32, i32* %4, align 4, !dbg !4501
  %10 = load i8*, i8** %6, align 8, !dbg !4502
  %11 = call i8* @quotearg_n_options(i32 %9, i8* %10, i64 -1, %struct.quoting_options* %7), !dbg !4503
  ret i8* %11, !dbg !4504
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @quoting_options_from_style(%struct.quoting_options* noalias sret(%struct.quoting_options) align 8 %0, i32 %1) #3 !dbg !4505 {
  %3 = alloca i32, align 4
  store i32 %1, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !4508, metadata !DIExpression()), !dbg !4509
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %0, metadata !4510, metadata !DIExpression()), !dbg !4511
  %4 = bitcast %struct.quoting_options* %0 to i8*, !dbg !4511
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 56, i1 false), !dbg !4511
  %5 = load i32, i32* %3, align 4, !dbg !4512
  %6 = icmp eq i32 %5, 10, !dbg !4514
  br i1 %6, label %7, label %8, !dbg !4515

7:                                                ; preds = %2
  call void @abort() #13, !dbg !4516
  unreachable, !dbg !4516

8:                                                ; preds = %2
  %9 = load i32, i32* %3, align 4, !dbg !4517
  %10 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %0, i32 0, i32 0, !dbg !4518
  store i32 %9, i32* %10, align 8, !dbg !4519
  ret void, !dbg !4520
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_style_mem(i32 %0, i32 %1, i8* %2, i64 %3) #3 !dbg !4521 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca %struct.quoting_options, align 8
  store i32 %0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !4524, metadata !DIExpression()), !dbg !4525
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !4526, metadata !DIExpression()), !dbg !4527
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !4528, metadata !DIExpression()), !dbg !4529
  store i64 %3, i64* %8, align 8
  call void @llvm.dbg.declare(metadata i64* %8, metadata !4530, metadata !DIExpression()), !dbg !4531
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %9, metadata !4532, metadata !DIExpression()), !dbg !4533
  %10 = load i32, i32* %6, align 4, !dbg !4534
  call void @quoting_options_from_style(%struct.quoting_options* sret(%struct.quoting_options) align 8 %9, i32 %10), !dbg !4535
  %11 = load i32, i32* %5, align 4, !dbg !4536
  %12 = load i8*, i8** %7, align 8, !dbg !4537
  %13 = load i64, i64* %8, align 8, !dbg !4538
  %14 = call i8* @quotearg_n_options(i32 %11, i8* %12, i64 %13, %struct.quoting_options* %9), !dbg !4539
  ret i8* %14, !dbg !4540
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_style(i32 %0, i8* %1) #3 !dbg !4541 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !4544, metadata !DIExpression()), !dbg !4545
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !4546, metadata !DIExpression()), !dbg !4547
  %5 = load i32, i32* %3, align 4, !dbg !4548
  %6 = load i8*, i8** %4, align 8, !dbg !4549
  %7 = call i8* @quotearg_n_style(i32 0, i32 %5, i8* %6), !dbg !4550
  ret i8* %7, !dbg !4551
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_style_mem(i32 %0, i8* %1, i64 %2) #3 !dbg !4552 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !4555, metadata !DIExpression()), !dbg !4556
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !4557, metadata !DIExpression()), !dbg !4558
  store i64 %2, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !4559, metadata !DIExpression()), !dbg !4560
  %7 = load i32, i32* %4, align 4, !dbg !4561
  %8 = load i8*, i8** %5, align 8, !dbg !4562
  %9 = load i64, i64* %6, align 8, !dbg !4563
  %10 = call i8* @quotearg_n_style_mem(i32 0, i32 %7, i8* %8, i64 %9), !dbg !4564
  ret i8* %10, !dbg !4565
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_char_mem(i8* %0, i64 %1, i8 signext %2) #3 !dbg !4566 {
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8, align 1
  %7 = alloca %struct.quoting_options, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !4569, metadata !DIExpression()), !dbg !4570
  store i64 %1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata i64* %5, metadata !4571, metadata !DIExpression()), !dbg !4572
  store i8 %2, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !4573, metadata !DIExpression()), !dbg !4574
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %7, metadata !4575, metadata !DIExpression()), !dbg !4576
  %8 = bitcast %struct.quoting_options* %7 to i8*, !dbg !4577
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i1 false), !dbg !4577
  %9 = load i8, i8* %6, align 1, !dbg !4578
  %10 = call i32 @set_char_quoting(%struct.quoting_options* %7, i8 signext %9, i32 1), !dbg !4579
  %11 = load i8*, i8** %4, align 8, !dbg !4580
  %12 = load i64, i64* %5, align 8, !dbg !4581
  %13 = call i8* @quotearg_n_options(i32 0, i8* %11, i64 %12, %struct.quoting_options* %7), !dbg !4582
  ret i8* %13, !dbg !4583
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_char(i8* %0, i8 signext %1) #3 !dbg !4584 {
  %3 = alloca i8*, align 8
  %4 = alloca i8, align 1
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !4587, metadata !DIExpression()), !dbg !4588
  store i8 %1, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !4589, metadata !DIExpression()), !dbg !4590
  %5 = load i8*, i8** %3, align 8, !dbg !4591
  %6 = load i8, i8* %4, align 1, !dbg !4592
  %7 = call i8* @quotearg_char_mem(i8* %5, i64 -1, i8 signext %6), !dbg !4593
  ret i8* %7, !dbg !4594
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_colon(i8* %0) #3 !dbg !4595 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !4596, metadata !DIExpression()), !dbg !4597
  %3 = load i8*, i8** %2, align 8, !dbg !4598
  %4 = call i8* @quotearg_char(i8* %3, i8 signext 58), !dbg !4599
  ret i8* %4, !dbg !4600
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_colon_mem(i8* %0, i64 %1) #3 !dbg !4601 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !4602, metadata !DIExpression()), !dbg !4603
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !4604, metadata !DIExpression()), !dbg !4605
  %5 = load i8*, i8** %3, align 8, !dbg !4606
  %6 = load i64, i64* %4, align 8, !dbg !4607
  %7 = call i8* @quotearg_char_mem(i8* %5, i64 %6, i8 signext 58), !dbg !4608
  ret i8* %7, !dbg !4609
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_style_colon(i32 %0, i32 %1, i8* %2) #3 !dbg !4610 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca %struct.quoting_options, align 8
  %8 = alloca %struct.quoting_options, align 8
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !4611, metadata !DIExpression()), !dbg !4612
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !4613, metadata !DIExpression()), !dbg !4614
  store i8* %2, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !4615, metadata !DIExpression()), !dbg !4616
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %7, metadata !4617, metadata !DIExpression()), !dbg !4618
  %9 = load i32, i32* %5, align 4, !dbg !4619
  call void @quoting_options_from_style(%struct.quoting_options* sret(%struct.quoting_options) align 8 %8, i32 %9), !dbg !4620
  %10 = bitcast %struct.quoting_options* %7 to i8*, !dbg !4620
  %11 = bitcast %struct.quoting_options* %8 to i8*, !dbg !4620
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 56, i1 false), !dbg !4620
  %12 = call i32 @set_char_quoting(%struct.quoting_options* %7, i8 signext 58, i32 1), !dbg !4621
  %13 = load i32, i32* %4, align 4, !dbg !4622
  %14 = load i8*, i8** %6, align 8, !dbg !4623
  %15 = call i8* @quotearg_n_options(i32 %13, i8* %14, i64 -1, %struct.quoting_options* %7), !dbg !4624
  ret i8* %15, !dbg !4625
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_custom(i32 %0, i8* %1, i8* %2, i8* %3) #3 !dbg !4626 {
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  store i32 %0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !4629, metadata !DIExpression()), !dbg !4630
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !4631, metadata !DIExpression()), !dbg !4632
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !4633, metadata !DIExpression()), !dbg !4634
  store i8* %3, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !4635, metadata !DIExpression()), !dbg !4636
  %9 = load i32, i32* %5, align 4, !dbg !4637
  %10 = load i8*, i8** %6, align 8, !dbg !4638
  %11 = load i8*, i8** %7, align 8, !dbg !4639
  %12 = load i8*, i8** %8, align 8, !dbg !4640
  %13 = call i8* @quotearg_n_custom_mem(i32 %9, i8* %10, i8* %11, i8* %12, i64 -1), !dbg !4641
  ret i8* %13, !dbg !4642
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_custom_mem(i32 %0, i8* %1, i8* %2, i8* %3, i64 %4) #3 !dbg !4643 {
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i64, align 8
  %11 = alloca %struct.quoting_options, align 8
  store i32 %0, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !4646, metadata !DIExpression()), !dbg !4647
  store i8* %1, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !4648, metadata !DIExpression()), !dbg !4649
  store i8* %2, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !4650, metadata !DIExpression()), !dbg !4651
  store i8* %3, i8** %9, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !4652, metadata !DIExpression()), !dbg !4653
  store i64 %4, i64* %10, align 8
  call void @llvm.dbg.declare(metadata i64* %10, metadata !4654, metadata !DIExpression()), !dbg !4655
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %11, metadata !4656, metadata !DIExpression()), !dbg !4657
  %12 = bitcast %struct.quoting_options* %11 to i8*, !dbg !4658
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i1 false), !dbg !4658
  %13 = load i8*, i8** %7, align 8, !dbg !4659
  %14 = load i8*, i8** %8, align 8, !dbg !4660
  call void @set_custom_quoting(%struct.quoting_options* %11, i8* %13, i8* %14), !dbg !4661
  %15 = load i32, i32* %6, align 4, !dbg !4662
  %16 = load i8*, i8** %9, align 8, !dbg !4663
  %17 = load i64, i64* %10, align 8, !dbg !4664
  %18 = call i8* @quotearg_n_options(i32 %15, i8* %16, i64 %17, %struct.quoting_options* %11), !dbg !4665
  ret i8* %18, !dbg !4666
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_custom(i8* %0, i8* %1, i8* %2) #3 !dbg !4667 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !4670, metadata !DIExpression()), !dbg !4671
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !4672, metadata !DIExpression()), !dbg !4673
  store i8* %2, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !4674, metadata !DIExpression()), !dbg !4675
  %7 = load i8*, i8** %4, align 8, !dbg !4676
  %8 = load i8*, i8** %5, align 8, !dbg !4677
  %9 = load i8*, i8** %6, align 8, !dbg !4678
  %10 = call i8* @quotearg_n_custom(i32 0, i8* %7, i8* %8, i8* %9), !dbg !4679
  ret i8* %10, !dbg !4680
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_custom_mem(i8* %0, i8* %1, i8* %2, i64 %3) #3 !dbg !4681 {
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  store i8* %0, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !4684, metadata !DIExpression()), !dbg !4685
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !4686, metadata !DIExpression()), !dbg !4687
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !4688, metadata !DIExpression()), !dbg !4689
  store i64 %3, i64* %8, align 8
  call void @llvm.dbg.declare(metadata i64* %8, metadata !4690, metadata !DIExpression()), !dbg !4691
  %9 = load i8*, i8** %5, align 8, !dbg !4692
  %10 = load i8*, i8** %6, align 8, !dbg !4693
  %11 = load i8*, i8** %7, align 8, !dbg !4694
  %12 = load i64, i64* %8, align 8, !dbg !4695
  %13 = call i8* @quotearg_n_custom_mem(i32 0, i8* %9, i8* %10, i8* %11, i64 %12), !dbg !4696
  ret i8* %13, !dbg !4697
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quote_n_mem(i32 %0, i8* %1, i64 %2) #3 !dbg !4698 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !4701, metadata !DIExpression()), !dbg !4702
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !4703, metadata !DIExpression()), !dbg !4704
  store i64 %2, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !4705, metadata !DIExpression()), !dbg !4706
  %7 = load i32, i32* %4, align 4, !dbg !4707
  %8 = load i8*, i8** %5, align 8, !dbg !4708
  %9 = load i64, i64* %6, align 8, !dbg !4709
  %10 = call i8* @quotearg_n_options(i32 %7, i8* %8, i64 %9, %struct.quoting_options* @quote_quoting_options), !dbg !4710
  ret i8* %10, !dbg !4711
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quote_mem(i8* %0, i64 %1) #3 !dbg !4712 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !4715, metadata !DIExpression()), !dbg !4716
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !4717, metadata !DIExpression()), !dbg !4718
  %5 = load i8*, i8** %3, align 8, !dbg !4719
  %6 = load i64, i64* %4, align 8, !dbg !4720
  %7 = call i8* @quote_n_mem(i32 0, i8* %5, i64 %6), !dbg !4721
  ret i8* %7, !dbg !4722
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quote_n(i32 %0, i8* %1) #3 !dbg !4723 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !4726, metadata !DIExpression()), !dbg !4727
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !4728, metadata !DIExpression()), !dbg !4729
  %5 = load i32, i32* %3, align 4, !dbg !4730
  %6 = load i8*, i8** %4, align 8, !dbg !4731
  %7 = call i8* @quote_n_mem(i32 %5, i8* %6, i64 -1), !dbg !4732
  ret i8* %7, !dbg !4733
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quote(i8* %0) #3 !dbg !4734 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !4737, metadata !DIExpression()), !dbg !4738
  %3 = load i8*, i8** %2, align 8, !dbg !4739
  %4 = call i8* @quote_n(i32 0, i8* %3), !dbg !4740
  ret i8* %4, !dbg !4741
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @readtokens0_init(%struct.Tokens* %0) #3 !dbg !4742 {
  %2 = alloca %struct.Tokens*, align 8
  store %struct.Tokens* %0, %struct.Tokens** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.Tokens** %2, metadata !4787, metadata !DIExpression()), !dbg !4788
  %3 = load %struct.Tokens*, %struct.Tokens** %2, align 8, !dbg !4789
  %4 = getelementptr inbounds %struct.Tokens, %struct.Tokens* %3, i32 0, i32 0, !dbg !4790
  store i64 0, i64* %4, align 8, !dbg !4791
  %5 = load %struct.Tokens*, %struct.Tokens** %2, align 8, !dbg !4792
  %6 = getelementptr inbounds %struct.Tokens, %struct.Tokens* %5, i32 0, i32 1, !dbg !4793
  store i8** null, i8*** %6, align 8, !dbg !4794
  %7 = load %struct.Tokens*, %struct.Tokens** %2, align 8, !dbg !4795
  %8 = getelementptr inbounds %struct.Tokens, %struct.Tokens* %7, i32 0, i32 2, !dbg !4796
  store i64* null, i64** %8, align 8, !dbg !4797
  %9 = load %struct.Tokens*, %struct.Tokens** %2, align 8, !dbg !4798
  %10 = getelementptr inbounds %struct.Tokens, %struct.Tokens* %9, i32 0, i32 3, !dbg !4798
  %11 = call i32 @_obstack_begin(%struct.obstack* %10, i64 0, i64 0, i8* (i64)* @malloc, void (i8*)* @free), !dbg !4798
  %12 = load %struct.Tokens*, %struct.Tokens** %2, align 8, !dbg !4799
  %13 = getelementptr inbounds %struct.Tokens, %struct.Tokens* %12, i32 0, i32 4, !dbg !4799
  %14 = call i32 @_obstack_begin(%struct.obstack* %13, i64 0, i64 0, i8* (i64)* @malloc, void (i8*)* @free), !dbg !4799
  %15 = load %struct.Tokens*, %struct.Tokens** %2, align 8, !dbg !4800
  %16 = getelementptr inbounds %struct.Tokens, %struct.Tokens* %15, i32 0, i32 5, !dbg !4800
  %17 = call i32 @_obstack_begin(%struct.obstack* %16, i64 0, i64 0, i8* (i64)* @malloc, void (i8*)* @free), !dbg !4800
  ret void, !dbg !4801
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @readtokens0_free(%struct.Tokens* %0) #3 !dbg !4802 {
  %2 = alloca %struct.Tokens*, align 8
  %3 = alloca %struct.obstack*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %struct.obstack*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca %struct.obstack*, align 8
  %8 = alloca i8*, align 8
  store %struct.Tokens* %0, %struct.Tokens** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.Tokens** %2, metadata !4803, metadata !DIExpression()), !dbg !4804
  call void @llvm.dbg.declare(metadata %struct.obstack** %3, metadata !4805, metadata !DIExpression()), !dbg !4808
  %9 = load %struct.Tokens*, %struct.Tokens** %2, align 8, !dbg !4808
  %10 = getelementptr inbounds %struct.Tokens, %struct.Tokens* %9, i32 0, i32 3, !dbg !4808
  store %struct.obstack* %10, %struct.obstack** %3, align 8, !dbg !4808
  call void @llvm.dbg.declare(metadata i8** %4, metadata !4809, metadata !DIExpression()), !dbg !4808
  store i8* null, i8** %4, align 8, !dbg !4808
  %11 = load i8*, i8** %4, align 8, !dbg !4810
  %12 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !4810
  %13 = getelementptr inbounds %struct.obstack, %struct.obstack* %12, i32 0, i32 1, !dbg !4810
  %14 = load %struct._obstack_chunk*, %struct._obstack_chunk** %13, align 8, !dbg !4810
  %15 = bitcast %struct._obstack_chunk* %14 to i8*, !dbg !4810
  %16 = icmp ugt i8* %11, %15, !dbg !4810
  br i1 %16, label %17, label %29, !dbg !4810

17:                                               ; preds = %1
  %18 = load i8*, i8** %4, align 8, !dbg !4810
  %19 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !4810
  %20 = getelementptr inbounds %struct.obstack, %struct.obstack* %19, i32 0, i32 4, !dbg !4810
  %21 = load i8*, i8** %20, align 8, !dbg !4810
  %22 = icmp ult i8* %18, %21, !dbg !4810
  br i1 %22, label %23, label %29, !dbg !4808

23:                                               ; preds = %17
  %24 = load i8*, i8** %4, align 8, !dbg !4810
  %25 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !4810
  %26 = getelementptr inbounds %struct.obstack, %struct.obstack* %25, i32 0, i32 2, !dbg !4810
  store i8* %24, i8** %26, align 8, !dbg !4810
  %27 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !4810
  %28 = getelementptr inbounds %struct.obstack, %struct.obstack* %27, i32 0, i32 3, !dbg !4810
  store i8* %24, i8** %28, align 8, !dbg !4810
  br label %32, !dbg !4810

29:                                               ; preds = %17, %1
  %30 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !4810
  %31 = load i8*, i8** %4, align 8, !dbg !4810
  call void @_obstack_free(%struct.obstack* %30, i8* %31), !dbg !4810
  br label %32

32:                                               ; preds = %29, %23
  call void @llvm.dbg.declare(metadata %struct.obstack** %5, metadata !4812, metadata !DIExpression()), !dbg !4814
  %33 = load %struct.Tokens*, %struct.Tokens** %2, align 8, !dbg !4814
  %34 = getelementptr inbounds %struct.Tokens, %struct.Tokens* %33, i32 0, i32 4, !dbg !4814
  store %struct.obstack* %34, %struct.obstack** %5, align 8, !dbg !4814
  call void @llvm.dbg.declare(metadata i8** %6, metadata !4815, metadata !DIExpression()), !dbg !4814
  store i8* null, i8** %6, align 8, !dbg !4814
  %35 = load i8*, i8** %6, align 8, !dbg !4816
  %36 = load %struct.obstack*, %struct.obstack** %5, align 8, !dbg !4816
  %37 = getelementptr inbounds %struct.obstack, %struct.obstack* %36, i32 0, i32 1, !dbg !4816
  %38 = load %struct._obstack_chunk*, %struct._obstack_chunk** %37, align 8, !dbg !4816
  %39 = bitcast %struct._obstack_chunk* %38 to i8*, !dbg !4816
  %40 = icmp ugt i8* %35, %39, !dbg !4816
  br i1 %40, label %41, label %53, !dbg !4816

41:                                               ; preds = %32
  %42 = load i8*, i8** %6, align 8, !dbg !4816
  %43 = load %struct.obstack*, %struct.obstack** %5, align 8, !dbg !4816
  %44 = getelementptr inbounds %struct.obstack, %struct.obstack* %43, i32 0, i32 4, !dbg !4816
  %45 = load i8*, i8** %44, align 8, !dbg !4816
  %46 = icmp ult i8* %42, %45, !dbg !4816
  br i1 %46, label %47, label %53, !dbg !4814

47:                                               ; preds = %41
  %48 = load i8*, i8** %6, align 8, !dbg !4816
  %49 = load %struct.obstack*, %struct.obstack** %5, align 8, !dbg !4816
  %50 = getelementptr inbounds %struct.obstack, %struct.obstack* %49, i32 0, i32 2, !dbg !4816
  store i8* %48, i8** %50, align 8, !dbg !4816
  %51 = load %struct.obstack*, %struct.obstack** %5, align 8, !dbg !4816
  %52 = getelementptr inbounds %struct.obstack, %struct.obstack* %51, i32 0, i32 3, !dbg !4816
  store i8* %48, i8** %52, align 8, !dbg !4816
  br label %56, !dbg !4816

53:                                               ; preds = %41, %32
  %54 = load %struct.obstack*, %struct.obstack** %5, align 8, !dbg !4816
  %55 = load i8*, i8** %6, align 8, !dbg !4816
  call void @_obstack_free(%struct.obstack* %54, i8* %55), !dbg !4816
  br label %56

56:                                               ; preds = %53, %47
  call void @llvm.dbg.declare(metadata %struct.obstack** %7, metadata !4818, metadata !DIExpression()), !dbg !4820
  %57 = load %struct.Tokens*, %struct.Tokens** %2, align 8, !dbg !4820
  %58 = getelementptr inbounds %struct.Tokens, %struct.Tokens* %57, i32 0, i32 5, !dbg !4820
  store %struct.obstack* %58, %struct.obstack** %7, align 8, !dbg !4820
  call void @llvm.dbg.declare(metadata i8** %8, metadata !4821, metadata !DIExpression()), !dbg !4820
  store i8* null, i8** %8, align 8, !dbg !4820
  %59 = load i8*, i8** %8, align 8, !dbg !4822
  %60 = load %struct.obstack*, %struct.obstack** %7, align 8, !dbg !4822
  %61 = getelementptr inbounds %struct.obstack, %struct.obstack* %60, i32 0, i32 1, !dbg !4822
  %62 = load %struct._obstack_chunk*, %struct._obstack_chunk** %61, align 8, !dbg !4822
  %63 = bitcast %struct._obstack_chunk* %62 to i8*, !dbg !4822
  %64 = icmp ugt i8* %59, %63, !dbg !4822
  br i1 %64, label %65, label %77, !dbg !4822

65:                                               ; preds = %56
  %66 = load i8*, i8** %8, align 8, !dbg !4822
  %67 = load %struct.obstack*, %struct.obstack** %7, align 8, !dbg !4822
  %68 = getelementptr inbounds %struct.obstack, %struct.obstack* %67, i32 0, i32 4, !dbg !4822
  %69 = load i8*, i8** %68, align 8, !dbg !4822
  %70 = icmp ult i8* %66, %69, !dbg !4822
  br i1 %70, label %71, label %77, !dbg !4820

71:                                               ; preds = %65
  %72 = load i8*, i8** %8, align 8, !dbg !4822
  %73 = load %struct.obstack*, %struct.obstack** %7, align 8, !dbg !4822
  %74 = getelementptr inbounds %struct.obstack, %struct.obstack* %73, i32 0, i32 2, !dbg !4822
  store i8* %72, i8** %74, align 8, !dbg !4822
  %75 = load %struct.obstack*, %struct.obstack** %7, align 8, !dbg !4822
  %76 = getelementptr inbounds %struct.obstack, %struct.obstack* %75, i32 0, i32 3, !dbg !4822
  store i8* %72, i8** %76, align 8, !dbg !4822
  br label %80, !dbg !4822

77:                                               ; preds = %65, %56
  %78 = load %struct.obstack*, %struct.obstack** %7, align 8, !dbg !4822
  %79 = load i8*, i8** %8, align 8, !dbg !4822
  call void @_obstack_free(%struct.obstack* %78, i8* %79), !dbg !4822
  br label %80

80:                                               ; preds = %77, %71
  ret void, !dbg !4824
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @readtokens0(%struct._IO_FILE* %0, %struct.Tokens* %1) #3 !dbg !4825 {
  %3 = alloca %struct._IO_FILE*, align 8
  %4 = alloca %struct.Tokens*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  %7 = alloca %struct.obstack*, align 8
  %8 = alloca i64, align 8
  %9 = alloca %struct.obstack*, align 8
  %10 = alloca %struct.obstack*, align 8
  %11 = alloca i64, align 8
  %12 = alloca %struct.obstack*, align 8
  %13 = alloca %struct.obstack*, align 8
  %14 = alloca i64, align 8
  %15 = alloca %struct.obstack*, align 8
  %16 = alloca %struct.obstack*, align 8
  %17 = alloca i64, align 8
  %18 = alloca %struct.obstack*, align 8
  %19 = alloca i8*, align 8
  %20 = alloca %struct.obstack*, align 8
  %21 = alloca i8*, align 8
  %22 = alloca i8*, align 8
  %23 = alloca %struct.obstack*, align 8
  %24 = alloca i8*, align 8
  %25 = alloca i8*, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %3, metadata !4862, metadata !DIExpression()), !dbg !4863
  store %struct.Tokens* %1, %struct.Tokens** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.Tokens** %4, metadata !4864, metadata !DIExpression()), !dbg !4865
  br label %26, !dbg !4866

26:                                               ; preds = %2, %98
  call void @llvm.dbg.declare(metadata i32* %5, metadata !4867, metadata !DIExpression()), !dbg !4869
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !4870
  %28 = call i32 @fgetc(%struct._IO_FILE* %27), !dbg !4871
  store i32 %28, i32* %5, align 4, !dbg !4869
  %29 = load i32, i32* %5, align 4, !dbg !4872
  %30 = icmp eq i32 %29, -1, !dbg !4874
  br i1 %30, label %31, label %70, !dbg !4875

31:                                               ; preds = %26
  call void @llvm.dbg.declare(metadata i64* %6, metadata !4876, metadata !DIExpression()), !dbg !4878
  call void @llvm.dbg.declare(metadata %struct.obstack** %7, metadata !4879, metadata !DIExpression()), !dbg !4883
  %32 = load %struct.Tokens*, %struct.Tokens** %4, align 8, !dbg !4883
  %33 = getelementptr inbounds %struct.Tokens, %struct.Tokens* %32, i32 0, i32 3, !dbg !4883
  store %struct.obstack* %33, %struct.obstack** %7, align 8, !dbg !4883
  %34 = load %struct.obstack*, %struct.obstack** %7, align 8, !dbg !4883
  %35 = getelementptr inbounds %struct.obstack, %struct.obstack* %34, i32 0, i32 3, !dbg !4883
  %36 = load i8*, i8** %35, align 8, !dbg !4883
  %37 = load %struct.obstack*, %struct.obstack** %7, align 8, !dbg !4883
  %38 = getelementptr inbounds %struct.obstack, %struct.obstack* %37, i32 0, i32 2, !dbg !4883
  %39 = load i8*, i8** %38, align 8, !dbg !4883
  %40 = ptrtoint i8* %36 to i64, !dbg !4883
  %41 = ptrtoint i8* %39 to i64, !dbg !4883
  %42 = sub i64 %40, %41, !dbg !4883
  store i64 %42, i64* %8, align 8, !dbg !4883
  %43 = load i64, i64* %8, align 8, !dbg !4883
  store i64 %43, i64* %6, align 8, !dbg !4878
  %44 = load i64, i64* %6, align 8, !dbg !4884
  %45 = icmp ne i64 %44, 0, !dbg !4884
  br i1 %45, label %46, label %69, !dbg !4886

46:                                               ; preds = %31
  call void @llvm.dbg.declare(metadata %struct.obstack** %9, metadata !4887, metadata !DIExpression()), !dbg !4890
  %47 = load %struct.Tokens*, %struct.Tokens** %4, align 8, !dbg !4890
  %48 = getelementptr inbounds %struct.Tokens, %struct.Tokens* %47, i32 0, i32 3, !dbg !4890
  store %struct.obstack* %48, %struct.obstack** %9, align 8, !dbg !4890
  call void @llvm.dbg.declare(metadata %struct.obstack** %10, metadata !4891, metadata !DIExpression()), !dbg !4894
  %49 = load %struct.obstack*, %struct.obstack** %9, align 8, !dbg !4894
  store %struct.obstack* %49, %struct.obstack** %10, align 8, !dbg !4894
  %50 = load %struct.obstack*, %struct.obstack** %10, align 8, !dbg !4894
  %51 = getelementptr inbounds %struct.obstack, %struct.obstack* %50, i32 0, i32 4, !dbg !4894
  %52 = load i8*, i8** %51, align 8, !dbg !4894
  %53 = load %struct.obstack*, %struct.obstack** %10, align 8, !dbg !4894
  %54 = getelementptr inbounds %struct.obstack, %struct.obstack* %53, i32 0, i32 3, !dbg !4894
  %55 = load i8*, i8** %54, align 8, !dbg !4894
  %56 = ptrtoint i8* %52 to i64, !dbg !4894
  %57 = ptrtoint i8* %55 to i64, !dbg !4894
  %58 = sub i64 %56, %57, !dbg !4894
  store i64 %58, i64* %11, align 8, !dbg !4894
  %59 = load i64, i64* %11, align 8, !dbg !4894
  %60 = icmp ult i64 %59, 1, !dbg !4895
  br i1 %60, label %61, label %63, !dbg !4890

61:                                               ; preds = %46
  %62 = load %struct.obstack*, %struct.obstack** %9, align 8, !dbg !4895
  call void @_obstack_newchunk(%struct.obstack* %62, i64 1), !dbg !4895
  br label %63, !dbg !4895

63:                                               ; preds = %61, %46
  %64 = load %struct.obstack*, %struct.obstack** %9, align 8, !dbg !4890
  %65 = getelementptr inbounds %struct.obstack, %struct.obstack* %64, i32 0, i32 3, !dbg !4890
  %66 = load i8*, i8** %65, align 8, !dbg !4890
  %67 = getelementptr inbounds i8, i8* %66, i32 1, !dbg !4890
  store i8* %67, i8** %65, align 8, !dbg !4890
  store i8 0, i8* %66, align 1, !dbg !4890
  %68 = load %struct.Tokens*, %struct.Tokens** %4, align 8, !dbg !4896
  call void @save_token(%struct.Tokens* %68), !dbg !4897
  br label %69, !dbg !4898

69:                                               ; preds = %63, %31
  br label %99, !dbg !4899

70:                                               ; preds = %26
  call void @llvm.dbg.declare(metadata %struct.obstack** %12, metadata !4900, metadata !DIExpression()), !dbg !4902
  %71 = load %struct.Tokens*, %struct.Tokens** %4, align 8, !dbg !4902
  %72 = getelementptr inbounds %struct.Tokens, %struct.Tokens* %71, i32 0, i32 3, !dbg !4902
  store %struct.obstack* %72, %struct.obstack** %12, align 8, !dbg !4902
  call void @llvm.dbg.declare(metadata %struct.obstack** %13, metadata !4903, metadata !DIExpression()), !dbg !4906
  %73 = load %struct.obstack*, %struct.obstack** %12, align 8, !dbg !4906
  store %struct.obstack* %73, %struct.obstack** %13, align 8, !dbg !4906
  %74 = load %struct.obstack*, %struct.obstack** %13, align 8, !dbg !4906
  %75 = getelementptr inbounds %struct.obstack, %struct.obstack* %74, i32 0, i32 4, !dbg !4906
  %76 = load i8*, i8** %75, align 8, !dbg !4906
  %77 = load %struct.obstack*, %struct.obstack** %13, align 8, !dbg !4906
  %78 = getelementptr inbounds %struct.obstack, %struct.obstack* %77, i32 0, i32 3, !dbg !4906
  %79 = load i8*, i8** %78, align 8, !dbg !4906
  %80 = ptrtoint i8* %76 to i64, !dbg !4906
  %81 = ptrtoint i8* %79 to i64, !dbg !4906
  %82 = sub i64 %80, %81, !dbg !4906
  store i64 %82, i64* %14, align 8, !dbg !4906
  %83 = load i64, i64* %14, align 8, !dbg !4906
  %84 = icmp ult i64 %83, 1, !dbg !4907
  br i1 %84, label %85, label %87, !dbg !4902

85:                                               ; preds = %70
  %86 = load %struct.obstack*, %struct.obstack** %12, align 8, !dbg !4907
  call void @_obstack_newchunk(%struct.obstack* %86, i64 1), !dbg !4907
  br label %87, !dbg !4907

87:                                               ; preds = %85, %70
  %88 = load i32, i32* %5, align 4, !dbg !4902
  %89 = trunc i32 %88 to i8, !dbg !4902
  %90 = load %struct.obstack*, %struct.obstack** %12, align 8, !dbg !4902
  %91 = getelementptr inbounds %struct.obstack, %struct.obstack* %90, i32 0, i32 3, !dbg !4902
  %92 = load i8*, i8** %91, align 8, !dbg !4902
  %93 = getelementptr inbounds i8, i8* %92, i32 1, !dbg !4902
  store i8* %93, i8** %91, align 8, !dbg !4902
  store i8 %89, i8* %92, align 1, !dbg !4902
  %94 = load i32, i32* %5, align 4, !dbg !4908
  %95 = icmp eq i32 %94, 0, !dbg !4910
  br i1 %95, label %96, label %98, !dbg !4911

96:                                               ; preds = %87
  %97 = load %struct.Tokens*, %struct.Tokens** %4, align 8, !dbg !4912
  call void @save_token(%struct.Tokens* %97), !dbg !4913
  br label %98, !dbg !4913

98:                                               ; preds = %96, %87
  br label %26, !dbg !4866, !llvm.loop !4914

99:                                               ; preds = %69
  call void @llvm.dbg.declare(metadata %struct.obstack** %15, metadata !4916, metadata !DIExpression()), !dbg !4918
  %100 = load %struct.Tokens*, %struct.Tokens** %4, align 8, !dbg !4918
  %101 = getelementptr inbounds %struct.Tokens, %struct.Tokens* %100, i32 0, i32 4, !dbg !4918
  store %struct.obstack* %101, %struct.obstack** %15, align 8, !dbg !4918
  call void @llvm.dbg.declare(metadata %struct.obstack** %16, metadata !4919, metadata !DIExpression()), !dbg !4922
  %102 = load %struct.obstack*, %struct.obstack** %15, align 8, !dbg !4922
  store %struct.obstack* %102, %struct.obstack** %16, align 8, !dbg !4922
  %103 = load %struct.obstack*, %struct.obstack** %16, align 8, !dbg !4922
  %104 = getelementptr inbounds %struct.obstack, %struct.obstack* %103, i32 0, i32 4, !dbg !4922
  %105 = load i8*, i8** %104, align 8, !dbg !4922
  %106 = load %struct.obstack*, %struct.obstack** %16, align 8, !dbg !4922
  %107 = getelementptr inbounds %struct.obstack, %struct.obstack* %106, i32 0, i32 3, !dbg !4922
  %108 = load i8*, i8** %107, align 8, !dbg !4922
  %109 = ptrtoint i8* %105 to i64, !dbg !4922
  %110 = ptrtoint i8* %108 to i64, !dbg !4922
  %111 = sub i64 %109, %110, !dbg !4922
  store i64 %111, i64* %17, align 8, !dbg !4922
  %112 = load i64, i64* %17, align 8, !dbg !4922
  %113 = icmp ult i64 %112, 8, !dbg !4923
  br i1 %113, label %114, label %116, !dbg !4918

114:                                              ; preds = %99
  %115 = load %struct.obstack*, %struct.obstack** %15, align 8, !dbg !4923
  call void @_obstack_newchunk(%struct.obstack* %115, i64 8), !dbg !4923
  br label %116, !dbg !4923

116:                                              ; preds = %114, %99
  call void @llvm.dbg.declare(metadata %struct.obstack** %18, metadata !4924, metadata !DIExpression()), !dbg !4926
  %117 = load %struct.obstack*, %struct.obstack** %15, align 8, !dbg !4926
  store %struct.obstack* %117, %struct.obstack** %18, align 8, !dbg !4926
  call void @llvm.dbg.declare(metadata i8** %19, metadata !4927, metadata !DIExpression()), !dbg !4926
  %118 = load %struct.obstack*, %struct.obstack** %18, align 8, !dbg !4926
  %119 = getelementptr inbounds %struct.obstack, %struct.obstack* %118, i32 0, i32 3, !dbg !4926
  %120 = load i8*, i8** %119, align 8, !dbg !4926
  store i8* %120, i8** %19, align 8, !dbg !4926
  %121 = load i8*, i8** %19, align 8, !dbg !4926
  %122 = bitcast i8* %121 to i8**, !dbg !4926
  store i8* null, i8** %122, align 8, !dbg !4926
  %123 = load %struct.obstack*, %struct.obstack** %18, align 8, !dbg !4926
  %124 = getelementptr inbounds %struct.obstack, %struct.obstack* %123, i32 0, i32 3, !dbg !4926
  %125 = load i8*, i8** %124, align 8, !dbg !4926
  %126 = getelementptr inbounds i8, i8* %125, i64 8, !dbg !4926
  store i8* %126, i8** %124, align 8, !dbg !4926
  call void @llvm.dbg.declare(metadata %struct.obstack** %20, metadata !4928, metadata !DIExpression()), !dbg !4930
  %127 = load %struct.Tokens*, %struct.Tokens** %4, align 8, !dbg !4930
  %128 = getelementptr inbounds %struct.Tokens, %struct.Tokens* %127, i32 0, i32 4, !dbg !4930
  store %struct.obstack* %128, %struct.obstack** %20, align 8, !dbg !4930
  call void @llvm.dbg.declare(metadata i8** %21, metadata !4931, metadata !DIExpression()), !dbg !4930
  %129 = load %struct.obstack*, %struct.obstack** %20, align 8, !dbg !4930
  %130 = getelementptr inbounds %struct.obstack, %struct.obstack* %129, i32 0, i32 2, !dbg !4930
  %131 = load i8*, i8** %130, align 8, !dbg !4930
  store i8* %131, i8** %21, align 8, !dbg !4930
  %132 = load %struct.obstack*, %struct.obstack** %20, align 8, !dbg !4932
  %133 = getelementptr inbounds %struct.obstack, %struct.obstack* %132, i32 0, i32 3, !dbg !4932
  %134 = load i8*, i8** %133, align 8, !dbg !4932
  %135 = load i8*, i8** %21, align 8, !dbg !4932
  %136 = icmp eq i8* %134, %135, !dbg !4932
  br i1 %136, label %137, label %143, !dbg !4930

137:                                              ; preds = %116
  %138 = load %struct.obstack*, %struct.obstack** %20, align 8, !dbg !4932
  %139 = getelementptr inbounds %struct.obstack, %struct.obstack* %138, i32 0, i32 10, !dbg !4932
  %140 = load i8, i8* %139, align 8, !dbg !4932
  %141 = and i8 %140, -3, !dbg !4932
  %142 = or i8 %141, 2, !dbg !4932
  store i8 %142, i8* %139, align 8, !dbg !4932
  br label %143, !dbg !4932

143:                                              ; preds = %137, %116
  %144 = load %struct.obstack*, %struct.obstack** %20, align 8, !dbg !4930
  %145 = getelementptr inbounds %struct.obstack, %struct.obstack* %144, i32 0, i32 3, !dbg !4930
  %146 = load i8*, i8** %145, align 8, !dbg !4930
  %147 = ptrtoint i8* %146 to i64, !dbg !4930
  %148 = sub i64 %147, 0, !dbg !4930
  %149 = load %struct.obstack*, %struct.obstack** %20, align 8, !dbg !4930
  %150 = getelementptr inbounds %struct.obstack, %struct.obstack* %149, i32 0, i32 6, !dbg !4930
  %151 = load i64, i64* %150, align 8, !dbg !4930
  %152 = add i64 %148, %151, !dbg !4930
  %153 = load %struct.obstack*, %struct.obstack** %20, align 8, !dbg !4930
  %154 = getelementptr inbounds %struct.obstack, %struct.obstack* %153, i32 0, i32 6, !dbg !4930
  %155 = load i64, i64* %154, align 8, !dbg !4930
  %156 = xor i64 %155, -1, !dbg !4930
  %157 = and i64 %152, %156, !dbg !4930
  %158 = getelementptr inbounds i8, i8* null, i64 %157, !dbg !4930
  %159 = load %struct.obstack*, %struct.obstack** %20, align 8, !dbg !4930
  %160 = getelementptr inbounds %struct.obstack, %struct.obstack* %159, i32 0, i32 3, !dbg !4930
  store i8* %158, i8** %160, align 8, !dbg !4930
  %161 = load %struct.obstack*, %struct.obstack** %20, align 8, !dbg !4934
  %162 = getelementptr inbounds %struct.obstack, %struct.obstack* %161, i32 0, i32 3, !dbg !4934
  %163 = load i8*, i8** %162, align 8, !dbg !4934
  %164 = load %struct.obstack*, %struct.obstack** %20, align 8, !dbg !4934
  %165 = getelementptr inbounds %struct.obstack, %struct.obstack* %164, i32 0, i32 1, !dbg !4934
  %166 = load %struct._obstack_chunk*, %struct._obstack_chunk** %165, align 8, !dbg !4934
  %167 = bitcast %struct._obstack_chunk* %166 to i8*, !dbg !4934
  %168 = ptrtoint i8* %163 to i64, !dbg !4934
  %169 = ptrtoint i8* %167 to i64, !dbg !4934
  %170 = sub i64 %168, %169, !dbg !4934
  %171 = load %struct.obstack*, %struct.obstack** %20, align 8, !dbg !4934
  %172 = getelementptr inbounds %struct.obstack, %struct.obstack* %171, i32 0, i32 4, !dbg !4934
  %173 = load i8*, i8** %172, align 8, !dbg !4934
  %174 = load %struct.obstack*, %struct.obstack** %20, align 8, !dbg !4934
  %175 = getelementptr inbounds %struct.obstack, %struct.obstack* %174, i32 0, i32 1, !dbg !4934
  %176 = load %struct._obstack_chunk*, %struct._obstack_chunk** %175, align 8, !dbg !4934
  %177 = bitcast %struct._obstack_chunk* %176 to i8*, !dbg !4934
  %178 = ptrtoint i8* %173 to i64, !dbg !4934
  %179 = ptrtoint i8* %177 to i64, !dbg !4934
  %180 = sub i64 %178, %179, !dbg !4934
  %181 = icmp ugt i64 %170, %180, !dbg !4934
  br i1 %181, label %182, label %188, !dbg !4930

182:                                              ; preds = %143
  %183 = load %struct.obstack*, %struct.obstack** %20, align 8, !dbg !4934
  %184 = getelementptr inbounds %struct.obstack, %struct.obstack* %183, i32 0, i32 4, !dbg !4934
  %185 = load i8*, i8** %184, align 8, !dbg !4934
  %186 = load %struct.obstack*, %struct.obstack** %20, align 8, !dbg !4934
  %187 = getelementptr inbounds %struct.obstack, %struct.obstack* %186, i32 0, i32 3, !dbg !4934
  store i8* %185, i8** %187, align 8, !dbg !4934
  br label %188, !dbg !4934

188:                                              ; preds = %182, %143
  %189 = load %struct.obstack*, %struct.obstack** %20, align 8, !dbg !4930
  %190 = getelementptr inbounds %struct.obstack, %struct.obstack* %189, i32 0, i32 3, !dbg !4930
  %191 = load i8*, i8** %190, align 8, !dbg !4930
  %192 = load %struct.obstack*, %struct.obstack** %20, align 8, !dbg !4930
  %193 = getelementptr inbounds %struct.obstack, %struct.obstack* %192, i32 0, i32 2, !dbg !4930
  store i8* %191, i8** %193, align 8, !dbg !4930
  %194 = load i8*, i8** %21, align 8, !dbg !4930
  store i8* %194, i8** %22, align 8, !dbg !4930
  %195 = load i8*, i8** %22, align 8, !dbg !4930
  %196 = bitcast i8* %195 to i8**, !dbg !4936
  %197 = load %struct.Tokens*, %struct.Tokens** %4, align 8, !dbg !4937
  %198 = getelementptr inbounds %struct.Tokens, %struct.Tokens* %197, i32 0, i32 1, !dbg !4938
  store i8** %196, i8*** %198, align 8, !dbg !4939
  call void @llvm.dbg.declare(metadata %struct.obstack** %23, metadata !4940, metadata !DIExpression()), !dbg !4942
  %199 = load %struct.Tokens*, %struct.Tokens** %4, align 8, !dbg !4942
  %200 = getelementptr inbounds %struct.Tokens, %struct.Tokens* %199, i32 0, i32 5, !dbg !4942
  store %struct.obstack* %200, %struct.obstack** %23, align 8, !dbg !4942
  call void @llvm.dbg.declare(metadata i8** %24, metadata !4943, metadata !DIExpression()), !dbg !4942
  %201 = load %struct.obstack*, %struct.obstack** %23, align 8, !dbg !4942
  %202 = getelementptr inbounds %struct.obstack, %struct.obstack* %201, i32 0, i32 2, !dbg !4942
  %203 = load i8*, i8** %202, align 8, !dbg !4942
  store i8* %203, i8** %24, align 8, !dbg !4942
  %204 = load %struct.obstack*, %struct.obstack** %23, align 8, !dbg !4944
  %205 = getelementptr inbounds %struct.obstack, %struct.obstack* %204, i32 0, i32 3, !dbg !4944
  %206 = load i8*, i8** %205, align 8, !dbg !4944
  %207 = load i8*, i8** %24, align 8, !dbg !4944
  %208 = icmp eq i8* %206, %207, !dbg !4944
  br i1 %208, label %209, label %215, !dbg !4942

209:                                              ; preds = %188
  %210 = load %struct.obstack*, %struct.obstack** %23, align 8, !dbg !4944
  %211 = getelementptr inbounds %struct.obstack, %struct.obstack* %210, i32 0, i32 10, !dbg !4944
  %212 = load i8, i8* %211, align 8, !dbg !4944
  %213 = and i8 %212, -3, !dbg !4944
  %214 = or i8 %213, 2, !dbg !4944
  store i8 %214, i8* %211, align 8, !dbg !4944
  br label %215, !dbg !4944

215:                                              ; preds = %209, %188
  %216 = load %struct.obstack*, %struct.obstack** %23, align 8, !dbg !4942
  %217 = getelementptr inbounds %struct.obstack, %struct.obstack* %216, i32 0, i32 3, !dbg !4942
  %218 = load i8*, i8** %217, align 8, !dbg !4942
  %219 = ptrtoint i8* %218 to i64, !dbg !4942
  %220 = sub i64 %219, 0, !dbg !4942
  %221 = load %struct.obstack*, %struct.obstack** %23, align 8, !dbg !4942
  %222 = getelementptr inbounds %struct.obstack, %struct.obstack* %221, i32 0, i32 6, !dbg !4942
  %223 = load i64, i64* %222, align 8, !dbg !4942
  %224 = add i64 %220, %223, !dbg !4942
  %225 = load %struct.obstack*, %struct.obstack** %23, align 8, !dbg !4942
  %226 = getelementptr inbounds %struct.obstack, %struct.obstack* %225, i32 0, i32 6, !dbg !4942
  %227 = load i64, i64* %226, align 8, !dbg !4942
  %228 = xor i64 %227, -1, !dbg !4942
  %229 = and i64 %224, %228, !dbg !4942
  %230 = getelementptr inbounds i8, i8* null, i64 %229, !dbg !4942
  %231 = load %struct.obstack*, %struct.obstack** %23, align 8, !dbg !4942
  %232 = getelementptr inbounds %struct.obstack, %struct.obstack* %231, i32 0, i32 3, !dbg !4942
  store i8* %230, i8** %232, align 8, !dbg !4942
  %233 = load %struct.obstack*, %struct.obstack** %23, align 8, !dbg !4946
  %234 = getelementptr inbounds %struct.obstack, %struct.obstack* %233, i32 0, i32 3, !dbg !4946
  %235 = load i8*, i8** %234, align 8, !dbg !4946
  %236 = load %struct.obstack*, %struct.obstack** %23, align 8, !dbg !4946
  %237 = getelementptr inbounds %struct.obstack, %struct.obstack* %236, i32 0, i32 1, !dbg !4946
  %238 = load %struct._obstack_chunk*, %struct._obstack_chunk** %237, align 8, !dbg !4946
  %239 = bitcast %struct._obstack_chunk* %238 to i8*, !dbg !4946
  %240 = ptrtoint i8* %235 to i64, !dbg !4946
  %241 = ptrtoint i8* %239 to i64, !dbg !4946
  %242 = sub i64 %240, %241, !dbg !4946
  %243 = load %struct.obstack*, %struct.obstack** %23, align 8, !dbg !4946
  %244 = getelementptr inbounds %struct.obstack, %struct.obstack* %243, i32 0, i32 4, !dbg !4946
  %245 = load i8*, i8** %244, align 8, !dbg !4946
  %246 = load %struct.obstack*, %struct.obstack** %23, align 8, !dbg !4946
  %247 = getelementptr inbounds %struct.obstack, %struct.obstack* %246, i32 0, i32 1, !dbg !4946
  %248 = load %struct._obstack_chunk*, %struct._obstack_chunk** %247, align 8, !dbg !4946
  %249 = bitcast %struct._obstack_chunk* %248 to i8*, !dbg !4946
  %250 = ptrtoint i8* %245 to i64, !dbg !4946
  %251 = ptrtoint i8* %249 to i64, !dbg !4946
  %252 = sub i64 %250, %251, !dbg !4946
  %253 = icmp ugt i64 %242, %252, !dbg !4946
  br i1 %253, label %254, label %260, !dbg !4942

254:                                              ; preds = %215
  %255 = load %struct.obstack*, %struct.obstack** %23, align 8, !dbg !4946
  %256 = getelementptr inbounds %struct.obstack, %struct.obstack* %255, i32 0, i32 4, !dbg !4946
  %257 = load i8*, i8** %256, align 8, !dbg !4946
  %258 = load %struct.obstack*, %struct.obstack** %23, align 8, !dbg !4946
  %259 = getelementptr inbounds %struct.obstack, %struct.obstack* %258, i32 0, i32 3, !dbg !4946
  store i8* %257, i8** %259, align 8, !dbg !4946
  br label %260, !dbg !4946

260:                                              ; preds = %254, %215
  %261 = load %struct.obstack*, %struct.obstack** %23, align 8, !dbg !4942
  %262 = getelementptr inbounds %struct.obstack, %struct.obstack* %261, i32 0, i32 3, !dbg !4942
  %263 = load i8*, i8** %262, align 8, !dbg !4942
  %264 = load %struct.obstack*, %struct.obstack** %23, align 8, !dbg !4942
  %265 = getelementptr inbounds %struct.obstack, %struct.obstack* %264, i32 0, i32 2, !dbg !4942
  store i8* %263, i8** %265, align 8, !dbg !4942
  %266 = load i8*, i8** %24, align 8, !dbg !4942
  store i8* %266, i8** %25, align 8, !dbg !4942
  %267 = load i8*, i8** %25, align 8, !dbg !4942
  %268 = bitcast i8* %267 to i64*, !dbg !4948
  %269 = load %struct.Tokens*, %struct.Tokens** %4, align 8, !dbg !4949
  %270 = getelementptr inbounds %struct.Tokens, %struct.Tokens* %269, i32 0, i32 2, !dbg !4950
  store i64* %268, i64** %270, align 8, !dbg !4951
  %271 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !4952
  %272 = call i32 @ferror(%struct._IO_FILE* %271) #15, !dbg !4953
  %273 = icmp ne i32 %272, 0, !dbg !4954
  %274 = xor i1 %273, true, !dbg !4954
  ret i1 %274, !dbg !4955
}

declare dso_local i32 @fgetc(%struct._IO_FILE*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @save_token(%struct.Tokens* %0) #3 !dbg !4956 {
  %2 = alloca %struct.Tokens*, align 8
  %3 = alloca i64, align 8
  %4 = alloca %struct.obstack*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  %7 = alloca %struct.obstack*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca %struct.obstack*, align 8
  %11 = alloca %struct.obstack*, align 8
  %12 = alloca i64, align 8
  %13 = alloca %struct.obstack*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca %struct.obstack*, align 8
  %16 = alloca i64, align 8
  %17 = alloca %struct.obstack*, align 8
  %18 = alloca i64, align 8
  store %struct.Tokens* %0, %struct.Tokens** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.Tokens** %2, metadata !4957, metadata !DIExpression()), !dbg !4958
  call void @llvm.dbg.declare(metadata i64* %3, metadata !4959, metadata !DIExpression()), !dbg !4960
  call void @llvm.dbg.declare(metadata %struct.obstack** %4, metadata !4961, metadata !DIExpression()), !dbg !4963
  %19 = load %struct.Tokens*, %struct.Tokens** %2, align 8, !dbg !4963
  %20 = getelementptr inbounds %struct.Tokens, %struct.Tokens* %19, i32 0, i32 3, !dbg !4963
  store %struct.obstack* %20, %struct.obstack** %4, align 8, !dbg !4963
  %21 = load %struct.obstack*, %struct.obstack** %4, align 8, !dbg !4963
  %22 = getelementptr inbounds %struct.obstack, %struct.obstack* %21, i32 0, i32 3, !dbg !4963
  %23 = load i8*, i8** %22, align 8, !dbg !4963
  %24 = load %struct.obstack*, %struct.obstack** %4, align 8, !dbg !4963
  %25 = getelementptr inbounds %struct.obstack, %struct.obstack* %24, i32 0, i32 2, !dbg !4963
  %26 = load i8*, i8** %25, align 8, !dbg !4963
  %27 = ptrtoint i8* %23 to i64, !dbg !4963
  %28 = ptrtoint i8* %26 to i64, !dbg !4963
  %29 = sub i64 %27, %28, !dbg !4963
  store i64 %29, i64* %5, align 8, !dbg !4963
  %30 = load i64, i64* %5, align 8, !dbg !4963
  %31 = sub i64 %30, 1, !dbg !4964
  store i64 %31, i64* %3, align 8, !dbg !4960
  call void @llvm.dbg.declare(metadata i8** %6, metadata !4965, metadata !DIExpression()), !dbg !4966
  call void @llvm.dbg.declare(metadata %struct.obstack** %7, metadata !4967, metadata !DIExpression()), !dbg !4969
  %32 = load %struct.Tokens*, %struct.Tokens** %2, align 8, !dbg !4969
  %33 = getelementptr inbounds %struct.Tokens, %struct.Tokens* %32, i32 0, i32 3, !dbg !4969
  store %struct.obstack* %33, %struct.obstack** %7, align 8, !dbg !4969
  call void @llvm.dbg.declare(metadata i8** %8, metadata !4970, metadata !DIExpression()), !dbg !4969
  %34 = load %struct.obstack*, %struct.obstack** %7, align 8, !dbg !4969
  %35 = getelementptr inbounds %struct.obstack, %struct.obstack* %34, i32 0, i32 2, !dbg !4969
  %36 = load i8*, i8** %35, align 8, !dbg !4969
  store i8* %36, i8** %8, align 8, !dbg !4969
  %37 = load %struct.obstack*, %struct.obstack** %7, align 8, !dbg !4971
  %38 = getelementptr inbounds %struct.obstack, %struct.obstack* %37, i32 0, i32 3, !dbg !4971
  %39 = load i8*, i8** %38, align 8, !dbg !4971
  %40 = load i8*, i8** %8, align 8, !dbg !4971
  %41 = icmp eq i8* %39, %40, !dbg !4971
  br i1 %41, label %42, label %48, !dbg !4969

42:                                               ; preds = %1
  %43 = load %struct.obstack*, %struct.obstack** %7, align 8, !dbg !4971
  %44 = getelementptr inbounds %struct.obstack, %struct.obstack* %43, i32 0, i32 10, !dbg !4971
  %45 = load i8, i8* %44, align 8, !dbg !4971
  %46 = and i8 %45, -3, !dbg !4971
  %47 = or i8 %46, 2, !dbg !4971
  store i8 %47, i8* %44, align 8, !dbg !4971
  br label %48, !dbg !4971

48:                                               ; preds = %42, %1
  %49 = load %struct.obstack*, %struct.obstack** %7, align 8, !dbg !4969
  %50 = getelementptr inbounds %struct.obstack, %struct.obstack* %49, i32 0, i32 3, !dbg !4969
  %51 = load i8*, i8** %50, align 8, !dbg !4969
  %52 = ptrtoint i8* %51 to i64, !dbg !4969
  %53 = sub i64 %52, 0, !dbg !4969
  %54 = load %struct.obstack*, %struct.obstack** %7, align 8, !dbg !4969
  %55 = getelementptr inbounds %struct.obstack, %struct.obstack* %54, i32 0, i32 6, !dbg !4969
  %56 = load i64, i64* %55, align 8, !dbg !4969
  %57 = add i64 %53, %56, !dbg !4969
  %58 = load %struct.obstack*, %struct.obstack** %7, align 8, !dbg !4969
  %59 = getelementptr inbounds %struct.obstack, %struct.obstack* %58, i32 0, i32 6, !dbg !4969
  %60 = load i64, i64* %59, align 8, !dbg !4969
  %61 = xor i64 %60, -1, !dbg !4969
  %62 = and i64 %57, %61, !dbg !4969
  %63 = getelementptr inbounds i8, i8* null, i64 %62, !dbg !4969
  %64 = load %struct.obstack*, %struct.obstack** %7, align 8, !dbg !4969
  %65 = getelementptr inbounds %struct.obstack, %struct.obstack* %64, i32 0, i32 3, !dbg !4969
  store i8* %63, i8** %65, align 8, !dbg !4969
  %66 = load %struct.obstack*, %struct.obstack** %7, align 8, !dbg !4973
  %67 = getelementptr inbounds %struct.obstack, %struct.obstack* %66, i32 0, i32 3, !dbg !4973
  %68 = load i8*, i8** %67, align 8, !dbg !4973
  %69 = load %struct.obstack*, %struct.obstack** %7, align 8, !dbg !4973
  %70 = getelementptr inbounds %struct.obstack, %struct.obstack* %69, i32 0, i32 1, !dbg !4973
  %71 = load %struct._obstack_chunk*, %struct._obstack_chunk** %70, align 8, !dbg !4973
  %72 = bitcast %struct._obstack_chunk* %71 to i8*, !dbg !4973
  %73 = ptrtoint i8* %68 to i64, !dbg !4973
  %74 = ptrtoint i8* %72 to i64, !dbg !4973
  %75 = sub i64 %73, %74, !dbg !4973
  %76 = load %struct.obstack*, %struct.obstack** %7, align 8, !dbg !4973
  %77 = getelementptr inbounds %struct.obstack, %struct.obstack* %76, i32 0, i32 4, !dbg !4973
  %78 = load i8*, i8** %77, align 8, !dbg !4973
  %79 = load %struct.obstack*, %struct.obstack** %7, align 8, !dbg !4973
  %80 = getelementptr inbounds %struct.obstack, %struct.obstack* %79, i32 0, i32 1, !dbg !4973
  %81 = load %struct._obstack_chunk*, %struct._obstack_chunk** %80, align 8, !dbg !4973
  %82 = bitcast %struct._obstack_chunk* %81 to i8*, !dbg !4973
  %83 = ptrtoint i8* %78 to i64, !dbg !4973
  %84 = ptrtoint i8* %82 to i64, !dbg !4973
  %85 = sub i64 %83, %84, !dbg !4973
  %86 = icmp ugt i64 %75, %85, !dbg !4973
  br i1 %86, label %87, label %93, !dbg !4969

87:                                               ; preds = %48
  %88 = load %struct.obstack*, %struct.obstack** %7, align 8, !dbg !4973
  %89 = getelementptr inbounds %struct.obstack, %struct.obstack* %88, i32 0, i32 4, !dbg !4973
  %90 = load i8*, i8** %89, align 8, !dbg !4973
  %91 = load %struct.obstack*, %struct.obstack** %7, align 8, !dbg !4973
  %92 = getelementptr inbounds %struct.obstack, %struct.obstack* %91, i32 0, i32 3, !dbg !4973
  store i8* %90, i8** %92, align 8, !dbg !4973
  br label %93, !dbg !4973

93:                                               ; preds = %87, %48
  %94 = load %struct.obstack*, %struct.obstack** %7, align 8, !dbg !4969
  %95 = getelementptr inbounds %struct.obstack, %struct.obstack* %94, i32 0, i32 3, !dbg !4969
  %96 = load i8*, i8** %95, align 8, !dbg !4969
  %97 = load %struct.obstack*, %struct.obstack** %7, align 8, !dbg !4969
  %98 = getelementptr inbounds %struct.obstack, %struct.obstack* %97, i32 0, i32 2, !dbg !4969
  store i8* %96, i8** %98, align 8, !dbg !4969
  %99 = load i8*, i8** %8, align 8, !dbg !4969
  store i8* %99, i8** %9, align 8, !dbg !4969
  %100 = load i8*, i8** %9, align 8, !dbg !4969
  store i8* %100, i8** %6, align 8, !dbg !4966
  call void @llvm.dbg.declare(metadata %struct.obstack** %10, metadata !4975, metadata !DIExpression()), !dbg !4977
  %101 = load %struct.Tokens*, %struct.Tokens** %2, align 8, !dbg !4977
  %102 = getelementptr inbounds %struct.Tokens, %struct.Tokens* %101, i32 0, i32 4, !dbg !4977
  store %struct.obstack* %102, %struct.obstack** %10, align 8, !dbg !4977
  call void @llvm.dbg.declare(metadata %struct.obstack** %11, metadata !4978, metadata !DIExpression()), !dbg !4981
  %103 = load %struct.obstack*, %struct.obstack** %10, align 8, !dbg !4981
  store %struct.obstack* %103, %struct.obstack** %11, align 8, !dbg !4981
  %104 = load %struct.obstack*, %struct.obstack** %11, align 8, !dbg !4981
  %105 = getelementptr inbounds %struct.obstack, %struct.obstack* %104, i32 0, i32 4, !dbg !4981
  %106 = load i8*, i8** %105, align 8, !dbg !4981
  %107 = load %struct.obstack*, %struct.obstack** %11, align 8, !dbg !4981
  %108 = getelementptr inbounds %struct.obstack, %struct.obstack* %107, i32 0, i32 3, !dbg !4981
  %109 = load i8*, i8** %108, align 8, !dbg !4981
  %110 = ptrtoint i8* %106 to i64, !dbg !4981
  %111 = ptrtoint i8* %109 to i64, !dbg !4981
  %112 = sub i64 %110, %111, !dbg !4981
  store i64 %112, i64* %12, align 8, !dbg !4981
  %113 = load i64, i64* %12, align 8, !dbg !4981
  %114 = icmp ult i64 %113, 8, !dbg !4982
  br i1 %114, label %115, label %117, !dbg !4977

115:                                              ; preds = %93
  %116 = load %struct.obstack*, %struct.obstack** %10, align 8, !dbg !4982
  call void @_obstack_newchunk(%struct.obstack* %116, i64 8), !dbg !4982
  br label %117, !dbg !4982

117:                                              ; preds = %115, %93
  call void @llvm.dbg.declare(metadata %struct.obstack** %13, metadata !4983, metadata !DIExpression()), !dbg !4985
  %118 = load %struct.obstack*, %struct.obstack** %10, align 8, !dbg !4985
  store %struct.obstack* %118, %struct.obstack** %13, align 8, !dbg !4985
  call void @llvm.dbg.declare(metadata i8** %14, metadata !4986, metadata !DIExpression()), !dbg !4985
  %119 = load %struct.obstack*, %struct.obstack** %13, align 8, !dbg !4985
  %120 = getelementptr inbounds %struct.obstack, %struct.obstack* %119, i32 0, i32 3, !dbg !4985
  %121 = load i8*, i8** %120, align 8, !dbg !4985
  store i8* %121, i8** %14, align 8, !dbg !4985
  %122 = load i8*, i8** %6, align 8, !dbg !4985
  %123 = load i8*, i8** %14, align 8, !dbg !4985
  %124 = bitcast i8* %123 to i8**, !dbg !4985
  store i8* %122, i8** %124, align 8, !dbg !4985
  %125 = load %struct.obstack*, %struct.obstack** %13, align 8, !dbg !4985
  %126 = getelementptr inbounds %struct.obstack, %struct.obstack* %125, i32 0, i32 3, !dbg !4985
  %127 = load i8*, i8** %126, align 8, !dbg !4985
  %128 = getelementptr inbounds i8, i8* %127, i64 8, !dbg !4985
  store i8* %128, i8** %126, align 8, !dbg !4985
  call void @llvm.dbg.declare(metadata %struct.obstack** %15, metadata !4987, metadata !DIExpression()), !dbg !4989
  %129 = load %struct.Tokens*, %struct.Tokens** %2, align 8, !dbg !4989
  %130 = getelementptr inbounds %struct.Tokens, %struct.Tokens* %129, i32 0, i32 5, !dbg !4989
  store %struct.obstack* %130, %struct.obstack** %15, align 8, !dbg !4989
  call void @llvm.dbg.declare(metadata i64* %16, metadata !4990, metadata !DIExpression()), !dbg !4989
  store i64 8, i64* %16, align 8, !dbg !4989
  call void @llvm.dbg.declare(metadata %struct.obstack** %17, metadata !4991, metadata !DIExpression()), !dbg !4994
  %131 = load %struct.obstack*, %struct.obstack** %15, align 8, !dbg !4994
  store %struct.obstack* %131, %struct.obstack** %17, align 8, !dbg !4994
  %132 = load %struct.obstack*, %struct.obstack** %17, align 8, !dbg !4994
  %133 = getelementptr inbounds %struct.obstack, %struct.obstack* %132, i32 0, i32 4, !dbg !4994
  %134 = load i8*, i8** %133, align 8, !dbg !4994
  %135 = load %struct.obstack*, %struct.obstack** %17, align 8, !dbg !4994
  %136 = getelementptr inbounds %struct.obstack, %struct.obstack* %135, i32 0, i32 3, !dbg !4994
  %137 = load i8*, i8** %136, align 8, !dbg !4994
  %138 = ptrtoint i8* %134 to i64, !dbg !4994
  %139 = ptrtoint i8* %137 to i64, !dbg !4994
  %140 = sub i64 %138, %139, !dbg !4994
  store i64 %140, i64* %18, align 8, !dbg !4994
  %141 = load i64, i64* %18, align 8, !dbg !4994
  %142 = load i64, i64* %16, align 8, !dbg !4995
  %143 = icmp ult i64 %141, %142, !dbg !4995
  br i1 %143, label %144, label %147, !dbg !4989

144:                                              ; preds = %117
  %145 = load %struct.obstack*, %struct.obstack** %15, align 8, !dbg !4995
  %146 = load i64, i64* %16, align 8, !dbg !4995
  call void @_obstack_newchunk(%struct.obstack* %145, i64 %146), !dbg !4995
  br label %147, !dbg !4995

147:                                              ; preds = %144, %117
  %148 = load %struct.obstack*, %struct.obstack** %15, align 8, !dbg !4989
  %149 = getelementptr inbounds %struct.obstack, %struct.obstack* %148, i32 0, i32 3, !dbg !4989
  %150 = load i8*, i8** %149, align 8, !dbg !4989
  %151 = bitcast i64* %3 to i8*, !dbg !4989
  %152 = load i64, i64* %16, align 8, !dbg !4989
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %150, i8* align 8 %151, i64 %152, i1 false), !dbg !4989
  %153 = load i64, i64* %16, align 8, !dbg !4989
  %154 = load %struct.obstack*, %struct.obstack** %15, align 8, !dbg !4989
  %155 = getelementptr inbounds %struct.obstack, %struct.obstack* %154, i32 0, i32 3, !dbg !4989
  %156 = load i8*, i8** %155, align 8, !dbg !4989
  %157 = getelementptr inbounds i8, i8* %156, i64 %153, !dbg !4989
  store i8* %157, i8** %155, align 8, !dbg !4989
  %158 = load %struct.Tokens*, %struct.Tokens** %2, align 8, !dbg !4996
  %159 = getelementptr inbounds %struct.Tokens, %struct.Tokens* %158, i32 0, i32 0, !dbg !4997
  %160 = load i64, i64* %159, align 8, !dbg !4998
  %161 = add i64 %160, 1, !dbg !4998
  store i64 %161, i64* %159, align 8, !dbg !4998
  ret void, !dbg !4999
}

; Function Attrs: nounwind
declare dso_local i32 @ferror(%struct._IO_FILE*) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @safe_read(i32 %0, i8* %1, i64 %2) #3 !dbg !5000 {
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  store i32 %0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !5003, metadata !DIExpression()), !dbg !5004
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !5005, metadata !DIExpression()), !dbg !5006
  store i64 %2, i64* %7, align 8
  call void @llvm.dbg.declare(metadata i64* %7, metadata !5007, metadata !DIExpression()), !dbg !5008
  br label %9, !dbg !5009

9:                                                ; preds = %35, %22, %3
  call void @llvm.dbg.declare(metadata i64* %8, metadata !5010, metadata !DIExpression()), !dbg !5016
  %10 = load i32, i32* %5, align 4, !dbg !5017
  %11 = load i8*, i8** %6, align 8, !dbg !5018
  %12 = load i64, i64* %7, align 8, !dbg !5019
  %13 = call i64 @read(i32 %10, i8* %11, i64 %12), !dbg !5020
  store i64 %13, i64* %8, align 8, !dbg !5016
  %14 = load i64, i64* %8, align 8, !dbg !5021
  %15 = icmp sle i64 0, %14, !dbg !5023
  br i1 %15, label %16, label %18, !dbg !5024

16:                                               ; preds = %9
  %17 = load i64, i64* %8, align 8, !dbg !5025
  store i64 %17, i64* %4, align 8, !dbg !5026
  br label %36, !dbg !5026

18:                                               ; preds = %9
  %19 = call i32* @__errno_location() #16, !dbg !5027
  %20 = load i32, i32* %19, align 4, !dbg !5027
  %21 = icmp eq i32 %20, 4, !dbg !5027
  br i1 %21, label %22, label %23, !dbg !5029

22:                                               ; preds = %18
  br label %9, !dbg !5030, !llvm.loop !5031

23:                                               ; preds = %18
  %24 = call i32* @__errno_location() #16, !dbg !5034
  %25 = load i32, i32* %24, align 4, !dbg !5034
  %26 = icmp eq i32 %25, 22, !dbg !5036
  br i1 %26, label %27, label %31, !dbg !5037

27:                                               ; preds = %23
  %28 = load i64, i64* %7, align 8, !dbg !5038
  %29 = icmp ult i64 2146435072, %28, !dbg !5039
  br i1 %29, label %30, label %31, !dbg !5040

30:                                               ; preds = %27
  store i64 2146435072, i64* %7, align 8, !dbg !5041
  br label %33, !dbg !5042

31:                                               ; preds = %27, %23
  %32 = load i64, i64* %8, align 8, !dbg !5043
  store i64 %32, i64* %4, align 8, !dbg !5044
  br label %36, !dbg !5044

33:                                               ; preds = %30
  br label %34

34:                                               ; preds = %33
  br label %35

35:                                               ; preds = %34
  br label %9, !dbg !5045, !llvm.loop !5031

36:                                               ; preds = %31, %16
  %37 = load i64, i64* %4, align 8, !dbg !5046
  ret i64 %37, !dbg !5046
}

declare dso_local i64 @read(i32, i8*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @version_etc_arn(%struct._IO_FILE* %0, i8* %1, i8* %2, i8* %3, i8** %4, i64 %5) #3 !dbg !5047 {
  %7 = alloca %struct._IO_FILE*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8**, align 8
  %12 = alloca i64, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %7, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %7, metadata !5085, metadata !DIExpression()), !dbg !5086
  store i8* %1, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !5087, metadata !DIExpression()), !dbg !5088
  store i8* %2, i8** %9, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !5089, metadata !DIExpression()), !dbg !5090
  store i8* %3, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !5091, metadata !DIExpression()), !dbg !5092
  store i8** %4, i8*** %11, align 8
  call void @llvm.dbg.declare(metadata i8*** %11, metadata !5093, metadata !DIExpression()), !dbg !5094
  store i64 %5, i64* %12, align 8
  call void @llvm.dbg.declare(metadata i64* %12, metadata !5095, metadata !DIExpression()), !dbg !5096
  %13 = load i8*, i8** %8, align 8, !dbg !5097
  %14 = icmp ne i8* %13, null, !dbg !5097
  br i1 %14, label %15, label %21, !dbg !5099

15:                                               ; preds = %6
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !5100
  %17 = load i8*, i8** %8, align 8, !dbg !5101
  %18 = load i8*, i8** %9, align 8, !dbg !5102
  %19 = load i8*, i8** %10, align 8, !dbg !5103
  %20 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.122, i64 0, i64 0), i8* %17, i8* %18, i8* %19), !dbg !5104
  br label %26, !dbg !5104

21:                                               ; preds = %6
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !5105
  %23 = load i8*, i8** %9, align 8, !dbg !5106
  %24 = load i8*, i8** %10, align 8, !dbg !5107
  %25 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %22, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.123, i64 0, i64 0), i8* %23, i8* %24), !dbg !5108
  br label %26

26:                                               ; preds = %21, %15
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !5109
  %28 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %27, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @version_etc_copyright, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.124, i64 0, i64 0), i32 2020), !dbg !5110
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !5111
  %30 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.125, i64 0, i64 0), %struct._IO_FILE* %29), !dbg !5111
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !5112
  %32 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %31, i8* getelementptr inbounds ([171 x i8], [171 x i8]* @.str.4.126, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5.127, i64 0, i64 0)), !dbg !5113
  %33 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !5114
  %34 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.125, i64 0, i64 0), %struct._IO_FILE* %33), !dbg !5114
  %35 = load i64, i64* %12, align 8, !dbg !5115
  switch i64 %35, label %199 [
    i64 0, label %36
    i64 1, label %37
    i64 2, label %43
    i64 3, label %52
    i64 4, label %64
    i64 5, label %79
    i64 6, label %97
    i64 7, label %118
    i64 8, label %142
    i64 9, label %169
  ], !dbg !5116

36:                                               ; preds = %26
  br label %229, !dbg !5117

37:                                               ; preds = %26
  %38 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !5119
  %39 = load i8**, i8*** %11, align 8, !dbg !5120
  %40 = getelementptr inbounds i8*, i8** %39, i64 0, !dbg !5120
  %41 = load i8*, i8** %40, align 8, !dbg !5120
  %42 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %38, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6.128, i64 0, i64 0), i8* %41), !dbg !5121
  br label %229, !dbg !5122

43:                                               ; preds = %26
  %44 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !5123
  %45 = load i8**, i8*** %11, align 8, !dbg !5124
  %46 = getelementptr inbounds i8*, i8** %45, i64 0, !dbg !5124
  %47 = load i8*, i8** %46, align 8, !dbg !5124
  %48 = load i8**, i8*** %11, align 8, !dbg !5125
  %49 = getelementptr inbounds i8*, i8** %48, i64 1, !dbg !5125
  %50 = load i8*, i8** %49, align 8, !dbg !5125
  %51 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %44, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.129, i64 0, i64 0), i8* %47, i8* %50), !dbg !5126
  br label %229, !dbg !5127

52:                                               ; preds = %26
  %53 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !5128
  %54 = load i8**, i8*** %11, align 8, !dbg !5129
  %55 = getelementptr inbounds i8*, i8** %54, i64 0, !dbg !5129
  %56 = load i8*, i8** %55, align 8, !dbg !5129
  %57 = load i8**, i8*** %11, align 8, !dbg !5130
  %58 = getelementptr inbounds i8*, i8** %57, i64 1, !dbg !5130
  %59 = load i8*, i8** %58, align 8, !dbg !5130
  %60 = load i8**, i8*** %11, align 8, !dbg !5131
  %61 = getelementptr inbounds i8*, i8** %60, i64 2, !dbg !5131
  %62 = load i8*, i8** %61, align 8, !dbg !5131
  %63 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %53, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8.130, i64 0, i64 0), i8* %56, i8* %59, i8* %62), !dbg !5132
  br label %229, !dbg !5133

64:                                               ; preds = %26
  %65 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !5134
  %66 = load i8**, i8*** %11, align 8, !dbg !5135
  %67 = getelementptr inbounds i8*, i8** %66, i64 0, !dbg !5135
  %68 = load i8*, i8** %67, align 8, !dbg !5135
  %69 = load i8**, i8*** %11, align 8, !dbg !5136
  %70 = getelementptr inbounds i8*, i8** %69, i64 1, !dbg !5136
  %71 = load i8*, i8** %70, align 8, !dbg !5136
  %72 = load i8**, i8*** %11, align 8, !dbg !5137
  %73 = getelementptr inbounds i8*, i8** %72, i64 2, !dbg !5137
  %74 = load i8*, i8** %73, align 8, !dbg !5137
  %75 = load i8**, i8*** %11, align 8, !dbg !5138
  %76 = getelementptr inbounds i8*, i8** %75, i64 3, !dbg !5138
  %77 = load i8*, i8** %76, align 8, !dbg !5138
  %78 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %65, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.9.131, i64 0, i64 0), i8* %68, i8* %71, i8* %74, i8* %77), !dbg !5139
  br label %229, !dbg !5140

79:                                               ; preds = %26
  %80 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !5141
  %81 = load i8**, i8*** %11, align 8, !dbg !5142
  %82 = getelementptr inbounds i8*, i8** %81, i64 0, !dbg !5142
  %83 = load i8*, i8** %82, align 8, !dbg !5142
  %84 = load i8**, i8*** %11, align 8, !dbg !5143
  %85 = getelementptr inbounds i8*, i8** %84, i64 1, !dbg !5143
  %86 = load i8*, i8** %85, align 8, !dbg !5143
  %87 = load i8**, i8*** %11, align 8, !dbg !5144
  %88 = getelementptr inbounds i8*, i8** %87, i64 2, !dbg !5144
  %89 = load i8*, i8** %88, align 8, !dbg !5144
  %90 = load i8**, i8*** %11, align 8, !dbg !5145
  %91 = getelementptr inbounds i8*, i8** %90, i64 3, !dbg !5145
  %92 = load i8*, i8** %91, align 8, !dbg !5145
  %93 = load i8**, i8*** %11, align 8, !dbg !5146
  %94 = getelementptr inbounds i8*, i8** %93, i64 4, !dbg !5146
  %95 = load i8*, i8** %94, align 8, !dbg !5146
  %96 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %80, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.10.132, i64 0, i64 0), i8* %83, i8* %86, i8* %89, i8* %92, i8* %95), !dbg !5147
  br label %229, !dbg !5148

97:                                               ; preds = %26
  %98 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !5149
  %99 = load i8**, i8*** %11, align 8, !dbg !5150
  %100 = getelementptr inbounds i8*, i8** %99, i64 0, !dbg !5150
  %101 = load i8*, i8** %100, align 8, !dbg !5150
  %102 = load i8**, i8*** %11, align 8, !dbg !5151
  %103 = getelementptr inbounds i8*, i8** %102, i64 1, !dbg !5151
  %104 = load i8*, i8** %103, align 8, !dbg !5151
  %105 = load i8**, i8*** %11, align 8, !dbg !5152
  %106 = getelementptr inbounds i8*, i8** %105, i64 2, !dbg !5152
  %107 = load i8*, i8** %106, align 8, !dbg !5152
  %108 = load i8**, i8*** %11, align 8, !dbg !5153
  %109 = getelementptr inbounds i8*, i8** %108, i64 3, !dbg !5153
  %110 = load i8*, i8** %109, align 8, !dbg !5153
  %111 = load i8**, i8*** %11, align 8, !dbg !5154
  %112 = getelementptr inbounds i8*, i8** %111, i64 4, !dbg !5154
  %113 = load i8*, i8** %112, align 8, !dbg !5154
  %114 = load i8**, i8*** %11, align 8, !dbg !5155
  %115 = getelementptr inbounds i8*, i8** %114, i64 5, !dbg !5155
  %116 = load i8*, i8** %115, align 8, !dbg !5155
  %117 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %98, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.11.133, i64 0, i64 0), i8* %101, i8* %104, i8* %107, i8* %110, i8* %113, i8* %116), !dbg !5156
  br label %229, !dbg !5157

118:                                              ; preds = %26
  %119 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !5158
  %120 = load i8**, i8*** %11, align 8, !dbg !5159
  %121 = getelementptr inbounds i8*, i8** %120, i64 0, !dbg !5159
  %122 = load i8*, i8** %121, align 8, !dbg !5159
  %123 = load i8**, i8*** %11, align 8, !dbg !5160
  %124 = getelementptr inbounds i8*, i8** %123, i64 1, !dbg !5160
  %125 = load i8*, i8** %124, align 8, !dbg !5160
  %126 = load i8**, i8*** %11, align 8, !dbg !5161
  %127 = getelementptr inbounds i8*, i8** %126, i64 2, !dbg !5161
  %128 = load i8*, i8** %127, align 8, !dbg !5161
  %129 = load i8**, i8*** %11, align 8, !dbg !5162
  %130 = getelementptr inbounds i8*, i8** %129, i64 3, !dbg !5162
  %131 = load i8*, i8** %130, align 8, !dbg !5162
  %132 = load i8**, i8*** %11, align 8, !dbg !5163
  %133 = getelementptr inbounds i8*, i8** %132, i64 4, !dbg !5163
  %134 = load i8*, i8** %133, align 8, !dbg !5163
  %135 = load i8**, i8*** %11, align 8, !dbg !5164
  %136 = getelementptr inbounds i8*, i8** %135, i64 5, !dbg !5164
  %137 = load i8*, i8** %136, align 8, !dbg !5164
  %138 = load i8**, i8*** %11, align 8, !dbg !5165
  %139 = getelementptr inbounds i8*, i8** %138, i64 6, !dbg !5165
  %140 = load i8*, i8** %139, align 8, !dbg !5165
  %141 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %119, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.12.134, i64 0, i64 0), i8* %122, i8* %125, i8* %128, i8* %131, i8* %134, i8* %137, i8* %140), !dbg !5166
  br label %229, !dbg !5167

142:                                              ; preds = %26
  %143 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !5168
  %144 = load i8**, i8*** %11, align 8, !dbg !5169
  %145 = getelementptr inbounds i8*, i8** %144, i64 0, !dbg !5169
  %146 = load i8*, i8** %145, align 8, !dbg !5169
  %147 = load i8**, i8*** %11, align 8, !dbg !5170
  %148 = getelementptr inbounds i8*, i8** %147, i64 1, !dbg !5170
  %149 = load i8*, i8** %148, align 8, !dbg !5170
  %150 = load i8**, i8*** %11, align 8, !dbg !5171
  %151 = getelementptr inbounds i8*, i8** %150, i64 2, !dbg !5171
  %152 = load i8*, i8** %151, align 8, !dbg !5171
  %153 = load i8**, i8*** %11, align 8, !dbg !5172
  %154 = getelementptr inbounds i8*, i8** %153, i64 3, !dbg !5172
  %155 = load i8*, i8** %154, align 8, !dbg !5172
  %156 = load i8**, i8*** %11, align 8, !dbg !5173
  %157 = getelementptr inbounds i8*, i8** %156, i64 4, !dbg !5173
  %158 = load i8*, i8** %157, align 8, !dbg !5173
  %159 = load i8**, i8*** %11, align 8, !dbg !5174
  %160 = getelementptr inbounds i8*, i8** %159, i64 5, !dbg !5174
  %161 = load i8*, i8** %160, align 8, !dbg !5174
  %162 = load i8**, i8*** %11, align 8, !dbg !5175
  %163 = getelementptr inbounds i8*, i8** %162, i64 6, !dbg !5175
  %164 = load i8*, i8** %163, align 8, !dbg !5175
  %165 = load i8**, i8*** %11, align 8, !dbg !5176
  %166 = getelementptr inbounds i8*, i8** %165, i64 7, !dbg !5176
  %167 = load i8*, i8** %166, align 8, !dbg !5176
  %168 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %143, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.13.135, i64 0, i64 0), i8* %146, i8* %149, i8* %152, i8* %155, i8* %158, i8* %161, i8* %164, i8* %167), !dbg !5177
  br label %229, !dbg !5178

169:                                              ; preds = %26
  %170 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !5179
  %171 = load i8**, i8*** %11, align 8, !dbg !5180
  %172 = getelementptr inbounds i8*, i8** %171, i64 0, !dbg !5180
  %173 = load i8*, i8** %172, align 8, !dbg !5180
  %174 = load i8**, i8*** %11, align 8, !dbg !5181
  %175 = getelementptr inbounds i8*, i8** %174, i64 1, !dbg !5181
  %176 = load i8*, i8** %175, align 8, !dbg !5181
  %177 = load i8**, i8*** %11, align 8, !dbg !5182
  %178 = getelementptr inbounds i8*, i8** %177, i64 2, !dbg !5182
  %179 = load i8*, i8** %178, align 8, !dbg !5182
  %180 = load i8**, i8*** %11, align 8, !dbg !5183
  %181 = getelementptr inbounds i8*, i8** %180, i64 3, !dbg !5183
  %182 = load i8*, i8** %181, align 8, !dbg !5183
  %183 = load i8**, i8*** %11, align 8, !dbg !5184
  %184 = getelementptr inbounds i8*, i8** %183, i64 4, !dbg !5184
  %185 = load i8*, i8** %184, align 8, !dbg !5184
  %186 = load i8**, i8*** %11, align 8, !dbg !5185
  %187 = getelementptr inbounds i8*, i8** %186, i64 5, !dbg !5185
  %188 = load i8*, i8** %187, align 8, !dbg !5185
  %189 = load i8**, i8*** %11, align 8, !dbg !5186
  %190 = getelementptr inbounds i8*, i8** %189, i64 6, !dbg !5186
  %191 = load i8*, i8** %190, align 8, !dbg !5186
  %192 = load i8**, i8*** %11, align 8, !dbg !5187
  %193 = getelementptr inbounds i8*, i8** %192, i64 7, !dbg !5187
  %194 = load i8*, i8** %193, align 8, !dbg !5187
  %195 = load i8**, i8*** %11, align 8, !dbg !5188
  %196 = getelementptr inbounds i8*, i8** %195, i64 8, !dbg !5188
  %197 = load i8*, i8** %196, align 8, !dbg !5188
  %198 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %170, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.14.136, i64 0, i64 0), i8* %173, i8* %176, i8* %179, i8* %182, i8* %185, i8* %188, i8* %191, i8* %194, i8* %197), !dbg !5189
  br label %229, !dbg !5190

199:                                              ; preds = %26
  %200 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !5191
  %201 = load i8**, i8*** %11, align 8, !dbg !5192
  %202 = getelementptr inbounds i8*, i8** %201, i64 0, !dbg !5192
  %203 = load i8*, i8** %202, align 8, !dbg !5192
  %204 = load i8**, i8*** %11, align 8, !dbg !5193
  %205 = getelementptr inbounds i8*, i8** %204, i64 1, !dbg !5193
  %206 = load i8*, i8** %205, align 8, !dbg !5193
  %207 = load i8**, i8*** %11, align 8, !dbg !5194
  %208 = getelementptr inbounds i8*, i8** %207, i64 2, !dbg !5194
  %209 = load i8*, i8** %208, align 8, !dbg !5194
  %210 = load i8**, i8*** %11, align 8, !dbg !5195
  %211 = getelementptr inbounds i8*, i8** %210, i64 3, !dbg !5195
  %212 = load i8*, i8** %211, align 8, !dbg !5195
  %213 = load i8**, i8*** %11, align 8, !dbg !5196
  %214 = getelementptr inbounds i8*, i8** %213, i64 4, !dbg !5196
  %215 = load i8*, i8** %214, align 8, !dbg !5196
  %216 = load i8**, i8*** %11, align 8, !dbg !5197
  %217 = getelementptr inbounds i8*, i8** %216, i64 5, !dbg !5197
  %218 = load i8*, i8** %217, align 8, !dbg !5197
  %219 = load i8**, i8*** %11, align 8, !dbg !5198
  %220 = getelementptr inbounds i8*, i8** %219, i64 6, !dbg !5198
  %221 = load i8*, i8** %220, align 8, !dbg !5198
  %222 = load i8**, i8*** %11, align 8, !dbg !5199
  %223 = getelementptr inbounds i8*, i8** %222, i64 7, !dbg !5199
  %224 = load i8*, i8** %223, align 8, !dbg !5199
  %225 = load i8**, i8*** %11, align 8, !dbg !5200
  %226 = getelementptr inbounds i8*, i8** %225, i64 8, !dbg !5200
  %227 = load i8*, i8** %226, align 8, !dbg !5200
  %228 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %200, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.15.137, i64 0, i64 0), i8* %203, i8* %206, i8* %209, i8* %212, i8* %215, i8* %218, i8* %221, i8* %224, i8* %227), !dbg !5201
  br label %229, !dbg !5202

229:                                              ; preds = %199, %169, %142, %118, %97, %79, %64, %52, %43, %37, %36
  ret void, !dbg !5203
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @version_etc_ar(%struct._IO_FILE* %0, i8* %1, i8* %2, i8* %3, i8** %4) #3 !dbg !5204 {
  %6 = alloca %struct._IO_FILE*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8**, align 8
  %11 = alloca i64, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %6, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %6, metadata !5207, metadata !DIExpression()), !dbg !5208
  store i8* %1, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !5209, metadata !DIExpression()), !dbg !5210
  store i8* %2, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !5211, metadata !DIExpression()), !dbg !5212
  store i8* %3, i8** %9, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !5213, metadata !DIExpression()), !dbg !5214
  store i8** %4, i8*** %10, align 8
  call void @llvm.dbg.declare(metadata i8*** %10, metadata !5215, metadata !DIExpression()), !dbg !5216
  call void @llvm.dbg.declare(metadata i64* %11, metadata !5217, metadata !DIExpression()), !dbg !5218
  store i64 0, i64* %11, align 8, !dbg !5219
  br label %12, !dbg !5221

12:                                               ; preds = %19, %5
  %13 = load i8**, i8*** %10, align 8, !dbg !5222
  %14 = load i64, i64* %11, align 8, !dbg !5224
  %15 = getelementptr inbounds i8*, i8** %13, i64 %14, !dbg !5222
  %16 = load i8*, i8** %15, align 8, !dbg !5222
  %17 = icmp ne i8* %16, null, !dbg !5225
  br i1 %17, label %18, label %22, !dbg !5225

18:                                               ; preds = %12
  br label %19, !dbg !5225

19:                                               ; preds = %18
  %20 = load i64, i64* %11, align 8, !dbg !5226
  %21 = add i64 %20, 1, !dbg !5226
  store i64 %21, i64* %11, align 8, !dbg !5226
  br label %12, !dbg !5227, !llvm.loop !5228

22:                                               ; preds = %12
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8, !dbg !5230
  %24 = load i8*, i8** %7, align 8, !dbg !5231
  %25 = load i8*, i8** %8, align 8, !dbg !5232
  %26 = load i8*, i8** %9, align 8, !dbg !5233
  %27 = load i8**, i8*** %10, align 8, !dbg !5234
  %28 = load i64, i64* %11, align 8, !dbg !5235
  call void @version_etc_arn(%struct._IO_FILE* %23, i8* %24, i8* %25, i8* %26, i8** %27, i64 %28), !dbg !5236
  ret void, !dbg !5237
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @version_etc_va(%struct._IO_FILE* %0, i8* %1, i8* %2, i8* %3, %struct.__va_list_tag* %4) #3 !dbg !5238 {
  %6 = alloca %struct._IO_FILE*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca %struct.__va_list_tag*, align 8
  %11 = alloca i64, align 8
  %12 = alloca [10 x i8*], align 16
  store %struct._IO_FILE* %0, %struct._IO_FILE** %6, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %6, metadata !5248, metadata !DIExpression()), !dbg !5249
  store i8* %1, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !5250, metadata !DIExpression()), !dbg !5251
  store i8* %2, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !5252, metadata !DIExpression()), !dbg !5253
  store i8* %3, i8** %9, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !5254, metadata !DIExpression()), !dbg !5255
  store %struct.__va_list_tag* %4, %struct.__va_list_tag** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %10, metadata !5256, metadata !DIExpression()), !dbg !5257
  call void @llvm.dbg.declare(metadata i64* %11, metadata !5258, metadata !DIExpression()), !dbg !5259
  call void @llvm.dbg.declare(metadata [10 x i8*]* %12, metadata !5260, metadata !DIExpression()), !dbg !5262
  store i64 0, i64* %11, align 8, !dbg !5263
  br label %13, !dbg !5265

13:                                               ; preds = %41, %5
  %14 = load i64, i64* %11, align 8, !dbg !5266
  %15 = icmp ult i64 %14, 10, !dbg !5268
  br i1 %15, label %16, label %38, !dbg !5269

16:                                               ; preds = %13
  %17 = load %struct.__va_list_tag*, %struct.__va_list_tag** %10, align 8, !dbg !5270
  %18 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %17, i32 0, i32 0, !dbg !5270
  %19 = load i32, i32* %18, align 8, !dbg !5270
  %20 = icmp ule i32 %19, 40, !dbg !5270
  br i1 %20, label %21, label %27, !dbg !5270

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %17, i32 0, i32 3, !dbg !5270
  %23 = load i8*, i8** %22, align 8, !dbg !5270
  %24 = getelementptr i8, i8* %23, i32 %19, !dbg !5270
  %25 = bitcast i8* %24 to i8**, !dbg !5270
  %26 = add i32 %19, 8, !dbg !5270
  store i32 %26, i32* %18, align 8, !dbg !5270
  br label %32, !dbg !5270

27:                                               ; preds = %16
  %28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %17, i32 0, i32 2, !dbg !5270
  %29 = load i8*, i8** %28, align 8, !dbg !5270
  %30 = bitcast i8* %29 to i8**, !dbg !5270
  %31 = getelementptr i8, i8* %29, i32 8, !dbg !5270
  store i8* %31, i8** %28, align 8, !dbg !5270
  br label %32, !dbg !5270

32:                                               ; preds = %27, %21
  %33 = phi i8** [ %25, %21 ], [ %30, %27 ], !dbg !5270
  %34 = load i8*, i8** %33, align 8, !dbg !5270
  %35 = load i64, i64* %11, align 8, !dbg !5271
  %36 = getelementptr inbounds [10 x i8*], [10 x i8*]* %12, i64 0, i64 %35, !dbg !5272
  store i8* %34, i8** %36, align 8, !dbg !5273
  %37 = icmp ne i8* %34, null, !dbg !5274
  br label %38

38:                                               ; preds = %32, %13
  %39 = phi i1 [ false, %13 ], [ %37, %32 ], !dbg !5275
  br i1 %39, label %40, label %44, !dbg !5276

40:                                               ; preds = %38
  br label %41, !dbg !5276

41:                                               ; preds = %40
  %42 = load i64, i64* %11, align 8, !dbg !5277
  %43 = add i64 %42, 1, !dbg !5277
  store i64 %43, i64* %11, align 8, !dbg !5277
  br label %13, !dbg !5278, !llvm.loop !5279

44:                                               ; preds = %38
  %45 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8, !dbg !5281
  %46 = load i8*, i8** %7, align 8, !dbg !5282
  %47 = load i8*, i8** %8, align 8, !dbg !5283
  %48 = load i8*, i8** %9, align 8, !dbg !5284
  %49 = getelementptr inbounds [10 x i8*], [10 x i8*]* %12, i64 0, i64 0, !dbg !5285
  %50 = load i64, i64* %11, align 8, !dbg !5286
  call void @version_etc_arn(%struct._IO_FILE* %45, i8* %46, i8* %47, i8* %48, i8** %49, i64 %50), !dbg !5287
  ret void, !dbg !5288
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @version_etc(%struct._IO_FILE* %0, i8* %1, i8* %2, i8* %3, ...) #3 !dbg !5289 {
  %5 = alloca %struct._IO_FILE*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca [1 x %struct.__va_list_tag], align 16
  store %struct._IO_FILE* %0, %struct._IO_FILE** %5, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %5, metadata !5292, metadata !DIExpression()), !dbg !5293
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !5294, metadata !DIExpression()), !dbg !5295
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !5296, metadata !DIExpression()), !dbg !5297
  store i8* %3, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !5298, metadata !DIExpression()), !dbg !5299
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %9, metadata !5300, metadata !DIExpression()), !dbg !5306
  %10 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %9, i64 0, i64 0, !dbg !5307
  %11 = bitcast %struct.__va_list_tag* %10 to i8*, !dbg !5307
  call void @llvm.va_start(i8* %11), !dbg !5307
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !5308
  %13 = load i8*, i8** %6, align 8, !dbg !5309
  %14 = load i8*, i8** %7, align 8, !dbg !5310
  %15 = load i8*, i8** %8, align 8, !dbg !5311
  %16 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %9, i64 0, i64 0, !dbg !5312
  call void @version_etc_va(%struct._IO_FILE* %12, i8* %13, i8* %14, i8* %15, %struct.__va_list_tag* %16), !dbg !5313
  %17 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %9, i64 0, i64 0, !dbg !5314
  %18 = bitcast %struct.__va_list_tag* %17 to i8*, !dbg !5314
  call void @llvm.va_end(i8* %18), !dbg !5314
  ret void, !dbg !5315
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #12

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #12

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @emit_bug_reporting_address() #3 !dbg !5316 {
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !5317
  %2 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.125, i64 0, i64 0), %struct._IO_FILE* %1), !dbg !5317
  %3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.16.140, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.17.141, i64 0, i64 0)), !dbg !5318
  %4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.18.142, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.19.143, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.20.144, i64 0, i64 0)), !dbg !5319
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.21.145, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.22.146, i64 0, i64 0)), !dbg !5320
  ret void, !dbg !5321
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xnmalloc(i64 %0, i64 %1) #3 !dbg !5322 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  store i64 %0, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !5325, metadata !DIExpression()), !dbg !5326
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !5327, metadata !DIExpression()), !dbg !5328
  %5 = load i64, i64* %4, align 8, !dbg !5329
  %6 = udiv i64 9223372036854775807, %5, !dbg !5329
  %7 = load i64, i64* %3, align 8, !dbg !5329
  %8 = icmp ult i64 %6, %7, !dbg !5329
  br i1 %8, label %9, label %10, !dbg !5331

9:                                                ; preds = %2
  call void @xalloc_die() #17, !dbg !5332
  unreachable, !dbg !5332

10:                                               ; preds = %2
  %11 = load i64, i64* %3, align 8, !dbg !5333
  %12 = load i64, i64* %4, align 8, !dbg !5334
  %13 = mul i64 %11, %12, !dbg !5335
  %14 = call noalias i8* @xmalloc(i64 %13), !dbg !5336
  ret i8* %14, !dbg !5337
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xmalloc(i64 %0) #3 !dbg !5338 {
  %2 = alloca i64, align 8
  %3 = alloca i8*, align 8
  store i64 %0, i64* %2, align 8
  call void @llvm.dbg.declare(metadata i64* %2, metadata !5339, metadata !DIExpression()), !dbg !5340
  call void @llvm.dbg.declare(metadata i8** %3, metadata !5341, metadata !DIExpression()), !dbg !5342
  %4 = load i64, i64* %2, align 8, !dbg !5343
  %5 = call noalias i8* @malloc(i64 %4) #15, !dbg !5344
  store i8* %5, i8** %3, align 8, !dbg !5342
  %6 = load i8*, i8** %3, align 8, !dbg !5345
  %7 = icmp ne i8* %6, null, !dbg !5345
  br i1 %7, label %12, label %8, !dbg !5347

8:                                                ; preds = %1
  %9 = load i64, i64* %2, align 8, !dbg !5348
  %10 = icmp ne i64 %9, 0, !dbg !5349
  br i1 %10, label %11, label %12, !dbg !5350

11:                                               ; preds = %8
  call void @xalloc_die() #17, !dbg !5351
  unreachable, !dbg !5351

12:                                               ; preds = %8, %1
  %13 = load i8*, i8** %3, align 8, !dbg !5352
  ret i8* %13, !dbg !5353
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @xnrealloc(i8* %0, i64 %1, i64 %2) #3 !dbg !5354 {
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !5357, metadata !DIExpression()), !dbg !5358
  store i64 %1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata i64* %5, metadata !5359, metadata !DIExpression()), !dbg !5360
  store i64 %2, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !5361, metadata !DIExpression()), !dbg !5362
  %7 = load i64, i64* %6, align 8, !dbg !5363
  %8 = udiv i64 9223372036854775807, %7, !dbg !5363
  %9 = load i64, i64* %5, align 8, !dbg !5363
  %10 = icmp ult i64 %8, %9, !dbg !5363
  br i1 %10, label %11, label %12, !dbg !5365

11:                                               ; preds = %3
  call void @xalloc_die() #17, !dbg !5366
  unreachable, !dbg !5366

12:                                               ; preds = %3
  %13 = load i8*, i8** %4, align 8, !dbg !5367
  %14 = load i64, i64* %5, align 8, !dbg !5368
  %15 = load i64, i64* %6, align 8, !dbg !5369
  %16 = mul i64 %14, %15, !dbg !5370
  %17 = call i8* @xrealloc(i8* %13, i64 %16), !dbg !5371
  ret i8* %17, !dbg !5372
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @xrealloc(i8* %0, i64 %1) #3 !dbg !5373 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !5374, metadata !DIExpression()), !dbg !5375
  store i64 %1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata i64* %5, metadata !5376, metadata !DIExpression()), !dbg !5377
  %6 = load i64, i64* %5, align 8, !dbg !5378
  %7 = icmp ne i64 %6, 0, !dbg !5378
  br i1 %7, label %13, label %8, !dbg !5380

8:                                                ; preds = %2
  %9 = load i8*, i8** %4, align 8, !dbg !5381
  %10 = icmp ne i8* %9, null, !dbg !5381
  br i1 %10, label %11, label %13, !dbg !5382

11:                                               ; preds = %8
  %12 = load i8*, i8** %4, align 8, !dbg !5383
  call void @free(i8* %12) #15, !dbg !5385
  store i8* null, i8** %3, align 8, !dbg !5386
  br label %25, !dbg !5386

13:                                               ; preds = %8, %2
  %14 = load i8*, i8** %4, align 8, !dbg !5387
  %15 = load i64, i64* %5, align 8, !dbg !5388
  %16 = call i8* @realloc(i8* %14, i64 %15) #15, !dbg !5389
  store i8* %16, i8** %4, align 8, !dbg !5390
  %17 = load i8*, i8** %4, align 8, !dbg !5391
  %18 = icmp ne i8* %17, null, !dbg !5391
  br i1 %18, label %23, label %19, !dbg !5393

19:                                               ; preds = %13
  %20 = load i64, i64* %5, align 8, !dbg !5394
  %21 = icmp ne i64 %20, 0, !dbg !5394
  br i1 %21, label %22, label %23, !dbg !5395

22:                                               ; preds = %19
  call void @xalloc_die() #17, !dbg !5396
  unreachable, !dbg !5396

23:                                               ; preds = %19, %13
  %24 = load i8*, i8** %4, align 8, !dbg !5397
  store i8* %24, i8** %3, align 8, !dbg !5398
  br label %25, !dbg !5398

25:                                               ; preds = %23, %11
  %26 = load i8*, i8** %3, align 8, !dbg !5399
  ret i8* %26, !dbg !5399
}

; Function Attrs: nounwind
declare dso_local i8* @realloc(i8*, i64) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @x2nrealloc(i8* %0, i64* %1, i64 %2) #3 !dbg !487 {
  %4 = alloca i8*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !5400, metadata !DIExpression()), !dbg !5401
  store i64* %1, i64** %5, align 8
  call void @llvm.dbg.declare(metadata i64** %5, metadata !5402, metadata !DIExpression()), !dbg !5403
  store i64 %2, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !5404, metadata !DIExpression()), !dbg !5405
  call void @llvm.dbg.declare(metadata i64* %7, metadata !5406, metadata !DIExpression()), !dbg !5407
  %8 = load i64*, i64** %5, align 8, !dbg !5408
  %9 = load i64, i64* %8, align 8, !dbg !5409
  store i64 %9, i64* %7, align 8, !dbg !5407
  %10 = load i8*, i8** %4, align 8, !dbg !5410
  %11 = icmp ne i8* %10, null, !dbg !5410
  br i1 %11, label %32, label %12, !dbg !5412

12:                                               ; preds = %3
  %13 = load i64, i64* %7, align 8, !dbg !5413
  %14 = icmp ne i64 %13, 0, !dbg !5413
  br i1 %14, label %25, label %15, !dbg !5416

15:                                               ; preds = %12
  %16 = load i64, i64* %6, align 8, !dbg !5417
  %17 = udiv i64 128, %16, !dbg !5419
  store i64 %17, i64* %7, align 8, !dbg !5420
  %18 = load i64, i64* %7, align 8, !dbg !5421
  %19 = icmp ne i64 %18, 0, !dbg !5422
  %20 = xor i1 %19, true, !dbg !5422
  %21 = zext i1 %20 to i32, !dbg !5422
  %22 = sext i32 %21 to i64, !dbg !5422
  %23 = load i64, i64* %7, align 8, !dbg !5423
  %24 = add i64 %23, %22, !dbg !5423
  store i64 %24, i64* %7, align 8, !dbg !5423
  br label %25, !dbg !5424

25:                                               ; preds = %15, %12
  %26 = load i64, i64* %6, align 8, !dbg !5425
  %27 = udiv i64 9223372036854775807, %26, !dbg !5425
  %28 = load i64, i64* %7, align 8, !dbg !5425
  %29 = icmp ult i64 %27, %28, !dbg !5425
  br i1 %29, label %30, label %31, !dbg !5427

30:                                               ; preds = %25
  call void @xalloc_die() #17, !dbg !5428
  unreachable, !dbg !5428

31:                                               ; preds = %25
  br label %44, !dbg !5429

32:                                               ; preds = %3
  %33 = load i64, i64* %6, align 8, !dbg !5430
  %34 = udiv i64 6148914691236517204, %33, !dbg !5433
  %35 = load i64, i64* %7, align 8, !dbg !5434
  %36 = icmp ule i64 %34, %35, !dbg !5435
  br i1 %36, label %37, label %38, !dbg !5436

37:                                               ; preds = %32
  call void @xalloc_die() #17, !dbg !5437
  unreachable, !dbg !5437

38:                                               ; preds = %32
  %39 = load i64, i64* %7, align 8, !dbg !5438
  %40 = udiv i64 %39, 2, !dbg !5439
  %41 = add i64 %40, 1, !dbg !5440
  %42 = load i64, i64* %7, align 8, !dbg !5441
  %43 = add i64 %42, %41, !dbg !5441
  store i64 %43, i64* %7, align 8, !dbg !5441
  br label %44

44:                                               ; preds = %38, %31
  %45 = load i64, i64* %7, align 8, !dbg !5442
  %46 = load i64*, i64** %5, align 8, !dbg !5443
  store i64 %45, i64* %46, align 8, !dbg !5444
  %47 = load i8*, i8** %4, align 8, !dbg !5445
  %48 = load i64, i64* %7, align 8, !dbg !5446
  %49 = load i64, i64* %6, align 8, !dbg !5447
  %50 = mul i64 %48, %49, !dbg !5448
  %51 = call i8* @xrealloc(i8* %47, i64 %50), !dbg !5449
  ret i8* %51, !dbg !5450
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xcharalloc(i64 %0) #3 !dbg !5451 {
  %2 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  call void @llvm.dbg.declare(metadata i64* %2, metadata !5454, metadata !DIExpression()), !dbg !5455
  %3 = load i64, i64* %2, align 8, !dbg !5456
  %4 = call noalias i8* @xmalloc(i64 %3), !dbg !5456
  ret i8* %4, !dbg !5457
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @x2realloc(i8* %0, i64* %1) #3 !dbg !5458 {
  %3 = alloca i8*, align 8
  %4 = alloca i64*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !5461, metadata !DIExpression()), !dbg !5462
  store i64* %1, i64** %4, align 8
  call void @llvm.dbg.declare(metadata i64** %4, metadata !5463, metadata !DIExpression()), !dbg !5464
  %5 = load i8*, i8** %3, align 8, !dbg !5465
  %6 = load i64*, i64** %4, align 8, !dbg !5466
  %7 = call i8* @x2nrealloc(i8* %5, i64* %6, i64 1), !dbg !5467
  ret i8* %7, !dbg !5468
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xzalloc(i64 %0) #3 !dbg !5469 {
  %2 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  call void @llvm.dbg.declare(metadata i64* %2, metadata !5470, metadata !DIExpression()), !dbg !5471
  %3 = load i64, i64* %2, align 8, !dbg !5472
  %4 = call noalias i8* @xcalloc(i64 %3, i64 1), !dbg !5473
  ret i8* %4, !dbg !5474
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xcalloc(i64 %0, i64 %1) #3 !dbg !5475 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i8*, align 8
  store i64 %0, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !5476, metadata !DIExpression()), !dbg !5477
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !5478, metadata !DIExpression()), !dbg !5479
  call void @llvm.dbg.declare(metadata i8** %5, metadata !5480, metadata !DIExpression()), !dbg !5481
  %6 = load i64, i64* %4, align 8, !dbg !5482
  %7 = udiv i64 9223372036854775807, %6, !dbg !5482
  %8 = load i64, i64* %3, align 8, !dbg !5482
  %9 = icmp ult i64 %7, %8, !dbg !5482
  br i1 %9, label %15, label %10, !dbg !5484

10:                                               ; preds = %2
  %11 = load i64, i64* %3, align 8, !dbg !5485
  %12 = load i64, i64* %4, align 8, !dbg !5486
  %13 = call noalias i8* @calloc(i64 %11, i64 %12) #15, !dbg !5487
  store i8* %13, i8** %5, align 8, !dbg !5488
  %14 = icmp ne i8* %13, null, !dbg !5488
  br i1 %14, label %16, label %15, !dbg !5489

15:                                               ; preds = %10, %2
  call void @xalloc_die() #17, !dbg !5490
  unreachable, !dbg !5490

16:                                               ; preds = %10
  %17 = load i8*, i8** %5, align 8, !dbg !5491
  ret i8* %17, !dbg !5492
}

; Function Attrs: nounwind
declare dso_local noalias i8* @calloc(i64, i64) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @xmemdup(i8* %0, i64 %1) #3 !dbg !5493 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !5496, metadata !DIExpression()), !dbg !5497
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !5498, metadata !DIExpression()), !dbg !5499
  %5 = load i64, i64* %4, align 8, !dbg !5500
  %6 = call noalias i8* @xmalloc(i64 %5), !dbg !5501
  %7 = load i8*, i8** %3, align 8, !dbg !5502
  %8 = load i64, i64* %4, align 8, !dbg !5503
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %6, i8* align 1 %7, i64 %8, i1 false), !dbg !5504
  ret i8* %6, !dbg !5505
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xstrdup(i8* %0) #3 !dbg !5506 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !5507, metadata !DIExpression()), !dbg !5508
  %3 = load i8*, i8** %2, align 8, !dbg !5509
  %4 = load i8*, i8** %2, align 8, !dbg !5510
  %5 = call i64 @strlen(i8* %4) #14, !dbg !5511
  %6 = add i64 %5, 1, !dbg !5512
  %7 = call i8* @xmemdup(i8* %3, i64 %6), !dbg !5513
  ret i8* %7, !dbg !5514
}

; Function Attrs: noinline noreturn nounwind optnone uwtable
define dso_local void @xalloc_die() #0 !dbg !5515 {
  %1 = load volatile i32, i32* @exit_failure, align 4, !dbg !5516
  call void (i32, i32, i8*, ...) @error(i32 %1, i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.159, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.160, i64 0, i64 0)), !dbg !5517
  call void @abort() #13, !dbg !5518
  unreachable, !dbg !5518
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @xset_binary_mode_error() #3 !dbg !5519 {
  ret void, !dbg !5521
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @xset_binary_mode(i32 %0, i32 %1) #3 !dbg !5522 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !5525, metadata !DIExpression()), !dbg !5526
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !5527, metadata !DIExpression()), !dbg !5528
  %5 = load i32, i32* %3, align 4, !dbg !5529
  %6 = load i32, i32* %4, align 4, !dbg !5531
  %7 = call i32 @set_binary_mode(i32 %5, i32 %6), !dbg !5532
  %8 = icmp slt i32 %7, 0, !dbg !5533
  br i1 %8, label %9, label %10, !dbg !5534

9:                                                ; preds = %2
  call void @xset_binary_mode_error(), !dbg !5535
  br label %10, !dbg !5535

10:                                               ; preds = %9, %2
  ret void, !dbg !5536
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fclose(%struct._IO_FILE* nonnull %0) #3 !dbg !5537 {
  %2 = alloca i32, align 4
  %3 = alloca %struct._IO_FILE*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %struct._IO_FILE* %0, %struct._IO_FILE** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %3, metadata !5574, metadata !DIExpression()), !dbg !5575
  call void @llvm.dbg.declare(metadata i32* %4, metadata !5576, metadata !DIExpression()), !dbg !5577
  store i32 0, i32* %4, align 4, !dbg !5577
  call void @llvm.dbg.declare(metadata i32* %5, metadata !5578, metadata !DIExpression()), !dbg !5579
  call void @llvm.dbg.declare(metadata i32* %6, metadata !5580, metadata !DIExpression()), !dbg !5581
  store i32 0, i32* %6, align 4, !dbg !5581
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !5582
  %8 = call i32 @fileno(%struct._IO_FILE* %7) #15, !dbg !5583
  store i32 %8, i32* %5, align 4, !dbg !5584
  %9 = load i32, i32* %5, align 4, !dbg !5585
  %10 = icmp slt i32 %9, 0, !dbg !5587
  br i1 %10, label %11, label %14, !dbg !5588

11:                                               ; preds = %1
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !5589
  %13 = call i32 @fclose(%struct._IO_FILE* %12), !dbg !5590
  store i32 %13, i32* %2, align 4, !dbg !5591
  br label %40, !dbg !5591

14:                                               ; preds = %1
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !5592
  %16 = call i32 @__freading(%struct._IO_FILE* %15) #15, !dbg !5592
  %17 = icmp ne i32 %16, 0, !dbg !5592
  br i1 %17, label %18, label %23, !dbg !5594

18:                                               ; preds = %14
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !5595
  %20 = call i32 @fileno(%struct._IO_FILE* %19) #15, !dbg !5596
  %21 = call i64 @lseek(i32 %20, i64 0, i32 1) #15, !dbg !5597
  %22 = icmp ne i64 %21, -1, !dbg !5598
  br i1 %22, label %23, label %30, !dbg !5599

23:                                               ; preds = %18, %14
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !5600
  %25 = call i32 @rpl_fflush(%struct._IO_FILE* %24), !dbg !5601
  %26 = icmp ne i32 %25, 0, !dbg !5601
  br i1 %26, label %27, label %30, !dbg !5602

27:                                               ; preds = %23
  %28 = call i32* @__errno_location() #16, !dbg !5603
  %29 = load i32, i32* %28, align 4, !dbg !5603
  store i32 %29, i32* %4, align 4, !dbg !5604
  br label %30, !dbg !5605

30:                                               ; preds = %27, %23, %18
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !5606
  %32 = call i32 @fclose(%struct._IO_FILE* %31), !dbg !5607
  store i32 %32, i32* %6, align 4, !dbg !5608
  %33 = load i32, i32* %4, align 4, !dbg !5609
  %34 = icmp ne i32 %33, 0, !dbg !5611
  br i1 %34, label %35, label %38, !dbg !5612

35:                                               ; preds = %30
  %36 = load i32, i32* %4, align 4, !dbg !5613
  %37 = call i32* @__errno_location() #16, !dbg !5615
  store i32 %36, i32* %37, align 4, !dbg !5616
  store i32 -1, i32* %6, align 4, !dbg !5617
  br label %38, !dbg !5618

38:                                               ; preds = %35, %30
  %39 = load i32, i32* %6, align 4, !dbg !5619
  store i32 %39, i32* %2, align 4, !dbg !5620
  br label %40, !dbg !5620

40:                                               ; preds = %38, %11
  %41 = load i32, i32* %2, align 4, !dbg !5621
  ret i32 %41, !dbg !5621
}

declare dso_local i32 @fclose(%struct._IO_FILE*) #2

; Function Attrs: nounwind
declare dso_local i32 @__freading(%struct._IO_FILE*) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fflush(%struct._IO_FILE* %0) #3 !dbg !5622 {
  %2 = alloca i32, align 4
  %3 = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %3, metadata !5659, metadata !DIExpression()), !dbg !5660
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !5661
  %5 = icmp eq %struct._IO_FILE* %4, null, !dbg !5663
  br i1 %5, label %10, label %6, !dbg !5664

6:                                                ; preds = %1
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !5665
  %8 = call i32 @__freading(%struct._IO_FILE* %7) #15, !dbg !5665
  %9 = icmp ne i32 %8, 0, !dbg !5665
  br i1 %9, label %13, label %10, !dbg !5666

10:                                               ; preds = %6, %1
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !5667
  %12 = call i32 @fflush(%struct._IO_FILE* %11), !dbg !5668
  store i32 %12, i32* %2, align 4, !dbg !5669
  br label %17, !dbg !5669

13:                                               ; preds = %6
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !5670
  call void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE* %14), !dbg !5671
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !5672
  %16 = call i32 @fflush(%struct._IO_FILE* %15), !dbg !5673
  store i32 %16, i32* %2, align 4, !dbg !5674
  br label %17, !dbg !5674

17:                                               ; preds = %13, %10
  %18 = load i32, i32* %2, align 4, !dbg !5675
  ret i32 %18, !dbg !5675
}

declare dso_local i32 @fflush(%struct._IO_FILE*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE* %0) #3 !dbg !5676 {
  %2 = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %2, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %2, metadata !5679, metadata !DIExpression()), !dbg !5680
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8, !dbg !5681
  %4 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %3, i32 0, i32 0, !dbg !5683
  %5 = load i32, i32* %4, align 8, !dbg !5683
  %6 = and i32 %5, 256, !dbg !5684
  %7 = icmp ne i32 %6, 0, !dbg !5684
  br i1 %7, label %8, label %11, !dbg !5685

8:                                                ; preds = %1
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8, !dbg !5686
  %10 = call i32 @rpl_fseeko(%struct._IO_FILE* %9, i64 0, i32 1), !dbg !5687
  br label %11, !dbg !5687

11:                                               ; preds = %8, %1
  ret void, !dbg !5688
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fseeko(%struct._IO_FILE* nonnull %0, i64 %1, i32 %2) #3 !dbg !5689 {
  %4 = alloca i32, align 4
  %5 = alloca %struct._IO_FILE*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %5, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %5, metadata !5726, metadata !DIExpression()), !dbg !5727
  store i64 %1, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !5728, metadata !DIExpression()), !dbg !5729
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !5730, metadata !DIExpression()), !dbg !5731
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !5732
  %10 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %9, i32 0, i32 2, !dbg !5734
  %11 = load i8*, i8** %10, align 8, !dbg !5734
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !5735
  %13 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %12, i32 0, i32 1, !dbg !5736
  %14 = load i8*, i8** %13, align 8, !dbg !5736
  %15 = icmp eq i8* %11, %14, !dbg !5737
  br i1 %15, label %16, label %46, !dbg !5738

16:                                               ; preds = %3
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !5739
  %18 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %17, i32 0, i32 5, !dbg !5740
  %19 = load i8*, i8** %18, align 8, !dbg !5740
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !5741
  %21 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %20, i32 0, i32 4, !dbg !5742
  %22 = load i8*, i8** %21, align 8, !dbg !5742
  %23 = icmp eq i8* %19, %22, !dbg !5743
  br i1 %23, label %24, label %46, !dbg !5744

24:                                               ; preds = %16
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !5745
  %26 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %25, i32 0, i32 9, !dbg !5746
  %27 = load i8*, i8** %26, align 8, !dbg !5746
  %28 = icmp eq i8* %27, null, !dbg !5747
  br i1 %28, label %29, label %46, !dbg !5748

29:                                               ; preds = %24
  call void @llvm.dbg.declare(metadata i64* %8, metadata !5749, metadata !DIExpression()), !dbg !5751
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !5752
  %31 = call i32 @fileno(%struct._IO_FILE* %30) #15, !dbg !5753
  %32 = load i64, i64* %6, align 8, !dbg !5754
  %33 = load i32, i32* %7, align 4, !dbg !5755
  %34 = call i64 @lseek(i32 %31, i64 %32, i32 %33) #15, !dbg !5756
  store i64 %34, i64* %8, align 8, !dbg !5751
  %35 = load i64, i64* %8, align 8, !dbg !5757
  %36 = icmp eq i64 %35, -1, !dbg !5759
  br i1 %36, label %37, label %38, !dbg !5760

37:                                               ; preds = %29
  store i32 -1, i32* %4, align 4, !dbg !5761
  br label %51, !dbg !5761

38:                                               ; preds = %29
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !5763
  %40 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %39, i32 0, i32 0, !dbg !5764
  %41 = load i32, i32* %40, align 8, !dbg !5765
  %42 = and i32 %41, -17, !dbg !5765
  store i32 %42, i32* %40, align 8, !dbg !5765
  %43 = load i64, i64* %8, align 8, !dbg !5766
  %44 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !5767
  %45 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %44, i32 0, i32 21, !dbg !5768
  store i64 %43, i64* %45, align 8, !dbg !5769
  store i32 0, i32* %4, align 4, !dbg !5770
  br label %51, !dbg !5770

46:                                               ; preds = %24, %16, %3
  %47 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !5771
  %48 = load i64, i64* %6, align 8, !dbg !5772
  %49 = load i32, i32* %7, align 4, !dbg !5773
  %50 = call i32 @fseeko(%struct._IO_FILE* %47, i64 %48, i32 %49), !dbg !5774
  store i32 %50, i32* %4, align 4, !dbg !5775
  br label %51, !dbg !5775

51:                                               ; preds = %46, %38, %37
  %52 = load i32, i32* %4, align 4, !dbg !5776
  ret i32 %52, !dbg !5776
}

declare dso_local i32 @fseeko(%struct._IO_FILE*, i64, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rpl_mbrtowc(i32* %0, i8* %1, i64 %2, %struct.__mbstate_t* %3) #3 !dbg !5777 {
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca %struct.__mbstate_t*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i32, align 4
  %12 = alloca i8, align 1
  store i32* %0, i32** %6, align 8
  call void @llvm.dbg.declare(metadata i32** %6, metadata !5792, metadata !DIExpression()), !dbg !5793
  store i8* %1, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !5794, metadata !DIExpression()), !dbg !5795
  store i64 %2, i64* %8, align 8
  call void @llvm.dbg.declare(metadata i64* %8, metadata !5796, metadata !DIExpression()), !dbg !5797
  store %struct.__mbstate_t* %3, %struct.__mbstate_t** %9, align 8
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t** %9, metadata !5798, metadata !DIExpression()), !dbg !5799
  call void @llvm.dbg.declare(metadata i64* %10, metadata !5800, metadata !DIExpression()), !dbg !5801
  call void @llvm.dbg.declare(metadata i32* %11, metadata !5802, metadata !DIExpression()), !dbg !5803
  %13 = load i32*, i32** %6, align 8, !dbg !5804
  %14 = icmp ne i32* %13, null, !dbg !5804
  br i1 %14, label %16, label %15, !dbg !5806

15:                                               ; preds = %4
  store i32* %11, i32** %6, align 8, !dbg !5807
  br label %16, !dbg !5808

16:                                               ; preds = %15, %4
  %17 = load i32*, i32** %6, align 8, !dbg !5809
  %18 = load i8*, i8** %7, align 8, !dbg !5810
  %19 = load i64, i64* %8, align 8, !dbg !5811
  %20 = load %struct.__mbstate_t*, %struct.__mbstate_t** %9, align 8, !dbg !5812
  %21 = call i64 @mbrtowc(i32* %17, i8* %18, i64 %19, %struct.__mbstate_t* %20) #15, !dbg !5813
  store i64 %21, i64* %10, align 8, !dbg !5814
  %22 = load i64, i64* %10, align 8, !dbg !5815
  %23 = icmp ule i64 -2, %22, !dbg !5817
  br i1 %23, label %24, label %35, !dbg !5818

24:                                               ; preds = %16
  %25 = load i64, i64* %8, align 8, !dbg !5819
  %26 = icmp ne i64 %25, 0, !dbg !5820
  br i1 %26, label %27, label %35, !dbg !5821

27:                                               ; preds = %24
  %28 = call zeroext i1 @hard_locale(i32 0), !dbg !5822
  br i1 %28, label %35, label %29, !dbg !5823

29:                                               ; preds = %27
  call void @llvm.dbg.declare(metadata i8* %12, metadata !5824, metadata !DIExpression()), !dbg !5826
  %30 = load i8*, i8** %7, align 8, !dbg !5827
  %31 = load i8, i8* %30, align 1, !dbg !5828
  store i8 %31, i8* %12, align 1, !dbg !5826
  %32 = load i8, i8* %12, align 1, !dbg !5829
  %33 = zext i8 %32 to i32, !dbg !5829
  %34 = load i32*, i32** %6, align 8, !dbg !5830
  store i32 %33, i32* %34, align 4, !dbg !5831
  store i64 1, i64* %5, align 8, !dbg !5832
  br label %37, !dbg !5832

35:                                               ; preds = %27, %24, %16
  %36 = load i64, i64* %10, align 8, !dbg !5833
  store i64 %36, i64* %5, align 8, !dbg !5834
  br label %37, !dbg !5834

37:                                               ; preds = %35, %29
  %38 = load i64, i64* %5, align 8, !dbg !5835
  ret i64 %38, !dbg !5835
}

; Function Attrs: nounwind
declare dso_local i64 @mbrtowc(i32*, i8*, i64, %struct.__mbstate_t*) #7

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @print_and_abort() #0 !dbg !5836 {
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !5837
  %2 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.171, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.172, i64 0, i64 0)), !dbg !5838
  %3 = load volatile i32, i32* @exit_failure, align 4, !dbg !5839
  call void @exit(i32 %3) #13, !dbg !5840
  unreachable, !dbg !5840
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @_obstack_begin(%struct.obstack* %0, i64 %1, i64 %2, i8* (i64)* %3, void (i8*)* %4) #3 !dbg !5841 {
  %6 = alloca %struct.obstack*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8* (i64)*, align 8
  %10 = alloca void (i8*)*, align 8
  store %struct.obstack* %0, %struct.obstack** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.obstack** %6, metadata !5878, metadata !DIExpression()), !dbg !5879
  store i64 %1, i64* %7, align 8
  call void @llvm.dbg.declare(metadata i64* %7, metadata !5880, metadata !DIExpression()), !dbg !5881
  store i64 %2, i64* %8, align 8
  call void @llvm.dbg.declare(metadata i64* %8, metadata !5882, metadata !DIExpression()), !dbg !5883
  store i8* (i64)* %3, i8* (i64)** %9, align 8
  call void @llvm.dbg.declare(metadata i8* (i64)** %9, metadata !5884, metadata !DIExpression()), !dbg !5885
  store void (i8*)* %4, void (i8*)** %10, align 8
  call void @llvm.dbg.declare(metadata void (i8*)** %10, metadata !5886, metadata !DIExpression()), !dbg !5887
  %11 = load i8* (i64)*, i8* (i64)** %9, align 8, !dbg !5888
  %12 = load %struct.obstack*, %struct.obstack** %6, align 8, !dbg !5889
  %13 = getelementptr inbounds %struct.obstack, %struct.obstack* %12, i32 0, i32 7, !dbg !5890
  %14 = bitcast %union.anon.0* %13 to i8* (i64)**, !dbg !5891
  store i8* (i64)* %11, i8* (i64)** %14, align 8, !dbg !5892
  %15 = load void (i8*)*, void (i8*)** %10, align 8, !dbg !5893
  %16 = load %struct.obstack*, %struct.obstack** %6, align 8, !dbg !5894
  %17 = getelementptr inbounds %struct.obstack, %struct.obstack* %16, i32 0, i32 8, !dbg !5895
  %18 = bitcast %union.anon.1* %17 to void (i8*)**, !dbg !5896
  store void (i8*)* %15, void (i8*)** %18, align 8, !dbg !5897
  %19 = load %struct.obstack*, %struct.obstack** %6, align 8, !dbg !5898
  %20 = getelementptr inbounds %struct.obstack, %struct.obstack* %19, i32 0, i32 10, !dbg !5899
  %21 = load i8, i8* %20, align 8, !dbg !5900
  %22 = and i8 %21, -2, !dbg !5900
  store i8 %22, i8* %20, align 8, !dbg !5900
  %23 = load %struct.obstack*, %struct.obstack** %6, align 8, !dbg !5901
  %24 = load i64, i64* %7, align 8, !dbg !5902
  %25 = load i64, i64* %8, align 8, !dbg !5903
  %26 = call i32 @_obstack_begin_worker(%struct.obstack* %23, i64 %24, i64 %25), !dbg !5904
  ret i32 %26, !dbg !5905
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @_obstack_begin_worker(%struct.obstack* %0, i64 %1, i64 %2) #3 !dbg !5906 {
  %4 = alloca %struct.obstack*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca %struct._obstack_chunk*, align 8
  %8 = alloca i32, align 4
  store %struct.obstack* %0, %struct.obstack** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.obstack** %4, metadata !5909, metadata !DIExpression()), !dbg !5910
  store i64 %1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata i64* %5, metadata !5911, metadata !DIExpression()), !dbg !5912
  store i64 %2, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !5913, metadata !DIExpression()), !dbg !5914
  call void @llvm.dbg.declare(metadata %struct._obstack_chunk** %7, metadata !5915, metadata !DIExpression()), !dbg !5916
  %9 = load i64, i64* %6, align 8, !dbg !5917
  %10 = icmp eq i64 %9, 0, !dbg !5919
  br i1 %10, label %11, label %12, !dbg !5920

11:                                               ; preds = %3
  store i64 16, i64* %6, align 8, !dbg !5921
  br label %12, !dbg !5922

12:                                               ; preds = %11, %3
  %13 = load i64, i64* %5, align 8, !dbg !5923
  %14 = icmp eq i64 %13, 0, !dbg !5925
  br i1 %14, label %15, label %19, !dbg !5926

15:                                               ; preds = %12
  call void @llvm.dbg.declare(metadata i32* %8, metadata !5927, metadata !DIExpression()), !dbg !5929
  store i32 32, i32* %8, align 4, !dbg !5929
  %16 = load i32, i32* %8, align 4, !dbg !5930
  %17 = sub nsw i32 4096, %16, !dbg !5931
  %18 = sext i32 %17 to i64, !dbg !5932
  store i64 %18, i64* %5, align 8, !dbg !5933
  br label %19, !dbg !5934

19:                                               ; preds = %15, %12
  %20 = load i64, i64* %5, align 8, !dbg !5935
  %21 = load %struct.obstack*, %struct.obstack** %4, align 8, !dbg !5936
  %22 = getelementptr inbounds %struct.obstack, %struct.obstack* %21, i32 0, i32 0, !dbg !5937
  store i64 %20, i64* %22, align 8, !dbg !5938
  %23 = load i64, i64* %6, align 8, !dbg !5939
  %24 = sub i64 %23, 1, !dbg !5940
  %25 = load %struct.obstack*, %struct.obstack** %4, align 8, !dbg !5941
  %26 = getelementptr inbounds %struct.obstack, %struct.obstack* %25, i32 0, i32 6, !dbg !5942
  store i64 %24, i64* %26, align 8, !dbg !5943
  %27 = load %struct.obstack*, %struct.obstack** %4, align 8, !dbg !5944
  %28 = load %struct.obstack*, %struct.obstack** %4, align 8, !dbg !5945
  %29 = getelementptr inbounds %struct.obstack, %struct.obstack* %28, i32 0, i32 0, !dbg !5946
  %30 = load i64, i64* %29, align 8, !dbg !5946
  %31 = call i8* @call_chunkfun(%struct.obstack* %27, i64 %30), !dbg !5947
  %32 = bitcast i8* %31 to %struct._obstack_chunk*, !dbg !5947
  %33 = load %struct.obstack*, %struct.obstack** %4, align 8, !dbg !5948
  %34 = getelementptr inbounds %struct.obstack, %struct.obstack* %33, i32 0, i32 1, !dbg !5949
  store %struct._obstack_chunk* %32, %struct._obstack_chunk** %34, align 8, !dbg !5950
  store %struct._obstack_chunk* %32, %struct._obstack_chunk** %7, align 8, !dbg !5951
  %35 = load %struct._obstack_chunk*, %struct._obstack_chunk** %7, align 8, !dbg !5952
  %36 = icmp ne %struct._obstack_chunk* %35, null, !dbg !5952
  br i1 %36, label %39, label %37, !dbg !5954

37:                                               ; preds = %19
  %38 = load void ()*, void ()** @obstack_alloc_failed_handler, align 8, !dbg !5955
  call void %38() #17, !dbg !5956
  unreachable, !dbg !5956

39:                                               ; preds = %19
  %40 = load %struct._obstack_chunk*, %struct._obstack_chunk** %7, align 8, !dbg !5957
  %41 = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %40, i32 0, i32 2, !dbg !5957
  %42 = getelementptr inbounds [0 x i8], [0 x i8]* %41, i64 0, i64 0, !dbg !5957
  %43 = ptrtoint i8* %42 to i64, !dbg !5957
  %44 = sub i64 %43, 0, !dbg !5957
  %45 = load i64, i64* %6, align 8, !dbg !5957
  %46 = sub i64 %45, 1, !dbg !5957
  %47 = add i64 %44, %46, !dbg !5957
  %48 = load i64, i64* %6, align 8, !dbg !5957
  %49 = sub i64 %48, 1, !dbg !5957
  %50 = xor i64 %49, -1, !dbg !5957
  %51 = and i64 %47, %50, !dbg !5957
  %52 = getelementptr inbounds i8, i8* null, i64 %51, !dbg !5957
  %53 = load %struct.obstack*, %struct.obstack** %4, align 8, !dbg !5958
  %54 = getelementptr inbounds %struct.obstack, %struct.obstack* %53, i32 0, i32 2, !dbg !5959
  store i8* %52, i8** %54, align 8, !dbg !5960
  %55 = load %struct.obstack*, %struct.obstack** %4, align 8, !dbg !5961
  %56 = getelementptr inbounds %struct.obstack, %struct.obstack* %55, i32 0, i32 3, !dbg !5962
  store i8* %52, i8** %56, align 8, !dbg !5963
  %57 = load %struct._obstack_chunk*, %struct._obstack_chunk** %7, align 8, !dbg !5964
  %58 = bitcast %struct._obstack_chunk* %57 to i8*, !dbg !5965
  %59 = load %struct.obstack*, %struct.obstack** %4, align 8, !dbg !5966
  %60 = getelementptr inbounds %struct.obstack, %struct.obstack* %59, i32 0, i32 0, !dbg !5967
  %61 = load i64, i64* %60, align 8, !dbg !5967
  %62 = getelementptr inbounds i8, i8* %58, i64 %61, !dbg !5968
  %63 = load %struct._obstack_chunk*, %struct._obstack_chunk** %7, align 8, !dbg !5969
  %64 = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %63, i32 0, i32 0, !dbg !5970
  store i8* %62, i8** %64, align 8, !dbg !5971
  %65 = load %struct.obstack*, %struct.obstack** %4, align 8, !dbg !5972
  %66 = getelementptr inbounds %struct.obstack, %struct.obstack* %65, i32 0, i32 4, !dbg !5973
  store i8* %62, i8** %66, align 8, !dbg !5974
  %67 = load %struct._obstack_chunk*, %struct._obstack_chunk** %7, align 8, !dbg !5975
  %68 = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %67, i32 0, i32 1, !dbg !5976
  store %struct._obstack_chunk* null, %struct._obstack_chunk** %68, align 8, !dbg !5977
  %69 = load %struct.obstack*, %struct.obstack** %4, align 8, !dbg !5978
  %70 = getelementptr inbounds %struct.obstack, %struct.obstack* %69, i32 0, i32 10, !dbg !5979
  %71 = load i8, i8* %70, align 8, !dbg !5980
  %72 = and i8 %71, -3, !dbg !5980
  store i8 %72, i8* %70, align 8, !dbg !5980
  %73 = load %struct.obstack*, %struct.obstack** %4, align 8, !dbg !5981
  %74 = getelementptr inbounds %struct.obstack, %struct.obstack* %73, i32 0, i32 10, !dbg !5982
  %75 = load i8, i8* %74, align 8, !dbg !5983
  %76 = and i8 %75, -5, !dbg !5983
  store i8 %76, i8* %74, align 8, !dbg !5983
  ret i32 1, !dbg !5984
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @call_chunkfun(%struct.obstack* %0, i64 %1) #3 !dbg !5985 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct.obstack*, align 8
  %5 = alloca i64, align 8
  store %struct.obstack* %0, %struct.obstack** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.obstack** %4, metadata !5988, metadata !DIExpression()), !dbg !5989
  store i64 %1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata i64* %5, metadata !5990, metadata !DIExpression()), !dbg !5991
  %6 = load %struct.obstack*, %struct.obstack** %4, align 8, !dbg !5992
  %7 = getelementptr inbounds %struct.obstack, %struct.obstack* %6, i32 0, i32 10, !dbg !5994
  %8 = load i8, i8* %7, align 8, !dbg !5994
  %9 = and i8 %8, 1, !dbg !5994
  %10 = zext i8 %9 to i32, !dbg !5994
  %11 = icmp ne i32 %10, 0, !dbg !5992
  br i1 %11, label %12, label %22, !dbg !5995

12:                                               ; preds = %2
  %13 = load %struct.obstack*, %struct.obstack** %4, align 8, !dbg !5996
  %14 = getelementptr inbounds %struct.obstack, %struct.obstack* %13, i32 0, i32 7, !dbg !5997
  %15 = bitcast %union.anon.0* %14 to i8* (i8*, i64)**, !dbg !5998
  %16 = load i8* (i8*, i64)*, i8* (i8*, i64)** %15, align 8, !dbg !5998
  %17 = load %struct.obstack*, %struct.obstack** %4, align 8, !dbg !5999
  %18 = getelementptr inbounds %struct.obstack, %struct.obstack* %17, i32 0, i32 9, !dbg !6000
  %19 = load i8*, i8** %18, align 8, !dbg !6000
  %20 = load i64, i64* %5, align 8, !dbg !6001
  %21 = call i8* %16(i8* %19, i64 %20), !dbg !5996
  store i8* %21, i8** %3, align 8, !dbg !6002
  br label %29, !dbg !6002

22:                                               ; preds = %2
  %23 = load %struct.obstack*, %struct.obstack** %4, align 8, !dbg !6003
  %24 = getelementptr inbounds %struct.obstack, %struct.obstack* %23, i32 0, i32 7, !dbg !6004
  %25 = bitcast %union.anon.0* %24 to i8* (i64)**, !dbg !6005
  %26 = load i8* (i64)*, i8* (i64)** %25, align 8, !dbg !6005
  %27 = load i64, i64* %5, align 8, !dbg !6006
  %28 = call i8* %26(i64 %27), !dbg !6003
  store i8* %28, i8** %3, align 8, !dbg !6007
  br label %29, !dbg !6007

29:                                               ; preds = %22, %12
  %30 = load i8*, i8** %3, align 8, !dbg !6008
  ret i8* %30, !dbg !6008
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @_obstack_begin_1(%struct.obstack* %0, i64 %1, i64 %2, i8* (i8*, i64)* %3, void (i8*, i8*)* %4, i8* %5) #3 !dbg !6009 {
  %7 = alloca %struct.obstack*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i8* (i8*, i64)*, align 8
  %11 = alloca void (i8*, i8*)*, align 8
  %12 = alloca i8*, align 8
  store %struct.obstack* %0, %struct.obstack** %7, align 8
  call void @llvm.dbg.declare(metadata %struct.obstack** %7, metadata !6012, metadata !DIExpression()), !dbg !6013
  store i64 %1, i64* %8, align 8
  call void @llvm.dbg.declare(metadata i64* %8, metadata !6014, metadata !DIExpression()), !dbg !6015
  store i64 %2, i64* %9, align 8
  call void @llvm.dbg.declare(metadata i64* %9, metadata !6016, metadata !DIExpression()), !dbg !6017
  store i8* (i8*, i64)* %3, i8* (i8*, i64)** %10, align 8
  call void @llvm.dbg.declare(metadata i8* (i8*, i64)** %10, metadata !6018, metadata !DIExpression()), !dbg !6019
  store void (i8*, i8*)* %4, void (i8*, i8*)** %11, align 8
  call void @llvm.dbg.declare(metadata void (i8*, i8*)** %11, metadata !6020, metadata !DIExpression()), !dbg !6021
  store i8* %5, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !6022, metadata !DIExpression()), !dbg !6023
  %13 = load i8* (i8*, i64)*, i8* (i8*, i64)** %10, align 8, !dbg !6024
  %14 = load %struct.obstack*, %struct.obstack** %7, align 8, !dbg !6025
  %15 = getelementptr inbounds %struct.obstack, %struct.obstack* %14, i32 0, i32 7, !dbg !6026
  %16 = bitcast %union.anon.0* %15 to i8* (i8*, i64)**, !dbg !6027
  store i8* (i8*, i64)* %13, i8* (i8*, i64)** %16, align 8, !dbg !6028
  %17 = load void (i8*, i8*)*, void (i8*, i8*)** %11, align 8, !dbg !6029
  %18 = load %struct.obstack*, %struct.obstack** %7, align 8, !dbg !6030
  %19 = getelementptr inbounds %struct.obstack, %struct.obstack* %18, i32 0, i32 8, !dbg !6031
  %20 = bitcast %union.anon.1* %19 to void (i8*, i8*)**, !dbg !6032
  store void (i8*, i8*)* %17, void (i8*, i8*)** %20, align 8, !dbg !6033
  %21 = load i8*, i8** %12, align 8, !dbg !6034
  %22 = load %struct.obstack*, %struct.obstack** %7, align 8, !dbg !6035
  %23 = getelementptr inbounds %struct.obstack, %struct.obstack* %22, i32 0, i32 9, !dbg !6036
  store i8* %21, i8** %23, align 8, !dbg !6037
  %24 = load %struct.obstack*, %struct.obstack** %7, align 8, !dbg !6038
  %25 = getelementptr inbounds %struct.obstack, %struct.obstack* %24, i32 0, i32 10, !dbg !6039
  %26 = load i8, i8* %25, align 8, !dbg !6040
  %27 = and i8 %26, -2, !dbg !6040
  %28 = or i8 %27, 1, !dbg !6040
  store i8 %28, i8* %25, align 8, !dbg !6040
  %29 = load %struct.obstack*, %struct.obstack** %7, align 8, !dbg !6041
  %30 = load i64, i64* %8, align 8, !dbg !6042
  %31 = load i64, i64* %9, align 8, !dbg !6043
  %32 = call i32 @_obstack_begin_worker(%struct.obstack* %29, i64 %30, i64 %31), !dbg !6044
  ret i32 %32, !dbg !6045
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_obstack_newchunk(%struct.obstack* %0, i64 %1) #3 !dbg !6046 {
  %3 = alloca %struct.obstack*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %struct._obstack_chunk*, align 8
  %6 = alloca %struct._obstack_chunk*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  store %struct.obstack* %0, %struct.obstack** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.obstack** %3, metadata !6049, metadata !DIExpression()), !dbg !6050
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !6051, metadata !DIExpression()), !dbg !6052
  call void @llvm.dbg.declare(metadata %struct._obstack_chunk** %5, metadata !6053, metadata !DIExpression()), !dbg !6054
  %12 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !6055
  %13 = getelementptr inbounds %struct.obstack, %struct.obstack* %12, i32 0, i32 1, !dbg !6056
  %14 = load %struct._obstack_chunk*, %struct._obstack_chunk** %13, align 8, !dbg !6056
  store %struct._obstack_chunk* %14, %struct._obstack_chunk** %5, align 8, !dbg !6054
  call void @llvm.dbg.declare(metadata %struct._obstack_chunk** %6, metadata !6057, metadata !DIExpression()), !dbg !6058
  store %struct._obstack_chunk* null, %struct._obstack_chunk** %6, align 8, !dbg !6058
  call void @llvm.dbg.declare(metadata i64* %7, metadata !6059, metadata !DIExpression()), !dbg !6060
  %15 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !6061
  %16 = getelementptr inbounds %struct.obstack, %struct.obstack* %15, i32 0, i32 3, !dbg !6062
  %17 = load i8*, i8** %16, align 8, !dbg !6062
  %18 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !6063
  %19 = getelementptr inbounds %struct.obstack, %struct.obstack* %18, i32 0, i32 2, !dbg !6064
  %20 = load i8*, i8** %19, align 8, !dbg !6064
  %21 = ptrtoint i8* %17 to i64, !dbg !6065
  %22 = ptrtoint i8* %20 to i64, !dbg !6065
  %23 = sub i64 %21, %22, !dbg !6065
  store i64 %23, i64* %7, align 8, !dbg !6060
  call void @llvm.dbg.declare(metadata i8** %8, metadata !6066, metadata !DIExpression()), !dbg !6067
  call void @llvm.dbg.declare(metadata i64* %9, metadata !6068, metadata !DIExpression()), !dbg !6069
  %24 = load i64, i64* %7, align 8, !dbg !6070
  %25 = load i64, i64* %4, align 8, !dbg !6071
  %26 = add i64 %24, %25, !dbg !6072
  store i64 %26, i64* %9, align 8, !dbg !6069
  call void @llvm.dbg.declare(metadata i64* %10, metadata !6073, metadata !DIExpression()), !dbg !6074
  %27 = load i64, i64* %9, align 8, !dbg !6075
  %28 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !6076
  %29 = getelementptr inbounds %struct.obstack, %struct.obstack* %28, i32 0, i32 6, !dbg !6077
  %30 = load i64, i64* %29, align 8, !dbg !6077
  %31 = add i64 %27, %30, !dbg !6078
  store i64 %31, i64* %10, align 8, !dbg !6074
  call void @llvm.dbg.declare(metadata i64* %11, metadata !6079, metadata !DIExpression()), !dbg !6080
  %32 = load i64, i64* %10, align 8, !dbg !6081
  %33 = load i64, i64* %7, align 8, !dbg !6082
  %34 = lshr i64 %33, 3, !dbg !6083
  %35 = add i64 %32, %34, !dbg !6084
  %36 = add i64 %35, 100, !dbg !6085
  store i64 %36, i64* %11, align 8, !dbg !6080
  %37 = load i64, i64* %11, align 8, !dbg !6086
  %38 = load i64, i64* %10, align 8, !dbg !6088
  %39 = icmp ult i64 %37, %38, !dbg !6089
  br i1 %39, label %40, label %42, !dbg !6090

40:                                               ; preds = %2
  %41 = load i64, i64* %10, align 8, !dbg !6091
  store i64 %41, i64* %11, align 8, !dbg !6092
  br label %42, !dbg !6093

42:                                               ; preds = %40, %2
  %43 = load i64, i64* %11, align 8, !dbg !6094
  %44 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !6096
  %45 = getelementptr inbounds %struct.obstack, %struct.obstack* %44, i32 0, i32 0, !dbg !6097
  %46 = load i64, i64* %45, align 8, !dbg !6097
  %47 = icmp ult i64 %43, %46, !dbg !6098
  br i1 %47, label %48, label %52, !dbg !6099

48:                                               ; preds = %42
  %49 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !6100
  %50 = getelementptr inbounds %struct.obstack, %struct.obstack* %49, i32 0, i32 0, !dbg !6101
  %51 = load i64, i64* %50, align 8, !dbg !6101
  store i64 %51, i64* %11, align 8, !dbg !6102
  br label %52, !dbg !6103

52:                                               ; preds = %48, %42
  %53 = load i64, i64* %7, align 8, !dbg !6104
  %54 = load i64, i64* %9, align 8, !dbg !6106
  %55 = icmp ule i64 %53, %54, !dbg !6107
  br i1 %55, label %56, label %65, !dbg !6108

56:                                               ; preds = %52
  %57 = load i64, i64* %9, align 8, !dbg !6109
  %58 = load i64, i64* %10, align 8, !dbg !6110
  %59 = icmp ule i64 %57, %58, !dbg !6111
  br i1 %59, label %60, label %65, !dbg !6112

60:                                               ; preds = %56
  %61 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !6113
  %62 = load i64, i64* %11, align 8, !dbg !6114
  %63 = call i8* @call_chunkfun(%struct.obstack* %61, i64 %62), !dbg !6115
  %64 = bitcast i8* %63 to %struct._obstack_chunk*, !dbg !6115
  store %struct._obstack_chunk* %64, %struct._obstack_chunk** %6, align 8, !dbg !6116
  br label %65, !dbg !6117

65:                                               ; preds = %60, %56, %52
  %66 = load %struct._obstack_chunk*, %struct._obstack_chunk** %6, align 8, !dbg !6118
  %67 = icmp ne %struct._obstack_chunk* %66, null, !dbg !6118
  br i1 %67, label %70, label %68, !dbg !6120

68:                                               ; preds = %65
  %69 = load void ()*, void ()** @obstack_alloc_failed_handler, align 8, !dbg !6121
  call void %69() #17, !dbg !6122
  unreachable, !dbg !6122

70:                                               ; preds = %65
  %71 = load %struct._obstack_chunk*, %struct._obstack_chunk** %6, align 8, !dbg !6123
  %72 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !6124
  %73 = getelementptr inbounds %struct.obstack, %struct.obstack* %72, i32 0, i32 1, !dbg !6125
  store %struct._obstack_chunk* %71, %struct._obstack_chunk** %73, align 8, !dbg !6126
  %74 = load %struct._obstack_chunk*, %struct._obstack_chunk** %5, align 8, !dbg !6127
  %75 = load %struct._obstack_chunk*, %struct._obstack_chunk** %6, align 8, !dbg !6128
  %76 = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %75, i32 0, i32 1, !dbg !6129
  store %struct._obstack_chunk* %74, %struct._obstack_chunk** %76, align 8, !dbg !6130
  %77 = load %struct._obstack_chunk*, %struct._obstack_chunk** %6, align 8, !dbg !6131
  %78 = bitcast %struct._obstack_chunk* %77 to i8*, !dbg !6132
  %79 = load i64, i64* %11, align 8, !dbg !6133
  %80 = getelementptr inbounds i8, i8* %78, i64 %79, !dbg !6134
  %81 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !6135
  %82 = getelementptr inbounds %struct.obstack, %struct.obstack* %81, i32 0, i32 4, !dbg !6136
  store i8* %80, i8** %82, align 8, !dbg !6137
  %83 = load %struct._obstack_chunk*, %struct._obstack_chunk** %6, align 8, !dbg !6138
  %84 = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %83, i32 0, i32 0, !dbg !6139
  store i8* %80, i8** %84, align 8, !dbg !6140
  %85 = load %struct._obstack_chunk*, %struct._obstack_chunk** %6, align 8, !dbg !6141
  %86 = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %85, i32 0, i32 2, !dbg !6141
  %87 = getelementptr inbounds [0 x i8], [0 x i8]* %86, i64 0, i64 0, !dbg !6141
  %88 = ptrtoint i8* %87 to i64, !dbg !6141
  %89 = sub i64 %88, 0, !dbg !6141
  %90 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !6141
  %91 = getelementptr inbounds %struct.obstack, %struct.obstack* %90, i32 0, i32 6, !dbg !6141
  %92 = load i64, i64* %91, align 8, !dbg !6141
  %93 = add i64 %89, %92, !dbg !6141
  %94 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !6141
  %95 = getelementptr inbounds %struct.obstack, %struct.obstack* %94, i32 0, i32 6, !dbg !6141
  %96 = load i64, i64* %95, align 8, !dbg !6141
  %97 = xor i64 %96, -1, !dbg !6141
  %98 = and i64 %93, %97, !dbg !6141
  %99 = getelementptr inbounds i8, i8* null, i64 %98, !dbg !6141
  store i8* %99, i8** %8, align 8, !dbg !6142
  %100 = load i8*, i8** %8, align 8, !dbg !6143
  %101 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !6144
  %102 = getelementptr inbounds %struct.obstack, %struct.obstack* %101, i32 0, i32 2, !dbg !6145
  %103 = load i8*, i8** %102, align 8, !dbg !6145
  %104 = load i64, i64* %7, align 8, !dbg !6146
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %100, i8* align 1 %103, i64 %104, i1 false), !dbg !6147
  %105 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !6148
  %106 = getelementptr inbounds %struct.obstack, %struct.obstack* %105, i32 0, i32 10, !dbg !6150
  %107 = load i8, i8* %106, align 8, !dbg !6150
  %108 = lshr i8 %107, 1, !dbg !6150
  %109 = and i8 %108, 1, !dbg !6150
  %110 = zext i8 %109 to i32, !dbg !6150
  %111 = icmp ne i32 %110, 0, !dbg !6148
  br i1 %111, label %141, label %112, !dbg !6151

112:                                              ; preds = %70
  %113 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !6152
  %114 = getelementptr inbounds %struct.obstack, %struct.obstack* %113, i32 0, i32 2, !dbg !6153
  %115 = load i8*, i8** %114, align 8, !dbg !6153
  %116 = load %struct._obstack_chunk*, %struct._obstack_chunk** %5, align 8, !dbg !6154
  %117 = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %116, i32 0, i32 2, !dbg !6154
  %118 = getelementptr inbounds [0 x i8], [0 x i8]* %117, i64 0, i64 0, !dbg !6154
  %119 = ptrtoint i8* %118 to i64, !dbg !6154
  %120 = sub i64 %119, 0, !dbg !6154
  %121 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !6154
  %122 = getelementptr inbounds %struct.obstack, %struct.obstack* %121, i32 0, i32 6, !dbg !6154
  %123 = load i64, i64* %122, align 8, !dbg !6154
  %124 = add i64 %120, %123, !dbg !6154
  %125 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !6154
  %126 = getelementptr inbounds %struct.obstack, %struct.obstack* %125, i32 0, i32 6, !dbg !6154
  %127 = load i64, i64* %126, align 8, !dbg !6154
  %128 = xor i64 %127, -1, !dbg !6154
  %129 = and i64 %124, %128, !dbg !6154
  %130 = getelementptr inbounds i8, i8* null, i64 %129, !dbg !6154
  %131 = icmp eq i8* %115, %130, !dbg !6155
  br i1 %131, label %132, label %141, !dbg !6156

132:                                              ; preds = %112
  %133 = load %struct._obstack_chunk*, %struct._obstack_chunk** %5, align 8, !dbg !6157
  %134 = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %133, i32 0, i32 1, !dbg !6159
  %135 = load %struct._obstack_chunk*, %struct._obstack_chunk** %134, align 8, !dbg !6159
  %136 = load %struct._obstack_chunk*, %struct._obstack_chunk** %6, align 8, !dbg !6160
  %137 = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %136, i32 0, i32 1, !dbg !6161
  store %struct._obstack_chunk* %135, %struct._obstack_chunk** %137, align 8, !dbg !6162
  %138 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !6163
  %139 = load %struct._obstack_chunk*, %struct._obstack_chunk** %5, align 8, !dbg !6164
  %140 = bitcast %struct._obstack_chunk* %139 to i8*, !dbg !6164
  call void @call_freefun(%struct.obstack* %138, i8* %140), !dbg !6165
  br label %141, !dbg !6166

141:                                              ; preds = %132, %112, %70
  %142 = load i8*, i8** %8, align 8, !dbg !6167
  %143 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !6168
  %144 = getelementptr inbounds %struct.obstack, %struct.obstack* %143, i32 0, i32 2, !dbg !6169
  store i8* %142, i8** %144, align 8, !dbg !6170
  %145 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !6171
  %146 = getelementptr inbounds %struct.obstack, %struct.obstack* %145, i32 0, i32 2, !dbg !6172
  %147 = load i8*, i8** %146, align 8, !dbg !6172
  %148 = load i64, i64* %7, align 8, !dbg !6173
  %149 = getelementptr inbounds i8, i8* %147, i64 %148, !dbg !6174
  %150 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !6175
  %151 = getelementptr inbounds %struct.obstack, %struct.obstack* %150, i32 0, i32 3, !dbg !6176
  store i8* %149, i8** %151, align 8, !dbg !6177
  %152 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !6178
  %153 = getelementptr inbounds %struct.obstack, %struct.obstack* %152, i32 0, i32 10, !dbg !6179
  %154 = load i8, i8* %153, align 8, !dbg !6180
  %155 = and i8 %154, -3, !dbg !6180
  store i8 %155, i8* %153, align 8, !dbg !6180
  ret void, !dbg !6181
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @call_freefun(%struct.obstack* %0, i8* %1) #3 !dbg !6182 {
  %3 = alloca %struct.obstack*, align 8
  %4 = alloca i8*, align 8
  store %struct.obstack* %0, %struct.obstack** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.obstack** %3, metadata !6185, metadata !DIExpression()), !dbg !6186
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !6187, metadata !DIExpression()), !dbg !6188
  %5 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !6189
  %6 = getelementptr inbounds %struct.obstack, %struct.obstack* %5, i32 0, i32 10, !dbg !6191
  %7 = load i8, i8* %6, align 8, !dbg !6191
  %8 = and i8 %7, 1, !dbg !6191
  %9 = zext i8 %8 to i32, !dbg !6191
  %10 = icmp ne i32 %9, 0, !dbg !6189
  br i1 %10, label %11, label %20, !dbg !6192

11:                                               ; preds = %2
  %12 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !6193
  %13 = getelementptr inbounds %struct.obstack, %struct.obstack* %12, i32 0, i32 8, !dbg !6194
  %14 = bitcast %union.anon.1* %13 to void (i8*, i8*)**, !dbg !6195
  %15 = load void (i8*, i8*)*, void (i8*, i8*)** %14, align 8, !dbg !6195
  %16 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !6196
  %17 = getelementptr inbounds %struct.obstack, %struct.obstack* %16, i32 0, i32 9, !dbg !6197
  %18 = load i8*, i8** %17, align 8, !dbg !6197
  %19 = load i8*, i8** %4, align 8, !dbg !6198
  call void %15(i8* %18, i8* %19), !dbg !6193
  br label %26, !dbg !6193

20:                                               ; preds = %2
  %21 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !6199
  %22 = getelementptr inbounds %struct.obstack, %struct.obstack* %21, i32 0, i32 8, !dbg !6200
  %23 = bitcast %union.anon.1* %22 to void (i8*)**, !dbg !6201
  %24 = load void (i8*)*, void (i8*)** %23, align 8, !dbg !6201
  %25 = load i8*, i8** %4, align 8, !dbg !6202
  call void %24(i8* %25), !dbg !6199
  br label %26

26:                                               ; preds = %20, %11
  ret void, !dbg !6203
}

; Function Attrs: noinline nounwind optnone readonly uwtable willreturn
define dso_local i32 @_obstack_allocated_p(%struct.obstack* %0, i8* %1) #9 !dbg !6204 {
  %3 = alloca %struct.obstack*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %struct._obstack_chunk*, align 8
  %6 = alloca %struct._obstack_chunk*, align 8
  store %struct.obstack* %0, %struct.obstack** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.obstack** %3, metadata !6207, metadata !DIExpression()), !dbg !6208
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !6209, metadata !DIExpression()), !dbg !6210
  call void @llvm.dbg.declare(metadata %struct._obstack_chunk** %5, metadata !6211, metadata !DIExpression()), !dbg !6212
  call void @llvm.dbg.declare(metadata %struct._obstack_chunk** %6, metadata !6213, metadata !DIExpression()), !dbg !6214
  %7 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !6215
  %8 = getelementptr inbounds %struct.obstack, %struct.obstack* %7, i32 0, i32 1, !dbg !6216
  %9 = load %struct._obstack_chunk*, %struct._obstack_chunk** %8, align 8, !dbg !6216
  store %struct._obstack_chunk* %9, %struct._obstack_chunk** %5, align 8, !dbg !6217
  br label %10, !dbg !6218

10:                                               ; preds = %28, %2
  %11 = load %struct._obstack_chunk*, %struct._obstack_chunk** %5, align 8, !dbg !6219
  %12 = icmp ne %struct._obstack_chunk* %11, null, !dbg !6220
  br i1 %12, label %13, label %26, !dbg !6221

13:                                               ; preds = %10
  %14 = load %struct._obstack_chunk*, %struct._obstack_chunk** %5, align 8, !dbg !6222
  %15 = bitcast %struct._obstack_chunk* %14 to i8*, !dbg !6223
  %16 = load i8*, i8** %4, align 8, !dbg !6224
  %17 = icmp uge i8* %15, %16, !dbg !6225
  br i1 %17, label %24, label %18, !dbg !6226

18:                                               ; preds = %13
  %19 = load %struct._obstack_chunk*, %struct._obstack_chunk** %5, align 8, !dbg !6227
  %20 = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %19, i32 0, i32 0, !dbg !6228
  %21 = load i8*, i8** %20, align 8, !dbg !6228
  %22 = load i8*, i8** %4, align 8, !dbg !6229
  %23 = icmp ult i8* %21, %22, !dbg !6230
  br label %24, !dbg !6226

24:                                               ; preds = %18, %13
  %25 = phi i1 [ true, %13 ], [ %23, %18 ]
  br label %26

26:                                               ; preds = %24, %10
  %27 = phi i1 [ false, %10 ], [ %25, %24 ], !dbg !6231
  br i1 %27, label %28, label %33, !dbg !6218

28:                                               ; preds = %26
  %29 = load %struct._obstack_chunk*, %struct._obstack_chunk** %5, align 8, !dbg !6232
  %30 = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %29, i32 0, i32 1, !dbg !6234
  %31 = load %struct._obstack_chunk*, %struct._obstack_chunk** %30, align 8, !dbg !6234
  store %struct._obstack_chunk* %31, %struct._obstack_chunk** %6, align 8, !dbg !6235
  %32 = load %struct._obstack_chunk*, %struct._obstack_chunk** %6, align 8, !dbg !6236
  store %struct._obstack_chunk* %32, %struct._obstack_chunk** %5, align 8, !dbg !6237
  br label %10, !dbg !6218, !llvm.loop !6238

33:                                               ; preds = %26
  %34 = load %struct._obstack_chunk*, %struct._obstack_chunk** %5, align 8, !dbg !6240
  %35 = icmp ne %struct._obstack_chunk* %34, null, !dbg !6241
  %36 = zext i1 %35 to i32, !dbg !6241
  ret i32 %36, !dbg !6242
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_obstack_free(%struct.obstack* %0, i8* %1) #3 !dbg !6243 {
  %3 = alloca %struct.obstack*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %struct._obstack_chunk*, align 8
  %6 = alloca %struct._obstack_chunk*, align 8
  store %struct.obstack* %0, %struct.obstack** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.obstack** %3, metadata !6244, metadata !DIExpression()), !dbg !6245
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !6246, metadata !DIExpression()), !dbg !6247
  call void @llvm.dbg.declare(metadata %struct._obstack_chunk** %5, metadata !6248, metadata !DIExpression()), !dbg !6249
  call void @llvm.dbg.declare(metadata %struct._obstack_chunk** %6, metadata !6250, metadata !DIExpression()), !dbg !6251
  %7 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !6252
  %8 = getelementptr inbounds %struct.obstack, %struct.obstack* %7, i32 0, i32 1, !dbg !6253
  %9 = load %struct._obstack_chunk*, %struct._obstack_chunk** %8, align 8, !dbg !6253
  store %struct._obstack_chunk* %9, %struct._obstack_chunk** %5, align 8, !dbg !6254
  br label %10, !dbg !6255

10:                                               ; preds = %28, %2
  %11 = load %struct._obstack_chunk*, %struct._obstack_chunk** %5, align 8, !dbg !6256
  %12 = icmp ne %struct._obstack_chunk* %11, null, !dbg !6257
  br i1 %12, label %13, label %26, !dbg !6258

13:                                               ; preds = %10
  %14 = load %struct._obstack_chunk*, %struct._obstack_chunk** %5, align 8, !dbg !6259
  %15 = bitcast %struct._obstack_chunk* %14 to i8*, !dbg !6260
  %16 = load i8*, i8** %4, align 8, !dbg !6261
  %17 = icmp uge i8* %15, %16, !dbg !6262
  br i1 %17, label %24, label %18, !dbg !6263

18:                                               ; preds = %13
  %19 = load %struct._obstack_chunk*, %struct._obstack_chunk** %5, align 8, !dbg !6264
  %20 = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %19, i32 0, i32 0, !dbg !6265
  %21 = load i8*, i8** %20, align 8, !dbg !6265
  %22 = load i8*, i8** %4, align 8, !dbg !6266
  %23 = icmp ult i8* %21, %22, !dbg !6267
  br label %24, !dbg !6263

24:                                               ; preds = %18, %13
  %25 = phi i1 [ true, %13 ], [ %23, %18 ]
  br label %26

26:                                               ; preds = %24, %10
  %27 = phi i1 [ false, %10 ], [ %25, %24 ], !dbg !6268
  br i1 %27, label %28, label %41, !dbg !6255

28:                                               ; preds = %26
  %29 = load %struct._obstack_chunk*, %struct._obstack_chunk** %5, align 8, !dbg !6269
  %30 = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %29, i32 0, i32 1, !dbg !6271
  %31 = load %struct._obstack_chunk*, %struct._obstack_chunk** %30, align 8, !dbg !6271
  store %struct._obstack_chunk* %31, %struct._obstack_chunk** %6, align 8, !dbg !6272
  %32 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !6273
  %33 = load %struct._obstack_chunk*, %struct._obstack_chunk** %5, align 8, !dbg !6274
  %34 = bitcast %struct._obstack_chunk* %33 to i8*, !dbg !6274
  call void @call_freefun(%struct.obstack* %32, i8* %34), !dbg !6275
  %35 = load %struct._obstack_chunk*, %struct._obstack_chunk** %6, align 8, !dbg !6276
  store %struct._obstack_chunk* %35, %struct._obstack_chunk** %5, align 8, !dbg !6277
  %36 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !6278
  %37 = getelementptr inbounds %struct.obstack, %struct.obstack* %36, i32 0, i32 10, !dbg !6279
  %38 = load i8, i8* %37, align 8, !dbg !6280
  %39 = and i8 %38, -3, !dbg !6280
  %40 = or i8 %39, 2, !dbg !6280
  store i8 %40, i8* %37, align 8, !dbg !6280
  br label %10, !dbg !6255, !llvm.loop !6281

41:                                               ; preds = %26
  %42 = load %struct._obstack_chunk*, %struct._obstack_chunk** %5, align 8, !dbg !6283
  %43 = icmp ne %struct._obstack_chunk* %42, null, !dbg !6283
  br i1 %43, label %44, label %58, !dbg !6285

44:                                               ; preds = %41
  %45 = load i8*, i8** %4, align 8, !dbg !6286
  %46 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !6288
  %47 = getelementptr inbounds %struct.obstack, %struct.obstack* %46, i32 0, i32 3, !dbg !6289
  store i8* %45, i8** %47, align 8, !dbg !6290
  %48 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !6291
  %49 = getelementptr inbounds %struct.obstack, %struct.obstack* %48, i32 0, i32 2, !dbg !6292
  store i8* %45, i8** %49, align 8, !dbg !6293
  %50 = load %struct._obstack_chunk*, %struct._obstack_chunk** %5, align 8, !dbg !6294
  %51 = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %50, i32 0, i32 0, !dbg !6295
  %52 = load i8*, i8** %51, align 8, !dbg !6295
  %53 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !6296
  %54 = getelementptr inbounds %struct.obstack, %struct.obstack* %53, i32 0, i32 4, !dbg !6297
  store i8* %52, i8** %54, align 8, !dbg !6298
  %55 = load %struct._obstack_chunk*, %struct._obstack_chunk** %5, align 8, !dbg !6299
  %56 = load %struct.obstack*, %struct.obstack** %3, align 8, !dbg !6300
  %57 = getelementptr inbounds %struct.obstack, %struct.obstack* %56, i32 0, i32 1, !dbg !6301
  store %struct._obstack_chunk* %55, %struct._obstack_chunk** %57, align 8, !dbg !6302
  br label %63, !dbg !6303

58:                                               ; preds = %41
  %59 = load i8*, i8** %4, align 8, !dbg !6304
  %60 = icmp ne i8* %59, null, !dbg !6306
  br i1 %60, label %61, label %62, !dbg !6307

61:                                               ; preds = %58
  call void @abort() #13, !dbg !6308
  unreachable, !dbg !6308

62:                                               ; preds = %58
  br label %63

63:                                               ; preds = %62, %44
  ret void, !dbg !6309
}

; Function Attrs: noinline nounwind optnone readonly uwtable willreturn
define dso_local i64 @_obstack_memory_used(%struct.obstack* %0) #9 !dbg !6310 {
  %2 = alloca %struct.obstack*, align 8
  %3 = alloca %struct._obstack_chunk*, align 8
  %4 = alloca i64, align 8
  store %struct.obstack* %0, %struct.obstack** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.obstack** %2, metadata !6313, metadata !DIExpression()), !dbg !6314
  call void @llvm.dbg.declare(metadata %struct._obstack_chunk** %3, metadata !6315, metadata !DIExpression()), !dbg !6316
  call void @llvm.dbg.declare(metadata i64* %4, metadata !6317, metadata !DIExpression()), !dbg !6318
  store i64 0, i64* %4, align 8, !dbg !6318
  %5 = load %struct.obstack*, %struct.obstack** %2, align 8, !dbg !6319
  %6 = getelementptr inbounds %struct.obstack, %struct.obstack* %5, i32 0, i32 1, !dbg !6321
  %7 = load %struct._obstack_chunk*, %struct._obstack_chunk** %6, align 8, !dbg !6321
  store %struct._obstack_chunk* %7, %struct._obstack_chunk** %3, align 8, !dbg !6322
  br label %8, !dbg !6323

8:                                                ; preds = %22, %1
  %9 = load %struct._obstack_chunk*, %struct._obstack_chunk** %3, align 8, !dbg !6324
  %10 = icmp ne %struct._obstack_chunk* %9, null, !dbg !6326
  br i1 %10, label %11, label %26, !dbg !6327

11:                                               ; preds = %8
  %12 = load %struct._obstack_chunk*, %struct._obstack_chunk** %3, align 8, !dbg !6328
  %13 = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %12, i32 0, i32 0, !dbg !6330
  %14 = load i8*, i8** %13, align 8, !dbg !6330
  %15 = load %struct._obstack_chunk*, %struct._obstack_chunk** %3, align 8, !dbg !6331
  %16 = bitcast %struct._obstack_chunk* %15 to i8*, !dbg !6332
  %17 = ptrtoint i8* %14 to i64, !dbg !6333
  %18 = ptrtoint i8* %16 to i64, !dbg !6333
  %19 = sub i64 %17, %18, !dbg !6333
  %20 = load i64, i64* %4, align 8, !dbg !6334
  %21 = add i64 %20, %19, !dbg !6334
  store i64 %21, i64* %4, align 8, !dbg !6334
  br label %22, !dbg !6335

22:                                               ; preds = %11
  %23 = load %struct._obstack_chunk*, %struct._obstack_chunk** %3, align 8, !dbg !6336
  %24 = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %23, i32 0, i32 1, !dbg !6337
  %25 = load %struct._obstack_chunk*, %struct._obstack_chunk** %24, align 8, !dbg !6337
  store %struct._obstack_chunk* %25, %struct._obstack_chunk** %3, align 8, !dbg !6338
  br label %8, !dbg !6339, !llvm.loop !6340

26:                                               ; preds = %8
  %27 = load i64, i64* %4, align 8, !dbg !6342
  ret i64 %27, !dbg !6343
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @__gl_setmode(i32 %0, i32 %1) #3 !dbg !6344 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !6348, metadata !DIExpression()), !dbg !6349
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !6350, metadata !DIExpression()), !dbg !6351
  ret i32 0, !dbg !6352
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @set_binary_mode(i32 %0, i32 %1) #3 !dbg !6353 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !6354, metadata !DIExpression()), !dbg !6355
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !6356, metadata !DIExpression()), !dbg !6357
  %5 = load i32, i32* %3, align 4, !dbg !6358
  %6 = load i32, i32* %4, align 4, !dbg !6359
  %7 = call i32 @__gl_setmode(i32 %5, i32 %6), !dbg !6360
  ret i32 %7, !dbg !6361
}

; Function Attrs: noinline nounwind optnone readonly uwtable willreturn
define dso_local i32 @c_strcasecmp(i8* %0, i8* %1) #9 !dbg !6362 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !6365, metadata !DIExpression()), !dbg !6366
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !6367, metadata !DIExpression()), !dbg !6368
  call void @llvm.dbg.declare(metadata i8** %6, metadata !6369, metadata !DIExpression()), !dbg !6370
  %10 = load i8*, i8** %4, align 8, !dbg !6371
  store i8* %10, i8** %6, align 8, !dbg !6370
  call void @llvm.dbg.declare(metadata i8** %7, metadata !6372, metadata !DIExpression()), !dbg !6373
  %11 = load i8*, i8** %5, align 8, !dbg !6374
  store i8* %11, i8** %7, align 8, !dbg !6373
  call void @llvm.dbg.declare(metadata i8* %8, metadata !6375, metadata !DIExpression()), !dbg !6376
  call void @llvm.dbg.declare(metadata i8* %9, metadata !6377, metadata !DIExpression()), !dbg !6378
  %12 = load i8*, i8** %6, align 8, !dbg !6379
  %13 = load i8*, i8** %7, align 8, !dbg !6381
  %14 = icmp eq i8* %12, %13, !dbg !6382
  br i1 %14, label %15, label %16, !dbg !6383

15:                                               ; preds = %2
  store i32 0, i32* %3, align 4, !dbg !6384
  br label %49, !dbg !6384

16:                                               ; preds = %2
  br label %17, !dbg !6385

17:                                               ; preds = %37, %16
  %18 = load i8*, i8** %6, align 8, !dbg !6386
  %19 = load i8, i8* %18, align 1, !dbg !6388
  %20 = zext i8 %19 to i32, !dbg !6388
  %21 = call i32 @c_tolower(i32 %20), !dbg !6389
  %22 = trunc i32 %21 to i8, !dbg !6389
  store i8 %22, i8* %8, align 1, !dbg !6390
  %23 = load i8*, i8** %7, align 8, !dbg !6391
  %24 = load i8, i8* %23, align 1, !dbg !6392
  %25 = zext i8 %24 to i32, !dbg !6392
  %26 = call i32 @c_tolower(i32 %25), !dbg !6393
  %27 = trunc i32 %26 to i8, !dbg !6393
  store i8 %27, i8* %9, align 1, !dbg !6394
  %28 = load i8, i8* %8, align 1, !dbg !6395
  %29 = zext i8 %28 to i32, !dbg !6395
  %30 = icmp eq i32 %29, 0, !dbg !6397
  br i1 %30, label %31, label %32, !dbg !6398

31:                                               ; preds = %17
  br label %43, !dbg !6399

32:                                               ; preds = %17
  %33 = load i8*, i8** %6, align 8, !dbg !6400
  %34 = getelementptr inbounds i8, i8* %33, i32 1, !dbg !6400
  store i8* %34, i8** %6, align 8, !dbg !6400
  %35 = load i8*, i8** %7, align 8, !dbg !6401
  %36 = getelementptr inbounds i8, i8* %35, i32 1, !dbg !6401
  store i8* %36, i8** %7, align 8, !dbg !6401
  br label %37, !dbg !6402

37:                                               ; preds = %32
  %38 = load i8, i8* %8, align 1, !dbg !6403
  %39 = zext i8 %38 to i32, !dbg !6403
  %40 = load i8, i8* %9, align 1, !dbg !6404
  %41 = zext i8 %40 to i32, !dbg !6404
  %42 = icmp eq i32 %39, %41, !dbg !6405
  br i1 %42, label %17, label %43, !dbg !6402, !llvm.loop !6406

43:                                               ; preds = %37, %31
  %44 = load i8, i8* %8, align 1, !dbg !6408
  %45 = zext i8 %44 to i32, !dbg !6408
  %46 = load i8, i8* %9, align 1, !dbg !6410
  %47 = zext i8 %46 to i32, !dbg !6410
  %48 = sub nsw i32 %45, %47, !dbg !6411
  store i32 %48, i32* %3, align 4, !dbg !6412
  br label %49, !dbg !6412

49:                                               ; preds = %43, %15
  %50 = load i32, i32* %3, align 4, !dbg !6413
  ret i32 %50, !dbg !6413
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @close_stream(%struct._IO_FILE* %0) #3 !dbg !6414 {
  %2 = alloca i32, align 4
  %3 = alloca %struct._IO_FILE*, align 8
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  store %struct._IO_FILE* %0, %struct._IO_FILE** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %3, metadata !6451, metadata !DIExpression()), !dbg !6452
  call void @llvm.dbg.declare(metadata i8* %4, metadata !6453, metadata !DIExpression()), !dbg !6455
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !6456
  %8 = call i64 @__fpending(%struct._IO_FILE* %7) #15, !dbg !6457
  %9 = icmp ne i64 %8, 0, !dbg !6458
  %10 = zext i1 %9 to i8, !dbg !6455
  store i8 %10, i8* %4, align 1, !dbg !6455
  call void @llvm.dbg.declare(metadata i8* %5, metadata !6459, metadata !DIExpression()), !dbg !6460
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !6461
  %12 = call i32 @ferror_unlocked(%struct._IO_FILE* %11) #15, !dbg !6461
  %13 = icmp ne i32 %12, 0, !dbg !6462
  %14 = zext i1 %13 to i8, !dbg !6460
  store i8 %14, i8* %5, align 1, !dbg !6460
  call void @llvm.dbg.declare(metadata i8* %6, metadata !6463, metadata !DIExpression()), !dbg !6464
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !6465
  %16 = call i32 @rpl_fclose(%struct._IO_FILE* %15), !dbg !6466
  %17 = icmp ne i32 %16, 0, !dbg !6467
  %18 = zext i1 %17 to i8, !dbg !6464
  store i8 %18, i8* %6, align 1, !dbg !6464
  %19 = load i8, i8* %5, align 1, !dbg !6468
  %20 = trunc i8 %19 to i1, !dbg !6468
  br i1 %20, label %31, label %21, !dbg !6470

21:                                               ; preds = %1
  %22 = load i8, i8* %6, align 1, !dbg !6471
  %23 = trunc i8 %22 to i1, !dbg !6471
  br i1 %23, label %24, label %37, !dbg !6472

24:                                               ; preds = %21
  %25 = load i8, i8* %4, align 1, !dbg !6473
  %26 = trunc i8 %25 to i1, !dbg !6473
  br i1 %26, label %31, label %27, !dbg !6474

27:                                               ; preds = %24
  %28 = call i32* @__errno_location() #16, !dbg !6475
  %29 = load i32, i32* %28, align 4, !dbg !6475
  %30 = icmp ne i32 %29, 9, !dbg !6476
  br i1 %30, label %31, label %37, !dbg !6477

31:                                               ; preds = %27, %24, %1
  %32 = load i8, i8* %6, align 1, !dbg !6478
  %33 = trunc i8 %32 to i1, !dbg !6478
  br i1 %33, label %36, label %34, !dbg !6481

34:                                               ; preds = %31
  %35 = call i32* @__errno_location() #16, !dbg !6482
  store i32 0, i32* %35, align 4, !dbg !6483
  br label %36, !dbg !6482

36:                                               ; preds = %34, %31
  store i32 -1, i32* %2, align 4, !dbg !6484
  br label %38, !dbg !6484

37:                                               ; preds = %27, %21
  store i32 0, i32* %2, align 4, !dbg !6485
  br label %38, !dbg !6485

38:                                               ; preds = %37, %36
  %39 = load i32, i32* %2, align 4, !dbg !6486
  ret i32 %39, !dbg !6486
}

; Function Attrs: nounwind
declare dso_local i64 @__fpending(%struct._IO_FILE*) #7

; Function Attrs: nounwind
declare dso_local i32 @ferror_unlocked(%struct._IO_FILE*) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @hard_locale(i32 %0) #3 !dbg !6487 {
  %2 = alloca i1, align 1
  %3 = alloca i32, align 4
  %4 = alloca [257 x i8], align 16
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !6490, metadata !DIExpression()), !dbg !6491
  call void @llvm.dbg.declare(metadata [257 x i8]* %4, metadata !6492, metadata !DIExpression()), !dbg !6496
  %5 = load i32, i32* %3, align 4, !dbg !6497
  %6 = getelementptr inbounds [257 x i8], [257 x i8]* %4, i64 0, i64 0, !dbg !6499
  %7 = call i32 @setlocale_null_r(i32 %5, i8* %6, i64 257), !dbg !6500
  %8 = icmp ne i32 %7, 0, !dbg !6500
  br i1 %8, label %9, label %10, !dbg !6501

9:                                                ; preds = %1
  store i1 false, i1* %2, align 1, !dbg !6502
  br label %21, !dbg !6502

10:                                               ; preds = %1
  %11 = getelementptr inbounds [257 x i8], [257 x i8]* %4, i64 0, i64 0, !dbg !6503
  %12 = call i32 @strcmp(i8* %11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.187, i64 0, i64 0)) #14, !dbg !6504
  %13 = icmp eq i32 %12, 0, !dbg !6505
  br i1 %13, label %18, label %14, !dbg !6506

14:                                               ; preds = %10
  %15 = getelementptr inbounds [257 x i8], [257 x i8]* %4, i64 0, i64 0, !dbg !6507
  %16 = call i32 @strcmp(i8* %15, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.188, i64 0, i64 0)) #14, !dbg !6508
  %17 = icmp eq i32 %16, 0, !dbg !6509
  br label %18, !dbg !6506

18:                                               ; preds = %14, %10
  %19 = phi i1 [ true, %10 ], [ %17, %14 ]
  %20 = xor i1 %19, true, !dbg !6510
  store i1 %20, i1* %2, align 1, !dbg !6511
  br label %21, !dbg !6511

21:                                               ; preds = %18, %9
  %22 = load i1, i1* %2, align 1, !dbg !6512
  ret i1 %22, !dbg !6512
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @locale_charset() #3 !dbg !6513 {
  %1 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %1, metadata !6515, metadata !DIExpression()), !dbg !6516
  %2 = call i8* @nl_langinfo(i32 14) #15, !dbg !6517
  store i8* %2, i8** %1, align 8, !dbg !6518
  %3 = load i8*, i8** %1, align 8, !dbg !6519
  %4 = icmp eq i8* %3, null, !dbg !6521
  br i1 %4, label %5, label %6, !dbg !6522

5:                                                ; preds = %0
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.191, i64 0, i64 0), i8** %1, align 8, !dbg !6523
  br label %6, !dbg !6524

6:                                                ; preds = %5, %0
  %7 = load i8*, i8** %1, align 8, !dbg !6525
  %8 = getelementptr inbounds i8, i8* %7, i64 0, !dbg !6525
  %9 = load i8, i8* %8, align 1, !dbg !6525
  %10 = sext i8 %9 to i32, !dbg !6525
  %11 = icmp eq i32 %10, 0, !dbg !6529
  br i1 %11, label %12, label %13, !dbg !6530

12:                                               ; preds = %6
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.192, i64 0, i64 0), i8** %1, align 8, !dbg !6531
  br label %13, !dbg !6532

13:                                               ; preds = %12, %6
  %14 = load i8*, i8** %1, align 8, !dbg !6533
  ret i8* %14, !dbg !6534
}

; Function Attrs: nounwind
declare dso_local i8* @nl_langinfo(i32) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @setlocale_null_r(i32 %0, i8* nonnull %1, i64 %2) #3 !dbg !6535 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !6538, metadata !DIExpression()), !dbg !6539
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !6540, metadata !DIExpression()), !dbg !6541
  store i64 %2, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !6542, metadata !DIExpression()), !dbg !6543
  %7 = load i32, i32* %4, align 4, !dbg !6544
  %8 = load i8*, i8** %5, align 8, !dbg !6545
  %9 = load i64, i64* %6, align 8, !dbg !6546
  %10 = call i32 @setlocale_null_unlocked(i32 %7, i8* %8, i64 %9), !dbg !6547
  ret i32 %10, !dbg !6548
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @setlocale_null_unlocked(i32 %0, i8* %1, i64 %2) #3 !dbg !6549 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  store i32 %0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !6550, metadata !DIExpression()), !dbg !6551
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !6552, metadata !DIExpression()), !dbg !6553
  store i64 %2, i64* %7, align 8
  call void @llvm.dbg.declare(metadata i64* %7, metadata !6554, metadata !DIExpression()), !dbg !6555
  call void @llvm.dbg.declare(metadata i8** %8, metadata !6556, metadata !DIExpression()), !dbg !6557
  %10 = load i32, i32* %5, align 4, !dbg !6558
  %11 = call i8* @setlocale_null_androidfix(i32 %10), !dbg !6559
  store i8* %11, i8** %8, align 8, !dbg !6557
  %12 = load i8*, i8** %8, align 8, !dbg !6560
  %13 = icmp eq i8* %12, null, !dbg !6562
  br i1 %13, label %14, label %21, !dbg !6563

14:                                               ; preds = %3
  %15 = load i64, i64* %7, align 8, !dbg !6564
  %16 = icmp ugt i64 %15, 0, !dbg !6567
  br i1 %16, label %17, label %20, !dbg !6568

17:                                               ; preds = %14
  %18 = load i8*, i8** %6, align 8, !dbg !6569
  %19 = getelementptr inbounds i8, i8* %18, i64 0, !dbg !6569
  store i8 0, i8* %19, align 1, !dbg !6570
  br label %20, !dbg !6569

20:                                               ; preds = %17, %14
  store i32 22, i32* %4, align 4, !dbg !6571
  br label %45, !dbg !6571

21:                                               ; preds = %3
  call void @llvm.dbg.declare(metadata i64* %9, metadata !6572, metadata !DIExpression()), !dbg !6574
  %22 = load i8*, i8** %8, align 8, !dbg !6575
  %23 = call i64 @strlen(i8* %22) #14, !dbg !6576
  store i64 %23, i64* %9, align 8, !dbg !6574
  %24 = load i64, i64* %9, align 8, !dbg !6577
  %25 = load i64, i64* %7, align 8, !dbg !6579
  %26 = icmp ult i64 %24, %25, !dbg !6580
  br i1 %26, label %27, label %32, !dbg !6581

27:                                               ; preds = %21
  %28 = load i8*, i8** %6, align 8, !dbg !6582
  %29 = load i8*, i8** %8, align 8, !dbg !6584
  %30 = load i64, i64* %9, align 8, !dbg !6585
  %31 = add i64 %30, 1, !dbg !6586
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %28, i8* align 1 %29, i64 %31, i1 false), !dbg !6587
  store i32 0, i32* %4, align 4, !dbg !6588
  br label %45, !dbg !6588

32:                                               ; preds = %21
  %33 = load i64, i64* %7, align 8, !dbg !6589
  %34 = icmp ugt i64 %33, 0, !dbg !6592
  br i1 %34, label %35, label %44, !dbg !6593

35:                                               ; preds = %32
  %36 = load i8*, i8** %6, align 8, !dbg !6594
  %37 = load i8*, i8** %8, align 8, !dbg !6596
  %38 = load i64, i64* %7, align 8, !dbg !6597
  %39 = sub i64 %38, 1, !dbg !6598
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %36, i8* align 1 %37, i64 %39, i1 false), !dbg !6599
  %40 = load i8*, i8** %6, align 8, !dbg !6600
  %41 = load i64, i64* %7, align 8, !dbg !6601
  %42 = sub i64 %41, 1, !dbg !6602
  %43 = getelementptr inbounds i8, i8* %40, i64 %42, !dbg !6600
  store i8 0, i8* %43, align 1, !dbg !6603
  br label %44, !dbg !6604

44:                                               ; preds = %35, %32
  store i32 34, i32* %4, align 4, !dbg !6605
  br label %45, !dbg !6605

45:                                               ; preds = %44, %27, %20
  %46 = load i32, i32* %4, align 4, !dbg !6606
  ret i32 %46, !dbg !6606
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @setlocale_null_androidfix(i32 %0) #3 !dbg !6607 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !6610, metadata !DIExpression()), !dbg !6611
  call void @llvm.dbg.declare(metadata i8** %3, metadata !6612, metadata !DIExpression()), !dbg !6613
  %4 = load i32, i32* %2, align 4, !dbg !6614
  %5 = call i8* @setlocale(i32 %4, i8* null) #15, !dbg !6615
  store i8* %5, i8** %3, align 8, !dbg !6613
  %6 = load i8*, i8** %3, align 8, !dbg !6616
  ret i8* %6, !dbg !6617
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @setlocale_null(i32 %0) #3 !dbg !6618 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !6619, metadata !DIExpression()), !dbg !6620
  %3 = load i32, i32* %2, align 4, !dbg !6621
  %4 = call i8* @setlocale_null_androidfix(i32 %3), !dbg !6622
  ret i8* %4, !dbg !6623
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isalnum(i32 %0) #3 !dbg !6624 {
  %2 = alloca i1, align 1
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !6626, metadata !DIExpression()), !dbg !6627
  %4 = load i32, i32* %3, align 4, !dbg !6628
  switch i32 %4, label %6 [
    i32 48, label %5
    i32 49, label %5
    i32 50, label %5
    i32 51, label %5
    i32 52, label %5
    i32 53, label %5
    i32 54, label %5
    i32 55, label %5
    i32 56, label %5
    i32 57, label %5
    i32 97, label %5
    i32 98, label %5
    i32 99, label %5
    i32 100, label %5
    i32 101, label %5
    i32 102, label %5
    i32 103, label %5
    i32 104, label %5
    i32 105, label %5
    i32 106, label %5
    i32 107, label %5
    i32 108, label %5
    i32 109, label %5
    i32 110, label %5
    i32 111, label %5
    i32 112, label %5
    i32 113, label %5
    i32 114, label %5
    i32 115, label %5
    i32 116, label %5
    i32 117, label %5
    i32 118, label %5
    i32 119, label %5
    i32 120, label %5
    i32 121, label %5
    i32 122, label %5
    i32 65, label %5
    i32 66, label %5
    i32 67, label %5
    i32 68, label %5
    i32 69, label %5
    i32 70, label %5
    i32 71, label %5
    i32 72, label %5
    i32 73, label %5
    i32 74, label %5
    i32 75, label %5
    i32 76, label %5
    i32 77, label %5
    i32 78, label %5
    i32 79, label %5
    i32 80, label %5
    i32 81, label %5
    i32 82, label %5
    i32 83, label %5
    i32 84, label %5
    i32 85, label %5
    i32 86, label %5
    i32 87, label %5
    i32 88, label %5
    i32 89, label %5
    i32 90, label %5
  ], !dbg !6629

5:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  store i1 true, i1* %2, align 1, !dbg !6630
  br label %7, !dbg !6630

6:                                                ; preds = %1
  store i1 false, i1* %2, align 1, !dbg !6632
  br label %7, !dbg !6632

7:                                                ; preds = %6, %5
  %8 = load i1, i1* %2, align 1, !dbg !6633
  ret i1 %8, !dbg !6633
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isalpha(i32 %0) #3 !dbg !6634 {
  %2 = alloca i1, align 1
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !6635, metadata !DIExpression()), !dbg !6636
  %4 = load i32, i32* %3, align 4, !dbg !6637
  switch i32 %4, label %6 [
    i32 97, label %5
    i32 98, label %5
    i32 99, label %5
    i32 100, label %5
    i32 101, label %5
    i32 102, label %5
    i32 103, label %5
    i32 104, label %5
    i32 105, label %5
    i32 106, label %5
    i32 107, label %5
    i32 108, label %5
    i32 109, label %5
    i32 110, label %5
    i32 111, label %5
    i32 112, label %5
    i32 113, label %5
    i32 114, label %5
    i32 115, label %5
    i32 116, label %5
    i32 117, label %5
    i32 118, label %5
    i32 119, label %5
    i32 120, label %5
    i32 121, label %5
    i32 122, label %5
    i32 65, label %5
    i32 66, label %5
    i32 67, label %5
    i32 68, label %5
    i32 69, label %5
    i32 70, label %5
    i32 71, label %5
    i32 72, label %5
    i32 73, label %5
    i32 74, label %5
    i32 75, label %5
    i32 76, label %5
    i32 77, label %5
    i32 78, label %5
    i32 79, label %5
    i32 80, label %5
    i32 81, label %5
    i32 82, label %5
    i32 83, label %5
    i32 84, label %5
    i32 85, label %5
    i32 86, label %5
    i32 87, label %5
    i32 88, label %5
    i32 89, label %5
    i32 90, label %5
  ], !dbg !6638

5:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  store i1 true, i1* %2, align 1, !dbg !6639
  br label %7, !dbg !6639

6:                                                ; preds = %1
  store i1 false, i1* %2, align 1, !dbg !6641
  br label %7, !dbg !6641

7:                                                ; preds = %6, %5
  %8 = load i1, i1* %2, align 1, !dbg !6642
  ret i1 %8, !dbg !6642
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isascii(i32 %0) #3 !dbg !6643 {
  %2 = alloca i1, align 1
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !6644, metadata !DIExpression()), !dbg !6645
  %4 = load i32, i32* %3, align 4, !dbg !6646
  switch i32 %4, label %6 [
    i32 32, label %5
    i32 7, label %5
    i32 8, label %5
    i32 12, label %5
    i32 10, label %5
    i32 13, label %5
    i32 9, label %5
    i32 11, label %5
    i32 0, label %5
    i32 1, label %5
    i32 2, label %5
    i32 3, label %5
    i32 4, label %5
    i32 5, label %5
    i32 6, label %5
    i32 14, label %5
    i32 15, label %5
    i32 16, label %5
    i32 17, label %5
    i32 18, label %5
    i32 19, label %5
    i32 20, label %5
    i32 21, label %5
    i32 22, label %5
    i32 23, label %5
    i32 24, label %5
    i32 25, label %5
    i32 26, label %5
    i32 27, label %5
    i32 28, label %5
    i32 29, label %5
    i32 30, label %5
    i32 31, label %5
    i32 127, label %5
    i32 48, label %5
    i32 49, label %5
    i32 50, label %5
    i32 51, label %5
    i32 52, label %5
    i32 53, label %5
    i32 54, label %5
    i32 55, label %5
    i32 56, label %5
    i32 57, label %5
    i32 97, label %5
    i32 98, label %5
    i32 99, label %5
    i32 100, label %5
    i32 101, label %5
    i32 102, label %5
    i32 103, label %5
    i32 104, label %5
    i32 105, label %5
    i32 106, label %5
    i32 107, label %5
    i32 108, label %5
    i32 109, label %5
    i32 110, label %5
    i32 111, label %5
    i32 112, label %5
    i32 113, label %5
    i32 114, label %5
    i32 115, label %5
    i32 116, label %5
    i32 117, label %5
    i32 118, label %5
    i32 119, label %5
    i32 120, label %5
    i32 121, label %5
    i32 122, label %5
    i32 33, label %5
    i32 34, label %5
    i32 35, label %5
    i32 36, label %5
    i32 37, label %5
    i32 38, label %5
    i32 39, label %5
    i32 40, label %5
    i32 41, label %5
    i32 42, label %5
    i32 43, label %5
    i32 44, label %5
    i32 45, label %5
    i32 46, label %5
    i32 47, label %5
    i32 58, label %5
    i32 59, label %5
    i32 60, label %5
    i32 61, label %5
    i32 62, label %5
    i32 63, label %5
    i32 64, label %5
    i32 91, label %5
    i32 92, label %5
    i32 93, label %5
    i32 94, label %5
    i32 95, label %5
    i32 96, label %5
    i32 123, label %5
    i32 124, label %5
    i32 125, label %5
    i32 126, label %5
    i32 65, label %5
    i32 66, label %5
    i32 67, label %5
    i32 68, label %5
    i32 69, label %5
    i32 70, label %5
    i32 71, label %5
    i32 72, label %5
    i32 73, label %5
    i32 74, label %5
    i32 75, label %5
    i32 76, label %5
    i32 77, label %5
    i32 78, label %5
    i32 79, label %5
    i32 80, label %5
    i32 81, label %5
    i32 82, label %5
    i32 83, label %5
    i32 84, label %5
    i32 85, label %5
    i32 86, label %5
    i32 87, label %5
    i32 88, label %5
    i32 89, label %5
    i32 90, label %5
  ], !dbg !6647

5:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  store i1 true, i1* %2, align 1, !dbg !6648
  br label %7, !dbg !6648

6:                                                ; preds = %1
  store i1 false, i1* %2, align 1, !dbg !6650
  br label %7, !dbg !6650

7:                                                ; preds = %6, %5
  %8 = load i1, i1* %2, align 1, !dbg !6651
  ret i1 %8, !dbg !6651
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isblank(i32 %0) #3 !dbg !6652 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !6653, metadata !DIExpression()), !dbg !6654
  %3 = load i32, i32* %2, align 4, !dbg !6655
  %4 = icmp eq i32 %3, 32, !dbg !6656
  br i1 %4, label %8, label %5, !dbg !6657

5:                                                ; preds = %1
  %6 = load i32, i32* %2, align 4, !dbg !6658
  %7 = icmp eq i32 %6, 9, !dbg !6659
  br label %8, !dbg !6657

8:                                                ; preds = %5, %1
  %9 = phi i1 [ true, %1 ], [ %7, %5 ]
  ret i1 %9, !dbg !6660
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_iscntrl(i32 %0) #3 !dbg !6661 {
  %2 = alloca i1, align 1
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !6662, metadata !DIExpression()), !dbg !6663
  %4 = load i32, i32* %3, align 4, !dbg !6664
  switch i32 %4, label %6 [
    i32 7, label %5
    i32 8, label %5
    i32 12, label %5
    i32 10, label %5
    i32 13, label %5
    i32 9, label %5
    i32 11, label %5
    i32 0, label %5
    i32 1, label %5
    i32 2, label %5
    i32 3, label %5
    i32 4, label %5
    i32 5, label %5
    i32 6, label %5
    i32 14, label %5
    i32 15, label %5
    i32 16, label %5
    i32 17, label %5
    i32 18, label %5
    i32 19, label %5
    i32 20, label %5
    i32 21, label %5
    i32 22, label %5
    i32 23, label %5
    i32 24, label %5
    i32 25, label %5
    i32 26, label %5
    i32 27, label %5
    i32 28, label %5
    i32 29, label %5
    i32 30, label %5
    i32 31, label %5
    i32 127, label %5
  ], !dbg !6665

5:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  store i1 true, i1* %2, align 1, !dbg !6666
  br label %7, !dbg !6666

6:                                                ; preds = %1
  store i1 false, i1* %2, align 1, !dbg !6668
  br label %7, !dbg !6668

7:                                                ; preds = %6, %5
  %8 = load i1, i1* %2, align 1, !dbg !6669
  ret i1 %8, !dbg !6669
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isdigit(i32 %0) #3 !dbg !6670 {
  %2 = alloca i1, align 1
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !6671, metadata !DIExpression()), !dbg !6672
  %4 = load i32, i32* %3, align 4, !dbg !6673
  switch i32 %4, label %6 [
    i32 48, label %5
    i32 49, label %5
    i32 50, label %5
    i32 51, label %5
    i32 52, label %5
    i32 53, label %5
    i32 54, label %5
    i32 55, label %5
    i32 56, label %5
    i32 57, label %5
  ], !dbg !6674

5:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  store i1 true, i1* %2, align 1, !dbg !6675
  br label %7, !dbg !6675

6:                                                ; preds = %1
  store i1 false, i1* %2, align 1, !dbg !6677
  br label %7, !dbg !6677

7:                                                ; preds = %6, %5
  %8 = load i1, i1* %2, align 1, !dbg !6678
  ret i1 %8, !dbg !6678
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isgraph(i32 %0) #3 !dbg !6679 {
  %2 = alloca i1, align 1
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !6680, metadata !DIExpression()), !dbg !6681
  %4 = load i32, i32* %3, align 4, !dbg !6682
  switch i32 %4, label %6 [
    i32 48, label %5
    i32 49, label %5
    i32 50, label %5
    i32 51, label %5
    i32 52, label %5
    i32 53, label %5
    i32 54, label %5
    i32 55, label %5
    i32 56, label %5
    i32 57, label %5
    i32 97, label %5
    i32 98, label %5
    i32 99, label %5
    i32 100, label %5
    i32 101, label %5
    i32 102, label %5
    i32 103, label %5
    i32 104, label %5
    i32 105, label %5
    i32 106, label %5
    i32 107, label %5
    i32 108, label %5
    i32 109, label %5
    i32 110, label %5
    i32 111, label %5
    i32 112, label %5
    i32 113, label %5
    i32 114, label %5
    i32 115, label %5
    i32 116, label %5
    i32 117, label %5
    i32 118, label %5
    i32 119, label %5
    i32 120, label %5
    i32 121, label %5
    i32 122, label %5
    i32 33, label %5
    i32 34, label %5
    i32 35, label %5
    i32 36, label %5
    i32 37, label %5
    i32 38, label %5
    i32 39, label %5
    i32 40, label %5
    i32 41, label %5
    i32 42, label %5
    i32 43, label %5
    i32 44, label %5
    i32 45, label %5
    i32 46, label %5
    i32 47, label %5
    i32 58, label %5
    i32 59, label %5
    i32 60, label %5
    i32 61, label %5
    i32 62, label %5
    i32 63, label %5
    i32 64, label %5
    i32 91, label %5
    i32 92, label %5
    i32 93, label %5
    i32 94, label %5
    i32 95, label %5
    i32 96, label %5
    i32 123, label %5
    i32 124, label %5
    i32 125, label %5
    i32 126, label %5
    i32 65, label %5
    i32 66, label %5
    i32 67, label %5
    i32 68, label %5
    i32 69, label %5
    i32 70, label %5
    i32 71, label %5
    i32 72, label %5
    i32 73, label %5
    i32 74, label %5
    i32 75, label %5
    i32 76, label %5
    i32 77, label %5
    i32 78, label %5
    i32 79, label %5
    i32 80, label %5
    i32 81, label %5
    i32 82, label %5
    i32 83, label %5
    i32 84, label %5
    i32 85, label %5
    i32 86, label %5
    i32 87, label %5
    i32 88, label %5
    i32 89, label %5
    i32 90, label %5
  ], !dbg !6683

5:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  store i1 true, i1* %2, align 1, !dbg !6684
  br label %7, !dbg !6684

6:                                                ; preds = %1
  store i1 false, i1* %2, align 1, !dbg !6686
  br label %7, !dbg !6686

7:                                                ; preds = %6, %5
  %8 = load i1, i1* %2, align 1, !dbg !6687
  ret i1 %8, !dbg !6687
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_islower(i32 %0) #3 !dbg !6688 {
  %2 = alloca i1, align 1
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !6689, metadata !DIExpression()), !dbg !6690
  %4 = load i32, i32* %3, align 4, !dbg !6691
  switch i32 %4, label %6 [
    i32 97, label %5
    i32 98, label %5
    i32 99, label %5
    i32 100, label %5
    i32 101, label %5
    i32 102, label %5
    i32 103, label %5
    i32 104, label %5
    i32 105, label %5
    i32 106, label %5
    i32 107, label %5
    i32 108, label %5
    i32 109, label %5
    i32 110, label %5
    i32 111, label %5
    i32 112, label %5
    i32 113, label %5
    i32 114, label %5
    i32 115, label %5
    i32 116, label %5
    i32 117, label %5
    i32 118, label %5
    i32 119, label %5
    i32 120, label %5
    i32 121, label %5
    i32 122, label %5
  ], !dbg !6692

5:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  store i1 true, i1* %2, align 1, !dbg !6693
  br label %7, !dbg !6693

6:                                                ; preds = %1
  store i1 false, i1* %2, align 1, !dbg !6695
  br label %7, !dbg !6695

7:                                                ; preds = %6, %5
  %8 = load i1, i1* %2, align 1, !dbg !6696
  ret i1 %8, !dbg !6696
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isprint(i32 %0) #3 !dbg !6697 {
  %2 = alloca i1, align 1
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !6698, metadata !DIExpression()), !dbg !6699
  %4 = load i32, i32* %3, align 4, !dbg !6700
  switch i32 %4, label %6 [
    i32 32, label %5
    i32 48, label %5
    i32 49, label %5
    i32 50, label %5
    i32 51, label %5
    i32 52, label %5
    i32 53, label %5
    i32 54, label %5
    i32 55, label %5
    i32 56, label %5
    i32 57, label %5
    i32 97, label %5
    i32 98, label %5
    i32 99, label %5
    i32 100, label %5
    i32 101, label %5
    i32 102, label %5
    i32 103, label %5
    i32 104, label %5
    i32 105, label %5
    i32 106, label %5
    i32 107, label %5
    i32 108, label %5
    i32 109, label %5
    i32 110, label %5
    i32 111, label %5
    i32 112, label %5
    i32 113, label %5
    i32 114, label %5
    i32 115, label %5
    i32 116, label %5
    i32 117, label %5
    i32 118, label %5
    i32 119, label %5
    i32 120, label %5
    i32 121, label %5
    i32 122, label %5
    i32 33, label %5
    i32 34, label %5
    i32 35, label %5
    i32 36, label %5
    i32 37, label %5
    i32 38, label %5
    i32 39, label %5
    i32 40, label %5
    i32 41, label %5
    i32 42, label %5
    i32 43, label %5
    i32 44, label %5
    i32 45, label %5
    i32 46, label %5
    i32 47, label %5
    i32 58, label %5
    i32 59, label %5
    i32 60, label %5
    i32 61, label %5
    i32 62, label %5
    i32 63, label %5
    i32 64, label %5
    i32 91, label %5
    i32 92, label %5
    i32 93, label %5
    i32 94, label %5
    i32 95, label %5
    i32 96, label %5
    i32 123, label %5
    i32 124, label %5
    i32 125, label %5
    i32 126, label %5
    i32 65, label %5
    i32 66, label %5
    i32 67, label %5
    i32 68, label %5
    i32 69, label %5
    i32 70, label %5
    i32 71, label %5
    i32 72, label %5
    i32 73, label %5
    i32 74, label %5
    i32 75, label %5
    i32 76, label %5
    i32 77, label %5
    i32 78, label %5
    i32 79, label %5
    i32 80, label %5
    i32 81, label %5
    i32 82, label %5
    i32 83, label %5
    i32 84, label %5
    i32 85, label %5
    i32 86, label %5
    i32 87, label %5
    i32 88, label %5
    i32 89, label %5
    i32 90, label %5
  ], !dbg !6701

5:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  store i1 true, i1* %2, align 1, !dbg !6702
  br label %7, !dbg !6702

6:                                                ; preds = %1
  store i1 false, i1* %2, align 1, !dbg !6704
  br label %7, !dbg !6704

7:                                                ; preds = %6, %5
  %8 = load i1, i1* %2, align 1, !dbg !6705
  ret i1 %8, !dbg !6705
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_ispunct(i32 %0) #3 !dbg !6706 {
  %2 = alloca i1, align 1
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !6707, metadata !DIExpression()), !dbg !6708
  %4 = load i32, i32* %3, align 4, !dbg !6709
  switch i32 %4, label %6 [
    i32 33, label %5
    i32 34, label %5
    i32 35, label %5
    i32 36, label %5
    i32 37, label %5
    i32 38, label %5
    i32 39, label %5
    i32 40, label %5
    i32 41, label %5
    i32 42, label %5
    i32 43, label %5
    i32 44, label %5
    i32 45, label %5
    i32 46, label %5
    i32 47, label %5
    i32 58, label %5
    i32 59, label %5
    i32 60, label %5
    i32 61, label %5
    i32 62, label %5
    i32 63, label %5
    i32 64, label %5
    i32 91, label %5
    i32 92, label %5
    i32 93, label %5
    i32 94, label %5
    i32 95, label %5
    i32 96, label %5
    i32 123, label %5
    i32 124, label %5
    i32 125, label %5
    i32 126, label %5
  ], !dbg !6710

5:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  store i1 true, i1* %2, align 1, !dbg !6711
  br label %7, !dbg !6711

6:                                                ; preds = %1
  store i1 false, i1* %2, align 1, !dbg !6713
  br label %7, !dbg !6713

7:                                                ; preds = %6, %5
  %8 = load i1, i1* %2, align 1, !dbg !6714
  ret i1 %8, !dbg !6714
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isspace(i32 %0) #3 !dbg !6715 {
  %2 = alloca i1, align 1
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !6716, metadata !DIExpression()), !dbg !6717
  %4 = load i32, i32* %3, align 4, !dbg !6718
  switch i32 %4, label %6 [
    i32 32, label %5
    i32 9, label %5
    i32 10, label %5
    i32 11, label %5
    i32 12, label %5
    i32 13, label %5
  ], !dbg !6719

5:                                                ; preds = %1, %1, %1, %1, %1, %1
  store i1 true, i1* %2, align 1, !dbg !6720
  br label %7, !dbg !6720

6:                                                ; preds = %1
  store i1 false, i1* %2, align 1, !dbg !6722
  br label %7, !dbg !6722

7:                                                ; preds = %6, %5
  %8 = load i1, i1* %2, align 1, !dbg !6723
  ret i1 %8, !dbg !6723
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isupper(i32 %0) #3 !dbg !6724 {
  %2 = alloca i1, align 1
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !6725, metadata !DIExpression()), !dbg !6726
  %4 = load i32, i32* %3, align 4, !dbg !6727
  switch i32 %4, label %6 [
    i32 65, label %5
    i32 66, label %5
    i32 67, label %5
    i32 68, label %5
    i32 69, label %5
    i32 70, label %5
    i32 71, label %5
    i32 72, label %5
    i32 73, label %5
    i32 74, label %5
    i32 75, label %5
    i32 76, label %5
    i32 77, label %5
    i32 78, label %5
    i32 79, label %5
    i32 80, label %5
    i32 81, label %5
    i32 82, label %5
    i32 83, label %5
    i32 84, label %5
    i32 85, label %5
    i32 86, label %5
    i32 87, label %5
    i32 88, label %5
    i32 89, label %5
    i32 90, label %5
  ], !dbg !6728

5:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  store i1 true, i1* %2, align 1, !dbg !6729
  br label %7, !dbg !6729

6:                                                ; preds = %1
  store i1 false, i1* %2, align 1, !dbg !6731
  br label %7, !dbg !6731

7:                                                ; preds = %6, %5
  %8 = load i1, i1* %2, align 1, !dbg !6732
  ret i1 %8, !dbg !6732
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isxdigit(i32 %0) #3 !dbg !6733 {
  %2 = alloca i1, align 1
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !6734, metadata !DIExpression()), !dbg !6735
  %4 = load i32, i32* %3, align 4, !dbg !6736
  switch i32 %4, label %6 [
    i32 48, label %5
    i32 49, label %5
    i32 50, label %5
    i32 51, label %5
    i32 52, label %5
    i32 53, label %5
    i32 54, label %5
    i32 55, label %5
    i32 56, label %5
    i32 57, label %5
    i32 97, label %5
    i32 98, label %5
    i32 99, label %5
    i32 100, label %5
    i32 101, label %5
    i32 102, label %5
    i32 65, label %5
    i32 66, label %5
    i32 67, label %5
    i32 68, label %5
    i32 69, label %5
    i32 70, label %5
  ], !dbg !6737

5:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  store i1 true, i1* %2, align 1, !dbg !6738
  br label %7, !dbg !6738

6:                                                ; preds = %1
  store i1 false, i1* %2, align 1, !dbg !6740
  br label %7, !dbg !6740

7:                                                ; preds = %6, %5
  %8 = load i1, i1* %2, align 1, !dbg !6741
  ret i1 %8, !dbg !6741
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @c_tolower(i32 %0) #3 !dbg !6742 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !6743, metadata !DIExpression()), !dbg !6744
  %4 = load i32, i32* %3, align 4, !dbg !6745
  switch i32 %4, label %9 [
    i32 65, label %5
    i32 66, label %5
    i32 67, label %5
    i32 68, label %5
    i32 69, label %5
    i32 70, label %5
    i32 71, label %5
    i32 72, label %5
    i32 73, label %5
    i32 74, label %5
    i32 75, label %5
    i32 76, label %5
    i32 77, label %5
    i32 78, label %5
    i32 79, label %5
    i32 80, label %5
    i32 81, label %5
    i32 82, label %5
    i32 83, label %5
    i32 84, label %5
    i32 85, label %5
    i32 86, label %5
    i32 87, label %5
    i32 88, label %5
    i32 89, label %5
    i32 90, label %5
  ], !dbg !6746

5:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  %6 = load i32, i32* %3, align 4, !dbg !6747
  %7 = sub nsw i32 %6, 65, !dbg !6749
  %8 = add nsw i32 %7, 97, !dbg !6750
  store i32 %8, i32* %2, align 4, !dbg !6751
  br label %11, !dbg !6751

9:                                                ; preds = %1
  %10 = load i32, i32* %3, align 4, !dbg !6752
  store i32 %10, i32* %2, align 4, !dbg !6753
  br label %11, !dbg !6753

11:                                               ; preds = %9, %5
  %12 = load i32, i32* %2, align 4, !dbg !6754
  ret i32 %12, !dbg !6754
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @c_toupper(i32 %0) #3 !dbg !6755 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !6756, metadata !DIExpression()), !dbg !6757
  %4 = load i32, i32* %3, align 4, !dbg !6758
  switch i32 %4, label %9 [
    i32 97, label %5
    i32 98, label %5
    i32 99, label %5
    i32 100, label %5
    i32 101, label %5
    i32 102, label %5
    i32 103, label %5
    i32 104, label %5
    i32 105, label %5
    i32 106, label %5
    i32 107, label %5
    i32 108, label %5
    i32 109, label %5
    i32 110, label %5
    i32 111, label %5
    i32 112, label %5
    i32 113, label %5
    i32 114, label %5
    i32 115, label %5
    i32 116, label %5
    i32 117, label %5
    i32 118, label %5
    i32 119, label %5
    i32 120, label %5
    i32 121, label %5
    i32 122, label %5
  ], !dbg !6759

5:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  %6 = load i32, i32* %3, align 4, !dbg !6760
  %7 = sub nsw i32 %6, 97, !dbg !6762
  %8 = add nsw i32 %7, 65, !dbg !6763
  store i32 %8, i32* %2, align 4, !dbg !6764
  br label %11, !dbg !6764

9:                                                ; preds = %1
  %10 = load i32, i32* %3, align 4, !dbg !6765
  store i32 %10, i32* %2, align 4, !dbg !6766
  br label %11, !dbg !6766

11:                                               ; preds = %9, %5
  %12 = load i32, i32* %2, align 4, !dbg !6767
  ret i32 %12, !dbg !6767
}

attributes #0 = { noinline noreturn nounwind optnone uwtable "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #2 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noinline nounwind optnone uwtable "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nofree nosync nounwind willreturn }
attributes #6 = { nounwind readonly willreturn "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone willreturn "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noinline nounwind optnone readonly uwtable willreturn "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { argmemonly nofree nosync nounwind willreturn writeonly }
attributes #11 = { noreturn "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree nosync nounwind willreturn }
attributes #13 = { noreturn nounwind }
attributes #14 = { nounwind readonly willreturn }
attributes #15 = { nounwind }
attributes #16 = { nounwind readnone willreturn }
attributes #17 = { noreturn }

!llvm.dbg.cu = !{!2, !128, !229, !133, !141, !233, !236, !147, !239, !158, !164, !462, !468, !475, !214, !482, !494, !496, !498, !500, !502, !504, !222, !507, !509, !514, !516, !518, !907, !909}
!llvm.ident = !{!911, !911, !911, !911, !911, !911, !911, !911, !911, !911, !911, !911, !911, !911, !911, !911, !911, !911, !911, !911, !911, !911, !911, !911, !911, !911, !911, !911, !911, !911}
!llvm.module.flags = !{!912, !913, !914}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "page_size", scope: !2, file: !3, line: 75, type: !57, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 12.0.1 (https://github.com/llvm/llvm-project.git fed41342a82f5a3a9201819a82bf7a48313e296b)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !51, globals: !62, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "../src/wc.c", directory: "/nobackup/klee_LLVM_12/Dataset-1/coreutils-8.32/obj-llvm")
!4 = !{!5, !20, !27, !36}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quoting_style", file: !6, line: 32, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "../lib/quotearg.h", directory: "/nobackup/klee_LLVM_12/Dataset-1/coreutils-8.32/obj-llvm")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19}
!9 = !DIEnumerator(name: "literal_quoting_style", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "shell_quoting_style", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "shell_always_quoting_style", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "shell_escape_quoting_style", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "shell_escape_always_quoting_style", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "c_quoting_style", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "c_maybe_quoting_style", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "escape_quoting_style", value: 7, isUnsigned: true)
!17 = !DIEnumerator(name: "locale_quoting_style", value: 8, isUnsigned: true)
!18 = !DIEnumerator(name: "clocale_quoting_style", value: 9, isUnsigned: true)
!19 = !DIEnumerator(name: "custom_quoting_style", value: 10, isUnsigned: true)
!20 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "argv_iter_err", file: !21, line: 25, baseType: !7, size: 32, elements: !22)
!21 = !DIFile(filename: "../lib/argv-iter.h", directory: "/nobackup/klee_LLVM_12/Dataset-1/coreutils-8.32/obj-llvm")
!22 = !{!23, !24, !25, !26}
!23 = !DIEnumerator(name: "AI_ERR_OK", value: 1, isUnsigned: true)
!24 = !DIEnumerator(name: "AI_ERR_EOF", value: 2, isUnsigned: true)
!25 = !DIEnumerator(name: "AI_ERR_MEM", value: 3, isUnsigned: true)
!26 = !DIEnumerator(name: "AI_ERR_READ", value: 4, isUnsigned: true)
!27 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !28, line: 45, baseType: !7, size: 32, elements: !29)
!28 = !DIFile(filename: "../lib/fadvise.h", directory: "/nobackup/klee_LLVM_12/Dataset-1/coreutils-8.32/obj-llvm")
!29 = !{!30, !31, !32, !33, !34, !35}
!30 = !DIEnumerator(name: "FADVISE_NORMAL", value: 0, isUnsigned: true)
!31 = !DIEnumerator(name: "FADVISE_SEQUENTIAL", value: 2, isUnsigned: true)
!32 = !DIEnumerator(name: "FADVISE_NOREUSE", value: 5, isUnsigned: true)
!33 = !DIEnumerator(name: "FADVISE_DONTNEED", value: 4, isUnsigned: true)
!34 = !DIEnumerator(name: "FADVISE_WILLNEED", value: 3, isUnsigned: true)
!35 = !DIEnumerator(name: "FADVISE_RANDOM", value: 1, isUnsigned: true)
!36 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !37, line: 46, baseType: !7, size: 32, elements: !38)
!37 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!38 = !{!39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50}
!39 = !DIEnumerator(name: "_ISupper", value: 256, isUnsigned: true)
!40 = !DIEnumerator(name: "_ISlower", value: 512, isUnsigned: true)
!41 = !DIEnumerator(name: "_ISalpha", value: 1024, isUnsigned: true)
!42 = !DIEnumerator(name: "_ISdigit", value: 2048, isUnsigned: true)
!43 = !DIEnumerator(name: "_ISxdigit", value: 4096, isUnsigned: true)
!44 = !DIEnumerator(name: "_ISspace", value: 8192, isUnsigned: true)
!45 = !DIEnumerator(name: "_ISprint", value: 16384, isUnsigned: true)
!46 = !DIEnumerator(name: "_ISgraph", value: 32768, isUnsigned: true)
!47 = !DIEnumerator(name: "_ISblank", value: 1, isUnsigned: true)
!48 = !DIEnumerator(name: "_IScntrl", value: 2, isUnsigned: true)
!49 = !DIEnumerator(name: "_ISpunct", value: 4, isUnsigned: true)
!50 = !DIEnumerator(name: "_ISalnum", value: 8, isUnsigned: true)
!51 = !{!52, !55, !56, !57, !60, !61}
!52 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !53, size: 64)
!53 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !54)
!54 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!55 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!56 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !54, size: 64)
!57 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !58, line: 46, baseType: !59)
!58 = !DIFile(filename: "LLVM_12.0_src/llvm-project/build/lib/clang/12.0.1/include/stddef.h", directory: "/nobackup")
!59 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!60 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!61 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!62 = !{!63, !73, !79, !81, !83, !85, !87, !90, !92, !94, !96, !98, !100, !0, !102, !104, !118}
!63 = !DIGlobalVariableExpression(var: !64, expr: !DIExpression())
!64 = distinct !DIGlobalVariable(name: "stdin_only", scope: !65, file: !3, line: 805, type: !70, isLocal: true, isDefinition: true)
!65 = distinct !DISubprogram(name: "main", scope: !3, file: !3, line: 682, type: !66, scopeLine: 683, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !69)
!66 = !DISubroutineType(types: !67)
!67 = !{!60, !60, !68}
!68 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !56, size: 64)
!69 = !{}
!70 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 64, elements: !71)
!71 = !{!72}
!72 = !DISubrange(count: 1)
!73 = !DIGlobalVariableExpression(var: !74, expr: !DIExpression())
!74 = distinct !DIGlobalVariable(name: "total_lines", scope: !2, file: !3, line: 58, type: !75, isLocal: true, isDefinition: true)
!75 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !76, line: 102, baseType: !77)
!76 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!77 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !78, line: 73, baseType: !59)
!78 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!79 = !DIGlobalVariableExpression(var: !80, expr: !DIExpression())
!80 = distinct !DIGlobalVariable(name: "total_words", scope: !2, file: !3, line: 59, type: !75, isLocal: true, isDefinition: true)
!81 = !DIGlobalVariableExpression(var: !82, expr: !DIExpression())
!82 = distinct !DIGlobalVariable(name: "total_chars", scope: !2, file: !3, line: 60, type: !75, isLocal: true, isDefinition: true)
!83 = !DIGlobalVariableExpression(var: !84, expr: !DIExpression())
!84 = distinct !DIGlobalVariable(name: "total_bytes", scope: !2, file: !3, line: 61, type: !75, isLocal: true, isDefinition: true)
!85 = !DIGlobalVariableExpression(var: !86, expr: !DIExpression())
!86 = distinct !DIGlobalVariable(name: "max_line_length", scope: !2, file: !3, line: 62, type: !75, isLocal: true, isDefinition: true)
!87 = !DIGlobalVariableExpression(var: !88, expr: !DIExpression())
!88 = distinct !DIGlobalVariable(name: "print_lines", scope: !2, file: !3, line: 65, type: !89, isLocal: true, isDefinition: true)
!89 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!90 = !DIGlobalVariableExpression(var: !91, expr: !DIExpression())
!91 = distinct !DIGlobalVariable(name: "print_words", scope: !2, file: !3, line: 65, type: !89, isLocal: true, isDefinition: true)
!92 = !DIGlobalVariableExpression(var: !93, expr: !DIExpression())
!93 = distinct !DIGlobalVariable(name: "print_chars", scope: !2, file: !3, line: 65, type: !89, isLocal: true, isDefinition: true)
!94 = !DIGlobalVariableExpression(var: !95, expr: !DIExpression())
!95 = distinct !DIGlobalVariable(name: "print_bytes", scope: !2, file: !3, line: 65, type: !89, isLocal: true, isDefinition: true)
!96 = !DIGlobalVariableExpression(var: !97, expr: !DIExpression())
!97 = distinct !DIGlobalVariable(name: "print_linelength", scope: !2, file: !3, line: 66, type: !89, isLocal: true, isDefinition: true)
!98 = !DIGlobalVariableExpression(var: !99, expr: !DIExpression())
!99 = distinct !DIGlobalVariable(name: "number_width", scope: !2, file: !3, line: 69, type: !60, isLocal: true, isDefinition: true)
!100 = !DIGlobalVariableExpression(var: !101, expr: !DIExpression())
!101 = distinct !DIGlobalVariable(name: "have_read_stdin", scope: !2, file: !3, line: 72, type: !89, isLocal: true, isDefinition: true)
!102 = !DIGlobalVariableExpression(var: !103, expr: !DIExpression())
!103 = distinct !DIGlobalVariable(name: "posixly_correct", scope: !2, file: !3, line: 78, type: !89, isLocal: true, isDefinition: true)
!104 = !DIGlobalVariableExpression(var: !105, expr: !DIExpression())
!105 = distinct !DIGlobalVariable(name: "longopts", scope: !2, file: !3, line: 98, type: !106, isLocal: true, isDefinition: true)
!106 = !DICompositeType(tag: DW_TAG_array_type, baseType: !107, size: 2304, elements: !116)
!107 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !108)
!108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !109, line: 50, size: 256, elements: !110)
!109 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/getopt_ext.h", directory: "")
!110 = !{!111, !112, !113, !115}
!111 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !108, file: !109, line: 52, baseType: !52, size: 64)
!112 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !108, file: !109, line: 55, baseType: !60, size: 32, offset: 64)
!113 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !108, file: !109, line: 56, baseType: !114, size: 64, offset: 128)
!114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !60, size: 64)
!115 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !108, file: !109, line: 57, baseType: !60, size: 32, offset: 192)
!116 = !{!117}
!117 = !DISubrange(count: 9)
!118 = !DIGlobalVariableExpression(var: !119, expr: !DIExpression())
!119 = distinct !DIGlobalVariable(name: "format_sp_int", scope: !120, file: !3, line: 178, type: !123, isLocal: true, isDefinition: true)
!120 = distinct !DISubprogram(name: "write_counts", scope: !3, file: !3, line: 171, type: !121, scopeLine: 177, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !69)
!121 = !DISubroutineType(types: !122)
!122 = !{null, !75, !75, !75, !75, !75, !52}
!123 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 40, elements: !124)
!124 = !{!125}
!125 = !DISubrange(count: 5)
!126 = !DIGlobalVariableExpression(var: !127, expr: !DIExpression())
!127 = distinct !DIGlobalVariable(name: "Version", scope: !128, file: !129, line: 2, type: !52, isLocal: false, isDefinition: true)
!128 = distinct !DICompileUnit(language: DW_LANG_C99, file: !129, producer: "clang version 12.0.1 (https://github.com/llvm/llvm-project.git fed41342a82f5a3a9201819a82bf7a48313e296b)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !69, globals: !130, splitDebugInlining: false, nameTableKind: None)
!129 = !DIFile(filename: "src/version.c", directory: "/nobackup/klee_LLVM_12/Dataset-1/coreutils-8.32/obj-llvm")
!130 = !{!126}
!131 = !DIGlobalVariableExpression(var: !132, expr: !DIExpression())
!132 = distinct !DIGlobalVariable(name: "file_name", scope: !133, file: !134, line: 46, type: !52, isLocal: true, isDefinition: true)
!133 = distinct !DICompileUnit(language: DW_LANG_C99, file: !134, producer: "clang version 12.0.1 (https://github.com/llvm/llvm-project.git fed41342a82f5a3a9201819a82bf7a48313e296b)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !69, retainedTypes: !135, globals: !136, splitDebugInlining: false, nameTableKind: None)
!134 = !DIFile(filename: "../lib/closeout.c", directory: "/nobackup/klee_LLVM_12/Dataset-1/coreutils-8.32/obj-llvm")
!135 = !{!52}
!136 = !{!131, !137}
!137 = !DIGlobalVariableExpression(var: !138, expr: !DIExpression())
!138 = distinct !DIGlobalVariable(name: "ignore_EPIPE", scope: !133, file: !134, line: 56, type: !89, isLocal: true, isDefinition: true)
!139 = !DIGlobalVariableExpression(var: !140, expr: !DIExpression())
!140 = distinct !DIGlobalVariable(name: "exit_failure", scope: !141, file: !142, line: 24, type: !144, isLocal: false, isDefinition: true)
!141 = distinct !DICompileUnit(language: DW_LANG_C99, file: !142, producer: "clang version 12.0.1 (https://github.com/llvm/llvm-project.git fed41342a82f5a3a9201819a82bf7a48313e296b)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !69, globals: !143, splitDebugInlining: false, nameTableKind: None)
!142 = !DIFile(filename: "../lib/exitfail.c", directory: "/nobackup/klee_LLVM_12/Dataset-1/coreutils-8.32/obj-llvm")
!143 = !{!139}
!144 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !60)
!145 = !DIGlobalVariableExpression(var: !146, expr: !DIExpression())
!146 = distinct !DIGlobalVariable(name: "is_basic_table", scope: !147, file: !148, line: 28, type: !152, isLocal: false, isDefinition: true)
!147 = distinct !DICompileUnit(language: DW_LANG_C99, file: !148, producer: "clang version 12.0.1 (https://github.com/llvm/llvm-project.git fed41342a82f5a3a9201819a82bf7a48313e296b)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !69, retainedTypes: !149, globals: !151, splitDebugInlining: false, nameTableKind: None)
!148 = !DIFile(filename: "../lib/mbchar.c", directory: "/nobackup/klee_LLVM_12/Dataset-1/coreutils-8.32/obj-llvm")
!149 = !{!150}
!150 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!151 = !{!145}
!152 = !DICompositeType(tag: DW_TAG_array_type, baseType: !153, size: 256, elements: !154)
!153 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!154 = !{!155}
!155 = !DISubrange(count: 8)
!156 = !DIGlobalVariableExpression(var: !157, expr: !DIExpression())
!157 = distinct !DIGlobalVariable(name: "program_name", scope: !158, file: !159, line: 33, type: !52, isLocal: false, isDefinition: true)
!158 = distinct !DICompileUnit(language: DW_LANG_C99, file: !159, producer: "clang version 12.0.1 (https://github.com/llvm/llvm-project.git fed41342a82f5a3a9201819a82bf7a48313e296b)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !69, retainedTypes: !160, globals: !161, splitDebugInlining: false, nameTableKind: None)
!159 = !DIFile(filename: "../lib/progname.c", directory: "/nobackup/klee_LLVM_12/Dataset-1/coreutils-8.32/obj-llvm")
!160 = !{!55, !56}
!161 = !{!156}
!162 = !DIGlobalVariableExpression(var: !163, expr: !DIExpression())
!163 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !164, file: !165, line: 85, type: !208, isLocal: false, isDefinition: true)
!164 = distinct !DICompileUnit(language: DW_LANG_C99, file: !165, producer: "clang version 12.0.1 (https://github.com/llvm/llvm-project.git fed41342a82f5a3a9201819a82bf7a48313e296b)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !166, retainedTypes: !172, globals: !173, splitDebugInlining: false, nameTableKind: None)
!165 = !DIFile(filename: "../lib/quotearg.c", directory: "/nobackup/klee_LLVM_12/Dataset-1/coreutils-8.32/obj-llvm")
!166 = !{!5, !167, !36}
!167 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quoting_flags", file: !6, line: 242, baseType: !7, size: 32, elements: !168)
!168 = !{!169, !170, !171}
!169 = !DIEnumerator(name: "QA_ELIDE_NULL_BYTES", value: 1, isUnsigned: true)
!170 = !DIEnumerator(name: "QA_ELIDE_OUTER_QUOTES", value: 2, isUnsigned: true)
!171 = !DIEnumerator(name: "QA_SPLIT_TRIGRAPHS", value: 4, isUnsigned: true)
!172 = !{!60, !61, !57, !52}
!173 = !{!162, !174, !180, !190, !192, !197, !204, !206}
!174 = !DIGlobalVariableExpression(var: !175, expr: !DIExpression())
!175 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !164, file: !165, line: 101, type: !176, isLocal: false, isDefinition: true)
!176 = !DICompositeType(tag: DW_TAG_array_type, baseType: !177, size: 320, elements: !178)
!177 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5)
!178 = !{!179}
!179 = !DISubrange(count: 10)
!180 = !DIGlobalVariableExpression(var: !181, expr: !DIExpression())
!181 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !164, file: !165, line: 1052, type: !182, isLocal: false, isDefinition: true)
!182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !165, line: 65, size: 448, elements: !183)
!183 = !{!184, !185, !186, !188, !189}
!184 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !182, file: !165, line: 68, baseType: !5, size: 32)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !182, file: !165, line: 71, baseType: !60, size: 32, offset: 32)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !182, file: !165, line: 75, baseType: !187, size: 256, offset: 64)
!187 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 256, elements: !154)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !182, file: !165, line: 78, baseType: !52, size: 64, offset: 320)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !182, file: !165, line: 81, baseType: !52, size: 64, offset: 384)
!190 = !DIGlobalVariableExpression(var: !191, expr: !DIExpression())
!191 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !164, file: !165, line: 116, type: !182, isLocal: true, isDefinition: true)
!192 = !DIGlobalVariableExpression(var: !193, expr: !DIExpression())
!193 = distinct !DIGlobalVariable(name: "slot0", scope: !164, file: !165, line: 842, type: !194, isLocal: true, isDefinition: true)
!194 = !DICompositeType(tag: DW_TAG_array_type, baseType: !54, size: 2048, elements: !195)
!195 = !{!196}
!196 = !DISubrange(count: 256)
!197 = !DIGlobalVariableExpression(var: !198, expr: !DIExpression())
!198 = distinct !DIGlobalVariable(name: "slotvec", scope: !164, file: !165, line: 845, type: !199, isLocal: true, isDefinition: true)
!199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 64)
!200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !165, line: 834, size: 128, elements: !201)
!201 = !{!202, !203}
!202 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !200, file: !165, line: 836, baseType: !57, size: 64)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !200, file: !165, line: 837, baseType: !56, size: 64, offset: 64)
!204 = !DIGlobalVariableExpression(var: !205, expr: !DIExpression())
!205 = distinct !DIGlobalVariable(name: "nslots", scope: !164, file: !165, line: 843, type: !60, isLocal: true, isDefinition: true)
!206 = !DIGlobalVariableExpression(var: !207, expr: !DIExpression())
!207 = distinct !DIGlobalVariable(name: "slotvec0", scope: !164, file: !165, line: 844, type: !200, isLocal: true, isDefinition: true)
!208 = !DICompositeType(tag: DW_TAG_array_type, baseType: !209, size: 704, elements: !210)
!209 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !52)
!210 = !{!211}
!211 = !DISubrange(count: 11)
!212 = !DIGlobalVariableExpression(var: !213, expr: !DIExpression())
!213 = distinct !DIGlobalVariable(name: "version_etc_copyright", scope: !214, file: !215, line: 26, type: !217, isLocal: false, isDefinition: true)
!214 = distinct !DICompileUnit(language: DW_LANG_C99, file: !215, producer: "clang version 12.0.1 (https://github.com/llvm/llvm-project.git fed41342a82f5a3a9201819a82bf7a48313e296b)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !69, globals: !216, splitDebugInlining: false, nameTableKind: None)
!215 = !DIFile(filename: "../lib/version-etc-fsf.c", directory: "/nobackup/klee_LLVM_12/Dataset-1/coreutils-8.32/obj-llvm")
!216 = !{!212}
!217 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 376, elements: !218)
!218 = !{!219}
!219 = !DISubrange(count: 47)
!220 = !DIGlobalVariableExpression(var: !221, expr: !DIExpression())
!221 = distinct !DIGlobalVariable(name: "obstack_alloc_failed_handler", scope: !222, file: !223, line: 351, type: !226, isLocal: false, isDefinition: true)
!222 = distinct !DICompileUnit(language: DW_LANG_C99, file: !223, producer: "clang version 12.0.1 (https://github.com/llvm/llvm-project.git fed41342a82f5a3a9201819a82bf7a48313e296b)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !69, retainedTypes: !224, globals: !225, splitDebugInlining: false, nameTableKind: None)
!223 = !DIFile(filename: "../lib/obstack.c", directory: "/nobackup/klee_LLVM_12/Dataset-1/coreutils-8.32/obj-llvm")
!224 = !{!56, !55, !52}
!225 = !{!220}
!226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 64)
!227 = !DISubroutineType(types: !228)
!228 = !{null}
!229 = distinct !DICompileUnit(language: DW_LANG_C99, file: !230, producer: "clang version 12.0.1 (https://github.com/llvm/llvm-project.git fed41342a82f5a3a9201819a82bf7a48313e296b)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !231, retainedTypes: !232, splitDebugInlining: false, nameTableKind: None)
!230 = !DIFile(filename: "../lib/argv-iter.c", directory: "/nobackup/klee_LLVM_12/Dataset-1/coreutils-8.32/obj-llvm")
!231 = !{!20}
!232 = !{!55}
!233 = distinct !DICompileUnit(language: DW_LANG_C99, file: !234, producer: "clang version 12.0.1 (https://github.com/llvm/llvm-project.git fed41342a82f5a3a9201819a82bf7a48313e296b)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !235, splitDebugInlining: false, nameTableKind: None)
!234 = !DIFile(filename: "../lib/fadvise.c", directory: "/nobackup/klee_LLVM_12/Dataset-1/coreutils-8.32/obj-llvm")
!235 = !{!27}
!236 = distinct !DICompileUnit(language: DW_LANG_C99, file: !237, producer: "clang version 12.0.1 (https://github.com/llvm/llvm-project.git fed41342a82f5a3a9201819a82bf7a48313e296b)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !69, retainedTypes: !238, splitDebugInlining: false, nameTableKind: None)
!237 = !DIFile(filename: "../lib/umaxtostr.c", directory: "/nobackup/klee_LLVM_12/Dataset-1/coreutils-8.32/obj-llvm")
!238 = !{!75}
!239 = distinct !DICompileUnit(language: DW_LANG_C99, file: !240, producer: "clang version 12.0.1 (https://github.com/llvm/llvm-project.git fed41342a82f5a3a9201819a82bf7a48313e296b)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !241, retainedTypes: !460, splitDebugInlining: false, nameTableKind: None)
!240 = !DIFile(filename: "../lib/physmem.c", directory: "/nobackup/klee_LLVM_12/Dataset-1/coreutils-8.32/obj-llvm")
!241 = !{!242}
!242 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !243, line: 71, baseType: !7, size: 32, elements: !244)
!243 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/confname.h", directory: "")
!244 = !{!245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459}
!245 = !DIEnumerator(name: "_SC_ARG_MAX", value: 0, isUnsigned: true)
!246 = !DIEnumerator(name: "_SC_CHILD_MAX", value: 1, isUnsigned: true)
!247 = !DIEnumerator(name: "_SC_CLK_TCK", value: 2, isUnsigned: true)
!248 = !DIEnumerator(name: "_SC_NGROUPS_MAX", value: 3, isUnsigned: true)
!249 = !DIEnumerator(name: "_SC_OPEN_MAX", value: 4, isUnsigned: true)
!250 = !DIEnumerator(name: "_SC_STREAM_MAX", value: 5, isUnsigned: true)
!251 = !DIEnumerator(name: "_SC_TZNAME_MAX", value: 6, isUnsigned: true)
!252 = !DIEnumerator(name: "_SC_JOB_CONTROL", value: 7, isUnsigned: true)
!253 = !DIEnumerator(name: "_SC_SAVED_IDS", value: 8, isUnsigned: true)
!254 = !DIEnumerator(name: "_SC_REALTIME_SIGNALS", value: 9, isUnsigned: true)
!255 = !DIEnumerator(name: "_SC_PRIORITY_SCHEDULING", value: 10, isUnsigned: true)
!256 = !DIEnumerator(name: "_SC_TIMERS", value: 11, isUnsigned: true)
!257 = !DIEnumerator(name: "_SC_ASYNCHRONOUS_IO", value: 12, isUnsigned: true)
!258 = !DIEnumerator(name: "_SC_PRIORITIZED_IO", value: 13, isUnsigned: true)
!259 = !DIEnumerator(name: "_SC_SYNCHRONIZED_IO", value: 14, isUnsigned: true)
!260 = !DIEnumerator(name: "_SC_FSYNC", value: 15, isUnsigned: true)
!261 = !DIEnumerator(name: "_SC_MAPPED_FILES", value: 16, isUnsigned: true)
!262 = !DIEnumerator(name: "_SC_MEMLOCK", value: 17, isUnsigned: true)
!263 = !DIEnumerator(name: "_SC_MEMLOCK_RANGE", value: 18, isUnsigned: true)
!264 = !DIEnumerator(name: "_SC_MEMORY_PROTECTION", value: 19, isUnsigned: true)
!265 = !DIEnumerator(name: "_SC_MESSAGE_PASSING", value: 20, isUnsigned: true)
!266 = !DIEnumerator(name: "_SC_SEMAPHORES", value: 21, isUnsigned: true)
!267 = !DIEnumerator(name: "_SC_SHARED_MEMORY_OBJECTS", value: 22, isUnsigned: true)
!268 = !DIEnumerator(name: "_SC_AIO_LISTIO_MAX", value: 23, isUnsigned: true)
!269 = !DIEnumerator(name: "_SC_AIO_MAX", value: 24, isUnsigned: true)
!270 = !DIEnumerator(name: "_SC_AIO_PRIO_DELTA_MAX", value: 25, isUnsigned: true)
!271 = !DIEnumerator(name: "_SC_DELAYTIMER_MAX", value: 26, isUnsigned: true)
!272 = !DIEnumerator(name: "_SC_MQ_OPEN_MAX", value: 27, isUnsigned: true)
!273 = !DIEnumerator(name: "_SC_MQ_PRIO_MAX", value: 28, isUnsigned: true)
!274 = !DIEnumerator(name: "_SC_VERSION", value: 29, isUnsigned: true)
!275 = !DIEnumerator(name: "_SC_PAGESIZE", value: 30, isUnsigned: true)
!276 = !DIEnumerator(name: "_SC_RTSIG_MAX", value: 31, isUnsigned: true)
!277 = !DIEnumerator(name: "_SC_SEM_NSEMS_MAX", value: 32, isUnsigned: true)
!278 = !DIEnumerator(name: "_SC_SEM_VALUE_MAX", value: 33, isUnsigned: true)
!279 = !DIEnumerator(name: "_SC_SIGQUEUE_MAX", value: 34, isUnsigned: true)
!280 = !DIEnumerator(name: "_SC_TIMER_MAX", value: 35, isUnsigned: true)
!281 = !DIEnumerator(name: "_SC_BC_BASE_MAX", value: 36, isUnsigned: true)
!282 = !DIEnumerator(name: "_SC_BC_DIM_MAX", value: 37, isUnsigned: true)
!283 = !DIEnumerator(name: "_SC_BC_SCALE_MAX", value: 38, isUnsigned: true)
!284 = !DIEnumerator(name: "_SC_BC_STRING_MAX", value: 39, isUnsigned: true)
!285 = !DIEnumerator(name: "_SC_COLL_WEIGHTS_MAX", value: 40, isUnsigned: true)
!286 = !DIEnumerator(name: "_SC_EQUIV_CLASS_MAX", value: 41, isUnsigned: true)
!287 = !DIEnumerator(name: "_SC_EXPR_NEST_MAX", value: 42, isUnsigned: true)
!288 = !DIEnumerator(name: "_SC_LINE_MAX", value: 43, isUnsigned: true)
!289 = !DIEnumerator(name: "_SC_RE_DUP_MAX", value: 44, isUnsigned: true)
!290 = !DIEnumerator(name: "_SC_CHARCLASS_NAME_MAX", value: 45, isUnsigned: true)
!291 = !DIEnumerator(name: "_SC_2_VERSION", value: 46, isUnsigned: true)
!292 = !DIEnumerator(name: "_SC_2_C_BIND", value: 47, isUnsigned: true)
!293 = !DIEnumerator(name: "_SC_2_C_DEV", value: 48, isUnsigned: true)
!294 = !DIEnumerator(name: "_SC_2_FORT_DEV", value: 49, isUnsigned: true)
!295 = !DIEnumerator(name: "_SC_2_FORT_RUN", value: 50, isUnsigned: true)
!296 = !DIEnumerator(name: "_SC_2_SW_DEV", value: 51, isUnsigned: true)
!297 = !DIEnumerator(name: "_SC_2_LOCALEDEF", value: 52, isUnsigned: true)
!298 = !DIEnumerator(name: "_SC_PII", value: 53, isUnsigned: true)
!299 = !DIEnumerator(name: "_SC_PII_XTI", value: 54, isUnsigned: true)
!300 = !DIEnumerator(name: "_SC_PII_SOCKET", value: 55, isUnsigned: true)
!301 = !DIEnumerator(name: "_SC_PII_INTERNET", value: 56, isUnsigned: true)
!302 = !DIEnumerator(name: "_SC_PII_OSI", value: 57, isUnsigned: true)
!303 = !DIEnumerator(name: "_SC_POLL", value: 58, isUnsigned: true)
!304 = !DIEnumerator(name: "_SC_SELECT", value: 59, isUnsigned: true)
!305 = !DIEnumerator(name: "_SC_UIO_MAXIOV", value: 60, isUnsigned: true)
!306 = !DIEnumerator(name: "_SC_IOV_MAX", value: 60, isUnsigned: true)
!307 = !DIEnumerator(name: "_SC_PII_INTERNET_STREAM", value: 61, isUnsigned: true)
!308 = !DIEnumerator(name: "_SC_PII_INTERNET_DGRAM", value: 62, isUnsigned: true)
!309 = !DIEnumerator(name: "_SC_PII_OSI_COTS", value: 63, isUnsigned: true)
!310 = !DIEnumerator(name: "_SC_PII_OSI_CLTS", value: 64, isUnsigned: true)
!311 = !DIEnumerator(name: "_SC_PII_OSI_M", value: 65, isUnsigned: true)
!312 = !DIEnumerator(name: "_SC_T_IOV_MAX", value: 66, isUnsigned: true)
!313 = !DIEnumerator(name: "_SC_THREADS", value: 67, isUnsigned: true)
!314 = !DIEnumerator(name: "_SC_THREAD_SAFE_FUNCTIONS", value: 68, isUnsigned: true)
!315 = !DIEnumerator(name: "_SC_GETGR_R_SIZE_MAX", value: 69, isUnsigned: true)
!316 = !DIEnumerator(name: "_SC_GETPW_R_SIZE_MAX", value: 70, isUnsigned: true)
!317 = !DIEnumerator(name: "_SC_LOGIN_NAME_MAX", value: 71, isUnsigned: true)
!318 = !DIEnumerator(name: "_SC_TTY_NAME_MAX", value: 72, isUnsigned: true)
!319 = !DIEnumerator(name: "_SC_THREAD_DESTRUCTOR_ITERATIONS", value: 73, isUnsigned: true)
!320 = !DIEnumerator(name: "_SC_THREAD_KEYS_MAX", value: 74, isUnsigned: true)
!321 = !DIEnumerator(name: "_SC_THREAD_STACK_MIN", value: 75, isUnsigned: true)
!322 = !DIEnumerator(name: "_SC_THREAD_THREADS_MAX", value: 76, isUnsigned: true)
!323 = !DIEnumerator(name: "_SC_THREAD_ATTR_STACKADDR", value: 77, isUnsigned: true)
!324 = !DIEnumerator(name: "_SC_THREAD_ATTR_STACKSIZE", value: 78, isUnsigned: true)
!325 = !DIEnumerator(name: "_SC_THREAD_PRIORITY_SCHEDULING", value: 79, isUnsigned: true)
!326 = !DIEnumerator(name: "_SC_THREAD_PRIO_INHERIT", value: 80, isUnsigned: true)
!327 = !DIEnumerator(name: "_SC_THREAD_PRIO_PROTECT", value: 81, isUnsigned: true)
!328 = !DIEnumerator(name: "_SC_THREAD_PROCESS_SHARED", value: 82, isUnsigned: true)
!329 = !DIEnumerator(name: "_SC_NPROCESSORS_CONF", value: 83, isUnsigned: true)
!330 = !DIEnumerator(name: "_SC_NPROCESSORS_ONLN", value: 84, isUnsigned: true)
!331 = !DIEnumerator(name: "_SC_PHYS_PAGES", value: 85, isUnsigned: true)
!332 = !DIEnumerator(name: "_SC_AVPHYS_PAGES", value: 86, isUnsigned: true)
!333 = !DIEnumerator(name: "_SC_ATEXIT_MAX", value: 87, isUnsigned: true)
!334 = !DIEnumerator(name: "_SC_PASS_MAX", value: 88, isUnsigned: true)
!335 = !DIEnumerator(name: "_SC_XOPEN_VERSION", value: 89, isUnsigned: true)
!336 = !DIEnumerator(name: "_SC_XOPEN_XCU_VERSION", value: 90, isUnsigned: true)
!337 = !DIEnumerator(name: "_SC_XOPEN_UNIX", value: 91, isUnsigned: true)
!338 = !DIEnumerator(name: "_SC_XOPEN_CRYPT", value: 92, isUnsigned: true)
!339 = !DIEnumerator(name: "_SC_XOPEN_ENH_I18N", value: 93, isUnsigned: true)
!340 = !DIEnumerator(name: "_SC_XOPEN_SHM", value: 94, isUnsigned: true)
!341 = !DIEnumerator(name: "_SC_2_CHAR_TERM", value: 95, isUnsigned: true)
!342 = !DIEnumerator(name: "_SC_2_C_VERSION", value: 96, isUnsigned: true)
!343 = !DIEnumerator(name: "_SC_2_UPE", value: 97, isUnsigned: true)
!344 = !DIEnumerator(name: "_SC_XOPEN_XPG2", value: 98, isUnsigned: true)
!345 = !DIEnumerator(name: "_SC_XOPEN_XPG3", value: 99, isUnsigned: true)
!346 = !DIEnumerator(name: "_SC_XOPEN_XPG4", value: 100, isUnsigned: true)
!347 = !DIEnumerator(name: "_SC_CHAR_BIT", value: 101, isUnsigned: true)
!348 = !DIEnumerator(name: "_SC_CHAR_MAX", value: 102, isUnsigned: true)
!349 = !DIEnumerator(name: "_SC_CHAR_MIN", value: 103, isUnsigned: true)
!350 = !DIEnumerator(name: "_SC_INT_MAX", value: 104, isUnsigned: true)
!351 = !DIEnumerator(name: "_SC_INT_MIN", value: 105, isUnsigned: true)
!352 = !DIEnumerator(name: "_SC_LONG_BIT", value: 106, isUnsigned: true)
!353 = !DIEnumerator(name: "_SC_WORD_BIT", value: 107, isUnsigned: true)
!354 = !DIEnumerator(name: "_SC_MB_LEN_MAX", value: 108, isUnsigned: true)
!355 = !DIEnumerator(name: "_SC_NZERO", value: 109, isUnsigned: true)
!356 = !DIEnumerator(name: "_SC_SSIZE_MAX", value: 110, isUnsigned: true)
!357 = !DIEnumerator(name: "_SC_SCHAR_MAX", value: 111, isUnsigned: true)
!358 = !DIEnumerator(name: "_SC_SCHAR_MIN", value: 112, isUnsigned: true)
!359 = !DIEnumerator(name: "_SC_SHRT_MAX", value: 113, isUnsigned: true)
!360 = !DIEnumerator(name: "_SC_SHRT_MIN", value: 114, isUnsigned: true)
!361 = !DIEnumerator(name: "_SC_UCHAR_MAX", value: 115, isUnsigned: true)
!362 = !DIEnumerator(name: "_SC_UINT_MAX", value: 116, isUnsigned: true)
!363 = !DIEnumerator(name: "_SC_ULONG_MAX", value: 117, isUnsigned: true)
!364 = !DIEnumerator(name: "_SC_USHRT_MAX", value: 118, isUnsigned: true)
!365 = !DIEnumerator(name: "_SC_NL_ARGMAX", value: 119, isUnsigned: true)
!366 = !DIEnumerator(name: "_SC_NL_LANGMAX", value: 120, isUnsigned: true)
!367 = !DIEnumerator(name: "_SC_NL_MSGMAX", value: 121, isUnsigned: true)
!368 = !DIEnumerator(name: "_SC_NL_NMAX", value: 122, isUnsigned: true)
!369 = !DIEnumerator(name: "_SC_NL_SETMAX", value: 123, isUnsigned: true)
!370 = !DIEnumerator(name: "_SC_NL_TEXTMAX", value: 124, isUnsigned: true)
!371 = !DIEnumerator(name: "_SC_XBS5_ILP32_OFF32", value: 125, isUnsigned: true)
!372 = !DIEnumerator(name: "_SC_XBS5_ILP32_OFFBIG", value: 126, isUnsigned: true)
!373 = !DIEnumerator(name: "_SC_XBS5_LP64_OFF64", value: 127, isUnsigned: true)
!374 = !DIEnumerator(name: "_SC_XBS5_LPBIG_OFFBIG", value: 128, isUnsigned: true)
!375 = !DIEnumerator(name: "_SC_XOPEN_LEGACY", value: 129, isUnsigned: true)
!376 = !DIEnumerator(name: "_SC_XOPEN_REALTIME", value: 130, isUnsigned: true)
!377 = !DIEnumerator(name: "_SC_XOPEN_REALTIME_THREADS", value: 131, isUnsigned: true)
!378 = !DIEnumerator(name: "_SC_ADVISORY_INFO", value: 132, isUnsigned: true)
!379 = !DIEnumerator(name: "_SC_BARRIERS", value: 133, isUnsigned: true)
!380 = !DIEnumerator(name: "_SC_BASE", value: 134, isUnsigned: true)
!381 = !DIEnumerator(name: "_SC_C_LANG_SUPPORT", value: 135, isUnsigned: true)
!382 = !DIEnumerator(name: "_SC_C_LANG_SUPPORT_R", value: 136, isUnsigned: true)
!383 = !DIEnumerator(name: "_SC_CLOCK_SELECTION", value: 137, isUnsigned: true)
!384 = !DIEnumerator(name: "_SC_CPUTIME", value: 138, isUnsigned: true)
!385 = !DIEnumerator(name: "_SC_THREAD_CPUTIME", value: 139, isUnsigned: true)
!386 = !DIEnumerator(name: "_SC_DEVICE_IO", value: 140, isUnsigned: true)
!387 = !DIEnumerator(name: "_SC_DEVICE_SPECIFIC", value: 141, isUnsigned: true)
!388 = !DIEnumerator(name: "_SC_DEVICE_SPECIFIC_R", value: 142, isUnsigned: true)
!389 = !DIEnumerator(name: "_SC_FD_MGMT", value: 143, isUnsigned: true)
!390 = !DIEnumerator(name: "_SC_FIFO", value: 144, isUnsigned: true)
!391 = !DIEnumerator(name: "_SC_PIPE", value: 145, isUnsigned: true)
!392 = !DIEnumerator(name: "_SC_FILE_ATTRIBUTES", value: 146, isUnsigned: true)
!393 = !DIEnumerator(name: "_SC_FILE_LOCKING", value: 147, isUnsigned: true)
!394 = !DIEnumerator(name: "_SC_FILE_SYSTEM", value: 148, isUnsigned: true)
!395 = !DIEnumerator(name: "_SC_MONOTONIC_CLOCK", value: 149, isUnsigned: true)
!396 = !DIEnumerator(name: "_SC_MULTI_PROCESS", value: 150, isUnsigned: true)
!397 = !DIEnumerator(name: "_SC_SINGLE_PROCESS", value: 151, isUnsigned: true)
!398 = !DIEnumerator(name: "_SC_NETWORKING", value: 152, isUnsigned: true)
!399 = !DIEnumerator(name: "_SC_READER_WRITER_LOCKS", value: 153, isUnsigned: true)
!400 = !DIEnumerator(name: "_SC_SPIN_LOCKS", value: 154, isUnsigned: true)
!401 = !DIEnumerator(name: "_SC_REGEXP", value: 155, isUnsigned: true)
!402 = !DIEnumerator(name: "_SC_REGEX_VERSION", value: 156, isUnsigned: true)
!403 = !DIEnumerator(name: "_SC_SHELL", value: 157, isUnsigned: true)
!404 = !DIEnumerator(name: "_SC_SIGNALS", value: 158, isUnsigned: true)
!405 = !DIEnumerator(name: "_SC_SPAWN", value: 159, isUnsigned: true)
!406 = !DIEnumerator(name: "_SC_SPORADIC_SERVER", value: 160, isUnsigned: true)
!407 = !DIEnumerator(name: "_SC_THREAD_SPORADIC_SERVER", value: 161, isUnsigned: true)
!408 = !DIEnumerator(name: "_SC_SYSTEM_DATABASE", value: 162, isUnsigned: true)
!409 = !DIEnumerator(name: "_SC_SYSTEM_DATABASE_R", value: 163, isUnsigned: true)
!410 = !DIEnumerator(name: "_SC_TIMEOUTS", value: 164, isUnsigned: true)
!411 = !DIEnumerator(name: "_SC_TYPED_MEMORY_OBJECTS", value: 165, isUnsigned: true)
!412 = !DIEnumerator(name: "_SC_USER_GROUPS", value: 166, isUnsigned: true)
!413 = !DIEnumerator(name: "_SC_USER_GROUPS_R", value: 167, isUnsigned: true)
!414 = !DIEnumerator(name: "_SC_2_PBS", value: 168, isUnsigned: true)
!415 = !DIEnumerator(name: "_SC_2_PBS_ACCOUNTING", value: 169, isUnsigned: true)
!416 = !DIEnumerator(name: "_SC_2_PBS_LOCATE", value: 170, isUnsigned: true)
!417 = !DIEnumerator(name: "_SC_2_PBS_MESSAGE", value: 171, isUnsigned: true)
!418 = !DIEnumerator(name: "_SC_2_PBS_TRACK", value: 172, isUnsigned: true)
!419 = !DIEnumerator(name: "_SC_SYMLOOP_MAX", value: 173, isUnsigned: true)
!420 = !DIEnumerator(name: "_SC_STREAMS", value: 174, isUnsigned: true)
!421 = !DIEnumerator(name: "_SC_2_PBS_CHECKPOINT", value: 175, isUnsigned: true)
!422 = !DIEnumerator(name: "_SC_V6_ILP32_OFF32", value: 176, isUnsigned: true)
!423 = !DIEnumerator(name: "_SC_V6_ILP32_OFFBIG", value: 177, isUnsigned: true)
!424 = !DIEnumerator(name: "_SC_V6_LP64_OFF64", value: 178, isUnsigned: true)
!425 = !DIEnumerator(name: "_SC_V6_LPBIG_OFFBIG", value: 179, isUnsigned: true)
!426 = !DIEnumerator(name: "_SC_HOST_NAME_MAX", value: 180, isUnsigned: true)
!427 = !DIEnumerator(name: "_SC_TRACE", value: 181, isUnsigned: true)
!428 = !DIEnumerator(name: "_SC_TRACE_EVENT_FILTER", value: 182, isUnsigned: true)
!429 = !DIEnumerator(name: "_SC_TRACE_INHERIT", value: 183, isUnsigned: true)
!430 = !DIEnumerator(name: "_SC_TRACE_LOG", value: 184, isUnsigned: true)
!431 = !DIEnumerator(name: "_SC_LEVEL1_ICACHE_SIZE", value: 185, isUnsigned: true)
!432 = !DIEnumerator(name: "_SC_LEVEL1_ICACHE_ASSOC", value: 186, isUnsigned: true)
!433 = !DIEnumerator(name: "_SC_LEVEL1_ICACHE_LINESIZE", value: 187, isUnsigned: true)
!434 = !DIEnumerator(name: "_SC_LEVEL1_DCACHE_SIZE", value: 188, isUnsigned: true)
!435 = !DIEnumerator(name: "_SC_LEVEL1_DCACHE_ASSOC", value: 189, isUnsigned: true)
!436 = !DIEnumerator(name: "_SC_LEVEL1_DCACHE_LINESIZE", value: 190, isUnsigned: true)
!437 = !DIEnumerator(name: "_SC_LEVEL2_CACHE_SIZE", value: 191, isUnsigned: true)
!438 = !DIEnumerator(name: "_SC_LEVEL2_CACHE_ASSOC", value: 192, isUnsigned: true)
!439 = !DIEnumerator(name: "_SC_LEVEL2_CACHE_LINESIZE", value: 193, isUnsigned: true)
!440 = !DIEnumerator(name: "_SC_LEVEL3_CACHE_SIZE", value: 194, isUnsigned: true)
!441 = !DIEnumerator(name: "_SC_LEVEL3_CACHE_ASSOC", value: 195, isUnsigned: true)
!442 = !DIEnumerator(name: "_SC_LEVEL3_CACHE_LINESIZE", value: 196, isUnsigned: true)
!443 = !DIEnumerator(name: "_SC_LEVEL4_CACHE_SIZE", value: 197, isUnsigned: true)
!444 = !DIEnumerator(name: "_SC_LEVEL4_CACHE_ASSOC", value: 198, isUnsigned: true)
!445 = !DIEnumerator(name: "_SC_LEVEL4_CACHE_LINESIZE", value: 199, isUnsigned: true)
!446 = !DIEnumerator(name: "_SC_IPV6", value: 235, isUnsigned: true)
!447 = !DIEnumerator(name: "_SC_RAW_SOCKETS", value: 236, isUnsigned: true)
!448 = !DIEnumerator(name: "_SC_V7_ILP32_OFF32", value: 237, isUnsigned: true)
!449 = !DIEnumerator(name: "_SC_V7_ILP32_OFFBIG", value: 238, isUnsigned: true)
!450 = !DIEnumerator(name: "_SC_V7_LP64_OFF64", value: 239, isUnsigned: true)
!451 = !DIEnumerator(name: "_SC_V7_LPBIG_OFFBIG", value: 240, isUnsigned: true)
!452 = !DIEnumerator(name: "_SC_SS_REPL_MAX", value: 241, isUnsigned: true)
!453 = !DIEnumerator(name: "_SC_TRACE_EVENT_NAME_MAX", value: 242, isUnsigned: true)
!454 = !DIEnumerator(name: "_SC_TRACE_NAME_MAX", value: 243, isUnsigned: true)
!455 = !DIEnumerator(name: "_SC_TRACE_SYS_MAX", value: 244, isUnsigned: true)
!456 = !DIEnumerator(name: "_SC_TRACE_USER_EVENT_MAX", value: 245, isUnsigned: true)
!457 = !DIEnumerator(name: "_SC_XOPEN_STREAMS", value: 246, isUnsigned: true)
!458 = !DIEnumerator(name: "_SC_THREAD_ROBUST_PRIO_INHERIT", value: 247, isUnsigned: true)
!459 = !DIEnumerator(name: "_SC_THREAD_ROBUST_PRIO_PROTECT", value: 248, isUnsigned: true)
!460 = !{!461}
!461 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!462 = distinct !DICompileUnit(language: DW_LANG_C99, file: !463, producer: "clang version 12.0.1 (https://github.com/llvm/llvm-project.git fed41342a82f5a3a9201819a82bf7a48313e296b)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !69, retainedTypes: !464, splitDebugInlining: false, nameTableKind: None)
!463 = !DIFile(filename: "../lib/readtokens0.c", directory: "/nobackup/klee_LLVM_12/Dataset-1/coreutils-8.32/obj-llvm")
!464 = !{!55, !56, !57, !465}
!465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !466, size: 64)
!466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !467, size: 64)
!467 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!468 = distinct !DICompileUnit(language: DW_LANG_C99, file: !469, producer: "clang version 12.0.1 (https://github.com/llvm/llvm-project.git fed41342a82f5a3a9201819a82bf7a48313e296b)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !470, splitDebugInlining: false, nameTableKind: None)
!469 = !DIFile(filename: "../lib/safe-read.c", directory: "/nobackup/klee_LLVM_12/Dataset-1/coreutils-8.32/obj-llvm")
!470 = !{!471}
!471 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !472, line: 40, baseType: !7, size: 32, elements: !473)
!472 = !DIFile(filename: "../lib/sys-limits.h", directory: "/nobackup/klee_LLVM_12/Dataset-1/coreutils-8.32/obj-llvm")
!473 = !{!474}
!474 = !DIEnumerator(name: "SYS_BUFSIZE_MAX", value: 2146435072, isUnsigned: true)
!475 = distinct !DICompileUnit(language: DW_LANG_C99, file: !476, producer: "clang version 12.0.1 (https://github.com/llvm/llvm-project.git fed41342a82f5a3a9201819a82bf7a48313e296b)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !477, retainedTypes: !481, splitDebugInlining: false, nameTableKind: None)
!476 = !DIFile(filename: "../lib/version-etc.c", directory: "/nobackup/klee_LLVM_12/Dataset-1/coreutils-8.32/obj-llvm")
!477 = !{!478}
!478 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !476, line: 40, baseType: !7, size: 32, elements: !479)
!479 = !{!480}
!480 = !DIEnumerator(name: "COPYRIGHT_YEAR", value: 2020, isUnsigned: true)
!481 = !{!52, !55}
!482 = distinct !DICompileUnit(language: DW_LANG_C99, file: !483, producer: "clang version 12.0.1 (https://github.com/llvm/llvm-project.git fed41342a82f5a3a9201819a82bf7a48313e296b)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !484, retainedTypes: !493, splitDebugInlining: false, nameTableKind: None)
!483 = !DIFile(filename: "../lib/xmalloc.c", directory: "/nobackup/klee_LLVM_12/Dataset-1/coreutils-8.32/obj-llvm")
!484 = !{!485}
!485 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !487, file: !486, line: 186, baseType: !7, size: 32, elements: !491)
!486 = !DIFile(filename: "../lib/xalloc.h", directory: "/nobackup/klee_LLVM_12/Dataset-1/coreutils-8.32/obj-llvm")
!487 = distinct !DISubprogram(name: "x2nrealloc", scope: !486, file: !486, line: 174, type: !488, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !482, retainedNodes: !69)
!488 = !DISubroutineType(types: !489)
!489 = !{!55, !55, !490, !57}
!490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !57, size: 64)
!491 = !{!492}
!492 = !DIEnumerator(name: "DEFAULT_MXFAST", value: 128, isUnsigned: true)
!493 = !{!57, !56, !55}
!494 = distinct !DICompileUnit(language: DW_LANG_C99, file: !495, producer: "clang version 12.0.1 (https://github.com/llvm/llvm-project.git fed41342a82f5a3a9201819a82bf7a48313e296b)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !69, retainedTypes: !135, splitDebugInlining: false, nameTableKind: None)
!495 = !DIFile(filename: "../lib/xalloc-die.c", directory: "/nobackup/klee_LLVM_12/Dataset-1/coreutils-8.32/obj-llvm")
!496 = distinct !DICompileUnit(language: DW_LANG_C99, file: !497, producer: "clang version 12.0.1 (https://github.com/llvm/llvm-project.git fed41342a82f5a3a9201819a82bf7a48313e296b)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !69, splitDebugInlining: false, nameTableKind: None)
!497 = !DIFile(filename: "../lib/xbinary-io.c", directory: "/nobackup/klee_LLVM_12/Dataset-1/coreutils-8.32/obj-llvm")
!498 = distinct !DICompileUnit(language: DW_LANG_C99, file: !499, producer: "clang version 12.0.1 (https://github.com/llvm/llvm-project.git fed41342a82f5a3a9201819a82bf7a48313e296b)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !69, splitDebugInlining: false, nameTableKind: None)
!499 = !DIFile(filename: "../lib/fclose.c", directory: "/nobackup/klee_LLVM_12/Dataset-1/coreutils-8.32/obj-llvm")
!500 = distinct !DICompileUnit(language: DW_LANG_C99, file: !501, producer: "clang version 12.0.1 (https://github.com/llvm/llvm-project.git fed41342a82f5a3a9201819a82bf7a48313e296b)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !69, retainedTypes: !232, splitDebugInlining: false, nameTableKind: None)
!501 = !DIFile(filename: "../lib/fflush.c", directory: "/nobackup/klee_LLVM_12/Dataset-1/coreutils-8.32/obj-llvm")
!502 = distinct !DICompileUnit(language: DW_LANG_C99, file: !503, producer: "clang version 12.0.1 (https://github.com/llvm/llvm-project.git fed41342a82f5a3a9201819a82bf7a48313e296b)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !69, retainedTypes: !232, splitDebugInlining: false, nameTableKind: None)
!503 = !DIFile(filename: "../lib/fseeko.c", directory: "/nobackup/klee_LLVM_12/Dataset-1/coreutils-8.32/obj-llvm")
!504 = distinct !DICompileUnit(language: DW_LANG_C99, file: !505, producer: "clang version 12.0.1 (https://github.com/llvm/llvm-project.git fed41342a82f5a3a9201819a82bf7a48313e296b)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !69, retainedTypes: !506, splitDebugInlining: false, nameTableKind: None)
!505 = !DIFile(filename: "../lib/mbrtowc.c", directory: "/nobackup/klee_LLVM_12/Dataset-1/coreutils-8.32/obj-llvm")
!506 = !{!57}
!507 = distinct !DICompileUnit(language: DW_LANG_C99, file: !508, producer: "clang version 12.0.1 (https://github.com/llvm/llvm-project.git fed41342a82f5a3a9201819a82bf7a48313e296b)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !69, splitDebugInlining: false, nameTableKind: None)
!508 = !DIFile(filename: "../lib/binary-io.c", directory: "/nobackup/klee_LLVM_12/Dataset-1/coreutils-8.32/obj-llvm")
!509 = distinct !DICompileUnit(language: DW_LANG_C99, file: !510, producer: "clang version 12.0.1 (https://github.com/llvm/llvm-project.git fed41342a82f5a3a9201819a82bf7a48313e296b)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !69, retainedTypes: !511, splitDebugInlining: false, nameTableKind: None)
!510 = !DIFile(filename: "../lib/c-strcasecmp.c", directory: "/nobackup/klee_LLVM_12/Dataset-1/coreutils-8.32/obj-llvm")
!511 = !{!512}
!512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !513, size: 64)
!513 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !150)
!514 = distinct !DICompileUnit(language: DW_LANG_C99, file: !515, producer: "clang version 12.0.1 (https://github.com/llvm/llvm-project.git fed41342a82f5a3a9201819a82bf7a48313e296b)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !69, splitDebugInlining: false, nameTableKind: None)
!515 = !DIFile(filename: "../lib/close-stream.c", directory: "/nobackup/klee_LLVM_12/Dataset-1/coreutils-8.32/obj-llvm")
!516 = distinct !DICompileUnit(language: DW_LANG_C99, file: !517, producer: "clang version 12.0.1 (https://github.com/llvm/llvm-project.git fed41342a82f5a3a9201819a82bf7a48313e296b)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !69, splitDebugInlining: false, nameTableKind: None)
!517 = !DIFile(filename: "../lib/hard-locale.c", directory: "/nobackup/klee_LLVM_12/Dataset-1/coreutils-8.32/obj-llvm")
!518 = distinct !DICompileUnit(language: DW_LANG_C99, file: !519, producer: "clang version 12.0.1 (https://github.com/llvm/llvm-project.git fed41342a82f5a3a9201819a82bf7a48313e296b)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !520, retainedTypes: !232, splitDebugInlining: false, nameTableKind: None)
!519 = !DIFile(filename: "../lib/localcharset.c", directory: "/nobackup/klee_LLVM_12/Dataset-1/coreutils-8.32/obj-llvm")
!520 = !{!521}
!521 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !522, line: 41, baseType: !7, size: 32, elements: !523)
!522 = !DIFile(filename: "/usr/include/langinfo.h", directory: "")
!523 = !{!524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906}
!524 = !DIEnumerator(name: "ABDAY_1", value: 131072, isUnsigned: true)
!525 = !DIEnumerator(name: "ABDAY_2", value: 131073, isUnsigned: true)
!526 = !DIEnumerator(name: "ABDAY_3", value: 131074, isUnsigned: true)
!527 = !DIEnumerator(name: "ABDAY_4", value: 131075, isUnsigned: true)
!528 = !DIEnumerator(name: "ABDAY_5", value: 131076, isUnsigned: true)
!529 = !DIEnumerator(name: "ABDAY_6", value: 131077, isUnsigned: true)
!530 = !DIEnumerator(name: "ABDAY_7", value: 131078, isUnsigned: true)
!531 = !DIEnumerator(name: "DAY_1", value: 131079, isUnsigned: true)
!532 = !DIEnumerator(name: "DAY_2", value: 131080, isUnsigned: true)
!533 = !DIEnumerator(name: "DAY_3", value: 131081, isUnsigned: true)
!534 = !DIEnumerator(name: "DAY_4", value: 131082, isUnsigned: true)
!535 = !DIEnumerator(name: "DAY_5", value: 131083, isUnsigned: true)
!536 = !DIEnumerator(name: "DAY_6", value: 131084, isUnsigned: true)
!537 = !DIEnumerator(name: "DAY_7", value: 131085, isUnsigned: true)
!538 = !DIEnumerator(name: "ABMON_1", value: 131086, isUnsigned: true)
!539 = !DIEnumerator(name: "ABMON_2", value: 131087, isUnsigned: true)
!540 = !DIEnumerator(name: "ABMON_3", value: 131088, isUnsigned: true)
!541 = !DIEnumerator(name: "ABMON_4", value: 131089, isUnsigned: true)
!542 = !DIEnumerator(name: "ABMON_5", value: 131090, isUnsigned: true)
!543 = !DIEnumerator(name: "ABMON_6", value: 131091, isUnsigned: true)
!544 = !DIEnumerator(name: "ABMON_7", value: 131092, isUnsigned: true)
!545 = !DIEnumerator(name: "ABMON_8", value: 131093, isUnsigned: true)
!546 = !DIEnumerator(name: "ABMON_9", value: 131094, isUnsigned: true)
!547 = !DIEnumerator(name: "ABMON_10", value: 131095, isUnsigned: true)
!548 = !DIEnumerator(name: "ABMON_11", value: 131096, isUnsigned: true)
!549 = !DIEnumerator(name: "ABMON_12", value: 131097, isUnsigned: true)
!550 = !DIEnumerator(name: "MON_1", value: 131098, isUnsigned: true)
!551 = !DIEnumerator(name: "MON_2", value: 131099, isUnsigned: true)
!552 = !DIEnumerator(name: "MON_3", value: 131100, isUnsigned: true)
!553 = !DIEnumerator(name: "MON_4", value: 131101, isUnsigned: true)
!554 = !DIEnumerator(name: "MON_5", value: 131102, isUnsigned: true)
!555 = !DIEnumerator(name: "MON_6", value: 131103, isUnsigned: true)
!556 = !DIEnumerator(name: "MON_7", value: 131104, isUnsigned: true)
!557 = !DIEnumerator(name: "MON_8", value: 131105, isUnsigned: true)
!558 = !DIEnumerator(name: "MON_9", value: 131106, isUnsigned: true)
!559 = !DIEnumerator(name: "MON_10", value: 131107, isUnsigned: true)
!560 = !DIEnumerator(name: "MON_11", value: 131108, isUnsigned: true)
!561 = !DIEnumerator(name: "MON_12", value: 131109, isUnsigned: true)
!562 = !DIEnumerator(name: "AM_STR", value: 131110, isUnsigned: true)
!563 = !DIEnumerator(name: "PM_STR", value: 131111, isUnsigned: true)
!564 = !DIEnumerator(name: "D_T_FMT", value: 131112, isUnsigned: true)
!565 = !DIEnumerator(name: "D_FMT", value: 131113, isUnsigned: true)
!566 = !DIEnumerator(name: "T_FMT", value: 131114, isUnsigned: true)
!567 = !DIEnumerator(name: "T_FMT_AMPM", value: 131115, isUnsigned: true)
!568 = !DIEnumerator(name: "ERA", value: 131116, isUnsigned: true)
!569 = !DIEnumerator(name: "__ERA_YEAR", value: 131117, isUnsigned: true)
!570 = !DIEnumerator(name: "ERA_D_FMT", value: 131118, isUnsigned: true)
!571 = !DIEnumerator(name: "ALT_DIGITS", value: 131119, isUnsigned: true)
!572 = !DIEnumerator(name: "ERA_D_T_FMT", value: 131120, isUnsigned: true)
!573 = !DIEnumerator(name: "ERA_T_FMT", value: 131121, isUnsigned: true)
!574 = !DIEnumerator(name: "_NL_TIME_ERA_NUM_ENTRIES", value: 131122, isUnsigned: true)
!575 = !DIEnumerator(name: "_NL_TIME_ERA_ENTRIES", value: 131123, isUnsigned: true)
!576 = !DIEnumerator(name: "_NL_WABDAY_1", value: 131124, isUnsigned: true)
!577 = !DIEnumerator(name: "_NL_WABDAY_2", value: 131125, isUnsigned: true)
!578 = !DIEnumerator(name: "_NL_WABDAY_3", value: 131126, isUnsigned: true)
!579 = !DIEnumerator(name: "_NL_WABDAY_4", value: 131127, isUnsigned: true)
!580 = !DIEnumerator(name: "_NL_WABDAY_5", value: 131128, isUnsigned: true)
!581 = !DIEnumerator(name: "_NL_WABDAY_6", value: 131129, isUnsigned: true)
!582 = !DIEnumerator(name: "_NL_WABDAY_7", value: 131130, isUnsigned: true)
!583 = !DIEnumerator(name: "_NL_WDAY_1", value: 131131, isUnsigned: true)
!584 = !DIEnumerator(name: "_NL_WDAY_2", value: 131132, isUnsigned: true)
!585 = !DIEnumerator(name: "_NL_WDAY_3", value: 131133, isUnsigned: true)
!586 = !DIEnumerator(name: "_NL_WDAY_4", value: 131134, isUnsigned: true)
!587 = !DIEnumerator(name: "_NL_WDAY_5", value: 131135, isUnsigned: true)
!588 = !DIEnumerator(name: "_NL_WDAY_6", value: 131136, isUnsigned: true)
!589 = !DIEnumerator(name: "_NL_WDAY_7", value: 131137, isUnsigned: true)
!590 = !DIEnumerator(name: "_NL_WABMON_1", value: 131138, isUnsigned: true)
!591 = !DIEnumerator(name: "_NL_WABMON_2", value: 131139, isUnsigned: true)
!592 = !DIEnumerator(name: "_NL_WABMON_3", value: 131140, isUnsigned: true)
!593 = !DIEnumerator(name: "_NL_WABMON_4", value: 131141, isUnsigned: true)
!594 = !DIEnumerator(name: "_NL_WABMON_5", value: 131142, isUnsigned: true)
!595 = !DIEnumerator(name: "_NL_WABMON_6", value: 131143, isUnsigned: true)
!596 = !DIEnumerator(name: "_NL_WABMON_7", value: 131144, isUnsigned: true)
!597 = !DIEnumerator(name: "_NL_WABMON_8", value: 131145, isUnsigned: true)
!598 = !DIEnumerator(name: "_NL_WABMON_9", value: 131146, isUnsigned: true)
!599 = !DIEnumerator(name: "_NL_WABMON_10", value: 131147, isUnsigned: true)
!600 = !DIEnumerator(name: "_NL_WABMON_11", value: 131148, isUnsigned: true)
!601 = !DIEnumerator(name: "_NL_WABMON_12", value: 131149, isUnsigned: true)
!602 = !DIEnumerator(name: "_NL_WMON_1", value: 131150, isUnsigned: true)
!603 = !DIEnumerator(name: "_NL_WMON_2", value: 131151, isUnsigned: true)
!604 = !DIEnumerator(name: "_NL_WMON_3", value: 131152, isUnsigned: true)
!605 = !DIEnumerator(name: "_NL_WMON_4", value: 131153, isUnsigned: true)
!606 = !DIEnumerator(name: "_NL_WMON_5", value: 131154, isUnsigned: true)
!607 = !DIEnumerator(name: "_NL_WMON_6", value: 131155, isUnsigned: true)
!608 = !DIEnumerator(name: "_NL_WMON_7", value: 131156, isUnsigned: true)
!609 = !DIEnumerator(name: "_NL_WMON_8", value: 131157, isUnsigned: true)
!610 = !DIEnumerator(name: "_NL_WMON_9", value: 131158, isUnsigned: true)
!611 = !DIEnumerator(name: "_NL_WMON_10", value: 131159, isUnsigned: true)
!612 = !DIEnumerator(name: "_NL_WMON_11", value: 131160, isUnsigned: true)
!613 = !DIEnumerator(name: "_NL_WMON_12", value: 131161, isUnsigned: true)
!614 = !DIEnumerator(name: "_NL_WAM_STR", value: 131162, isUnsigned: true)
!615 = !DIEnumerator(name: "_NL_WPM_STR", value: 131163, isUnsigned: true)
!616 = !DIEnumerator(name: "_NL_WD_T_FMT", value: 131164, isUnsigned: true)
!617 = !DIEnumerator(name: "_NL_WD_FMT", value: 131165, isUnsigned: true)
!618 = !DIEnumerator(name: "_NL_WT_FMT", value: 131166, isUnsigned: true)
!619 = !DIEnumerator(name: "_NL_WT_FMT_AMPM", value: 131167, isUnsigned: true)
!620 = !DIEnumerator(name: "_NL_WERA_YEAR", value: 131168, isUnsigned: true)
!621 = !DIEnumerator(name: "_NL_WERA_D_FMT", value: 131169, isUnsigned: true)
!622 = !DIEnumerator(name: "_NL_WALT_DIGITS", value: 131170, isUnsigned: true)
!623 = !DIEnumerator(name: "_NL_WERA_D_T_FMT", value: 131171, isUnsigned: true)
!624 = !DIEnumerator(name: "_NL_WERA_T_FMT", value: 131172, isUnsigned: true)
!625 = !DIEnumerator(name: "_NL_TIME_WEEK_NDAYS", value: 131173, isUnsigned: true)
!626 = !DIEnumerator(name: "_NL_TIME_WEEK_1STDAY", value: 131174, isUnsigned: true)
!627 = !DIEnumerator(name: "_NL_TIME_WEEK_1STWEEK", value: 131175, isUnsigned: true)
!628 = !DIEnumerator(name: "_NL_TIME_FIRST_WEEKDAY", value: 131176, isUnsigned: true)
!629 = !DIEnumerator(name: "_NL_TIME_FIRST_WORKDAY", value: 131177, isUnsigned: true)
!630 = !DIEnumerator(name: "_NL_TIME_CAL_DIRECTION", value: 131178, isUnsigned: true)
!631 = !DIEnumerator(name: "_NL_TIME_TIMEZONE", value: 131179, isUnsigned: true)
!632 = !DIEnumerator(name: "_DATE_FMT", value: 131180, isUnsigned: true)
!633 = !DIEnumerator(name: "_NL_W_DATE_FMT", value: 131181, isUnsigned: true)
!634 = !DIEnumerator(name: "_NL_TIME_CODESET", value: 131182, isUnsigned: true)
!635 = !DIEnumerator(name: "__ALTMON_1", value: 131183, isUnsigned: true)
!636 = !DIEnumerator(name: "__ALTMON_2", value: 131184, isUnsigned: true)
!637 = !DIEnumerator(name: "__ALTMON_3", value: 131185, isUnsigned: true)
!638 = !DIEnumerator(name: "__ALTMON_4", value: 131186, isUnsigned: true)
!639 = !DIEnumerator(name: "__ALTMON_5", value: 131187, isUnsigned: true)
!640 = !DIEnumerator(name: "__ALTMON_6", value: 131188, isUnsigned: true)
!641 = !DIEnumerator(name: "__ALTMON_7", value: 131189, isUnsigned: true)
!642 = !DIEnumerator(name: "__ALTMON_8", value: 131190, isUnsigned: true)
!643 = !DIEnumerator(name: "__ALTMON_9", value: 131191, isUnsigned: true)
!644 = !DIEnumerator(name: "__ALTMON_10", value: 131192, isUnsigned: true)
!645 = !DIEnumerator(name: "__ALTMON_11", value: 131193, isUnsigned: true)
!646 = !DIEnumerator(name: "__ALTMON_12", value: 131194, isUnsigned: true)
!647 = !DIEnumerator(name: "_NL_WALTMON_1", value: 131195, isUnsigned: true)
!648 = !DIEnumerator(name: "_NL_WALTMON_2", value: 131196, isUnsigned: true)
!649 = !DIEnumerator(name: "_NL_WALTMON_3", value: 131197, isUnsigned: true)
!650 = !DIEnumerator(name: "_NL_WALTMON_4", value: 131198, isUnsigned: true)
!651 = !DIEnumerator(name: "_NL_WALTMON_5", value: 131199, isUnsigned: true)
!652 = !DIEnumerator(name: "_NL_WALTMON_6", value: 131200, isUnsigned: true)
!653 = !DIEnumerator(name: "_NL_WALTMON_7", value: 131201, isUnsigned: true)
!654 = !DIEnumerator(name: "_NL_WALTMON_8", value: 131202, isUnsigned: true)
!655 = !DIEnumerator(name: "_NL_WALTMON_9", value: 131203, isUnsigned: true)
!656 = !DIEnumerator(name: "_NL_WALTMON_10", value: 131204, isUnsigned: true)
!657 = !DIEnumerator(name: "_NL_WALTMON_11", value: 131205, isUnsigned: true)
!658 = !DIEnumerator(name: "_NL_WALTMON_12", value: 131206, isUnsigned: true)
!659 = !DIEnumerator(name: "_NL_ABALTMON_1", value: 131207, isUnsigned: true)
!660 = !DIEnumerator(name: "_NL_ABALTMON_2", value: 131208, isUnsigned: true)
!661 = !DIEnumerator(name: "_NL_ABALTMON_3", value: 131209, isUnsigned: true)
!662 = !DIEnumerator(name: "_NL_ABALTMON_4", value: 131210, isUnsigned: true)
!663 = !DIEnumerator(name: "_NL_ABALTMON_5", value: 131211, isUnsigned: true)
!664 = !DIEnumerator(name: "_NL_ABALTMON_6", value: 131212, isUnsigned: true)
!665 = !DIEnumerator(name: "_NL_ABALTMON_7", value: 131213, isUnsigned: true)
!666 = !DIEnumerator(name: "_NL_ABALTMON_8", value: 131214, isUnsigned: true)
!667 = !DIEnumerator(name: "_NL_ABALTMON_9", value: 131215, isUnsigned: true)
!668 = !DIEnumerator(name: "_NL_ABALTMON_10", value: 131216, isUnsigned: true)
!669 = !DIEnumerator(name: "_NL_ABALTMON_11", value: 131217, isUnsigned: true)
!670 = !DIEnumerator(name: "_NL_ABALTMON_12", value: 131218, isUnsigned: true)
!671 = !DIEnumerator(name: "_NL_WABALTMON_1", value: 131219, isUnsigned: true)
!672 = !DIEnumerator(name: "_NL_WABALTMON_2", value: 131220, isUnsigned: true)
!673 = !DIEnumerator(name: "_NL_WABALTMON_3", value: 131221, isUnsigned: true)
!674 = !DIEnumerator(name: "_NL_WABALTMON_4", value: 131222, isUnsigned: true)
!675 = !DIEnumerator(name: "_NL_WABALTMON_5", value: 131223, isUnsigned: true)
!676 = !DIEnumerator(name: "_NL_WABALTMON_6", value: 131224, isUnsigned: true)
!677 = !DIEnumerator(name: "_NL_WABALTMON_7", value: 131225, isUnsigned: true)
!678 = !DIEnumerator(name: "_NL_WABALTMON_8", value: 131226, isUnsigned: true)
!679 = !DIEnumerator(name: "_NL_WABALTMON_9", value: 131227, isUnsigned: true)
!680 = !DIEnumerator(name: "_NL_WABALTMON_10", value: 131228, isUnsigned: true)
!681 = !DIEnumerator(name: "_NL_WABALTMON_11", value: 131229, isUnsigned: true)
!682 = !DIEnumerator(name: "_NL_WABALTMON_12", value: 131230, isUnsigned: true)
!683 = !DIEnumerator(name: "_NL_NUM_LC_TIME", value: 131231, isUnsigned: true)
!684 = !DIEnumerator(name: "_NL_COLLATE_NRULES", value: 196608, isUnsigned: true)
!685 = !DIEnumerator(name: "_NL_COLLATE_RULESETS", value: 196609, isUnsigned: true)
!686 = !DIEnumerator(name: "_NL_COLLATE_TABLEMB", value: 196610, isUnsigned: true)
!687 = !DIEnumerator(name: "_NL_COLLATE_WEIGHTMB", value: 196611, isUnsigned: true)
!688 = !DIEnumerator(name: "_NL_COLLATE_EXTRAMB", value: 196612, isUnsigned: true)
!689 = !DIEnumerator(name: "_NL_COLLATE_INDIRECTMB", value: 196613, isUnsigned: true)
!690 = !DIEnumerator(name: "_NL_COLLATE_GAP1", value: 196614, isUnsigned: true)
!691 = !DIEnumerator(name: "_NL_COLLATE_GAP2", value: 196615, isUnsigned: true)
!692 = !DIEnumerator(name: "_NL_COLLATE_GAP3", value: 196616, isUnsigned: true)
!693 = !DIEnumerator(name: "_NL_COLLATE_TABLEWC", value: 196617, isUnsigned: true)
!694 = !DIEnumerator(name: "_NL_COLLATE_WEIGHTWC", value: 196618, isUnsigned: true)
!695 = !DIEnumerator(name: "_NL_COLLATE_EXTRAWC", value: 196619, isUnsigned: true)
!696 = !DIEnumerator(name: "_NL_COLLATE_INDIRECTWC", value: 196620, isUnsigned: true)
!697 = !DIEnumerator(name: "_NL_COLLATE_SYMB_HASH_SIZEMB", value: 196621, isUnsigned: true)
!698 = !DIEnumerator(name: "_NL_COLLATE_SYMB_TABLEMB", value: 196622, isUnsigned: true)
!699 = !DIEnumerator(name: "_NL_COLLATE_SYMB_EXTRAMB", value: 196623, isUnsigned: true)
!700 = !DIEnumerator(name: "_NL_COLLATE_COLLSEQMB", value: 196624, isUnsigned: true)
!701 = !DIEnumerator(name: "_NL_COLLATE_COLLSEQWC", value: 196625, isUnsigned: true)
!702 = !DIEnumerator(name: "_NL_COLLATE_CODESET", value: 196626, isUnsigned: true)
!703 = !DIEnumerator(name: "_NL_NUM_LC_COLLATE", value: 196627, isUnsigned: true)
!704 = !DIEnumerator(name: "_NL_CTYPE_CLASS", value: 0, isUnsigned: true)
!705 = !DIEnumerator(name: "_NL_CTYPE_TOUPPER", value: 1, isUnsigned: true)
!706 = !DIEnumerator(name: "_NL_CTYPE_GAP1", value: 2, isUnsigned: true)
!707 = !DIEnumerator(name: "_NL_CTYPE_TOLOWER", value: 3, isUnsigned: true)
!708 = !DIEnumerator(name: "_NL_CTYPE_GAP2", value: 4, isUnsigned: true)
!709 = !DIEnumerator(name: "_NL_CTYPE_CLASS32", value: 5, isUnsigned: true)
!710 = !DIEnumerator(name: "_NL_CTYPE_GAP3", value: 6, isUnsigned: true)
!711 = !DIEnumerator(name: "_NL_CTYPE_GAP4", value: 7, isUnsigned: true)
!712 = !DIEnumerator(name: "_NL_CTYPE_GAP5", value: 8, isUnsigned: true)
!713 = !DIEnumerator(name: "_NL_CTYPE_GAP6", value: 9, isUnsigned: true)
!714 = !DIEnumerator(name: "_NL_CTYPE_CLASS_NAMES", value: 10, isUnsigned: true)
!715 = !DIEnumerator(name: "_NL_CTYPE_MAP_NAMES", value: 11, isUnsigned: true)
!716 = !DIEnumerator(name: "_NL_CTYPE_WIDTH", value: 12, isUnsigned: true)
!717 = !DIEnumerator(name: "_NL_CTYPE_MB_CUR_MAX", value: 13, isUnsigned: true)
!718 = !DIEnumerator(name: "_NL_CTYPE_CODESET_NAME", value: 14, isUnsigned: true)
!719 = !DIEnumerator(name: "CODESET", value: 14, isUnsigned: true)
!720 = !DIEnumerator(name: "_NL_CTYPE_TOUPPER32", value: 15, isUnsigned: true)
!721 = !DIEnumerator(name: "_NL_CTYPE_TOLOWER32", value: 16, isUnsigned: true)
!722 = !DIEnumerator(name: "_NL_CTYPE_CLASS_OFFSET", value: 17, isUnsigned: true)
!723 = !DIEnumerator(name: "_NL_CTYPE_MAP_OFFSET", value: 18, isUnsigned: true)
!724 = !DIEnumerator(name: "_NL_CTYPE_INDIGITS_MB_LEN", value: 19, isUnsigned: true)
!725 = !DIEnumerator(name: "_NL_CTYPE_INDIGITS0_MB", value: 20, isUnsigned: true)
!726 = !DIEnumerator(name: "_NL_CTYPE_INDIGITS1_MB", value: 21, isUnsigned: true)
!727 = !DIEnumerator(name: "_NL_CTYPE_INDIGITS2_MB", value: 22, isUnsigned: true)
!728 = !DIEnumerator(name: "_NL_CTYPE_INDIGITS3_MB", value: 23, isUnsigned: true)
!729 = !DIEnumerator(name: "_NL_CTYPE_INDIGITS4_MB", value: 24, isUnsigned: true)
!730 = !DIEnumerator(name: "_NL_CTYPE_INDIGITS5_MB", value: 25, isUnsigned: true)
!731 = !DIEnumerator(name: "_NL_CTYPE_INDIGITS6_MB", value: 26, isUnsigned: true)
!732 = !DIEnumerator(name: "_NL_CTYPE_INDIGITS7_MB", value: 27, isUnsigned: true)
!733 = !DIEnumerator(name: "_NL_CTYPE_INDIGITS8_MB", value: 28, isUnsigned: true)
!734 = !DIEnumerator(name: "_NL_CTYPE_INDIGITS9_MB", value: 29, isUnsigned: true)
!735 = !DIEnumerator(name: "_NL_CTYPE_INDIGITS_WC_LEN", value: 30, isUnsigned: true)
!736 = !DIEnumerator(name: "_NL_CTYPE_INDIGITS0_WC", value: 31, isUnsigned: true)
!737 = !DIEnumerator(name: "_NL_CTYPE_INDIGITS1_WC", value: 32, isUnsigned: true)
!738 = !DIEnumerator(name: "_NL_CTYPE_INDIGITS2_WC", value: 33, isUnsigned: true)
!739 = !DIEnumerator(name: "_NL_CTYPE_INDIGITS3_WC", value: 34, isUnsigned: true)
!740 = !DIEnumerator(name: "_NL_CTYPE_INDIGITS4_WC", value: 35, isUnsigned: true)
!741 = !DIEnumerator(name: "_NL_CTYPE_INDIGITS5_WC", value: 36, isUnsigned: true)
!742 = !DIEnumerator(name: "_NL_CTYPE_INDIGITS6_WC", value: 37, isUnsigned: true)
!743 = !DIEnumerator(name: "_NL_CTYPE_INDIGITS7_WC", value: 38, isUnsigned: true)
!744 = !DIEnumerator(name: "_NL_CTYPE_INDIGITS8_WC", value: 39, isUnsigned: true)
!745 = !DIEnumerator(name: "_NL_CTYPE_INDIGITS9_WC", value: 40, isUnsigned: true)
!746 = !DIEnumerator(name: "_NL_CTYPE_OUTDIGIT0_MB", value: 41, isUnsigned: true)
!747 = !DIEnumerator(name: "_NL_CTYPE_OUTDIGIT1_MB", value: 42, isUnsigned: true)
!748 = !DIEnumerator(name: "_NL_CTYPE_OUTDIGIT2_MB", value: 43, isUnsigned: true)
!749 = !DIEnumerator(name: "_NL_CTYPE_OUTDIGIT3_MB", value: 44, isUnsigned: true)
!750 = !DIEnumerator(name: "_NL_CTYPE_OUTDIGIT4_MB", value: 45, isUnsigned: true)
!751 = !DIEnumerator(name: "_NL_CTYPE_OUTDIGIT5_MB", value: 46, isUnsigned: true)
!752 = !DIEnumerator(name: "_NL_CTYPE_OUTDIGIT6_MB", value: 47, isUnsigned: true)
!753 = !DIEnumerator(name: "_NL_CTYPE_OUTDIGIT7_MB", value: 48, isUnsigned: true)
!754 = !DIEnumerator(name: "_NL_CTYPE_OUTDIGIT8_MB", value: 49, isUnsigned: true)
!755 = !DIEnumerator(name: "_NL_CTYPE_OUTDIGIT9_MB", value: 50, isUnsigned: true)
!756 = !DIEnumerator(name: "_NL_CTYPE_OUTDIGIT0_WC", value: 51, isUnsigned: true)
!757 = !DIEnumerator(name: "_NL_CTYPE_OUTDIGIT1_WC", value: 52, isUnsigned: true)
!758 = !DIEnumerator(name: "_NL_CTYPE_OUTDIGIT2_WC", value: 53, isUnsigned: true)
!759 = !DIEnumerator(name: "_NL_CTYPE_OUTDIGIT3_WC", value: 54, isUnsigned: true)
!760 = !DIEnumerator(name: "_NL_CTYPE_OUTDIGIT4_WC", value: 55, isUnsigned: true)
!761 = !DIEnumerator(name: "_NL_CTYPE_OUTDIGIT5_WC", value: 56, isUnsigned: true)
!762 = !DIEnumerator(name: "_NL_CTYPE_OUTDIGIT6_WC", value: 57, isUnsigned: true)
!763 = !DIEnumerator(name: "_NL_CTYPE_OUTDIGIT7_WC", value: 58, isUnsigned: true)
!764 = !DIEnumerator(name: "_NL_CTYPE_OUTDIGIT8_WC", value: 59, isUnsigned: true)
!765 = !DIEnumerator(name: "_NL_CTYPE_OUTDIGIT9_WC", value: 60, isUnsigned: true)
!766 = !DIEnumerator(name: "_NL_CTYPE_TRANSLIT_TAB_SIZE", value: 61, isUnsigned: true)
!767 = !DIEnumerator(name: "_NL_CTYPE_TRANSLIT_FROM_IDX", value: 62, isUnsigned: true)
!768 = !DIEnumerator(name: "_NL_CTYPE_TRANSLIT_FROM_TBL", value: 63, isUnsigned: true)
!769 = !DIEnumerator(name: "_NL_CTYPE_TRANSLIT_TO_IDX", value: 64, isUnsigned: true)
!770 = !DIEnumerator(name: "_NL_CTYPE_TRANSLIT_TO_TBL", value: 65, isUnsigned: true)
!771 = !DIEnumerator(name: "_NL_CTYPE_TRANSLIT_DEFAULT_MISSING_LEN", value: 66, isUnsigned: true)
!772 = !DIEnumerator(name: "_NL_CTYPE_TRANSLIT_DEFAULT_MISSING", value: 67, isUnsigned: true)
!773 = !DIEnumerator(name: "_NL_CTYPE_TRANSLIT_IGNORE_LEN", value: 68, isUnsigned: true)
!774 = !DIEnumerator(name: "_NL_CTYPE_TRANSLIT_IGNORE", value: 69, isUnsigned: true)
!775 = !DIEnumerator(name: "_NL_CTYPE_MAP_TO_NONASCII", value: 70, isUnsigned: true)
!776 = !DIEnumerator(name: "_NL_CTYPE_NONASCII_CASE", value: 71, isUnsigned: true)
!777 = !DIEnumerator(name: "_NL_CTYPE_EXTRA_MAP_1", value: 72, isUnsigned: true)
!778 = !DIEnumerator(name: "_NL_CTYPE_EXTRA_MAP_2", value: 73, isUnsigned: true)
!779 = !DIEnumerator(name: "_NL_CTYPE_EXTRA_MAP_3", value: 74, isUnsigned: true)
!780 = !DIEnumerator(name: "_NL_CTYPE_EXTRA_MAP_4", value: 75, isUnsigned: true)
!781 = !DIEnumerator(name: "_NL_CTYPE_EXTRA_MAP_5", value: 76, isUnsigned: true)
!782 = !DIEnumerator(name: "_NL_CTYPE_EXTRA_MAP_6", value: 77, isUnsigned: true)
!783 = !DIEnumerator(name: "_NL_CTYPE_EXTRA_MAP_7", value: 78, isUnsigned: true)
!784 = !DIEnumerator(name: "_NL_CTYPE_EXTRA_MAP_8", value: 79, isUnsigned: true)
!785 = !DIEnumerator(name: "_NL_CTYPE_EXTRA_MAP_9", value: 80, isUnsigned: true)
!786 = !DIEnumerator(name: "_NL_CTYPE_EXTRA_MAP_10", value: 81, isUnsigned: true)
!787 = !DIEnumerator(name: "_NL_CTYPE_EXTRA_MAP_11", value: 82, isUnsigned: true)
!788 = !DIEnumerator(name: "_NL_CTYPE_EXTRA_MAP_12", value: 83, isUnsigned: true)
!789 = !DIEnumerator(name: "_NL_CTYPE_EXTRA_MAP_13", value: 84, isUnsigned: true)
!790 = !DIEnumerator(name: "_NL_CTYPE_EXTRA_MAP_14", value: 85, isUnsigned: true)
!791 = !DIEnumerator(name: "_NL_NUM_LC_CTYPE", value: 86, isUnsigned: true)
!792 = !DIEnumerator(name: "__INT_CURR_SYMBOL", value: 262144, isUnsigned: true)
!793 = !DIEnumerator(name: "__CURRENCY_SYMBOL", value: 262145, isUnsigned: true)
!794 = !DIEnumerator(name: "__MON_DECIMAL_POINT", value: 262146, isUnsigned: true)
!795 = !DIEnumerator(name: "__MON_THOUSANDS_SEP", value: 262147, isUnsigned: true)
!796 = !DIEnumerator(name: "__MON_GROUPING", value: 262148, isUnsigned: true)
!797 = !DIEnumerator(name: "__POSITIVE_SIGN", value: 262149, isUnsigned: true)
!798 = !DIEnumerator(name: "__NEGATIVE_SIGN", value: 262150, isUnsigned: true)
!799 = !DIEnumerator(name: "__INT_FRAC_DIGITS", value: 262151, isUnsigned: true)
!800 = !DIEnumerator(name: "__FRAC_DIGITS", value: 262152, isUnsigned: true)
!801 = !DIEnumerator(name: "__P_CS_PRECEDES", value: 262153, isUnsigned: true)
!802 = !DIEnumerator(name: "__P_SEP_BY_SPACE", value: 262154, isUnsigned: true)
!803 = !DIEnumerator(name: "__N_CS_PRECEDES", value: 262155, isUnsigned: true)
!804 = !DIEnumerator(name: "__N_SEP_BY_SPACE", value: 262156, isUnsigned: true)
!805 = !DIEnumerator(name: "__P_SIGN_POSN", value: 262157, isUnsigned: true)
!806 = !DIEnumerator(name: "__N_SIGN_POSN", value: 262158, isUnsigned: true)
!807 = !DIEnumerator(name: "_NL_MONETARY_CRNCYSTR", value: 262159, isUnsigned: true)
!808 = !DIEnumerator(name: "__INT_P_CS_PRECEDES", value: 262160, isUnsigned: true)
!809 = !DIEnumerator(name: "__INT_P_SEP_BY_SPACE", value: 262161, isUnsigned: true)
!810 = !DIEnumerator(name: "__INT_N_CS_PRECEDES", value: 262162, isUnsigned: true)
!811 = !DIEnumerator(name: "__INT_N_SEP_BY_SPACE", value: 262163, isUnsigned: true)
!812 = !DIEnumerator(name: "__INT_P_SIGN_POSN", value: 262164, isUnsigned: true)
!813 = !DIEnumerator(name: "__INT_N_SIGN_POSN", value: 262165, isUnsigned: true)
!814 = !DIEnumerator(name: "_NL_MONETARY_DUO_INT_CURR_SYMBOL", value: 262166, isUnsigned: true)
!815 = !DIEnumerator(name: "_NL_MONETARY_DUO_CURRENCY_SYMBOL", value: 262167, isUnsigned: true)
!816 = !DIEnumerator(name: "_NL_MONETARY_DUO_INT_FRAC_DIGITS", value: 262168, isUnsigned: true)
!817 = !DIEnumerator(name: "_NL_MONETARY_DUO_FRAC_DIGITS", value: 262169, isUnsigned: true)
!818 = !DIEnumerator(name: "_NL_MONETARY_DUO_P_CS_PRECEDES", value: 262170, isUnsigned: true)
!819 = !DIEnumerator(name: "_NL_MONETARY_DUO_P_SEP_BY_SPACE", value: 262171, isUnsigned: true)
!820 = !DIEnumerator(name: "_NL_MONETARY_DUO_N_CS_PRECEDES", value: 262172, isUnsigned: true)
!821 = !DIEnumerator(name: "_NL_MONETARY_DUO_N_SEP_BY_SPACE", value: 262173, isUnsigned: true)
!822 = !DIEnumerator(name: "_NL_MONETARY_DUO_INT_P_CS_PRECEDES", value: 262174, isUnsigned: true)
!823 = !DIEnumerator(name: "_NL_MONETARY_DUO_INT_P_SEP_BY_SPACE", value: 262175, isUnsigned: true)
!824 = !DIEnumerator(name: "_NL_MONETARY_DUO_INT_N_CS_PRECEDES", value: 262176, isUnsigned: true)
!825 = !DIEnumerator(name: "_NL_MONETARY_DUO_INT_N_SEP_BY_SPACE", value: 262177, isUnsigned: true)
!826 = !DIEnumerator(name: "_NL_MONETARY_DUO_P_SIGN_POSN", value: 262178, isUnsigned: true)
!827 = !DIEnumerator(name: "_NL_MONETARY_DUO_N_SIGN_POSN", value: 262179, isUnsigned: true)
!828 = !DIEnumerator(name: "_NL_MONETARY_DUO_INT_P_SIGN_POSN", value: 262180, isUnsigned: true)
!829 = !DIEnumerator(name: "_NL_MONETARY_DUO_INT_N_SIGN_POSN", value: 262181, isUnsigned: true)
!830 = !DIEnumerator(name: "_NL_MONETARY_UNO_VALID_FROM", value: 262182, isUnsigned: true)
!831 = !DIEnumerator(name: "_NL_MONETARY_UNO_VALID_TO", value: 262183, isUnsigned: true)
!832 = !DIEnumerator(name: "_NL_MONETARY_DUO_VALID_FROM", value: 262184, isUnsigned: true)
!833 = !DIEnumerator(name: "_NL_MONETARY_DUO_VALID_TO", value: 262185, isUnsigned: true)
!834 = !DIEnumerator(name: "_NL_MONETARY_CONVERSION_RATE", value: 262186, isUnsigned: true)
!835 = !DIEnumerator(name: "_NL_MONETARY_DECIMAL_POINT_WC", value: 262187, isUnsigned: true)
!836 = !DIEnumerator(name: "_NL_MONETARY_THOUSANDS_SEP_WC", value: 262188, isUnsigned: true)
!837 = !DIEnumerator(name: "_NL_MONETARY_CODESET", value: 262189, isUnsigned: true)
!838 = !DIEnumerator(name: "_NL_NUM_LC_MONETARY", value: 262190, isUnsigned: true)
!839 = !DIEnumerator(name: "__DECIMAL_POINT", value: 65536, isUnsigned: true)
!840 = !DIEnumerator(name: "RADIXCHAR", value: 65536, isUnsigned: true)
!841 = !DIEnumerator(name: "__THOUSANDS_SEP", value: 65537, isUnsigned: true)
!842 = !DIEnumerator(name: "THOUSEP", value: 65537, isUnsigned: true)
!843 = !DIEnumerator(name: "__GROUPING", value: 65538, isUnsigned: true)
!844 = !DIEnumerator(name: "_NL_NUMERIC_DECIMAL_POINT_WC", value: 65539, isUnsigned: true)
!845 = !DIEnumerator(name: "_NL_NUMERIC_THOUSANDS_SEP_WC", value: 65540, isUnsigned: true)
!846 = !DIEnumerator(name: "_NL_NUMERIC_CODESET", value: 65541, isUnsigned: true)
!847 = !DIEnumerator(name: "_NL_NUM_LC_NUMERIC", value: 65542, isUnsigned: true)
!848 = !DIEnumerator(name: "__YESEXPR", value: 327680, isUnsigned: true)
!849 = !DIEnumerator(name: "__NOEXPR", value: 327681, isUnsigned: true)
!850 = !DIEnumerator(name: "__YESSTR", value: 327682, isUnsigned: true)
!851 = !DIEnumerator(name: "__NOSTR", value: 327683, isUnsigned: true)
!852 = !DIEnumerator(name: "_NL_MESSAGES_CODESET", value: 327684, isUnsigned: true)
!853 = !DIEnumerator(name: "_NL_NUM_LC_MESSAGES", value: 327685, isUnsigned: true)
!854 = !DIEnumerator(name: "_NL_PAPER_HEIGHT", value: 458752, isUnsigned: true)
!855 = !DIEnumerator(name: "_NL_PAPER_WIDTH", value: 458753, isUnsigned: true)
!856 = !DIEnumerator(name: "_NL_PAPER_CODESET", value: 458754, isUnsigned: true)
!857 = !DIEnumerator(name: "_NL_NUM_LC_PAPER", value: 458755, isUnsigned: true)
!858 = !DIEnumerator(name: "_NL_NAME_NAME_FMT", value: 524288, isUnsigned: true)
!859 = !DIEnumerator(name: "_NL_NAME_NAME_GEN", value: 524289, isUnsigned: true)
!860 = !DIEnumerator(name: "_NL_NAME_NAME_MR", value: 524290, isUnsigned: true)
!861 = !DIEnumerator(name: "_NL_NAME_NAME_MRS", value: 524291, isUnsigned: true)
!862 = !DIEnumerator(name: "_NL_NAME_NAME_MISS", value: 524292, isUnsigned: true)
!863 = !DIEnumerator(name: "_NL_NAME_NAME_MS", value: 524293, isUnsigned: true)
!864 = !DIEnumerator(name: "_NL_NAME_CODESET", value: 524294, isUnsigned: true)
!865 = !DIEnumerator(name: "_NL_NUM_LC_NAME", value: 524295, isUnsigned: true)
!866 = !DIEnumerator(name: "_NL_ADDRESS_POSTAL_FMT", value: 589824, isUnsigned: true)
!867 = !DIEnumerator(name: "_NL_ADDRESS_COUNTRY_NAME", value: 589825, isUnsigned: true)
!868 = !DIEnumerator(name: "_NL_ADDRESS_COUNTRY_POST", value: 589826, isUnsigned: true)
!869 = !DIEnumerator(name: "_NL_ADDRESS_COUNTRY_AB2", value: 589827, isUnsigned: true)
!870 = !DIEnumerator(name: "_NL_ADDRESS_COUNTRY_AB3", value: 589828, isUnsigned: true)
!871 = !DIEnumerator(name: "_NL_ADDRESS_COUNTRY_CAR", value: 589829, isUnsigned: true)
!872 = !DIEnumerator(name: "_NL_ADDRESS_COUNTRY_NUM", value: 589830, isUnsigned: true)
!873 = !DIEnumerator(name: "_NL_ADDRESS_COUNTRY_ISBN", value: 589831, isUnsigned: true)
!874 = !DIEnumerator(name: "_NL_ADDRESS_LANG_NAME", value: 589832, isUnsigned: true)
!875 = !DIEnumerator(name: "_NL_ADDRESS_LANG_AB", value: 589833, isUnsigned: true)
!876 = !DIEnumerator(name: "_NL_ADDRESS_LANG_TERM", value: 589834, isUnsigned: true)
!877 = !DIEnumerator(name: "_NL_ADDRESS_LANG_LIB", value: 589835, isUnsigned: true)
!878 = !DIEnumerator(name: "_NL_ADDRESS_CODESET", value: 589836, isUnsigned: true)
!879 = !DIEnumerator(name: "_NL_NUM_LC_ADDRESS", value: 589837, isUnsigned: true)
!880 = !DIEnumerator(name: "_NL_TELEPHONE_TEL_INT_FMT", value: 655360, isUnsigned: true)
!881 = !DIEnumerator(name: "_NL_TELEPHONE_TEL_DOM_FMT", value: 655361, isUnsigned: true)
!882 = !DIEnumerator(name: "_NL_TELEPHONE_INT_SELECT", value: 655362, isUnsigned: true)
!883 = !DIEnumerator(name: "_NL_TELEPHONE_INT_PREFIX", value: 655363, isUnsigned: true)
!884 = !DIEnumerator(name: "_NL_TELEPHONE_CODESET", value: 655364, isUnsigned: true)
!885 = !DIEnumerator(name: "_NL_NUM_LC_TELEPHONE", value: 655365, isUnsigned: true)
!886 = !DIEnumerator(name: "_NL_MEASUREMENT_MEASUREMENT", value: 720896, isUnsigned: true)
!887 = !DIEnumerator(name: "_NL_MEASUREMENT_CODESET", value: 720897, isUnsigned: true)
!888 = !DIEnumerator(name: "_NL_NUM_LC_MEASUREMENT", value: 720898, isUnsigned: true)
!889 = !DIEnumerator(name: "_NL_IDENTIFICATION_TITLE", value: 786432, isUnsigned: true)
!890 = !DIEnumerator(name: "_NL_IDENTIFICATION_SOURCE", value: 786433, isUnsigned: true)
!891 = !DIEnumerator(name: "_NL_IDENTIFICATION_ADDRESS", value: 786434, isUnsigned: true)
!892 = !DIEnumerator(name: "_NL_IDENTIFICATION_CONTACT", value: 786435, isUnsigned: true)
!893 = !DIEnumerator(name: "_NL_IDENTIFICATION_EMAIL", value: 786436, isUnsigned: true)
!894 = !DIEnumerator(name: "_NL_IDENTIFICATION_TEL", value: 786437, isUnsigned: true)
!895 = !DIEnumerator(name: "_NL_IDENTIFICATION_FAX", value: 786438, isUnsigned: true)
!896 = !DIEnumerator(name: "_NL_IDENTIFICATION_LANGUAGE", value: 786439, isUnsigned: true)
!897 = !DIEnumerator(name: "_NL_IDENTIFICATION_TERRITORY", value: 786440, isUnsigned: true)
!898 = !DIEnumerator(name: "_NL_IDENTIFICATION_AUDIENCE", value: 786441, isUnsigned: true)
!899 = !DIEnumerator(name: "_NL_IDENTIFICATION_APPLICATION", value: 786442, isUnsigned: true)
!900 = !DIEnumerator(name: "_NL_IDENTIFICATION_ABBREVIATION", value: 786443, isUnsigned: true)
!901 = !DIEnumerator(name: "_NL_IDENTIFICATION_REVISION", value: 786444, isUnsigned: true)
!902 = !DIEnumerator(name: "_NL_IDENTIFICATION_DATE", value: 786445, isUnsigned: true)
!903 = !DIEnumerator(name: "_NL_IDENTIFICATION_CATEGORY", value: 786446, isUnsigned: true)
!904 = !DIEnumerator(name: "_NL_IDENTIFICATION_CODESET", value: 786447, isUnsigned: true)
!905 = !DIEnumerator(name: "_NL_NUM_LC_IDENTIFICATION", value: 786448, isUnsigned: true)
!906 = !DIEnumerator(name: "_NL_NUM", value: 786449, isUnsigned: true)
!907 = distinct !DICompileUnit(language: DW_LANG_C99, file: !908, producer: "clang version 12.0.1 (https://github.com/llvm/llvm-project.git fed41342a82f5a3a9201819a82bf7a48313e296b)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !69, retainedTypes: !232, splitDebugInlining: false, nameTableKind: None)
!908 = !DIFile(filename: "../lib/setlocale_null.c", directory: "/nobackup/klee_LLVM_12/Dataset-1/coreutils-8.32/obj-llvm")
!909 = distinct !DICompileUnit(language: DW_LANG_C99, file: !910, producer: "clang version 12.0.1 (https://github.com/llvm/llvm-project.git fed41342a82f5a3a9201819a82bf7a48313e296b)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !69, splitDebugInlining: false, nameTableKind: None)
!910 = !DIFile(filename: "../lib/c-ctype.c", directory: "/nobackup/klee_LLVM_12/Dataset-1/coreutils-8.32/obj-llvm")
!911 = !{!"clang version 12.0.1 (https://github.com/llvm/llvm-project.git fed41342a82f5a3a9201819a82bf7a48313e296b)"}
!912 = !{i32 7, !"Dwarf Version", i32 4}
!913 = !{i32 2, !"Debug Info Version", i32 3}
!914 = !{i32 1, !"wchar_size", i32 4}
!915 = distinct !DISubprogram(name: "usage", scope: !3, file: !3, line: 112, type: !916, scopeLine: 113, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !69)
!916 = !DISubroutineType(types: !917)
!917 = !{null, !60}
!918 = !DILocalVariable(name: "status", arg: 1, scope: !915, file: !3, line: 112, type: !60)
!919 = !DILocation(line: 112, column: 12, scope: !915)
!920 = !DILocation(line: 114, column: 7, scope: !921)
!921 = distinct !DILexicalBlock(scope: !915, file: !3, line: 114, column: 7)
!922 = !DILocation(line: 114, column: 14, scope: !921)
!923 = !DILocation(line: 114, column: 7, scope: !915)
!924 = !DILocation(line: 115, column: 5, scope: !921)
!925 = !DILocation(line: 115, column: 5, scope: !926)
!926 = distinct !DILexicalBlock(scope: !921, file: !3, line: 115, column: 5)
!927 = !DILocation(line: 122, column: 15, scope: !928)
!928 = distinct !DILexicalBlock(scope: !921, file: !3, line: 117, column: 5)
!929 = !DILocation(line: 122, column: 29, scope: !928)
!930 = !DILocation(line: 118, column: 7, scope: !928)
!931 = !DILocation(line: 123, column: 7, scope: !928)
!932 = !DILocation(line: 129, column: 7, scope: !928)
!933 = !DILocation(line: 131, column: 7, scope: !928)
!934 = !DILocation(line: 139, column: 7, scope: !928)
!935 = !DILocation(line: 146, column: 7, scope: !928)
!936 = !DILocation(line: 147, column: 7, scope: !928)
!937 = !DILocation(line: 148, column: 7, scope: !928)
!938 = !DILocation(line: 150, column: 9, scope: !915)
!939 = !DILocation(line: 150, column: 3, scope: !915)
!940 = distinct !DISubprogram(name: "emit_stdin_note", scope: !941, file: !941, line: 581, type: !227, scopeLine: 582, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !69)
!941 = !DIFile(filename: "../src/system.h", directory: "/nobackup/klee_LLVM_12/Dataset-1/coreutils-8.32/obj-llvm")
!942 = !DILocation(line: 583, column: 3, scope: !940)
!943 = !DILocation(line: 586, column: 1, scope: !940)
!944 = distinct !DISubprogram(name: "emit_ancillary_info", scope: !941, file: !941, line: 634, type: !945, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !69)
!945 = !DISubroutineType(types: !946)
!946 = !{null, !52}
!947 = !DILocalVariable(name: "program", arg: 1, scope: !944, file: !941, line: 634, type: !52)
!948 = !DILocation(line: 634, column: 34, scope: !944)
!949 = !DILocalVariable(name: "infomap", scope: !944, file: !941, line: 636, type: !950)
!950 = !DICompositeType(tag: DW_TAG_array_type, baseType: !951, size: 896, elements: !956)
!951 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !952)
!952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "infomap", scope: !944, file: !941, line: 636, size: 128, elements: !953)
!953 = !{!954, !955}
!954 = !DIDerivedType(tag: DW_TAG_member, name: "program", scope: !952, file: !941, line: 636, baseType: !52, size: 64)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !952, file: !941, line: 636, baseType: !52, size: 64, offset: 64)
!956 = !{!957}
!957 = !DISubrange(count: 7)
!958 = !DILocation(line: 636, column: 67, scope: !944)
!959 = !DILocalVariable(name: "node", scope: !944, file: !941, line: 646, type: !52)
!960 = !DILocation(line: 646, column: 15, scope: !944)
!961 = !DILocation(line: 646, column: 22, scope: !944)
!962 = !DILocalVariable(name: "map_prog", scope: !944, file: !941, line: 647, type: !963)
!963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !951, size: 64)
!964 = !DILocation(line: 647, column: 25, scope: !944)
!965 = !DILocation(line: 647, column: 36, scope: !944)
!966 = !DILocation(line: 649, column: 3, scope: !944)
!967 = !DILocation(line: 649, column: 10, scope: !944)
!968 = !DILocation(line: 649, column: 20, scope: !944)
!969 = !DILocation(line: 649, column: 28, scope: !944)
!970 = !DILocation(line: 649, column: 33, scope: !944)
!971 = !DILocation(line: 649, column: 31, scope: !944)
!972 = !DILocation(line: 0, scope: !944)
!973 = !DILocation(line: 650, column: 13, scope: !944)
!974 = distinct !{!974, !966, !973, !975}
!975 = !{!"llvm.loop.mustprogress"}
!976 = !DILocation(line: 652, column: 7, scope: !977)
!977 = distinct !DILexicalBlock(scope: !944, file: !941, line: 652, column: 7)
!978 = !DILocation(line: 652, column: 17, scope: !977)
!979 = !DILocation(line: 652, column: 7, scope: !944)
!980 = !DILocation(line: 653, column: 12, scope: !977)
!981 = !DILocation(line: 653, column: 22, scope: !977)
!982 = !DILocation(line: 653, column: 10, scope: !977)
!983 = !DILocation(line: 653, column: 5, scope: !977)
!984 = !DILocation(line: 655, column: 3, scope: !944)
!985 = !DILocalVariable(name: "lc_messages", scope: !944, file: !941, line: 659, type: !52)
!986 = !DILocation(line: 659, column: 15, scope: !944)
!987 = !DILocation(line: 659, column: 29, scope: !944)
!988 = !DILocation(line: 660, column: 7, scope: !989)
!989 = distinct !DILexicalBlock(scope: !944, file: !941, line: 660, column: 7)
!990 = !DILocation(line: 660, column: 19, scope: !989)
!991 = !DILocation(line: 660, column: 22, scope: !989)
!992 = !DILocation(line: 660, column: 7, scope: !944)
!993 = !DILocation(line: 666, column: 7, scope: !994)
!994 = distinct !DILexicalBlock(scope: !989, file: !941, line: 661, column: 5)
!995 = !DILocation(line: 668, column: 5, scope: !994)
!996 = !DILocation(line: 670, column: 24, scope: !944)
!997 = !DILocation(line: 669, column: 3, scope: !944)
!998 = !DILocation(line: 672, column: 11, scope: !944)
!999 = !DILocation(line: 672, column: 17, scope: !944)
!1000 = !DILocation(line: 672, column: 25, scope: !944)
!1001 = !DILocation(line: 672, column: 22, scope: !944)
!1002 = !DILocation(line: 671, column: 3, scope: !944)
!1003 = !DILocation(line: 673, column: 1, scope: !944)
!1004 = distinct !DISubprogram(name: "klee_dump_memory", scope: !3, file: !3, line: 679, type: !227, scopeLine: 679, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !69)
!1005 = !DILocation(line: 679, column: 26, scope: !1004)
!1006 = !DILocalVariable(name: "argc", arg: 1, scope: !65, file: !3, line: 682, type: !60)
!1007 = !DILocation(line: 682, column: 11, scope: !65)
!1008 = !DILocalVariable(name: "argv", arg: 2, scope: !65, file: !3, line: 682, type: !68)
!1009 = !DILocation(line: 682, column: 24, scope: !65)
!1010 = !DILocalVariable(name: "ok", scope: !65, file: !3, line: 684, type: !89)
!1011 = !DILocation(line: 684, column: 8, scope: !65)
!1012 = !DILocalVariable(name: "optc", scope: !65, file: !3, line: 685, type: !60)
!1013 = !DILocation(line: 685, column: 7, scope: !65)
!1014 = !DILocalVariable(name: "nfiles", scope: !65, file: !3, line: 686, type: !57)
!1015 = !DILocation(line: 686, column: 10, scope: !65)
!1016 = !DILocalVariable(name: "files", scope: !65, file: !3, line: 687, type: !68)
!1017 = !DILocation(line: 687, column: 10, scope: !65)
!1018 = !DILocalVariable(name: "files_from", scope: !65, file: !3, line: 688, type: !56)
!1019 = !DILocation(line: 688, column: 9, scope: !65)
!1020 = !DILocalVariable(name: "fstatus", scope: !65, file: !3, line: 689, type: !1021)
!1021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1022, size: 64)
!1022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fstatus", file: !3, line: 81, size: 1216, elements: !1023)
!1023 = !{!1024, !1025}
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "failed", scope: !1022, file: !3, line: 85, baseType: !60, size: 32)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "st", scope: !1022, file: !3, line: 88, baseType: !1026, size: 1152, offset: 64)
!1026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !1027, line: 46, size: 1152, elements: !1028)
!1027 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!1028 = !{!1029, !1031, !1033, !1035, !1037, !1039, !1041, !1042, !1043, !1046, !1048, !1050, !1058, !1059, !1060}
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1026, file: !1027, line: 48, baseType: !1030, size: 64)
!1030 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !78, line: 145, baseType: !59)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1026, file: !1027, line: 53, baseType: !1032, size: 64, offset: 64)
!1032 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !78, line: 148, baseType: !59)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1026, file: !1027, line: 61, baseType: !1034, size: 64, offset: 128)
!1034 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !78, line: 151, baseType: !59)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1026, file: !1027, line: 62, baseType: !1036, size: 32, offset: 192)
!1036 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !78, line: 150, baseType: !7)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1026, file: !1027, line: 64, baseType: !1038, size: 32, offset: 224)
!1038 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !78, line: 146, baseType: !7)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1026, file: !1027, line: 65, baseType: !1040, size: 32, offset: 256)
!1040 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !78, line: 147, baseType: !7)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1026, file: !1027, line: 67, baseType: !60, size: 32, offset: 288)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1026, file: !1027, line: 69, baseType: !1030, size: 64, offset: 320)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1026, file: !1027, line: 74, baseType: !1044, size: 64, offset: 384)
!1044 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !78, line: 152, baseType: !1045)
!1045 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1026, file: !1027, line: 78, baseType: !1047, size: 64, offset: 448)
!1047 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !78, line: 174, baseType: !1045)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1026, file: !1027, line: 80, baseType: !1049, size: 64, offset: 512)
!1049 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !78, line: 179, baseType: !1045)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1026, file: !1027, line: 91, baseType: !1051, size: 128, offset: 576)
!1051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !1052, line: 10, size: 128, elements: !1053)
!1052 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!1053 = !{!1054, !1056}
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1051, file: !1052, line: 12, baseType: !1055, size: 64)
!1055 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !78, line: 160, baseType: !1045)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1051, file: !1052, line: 16, baseType: !1057, size: 64, offset: 64)
!1057 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !78, line: 196, baseType: !1045)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1026, file: !1027, line: 92, baseType: !1051, size: 128, offset: 704)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1026, file: !1027, line: 93, baseType: !1051, size: 128, offset: 832)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1026, file: !1027, line: 106, baseType: !1061, size: 192, offset: 960)
!1061 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1057, size: 192, elements: !1062)
!1062 = !{!1063}
!1063 = !DISubrange(count: 3)
!1064 = !DILocation(line: 689, column: 19, scope: !65)
!1065 = !DILocalVariable(name: "tok", scope: !65, file: !3, line: 690, type: !1066)
!1066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Tokens", file: !1067, line: 28, size: 2304, elements: !1068)
!1067 = !DIFile(filename: "../lib/readtokens0.h", directory: "/nobackup/klee_LLVM_12/Dataset-1/coreutils-8.32/obj-llvm")
!1068 = !{!1069, !1070, !1071, !1072, !1122, !1123}
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "n_tok", scope: !1066, file: !1067, line: 30, baseType: !57, size: 64)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "tok", scope: !1066, file: !1067, line: 31, baseType: !68, size: 64, offset: 64)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "tok_len", scope: !1066, file: !1067, line: 32, baseType: !490, size: 64, offset: 128)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "o_data", scope: !1066, file: !1067, line: 33, baseType: !1073, size: 704, offset: 192)
!1073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !1074, line: 174, size: 704, elements: !1075)
!1074 = !DIFile(filename: "../lib/obstack.h", directory: "/nobackup/klee_LLVM_12/Dataset-1/coreutils-8.32/obj-llvm")
!1075 = !{!1076, !1077, !1087, !1088, !1089, !1090, !1095, !1096, !1107, !1118, !1119, !1120, !1121}
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !1073, file: !1074, line: 176, baseType: !57, size: 64)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !1073, file: !1074, line: 177, baseType: !1078, size: 64, offset: 64)
!1078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1079, size: 64)
!1079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !1074, line: 167, size: 128, elements: !1080)
!1080 = !{!1081, !1082, !1083}
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !1079, file: !1074, line: 169, baseType: !56, size: 64)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1079, file: !1074, line: 170, baseType: !1078, size: 64, offset: 64)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !1079, file: !1074, line: 171, baseType: !1084, offset: 128)
!1084 = !DICompositeType(tag: DW_TAG_array_type, baseType: !54, elements: !1085)
!1085 = !{!1086}
!1086 = !DISubrange(count: -1)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !1073, file: !1074, line: 178, baseType: !56, size: 64, offset: 128)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !1073, file: !1074, line: 179, baseType: !56, size: 64, offset: 192)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !1073, file: !1074, line: 180, baseType: !56, size: 64, offset: 256)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !1073, file: !1074, line: 185, baseType: !1091, size: 64, offset: 320)
!1091 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1073, file: !1074, line: 181, size: 64, elements: !1092)
!1092 = !{!1093, !1094}
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !1091, file: !1074, line: 183, baseType: !57, size: 64)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !1091, file: !1074, line: 184, baseType: !55, size: 64)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !1073, file: !1074, line: 186, baseType: !57, size: 64, offset: 384)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !1073, file: !1074, line: 193, baseType: !1097, size: 64, offset: 448)
!1097 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1073, file: !1074, line: 189, size: 64, elements: !1098)
!1098 = !{!1099, !1103}
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "plain", scope: !1097, file: !1074, line: 191, baseType: !1100, size: 64)
!1100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1101, size: 64)
!1101 = !DISubroutineType(types: !1102)
!1102 = !{!55, !57}
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "extra", scope: !1097, file: !1074, line: 192, baseType: !1104, size: 64)
!1104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1105, size: 64)
!1105 = !DISubroutineType(types: !1106)
!1106 = !{!55, !55, !57}
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !1073, file: !1074, line: 198, baseType: !1108, size: 64, offset: 512)
!1108 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1073, file: !1074, line: 194, size: 64, elements: !1109)
!1109 = !{!1110, !1114}
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "plain", scope: !1108, file: !1074, line: 196, baseType: !1111, size: 64)
!1111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1112, size: 64)
!1112 = !DISubroutineType(types: !1113)
!1113 = !{null, !55}
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "extra", scope: !1108, file: !1074, line: 197, baseType: !1115, size: 64)
!1115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1116, size: 64)
!1116 = !DISubroutineType(types: !1117)
!1117 = !{null, !55, !55}
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !1073, file: !1074, line: 200, baseType: !55, size: 64, offset: 576)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !1073, file: !1074, line: 201, baseType: !7, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !1073, file: !1074, line: 202, baseType: !7, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !1073, file: !1074, line: 206, baseType: !7, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "o_tok", scope: !1066, file: !1067, line: 34, baseType: !1073, size: 704, offset: 896)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "o_tok_len", scope: !1066, file: !1067, line: 35, baseType: !1073, size: 704, offset: 1600)
!1124 = !DILocation(line: 690, column: 17, scope: !65)
!1125 = !DILocation(line: 693, column: 21, scope: !65)
!1126 = !DILocation(line: 693, column: 3, scope: !65)
!1127 = !DILocation(line: 694, column: 3, scope: !65)
!1128 = !DILocation(line: 698, column: 3, scope: !65)
!1129 = !DILocation(line: 700, column: 15, scope: !65)
!1130 = !DILocation(line: 700, column: 13, scope: !65)
!1131 = !DILocation(line: 703, column: 12, scope: !65)
!1132 = !DILocation(line: 703, column: 3, scope: !65)
!1133 = !DILocation(line: 705, column: 22, scope: !65)
!1134 = !DILocation(line: 705, column: 49, scope: !65)
!1135 = !DILocation(line: 705, column: 19, scope: !65)
!1136 = !DILocation(line: 707, column: 57, scope: !65)
!1137 = !DILocation(line: 707, column: 43, scope: !65)
!1138 = !DILocation(line: 707, column: 29, scope: !65)
!1139 = !DILocation(line: 707, column: 15, scope: !65)
!1140 = !DILocation(line: 708, column: 20, scope: !65)
!1141 = !DILocation(line: 709, column: 75, scope: !65)
!1142 = !DILocation(line: 709, column: 57, scope: !65)
!1143 = !DILocation(line: 709, column: 43, scope: !65)
!1144 = !DILocation(line: 709, column: 29, scope: !65)
!1145 = !DILocation(line: 709, column: 15, scope: !65)
!1146 = !DILocation(line: 711, column: 3, scope: !65)
!1147 = !DILocation(line: 711, column: 31, scope: !65)
!1148 = !DILocation(line: 711, column: 37, scope: !65)
!1149 = !DILocation(line: 711, column: 18, scope: !65)
!1150 = !DILocation(line: 711, column: 16, scope: !65)
!1151 = !DILocation(line: 711, column: 69, scope: !65)
!1152 = !DILocation(line: 712, column: 13, scope: !65)
!1153 = !DILocation(line: 712, column: 5, scope: !65)
!1154 = !DILocation(line: 715, column: 21, scope: !1155)
!1155 = distinct !DILexicalBlock(scope: !65, file: !3, line: 713, column: 7)
!1156 = !DILocation(line: 716, column: 9, scope: !1155)
!1157 = !DILocation(line: 719, column: 21, scope: !1155)
!1158 = !DILocation(line: 720, column: 9, scope: !1155)
!1159 = !DILocation(line: 723, column: 21, scope: !1155)
!1160 = !DILocation(line: 724, column: 9, scope: !1155)
!1161 = !DILocation(line: 727, column: 21, scope: !1155)
!1162 = !DILocation(line: 728, column: 9, scope: !1155)
!1163 = !DILocation(line: 731, column: 26, scope: !1155)
!1164 = !DILocation(line: 732, column: 9, scope: !1155)
!1165 = !DILocation(line: 735, column: 22, scope: !1155)
!1166 = !DILocation(line: 735, column: 20, scope: !1155)
!1167 = !DILocation(line: 736, column: 9, scope: !1155)
!1168 = !DILocation(line: 738, column: 7, scope: !1155)
!1169 = !DILocation(line: 740, column: 7, scope: !1155)
!1170 = !DILocation(line: 743, column: 9, scope: !1155)
!1171 = distinct !{!1171, !1146, !1172, !975}
!1172 = !DILocation(line: 744, column: 7, scope: !65)
!1173 = !DILocation(line: 746, column: 1, scope: !65)
!1174 = !DILocation(line: 748, column: 10, scope: !1175)
!1175 = distinct !DILexicalBlock(scope: !65, file: !3, line: 748, column: 7)
!1176 = !DILocation(line: 748, column: 22, scope: !1175)
!1177 = !DILocation(line: 748, column: 25, scope: !1175)
!1178 = !DILocation(line: 748, column: 37, scope: !1175)
!1179 = !DILocation(line: 748, column: 40, scope: !1175)
!1180 = !DILocation(line: 748, column: 52, scope: !1175)
!1181 = !DILocation(line: 748, column: 55, scope: !1175)
!1182 = !DILocation(line: 749, column: 10, scope: !1175)
!1183 = !DILocation(line: 749, column: 13, scope: !1175)
!1184 = !DILocation(line: 748, column: 7, scope: !65)
!1185 = !DILocation(line: 750, column: 45, scope: !1175)
!1186 = !DILocation(line: 750, column: 31, scope: !1175)
!1187 = !DILocation(line: 750, column: 17, scope: !1175)
!1188 = !DILocation(line: 750, column: 5, scope: !1175)
!1189 = !DILocalVariable(name: "read_tokens", scope: !65, file: !3, line: 754, type: !89)
!1190 = !DILocation(line: 754, column: 8, scope: !65)
!1191 = !DILocalVariable(name: "ai", scope: !65, file: !3, line: 755, type: !1192)
!1192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1193, size: 64)
!1193 = !DICompositeType(tag: DW_TAG_structure_type, name: "argv_iterator", file: !21, line: 23, flags: DIFlagFwdDecl)
!1194 = !DILocation(line: 755, column: 25, scope: !65)
!1195 = !DILocation(line: 756, column: 7, scope: !1196)
!1196 = distinct !DILexicalBlock(scope: !65, file: !3, line: 756, column: 7)
!1197 = !DILocation(line: 756, column: 7, scope: !65)
!1198 = !DILocalVariable(name: "stream", scope: !1199, file: !3, line: 758, type: !1200)
!1199 = distinct !DILexicalBlock(scope: !1196, file: !3, line: 757, column: 5)
!1200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1201, size: 64)
!1201 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1202, line: 7, baseType: !1203)
!1202 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!1203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !1204, line: 49, size: 1728, elements: !1205)
!1204 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!1205 = !{!1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1221, !1223, !1224, !1225, !1226, !1227, !1229, !1231, !1234, !1236, !1239, !1242, !1243, !1244, !1245, !1246}
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1203, file: !1204, line: 51, baseType: !60, size: 32)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1203, file: !1204, line: 54, baseType: !56, size: 64, offset: 64)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1203, file: !1204, line: 55, baseType: !56, size: 64, offset: 128)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1203, file: !1204, line: 56, baseType: !56, size: 64, offset: 192)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1203, file: !1204, line: 57, baseType: !56, size: 64, offset: 256)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1203, file: !1204, line: 58, baseType: !56, size: 64, offset: 320)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1203, file: !1204, line: 59, baseType: !56, size: 64, offset: 384)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1203, file: !1204, line: 60, baseType: !56, size: 64, offset: 448)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1203, file: !1204, line: 61, baseType: !56, size: 64, offset: 512)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1203, file: !1204, line: 64, baseType: !56, size: 64, offset: 576)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1203, file: !1204, line: 65, baseType: !56, size: 64, offset: 640)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1203, file: !1204, line: 66, baseType: !56, size: 64, offset: 704)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1203, file: !1204, line: 68, baseType: !1219, size: 64, offset: 768)
!1219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1220, size: 64)
!1220 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !1204, line: 36, flags: DIFlagFwdDecl)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1203, file: !1204, line: 70, baseType: !1222, size: 64, offset: 832)
!1222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1203, size: 64)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1203, file: !1204, line: 72, baseType: !60, size: 32, offset: 896)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1203, file: !1204, line: 73, baseType: !60, size: 32, offset: 928)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1203, file: !1204, line: 74, baseType: !1044, size: 64, offset: 960)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1203, file: !1204, line: 77, baseType: !61, size: 16, offset: 1024)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1203, file: !1204, line: 78, baseType: !1228, size: 8, offset: 1040)
!1228 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1203, file: !1204, line: 79, baseType: !1230, size: 8, offset: 1048)
!1230 = !DICompositeType(tag: DW_TAG_array_type, baseType: !54, size: 8, elements: !71)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1203, file: !1204, line: 81, baseType: !1232, size: 64, offset: 1088)
!1232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1233, size: 64)
!1233 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !1204, line: 43, baseType: null)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1203, file: !1204, line: 89, baseType: !1235, size: 64, offset: 1152)
!1235 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !78, line: 153, baseType: !1045)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1203, file: !1204, line: 91, baseType: !1237, size: 64, offset: 1216)
!1237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1238, size: 64)
!1238 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !1204, line: 37, flags: DIFlagFwdDecl)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1203, file: !1204, line: 92, baseType: !1240, size: 64, offset: 1280)
!1240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1241, size: 64)
!1241 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !1204, line: 38, flags: DIFlagFwdDecl)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1203, file: !1204, line: 93, baseType: !1222, size: 64, offset: 1344)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1203, file: !1204, line: 94, baseType: !55, size: 64, offset: 1408)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1203, file: !1204, line: 95, baseType: !57, size: 64, offset: 1472)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1203, file: !1204, line: 96, baseType: !60, size: 32, offset: 1536)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1203, file: !1204, line: 98, baseType: !1247, size: 160, offset: 1568)
!1247 = !DICompositeType(tag: DW_TAG_array_type, baseType: !54, size: 160, elements: !1248)
!1248 = !{!1249}
!1249 = !DISubrange(count: 20)
!1250 = !DILocation(line: 758, column: 13, scope: !1199)
!1251 = !DILocation(line: 762, column: 11, scope: !1252)
!1252 = distinct !DILexicalBlock(scope: !1199, file: !3, line: 762, column: 11)
!1253 = !DILocation(line: 762, column: 20, scope: !1252)
!1254 = !DILocation(line: 762, column: 18, scope: !1252)
!1255 = !DILocation(line: 762, column: 11, scope: !1199)
!1256 = !DILocation(line: 764, column: 47, scope: !1257)
!1257 = distinct !DILexicalBlock(scope: !1252, file: !3, line: 763, column: 9)
!1258 = !DILocation(line: 764, column: 11, scope: !1257)
!1259 = !DILocation(line: 765, column: 20, scope: !1257)
!1260 = !DILocation(line: 765, column: 11, scope: !1257)
!1261 = !DILocation(line: 767, column: 11, scope: !1257)
!1262 = !DILocation(line: 770, column: 11, scope: !1263)
!1263 = distinct !DILexicalBlock(scope: !1199, file: !3, line: 770, column: 11)
!1264 = !DILocation(line: 770, column: 11, scope: !1199)
!1265 = !DILocation(line: 771, column: 18, scope: !1263)
!1266 = !DILocation(line: 771, column: 16, scope: !1263)
!1267 = !DILocation(line: 771, column: 9, scope: !1263)
!1268 = !DILocation(line: 774, column: 27, scope: !1269)
!1269 = distinct !DILexicalBlock(scope: !1263, file: !3, line: 773, column: 9)
!1270 = !DILocation(line: 774, column: 20, scope: !1269)
!1271 = !DILocation(line: 774, column: 18, scope: !1269)
!1272 = !DILocation(line: 775, column: 15, scope: !1273)
!1273 = distinct !DILexicalBlock(scope: !1269, file: !3, line: 775, column: 15)
!1274 = !DILocation(line: 775, column: 22, scope: !1273)
!1275 = !DILocation(line: 775, column: 15, scope: !1269)
!1276 = !DILocation(line: 776, column: 13, scope: !1273)
!1277 = !DILocalVariable(name: "st", scope: !1199, file: !3, line: 782, type: !1026)
!1278 = !DILocation(line: 782, column: 19, scope: !1199)
!1279 = !DILocation(line: 783, column: 26, scope: !1280)
!1280 = distinct !DILexicalBlock(scope: !1199, file: !3, line: 783, column: 11)
!1281 = !DILocation(line: 783, column: 18, scope: !1280)
!1282 = !DILocation(line: 783, column: 11, scope: !1280)
!1283 = !DILocation(line: 783, column: 40, scope: !1280)
!1284 = !DILocation(line: 784, column: 11, scope: !1280)
!1285 = !DILocation(line: 784, column: 14, scope: !1280)
!1286 = !DILocation(line: 785, column: 11, scope: !1280)
!1287 = !DILocation(line: 785, column: 17, scope: !1280)
!1288 = !DILocation(line: 785, column: 14, scope: !1280)
!1289 = !DILocation(line: 785, column: 28, scope: !1280)
!1290 = !DILocation(line: 785, column: 25, scope: !1280)
!1291 = !DILocation(line: 783, column: 11, scope: !1199)
!1292 = !DILocation(line: 787, column: 23, scope: !1293)
!1293 = distinct !DILexicalBlock(scope: !1280, file: !3, line: 786, column: 9)
!1294 = !DILocation(line: 788, column: 11, scope: !1293)
!1295 = !DILocation(line: 789, column: 30, scope: !1296)
!1296 = distinct !DILexicalBlock(scope: !1293, file: !3, line: 789, column: 15)
!1297 = !DILocation(line: 789, column: 17, scope: !1296)
!1298 = !DILocation(line: 789, column: 44, scope: !1296)
!1299 = !DILocation(line: 789, column: 55, scope: !1296)
!1300 = !DILocation(line: 789, column: 47, scope: !1296)
!1301 = !DILocation(line: 789, column: 63, scope: !1296)
!1302 = !DILocation(line: 789, column: 15, scope: !1293)
!1303 = !DILocation(line: 790, column: 13, scope: !1296)
!1304 = !DILocation(line: 792, column: 23, scope: !1293)
!1305 = !DILocation(line: 792, column: 17, scope: !1293)
!1306 = !DILocation(line: 793, column: 24, scope: !1293)
!1307 = !DILocation(line: 793, column: 18, scope: !1293)
!1308 = !DILocation(line: 794, column: 37, scope: !1293)
!1309 = !DILocation(line: 794, column: 16, scope: !1293)
!1310 = !DILocation(line: 794, column: 14, scope: !1293)
!1311 = !DILocation(line: 795, column: 9, scope: !1293)
!1312 = !DILocation(line: 798, column: 17, scope: !1313)
!1313 = distinct !DILexicalBlock(scope: !1280, file: !3, line: 797, column: 9)
!1314 = !DILocation(line: 799, column: 18, scope: !1313)
!1315 = !DILocation(line: 800, column: 39, scope: !1313)
!1316 = !DILocation(line: 800, column: 16, scope: !1313)
!1317 = !DILocation(line: 800, column: 14, scope: !1313)
!1318 = !DILocation(line: 802, column: 5, scope: !1199)
!1319 = !DILocation(line: 806, column: 16, scope: !1320)
!1320 = distinct !DILexicalBlock(scope: !1196, file: !3, line: 804, column: 5)
!1321 = !DILocation(line: 806, column: 25, scope: !1320)
!1322 = !DILocation(line: 806, column: 23, scope: !1320)
!1323 = !DILocation(line: 806, column: 32, scope: !1320)
!1324 = !DILocation(line: 806, column: 39, scope: !1320)
!1325 = !DILocation(line: 806, column: 37, scope: !1320)
!1326 = !DILocation(line: 806, column: 13, scope: !1320)
!1327 = !DILocation(line: 807, column: 17, scope: !1320)
!1328 = !DILocation(line: 807, column: 26, scope: !1320)
!1329 = !DILocation(line: 807, column: 24, scope: !1320)
!1330 = !DILocation(line: 807, column: 33, scope: !1320)
!1331 = !DILocation(line: 807, column: 40, scope: !1320)
!1332 = !DILocation(line: 807, column: 38, scope: !1320)
!1333 = !DILocation(line: 807, column: 16, scope: !1320)
!1334 = !DILocation(line: 807, column: 14, scope: !1320)
!1335 = !DILocation(line: 808, column: 33, scope: !1320)
!1336 = !DILocation(line: 808, column: 12, scope: !1320)
!1337 = !DILocation(line: 808, column: 10, scope: !1320)
!1338 = !DILocation(line: 811, column: 8, scope: !1339)
!1339 = distinct !DILexicalBlock(scope: !65, file: !3, line: 811, column: 7)
!1340 = !DILocation(line: 811, column: 7, scope: !65)
!1341 = !DILocation(line: 812, column: 5, scope: !1339)
!1342 = !DILocation(line: 814, column: 32, scope: !65)
!1343 = !DILocation(line: 814, column: 40, scope: !65)
!1344 = !DILocation(line: 814, column: 13, scope: !65)
!1345 = !DILocation(line: 814, column: 11, scope: !65)
!1346 = !DILocation(line: 815, column: 40, scope: !65)
!1347 = !DILocation(line: 815, column: 48, scope: !65)
!1348 = !DILocation(line: 815, column: 18, scope: !65)
!1349 = !DILocation(line: 815, column: 16, scope: !65)
!1350 = !DILocation(line: 817, column: 6, scope: !65)
!1351 = !DILocalVariable(name: "i", scope: !1352, file: !3, line: 818, type: !60)
!1352 = distinct !DILexicalBlock(scope: !65, file: !3, line: 818, column: 3)
!1353 = !DILocation(line: 818, column: 12, scope: !1352)
!1354 = !DILocation(line: 818, column: 8, scope: !1352)
!1355 = !DILocalVariable(name: "skip_file", scope: !1356, file: !3, line: 820, type: !89)
!1356 = distinct !DILexicalBlock(scope: !1357, file: !3, line: 819, column: 5)
!1357 = distinct !DILexicalBlock(scope: !1352, file: !3, line: 818, column: 3)
!1358 = !DILocation(line: 820, column: 12, scope: !1356)
!1359 = !DILocalVariable(name: "ai_err", scope: !1356, file: !3, line: 821, type: !20)
!1360 = !DILocation(line: 821, column: 26, scope: !1356)
!1361 = !DILocalVariable(name: "file_name", scope: !1356, file: !3, line: 822, type: !56)
!1362 = !DILocation(line: 822, column: 13, scope: !1356)
!1363 = !DILocation(line: 822, column: 36, scope: !1356)
!1364 = !DILocation(line: 822, column: 25, scope: !1356)
!1365 = !DILocation(line: 823, column: 12, scope: !1366)
!1366 = distinct !DILexicalBlock(scope: !1356, file: !3, line: 823, column: 11)
!1367 = !DILocation(line: 823, column: 11, scope: !1356)
!1368 = !DILocation(line: 825, column: 19, scope: !1369)
!1369 = distinct !DILexicalBlock(scope: !1366, file: !3, line: 824, column: 9)
!1370 = !DILocation(line: 825, column: 11, scope: !1369)
!1371 = !DILocation(line: 828, column: 15, scope: !1372)
!1372 = distinct !DILexicalBlock(scope: !1369, file: !3, line: 826, column: 13)
!1373 = !DILocation(line: 830, column: 25, scope: !1372)
!1374 = !DILocation(line: 831, column: 22, scope: !1372)
!1375 = !DILocation(line: 830, column: 15, scope: !1372)
!1376 = !DILocation(line: 832, column: 18, scope: !1372)
!1377 = !DILocation(line: 833, column: 15, scope: !1372)
!1378 = !DILocation(line: 835, column: 15, scope: !1372)
!1379 = !DILocation(line: 837, column: 15, scope: !1380)
!1380 = distinct !DILexicalBlock(scope: !1381, file: !3, line: 837, column: 15)
!1381 = distinct !DILexicalBlock(scope: !1372, file: !3, line: 837, column: 15)
!1382 = !DILocation(line: 840, column: 11, scope: !1383)
!1383 = distinct !DILexicalBlock(scope: !1356, file: !3, line: 840, column: 11)
!1384 = !DILocation(line: 840, column: 22, scope: !1383)
!1385 = !DILocation(line: 840, column: 25, scope: !1383)
!1386 = !DILocation(line: 840, column: 49, scope: !1383)
!1387 = !DILocation(line: 840, column: 52, scope: !1383)
!1388 = !DILocation(line: 840, column: 11, scope: !1356)
!1389 = !DILocation(line: 846, column: 18, scope: !1390)
!1390 = distinct !DILexicalBlock(scope: !1383, file: !3, line: 841, column: 9)
!1391 = !DILocation(line: 844, column: 11, scope: !1390)
!1392 = !DILocation(line: 847, column: 21, scope: !1390)
!1393 = !DILocation(line: 848, column: 9, scope: !1390)
!1394 = !DILocation(line: 850, column: 12, scope: !1395)
!1395 = distinct !DILexicalBlock(scope: !1356, file: !3, line: 850, column: 11)
!1396 = !DILocation(line: 850, column: 11, scope: !1356)
!1397 = !DILocation(line: 856, column: 15, scope: !1398)
!1398 = distinct !DILexicalBlock(scope: !1399, file: !3, line: 856, column: 15)
!1399 = distinct !DILexicalBlock(scope: !1395, file: !3, line: 851, column: 9)
!1400 = !DILocation(line: 856, column: 26, scope: !1398)
!1401 = !DILocation(line: 856, column: 15, scope: !1399)
!1402 = !DILocation(line: 857, column: 13, scope: !1398)
!1403 = !DILocalVariable(name: "file_number", scope: !1404, file: !3, line: 863, type: !59)
!1404 = distinct !DILexicalBlock(scope: !1398, file: !3, line: 859, column: 13)
!1405 = !DILocation(line: 863, column: 33, scope: !1404)
!1406 = !DILocation(line: 863, column: 65, scope: !1404)
!1407 = !DILocation(line: 863, column: 47, scope: !1404)
!1408 = !DILocation(line: 864, column: 42, scope: !1404)
!1409 = !DILocation(line: 865, column: 22, scope: !1404)
!1410 = !DILocation(line: 864, column: 15, scope: !1404)
!1411 = !DILocation(line: 867, column: 21, scope: !1399)
!1412 = !DILocation(line: 868, column: 9, scope: !1399)
!1413 = !DILocation(line: 870, column: 11, scope: !1414)
!1414 = distinct !DILexicalBlock(scope: !1356, file: !3, line: 870, column: 11)
!1415 = !DILocation(line: 870, column: 11, scope: !1356)
!1416 = !DILocation(line: 871, column: 12, scope: !1414)
!1417 = !DILocation(line: 871, column: 9, scope: !1414)
!1418 = !DILocation(line: 873, column: 24, scope: !1414)
!1419 = !DILocation(line: 873, column: 36, scope: !1414)
!1420 = !DILocation(line: 873, column: 44, scope: !1414)
!1421 = !DILocation(line: 873, column: 53, scope: !1414)
!1422 = !DILocation(line: 873, column: 15, scope: !1414)
!1423 = !DILocation(line: 873, column: 12, scope: !1414)
!1424 = !DILocation(line: 875, column: 13, scope: !1425)
!1425 = distinct !DILexicalBlock(scope: !1356, file: !3, line: 875, column: 11)
!1426 = !DILocation(line: 875, column: 11, scope: !1356)
!1427 = !DILocation(line: 876, column: 9, scope: !1425)
!1428 = !DILocation(line: 876, column: 20, scope: !1425)
!1429 = !DILocation(line: 876, column: 27, scope: !1425)
!1430 = !DILocation(line: 877, column: 5, scope: !1356)
!1431 = !DILocation(line: 818, column: 27, scope: !1357)
!1432 = !DILocation(line: 818, column: 3, scope: !1357)
!1433 = distinct !{!1433, !1434, !1435}
!1434 = !DILocation(line: 818, column: 3, scope: !1352)
!1435 = !DILocation(line: 877, column: 5, scope: !1352)
!1436 = !DILabel(scope: !65, name: "argv_iter_done", file: !3, line: 878)
!1437 = !DILocation(line: 878, column: 2, scope: !65)
!1438 = !DILocation(line: 883, column: 7, scope: !1439)
!1439 = distinct !DILexicalBlock(scope: !65, file: !3, line: 883, column: 7)
!1440 = !DILocation(line: 883, column: 10, scope: !1439)
!1441 = !DILocation(line: 883, column: 14, scope: !1439)
!1442 = !DILocation(line: 883, column: 25, scope: !1439)
!1443 = !DILocation(line: 883, column: 46, scope: !1439)
!1444 = !DILocation(line: 883, column: 28, scope: !1439)
!1445 = !DILocation(line: 883, column: 50, scope: !1439)
!1446 = !DILocation(line: 883, column: 7, scope: !65)
!1447 = !DILocation(line: 884, column: 27, scope: !1439)
!1448 = !DILocation(line: 884, column: 11, scope: !1439)
!1449 = !DILocation(line: 884, column: 8, scope: !1439)
!1450 = !DILocation(line: 884, column: 5, scope: !1439)
!1451 = !DILocation(line: 886, column: 7, scope: !1452)
!1452 = distinct !DILexicalBlock(scope: !65, file: !3, line: 886, column: 7)
!1453 = !DILocation(line: 886, column: 7, scope: !65)
!1454 = !DILocation(line: 887, column: 5, scope: !1452)
!1455 = !DILocation(line: 889, column: 29, scope: !1456)
!1456 = distinct !DILexicalBlock(scope: !65, file: !3, line: 889, column: 7)
!1457 = !DILocation(line: 889, column: 11, scope: !1456)
!1458 = !DILocation(line: 889, column: 9, scope: !1456)
!1459 = !DILocation(line: 889, column: 7, scope: !65)
!1460 = !DILocation(line: 890, column: 19, scope: !1456)
!1461 = !DILocation(line: 890, column: 32, scope: !1456)
!1462 = !DILocation(line: 890, column: 45, scope: !1456)
!1463 = !DILocation(line: 890, column: 58, scope: !1456)
!1464 = !DILocation(line: 891, column: 19, scope: !1456)
!1465 = !DILocation(line: 890, column: 5, scope: !1456)
!1466 = !DILocation(line: 893, column: 19, scope: !65)
!1467 = !DILocation(line: 893, column: 3, scope: !65)
!1468 = !DILocation(line: 895, column: 9, scope: !65)
!1469 = !DILocation(line: 895, column: 3, scope: !65)
!1470 = !DILocation(line: 897, column: 7, scope: !1471)
!1471 = distinct !DILexicalBlock(scope: !65, file: !3, line: 897, column: 7)
!1472 = !DILocation(line: 897, column: 23, scope: !1471)
!1473 = !DILocation(line: 897, column: 26, scope: !1471)
!1474 = !DILocation(line: 897, column: 47, scope: !1471)
!1475 = !DILocation(line: 897, column: 7, scope: !65)
!1476 = !DILocation(line: 898, column: 5, scope: !1471)
!1477 = !DILocation(line: 900, column: 10, scope: !65)
!1478 = !DILocation(line: 900, column: 3, scope: !65)
!1479 = distinct !DISubprogram(name: "get_input_fstatus", scope: !3, file: !3, line: 625, type: !1480, scopeLine: 626, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !69)
!1480 = !DISubroutineType(types: !1481)
!1481 = !{!1021, !57, !1482}
!1482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1483, size: 64)
!1483 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !56)
!1484 = !DILocalVariable(name: "nfiles", arg: 1, scope: !1479, file: !3, line: 625, type: !57)
!1485 = !DILocation(line: 625, column: 27, scope: !1479)
!1486 = !DILocalVariable(name: "file", arg: 2, scope: !1479, file: !3, line: 625, type: !1482)
!1487 = !DILocation(line: 625, column: 48, scope: !1479)
!1488 = !DILocalVariable(name: "fstatus", scope: !1479, file: !3, line: 627, type: !1021)
!1489 = !DILocation(line: 627, column: 19, scope: !1479)
!1490 = !DILocation(line: 627, column: 39, scope: !1479)
!1491 = !DILocation(line: 627, column: 48, scope: !1479)
!1492 = !DILocation(line: 627, column: 29, scope: !1479)
!1493 = !DILocation(line: 629, column: 7, scope: !1494)
!1494 = distinct !DILexicalBlock(scope: !1479, file: !3, line: 629, column: 7)
!1495 = !DILocation(line: 629, column: 14, scope: !1494)
!1496 = !DILocation(line: 630, column: 7, scope: !1494)
!1497 = !DILocation(line: 630, column: 11, scope: !1494)
!1498 = !DILocation(line: 630, column: 18, scope: !1494)
!1499 = !DILocation(line: 631, column: 11, scope: !1494)
!1500 = !DILocation(line: 631, column: 16, scope: !1494)
!1501 = !DILocation(line: 631, column: 30, scope: !1494)
!1502 = !DILocation(line: 631, column: 28, scope: !1494)
!1503 = !DILocation(line: 631, column: 44, scope: !1494)
!1504 = !DILocation(line: 631, column: 42, scope: !1494)
!1505 = !DILocation(line: 632, column: 18, scope: !1494)
!1506 = !DILocation(line: 632, column: 16, scope: !1494)
!1507 = !DILocation(line: 632, column: 32, scope: !1494)
!1508 = !DILocation(line: 632, column: 30, scope: !1494)
!1509 = !DILocation(line: 633, column: 15, scope: !1494)
!1510 = !DILocation(line: 629, column: 7, scope: !1479)
!1511 = !DILocation(line: 634, column: 5, scope: !1494)
!1512 = !DILocation(line: 634, column: 16, scope: !1494)
!1513 = !DILocation(line: 634, column: 23, scope: !1494)
!1514 = !DILocalVariable(name: "i", scope: !1515, file: !3, line: 637, type: !57)
!1515 = distinct !DILexicalBlock(scope: !1516, file: !3, line: 637, column: 7)
!1516 = distinct !DILexicalBlock(scope: !1494, file: !3, line: 636, column: 5)
!1517 = !DILocation(line: 637, column: 19, scope: !1515)
!1518 = !DILocation(line: 637, column: 12, scope: !1515)
!1519 = !DILocation(line: 637, column: 26, scope: !1520)
!1520 = distinct !DILexicalBlock(scope: !1515, file: !3, line: 637, column: 7)
!1521 = !DILocation(line: 637, column: 30, scope: !1520)
!1522 = !DILocation(line: 637, column: 28, scope: !1520)
!1523 = !DILocation(line: 637, column: 7, scope: !1515)
!1524 = !DILocation(line: 638, column: 32, scope: !1520)
!1525 = !DILocation(line: 638, column: 37, scope: !1520)
!1526 = !DILocation(line: 638, column: 40, scope: !1520)
!1527 = !DILocation(line: 638, column: 43, scope: !1520)
!1528 = !DILocation(line: 638, column: 30, scope: !1520)
!1529 = !DILocation(line: 639, column: 54, scope: !1520)
!1530 = !DILocation(line: 639, column: 62, scope: !1520)
!1531 = !DILocation(line: 639, column: 65, scope: !1520)
!1532 = !DILocation(line: 639, column: 32, scope: !1520)
!1533 = !DILocation(line: 640, column: 38, scope: !1520)
!1534 = !DILocation(line: 640, column: 43, scope: !1520)
!1535 = !DILocation(line: 640, column: 48, scope: !1520)
!1536 = !DILocation(line: 640, column: 56, scope: !1520)
!1537 = !DILocation(line: 640, column: 59, scope: !1520)
!1538 = !DILocation(line: 640, column: 32, scope: !1520)
!1539 = !DILocation(line: 638, column: 9, scope: !1520)
!1540 = !DILocation(line: 638, column: 17, scope: !1520)
!1541 = !DILocation(line: 638, column: 20, scope: !1520)
!1542 = !DILocation(line: 638, column: 27, scope: !1520)
!1543 = !DILocation(line: 637, column: 39, scope: !1520)
!1544 = !DILocation(line: 637, column: 7, scope: !1520)
!1545 = distinct !{!1545, !1523, !1546, !975}
!1546 = !DILocation(line: 640, column: 62, scope: !1515)
!1547 = !DILocation(line: 643, column: 10, scope: !1479)
!1548 = !DILocation(line: 643, column: 3, scope: !1479)
!1549 = distinct !DISubprogram(name: "compute_number_width", scope: !3, file: !3, line: 651, type: !1550, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !69)
!1550 = !DISubroutineType(types: !1551)
!1551 = !{!60, !57, !1552}
!1552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1553, size: 64)
!1553 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1022)
!1554 = !DILocalVariable(name: "nfiles", arg: 1, scope: !1549, file: !3, line: 651, type: !57)
!1555 = !DILocation(line: 651, column: 30, scope: !1549)
!1556 = !DILocalVariable(name: "fstatus", arg: 2, scope: !1549, file: !3, line: 651, type: !1552)
!1557 = !DILocation(line: 651, column: 60, scope: !1549)
!1558 = !DILocalVariable(name: "width", scope: !1549, file: !3, line: 653, type: !60)
!1559 = !DILocation(line: 653, column: 7, scope: !1549)
!1560 = !DILocation(line: 655, column: 11, scope: !1561)
!1561 = distinct !DILexicalBlock(scope: !1549, file: !3, line: 655, column: 7)
!1562 = !DILocation(line: 655, column: 9, scope: !1561)
!1563 = !DILocation(line: 655, column: 18, scope: !1561)
!1564 = !DILocation(line: 655, column: 21, scope: !1561)
!1565 = !DILocation(line: 655, column: 32, scope: !1561)
!1566 = !DILocation(line: 655, column: 39, scope: !1561)
!1567 = !DILocation(line: 655, column: 7, scope: !1549)
!1568 = !DILocalVariable(name: "minimum_width", scope: !1569, file: !3, line: 657, type: !60)
!1569 = distinct !DILexicalBlock(scope: !1561, file: !3, line: 656, column: 5)
!1570 = !DILocation(line: 657, column: 11, scope: !1569)
!1571 = !DILocalVariable(name: "regular_total", scope: !1569, file: !3, line: 658, type: !75)
!1572 = !DILocation(line: 658, column: 17, scope: !1569)
!1573 = !DILocalVariable(name: "i", scope: !1574, file: !3, line: 660, type: !57)
!1574 = distinct !DILexicalBlock(scope: !1569, file: !3, line: 660, column: 7)
!1575 = !DILocation(line: 660, column: 19, scope: !1574)
!1576 = !DILocation(line: 660, column: 12, scope: !1574)
!1577 = !DILocation(line: 660, column: 26, scope: !1578)
!1578 = distinct !DILexicalBlock(scope: !1574, file: !3, line: 660, column: 7)
!1579 = !DILocation(line: 660, column: 30, scope: !1578)
!1580 = !DILocation(line: 660, column: 28, scope: !1578)
!1581 = !DILocation(line: 660, column: 7, scope: !1574)
!1582 = !DILocation(line: 661, column: 15, scope: !1583)
!1583 = distinct !DILexicalBlock(scope: !1578, file: !3, line: 661, column: 13)
!1584 = !DILocation(line: 661, column: 23, scope: !1583)
!1585 = !DILocation(line: 661, column: 26, scope: !1583)
!1586 = !DILocation(line: 661, column: 13, scope: !1578)
!1587 = !DILocation(line: 663, column: 17, scope: !1588)
!1588 = distinct !DILexicalBlock(scope: !1589, file: !3, line: 663, column: 17)
!1589 = distinct !DILexicalBlock(scope: !1583, file: !3, line: 662, column: 11)
!1590 = !DILocation(line: 663, column: 17, scope: !1589)
!1591 = !DILocation(line: 664, column: 32, scope: !1588)
!1592 = !DILocation(line: 664, column: 40, scope: !1588)
!1593 = !DILocation(line: 664, column: 43, scope: !1588)
!1594 = !DILocation(line: 664, column: 46, scope: !1588)
!1595 = !DILocation(line: 664, column: 29, scope: !1588)
!1596 = !DILocation(line: 664, column: 15, scope: !1588)
!1597 = !DILocation(line: 666, column: 29, scope: !1588)
!1598 = !DILocation(line: 667, column: 11, scope: !1589)
!1599 = !DILocation(line: 660, column: 39, scope: !1578)
!1600 = !DILocation(line: 660, column: 7, scope: !1578)
!1601 = distinct !{!1601, !1581, !1602, !975}
!1602 = !DILocation(line: 667, column: 11, scope: !1574)
!1603 = !DILocation(line: 669, column: 7, scope: !1569)
!1604 = !DILocation(line: 669, column: 20, scope: !1605)
!1605 = distinct !DILexicalBlock(scope: !1606, file: !3, line: 669, column: 7)
!1606 = distinct !DILexicalBlock(scope: !1569, file: !3, line: 669, column: 7)
!1607 = !DILocation(line: 669, column: 17, scope: !1605)
!1608 = !DILocation(line: 669, column: 7, scope: !1606)
!1609 = !DILocation(line: 670, column: 14, scope: !1605)
!1610 = !DILocation(line: 670, column: 9, scope: !1605)
!1611 = !DILocation(line: 669, column: 49, scope: !1605)
!1612 = !DILocation(line: 669, column: 7, scope: !1605)
!1613 = distinct !{!1613, !1608, !1614, !975}
!1614 = !DILocation(line: 670, column: 14, scope: !1606)
!1615 = !DILocation(line: 671, column: 11, scope: !1616)
!1616 = distinct !DILexicalBlock(scope: !1569, file: !3, line: 671, column: 11)
!1617 = !DILocation(line: 671, column: 19, scope: !1616)
!1618 = !DILocation(line: 671, column: 17, scope: !1616)
!1619 = !DILocation(line: 671, column: 11, scope: !1569)
!1620 = !DILocation(line: 672, column: 17, scope: !1616)
!1621 = !DILocation(line: 672, column: 15, scope: !1616)
!1622 = !DILocation(line: 672, column: 9, scope: !1616)
!1623 = !DILocation(line: 673, column: 5, scope: !1569)
!1624 = !DILocation(line: 675, column: 10, scope: !1549)
!1625 = !DILocation(line: 675, column: 3, scope: !1549)
!1626 = distinct !DISubprogram(name: "wc_file", scope: !3, file: !3, line: 589, type: !1627, scopeLine: 590, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !69)
!1627 = !DISubroutineType(types: !1628)
!1628 = !{!89, !52, !1021}
!1629 = !DILocalVariable(name: "file", arg: 1, scope: !1626, file: !3, line: 589, type: !52)
!1630 = !DILocation(line: 589, column: 22, scope: !1626)
!1631 = !DILocalVariable(name: "fstatus", arg: 2, scope: !1626, file: !3, line: 589, type: !1021)
!1632 = !DILocation(line: 589, column: 44, scope: !1626)
!1633 = !DILocation(line: 591, column: 9, scope: !1634)
!1634 = distinct !DILexicalBlock(scope: !1626, file: !3, line: 591, column: 7)
!1635 = !DILocation(line: 591, column: 14, scope: !1634)
!1636 = !DILocation(line: 591, column: 17, scope: !1634)
!1637 = !DILocation(line: 591, column: 7, scope: !1626)
!1638 = !DILocation(line: 593, column: 23, scope: !1639)
!1639 = distinct !DILexicalBlock(scope: !1634, file: !3, line: 592, column: 5)
!1640 = !DILocation(line: 594, column: 7, scope: !1639)
!1641 = !DILocation(line: 595, column: 32, scope: !1639)
!1642 = !DILocation(line: 595, column: 38, scope: !1639)
!1643 = !DILocation(line: 595, column: 14, scope: !1639)
!1644 = !DILocation(line: 595, column: 7, scope: !1639)
!1645 = !DILocalVariable(name: "fd", scope: !1646, file: !3, line: 599, type: !60)
!1646 = distinct !DILexicalBlock(scope: !1634, file: !3, line: 598, column: 5)
!1647 = !DILocation(line: 599, column: 11, scope: !1646)
!1648 = !DILocation(line: 599, column: 22, scope: !1646)
!1649 = !DILocation(line: 599, column: 16, scope: !1646)
!1650 = !DILocation(line: 600, column: 11, scope: !1651)
!1651 = distinct !DILexicalBlock(scope: !1646, file: !3, line: 600, column: 11)
!1652 = !DILocation(line: 600, column: 14, scope: !1651)
!1653 = !DILocation(line: 600, column: 11, scope: !1646)
!1654 = !DILocation(line: 602, column: 21, scope: !1655)
!1655 = distinct !DILexicalBlock(scope: !1651, file: !3, line: 601, column: 9)
!1656 = !DILocation(line: 602, column: 34, scope: !1655)
!1657 = !DILocation(line: 602, column: 11, scope: !1655)
!1658 = !DILocation(line: 603, column: 11, scope: !1655)
!1659 = !DILocalVariable(name: "ok", scope: !1660, file: !3, line: 607, type: !89)
!1660 = distinct !DILexicalBlock(scope: !1651, file: !3, line: 606, column: 9)
!1661 = !DILocation(line: 607, column: 16, scope: !1660)
!1662 = !DILocation(line: 607, column: 25, scope: !1660)
!1663 = !DILocation(line: 607, column: 29, scope: !1660)
!1664 = !DILocation(line: 607, column: 35, scope: !1660)
!1665 = !DILocation(line: 607, column: 21, scope: !1660)
!1666 = !DILocation(line: 608, column: 22, scope: !1667)
!1667 = distinct !DILexicalBlock(scope: !1660, file: !3, line: 608, column: 15)
!1668 = !DILocation(line: 608, column: 15, scope: !1667)
!1669 = !DILocation(line: 608, column: 26, scope: !1667)
!1670 = !DILocation(line: 608, column: 15, scope: !1660)
!1671 = !DILocation(line: 610, column: 25, scope: !1672)
!1672 = distinct !DILexicalBlock(scope: !1667, file: !3, line: 609, column: 13)
!1673 = !DILocation(line: 610, column: 38, scope: !1672)
!1674 = !DILocation(line: 610, column: 15, scope: !1672)
!1675 = !DILocation(line: 611, column: 15, scope: !1672)
!1676 = !DILocation(line: 613, column: 18, scope: !1660)
!1677 = !DILocation(line: 613, column: 11, scope: !1660)
!1678 = !DILocation(line: 616, column: 1, scope: !1626)
!1679 = !DILocalVariable(name: "lines", arg: 1, scope: !120, file: !3, line: 171, type: !75)
!1680 = !DILocation(line: 171, column: 25, scope: !120)
!1681 = !DILocalVariable(name: "words", arg: 2, scope: !120, file: !3, line: 172, type: !75)
!1682 = !DILocation(line: 172, column: 25, scope: !120)
!1683 = !DILocalVariable(name: "chars", arg: 3, scope: !120, file: !3, line: 173, type: !75)
!1684 = !DILocation(line: 173, column: 25, scope: !120)
!1685 = !DILocalVariable(name: "bytes", arg: 4, scope: !120, file: !3, line: 174, type: !75)
!1686 = !DILocation(line: 174, column: 25, scope: !120)
!1687 = !DILocalVariable(name: "linelength", arg: 5, scope: !120, file: !3, line: 175, type: !75)
!1688 = !DILocation(line: 175, column: 25, scope: !120)
!1689 = !DILocalVariable(name: "file", arg: 6, scope: !120, file: !3, line: 176, type: !52)
!1690 = !DILocation(line: 176, column: 27, scope: !120)
!1691 = !DILocalVariable(name: "format_int", scope: !120, file: !3, line: 179, type: !52)
!1692 = !DILocation(line: 179, column: 15, scope: !120)
!1693 = !DILocalVariable(name: "buf", scope: !120, file: !3, line: 180, type: !1694)
!1694 = !DICompositeType(tag: DW_TAG_array_type, baseType: !54, size: 168, elements: !1695)
!1695 = !{!1696}
!1696 = !DISubrange(count: 21)
!1697 = !DILocation(line: 180, column: 8, scope: !120)
!1698 = !DILocation(line: 182, column: 7, scope: !1699)
!1699 = distinct !DILexicalBlock(scope: !120, file: !3, line: 182, column: 7)
!1700 = !DILocation(line: 182, column: 7, scope: !120)
!1701 = !DILocation(line: 184, column: 15, scope: !1702)
!1702 = distinct !DILexicalBlock(scope: !1699, file: !3, line: 183, column: 5)
!1703 = !DILocation(line: 184, column: 27, scope: !1702)
!1704 = !DILocation(line: 184, column: 52, scope: !1702)
!1705 = !DILocation(line: 184, column: 59, scope: !1702)
!1706 = !DILocation(line: 184, column: 41, scope: !1702)
!1707 = !DILocation(line: 184, column: 7, scope: !1702)
!1708 = !DILocation(line: 185, column: 18, scope: !1702)
!1709 = !DILocation(line: 186, column: 5, scope: !1702)
!1710 = !DILocation(line: 187, column: 7, scope: !1711)
!1711 = distinct !DILexicalBlock(scope: !120, file: !3, line: 187, column: 7)
!1712 = !DILocation(line: 187, column: 7, scope: !120)
!1713 = !DILocation(line: 189, column: 15, scope: !1714)
!1714 = distinct !DILexicalBlock(scope: !1711, file: !3, line: 188, column: 5)
!1715 = !DILocation(line: 189, column: 27, scope: !1714)
!1716 = !DILocation(line: 189, column: 52, scope: !1714)
!1717 = !DILocation(line: 189, column: 59, scope: !1714)
!1718 = !DILocation(line: 189, column: 41, scope: !1714)
!1719 = !DILocation(line: 189, column: 7, scope: !1714)
!1720 = !DILocation(line: 190, column: 18, scope: !1714)
!1721 = !DILocation(line: 191, column: 5, scope: !1714)
!1722 = !DILocation(line: 192, column: 7, scope: !1723)
!1723 = distinct !DILexicalBlock(scope: !120, file: !3, line: 192, column: 7)
!1724 = !DILocation(line: 192, column: 7, scope: !120)
!1725 = !DILocation(line: 194, column: 15, scope: !1726)
!1726 = distinct !DILexicalBlock(scope: !1723, file: !3, line: 193, column: 5)
!1727 = !DILocation(line: 194, column: 27, scope: !1726)
!1728 = !DILocation(line: 194, column: 52, scope: !1726)
!1729 = !DILocation(line: 194, column: 59, scope: !1726)
!1730 = !DILocation(line: 194, column: 41, scope: !1726)
!1731 = !DILocation(line: 194, column: 7, scope: !1726)
!1732 = !DILocation(line: 195, column: 18, scope: !1726)
!1733 = !DILocation(line: 196, column: 5, scope: !1726)
!1734 = !DILocation(line: 197, column: 7, scope: !1735)
!1735 = distinct !DILexicalBlock(scope: !120, file: !3, line: 197, column: 7)
!1736 = !DILocation(line: 197, column: 7, scope: !120)
!1737 = !DILocation(line: 199, column: 15, scope: !1738)
!1738 = distinct !DILexicalBlock(scope: !1735, file: !3, line: 198, column: 5)
!1739 = !DILocation(line: 199, column: 27, scope: !1738)
!1740 = !DILocation(line: 199, column: 52, scope: !1738)
!1741 = !DILocation(line: 199, column: 59, scope: !1738)
!1742 = !DILocation(line: 199, column: 41, scope: !1738)
!1743 = !DILocation(line: 199, column: 7, scope: !1738)
!1744 = !DILocation(line: 200, column: 18, scope: !1738)
!1745 = !DILocation(line: 201, column: 5, scope: !1738)
!1746 = !DILocation(line: 202, column: 7, scope: !1747)
!1747 = distinct !DILexicalBlock(scope: !120, file: !3, line: 202, column: 7)
!1748 = !DILocation(line: 202, column: 7, scope: !120)
!1749 = !DILocation(line: 204, column: 15, scope: !1750)
!1750 = distinct !DILexicalBlock(scope: !1747, file: !3, line: 203, column: 5)
!1751 = !DILocation(line: 204, column: 27, scope: !1750)
!1752 = !DILocation(line: 204, column: 52, scope: !1750)
!1753 = !DILocation(line: 204, column: 64, scope: !1750)
!1754 = !DILocation(line: 204, column: 41, scope: !1750)
!1755 = !DILocation(line: 204, column: 7, scope: !1750)
!1756 = !DILocation(line: 205, column: 5, scope: !1750)
!1757 = !DILocation(line: 206, column: 7, scope: !1758)
!1758 = distinct !DILexicalBlock(scope: !120, file: !3, line: 206, column: 7)
!1759 = !DILocation(line: 206, column: 7, scope: !120)
!1760 = !DILocation(line: 207, column: 28, scope: !1758)
!1761 = !DILocation(line: 207, column: 20, scope: !1758)
!1762 = !DILocation(line: 207, column: 42, scope: !1758)
!1763 = !DILocation(line: 207, column: 58, scope: !1758)
!1764 = !DILocation(line: 207, column: 5, scope: !1758)
!1765 = !DILocation(line: 208, column: 3, scope: !120)
!1766 = !DILocation(line: 209, column: 1, scope: !120)
!1767 = distinct !DISubprogram(name: "wc", scope: !3, file: !3, line: 216, type: !1768, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !69)
!1768 = !DISubroutineType(types: !1769)
!1769 = !{!89, !60, !52, !1021, !1770}
!1770 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !1771, line: 63, baseType: !1044)
!1771 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!1772 = !DILocalVariable(name: "fd", arg: 1, scope: !1767, file: !3, line: 216, type: !60)
!1773 = !DILocation(line: 216, column: 9, scope: !1767)
!1774 = !DILocalVariable(name: "file_x", arg: 2, scope: !1767, file: !3, line: 216, type: !52)
!1775 = !DILocation(line: 216, column: 25, scope: !1767)
!1776 = !DILocalVariable(name: "fstatus", arg: 3, scope: !1767, file: !3, line: 216, type: !1021)
!1777 = !DILocation(line: 216, column: 49, scope: !1767)
!1778 = !DILocalVariable(name: "current_pos", arg: 4, scope: !1767, file: !3, line: 216, type: !1770)
!1779 = !DILocation(line: 216, column: 64, scope: !1767)
!1780 = !DILocalVariable(name: "ok", scope: !1767, file: !3, line: 218, type: !89)
!1781 = !DILocation(line: 218, column: 8, scope: !1767)
!1782 = !DILocalVariable(name: "buf", scope: !1767, file: !3, line: 219, type: !1783)
!1783 = !DICompositeType(tag: DW_TAG_array_type, baseType: !54, size: 131080, elements: !1784)
!1784 = !{!1785}
!1785 = !DISubrange(count: 16385)
!1786 = !DILocation(line: 219, column: 8, scope: !1767)
!1787 = !DILocalVariable(name: "bytes_read", scope: !1767, file: !3, line: 220, type: !57)
!1788 = !DILocation(line: 220, column: 10, scope: !1767)
!1789 = !DILocalVariable(name: "lines", scope: !1767, file: !3, line: 221, type: !75)
!1790 = !DILocation(line: 221, column: 13, scope: !1767)
!1791 = !DILocalVariable(name: "words", scope: !1767, file: !3, line: 221, type: !75)
!1792 = !DILocation(line: 221, column: 20, scope: !1767)
!1793 = !DILocalVariable(name: "chars", scope: !1767, file: !3, line: 221, type: !75)
!1794 = !DILocation(line: 221, column: 27, scope: !1767)
!1795 = !DILocalVariable(name: "bytes", scope: !1767, file: !3, line: 221, type: !75)
!1796 = !DILocation(line: 221, column: 34, scope: !1767)
!1797 = !DILocalVariable(name: "linelength", scope: !1767, file: !3, line: 221, type: !75)
!1798 = !DILocation(line: 221, column: 41, scope: !1767)
!1799 = !DILocalVariable(name: "count_bytes", scope: !1767, file: !3, line: 222, type: !89)
!1800 = !DILocation(line: 222, column: 8, scope: !1767)
!1801 = !DILocalVariable(name: "count_chars", scope: !1767, file: !3, line: 222, type: !89)
!1802 = !DILocation(line: 222, column: 21, scope: !1767)
!1803 = !DILocalVariable(name: "count_complicated", scope: !1767, file: !3, line: 222, type: !89)
!1804 = !DILocation(line: 222, column: 34, scope: !1767)
!1805 = !DILocalVariable(name: "file", scope: !1767, file: !3, line: 223, type: !52)
!1806 = !DILocation(line: 223, column: 15, scope: !1767)
!1807 = !DILocation(line: 223, column: 22, scope: !1767)
!1808 = !DILocation(line: 223, column: 31, scope: !1767)
!1809 = !DILocation(line: 225, column: 46, scope: !1767)
!1810 = !DILocation(line: 225, column: 33, scope: !1767)
!1811 = !DILocation(line: 225, column: 25, scope: !1767)
!1812 = !DILocation(line: 225, column: 17, scope: !1767)
!1813 = !DILocation(line: 225, column: 9, scope: !1767)
!1814 = !DILocation(line: 230, column: 7, scope: !1815)
!1815 = distinct !DILexicalBlock(scope: !1767, file: !3, line: 230, column: 7)
!1816 = !DILocation(line: 230, column: 18, scope: !1815)
!1817 = !DILocation(line: 230, column: 7, scope: !1767)
!1818 = !DILocation(line: 232, column: 21, scope: !1819)
!1819 = distinct !DILexicalBlock(scope: !1815, file: !3, line: 231, column: 5)
!1820 = !DILocation(line: 232, column: 19, scope: !1819)
!1821 = !DILocation(line: 233, column: 21, scope: !1819)
!1822 = !DILocation(line: 233, column: 19, scope: !1819)
!1823 = !DILocation(line: 234, column: 5, scope: !1819)
!1824 = !DILocation(line: 238, column: 21, scope: !1825)
!1825 = distinct !DILexicalBlock(scope: !1815, file: !3, line: 237, column: 5)
!1826 = !DILocation(line: 238, column: 33, scope: !1825)
!1827 = !DILocation(line: 238, column: 36, scope: !1825)
!1828 = !DILocation(line: 238, column: 19, scope: !1825)
!1829 = !DILocation(line: 239, column: 19, scope: !1825)
!1830 = !DILocation(line: 241, column: 23, scope: !1767)
!1831 = !DILocation(line: 241, column: 35, scope: !1767)
!1832 = !DILocation(line: 241, column: 38, scope: !1767)
!1833 = !DILocation(line: 241, column: 21, scope: !1767)
!1834 = !DILocation(line: 244, column: 8, scope: !1835)
!1835 = distinct !DILexicalBlock(scope: !1767, file: !3, line: 244, column: 7)
!1836 = !DILocation(line: 244, column: 20, scope: !1835)
!1837 = !DILocation(line: 244, column: 23, scope: !1835)
!1838 = !DILocation(line: 244, column: 35, scope: !1835)
!1839 = !DILocation(line: 244, column: 38, scope: !1835)
!1840 = !DILocation(line: 244, column: 50, scope: !1835)
!1841 = !DILocation(line: 244, column: 53, scope: !1835)
!1842 = !DILocation(line: 244, column: 7, scope: !1767)
!1843 = !DILocation(line: 245, column: 15, scope: !1835)
!1844 = !DILocation(line: 245, column: 5, scope: !1835)
!1845 = !DILocation(line: 257, column: 7, scope: !1846)
!1846 = distinct !DILexicalBlock(scope: !1767, file: !3, line: 257, column: 7)
!1847 = !DILocation(line: 257, column: 19, scope: !1846)
!1848 = !DILocation(line: 257, column: 23, scope: !1846)
!1849 = !DILocation(line: 257, column: 35, scope: !1846)
!1850 = !DILocation(line: 257, column: 39, scope: !1846)
!1851 = !DILocation(line: 257, column: 51, scope: !1846)
!1852 = !DILocation(line: 257, column: 55, scope: !1846)
!1853 = !DILocation(line: 257, column: 7, scope: !1767)
!1854 = !DILocalVariable(name: "skip_read", scope: !1855, file: !3, line: 259, type: !89)
!1855 = distinct !DILexicalBlock(scope: !1846, file: !3, line: 258, column: 5)
!1856 = !DILocation(line: 259, column: 12, scope: !1855)
!1857 = !DILocation(line: 261, column: 15, scope: !1858)
!1858 = distinct !DILexicalBlock(scope: !1855, file: !3, line: 261, column: 11)
!1859 = !DILocation(line: 261, column: 24, scope: !1858)
!1860 = !DILocation(line: 261, column: 13, scope: !1858)
!1861 = !DILocation(line: 261, column: 11, scope: !1855)
!1862 = !DILocation(line: 262, column: 34, scope: !1858)
!1863 = !DILocation(line: 262, column: 39, scope: !1858)
!1864 = !DILocation(line: 262, column: 48, scope: !1858)
!1865 = !DILocation(line: 262, column: 27, scope: !1858)
!1866 = !DILocation(line: 262, column: 9, scope: !1858)
!1867 = !DILocation(line: 262, column: 18, scope: !1858)
!1868 = !DILocation(line: 262, column: 25, scope: !1858)
!1869 = !DILocation(line: 267, column: 13, scope: !1870)
!1870 = distinct !DILexicalBlock(scope: !1855, file: !3, line: 267, column: 11)
!1871 = !DILocation(line: 267, column: 22, scope: !1870)
!1872 = !DILocation(line: 267, column: 29, scope: !1870)
!1873 = !DILocation(line: 267, column: 49, scope: !1870)
!1874 = !DILocation(line: 267, column: 58, scope: !1870)
!1875 = !DILocation(line: 267, column: 32, scope: !1870)
!1876 = !DILocation(line: 268, column: 11, scope: !1870)
!1877 = !DILocation(line: 268, column: 19, scope: !1870)
!1878 = !DILocation(line: 268, column: 28, scope: !1870)
!1879 = !DILocation(line: 268, column: 31, scope: !1870)
!1880 = !DILocation(line: 268, column: 16, scope: !1870)
!1881 = !DILocation(line: 267, column: 11, scope: !1855)
!1882 = !DILocalVariable(name: "end_pos", scope: !1883, file: !3, line: 270, type: !57)
!1883 = distinct !DILexicalBlock(scope: !1870, file: !3, line: 269, column: 9)
!1884 = !DILocation(line: 270, column: 18, scope: !1883)
!1885 = !DILocation(line: 270, column: 28, scope: !1883)
!1886 = !DILocation(line: 270, column: 37, scope: !1883)
!1887 = !DILocation(line: 270, column: 40, scope: !1883)
!1888 = !DILocation(line: 271, column: 15, scope: !1889)
!1889 = distinct !DILexicalBlock(scope: !1883, file: !3, line: 271, column: 15)
!1890 = !DILocation(line: 271, column: 27, scope: !1889)
!1891 = !DILocation(line: 271, column: 15, scope: !1883)
!1892 = !DILocation(line: 272, column: 34, scope: !1889)
!1893 = !DILocation(line: 272, column: 27, scope: !1889)
!1894 = !DILocation(line: 272, column: 25, scope: !1889)
!1895 = !DILocation(line: 272, column: 13, scope: !1889)
!1896 = !DILocation(line: 274, column: 15, scope: !1897)
!1897 = distinct !DILexicalBlock(scope: !1883, file: !3, line: 274, column: 15)
!1898 = !DILocation(line: 274, column: 25, scope: !1897)
!1899 = !DILocation(line: 274, column: 23, scope: !1897)
!1900 = !DILocation(line: 274, column: 15, scope: !1883)
!1901 = !DILocation(line: 284, column: 23, scope: !1902)
!1902 = distinct !DILexicalBlock(scope: !1897, file: !3, line: 275, column: 13)
!1903 = !DILocation(line: 284, column: 33, scope: !1902)
!1904 = !DILocation(line: 284, column: 31, scope: !1902)
!1905 = !DILocation(line: 284, column: 51, scope: !1902)
!1906 = !DILocation(line: 284, column: 61, scope: !1902)
!1907 = !DILocation(line: 284, column: 59, scope: !1902)
!1908 = !DILocation(line: 284, column: 21, scope: !1902)
!1909 = !DILocation(line: 285, column: 25, scope: !1902)
!1910 = !DILocation(line: 286, column: 13, scope: !1902)
!1911 = !DILocalVariable(name: "hi_pos", scope: !1912, file: !3, line: 289, type: !1770)
!1912 = distinct !DILexicalBlock(scope: !1897, file: !3, line: 288, column: 13)
!1913 = !DILocation(line: 289, column: 21, scope: !1912)
!1914 = !DILocation(line: 289, column: 30, scope: !1912)
!1915 = !DILocation(line: 289, column: 40, scope: !1912)
!1916 = !DILocation(line: 289, column: 51, scope: !1912)
!1917 = !DILocation(line: 289, column: 76, scope: !1912)
!1918 = !DILocation(line: 289, column: 48, scope: !1912)
!1919 = !DILocation(line: 289, column: 38, scope: !1912)
!1920 = !DILocation(line: 290, column: 24, scope: !1921)
!1921 = distinct !DILexicalBlock(scope: !1912, file: !3, line: 290, column: 19)
!1922 = !DILocation(line: 290, column: 21, scope: !1921)
!1923 = !DILocation(line: 290, column: 36, scope: !1921)
!1924 = !DILocation(line: 290, column: 39, scope: !1921)
!1925 = !DILocation(line: 290, column: 53, scope: !1921)
!1926 = !DILocation(line: 290, column: 51, scope: !1921)
!1927 = !DILocation(line: 291, column: 19, scope: !1921)
!1928 = !DILocation(line: 291, column: 34, scope: !1921)
!1929 = !DILocation(line: 291, column: 38, scope: !1921)
!1930 = !DILocation(line: 291, column: 27, scope: !1921)
!1931 = !DILocation(line: 291, column: 24, scope: !1921)
!1932 = !DILocation(line: 290, column: 19, scope: !1912)
!1933 = !DILocation(line: 292, column: 25, scope: !1921)
!1934 = !DILocation(line: 292, column: 34, scope: !1921)
!1935 = !DILocation(line: 292, column: 32, scope: !1921)
!1936 = !DILocation(line: 292, column: 23, scope: !1921)
!1937 = !DILocation(line: 292, column: 17, scope: !1921)
!1938 = !DILocation(line: 294, column: 9, scope: !1883)
!1939 = !DILocation(line: 296, column: 13, scope: !1940)
!1940 = distinct !DILexicalBlock(scope: !1855, file: !3, line: 296, column: 11)
!1941 = !DILocation(line: 296, column: 11, scope: !1855)
!1942 = !DILocation(line: 298, column: 21, scope: !1943)
!1943 = distinct !DILexicalBlock(scope: !1940, file: !3, line: 297, column: 9)
!1944 = !DILocation(line: 298, column: 11, scope: !1943)
!1945 = !DILocation(line: 299, column: 11, scope: !1943)
!1946 = !DILocation(line: 299, column: 43, scope: !1943)
!1947 = !DILocation(line: 299, column: 47, scope: !1943)
!1948 = !DILocation(line: 299, column: 32, scope: !1943)
!1949 = !DILocation(line: 299, column: 30, scope: !1943)
!1950 = !DILocation(line: 299, column: 66, scope: !1943)
!1951 = !DILocation(line: 301, column: 19, scope: !1952)
!1952 = distinct !DILexicalBlock(scope: !1953, file: !3, line: 301, column: 19)
!1953 = distinct !DILexicalBlock(scope: !1943, file: !3, line: 300, column: 13)
!1954 = !DILocation(line: 301, column: 30, scope: !1952)
!1955 = !DILocation(line: 301, column: 19, scope: !1953)
!1956 = !DILocation(line: 303, column: 29, scope: !1957)
!1957 = distinct !DILexicalBlock(scope: !1952, file: !3, line: 302, column: 17)
!1958 = !DILocation(line: 303, column: 42, scope: !1957)
!1959 = !DILocation(line: 303, column: 19, scope: !1957)
!1960 = !DILocation(line: 304, column: 22, scope: !1957)
!1961 = !DILocation(line: 305, column: 19, scope: !1957)
!1962 = !DILocation(line: 307, column: 24, scope: !1953)
!1963 = !DILocation(line: 307, column: 21, scope: !1953)
!1964 = distinct !{!1964, !1945, !1965, !975}
!1965 = !DILocation(line: 308, column: 13, scope: !1943)
!1966 = !DILocation(line: 309, column: 9, scope: !1943)
!1967 = !DILocation(line: 310, column: 5, scope: !1855)
!1968 = !DILocation(line: 311, column: 13, scope: !1969)
!1969 = distinct !DILexicalBlock(scope: !1846, file: !3, line: 311, column: 12)
!1970 = !DILocation(line: 311, column: 25, scope: !1969)
!1971 = !DILocation(line: 311, column: 29, scope: !1969)
!1972 = !DILocation(line: 311, column: 12, scope: !1846)
!1973 = !DILocalVariable(name: "long_lines", scope: !1974, file: !3, line: 315, type: !89)
!1974 = distinct !DILexicalBlock(scope: !1969, file: !3, line: 312, column: 5)
!1975 = !DILocation(line: 315, column: 12, scope: !1974)
!1976 = !DILocation(line: 316, column: 7, scope: !1974)
!1977 = !DILocation(line: 316, column: 39, scope: !1974)
!1978 = !DILocation(line: 316, column: 43, scope: !1974)
!1979 = !DILocation(line: 316, column: 28, scope: !1974)
!1980 = !DILocation(line: 316, column: 26, scope: !1974)
!1981 = !DILocation(line: 316, column: 62, scope: !1974)
!1982 = !DILocation(line: 318, column: 15, scope: !1983)
!1983 = distinct !DILexicalBlock(scope: !1984, file: !3, line: 318, column: 15)
!1984 = distinct !DILexicalBlock(scope: !1974, file: !3, line: 317, column: 9)
!1985 = !DILocation(line: 318, column: 26, scope: !1983)
!1986 = !DILocation(line: 318, column: 15, scope: !1984)
!1987 = !DILocation(line: 320, column: 25, scope: !1988)
!1988 = distinct !DILexicalBlock(scope: !1983, file: !3, line: 319, column: 13)
!1989 = !DILocation(line: 320, column: 38, scope: !1988)
!1990 = !DILocation(line: 320, column: 15, scope: !1988)
!1991 = !DILocation(line: 321, column: 18, scope: !1988)
!1992 = !DILocation(line: 322, column: 15, scope: !1988)
!1993 = !DILocation(line: 325, column: 20, scope: !1984)
!1994 = !DILocation(line: 325, column: 17, scope: !1984)
!1995 = !DILocalVariable(name: "p", scope: !1984, file: !3, line: 327, type: !56)
!1996 = !DILocation(line: 327, column: 17, scope: !1984)
!1997 = !DILocation(line: 327, column: 21, scope: !1984)
!1998 = !DILocalVariable(name: "end", scope: !1984, file: !3, line: 328, type: !56)
!1999 = !DILocation(line: 328, column: 17, scope: !1984)
!2000 = !DILocation(line: 328, column: 23, scope: !1984)
!2001 = !DILocation(line: 328, column: 27, scope: !1984)
!2002 = !DILocation(line: 328, column: 25, scope: !1984)
!2003 = !DILocalVariable(name: "plines", scope: !1984, file: !3, line: 329, type: !75)
!2004 = !DILocation(line: 329, column: 21, scope: !1984)
!2005 = !DILocation(line: 329, column: 30, scope: !1984)
!2006 = !DILocation(line: 331, column: 17, scope: !2007)
!2007 = distinct !DILexicalBlock(scope: !1984, file: !3, line: 331, column: 15)
!2008 = !DILocation(line: 331, column: 15, scope: !1984)
!2009 = !DILocation(line: 334, column: 15, scope: !2010)
!2010 = distinct !DILexicalBlock(scope: !2007, file: !3, line: 332, column: 13)
!2011 = !DILocation(line: 334, column: 22, scope: !2010)
!2012 = !DILocation(line: 334, column: 27, scope: !2010)
!2013 = !DILocation(line: 334, column: 24, scope: !2010)
!2014 = !DILocation(line: 335, column: 28, scope: !2010)
!2015 = !DILocation(line: 335, column: 26, scope: !2010)
!2016 = !DILocation(line: 335, column: 31, scope: !2010)
!2017 = !DILocation(line: 335, column: 23, scope: !2010)
!2018 = distinct !{!2018, !2009, !2019, !975}
!2019 = !DILocation(line: 335, column: 34, scope: !2010)
!2020 = !DILocation(line: 336, column: 13, scope: !2010)
!2021 = !DILocation(line: 340, column: 15, scope: !2022)
!2022 = distinct !DILexicalBlock(scope: !2007, file: !3, line: 338, column: 13)
!2023 = !DILocation(line: 340, column: 35, scope: !2022)
!2024 = !DILocation(line: 340, column: 44, scope: !2022)
!2025 = !DILocation(line: 340, column: 50, scope: !2022)
!2026 = !DILocation(line: 340, column: 48, scope: !2022)
!2027 = !DILocation(line: 340, column: 27, scope: !2022)
!2028 = !DILocation(line: 340, column: 25, scope: !2022)
!2029 = !DILocation(line: 342, column: 19, scope: !2030)
!2030 = distinct !DILexicalBlock(scope: !2022, file: !3, line: 341, column: 17)
!2031 = !DILocation(line: 343, column: 19, scope: !2030)
!2032 = distinct !{!2032, !2021, !2033, !975}
!2033 = !DILocation(line: 344, column: 17, scope: !2022)
!2034 = !DILocation(line: 353, column: 15, scope: !2035)
!2035 = distinct !DILexicalBlock(scope: !1984, file: !3, line: 353, column: 15)
!2036 = !DILocation(line: 353, column: 23, scope: !2035)
!2037 = !DILocation(line: 353, column: 21, scope: !2035)
!2038 = !DILocation(line: 353, column: 33, scope: !2035)
!2039 = !DILocation(line: 353, column: 44, scope: !2035)
!2040 = !DILocation(line: 353, column: 30, scope: !2035)
!2041 = !DILocation(line: 353, column: 15, scope: !1984)
!2042 = !DILocation(line: 354, column: 24, scope: !2035)
!2043 = !DILocation(line: 354, column: 13, scope: !2035)
!2044 = !DILocation(line: 356, column: 24, scope: !2035)
!2045 = distinct !{!2045, !1976, !2046, !975}
!2046 = !DILocation(line: 357, column: 9, scope: !1974)
!2047 = !DILocation(line: 358, column: 5, scope: !1974)
!2048 = !DILocation(line: 361, column: 12, scope: !2049)
!2049 = distinct !DILexicalBlock(scope: !1969, file: !3, line: 361, column: 12)
!2050 = !DILocation(line: 361, column: 23, scope: !2049)
!2051 = !DILocation(line: 361, column: 12, scope: !1969)
!2052 = !DILocalVariable(name: "in_word", scope: !2053, file: !3, line: 363, type: !89)
!2053 = distinct !DILexicalBlock(scope: !2049, file: !3, line: 362, column: 5)
!2054 = !DILocation(line: 363, column: 12, scope: !2053)
!2055 = !DILocalVariable(name: "linepos", scope: !2053, file: !3, line: 364, type: !75)
!2056 = !DILocation(line: 364, column: 17, scope: !2053)
!2057 = !DILocalVariable(name: "state", scope: !2053, file: !3, line: 365, type: !2058)
!2058 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !2059, line: 6, baseType: !2060)
!2059 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/mbstate_t.h", directory: "")
!2060 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !2061, line: 21, baseType: !2062)
!2061 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h", directory: "")
!2062 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2061, line: 13, size: 64, elements: !2063)
!2063 = !{!2064, !2065}
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !2062, file: !2061, line: 15, baseType: !60, size: 32)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !2062, file: !2061, line: 20, baseType: !2066, size: 32, offset: 32)
!2066 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2062, file: !2061, line: 16, size: 32, elements: !2067)
!2067 = !{!2068, !2069}
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !2066, file: !2061, line: 18, baseType: !7, size: 32)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !2066, file: !2061, line: 19, baseType: !2070, size: 32)
!2070 = !DICompositeType(tag: DW_TAG_array_type, baseType: !54, size: 32, elements: !2071)
!2071 = !{!2072}
!2072 = !DISubrange(count: 4)
!2073 = !DILocation(line: 365, column: 17, scope: !2053)
!2074 = !DILocalVariable(name: "in_shift", scope: !2053, file: !3, line: 366, type: !89)
!2075 = !DILocation(line: 366, column: 12, scope: !2053)
!2076 = !DILocalVariable(name: "prev", scope: !2053, file: !3, line: 375, type: !57)
!2077 = !DILocation(line: 375, column: 14, scope: !2053)
!2078 = !DILocation(line: 380, column: 7, scope: !2053)
!2079 = !DILocation(line: 380, column: 39, scope: !2053)
!2080 = !DILocation(line: 380, column: 43, scope: !2053)
!2081 = !DILocation(line: 380, column: 49, scope: !2053)
!2082 = !DILocation(line: 380, column: 47, scope: !2053)
!2083 = !DILocation(line: 380, column: 69, scope: !2053)
!2084 = !DILocation(line: 380, column: 67, scope: !2053)
!2085 = !DILocation(line: 380, column: 28, scope: !2053)
!2086 = !DILocation(line: 380, column: 26, scope: !2053)
!2087 = !DILocation(line: 380, column: 76, scope: !2053)
!2088 = !DILocalVariable(name: "p", scope: !2089, file: !3, line: 382, type: !52)
!2089 = distinct !DILexicalBlock(scope: !2053, file: !3, line: 381, column: 9)
!2090 = !DILocation(line: 382, column: 23, scope: !2089)
!2091 = !DILocalVariable(name: "backup_state", scope: !2089, file: !3, line: 384, type: !2058)
!2092 = !DILocation(line: 384, column: 21, scope: !2089)
!2093 = !DILocation(line: 386, column: 15, scope: !2094)
!2094 = distinct !DILexicalBlock(scope: !2089, file: !3, line: 386, column: 15)
!2095 = !DILocation(line: 386, column: 26, scope: !2094)
!2096 = !DILocation(line: 386, column: 15, scope: !2089)
!2097 = !DILocation(line: 388, column: 25, scope: !2098)
!2098 = distinct !DILexicalBlock(scope: !2094, file: !3, line: 387, column: 13)
!2099 = !DILocation(line: 388, column: 38, scope: !2098)
!2100 = !DILocation(line: 388, column: 15, scope: !2098)
!2101 = !DILocation(line: 389, column: 18, scope: !2098)
!2102 = !DILocation(line: 390, column: 15, scope: !2098)
!2103 = !DILocation(line: 393, column: 20, scope: !2089)
!2104 = !DILocation(line: 393, column: 17, scope: !2089)
!2105 = !DILocation(line: 394, column: 15, scope: !2089)
!2106 = !DILocation(line: 394, column: 13, scope: !2089)
!2107 = !DILocation(line: 395, column: 25, scope: !2089)
!2108 = !DILocation(line: 395, column: 22, scope: !2089)
!2109 = !DILocation(line: 396, column: 11, scope: !2089)
!2110 = !DILocalVariable(name: "wide_char", scope: !2111, file: !3, line: 398, type: !2112)
!2111 = distinct !DILexicalBlock(scope: !2089, file: !3, line: 397, column: 13)
!2112 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !58, line: 74, baseType: !60)
!2113 = !DILocation(line: 398, column: 23, scope: !2111)
!2114 = !DILocalVariable(name: "n", scope: !2111, file: !3, line: 399, type: !57)
!2115 = !DILocation(line: 399, column: 22, scope: !2111)
!2116 = !DILocalVariable(name: "wide", scope: !2111, file: !3, line: 400, type: !89)
!2117 = !DILocation(line: 400, column: 20, scope: !2111)
!2118 = !DILocation(line: 402, column: 20, scope: !2119)
!2119 = distinct !DILexicalBlock(scope: !2111, file: !3, line: 402, column: 19)
!2120 = !DILocation(line: 402, column: 29, scope: !2119)
!2121 = !DILocation(line: 402, column: 43, scope: !2119)
!2122 = !DILocation(line: 402, column: 42, scope: !2119)
!2123 = !DILocation(line: 402, column: 32, scope: !2119)
!2124 = !DILocation(line: 402, column: 19, scope: !2111)
!2125 = !DILocation(line: 406, column: 21, scope: !2126)
!2126 = distinct !DILexicalBlock(scope: !2119, file: !3, line: 403, column: 17)
!2127 = !DILocation(line: 407, column: 32, scope: !2126)
!2128 = !DILocation(line: 407, column: 31, scope: !2126)
!2129 = !DILocation(line: 407, column: 29, scope: !2126)
!2130 = !DILocation(line: 408, column: 24, scope: !2126)
!2131 = !DILocation(line: 409, column: 17, scope: !2126)
!2132 = !DILocation(line: 412, column: 28, scope: !2133)
!2133 = distinct !DILexicalBlock(scope: !2119, file: !3, line: 411, column: 17)
!2134 = !DILocation(line: 414, column: 34, scope: !2133)
!2135 = !DILocation(line: 416, column: 44, scope: !2133)
!2136 = !DILocation(line: 416, column: 47, scope: !2133)
!2137 = !DILocation(line: 416, column: 23, scope: !2133)
!2138 = !DILocation(line: 416, column: 21, scope: !2133)
!2139 = !DILocation(line: 417, column: 23, scope: !2140)
!2140 = distinct !DILexicalBlock(scope: !2133, file: !3, line: 417, column: 23)
!2141 = !DILocation(line: 417, column: 25, scope: !2140)
!2142 = !DILocation(line: 417, column: 23, scope: !2133)
!2143 = !DILocation(line: 420, column: 31, scope: !2144)
!2144 = distinct !DILexicalBlock(scope: !2140, file: !3, line: 418, column: 21)
!2145 = !DILocation(line: 422, column: 23, scope: !2144)
!2146 = !DILocation(line: 424, column: 23, scope: !2147)
!2147 = distinct !DILexicalBlock(scope: !2133, file: !3, line: 424, column: 23)
!2148 = !DILocation(line: 424, column: 25, scope: !2147)
!2149 = !DILocation(line: 424, column: 23, scope: !2133)
!2150 = !DILocation(line: 430, column: 24, scope: !2151)
!2151 = distinct !DILexicalBlock(scope: !2147, file: !3, line: 425, column: 21)
!2152 = !DILocation(line: 431, column: 33, scope: !2151)
!2153 = !DILocation(line: 432, column: 23, scope: !2151)
!2154 = !DILocation(line: 434, column: 23, scope: !2155)
!2155 = distinct !DILexicalBlock(scope: !2133, file: !3, line: 434, column: 23)
!2156 = !DILocation(line: 434, column: 23, scope: !2133)
!2157 = !DILocation(line: 435, column: 30, scope: !2155)
!2158 = !DILocation(line: 435, column: 21, scope: !2155)
!2159 = !DILocation(line: 436, column: 23, scope: !2160)
!2160 = distinct !DILexicalBlock(scope: !2133, file: !3, line: 436, column: 23)
!2161 = !DILocation(line: 436, column: 25, scope: !2160)
!2162 = !DILocation(line: 436, column: 23, scope: !2133)
!2163 = !DILocation(line: 438, column: 33, scope: !2164)
!2164 = distinct !DILexicalBlock(scope: !2160, file: !3, line: 437, column: 21)
!2165 = !DILocation(line: 439, column: 25, scope: !2164)
!2166 = !DILocation(line: 440, column: 21, scope: !2164)
!2167 = !DILocation(line: 443, column: 23, scope: !2111)
!2168 = !DILocation(line: 443, column: 15, scope: !2111)
!2169 = !DILocation(line: 446, column: 24, scope: !2170)
!2170 = distinct !DILexicalBlock(scope: !2111, file: !3, line: 444, column: 17)
!2171 = !DILocation(line: 447, column: 19, scope: !2170)
!2172 = !DILocation(line: 450, column: 23, scope: !2173)
!2173 = distinct !DILexicalBlock(scope: !2170, file: !3, line: 450, column: 23)
!2174 = !DILocation(line: 450, column: 33, scope: !2173)
!2175 = !DILocation(line: 450, column: 31, scope: !2173)
!2176 = !DILocation(line: 450, column: 23, scope: !2170)
!2177 = !DILocation(line: 451, column: 34, scope: !2173)
!2178 = !DILocation(line: 451, column: 32, scope: !2173)
!2179 = !DILocation(line: 451, column: 21, scope: !2173)
!2180 = !DILocation(line: 452, column: 27, scope: !2170)
!2181 = !DILocation(line: 453, column: 19, scope: !2170)
!2182 = !DILocation(line: 455, column: 35, scope: !2170)
!2183 = !DILocation(line: 455, column: 43, scope: !2170)
!2184 = !DILocation(line: 455, column: 32, scope: !2170)
!2185 = !DILocation(line: 455, column: 27, scope: !2170)
!2186 = !DILocation(line: 456, column: 19, scope: !2170)
!2187 = !DILocation(line: 458, column: 26, scope: !2170)
!2188 = !DILocation(line: 459, column: 19, scope: !2170)
!2189 = !DILabel(scope: !2170, name: "mb_word_separator", file: !3, line: 461)
!2190 = !DILocation(line: 461, column: 17, scope: !2170)
!2191 = !DILocation(line: 462, column: 28, scope: !2170)
!2192 = !DILocation(line: 462, column: 25, scope: !2170)
!2193 = !DILocation(line: 463, column: 27, scope: !2170)
!2194 = !DILocation(line: 464, column: 19, scope: !2170)
!2195 = !DILocation(line: 466, column: 23, scope: !2196)
!2196 = distinct !DILexicalBlock(scope: !2170, file: !3, line: 466, column: 23)
!2197 = !DILocation(line: 466, column: 28, scope: !2196)
!2198 = !DILocation(line: 466, column: 41, scope: !2196)
!2199 = !DILocation(line: 466, column: 31, scope: !2196)
!2200 = !DILocation(line: 466, column: 23, scope: !2170)
!2201 = !DILocation(line: 470, column: 27, scope: !2202)
!2202 = distinct !DILexicalBlock(scope: !2203, file: !3, line: 470, column: 27)
!2203 = distinct !DILexicalBlock(scope: !2196, file: !3, line: 467, column: 21)
!2204 = !DILocation(line: 470, column: 27, scope: !2203)
!2205 = !DILocalVariable(name: "width", scope: !2206, file: !3, line: 472, type: !60)
!2206 = distinct !DILexicalBlock(scope: !2202, file: !3, line: 471, column: 25)
!2207 = !DILocation(line: 472, column: 31, scope: !2206)
!2208 = !DILocation(line: 472, column: 48, scope: !2206)
!2209 = !DILocation(line: 472, column: 39, scope: !2206)
!2210 = !DILocation(line: 473, column: 31, scope: !2211)
!2211 = distinct !DILexicalBlock(scope: !2206, file: !3, line: 473, column: 31)
!2212 = !DILocation(line: 473, column: 37, scope: !2211)
!2213 = !DILocation(line: 473, column: 31, scope: !2206)
!2214 = !DILocation(line: 474, column: 40, scope: !2211)
!2215 = !DILocation(line: 474, column: 37, scope: !2211)
!2216 = !DILocation(line: 474, column: 29, scope: !2211)
!2217 = !DILocation(line: 475, column: 25, scope: !2206)
!2218 = !DILocation(line: 476, column: 37, scope: !2219)
!2219 = distinct !DILexicalBlock(scope: !2203, file: !3, line: 476, column: 27)
!2220 = !DILocation(line: 476, column: 27, scope: !2219)
!2221 = !DILocation(line: 476, column: 48, scope: !2219)
!2222 = !DILocation(line: 476, column: 63, scope: !2219)
!2223 = !DILocation(line: 476, column: 51, scope: !2219)
!2224 = !DILocation(line: 476, column: 27, scope: !2203)
!2225 = !DILocation(line: 477, column: 25, scope: !2219)
!2226 = !DILocation(line: 478, column: 31, scope: !2203)
!2227 = !DILocation(line: 479, column: 21, scope: !2203)
!2228 = !DILocation(line: 480, column: 29, scope: !2229)
!2229 = distinct !DILexicalBlock(scope: !2196, file: !3, line: 480, column: 28)
!2230 = !DILocation(line: 480, column: 34, scope: !2229)
!2231 = !DILocation(line: 480, column: 37, scope: !2229)
!2232 = !DILocation(line: 480, column: 28, scope: !2196)
!2233 = !DILocation(line: 482, column: 30, scope: !2234)
!2234 = distinct !DILexicalBlock(scope: !2229, file: !3, line: 481, column: 21)
!2235 = !DILocation(line: 483, column: 27, scope: !2236)
!2236 = distinct !DILexicalBlock(scope: !2234, file: !3, line: 483, column: 27)
!2237 = !DILocation(line: 483, column: 27, scope: !2234)
!2238 = !DILocation(line: 484, column: 25, scope: !2236)
!2239 = !DILocation(line: 485, column: 31, scope: !2234)
!2240 = !DILocation(line: 486, column: 21, scope: !2234)
!2241 = !DILocation(line: 487, column: 19, scope: !2170)
!2242 = !DILocation(line: 490, column: 20, scope: !2111)
!2243 = !DILocation(line: 490, column: 17, scope: !2111)
!2244 = !DILocation(line: 491, column: 29, scope: !2111)
!2245 = !DILocation(line: 491, column: 26, scope: !2111)
!2246 = !DILocation(line: 492, column: 20, scope: !2111)
!2247 = !DILocation(line: 493, column: 13, scope: !2111)
!2248 = !DILocation(line: 494, column: 18, scope: !2089)
!2249 = !DILocation(line: 494, column: 29, scope: !2089)
!2250 = distinct !{!2250, !2109, !2251, !975}
!2251 = !DILocation(line: 494, column: 32, scope: !2089)
!2252 = !DILocation(line: 497, column: 15, scope: !2253)
!2253 = distinct !DILexicalBlock(scope: !2089, file: !3, line: 497, column: 15)
!2254 = !DILocation(line: 497, column: 26, scope: !2253)
!2255 = !DILocation(line: 497, column: 15, scope: !2089)
!2256 = !DILocation(line: 499, column: 19, scope: !2257)
!2257 = distinct !DILexicalBlock(scope: !2258, file: !3, line: 499, column: 19)
!2258 = distinct !DILexicalBlock(scope: !2253, file: !3, line: 498, column: 13)
!2259 = !DILocation(line: 499, column: 30, scope: !2257)
!2260 = !DILocation(line: 499, column: 19, scope: !2258)
!2261 = !DILocation(line: 502, column: 20, scope: !2262)
!2262 = distinct !DILexicalBlock(scope: !2257, file: !3, line: 500, column: 17)
!2263 = !DILocation(line: 503, column: 29, scope: !2262)
!2264 = !DILocation(line: 504, column: 17, scope: !2262)
!2265 = !DILocation(line: 505, column: 15, scope: !2258)
!2266 = !DILocation(line: 505, column: 29, scope: !2258)
!2267 = !DILocation(line: 505, column: 32, scope: !2258)
!2268 = !DILocation(line: 506, column: 13, scope: !2258)
!2269 = !DILocation(line: 507, column: 18, scope: !2089)
!2270 = !DILocation(line: 507, column: 16, scope: !2089)
!2271 = distinct !{!2271, !2078, !2272, !975}
!2272 = !DILocation(line: 509, column: 9, scope: !2053)
!2273 = !DILocation(line: 510, column: 11, scope: !2274)
!2274 = distinct !DILexicalBlock(scope: !2053, file: !3, line: 510, column: 11)
!2275 = !DILocation(line: 510, column: 21, scope: !2274)
!2276 = !DILocation(line: 510, column: 19, scope: !2274)
!2277 = !DILocation(line: 510, column: 11, scope: !2053)
!2278 = !DILocation(line: 511, column: 22, scope: !2274)
!2279 = !DILocation(line: 511, column: 20, scope: !2274)
!2280 = !DILocation(line: 511, column: 9, scope: !2274)
!2281 = !DILocation(line: 512, column: 16, scope: !2053)
!2282 = !DILocation(line: 512, column: 13, scope: !2053)
!2283 = !DILocation(line: 513, column: 5, scope: !2053)
!2284 = !DILocalVariable(name: "in_word", scope: !2285, file: !3, line: 517, type: !89)
!2285 = distinct !DILexicalBlock(scope: !2049, file: !3, line: 516, column: 5)
!2286 = !DILocation(line: 517, column: 12, scope: !2285)
!2287 = !DILocalVariable(name: "linepos", scope: !2285, file: !3, line: 518, type: !75)
!2288 = !DILocation(line: 518, column: 17, scope: !2285)
!2289 = !DILocation(line: 520, column: 7, scope: !2285)
!2290 = !DILocation(line: 520, column: 39, scope: !2285)
!2291 = !DILocation(line: 520, column: 43, scope: !2285)
!2292 = !DILocation(line: 520, column: 28, scope: !2285)
!2293 = !DILocation(line: 520, column: 26, scope: !2285)
!2294 = !DILocation(line: 520, column: 62, scope: !2285)
!2295 = !DILocalVariable(name: "p", scope: !2296, file: !3, line: 522, type: !52)
!2296 = distinct !DILexicalBlock(scope: !2285, file: !3, line: 521, column: 9)
!2297 = !DILocation(line: 522, column: 23, scope: !2296)
!2298 = !DILocation(line: 522, column: 27, scope: !2296)
!2299 = !DILocation(line: 523, column: 15, scope: !2300)
!2300 = distinct !DILexicalBlock(scope: !2296, file: !3, line: 523, column: 15)
!2301 = !DILocation(line: 523, column: 26, scope: !2300)
!2302 = !DILocation(line: 523, column: 15, scope: !2296)
!2303 = !DILocation(line: 525, column: 25, scope: !2304)
!2304 = distinct !DILexicalBlock(scope: !2300, file: !3, line: 524, column: 13)
!2305 = !DILocation(line: 525, column: 38, scope: !2304)
!2306 = !DILocation(line: 525, column: 15, scope: !2304)
!2307 = !DILocation(line: 526, column: 18, scope: !2304)
!2308 = !DILocation(line: 527, column: 15, scope: !2304)
!2309 = !DILocation(line: 530, column: 20, scope: !2296)
!2310 = !DILocation(line: 530, column: 17, scope: !2296)
!2311 = !DILocation(line: 531, column: 11, scope: !2296)
!2312 = !DILocation(line: 533, column: 25, scope: !2313)
!2313 = distinct !DILexicalBlock(scope: !2296, file: !3, line: 532, column: 13)
!2314 = !DILocation(line: 533, column: 23, scope: !2313)
!2315 = !DILocation(line: 533, column: 15, scope: !2313)
!2316 = !DILocation(line: 536, column: 24, scope: !2317)
!2317 = distinct !DILexicalBlock(scope: !2313, file: !3, line: 534, column: 17)
!2318 = !DILocation(line: 537, column: 19, scope: !2317)
!2319 = !DILocation(line: 540, column: 23, scope: !2320)
!2320 = distinct !DILexicalBlock(scope: !2317, file: !3, line: 540, column: 23)
!2321 = !DILocation(line: 540, column: 33, scope: !2320)
!2322 = !DILocation(line: 540, column: 31, scope: !2320)
!2323 = !DILocation(line: 540, column: 23, scope: !2317)
!2324 = !DILocation(line: 541, column: 34, scope: !2320)
!2325 = !DILocation(line: 541, column: 32, scope: !2320)
!2326 = !DILocation(line: 541, column: 21, scope: !2320)
!2327 = !DILocation(line: 542, column: 27, scope: !2317)
!2328 = !DILocation(line: 543, column: 19, scope: !2317)
!2329 = !DILocation(line: 545, column: 35, scope: !2317)
!2330 = !DILocation(line: 545, column: 43, scope: !2317)
!2331 = !DILocation(line: 545, column: 32, scope: !2317)
!2332 = !DILocation(line: 545, column: 27, scope: !2317)
!2333 = !DILocation(line: 546, column: 19, scope: !2317)
!2334 = !DILocation(line: 548, column: 26, scope: !2317)
!2335 = !DILocation(line: 549, column: 19, scope: !2317)
!2336 = !DILabel(scope: !2317, name: "word_separator", file: !3, line: 551)
!2337 = !DILocation(line: 551, column: 17, scope: !2317)
!2338 = !DILocation(line: 552, column: 28, scope: !2317)
!2339 = !DILocation(line: 552, column: 25, scope: !2317)
!2340 = !DILocation(line: 553, column: 27, scope: !2317)
!2341 = !DILocation(line: 554, column: 19, scope: !2317)
!2342 = !DILocation(line: 556, column: 23, scope: !2343)
!2343 = distinct !DILexicalBlock(scope: !2317, file: !3, line: 556, column: 23)
!2344 = !DILocation(line: 556, column: 23, scope: !2317)
!2345 = !DILocation(line: 558, column: 30, scope: !2346)
!2346 = distinct !DILexicalBlock(scope: !2343, file: !3, line: 557, column: 21)
!2347 = !DILocation(line: 559, column: 27, scope: !2348)
!2348 = distinct !DILexicalBlock(scope: !2346, file: !3, line: 559, column: 27)
!2349 = !DILocation(line: 560, column: 27, scope: !2348)
!2350 = !DILocation(line: 560, column: 51, scope: !2348)
!2351 = !DILocation(line: 560, column: 41, scope: !2348)
!2352 = !DILocation(line: 560, column: 30, scope: !2348)
!2353 = !DILocation(line: 559, column: 27, scope: !2346)
!2354 = !DILocation(line: 561, column: 25, scope: !2348)
!2355 = !DILocation(line: 562, column: 31, scope: !2346)
!2356 = !DILocation(line: 563, column: 21, scope: !2346)
!2357 = !DILocation(line: 564, column: 19, scope: !2317)
!2358 = !DILocation(line: 566, column: 13, scope: !2313)
!2359 = !DILocation(line: 567, column: 18, scope: !2296)
!2360 = distinct !{!2360, !2311, !2361, !975}
!2361 = !DILocation(line: 567, column: 30, scope: !2296)
!2362 = distinct !{!2362, !2289, !2363, !975}
!2363 = !DILocation(line: 568, column: 9, scope: !2285)
!2364 = !DILocation(line: 569, column: 11, scope: !2365)
!2365 = distinct !DILexicalBlock(scope: !2285, file: !3, line: 569, column: 11)
!2366 = !DILocation(line: 569, column: 21, scope: !2365)
!2367 = !DILocation(line: 569, column: 19, scope: !2365)
!2368 = !DILocation(line: 569, column: 11, scope: !2285)
!2369 = !DILocation(line: 570, column: 22, scope: !2365)
!2370 = !DILocation(line: 570, column: 20, scope: !2365)
!2371 = !DILocation(line: 570, column: 9, scope: !2365)
!2372 = !DILocation(line: 571, column: 16, scope: !2285)
!2373 = !DILocation(line: 571, column: 13, scope: !2285)
!2374 = !DILocation(line: 574, column: 7, scope: !2375)
!2375 = distinct !DILexicalBlock(scope: !1767, file: !3, line: 574, column: 7)
!2376 = !DILocation(line: 574, column: 21, scope: !2375)
!2377 = !DILocation(line: 574, column: 19, scope: !2375)
!2378 = !DILocation(line: 574, column: 7, scope: !1767)
!2379 = !DILocation(line: 575, column: 13, scope: !2375)
!2380 = !DILocation(line: 575, column: 11, scope: !2375)
!2381 = !DILocation(line: 575, column: 5, scope: !2375)
!2382 = !DILocation(line: 577, column: 17, scope: !1767)
!2383 = !DILocation(line: 577, column: 24, scope: !1767)
!2384 = !DILocation(line: 577, column: 31, scope: !1767)
!2385 = !DILocation(line: 577, column: 38, scope: !1767)
!2386 = !DILocation(line: 577, column: 45, scope: !1767)
!2387 = !DILocation(line: 577, column: 57, scope: !1767)
!2388 = !DILocation(line: 577, column: 3, scope: !1767)
!2389 = !DILocation(line: 578, column: 18, scope: !1767)
!2390 = !DILocation(line: 578, column: 15, scope: !1767)
!2391 = !DILocation(line: 579, column: 18, scope: !1767)
!2392 = !DILocation(line: 579, column: 15, scope: !1767)
!2393 = !DILocation(line: 580, column: 18, scope: !1767)
!2394 = !DILocation(line: 580, column: 15, scope: !1767)
!2395 = !DILocation(line: 581, column: 18, scope: !1767)
!2396 = !DILocation(line: 581, column: 15, scope: !1767)
!2397 = !DILocation(line: 582, column: 7, scope: !2398)
!2398 = distinct !DILexicalBlock(scope: !1767, file: !3, line: 582, column: 7)
!2399 = !DILocation(line: 582, column: 20, scope: !2398)
!2400 = !DILocation(line: 582, column: 18, scope: !2398)
!2401 = !DILocation(line: 582, column: 7, scope: !1767)
!2402 = !DILocation(line: 583, column: 23, scope: !2398)
!2403 = !DILocation(line: 583, column: 21, scope: !2398)
!2404 = !DILocation(line: 583, column: 5, scope: !2398)
!2405 = !DILocation(line: 585, column: 10, scope: !1767)
!2406 = !DILocation(line: 585, column: 3, scope: !1767)
!2407 = distinct !DISubprogram(name: "usable_st_size", scope: !941, file: !941, line: 705, type: !2408, scopeLine: 706, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !69)
!2408 = !DISubroutineType(types: !2409)
!2409 = !{!89, !2410}
!2410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2411, size: 64)
!2411 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1026)
!2412 = !DILocalVariable(name: "sb", arg: 1, scope: !2407, file: !941, line: 705, type: !2410)
!2413 = !DILocation(line: 705, column: 36, scope: !2407)
!2414 = !DILocation(line: 707, column: 11, scope: !2407)
!2415 = !DILocation(line: 707, column: 33, scope: !2407)
!2416 = !DILocation(line: 707, column: 36, scope: !2407)
!2417 = !DILocation(line: 708, column: 11, scope: !2407)
!2418 = !DILocation(line: 708, column: 14, scope: !2407)
!2419 = !DILocation(line: 708, column: 31, scope: !2407)
!2420 = !DILocation(line: 707, column: 3, scope: !2407)
!2421 = distinct !DISubprogram(name: "iswnbspace", scope: !3, file: !3, line: 155, type: !2422, scopeLine: 156, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !69)
!2422 = !DISubroutineType(types: !2423)
!2423 = !{!60, !2424}
!2424 = !DIDerivedType(tag: DW_TAG_typedef, name: "wint_t", file: !2425, line: 20, baseType: !7)
!2425 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/wint_t.h", directory: "")
!2426 = !DILocalVariable(name: "wc", arg: 1, scope: !2421, file: !3, line: 155, type: !2424)
!2427 = !DILocation(line: 155, column: 20, scope: !2421)
!2428 = !DILocation(line: 157, column: 12, scope: !2421)
!2429 = !DILocation(line: 158, column: 10, scope: !2421)
!2430 = !DILocation(line: 158, column: 14, scope: !2421)
!2431 = !DILocation(line: 158, column: 17, scope: !2421)
!2432 = !DILocation(line: 158, column: 27, scope: !2421)
!2433 = !DILocation(line: 158, column: 30, scope: !2421)
!2434 = !DILocation(line: 158, column: 33, scope: !2421)
!2435 = !DILocation(line: 159, column: 14, scope: !2421)
!2436 = !DILocation(line: 159, column: 17, scope: !2421)
!2437 = !DILocation(line: 159, column: 20, scope: !2421)
!2438 = !DILocation(line: 159, column: 30, scope: !2421)
!2439 = !DILocation(line: 159, column: 33, scope: !2421)
!2440 = !DILocation(line: 159, column: 36, scope: !2421)
!2441 = !DILocation(line: 0, scope: !2421)
!2442 = !DILocation(line: 157, column: 3, scope: !2421)
!2443 = distinct !DISubprogram(name: "to_uchar", scope: !941, file: !941, line: 156, type: !2444, scopeLine: 156, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !69)
!2444 = !DISubroutineType(types: !2445)
!2445 = !{!150, !54}
!2446 = !DILocalVariable(name: "ch", arg: 1, scope: !2443, file: !941, line: 156, type: !54)
!2447 = !DILocation(line: 156, column: 44, scope: !2443)
!2448 = !DILocation(line: 156, column: 57, scope: !2443)
!2449 = !DILocation(line: 156, column: 50, scope: !2443)
!2450 = distinct !DISubprogram(name: "isnbspace", scope: !3, file: !3, line: 163, type: !2451, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !69)
!2451 = !DISubroutineType(types: !2452)
!2452 = !{!60, !60}
!2453 = !DILocalVariable(name: "c", arg: 1, scope: !2450, file: !3, line: 163, type: !60)
!2454 = !DILocation(line: 163, column: 16, scope: !2450)
!2455 = !DILocation(line: 165, column: 29, scope: !2450)
!2456 = !DILocation(line: 165, column: 22, scope: !2450)
!2457 = !DILocation(line: 165, column: 10, scope: !2450)
!2458 = !DILocation(line: 165, column: 3, scope: !2450)
!2459 = distinct !DISubprogram(name: "argv_iter_init_argv", scope: !230, file: !230, line: 40, type: !2460, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !229, retainedNodes: !69)
!2460 = !DISubroutineType(types: !2461)
!2461 = !{!2462, !68}
!2462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2463, size: 64)
!2463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "argv_iterator", file: !230, line: 25, size: 384, elements: !2464)
!2464 = !{!2465, !2500, !2501, !2502, !2503, !2504}
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "fp", scope: !2463, file: !230, line: 29, baseType: !2466, size: 64)
!2466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2467, size: 64)
!2467 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1202, line: 7, baseType: !2468)
!2468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !1204, line: 49, size: 1728, elements: !2469)
!2469 = !{!2470, !2471, !2472, !2473, !2474, !2475, !2476, !2477, !2478, !2479, !2480, !2481, !2482, !2483, !2485, !2486, !2487, !2488, !2489, !2490, !2491, !2492, !2493, !2494, !2495, !2496, !2497, !2498, !2499}
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2468, file: !1204, line: 51, baseType: !60, size: 32)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2468, file: !1204, line: 54, baseType: !56, size: 64, offset: 64)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2468, file: !1204, line: 55, baseType: !56, size: 64, offset: 128)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2468, file: !1204, line: 56, baseType: !56, size: 64, offset: 192)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2468, file: !1204, line: 57, baseType: !56, size: 64, offset: 256)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2468, file: !1204, line: 58, baseType: !56, size: 64, offset: 320)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2468, file: !1204, line: 59, baseType: !56, size: 64, offset: 384)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2468, file: !1204, line: 60, baseType: !56, size: 64, offset: 448)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2468, file: !1204, line: 61, baseType: !56, size: 64, offset: 512)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2468, file: !1204, line: 64, baseType: !56, size: 64, offset: 576)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2468, file: !1204, line: 65, baseType: !56, size: 64, offset: 640)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2468, file: !1204, line: 66, baseType: !56, size: 64, offset: 704)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2468, file: !1204, line: 68, baseType: !1219, size: 64, offset: 768)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2468, file: !1204, line: 70, baseType: !2484, size: 64, offset: 832)
!2484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2468, size: 64)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2468, file: !1204, line: 72, baseType: !60, size: 32, offset: 896)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2468, file: !1204, line: 73, baseType: !60, size: 32, offset: 928)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2468, file: !1204, line: 74, baseType: !1044, size: 64, offset: 960)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2468, file: !1204, line: 77, baseType: !61, size: 16, offset: 1024)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2468, file: !1204, line: 78, baseType: !1228, size: 8, offset: 1040)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2468, file: !1204, line: 79, baseType: !1230, size: 8, offset: 1048)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2468, file: !1204, line: 81, baseType: !1232, size: 64, offset: 1088)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2468, file: !1204, line: 89, baseType: !1235, size: 64, offset: 1152)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2468, file: !1204, line: 91, baseType: !1237, size: 64, offset: 1216)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2468, file: !1204, line: 92, baseType: !1240, size: 64, offset: 1280)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2468, file: !1204, line: 93, baseType: !2484, size: 64, offset: 1344)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2468, file: !1204, line: 94, baseType: !55, size: 64, offset: 1408)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2468, file: !1204, line: 95, baseType: !57, size: 64, offset: 1472)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2468, file: !1204, line: 96, baseType: !60, size: 32, offset: 1536)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2468, file: !1204, line: 98, baseType: !1247, size: 160, offset: 1568)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "item_idx", scope: !2463, file: !230, line: 30, baseType: !57, size: 64, offset: 64)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "tok", scope: !2463, file: !230, line: 31, baseType: !56, size: 64, offset: 128)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "buf_len", scope: !2463, file: !230, line: 32, baseType: !57, size: 64, offset: 192)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "arg_list", scope: !2463, file: !230, line: 35, baseType: !68, size: 64, offset: 256)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2463, file: !230, line: 36, baseType: !68, size: 64, offset: 320)
!2505 = !DILocalVariable(name: "argv", arg: 1, scope: !2459, file: !230, line: 40, type: !68)
!2506 = !DILocation(line: 40, column: 29, scope: !2459)
!2507 = !DILocalVariable(name: "ai", scope: !2459, file: !230, line: 42, type: !2462)
!2508 = !DILocation(line: 42, column: 25, scope: !2459)
!2509 = !DILocation(line: 42, column: 30, scope: !2459)
!2510 = !DILocation(line: 43, column: 8, scope: !2511)
!2511 = distinct !DILexicalBlock(scope: !2459, file: !230, line: 43, column: 7)
!2512 = !DILocation(line: 43, column: 7, scope: !2459)
!2513 = !DILocation(line: 44, column: 5, scope: !2511)
!2514 = !DILocation(line: 45, column: 3, scope: !2459)
!2515 = !DILocation(line: 45, column: 7, scope: !2459)
!2516 = !DILocation(line: 45, column: 10, scope: !2459)
!2517 = !DILocation(line: 46, column: 18, scope: !2459)
!2518 = !DILocation(line: 46, column: 3, scope: !2459)
!2519 = !DILocation(line: 46, column: 7, scope: !2459)
!2520 = !DILocation(line: 46, column: 16, scope: !2459)
!2521 = !DILocation(line: 47, column: 11, scope: !2459)
!2522 = !DILocation(line: 47, column: 3, scope: !2459)
!2523 = !DILocation(line: 47, column: 7, scope: !2459)
!2524 = !DILocation(line: 47, column: 9, scope: !2459)
!2525 = !DILocation(line: 48, column: 10, scope: !2459)
!2526 = !DILocation(line: 48, column: 3, scope: !2459)
!2527 = !DILocation(line: 49, column: 1, scope: !2459)
!2528 = distinct !DISubprogram(name: "argv_iter_init_stream", scope: !230, file: !230, line: 54, type: !2529, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !229, retainedNodes: !69)
!2529 = !DISubroutineType(types: !2530)
!2530 = !{!2462, !2466}
!2531 = !DILocalVariable(name: "fp", arg: 1, scope: !2528, file: !230, line: 54, type: !2466)
!2532 = !DILocation(line: 54, column: 30, scope: !2528)
!2533 = !DILocalVariable(name: "ai", scope: !2528, file: !230, line: 56, type: !2462)
!2534 = !DILocation(line: 56, column: 25, scope: !2528)
!2535 = !DILocation(line: 56, column: 30, scope: !2528)
!2536 = !DILocation(line: 57, column: 8, scope: !2537)
!2537 = distinct !DILexicalBlock(scope: !2528, file: !230, line: 57, column: 7)
!2538 = !DILocation(line: 57, column: 7, scope: !2528)
!2539 = !DILocation(line: 58, column: 5, scope: !2537)
!2540 = !DILocation(line: 59, column: 12, scope: !2528)
!2541 = !DILocation(line: 59, column: 3, scope: !2528)
!2542 = !DILocation(line: 59, column: 7, scope: !2528)
!2543 = !DILocation(line: 59, column: 10, scope: !2528)
!2544 = !DILocation(line: 60, column: 3, scope: !2528)
!2545 = !DILocation(line: 60, column: 7, scope: !2528)
!2546 = !DILocation(line: 60, column: 11, scope: !2528)
!2547 = !DILocation(line: 61, column: 3, scope: !2528)
!2548 = !DILocation(line: 61, column: 7, scope: !2528)
!2549 = !DILocation(line: 61, column: 15, scope: !2528)
!2550 = !DILocation(line: 63, column: 3, scope: !2528)
!2551 = !DILocation(line: 63, column: 7, scope: !2528)
!2552 = !DILocation(line: 63, column: 16, scope: !2528)
!2553 = !DILocation(line: 64, column: 3, scope: !2528)
!2554 = !DILocation(line: 64, column: 7, scope: !2528)
!2555 = !DILocation(line: 64, column: 16, scope: !2528)
!2556 = !DILocation(line: 65, column: 10, scope: !2528)
!2557 = !DILocation(line: 65, column: 3, scope: !2528)
!2558 = !DILocation(line: 66, column: 1, scope: !2528)
!2559 = distinct !DISubprogram(name: "argv_iter", scope: !230, file: !230, line: 69, type: !2560, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !229, retainedNodes: !69)
!2560 = !DISubroutineType(types: !2561)
!2561 = !{!56, !2462, !2562}
!2562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20, size: 64)
!2563 = !DILocalVariable(name: "ai", arg: 1, scope: !2559, file: !230, line: 69, type: !2462)
!2564 = !DILocation(line: 69, column: 34, scope: !2559)
!2565 = !DILocalVariable(name: "err", arg: 2, scope: !2559, file: !230, line: 69, type: !2562)
!2566 = !DILocation(line: 69, column: 58, scope: !2559)
!2567 = !DILocation(line: 71, column: 7, scope: !2568)
!2568 = distinct !DILexicalBlock(scope: !2559, file: !230, line: 71, column: 7)
!2569 = !DILocation(line: 71, column: 11, scope: !2568)
!2570 = !DILocation(line: 71, column: 7, scope: !2559)
!2571 = !DILocalVariable(name: "len", scope: !2572, file: !230, line: 73, type: !2573)
!2572 = distinct !DILexicalBlock(scope: !2568, file: !230, line: 72, column: 5)
!2573 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !1771, line: 77, baseType: !2574)
!2574 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !78, line: 193, baseType: !1045)
!2575 = !DILocation(line: 73, column: 15, scope: !2572)
!2576 = !DILocation(line: 73, column: 32, scope: !2572)
!2577 = !DILocation(line: 73, column: 36, scope: !2572)
!2578 = !DILocation(line: 73, column: 42, scope: !2572)
!2579 = !DILocation(line: 73, column: 46, scope: !2572)
!2580 = !DILocation(line: 73, column: 61, scope: !2572)
!2581 = !DILocation(line: 73, column: 65, scope: !2572)
!2582 = !DILocation(line: 73, column: 21, scope: !2572)
!2583 = !DILocation(line: 74, column: 11, scope: !2584)
!2584 = distinct !DILexicalBlock(scope: !2572, file: !230, line: 74, column: 11)
!2585 = !DILocation(line: 74, column: 15, scope: !2584)
!2586 = !DILocation(line: 74, column: 11, scope: !2572)
!2587 = !DILocation(line: 76, column: 24, scope: !2588)
!2588 = distinct !DILexicalBlock(scope: !2584, file: !230, line: 75, column: 9)
!2589 = !DILocation(line: 76, column: 28, scope: !2588)
!2590 = !DILocation(line: 76, column: 18, scope: !2588)
!2591 = !DILocation(line: 76, column: 12, scope: !2588)
!2592 = !DILocation(line: 76, column: 16, scope: !2588)
!2593 = !DILocation(line: 77, column: 11, scope: !2588)
!2594 = !DILocation(line: 80, column: 8, scope: !2572)
!2595 = !DILocation(line: 80, column: 12, scope: !2572)
!2596 = !DILocation(line: 81, column: 7, scope: !2572)
!2597 = !DILocation(line: 81, column: 11, scope: !2572)
!2598 = !DILocation(line: 81, column: 19, scope: !2572)
!2599 = !DILocation(line: 82, column: 14, scope: !2572)
!2600 = !DILocation(line: 82, column: 18, scope: !2572)
!2601 = !DILocation(line: 82, column: 7, scope: !2572)
!2602 = !DILocation(line: 86, column: 13, scope: !2603)
!2603 = distinct !DILexicalBlock(scope: !2604, file: !230, line: 86, column: 11)
!2604 = distinct !DILexicalBlock(scope: !2568, file: !230, line: 85, column: 5)
!2605 = !DILocation(line: 86, column: 17, scope: !2603)
!2606 = !DILocation(line: 86, column: 11, scope: !2603)
!2607 = !DILocation(line: 86, column: 20, scope: !2603)
!2608 = !DILocation(line: 86, column: 11, scope: !2604)
!2609 = !DILocation(line: 88, column: 12, scope: !2610)
!2610 = distinct !DILexicalBlock(scope: !2603, file: !230, line: 87, column: 9)
!2611 = !DILocation(line: 88, column: 16, scope: !2610)
!2612 = !DILocation(line: 89, column: 11, scope: !2610)
!2613 = !DILocation(line: 93, column: 12, scope: !2614)
!2614 = distinct !DILexicalBlock(scope: !2603, file: !230, line: 92, column: 9)
!2615 = !DILocation(line: 93, column: 16, scope: !2614)
!2616 = !DILocation(line: 94, column: 20, scope: !2614)
!2617 = !DILocation(line: 94, column: 24, scope: !2614)
!2618 = !DILocation(line: 94, column: 25, scope: !2614)
!2619 = !DILocation(line: 94, column: 18, scope: !2614)
!2620 = !DILocation(line: 94, column: 11, scope: !2614)
!2621 = !DILocation(line: 97, column: 1, scope: !2559)
!2622 = distinct !DISubprogram(name: "argv_iter_n_args", scope: !230, file: !230, line: 100, type: !2623, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !229, retainedNodes: !69)
!2623 = !DISubroutineType(types: !2624)
!2624 = !{!57, !2625}
!2625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2626, size: 64)
!2626 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2463)
!2627 = !DILocalVariable(name: "ai", arg: 1, scope: !2622, file: !230, line: 100, type: !2625)
!2628 = !DILocation(line: 100, column: 47, scope: !2622)
!2629 = !DILocation(line: 102, column: 10, scope: !2622)
!2630 = !DILocation(line: 102, column: 14, scope: !2622)
!2631 = !DILocation(line: 102, column: 19, scope: !2622)
!2632 = !DILocation(line: 102, column: 23, scope: !2622)
!2633 = !DILocation(line: 102, column: 34, scope: !2622)
!2634 = !DILocation(line: 102, column: 38, scope: !2622)
!2635 = !DILocation(line: 102, column: 42, scope: !2622)
!2636 = !DILocation(line: 102, column: 46, scope: !2622)
!2637 = !DILocation(line: 102, column: 40, scope: !2622)
!2638 = !DILocation(line: 102, column: 3, scope: !2622)
!2639 = distinct !DISubprogram(name: "argv_iter_free", scope: !230, file: !230, line: 106, type: !2640, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !229, retainedNodes: !69)
!2640 = !DISubroutineType(types: !2641)
!2641 = !{null, !2462}
!2642 = !DILocalVariable(name: "ai", arg: 1, scope: !2639, file: !230, line: 106, type: !2462)
!2643 = !DILocation(line: 106, column: 39, scope: !2639)
!2644 = !DILocation(line: 108, column: 7, scope: !2645)
!2645 = distinct !DILexicalBlock(scope: !2639, file: !230, line: 108, column: 7)
!2646 = !DILocation(line: 108, column: 11, scope: !2645)
!2647 = !DILocation(line: 108, column: 7, scope: !2639)
!2648 = !DILocation(line: 109, column: 11, scope: !2645)
!2649 = !DILocation(line: 109, column: 15, scope: !2645)
!2650 = !DILocation(line: 109, column: 5, scope: !2645)
!2651 = !DILocation(line: 110, column: 9, scope: !2639)
!2652 = !DILocation(line: 110, column: 3, scope: !2639)
!2653 = !DILocation(line: 111, column: 1, scope: !2639)
!2654 = distinct !DISubprogram(name: "close_stdout_set_file_name", scope: !134, file: !134, line: 51, type: !945, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !133, retainedNodes: !69)
!2655 = !DILocalVariable(name: "file", arg: 1, scope: !2654, file: !134, line: 51, type: !52)
!2656 = !DILocation(line: 51, column: 41, scope: !2654)
!2657 = !DILocation(line: 53, column: 15, scope: !2654)
!2658 = !DILocation(line: 53, column: 13, scope: !2654)
!2659 = !DILocation(line: 54, column: 1, scope: !2654)
!2660 = distinct !DISubprogram(name: "close_stdout_set_ignore_EPIPE", scope: !134, file: !134, line: 88, type: !2661, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !133, retainedNodes: !69)
!2661 = !DISubroutineType(types: !2662)
!2662 = !{null, !89}
!2663 = !DILocalVariable(name: "ignore", arg: 1, scope: !2660, file: !134, line: 88, type: !89)
!2664 = !DILocation(line: 88, column: 37, scope: !2660)
!2665 = !DILocation(line: 90, column: 18, scope: !2660)
!2666 = !DILocation(line: 90, column: 16, scope: !2660)
!2667 = !DILocation(line: 91, column: 1, scope: !2660)
!2668 = distinct !DISubprogram(name: "close_stdout", scope: !134, file: !134, line: 117, type: !227, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !133, retainedNodes: !69)
!2669 = !DILocation(line: 119, column: 21, scope: !2670)
!2670 = distinct !DILexicalBlock(scope: !2668, file: !134, line: 119, column: 7)
!2671 = !DILocation(line: 119, column: 7, scope: !2670)
!2672 = !DILocation(line: 119, column: 29, scope: !2670)
!2673 = !DILocation(line: 120, column: 7, scope: !2670)
!2674 = !DILocation(line: 120, column: 12, scope: !2670)
!2675 = !DILocation(line: 120, column: 25, scope: !2670)
!2676 = !DILocation(line: 120, column: 28, scope: !2670)
!2677 = !DILocation(line: 120, column: 34, scope: !2670)
!2678 = !DILocation(line: 119, column: 7, scope: !2668)
!2679 = !DILocalVariable(name: "write_error", scope: !2680, file: !134, line: 122, type: !52)
!2680 = distinct !DILexicalBlock(scope: !2670, file: !134, line: 121, column: 5)
!2681 = !DILocation(line: 122, column: 19, scope: !2680)
!2682 = !DILocation(line: 123, column: 11, scope: !2683)
!2683 = distinct !DILexicalBlock(scope: !2680, file: !134, line: 123, column: 11)
!2684 = !DILocation(line: 123, column: 11, scope: !2680)
!2685 = !DILocation(line: 124, column: 19, scope: !2683)
!2686 = !DILocation(line: 124, column: 52, scope: !2683)
!2687 = !DILocation(line: 124, column: 36, scope: !2683)
!2688 = !DILocation(line: 125, column: 16, scope: !2683)
!2689 = !DILocation(line: 124, column: 9, scope: !2683)
!2690 = !DILocation(line: 127, column: 19, scope: !2683)
!2691 = !DILocation(line: 127, column: 32, scope: !2683)
!2692 = !DILocation(line: 127, column: 9, scope: !2683)
!2693 = !DILocation(line: 129, column: 14, scope: !2680)
!2694 = !DILocation(line: 129, column: 7, scope: !2680)
!2695 = !DILocation(line: 134, column: 42, scope: !2696)
!2696 = distinct !DILexicalBlock(scope: !2668, file: !134, line: 134, column: 7)
!2697 = !DILocation(line: 134, column: 28, scope: !2696)
!2698 = !DILocation(line: 134, column: 50, scope: !2696)
!2699 = !DILocation(line: 134, column: 7, scope: !2668)
!2700 = !DILocation(line: 135, column: 12, scope: !2696)
!2701 = !DILocation(line: 135, column: 5, scope: !2696)
!2702 = !DILocation(line: 136, column: 1, scope: !2668)
!2703 = distinct !DISubprogram(name: "fdadvise", scope: !234, file: !234, line: 31, type: !2704, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !233, retainedNodes: !69)
!2704 = !DISubroutineType(types: !2705)
!2705 = !{null, !60, !1770, !1770, !2706}
!2706 = !DIDerivedType(tag: DW_TAG_typedef, name: "fadvice_t", file: !28, line: 52, baseType: !27)
!2707 = !DILocalVariable(name: "fd", arg: 1, scope: !2703, file: !234, line: 31, type: !60)
!2708 = !DILocation(line: 31, column: 15, scope: !2703)
!2709 = !DILocalVariable(name: "offset", arg: 2, scope: !2703, file: !234, line: 31, type: !1770)
!2710 = !DILocation(line: 31, column: 25, scope: !2703)
!2711 = !DILocalVariable(name: "len", arg: 3, scope: !2703, file: !234, line: 31, type: !1770)
!2712 = !DILocation(line: 31, column: 39, scope: !2703)
!2713 = !DILocalVariable(name: "advice", arg: 4, scope: !2703, file: !234, line: 31, type: !2706)
!2714 = !DILocation(line: 31, column: 54, scope: !2703)
!2715 = !DILocalVariable(name: "__x", scope: !2716, file: !234, line: 34, type: !60)
!2716 = distinct !DILexicalBlock(scope: !2703, file: !234, line: 34, column: 3)
!2717 = !DILocation(line: 34, column: 3, scope: !2716)
!2718 = !DILocation(line: 36, column: 1, scope: !2703)
!2719 = distinct !DISubprogram(name: "fadvise", scope: !234, file: !234, line: 39, type: !2720, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !233, retainedNodes: !69)
!2720 = !DISubroutineType(types: !2721)
!2721 = !{null, !2722, !2706}
!2722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2723, size: 64)
!2723 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1202, line: 7, baseType: !2724)
!2724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !1204, line: 49, size: 1728, elements: !2725)
!2725 = !{!2726, !2727, !2728, !2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2741, !2742, !2743, !2744, !2745, !2746, !2747, !2748, !2749, !2750, !2751, !2752, !2753, !2754, !2755}
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2724, file: !1204, line: 51, baseType: !60, size: 32)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2724, file: !1204, line: 54, baseType: !56, size: 64, offset: 64)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2724, file: !1204, line: 55, baseType: !56, size: 64, offset: 128)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2724, file: !1204, line: 56, baseType: !56, size: 64, offset: 192)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2724, file: !1204, line: 57, baseType: !56, size: 64, offset: 256)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2724, file: !1204, line: 58, baseType: !56, size: 64, offset: 320)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2724, file: !1204, line: 59, baseType: !56, size: 64, offset: 384)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2724, file: !1204, line: 60, baseType: !56, size: 64, offset: 448)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2724, file: !1204, line: 61, baseType: !56, size: 64, offset: 512)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2724, file: !1204, line: 64, baseType: !56, size: 64, offset: 576)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2724, file: !1204, line: 65, baseType: !56, size: 64, offset: 640)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2724, file: !1204, line: 66, baseType: !56, size: 64, offset: 704)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2724, file: !1204, line: 68, baseType: !1219, size: 64, offset: 768)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2724, file: !1204, line: 70, baseType: !2740, size: 64, offset: 832)
!2740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2724, size: 64)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2724, file: !1204, line: 72, baseType: !60, size: 32, offset: 896)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2724, file: !1204, line: 73, baseType: !60, size: 32, offset: 928)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2724, file: !1204, line: 74, baseType: !1044, size: 64, offset: 960)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2724, file: !1204, line: 77, baseType: !61, size: 16, offset: 1024)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2724, file: !1204, line: 78, baseType: !1228, size: 8, offset: 1040)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2724, file: !1204, line: 79, baseType: !1230, size: 8, offset: 1048)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2724, file: !1204, line: 81, baseType: !1232, size: 64, offset: 1088)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2724, file: !1204, line: 89, baseType: !1235, size: 64, offset: 1152)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2724, file: !1204, line: 91, baseType: !1237, size: 64, offset: 1216)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2724, file: !1204, line: 92, baseType: !1240, size: 64, offset: 1280)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2724, file: !1204, line: 93, baseType: !2740, size: 64, offset: 1344)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2724, file: !1204, line: 94, baseType: !55, size: 64, offset: 1408)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2724, file: !1204, line: 95, baseType: !57, size: 64, offset: 1472)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2724, file: !1204, line: 96, baseType: !60, size: 32, offset: 1536)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2724, file: !1204, line: 98, baseType: !1247, size: 160, offset: 1568)
!2756 = !DILocalVariable(name: "fp", arg: 1, scope: !2719, file: !234, line: 39, type: !2722)
!2757 = !DILocation(line: 39, column: 16, scope: !2719)
!2758 = !DILocalVariable(name: "advice", arg: 2, scope: !2719, file: !234, line: 39, type: !2706)
!2759 = !DILocation(line: 39, column: 30, scope: !2719)
!2760 = !DILocation(line: 41, column: 7, scope: !2761)
!2761 = distinct !DILexicalBlock(scope: !2719, file: !234, line: 41, column: 7)
!2762 = !DILocation(line: 41, column: 7, scope: !2719)
!2763 = !DILocation(line: 42, column: 23, scope: !2761)
!2764 = !DILocation(line: 42, column: 15, scope: !2761)
!2765 = !DILocation(line: 42, column: 34, scope: !2761)
!2766 = !DILocation(line: 42, column: 5, scope: !2761)
!2767 = !DILocation(line: 43, column: 1, scope: !2719)
!2768 = distinct !DISubprogram(name: "umaxtostr", scope: !2769, file: !2769, line: 36, type: !2770, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !236, retainedNodes: !69)
!2769 = !DIFile(filename: "../lib/anytostr.c", directory: "/nobackup/klee_LLVM_12/Dataset-1/coreutils-8.32/obj-llvm")
!2770 = !DISubroutineType(types: !2771)
!2771 = !{!56, !75, !56}
!2772 = !DILocalVariable(name: "i", arg: 1, scope: !2768, file: !2769, line: 36, type: !75)
!2773 = !DILocation(line: 36, column: 19, scope: !2768)
!2774 = !DILocalVariable(name: "buf", arg: 2, scope: !2768, file: !2769, line: 36, type: !56)
!2775 = !DILocation(line: 36, column: 28, scope: !2768)
!2776 = !DILocalVariable(name: "p", scope: !2768, file: !2769, line: 38, type: !56)
!2777 = !DILocation(line: 38, column: 9, scope: !2768)
!2778 = !DILocation(line: 38, column: 13, scope: !2768)
!2779 = !DILocation(line: 38, column: 17, scope: !2768)
!2780 = !DILocation(line: 39, column: 4, scope: !2768)
!2781 = !DILocation(line: 39, column: 6, scope: !2768)
!2782 = !DILocation(line: 41, column: 7, scope: !2783)
!2783 = distinct !DILexicalBlock(scope: !2768, file: !2769, line: 41, column: 7)
!2784 = !DILocation(line: 41, column: 9, scope: !2783)
!2785 = !DILocation(line: 41, column: 7, scope: !2768)
!2786 = !DILocation(line: 43, column: 7, scope: !2787)
!2787 = distinct !DILexicalBlock(scope: !2783, file: !2769, line: 42, column: 5)
!2788 = !DILocation(line: 44, column: 22, scope: !2787)
!2789 = !DILocation(line: 44, column: 24, scope: !2787)
!2790 = !DILocation(line: 44, column: 20, scope: !2787)
!2791 = !DILocation(line: 44, column: 16, scope: !2787)
!2792 = !DILocation(line: 44, column: 10, scope: !2787)
!2793 = !DILocation(line: 44, column: 14, scope: !2787)
!2794 = !DILocation(line: 44, column: 9, scope: !2787)
!2795 = !DILocation(line: 45, column: 17, scope: !2787)
!2796 = !DILocation(line: 45, column: 24, scope: !2787)
!2797 = distinct !{!2797, !2786, !2798, !975}
!2798 = !DILocation(line: 45, column: 28, scope: !2787)
!2799 = !DILocation(line: 47, column: 8, scope: !2787)
!2800 = !DILocation(line: 47, column: 12, scope: !2787)
!2801 = !DILocation(line: 48, column: 5, scope: !2787)
!2802 = !DILocation(line: 51, column: 7, scope: !2803)
!2803 = distinct !DILexicalBlock(scope: !2783, file: !2769, line: 50, column: 5)
!2804 = !DILocation(line: 52, column: 22, scope: !2803)
!2805 = !DILocation(line: 52, column: 24, scope: !2803)
!2806 = !DILocation(line: 52, column: 20, scope: !2803)
!2807 = !DILocation(line: 52, column: 16, scope: !2803)
!2808 = !DILocation(line: 52, column: 10, scope: !2803)
!2809 = !DILocation(line: 52, column: 14, scope: !2803)
!2810 = !DILocation(line: 52, column: 9, scope: !2803)
!2811 = !DILocation(line: 53, column: 17, scope: !2803)
!2812 = !DILocation(line: 53, column: 24, scope: !2803)
!2813 = distinct !{!2813, !2802, !2814, !975}
!2814 = !DILocation(line: 53, column: 28, scope: !2803)
!2815 = !DILocation(line: 56, column: 10, scope: !2768)
!2816 = !DILocation(line: 56, column: 3, scope: !2768)
!2817 = distinct !DISubprogram(name: "mb_width_aux", scope: !2818, file: !2818, line: 247, type: !2422, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !147, retainedNodes: !69)
!2818 = !DIFile(filename: "../lib/mbchar.h", directory: "/nobackup/klee_LLVM_12/Dataset-1/coreutils-8.32/obj-llvm")
!2819 = !DILocalVariable(name: "wc", arg: 1, scope: !2817, file: !2818, line: 247, type: !2424)
!2820 = !DILocation(line: 247, column: 22, scope: !2817)
!2821 = !DILocalVariable(name: "w", scope: !2817, file: !2818, line: 249, type: !60)
!2822 = !DILocation(line: 249, column: 7, scope: !2817)
!2823 = !DILocation(line: 249, column: 20, scope: !2817)
!2824 = !DILocation(line: 249, column: 11, scope: !2817)
!2825 = !DILocation(line: 252, column: 11, scope: !2817)
!2826 = !DILocation(line: 252, column: 13, scope: !2817)
!2827 = !DILocation(line: 252, column: 20, scope: !2817)
!2828 = !DILocation(line: 252, column: 34, scope: !2817)
!2829 = !DILocation(line: 252, column: 24, scope: !2817)
!2830 = !DILocation(line: 252, column: 3, scope: !2817)
!2831 = distinct !DISubprogram(name: "mb_copy", scope: !2818, file: !2818, line: 268, type: !2832, scopeLine: 269, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !147, retainedNodes: !69)
!2832 = !DISubroutineType(types: !2833)
!2833 = !{null, !2834, !2846}
!2834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2835, size: 64)
!2835 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbchar_t", file: !2818, line: 181, baseType: !2836)
!2836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mbchar", file: !2818, line: 169, size: 384, elements: !2837)
!2837 = !{!2838, !2839, !2840, !2841, !2842}
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2836, file: !2818, line: 171, baseType: !52, size: 64)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !2836, file: !2818, line: 172, baseType: !57, size: 64, offset: 64)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "wc_valid", scope: !2836, file: !2818, line: 173, baseType: !89, size: 8, offset: 128)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "wc", scope: !2836, file: !2818, line: 174, baseType: !2112, size: 32, offset: 160)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !2836, file: !2818, line: 175, baseType: !2843, size: 192, offset: 192)
!2843 = !DICompositeType(tag: DW_TAG_array_type, baseType: !54, size: 192, elements: !2844)
!2844 = !{!2845}
!2845 = !DISubrange(count: 24)
!2846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2847, size: 64)
!2847 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2835)
!2848 = !DILocalVariable(name: "new_mbc", arg: 1, scope: !2831, file: !2818, line: 268, type: !2834)
!2849 = !DILocation(line: 268, column: 20, scope: !2831)
!2850 = !DILocalVariable(name: "old_mbc", arg: 2, scope: !2831, file: !2818, line: 268, type: !2846)
!2851 = !DILocation(line: 268, column: 45, scope: !2831)
!2852 = !DILocation(line: 270, column: 7, scope: !2853)
!2853 = distinct !DILexicalBlock(scope: !2831, file: !2818, line: 270, column: 7)
!2854 = !DILocation(line: 270, column: 16, scope: !2853)
!2855 = !DILocation(line: 270, column: 24, scope: !2853)
!2856 = !DILocation(line: 270, column: 33, scope: !2853)
!2857 = !DILocation(line: 270, column: 20, scope: !2853)
!2858 = !DILocation(line: 270, column: 7, scope: !2831)
!2859 = !DILocation(line: 272, column: 16, scope: !2860)
!2860 = distinct !DILexicalBlock(scope: !2853, file: !2818, line: 271, column: 5)
!2861 = !DILocation(line: 272, column: 25, scope: !2860)
!2862 = !DILocation(line: 272, column: 34, scope: !2860)
!2863 = !DILocation(line: 272, column: 43, scope: !2860)
!2864 = !DILocation(line: 272, column: 51, scope: !2860)
!2865 = !DILocation(line: 272, column: 60, scope: !2860)
!2866 = !DILocation(line: 272, column: 7, scope: !2860)
!2867 = !DILocation(line: 273, column: 23, scope: !2860)
!2868 = !DILocation(line: 273, column: 32, scope: !2860)
!2869 = !DILocation(line: 273, column: 7, scope: !2860)
!2870 = !DILocation(line: 273, column: 16, scope: !2860)
!2871 = !DILocation(line: 273, column: 20, scope: !2860)
!2872 = !DILocation(line: 274, column: 5, scope: !2860)
!2873 = !DILocation(line: 276, column: 20, scope: !2853)
!2874 = !DILocation(line: 276, column: 29, scope: !2853)
!2875 = !DILocation(line: 276, column: 5, scope: !2853)
!2876 = !DILocation(line: 276, column: 14, scope: !2853)
!2877 = !DILocation(line: 276, column: 18, scope: !2853)
!2878 = !DILocation(line: 277, column: 20, scope: !2831)
!2879 = !DILocation(line: 277, column: 29, scope: !2831)
!2880 = !DILocation(line: 277, column: 3, scope: !2831)
!2881 = !DILocation(line: 277, column: 12, scope: !2831)
!2882 = !DILocation(line: 277, column: 18, scope: !2831)
!2883 = !DILocation(line: 278, column: 28, scope: !2884)
!2884 = distinct !DILexicalBlock(scope: !2831, file: !2818, line: 278, column: 7)
!2885 = !DILocation(line: 278, column: 37, scope: !2884)
!2886 = !DILocation(line: 278, column: 8, scope: !2884)
!2887 = !DILocation(line: 278, column: 17, scope: !2884)
!2888 = !DILocation(line: 278, column: 26, scope: !2884)
!2889 = !DILocation(line: 278, column: 7, scope: !2831)
!2890 = !DILocation(line: 279, column: 19, scope: !2884)
!2891 = !DILocation(line: 279, column: 28, scope: !2884)
!2892 = !DILocation(line: 279, column: 5, scope: !2884)
!2893 = !DILocation(line: 279, column: 14, scope: !2884)
!2894 = !DILocation(line: 279, column: 17, scope: !2884)
!2895 = !DILocation(line: 280, column: 1, scope: !2831)
!2896 = distinct !DISubprogram(name: "is_basic", scope: !2818, file: !2818, line: 316, type: !2897, scopeLine: 317, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !147, retainedNodes: !69)
!2897 = !DISubroutineType(types: !2898)
!2898 = !{!89, !54}
!2899 = !DILocalVariable(name: "c", arg: 1, scope: !2896, file: !2818, line: 316, type: !54)
!2900 = !DILocation(line: 316, column: 16, scope: !2896)
!2901 = !DILocation(line: 318, column: 43, scope: !2896)
!2902 = !DILocation(line: 318, column: 27, scope: !2896)
!2903 = !DILocation(line: 318, column: 45, scope: !2896)
!2904 = !DILocation(line: 318, column: 11, scope: !2896)
!2905 = !DILocation(line: 318, column: 71, scope: !2896)
!2906 = !DILocation(line: 318, column: 55, scope: !2896)
!2907 = !DILocation(line: 318, column: 73, scope: !2896)
!2908 = !DILocation(line: 318, column: 51, scope: !2896)
!2909 = !DILocation(line: 319, column: 10, scope: !2896)
!2910 = !DILocation(line: 318, column: 10, scope: !2896)
!2911 = !DILocation(line: 318, column: 3, scope: !2896)
!2912 = distinct !DISubprogram(name: "physmem_total", scope: !240, file: !240, line: 92, type: !2913, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !239, retainedNodes: !69)
!2913 = !DISubroutineType(types: !460)
!2914 = !DILocalVariable(name: "pages", scope: !2915, file: !240, line: 96, type: !461)
!2915 = distinct !DILexicalBlock(scope: !2912, file: !240, line: 95, column: 3)
!2916 = !DILocation(line: 96, column: 12, scope: !2915)
!2917 = !DILocation(line: 96, column: 20, scope: !2915)
!2918 = !DILocalVariable(name: "pagesize", scope: !2915, file: !240, line: 97, type: !461)
!2919 = !DILocation(line: 97, column: 12, scope: !2915)
!2920 = !DILocation(line: 97, column: 23, scope: !2915)
!2921 = !DILocation(line: 98, column: 14, scope: !2922)
!2922 = distinct !DILexicalBlock(scope: !2915, file: !240, line: 98, column: 9)
!2923 = !DILocation(line: 98, column: 11, scope: !2922)
!2924 = !DILocation(line: 98, column: 20, scope: !2922)
!2925 = !DILocation(line: 98, column: 28, scope: !2922)
!2926 = !DILocation(line: 98, column: 25, scope: !2922)
!2927 = !DILocation(line: 98, column: 9, scope: !2915)
!2928 = !DILocation(line: 99, column: 14, scope: !2922)
!2929 = !DILocation(line: 99, column: 22, scope: !2922)
!2930 = !DILocation(line: 99, column: 20, scope: !2922)
!2931 = !DILocation(line: 99, column: 7, scope: !2922)
!2932 = !DILocalVariable(name: "si", scope: !2933, file: !240, line: 105, type: !2934)
!2933 = distinct !DILexicalBlock(scope: !2912, file: !240, line: 104, column: 3)
!2934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysinfo", file: !2935, line: 8, size: 896, elements: !2936)
!2935 = !DIFile(filename: "/usr/include/linux/sysinfo.h", directory: "")
!2936 = !{!2937, !2940, !2943, !2944, !2945, !2946, !2947, !2948, !2949, !2952, !2953, !2954, !2955, !2957}
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "uptime", scope: !2934, file: !2935, line: 9, baseType: !2938, size: 64)
!2938 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !2939, line: 15, baseType: !1045)
!2939 = !DIFile(filename: "/usr/include/asm-generic/posix_types.h", directory: "")
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "loads", scope: !2934, file: !2935, line: 10, baseType: !2941, size: 192, offset: 64)
!2941 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2942, size: 192, elements: !1062)
!2942 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !2939, line: 16, baseType: !59)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "totalram", scope: !2934, file: !2935, line: 11, baseType: !2942, size: 64, offset: 256)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "freeram", scope: !2934, file: !2935, line: 12, baseType: !2942, size: 64, offset: 320)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "sharedram", scope: !2934, file: !2935, line: 13, baseType: !2942, size: 64, offset: 384)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "bufferram", scope: !2934, file: !2935, line: 14, baseType: !2942, size: 64, offset: 448)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "totalswap", scope: !2934, file: !2935, line: 15, baseType: !2942, size: 64, offset: 512)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "freeswap", scope: !2934, file: !2935, line: 16, baseType: !2942, size: 64, offset: 576)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "procs", scope: !2934, file: !2935, line: 17, baseType: !2950, size: 16, offset: 640)
!2950 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !2951, line: 24, baseType: !61)
!2951 = !DIFile(filename: "/usr/include/asm-generic/int-ll64.h", directory: "")
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2934, file: !2935, line: 18, baseType: !2950, size: 16, offset: 656)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "totalhigh", scope: !2934, file: !2935, line: 19, baseType: !2942, size: 64, offset: 704)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "freehigh", scope: !2934, file: !2935, line: 20, baseType: !2942, size: 64, offset: 768)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "mem_unit", scope: !2934, file: !2935, line: 21, baseType: !2956, size: 32, offset: 832)
!2956 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !2951, line: 27, baseType: !7)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "_f", scope: !2934, file: !2935, line: 22, baseType: !2958, offset: 864)
!2958 = !DICompositeType(tag: DW_TAG_array_type, baseType: !54, elements: !2959)
!2959 = !{!2960}
!2960 = !DISubrange(count: 0)
!2961 = !DILocation(line: 105, column: 20, scope: !2933)
!2962 = !DILocation(line: 106, column: 9, scope: !2963)
!2963 = distinct !DILexicalBlock(scope: !2933, file: !240, line: 106, column: 9)
!2964 = !DILocation(line: 106, column: 22, scope: !2963)
!2965 = !DILocation(line: 106, column: 9, scope: !2933)
!2966 = !DILocation(line: 107, column: 26, scope: !2963)
!2967 = !DILocation(line: 107, column: 14, scope: !2963)
!2968 = !DILocation(line: 107, column: 40, scope: !2963)
!2969 = !DILocation(line: 107, column: 37, scope: !2963)
!2970 = !DILocation(line: 107, column: 35, scope: !2963)
!2971 = !DILocation(line: 107, column: 7, scope: !2963)
!2972 = !DILocation(line: 199, column: 3, scope: !2912)
!2973 = !DILocation(line: 200, column: 1, scope: !2912)
!2974 = distinct !DISubprogram(name: "physmem_available", scope: !240, file: !240, line: 204, type: !2913, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !239, retainedNodes: !69)
!2975 = !DILocalVariable(name: "pages", scope: !2976, file: !240, line: 208, type: !461)
!2976 = distinct !DILexicalBlock(scope: !2974, file: !240, line: 207, column: 3)
!2977 = !DILocation(line: 208, column: 12, scope: !2976)
!2978 = !DILocation(line: 208, column: 20, scope: !2976)
!2979 = !DILocalVariable(name: "pagesize", scope: !2976, file: !240, line: 209, type: !461)
!2980 = !DILocation(line: 209, column: 12, scope: !2976)
!2981 = !DILocation(line: 209, column: 23, scope: !2976)
!2982 = !DILocation(line: 210, column: 14, scope: !2983)
!2983 = distinct !DILexicalBlock(scope: !2976, file: !240, line: 210, column: 9)
!2984 = !DILocation(line: 210, column: 11, scope: !2983)
!2985 = !DILocation(line: 210, column: 20, scope: !2983)
!2986 = !DILocation(line: 210, column: 28, scope: !2983)
!2987 = !DILocation(line: 210, column: 25, scope: !2983)
!2988 = !DILocation(line: 210, column: 9, scope: !2976)
!2989 = !DILocation(line: 211, column: 14, scope: !2983)
!2990 = !DILocation(line: 211, column: 22, scope: !2983)
!2991 = !DILocation(line: 211, column: 20, scope: !2983)
!2992 = !DILocation(line: 211, column: 7, scope: !2983)
!2993 = !DILocalVariable(name: "si", scope: !2994, file: !240, line: 217, type: !2934)
!2994 = distinct !DILexicalBlock(scope: !2974, file: !240, line: 216, column: 3)
!2995 = !DILocation(line: 217, column: 20, scope: !2994)
!2996 = !DILocation(line: 218, column: 9, scope: !2997)
!2997 = distinct !DILexicalBlock(scope: !2994, file: !240, line: 218, column: 9)
!2998 = !DILocation(line: 218, column: 22, scope: !2997)
!2999 = !DILocation(line: 218, column: 9, scope: !2994)
!3000 = !DILocation(line: 219, column: 27, scope: !2997)
!3001 = !DILocation(line: 219, column: 15, scope: !2997)
!3002 = !DILocation(line: 219, column: 40, scope: !2997)
!3003 = !DILocation(line: 219, column: 37, scope: !2997)
!3004 = !DILocation(line: 219, column: 35, scope: !2997)
!3005 = !DILocation(line: 219, column: 56, scope: !2997)
!3006 = !DILocation(line: 219, column: 53, scope: !2997)
!3007 = !DILocation(line: 219, column: 51, scope: !2997)
!3008 = !DILocation(line: 219, column: 7, scope: !2997)
!3009 = !DILocation(line: 308, column: 10, scope: !2974)
!3010 = !DILocation(line: 308, column: 27, scope: !2974)
!3011 = !DILocation(line: 308, column: 3, scope: !2974)
!3012 = !DILocation(line: 309, column: 1, scope: !2974)
!3013 = distinct !DISubprogram(name: "set_program_name", scope: !159, file: !159, line: 39, type: !945, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !158, retainedNodes: !69)
!3014 = !DILocalVariable(name: "argv0", arg: 1, scope: !3013, file: !159, line: 39, type: !52)
!3015 = !DILocation(line: 39, column: 31, scope: !3013)
!3016 = !DILocalVariable(name: "slash", scope: !3013, file: !159, line: 46, type: !52)
!3017 = !DILocation(line: 46, column: 15, scope: !3013)
!3018 = !DILocalVariable(name: "base", scope: !3013, file: !159, line: 47, type: !52)
!3019 = !DILocation(line: 47, column: 15, scope: !3013)
!3020 = !DILocation(line: 51, column: 7, scope: !3021)
!3021 = distinct !DILexicalBlock(scope: !3013, file: !159, line: 51, column: 7)
!3022 = !DILocation(line: 51, column: 13, scope: !3021)
!3023 = !DILocation(line: 51, column: 7, scope: !3013)
!3024 = !DILocation(line: 55, column: 14, scope: !3025)
!3025 = distinct !DILexicalBlock(scope: !3021, file: !159, line: 52, column: 5)
!3026 = !DILocation(line: 54, column: 7, scope: !3025)
!3027 = !DILocation(line: 56, column: 7, scope: !3025)
!3028 = !DILocation(line: 59, column: 20, scope: !3013)
!3029 = !DILocation(line: 59, column: 11, scope: !3013)
!3030 = !DILocation(line: 59, column: 9, scope: !3013)
!3031 = !DILocation(line: 60, column: 11, scope: !3013)
!3032 = !DILocation(line: 60, column: 17, scope: !3013)
!3033 = !DILocation(line: 60, column: 27, scope: !3013)
!3034 = !DILocation(line: 60, column: 33, scope: !3013)
!3035 = !DILocation(line: 60, column: 39, scope: !3013)
!3036 = !DILocation(line: 60, column: 8, scope: !3013)
!3037 = !DILocation(line: 61, column: 7, scope: !3038)
!3038 = distinct !DILexicalBlock(scope: !3013, file: !159, line: 61, column: 7)
!3039 = !DILocation(line: 61, column: 14, scope: !3038)
!3040 = !DILocation(line: 61, column: 12, scope: !3038)
!3041 = !DILocation(line: 61, column: 20, scope: !3038)
!3042 = !DILocation(line: 61, column: 25, scope: !3038)
!3043 = !DILocation(line: 61, column: 37, scope: !3038)
!3044 = !DILocation(line: 61, column: 42, scope: !3038)
!3045 = !DILocation(line: 61, column: 28, scope: !3038)
!3046 = !DILocation(line: 61, column: 61, scope: !3038)
!3047 = !DILocation(line: 61, column: 7, scope: !3013)
!3048 = !DILocation(line: 63, column: 15, scope: !3049)
!3049 = distinct !DILexicalBlock(scope: !3038, file: !159, line: 62, column: 5)
!3050 = !DILocation(line: 63, column: 13, scope: !3049)
!3051 = !DILocation(line: 64, column: 20, scope: !3052)
!3052 = distinct !DILexicalBlock(scope: !3049, file: !159, line: 64, column: 11)
!3053 = !DILocation(line: 64, column: 11, scope: !3052)
!3054 = !DILocation(line: 64, column: 36, scope: !3052)
!3055 = !DILocation(line: 64, column: 11, scope: !3049)
!3056 = !DILocation(line: 66, column: 19, scope: !3057)
!3057 = distinct !DILexicalBlock(scope: !3052, file: !159, line: 65, column: 9)
!3058 = !DILocation(line: 66, column: 24, scope: !3057)
!3059 = !DILocation(line: 66, column: 17, scope: !3057)
!3060 = !DILocation(line: 70, column: 52, scope: !3057)
!3061 = !DILocation(line: 70, column: 41, scope: !3057)
!3062 = !DILocation(line: 72, column: 9, scope: !3057)
!3063 = !DILocation(line: 73, column: 5, scope: !3049)
!3064 = !DILocation(line: 84, column: 18, scope: !3013)
!3065 = !DILocation(line: 84, column: 16, scope: !3013)
!3066 = !DILocation(line: 90, column: 38, scope: !3013)
!3067 = !DILocation(line: 90, column: 27, scope: !3013)
!3068 = !DILocation(line: 92, column: 1, scope: !3013)
!3069 = distinct !DISubprogram(name: "clone_quoting_options", scope: !165, file: !165, line: 122, type: !3070, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !164, retainedNodes: !69)
!3070 = !DISubroutineType(types: !3071)
!3071 = !{!3072, !3072}
!3072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !182, size: 64)
!3073 = !DILocalVariable(name: "o", arg: 1, scope: !3069, file: !165, line: 122, type: !3072)
!3074 = !DILocation(line: 122, column: 48, scope: !3069)
!3075 = !DILocalVariable(name: "e", scope: !3069, file: !165, line: 124, type: !60)
!3076 = !DILocation(line: 124, column: 7, scope: !3069)
!3077 = !DILocation(line: 124, column: 11, scope: !3069)
!3078 = !DILocalVariable(name: "p", scope: !3069, file: !165, line: 125, type: !3072)
!3079 = !DILocation(line: 125, column: 27, scope: !3069)
!3080 = !DILocation(line: 125, column: 40, scope: !3069)
!3081 = !DILocation(line: 125, column: 44, scope: !3069)
!3082 = !DILocation(line: 125, column: 31, scope: !3069)
!3083 = !DILocation(line: 127, column: 11, scope: !3069)
!3084 = !DILocation(line: 127, column: 3, scope: !3069)
!3085 = !DILocation(line: 127, column: 9, scope: !3069)
!3086 = !DILocation(line: 128, column: 10, scope: !3069)
!3087 = !DILocation(line: 128, column: 3, scope: !3069)
!3088 = distinct !DISubprogram(name: "get_quoting_style", scope: !165, file: !165, line: 133, type: !3089, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !164, retainedNodes: !69)
!3089 = !DISubroutineType(types: !3090)
!3090 = !{!5, !3091}
!3091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3092, size: 64)
!3092 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !182)
!3093 = !DILocalVariable(name: "o", arg: 1, scope: !3088, file: !165, line: 133, type: !3091)
!3094 = !DILocation(line: 133, column: 50, scope: !3088)
!3095 = !DILocation(line: 135, column: 11, scope: !3088)
!3096 = !DILocation(line: 135, column: 15, scope: !3088)
!3097 = !DILocation(line: 135, column: 46, scope: !3088)
!3098 = !DILocation(line: 135, column: 3, scope: !3088)
!3099 = distinct !DISubprogram(name: "set_quoting_style", scope: !165, file: !165, line: 141, type: !3100, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !164, retainedNodes: !69)
!3100 = !DISubroutineType(types: !3101)
!3101 = !{null, !3072, !5}
!3102 = !DILocalVariable(name: "o", arg: 1, scope: !3099, file: !165, line: 141, type: !3072)
!3103 = !DILocation(line: 141, column: 44, scope: !3099)
!3104 = !DILocalVariable(name: "s", arg: 2, scope: !3099, file: !165, line: 141, type: !5)
!3105 = !DILocation(line: 141, column: 66, scope: !3099)
!3106 = !DILocation(line: 143, column: 47, scope: !3099)
!3107 = !DILocation(line: 143, column: 4, scope: !3099)
!3108 = !DILocation(line: 143, column: 8, scope: !3099)
!3109 = !DILocation(line: 143, column: 39, scope: !3099)
!3110 = !DILocation(line: 143, column: 45, scope: !3099)
!3111 = !DILocation(line: 144, column: 1, scope: !3099)
!3112 = distinct !DISubprogram(name: "set_char_quoting", scope: !165, file: !165, line: 152, type: !3113, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !164, retainedNodes: !69)
!3113 = !DISubroutineType(types: !3114)
!3114 = !{!60, !3072, !54, !60}
!3115 = !DILocalVariable(name: "o", arg: 1, scope: !3112, file: !165, line: 152, type: !3072)
!3116 = !DILocation(line: 152, column: 43, scope: !3112)
!3117 = !DILocalVariable(name: "c", arg: 2, scope: !3112, file: !165, line: 152, type: !54)
!3118 = !DILocation(line: 152, column: 51, scope: !3112)
!3119 = !DILocalVariable(name: "i", arg: 3, scope: !3112, file: !165, line: 152, type: !60)
!3120 = !DILocation(line: 152, column: 58, scope: !3112)
!3121 = !DILocalVariable(name: "uc", scope: !3112, file: !165, line: 154, type: !150)
!3122 = !DILocation(line: 154, column: 17, scope: !3112)
!3123 = !DILocation(line: 154, column: 22, scope: !3112)
!3124 = !DILocalVariable(name: "p", scope: !3112, file: !165, line: 155, type: !3125)
!3125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!3126 = !DILocation(line: 155, column: 17, scope: !3112)
!3127 = !DILocation(line: 156, column: 6, scope: !3112)
!3128 = !DILocation(line: 156, column: 10, scope: !3112)
!3129 = !DILocation(line: 156, column: 41, scope: !3112)
!3130 = !DILocation(line: 156, column: 5, scope: !3112)
!3131 = !DILocation(line: 156, column: 59, scope: !3112)
!3132 = !DILocation(line: 156, column: 62, scope: !3112)
!3133 = !DILocation(line: 156, column: 57, scope: !3112)
!3134 = !DILocalVariable(name: "shift", scope: !3112, file: !165, line: 157, type: !60)
!3135 = !DILocation(line: 157, column: 7, scope: !3112)
!3136 = !DILocation(line: 157, column: 15, scope: !3112)
!3137 = !DILocation(line: 157, column: 18, scope: !3112)
!3138 = !DILocalVariable(name: "r", scope: !3112, file: !165, line: 158, type: !60)
!3139 = !DILocation(line: 158, column: 7, scope: !3112)
!3140 = !DILocation(line: 158, column: 13, scope: !3112)
!3141 = !DILocation(line: 158, column: 12, scope: !3112)
!3142 = !DILocation(line: 158, column: 18, scope: !3112)
!3143 = !DILocation(line: 158, column: 15, scope: !3112)
!3144 = !DILocation(line: 158, column: 25, scope: !3112)
!3145 = !DILocation(line: 159, column: 11, scope: !3112)
!3146 = !DILocation(line: 159, column: 13, scope: !3112)
!3147 = !DILocation(line: 159, column: 20, scope: !3112)
!3148 = !DILocation(line: 159, column: 18, scope: !3112)
!3149 = !DILocation(line: 159, column: 26, scope: !3112)
!3150 = !DILocation(line: 159, column: 23, scope: !3112)
!3151 = !DILocation(line: 159, column: 4, scope: !3112)
!3152 = !DILocation(line: 159, column: 6, scope: !3112)
!3153 = !DILocation(line: 160, column: 10, scope: !3112)
!3154 = !DILocation(line: 160, column: 3, scope: !3112)
!3155 = distinct !DISubprogram(name: "set_quoting_flags", scope: !165, file: !165, line: 168, type: !3156, scopeLine: 169, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !164, retainedNodes: !69)
!3156 = !DISubroutineType(types: !3157)
!3157 = !{!60, !3072, !60}
!3158 = !DILocalVariable(name: "o", arg: 1, scope: !3155, file: !165, line: 168, type: !3072)
!3159 = !DILocation(line: 168, column: 44, scope: !3155)
!3160 = !DILocalVariable(name: "i", arg: 2, scope: !3155, file: !165, line: 168, type: !60)
!3161 = !DILocation(line: 168, column: 51, scope: !3155)
!3162 = !DILocalVariable(name: "r", scope: !3155, file: !165, line: 170, type: !60)
!3163 = !DILocation(line: 170, column: 7, scope: !3155)
!3164 = !DILocation(line: 171, column: 8, scope: !3165)
!3165 = distinct !DILexicalBlock(scope: !3155, file: !165, line: 171, column: 7)
!3166 = !DILocation(line: 171, column: 7, scope: !3155)
!3167 = !DILocation(line: 172, column: 7, scope: !3165)
!3168 = !DILocation(line: 172, column: 5, scope: !3165)
!3169 = !DILocation(line: 173, column: 7, scope: !3155)
!3170 = !DILocation(line: 173, column: 10, scope: !3155)
!3171 = !DILocation(line: 173, column: 5, scope: !3155)
!3172 = !DILocation(line: 174, column: 14, scope: !3155)
!3173 = !DILocation(line: 174, column: 3, scope: !3155)
!3174 = !DILocation(line: 174, column: 6, scope: !3155)
!3175 = !DILocation(line: 174, column: 12, scope: !3155)
!3176 = !DILocation(line: 175, column: 10, scope: !3155)
!3177 = !DILocation(line: 175, column: 3, scope: !3155)
!3178 = distinct !DISubprogram(name: "set_custom_quoting", scope: !165, file: !165, line: 179, type: !3179, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !164, retainedNodes: !69)
!3179 = !DISubroutineType(types: !3180)
!3180 = !{null, !3072, !52, !52}
!3181 = !DILocalVariable(name: "o", arg: 1, scope: !3178, file: !165, line: 179, type: !3072)
!3182 = !DILocation(line: 179, column: 45, scope: !3178)
!3183 = !DILocalVariable(name: "left_quote", arg: 2, scope: !3178, file: !165, line: 180, type: !52)
!3184 = !DILocation(line: 180, column: 33, scope: !3178)
!3185 = !DILocalVariable(name: "right_quote", arg: 3, scope: !3178, file: !165, line: 180, type: !52)
!3186 = !DILocation(line: 180, column: 57, scope: !3178)
!3187 = !DILocation(line: 182, column: 8, scope: !3188)
!3188 = distinct !DILexicalBlock(scope: !3178, file: !165, line: 182, column: 7)
!3189 = !DILocation(line: 182, column: 7, scope: !3178)
!3190 = !DILocation(line: 183, column: 7, scope: !3188)
!3191 = !DILocation(line: 183, column: 5, scope: !3188)
!3192 = !DILocation(line: 184, column: 3, scope: !3178)
!3193 = !DILocation(line: 184, column: 6, scope: !3178)
!3194 = !DILocation(line: 184, column: 12, scope: !3178)
!3195 = !DILocation(line: 185, column: 8, scope: !3196)
!3196 = distinct !DILexicalBlock(scope: !3178, file: !165, line: 185, column: 7)
!3197 = !DILocation(line: 185, column: 19, scope: !3196)
!3198 = !DILocation(line: 185, column: 23, scope: !3196)
!3199 = !DILocation(line: 185, column: 7, scope: !3178)
!3200 = !DILocation(line: 186, column: 5, scope: !3196)
!3201 = !DILocation(line: 187, column: 19, scope: !3178)
!3202 = !DILocation(line: 187, column: 3, scope: !3178)
!3203 = !DILocation(line: 187, column: 6, scope: !3178)
!3204 = !DILocation(line: 187, column: 17, scope: !3178)
!3205 = !DILocation(line: 188, column: 20, scope: !3178)
!3206 = !DILocation(line: 188, column: 3, scope: !3178)
!3207 = !DILocation(line: 188, column: 6, scope: !3178)
!3208 = !DILocation(line: 188, column: 18, scope: !3178)
!3209 = !DILocation(line: 189, column: 1, scope: !3178)
!3210 = distinct !DISubprogram(name: "quotearg_buffer", scope: !165, file: !165, line: 784, type: !3211, scopeLine: 787, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !164, retainedNodes: !69)
!3211 = !DISubroutineType(types: !3212)
!3212 = !{!57, !56, !57, !52, !57, !3091}
!3213 = !DILocalVariable(name: "buffer", arg: 1, scope: !3210, file: !165, line: 784, type: !56)
!3214 = !DILocation(line: 784, column: 24, scope: !3210)
!3215 = !DILocalVariable(name: "buffersize", arg: 2, scope: !3210, file: !165, line: 784, type: !57)
!3216 = !DILocation(line: 784, column: 39, scope: !3210)
!3217 = !DILocalVariable(name: "arg", arg: 3, scope: !3210, file: !165, line: 785, type: !52)
!3218 = !DILocation(line: 785, column: 30, scope: !3210)
!3219 = !DILocalVariable(name: "argsize", arg: 4, scope: !3210, file: !165, line: 785, type: !57)
!3220 = !DILocation(line: 785, column: 42, scope: !3210)
!3221 = !DILocalVariable(name: "o", arg: 5, scope: !3210, file: !165, line: 786, type: !3091)
!3222 = !DILocation(line: 786, column: 48, scope: !3210)
!3223 = !DILocalVariable(name: "p", scope: !3210, file: !165, line: 788, type: !3091)
!3224 = !DILocation(line: 788, column: 33, scope: !3210)
!3225 = !DILocation(line: 788, column: 37, scope: !3210)
!3226 = !DILocation(line: 788, column: 41, scope: !3210)
!3227 = !DILocalVariable(name: "e", scope: !3210, file: !165, line: 789, type: !60)
!3228 = !DILocation(line: 789, column: 7, scope: !3210)
!3229 = !DILocation(line: 789, column: 11, scope: !3210)
!3230 = !DILocalVariable(name: "r", scope: !3210, file: !165, line: 790, type: !57)
!3231 = !DILocation(line: 790, column: 10, scope: !3210)
!3232 = !DILocation(line: 790, column: 40, scope: !3210)
!3233 = !DILocation(line: 790, column: 48, scope: !3210)
!3234 = !DILocation(line: 790, column: 60, scope: !3210)
!3235 = !DILocation(line: 790, column: 65, scope: !3210)
!3236 = !DILocation(line: 791, column: 40, scope: !3210)
!3237 = !DILocation(line: 791, column: 43, scope: !3210)
!3238 = !DILocation(line: 791, column: 50, scope: !3210)
!3239 = !DILocation(line: 791, column: 53, scope: !3210)
!3240 = !DILocation(line: 791, column: 60, scope: !3210)
!3241 = !DILocation(line: 791, column: 63, scope: !3210)
!3242 = !DILocation(line: 792, column: 40, scope: !3210)
!3243 = !DILocation(line: 792, column: 43, scope: !3210)
!3244 = !DILocation(line: 792, column: 55, scope: !3210)
!3245 = !DILocation(line: 792, column: 58, scope: !3210)
!3246 = !DILocation(line: 790, column: 14, scope: !3210)
!3247 = !DILocation(line: 793, column: 11, scope: !3210)
!3248 = !DILocation(line: 793, column: 3, scope: !3210)
!3249 = !DILocation(line: 793, column: 9, scope: !3210)
!3250 = !DILocation(line: 794, column: 10, scope: !3210)
!3251 = !DILocation(line: 794, column: 3, scope: !3210)
!3252 = distinct !DISubprogram(name: "quotearg_buffer_restyled", scope: !165, file: !165, line: 256, type: !3253, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !164, retainedNodes: !69)
!3253 = !DISubroutineType(types: !3254)
!3254 = !{!57, !56, !57, !52, !57, !5, !60, !3255, !52, !52}
!3255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !153, size: 64)
!3256 = !DILocalVariable(name: "buffer", arg: 1, scope: !3252, file: !165, line: 256, type: !56)
!3257 = !DILocation(line: 256, column: 33, scope: !3252)
!3258 = !DILocalVariable(name: "buffersize", arg: 2, scope: !3252, file: !165, line: 256, type: !57)
!3259 = !DILocation(line: 256, column: 48, scope: !3252)
!3260 = !DILocalVariable(name: "arg", arg: 3, scope: !3252, file: !165, line: 257, type: !52)
!3261 = !DILocation(line: 257, column: 39, scope: !3252)
!3262 = !DILocalVariable(name: "argsize", arg: 4, scope: !3252, file: !165, line: 257, type: !57)
!3263 = !DILocation(line: 257, column: 51, scope: !3252)
!3264 = !DILocalVariable(name: "quoting_style", arg: 5, scope: !3252, file: !165, line: 258, type: !5)
!3265 = !DILocation(line: 258, column: 46, scope: !3252)
!3266 = !DILocalVariable(name: "flags", arg: 6, scope: !3252, file: !165, line: 258, type: !60)
!3267 = !DILocation(line: 258, column: 65, scope: !3252)
!3268 = !DILocalVariable(name: "quote_these_too", arg: 7, scope: !3252, file: !165, line: 259, type: !3255)
!3269 = !DILocation(line: 259, column: 47, scope: !3252)
!3270 = !DILocalVariable(name: "left_quote", arg: 8, scope: !3252, file: !165, line: 260, type: !52)
!3271 = !DILocation(line: 260, column: 39, scope: !3252)
!3272 = !DILocalVariable(name: "right_quote", arg: 9, scope: !3252, file: !165, line: 261, type: !52)
!3273 = !DILocation(line: 261, column: 39, scope: !3252)
!3274 = !DILocalVariable(name: "i", scope: !3252, file: !165, line: 263, type: !57)
!3275 = !DILocation(line: 263, column: 10, scope: !3252)
!3276 = !DILocalVariable(name: "len", scope: !3252, file: !165, line: 264, type: !57)
!3277 = !DILocation(line: 264, column: 10, scope: !3252)
!3278 = !DILocalVariable(name: "orig_buffersize", scope: !3252, file: !165, line: 265, type: !57)
!3279 = !DILocation(line: 265, column: 10, scope: !3252)
!3280 = !DILocalVariable(name: "quote_string", scope: !3252, file: !165, line: 266, type: !52)
!3281 = !DILocation(line: 266, column: 15, scope: !3252)
!3282 = !DILocalVariable(name: "quote_string_len", scope: !3252, file: !165, line: 267, type: !57)
!3283 = !DILocation(line: 267, column: 10, scope: !3252)
!3284 = !DILocalVariable(name: "backslash_escapes", scope: !3252, file: !165, line: 268, type: !89)
!3285 = !DILocation(line: 268, column: 8, scope: !3252)
!3286 = !DILocalVariable(name: "unibyte_locale", scope: !3252, file: !165, line: 269, type: !89)
!3287 = !DILocation(line: 269, column: 8, scope: !3252)
!3288 = !DILocation(line: 269, column: 25, scope: !3252)
!3289 = !DILocation(line: 269, column: 36, scope: !3252)
!3290 = !DILocalVariable(name: "elide_outer_quotes", scope: !3252, file: !165, line: 270, type: !89)
!3291 = !DILocation(line: 270, column: 8, scope: !3252)
!3292 = !DILocation(line: 270, column: 30, scope: !3252)
!3293 = !DILocation(line: 270, column: 36, scope: !3252)
!3294 = !DILocation(line: 270, column: 61, scope: !3252)
!3295 = !DILocalVariable(name: "pending_shell_escape_end", scope: !3252, file: !165, line: 271, type: !89)
!3296 = !DILocation(line: 271, column: 8, scope: !3252)
!3297 = !DILocalVariable(name: "encountered_single_quote", scope: !3252, file: !165, line: 272, type: !89)
!3298 = !DILocation(line: 272, column: 8, scope: !3252)
!3299 = !DILocalVariable(name: "all_c_and_shell_quote_compat", scope: !3252, file: !165, line: 273, type: !89)
!3300 = !DILocation(line: 273, column: 8, scope: !3252)
!3301 = !DILocation(line: 273, column: 3, scope: !3252)
!3302 = !DILabel(scope: !3252, name: "process_input", file: !165, line: 314)
!3303 = !DILocation(line: 314, column: 2, scope: !3252)
!3304 = !DILocation(line: 316, column: 11, scope: !3252)
!3305 = !DILocation(line: 316, column: 3, scope: !3252)
!3306 = !DILocation(line: 319, column: 21, scope: !3307)
!3307 = distinct !DILexicalBlock(scope: !3252, file: !165, line: 317, column: 5)
!3308 = !DILocation(line: 320, column: 26, scope: !3307)
!3309 = !DILocation(line: 321, column: 7, scope: !3307)
!3310 = !DILocation(line: 323, column: 12, scope: !3311)
!3311 = distinct !DILexicalBlock(scope: !3307, file: !165, line: 323, column: 11)
!3312 = !DILocation(line: 323, column: 11, scope: !3307)
!3313 = !DILocation(line: 324, column: 9, scope: !3311)
!3314 = !DILocation(line: 324, column: 9, scope: !3315)
!3315 = distinct !DILexicalBlock(scope: !3316, file: !165, line: 324, column: 9)
!3316 = distinct !DILexicalBlock(scope: !3311, file: !165, line: 324, column: 9)
!3317 = !DILocation(line: 324, column: 9, scope: !3316)
!3318 = !DILocation(line: 325, column: 25, scope: !3307)
!3319 = !DILocation(line: 326, column: 20, scope: !3307)
!3320 = !DILocation(line: 327, column: 24, scope: !3307)
!3321 = !DILocation(line: 328, column: 7, scope: !3307)
!3322 = !DILocation(line: 331, column: 25, scope: !3307)
!3323 = !DILocation(line: 332, column: 26, scope: !3307)
!3324 = !DILocation(line: 333, column: 7, scope: !3307)
!3325 = !DILocation(line: 339, column: 13, scope: !3326)
!3326 = distinct !DILexicalBlock(scope: !3327, file: !165, line: 339, column: 13)
!3327 = distinct !DILexicalBlock(scope: !3307, file: !165, line: 338, column: 7)
!3328 = !DILocation(line: 339, column: 27, scope: !3326)
!3329 = !DILocation(line: 339, column: 13, scope: !3327)
!3330 = !DILocation(line: 362, column: 50, scope: !3331)
!3331 = distinct !DILexicalBlock(scope: !3326, file: !165, line: 340, column: 11)
!3332 = !DILocation(line: 362, column: 26, scope: !3331)
!3333 = !DILocation(line: 362, column: 24, scope: !3331)
!3334 = !DILocation(line: 363, column: 51, scope: !3331)
!3335 = !DILocation(line: 363, column: 27, scope: !3331)
!3336 = !DILocation(line: 363, column: 25, scope: !3331)
!3337 = !DILocation(line: 364, column: 11, scope: !3331)
!3338 = !DILocation(line: 365, column: 14, scope: !3339)
!3339 = distinct !DILexicalBlock(scope: !3327, file: !165, line: 365, column: 13)
!3340 = !DILocation(line: 365, column: 13, scope: !3327)
!3341 = !DILocation(line: 366, column: 31, scope: !3342)
!3342 = distinct !DILexicalBlock(scope: !3339, file: !165, line: 366, column: 11)
!3343 = !DILocation(line: 366, column: 29, scope: !3342)
!3344 = !DILocation(line: 366, column: 16, scope: !3342)
!3345 = !DILocation(line: 366, column: 44, scope: !3346)
!3346 = distinct !DILexicalBlock(scope: !3342, file: !165, line: 366, column: 11)
!3347 = !DILocation(line: 366, column: 43, scope: !3346)
!3348 = !DILocation(line: 366, column: 11, scope: !3342)
!3349 = !DILocation(line: 367, column: 13, scope: !3346)
!3350 = !DILocation(line: 367, column: 13, scope: !3351)
!3351 = distinct !DILexicalBlock(scope: !3352, file: !165, line: 367, column: 13)
!3352 = distinct !DILexicalBlock(scope: !3346, file: !165, line: 367, column: 13)
!3353 = !DILocation(line: 367, column: 13, scope: !3352)
!3354 = !DILocation(line: 366, column: 70, scope: !3346)
!3355 = !DILocation(line: 366, column: 11, scope: !3346)
!3356 = distinct !{!3356, !3348, !3357, !975}
!3357 = !DILocation(line: 367, column: 13, scope: !3342)
!3358 = !DILocation(line: 368, column: 27, scope: !3327)
!3359 = !DILocation(line: 369, column: 24, scope: !3327)
!3360 = !DILocation(line: 369, column: 22, scope: !3327)
!3361 = !DILocation(line: 370, column: 36, scope: !3327)
!3362 = !DILocation(line: 370, column: 28, scope: !3327)
!3363 = !DILocation(line: 370, column: 26, scope: !3327)
!3364 = !DILocation(line: 372, column: 7, scope: !3307)
!3365 = !DILocation(line: 375, column: 25, scope: !3307)
!3366 = !DILocation(line: 376, column: 7, scope: !3307)
!3367 = !DILocation(line: 378, column: 26, scope: !3307)
!3368 = !DILocation(line: 379, column: 7, scope: !3307)
!3369 = !DILocation(line: 381, column: 12, scope: !3370)
!3370 = distinct !DILexicalBlock(scope: !3307, file: !165, line: 381, column: 11)
!3371 = !DILocation(line: 381, column: 11, scope: !3307)
!3372 = !DILocation(line: 382, column: 27, scope: !3370)
!3373 = !DILocation(line: 382, column: 9, scope: !3370)
!3374 = !DILocation(line: 383, column: 7, scope: !3307)
!3375 = !DILocation(line: 385, column: 21, scope: !3307)
!3376 = !DILocation(line: 386, column: 12, scope: !3377)
!3377 = distinct !DILexicalBlock(scope: !3307, file: !165, line: 386, column: 11)
!3378 = !DILocation(line: 386, column: 11, scope: !3307)
!3379 = !DILocation(line: 387, column: 9, scope: !3377)
!3380 = !DILocation(line: 387, column: 9, scope: !3381)
!3381 = distinct !DILexicalBlock(scope: !3382, file: !165, line: 387, column: 9)
!3382 = distinct !DILexicalBlock(scope: !3377, file: !165, line: 387, column: 9)
!3383 = !DILocation(line: 387, column: 9, scope: !3382)
!3384 = !DILocation(line: 388, column: 20, scope: !3307)
!3385 = !DILocation(line: 389, column: 24, scope: !3307)
!3386 = !DILocation(line: 390, column: 7, scope: !3307)
!3387 = !DILocation(line: 393, column: 26, scope: !3307)
!3388 = !DILocation(line: 394, column: 7, scope: !3307)
!3389 = !DILocation(line: 397, column: 7, scope: !3307)
!3390 = !DILocation(line: 400, column: 10, scope: !3391)
!3391 = distinct !DILexicalBlock(scope: !3252, file: !165, line: 400, column: 3)
!3392 = !DILocation(line: 400, column: 8, scope: !3391)
!3393 = !DILocation(line: 400, column: 19, scope: !3394)
!3394 = distinct !DILexicalBlock(scope: !3391, file: !165, line: 400, column: 3)
!3395 = !DILocation(line: 400, column: 27, scope: !3394)
!3396 = !DILocation(line: 400, column: 41, scope: !3394)
!3397 = !DILocation(line: 400, column: 45, scope: !3394)
!3398 = !DILocation(line: 400, column: 48, scope: !3394)
!3399 = !DILocation(line: 400, column: 58, scope: !3394)
!3400 = !DILocation(line: 400, column: 63, scope: !3394)
!3401 = !DILocation(line: 400, column: 60, scope: !3394)
!3402 = !DILocation(line: 400, column: 16, scope: !3394)
!3403 = !DILocation(line: 400, column: 3, scope: !3391)
!3404 = !DILocalVariable(name: "c", scope: !3405, file: !165, line: 402, type: !150)
!3405 = distinct !DILexicalBlock(scope: !3394, file: !165, line: 401, column: 5)
!3406 = !DILocation(line: 402, column: 21, scope: !3405)
!3407 = !DILocalVariable(name: "esc", scope: !3405, file: !165, line: 403, type: !150)
!3408 = !DILocation(line: 403, column: 21, scope: !3405)
!3409 = !DILocalVariable(name: "is_right_quote", scope: !3405, file: !165, line: 404, type: !89)
!3410 = !DILocation(line: 404, column: 12, scope: !3405)
!3411 = !DILocalVariable(name: "escaping", scope: !3405, file: !165, line: 405, type: !89)
!3412 = !DILocation(line: 405, column: 12, scope: !3405)
!3413 = !DILocalVariable(name: "c_and_shell_quote_compat", scope: !3405, file: !165, line: 406, type: !89)
!3414 = !DILocation(line: 406, column: 12, scope: !3405)
!3415 = !DILocation(line: 408, column: 11, scope: !3416)
!3416 = distinct !DILexicalBlock(scope: !3405, file: !165, line: 408, column: 11)
!3417 = !DILocation(line: 409, column: 11, scope: !3416)
!3418 = !DILocation(line: 409, column: 14, scope: !3416)
!3419 = !DILocation(line: 409, column: 28, scope: !3416)
!3420 = !DILocation(line: 410, column: 11, scope: !3416)
!3421 = !DILocation(line: 410, column: 14, scope: !3416)
!3422 = !DILocation(line: 411, column: 11, scope: !3416)
!3423 = !DILocation(line: 411, column: 15, scope: !3416)
!3424 = !DILocation(line: 411, column: 19, scope: !3416)
!3425 = !DILocation(line: 411, column: 17, scope: !3416)
!3426 = !DILocation(line: 412, column: 19, scope: !3416)
!3427 = !DILocation(line: 412, column: 27, scope: !3416)
!3428 = !DILocation(line: 412, column: 39, scope: !3416)
!3429 = !DILocation(line: 412, column: 46, scope: !3416)
!3430 = !DILocation(line: 412, column: 44, scope: !3416)
!3431 = !DILocation(line: 416, column: 40, scope: !3416)
!3432 = !DILocation(line: 416, column: 32, scope: !3416)
!3433 = !DILocation(line: 416, column: 30, scope: !3416)
!3434 = !DILocation(line: 416, column: 48, scope: !3416)
!3435 = !DILocation(line: 412, column: 15, scope: !3416)
!3436 = !DILocation(line: 417, column: 11, scope: !3416)
!3437 = !DILocation(line: 417, column: 22, scope: !3416)
!3438 = !DILocation(line: 417, column: 28, scope: !3416)
!3439 = !DILocation(line: 417, column: 26, scope: !3416)
!3440 = !DILocation(line: 417, column: 31, scope: !3416)
!3441 = !DILocation(line: 417, column: 45, scope: !3416)
!3442 = !DILocation(line: 417, column: 14, scope: !3416)
!3443 = !DILocation(line: 417, column: 63, scope: !3416)
!3444 = !DILocation(line: 408, column: 11, scope: !3405)
!3445 = !DILocation(line: 419, column: 15, scope: !3446)
!3446 = distinct !DILexicalBlock(scope: !3447, file: !165, line: 419, column: 15)
!3447 = distinct !DILexicalBlock(scope: !3416, file: !165, line: 418, column: 9)
!3448 = !DILocation(line: 419, column: 15, scope: !3447)
!3449 = !DILocation(line: 420, column: 13, scope: !3446)
!3450 = !DILocation(line: 421, column: 26, scope: !3447)
!3451 = !DILocation(line: 422, column: 9, scope: !3447)
!3452 = !DILocation(line: 424, column: 11, scope: !3405)
!3453 = !DILocation(line: 424, column: 15, scope: !3405)
!3454 = !DILocation(line: 424, column: 9, scope: !3405)
!3455 = !DILocation(line: 425, column: 15, scope: !3405)
!3456 = !DILocation(line: 425, column: 7, scope: !3405)
!3457 = !DILocation(line: 428, column: 15, scope: !3458)
!3458 = distinct !DILexicalBlock(scope: !3459, file: !165, line: 428, column: 15)
!3459 = distinct !DILexicalBlock(scope: !3405, file: !165, line: 426, column: 9)
!3460 = !DILocation(line: 428, column: 15, scope: !3459)
!3461 = !DILocation(line: 430, column: 15, scope: !3462)
!3462 = distinct !DILexicalBlock(scope: !3458, file: !165, line: 429, column: 13)
!3463 = !DILocation(line: 430, column: 15, scope: !3464)
!3464 = distinct !DILexicalBlock(scope: !3465, file: !165, line: 430, column: 15)
!3465 = distinct !DILexicalBlock(scope: !3462, file: !165, line: 430, column: 15)
!3466 = !DILocation(line: 430, column: 15, scope: !3465)
!3467 = !DILocation(line: 430, column: 15, scope: !3468)
!3468 = distinct !DILexicalBlock(scope: !3465, file: !165, line: 430, column: 15)
!3469 = !DILocation(line: 430, column: 15, scope: !3470)
!3470 = distinct !DILexicalBlock(scope: !3468, file: !165, line: 430, column: 15)
!3471 = !DILocation(line: 430, column: 15, scope: !3472)
!3472 = distinct !DILexicalBlock(scope: !3473, file: !165, line: 430, column: 15)
!3473 = distinct !DILexicalBlock(scope: !3470, file: !165, line: 430, column: 15)
!3474 = !DILocation(line: 430, column: 15, scope: !3473)
!3475 = !DILocation(line: 430, column: 15, scope: !3476)
!3476 = distinct !DILexicalBlock(scope: !3477, file: !165, line: 430, column: 15)
!3477 = distinct !DILexicalBlock(scope: !3470, file: !165, line: 430, column: 15)
!3478 = !DILocation(line: 430, column: 15, scope: !3477)
!3479 = !DILocation(line: 430, column: 15, scope: !3480)
!3480 = distinct !DILexicalBlock(scope: !3481, file: !165, line: 430, column: 15)
!3481 = distinct !DILexicalBlock(scope: !3470, file: !165, line: 430, column: 15)
!3482 = !DILocation(line: 430, column: 15, scope: !3481)
!3483 = !DILocation(line: 430, column: 15, scope: !3484)
!3484 = distinct !DILexicalBlock(scope: !3485, file: !165, line: 430, column: 15)
!3485 = distinct !DILexicalBlock(scope: !3465, file: !165, line: 430, column: 15)
!3486 = !DILocation(line: 430, column: 15, scope: !3485)
!3487 = !DILocation(line: 437, column: 19, scope: !3488)
!3488 = distinct !DILexicalBlock(scope: !3462, file: !165, line: 437, column: 19)
!3489 = !DILocation(line: 437, column: 33, scope: !3488)
!3490 = !DILocation(line: 438, column: 19, scope: !3488)
!3491 = !DILocation(line: 438, column: 22, scope: !3488)
!3492 = !DILocation(line: 438, column: 24, scope: !3488)
!3493 = !DILocation(line: 438, column: 30, scope: !3488)
!3494 = !DILocation(line: 438, column: 28, scope: !3488)
!3495 = !DILocation(line: 438, column: 38, scope: !3488)
!3496 = !DILocation(line: 438, column: 48, scope: !3488)
!3497 = !DILocation(line: 438, column: 52, scope: !3488)
!3498 = !DILocation(line: 438, column: 54, scope: !3488)
!3499 = !DILocation(line: 438, column: 45, scope: !3488)
!3500 = !DILocation(line: 438, column: 59, scope: !3488)
!3501 = !DILocation(line: 438, column: 62, scope: !3488)
!3502 = !DILocation(line: 438, column: 66, scope: !3488)
!3503 = !DILocation(line: 438, column: 68, scope: !3488)
!3504 = !DILocation(line: 438, column: 73, scope: !3488)
!3505 = !DILocation(line: 437, column: 19, scope: !3462)
!3506 = !DILocation(line: 440, column: 19, scope: !3507)
!3507 = distinct !DILexicalBlock(scope: !3488, file: !165, line: 439, column: 17)
!3508 = !DILocation(line: 440, column: 19, scope: !3509)
!3509 = distinct !DILexicalBlock(scope: !3510, file: !165, line: 440, column: 19)
!3510 = distinct !DILexicalBlock(scope: !3507, file: !165, line: 440, column: 19)
!3511 = !DILocation(line: 440, column: 19, scope: !3510)
!3512 = !DILocation(line: 441, column: 19, scope: !3507)
!3513 = !DILocation(line: 441, column: 19, scope: !3514)
!3514 = distinct !DILexicalBlock(scope: !3515, file: !165, line: 441, column: 19)
!3515 = distinct !DILexicalBlock(scope: !3507, file: !165, line: 441, column: 19)
!3516 = !DILocation(line: 441, column: 19, scope: !3515)
!3517 = !DILocation(line: 442, column: 17, scope: !3507)
!3518 = !DILocation(line: 443, column: 17, scope: !3462)
!3519 = !DILocation(line: 448, column: 13, scope: !3462)
!3520 = !DILocation(line: 449, column: 20, scope: !3521)
!3521 = distinct !DILexicalBlock(scope: !3458, file: !165, line: 449, column: 20)
!3522 = !DILocation(line: 449, column: 26, scope: !3521)
!3523 = !DILocation(line: 449, column: 20, scope: !3458)
!3524 = !DILocation(line: 450, column: 13, scope: !3521)
!3525 = !DILocation(line: 451, column: 11, scope: !3459)
!3526 = !DILocation(line: 454, column: 19, scope: !3459)
!3527 = !DILocation(line: 454, column: 11, scope: !3459)
!3528 = !DILocation(line: 457, column: 19, scope: !3529)
!3529 = distinct !DILexicalBlock(scope: !3530, file: !165, line: 457, column: 19)
!3530 = distinct !DILexicalBlock(scope: !3459, file: !165, line: 455, column: 13)
!3531 = !DILocation(line: 457, column: 19, scope: !3530)
!3532 = !DILocation(line: 458, column: 17, scope: !3529)
!3533 = !DILocation(line: 459, column: 15, scope: !3530)
!3534 = !DILocation(line: 462, column: 20, scope: !3535)
!3535 = distinct !DILexicalBlock(scope: !3530, file: !165, line: 462, column: 19)
!3536 = !DILocation(line: 462, column: 26, scope: !3535)
!3537 = !DILocation(line: 463, column: 19, scope: !3535)
!3538 = !DILocation(line: 463, column: 22, scope: !3535)
!3539 = !DILocation(line: 463, column: 24, scope: !3535)
!3540 = !DILocation(line: 463, column: 30, scope: !3535)
!3541 = !DILocation(line: 463, column: 28, scope: !3535)
!3542 = !DILocation(line: 463, column: 38, scope: !3535)
!3543 = !DILocation(line: 463, column: 41, scope: !3535)
!3544 = !DILocation(line: 463, column: 45, scope: !3535)
!3545 = !DILocation(line: 463, column: 47, scope: !3535)
!3546 = !DILocation(line: 463, column: 52, scope: !3535)
!3547 = !DILocation(line: 462, column: 19, scope: !3530)
!3548 = !DILocation(line: 464, column: 25, scope: !3535)
!3549 = !DILocation(line: 464, column: 29, scope: !3535)
!3550 = !DILocation(line: 464, column: 31, scope: !3535)
!3551 = !DILocation(line: 464, column: 17, scope: !3535)
!3552 = !DILocation(line: 471, column: 25, scope: !3553)
!3553 = distinct !DILexicalBlock(scope: !3554, file: !165, line: 471, column: 25)
!3554 = distinct !DILexicalBlock(scope: !3535, file: !165, line: 465, column: 19)
!3555 = !DILocation(line: 471, column: 25, scope: !3554)
!3556 = !DILocation(line: 472, column: 23, scope: !3553)
!3557 = !DILocation(line: 473, column: 25, scope: !3554)
!3558 = !DILocation(line: 473, column: 29, scope: !3554)
!3559 = !DILocation(line: 473, column: 31, scope: !3554)
!3560 = !DILocation(line: 473, column: 23, scope: !3554)
!3561 = !DILocation(line: 474, column: 23, scope: !3554)
!3562 = !DILocation(line: 475, column: 21, scope: !3554)
!3563 = !DILocation(line: 475, column: 21, scope: !3564)
!3564 = distinct !DILexicalBlock(scope: !3565, file: !165, line: 475, column: 21)
!3565 = distinct !DILexicalBlock(scope: !3554, file: !165, line: 475, column: 21)
!3566 = !DILocation(line: 475, column: 21, scope: !3565)
!3567 = !DILocation(line: 476, column: 21, scope: !3554)
!3568 = !DILocation(line: 476, column: 21, scope: !3569)
!3569 = distinct !DILexicalBlock(scope: !3570, file: !165, line: 476, column: 21)
!3570 = distinct !DILexicalBlock(scope: !3554, file: !165, line: 476, column: 21)
!3571 = !DILocation(line: 476, column: 21, scope: !3570)
!3572 = !DILocation(line: 477, column: 21, scope: !3554)
!3573 = !DILocation(line: 477, column: 21, scope: !3574)
!3574 = distinct !DILexicalBlock(scope: !3575, file: !165, line: 477, column: 21)
!3575 = distinct !DILexicalBlock(scope: !3554, file: !165, line: 477, column: 21)
!3576 = !DILocation(line: 477, column: 21, scope: !3575)
!3577 = !DILocation(line: 478, column: 21, scope: !3554)
!3578 = !DILocation(line: 478, column: 21, scope: !3579)
!3579 = distinct !DILexicalBlock(scope: !3580, file: !165, line: 478, column: 21)
!3580 = distinct !DILexicalBlock(scope: !3554, file: !165, line: 478, column: 21)
!3581 = !DILocation(line: 478, column: 21, scope: !3580)
!3582 = !DILocation(line: 479, column: 21, scope: !3554)
!3583 = !DILocation(line: 482, column: 21, scope: !3554)
!3584 = !DILocation(line: 483, column: 19, scope: !3554)
!3585 = !DILocation(line: 484, column: 15, scope: !3530)
!3586 = !DILocation(line: 487, column: 15, scope: !3530)
!3587 = !DILocation(line: 489, column: 11, scope: !3459)
!3588 = !DILocation(line: 491, column: 24, scope: !3459)
!3589 = !DILocation(line: 491, column: 31, scope: !3459)
!3590 = !DILocation(line: 492, column: 24, scope: !3459)
!3591 = !DILocation(line: 492, column: 31, scope: !3459)
!3592 = !DILocation(line: 493, column: 24, scope: !3459)
!3593 = !DILocation(line: 493, column: 31, scope: !3459)
!3594 = !DILocation(line: 494, column: 24, scope: !3459)
!3595 = !DILocation(line: 494, column: 31, scope: !3459)
!3596 = !DILocation(line: 495, column: 24, scope: !3459)
!3597 = !DILocation(line: 495, column: 31, scope: !3459)
!3598 = !DILocation(line: 496, column: 24, scope: !3459)
!3599 = !DILocation(line: 496, column: 31, scope: !3459)
!3600 = !DILocation(line: 497, column: 24, scope: !3459)
!3601 = !DILocation(line: 497, column: 31, scope: !3459)
!3602 = !DILocation(line: 498, column: 26, scope: !3459)
!3603 = !DILocation(line: 498, column: 24, scope: !3459)
!3604 = !DILocation(line: 500, column: 15, scope: !3605)
!3605 = distinct !DILexicalBlock(scope: !3459, file: !165, line: 500, column: 15)
!3606 = !DILocation(line: 500, column: 29, scope: !3605)
!3607 = !DILocation(line: 500, column: 15, scope: !3459)
!3608 = !DILocation(line: 502, column: 19, scope: !3609)
!3609 = distinct !DILexicalBlock(scope: !3610, file: !165, line: 502, column: 19)
!3610 = distinct !DILexicalBlock(scope: !3605, file: !165, line: 501, column: 13)
!3611 = !DILocation(line: 502, column: 19, scope: !3610)
!3612 = !DILocation(line: 503, column: 17, scope: !3609)
!3613 = !DILocation(line: 504, column: 15, scope: !3610)
!3614 = !DILocation(line: 509, column: 15, scope: !3615)
!3615 = distinct !DILexicalBlock(scope: !3459, file: !165, line: 509, column: 15)
!3616 = !DILocation(line: 509, column: 33, scope: !3615)
!3617 = !DILocation(line: 509, column: 36, scope: !3615)
!3618 = !DILocation(line: 509, column: 55, scope: !3615)
!3619 = !DILocation(line: 509, column: 58, scope: !3615)
!3620 = !DILocation(line: 509, column: 15, scope: !3459)
!3621 = !DILocation(line: 510, column: 13, scope: !3615)
!3622 = !DILabel(scope: !3459, name: "c_and_shell_escape", file: !165, line: 512)
!3623 = !DILocation(line: 512, column: 9, scope: !3459)
!3624 = !DILocation(line: 513, column: 15, scope: !3625)
!3625 = distinct !DILexicalBlock(scope: !3459, file: !165, line: 513, column: 15)
!3626 = !DILocation(line: 513, column: 29, scope: !3625)
!3627 = !DILocation(line: 514, column: 15, scope: !3625)
!3628 = !DILocation(line: 514, column: 18, scope: !3625)
!3629 = !DILocation(line: 513, column: 15, scope: !3459)
!3630 = !DILocation(line: 515, column: 13, scope: !3625)
!3631 = !DILabel(scope: !3459, name: "c_escape", file: !165, line: 517)
!3632 = !DILocation(line: 517, column: 9, scope: !3459)
!3633 = !DILocation(line: 518, column: 15, scope: !3634)
!3634 = distinct !DILexicalBlock(scope: !3459, file: !165, line: 518, column: 15)
!3635 = !DILocation(line: 518, column: 15, scope: !3459)
!3636 = !DILocation(line: 520, column: 19, scope: !3637)
!3637 = distinct !DILexicalBlock(scope: !3634, file: !165, line: 519, column: 13)
!3638 = !DILocation(line: 520, column: 17, scope: !3637)
!3639 = !DILocation(line: 521, column: 15, scope: !3637)
!3640 = !DILocation(line: 523, column: 11, scope: !3459)
!3641 = !DILocation(line: 526, column: 18, scope: !3642)
!3642 = distinct !DILexicalBlock(scope: !3459, file: !165, line: 526, column: 15)
!3643 = !DILocation(line: 526, column: 26, scope: !3642)
!3644 = !DILocation(line: 526, column: 15, scope: !3459)
!3645 = !DILocation(line: 526, column: 40, scope: !3642)
!3646 = !DILocation(line: 526, column: 47, scope: !3642)
!3647 = !DILocation(line: 526, column: 57, scope: !3642)
!3648 = !DILocation(line: 526, column: 65, scope: !3642)
!3649 = !DILocation(line: 527, column: 13, scope: !3642)
!3650 = !DILocation(line: 528, column: 11, scope: !3459)
!3651 = !DILocation(line: 530, column: 15, scope: !3652)
!3652 = distinct !DILexicalBlock(scope: !3459, file: !165, line: 530, column: 15)
!3653 = !DILocation(line: 530, column: 17, scope: !3652)
!3654 = !DILocation(line: 530, column: 15, scope: !3459)
!3655 = !DILocation(line: 531, column: 13, scope: !3652)
!3656 = !DILocation(line: 532, column: 11, scope: !3459)
!3657 = !DILocation(line: 534, column: 36, scope: !3459)
!3658 = !DILocation(line: 535, column: 11, scope: !3459)
!3659 = !DILocation(line: 548, column: 15, scope: !3660)
!3660 = distinct !DILexicalBlock(scope: !3459, file: !165, line: 548, column: 15)
!3661 = !DILocation(line: 548, column: 29, scope: !3660)
!3662 = !DILocation(line: 549, column: 15, scope: !3660)
!3663 = !DILocation(line: 549, column: 18, scope: !3660)
!3664 = !DILocation(line: 548, column: 15, scope: !3459)
!3665 = !DILocation(line: 550, column: 13, scope: !3660)
!3666 = !DILocation(line: 551, column: 11, scope: !3459)
!3667 = !DILocation(line: 554, column: 36, scope: !3459)
!3668 = !DILocation(line: 555, column: 36, scope: !3459)
!3669 = !DILocation(line: 556, column: 15, scope: !3670)
!3670 = distinct !DILexicalBlock(scope: !3459, file: !165, line: 556, column: 15)
!3671 = !DILocation(line: 556, column: 29, scope: !3670)
!3672 = !DILocation(line: 556, column: 15, scope: !3459)
!3673 = !DILocation(line: 558, column: 19, scope: !3674)
!3674 = distinct !DILexicalBlock(scope: !3675, file: !165, line: 558, column: 19)
!3675 = distinct !DILexicalBlock(scope: !3670, file: !165, line: 557, column: 13)
!3676 = !DILocation(line: 558, column: 19, scope: !3675)
!3677 = !DILocation(line: 559, column: 17, scope: !3674)
!3678 = !DILocation(line: 561, column: 19, scope: !3679)
!3679 = distinct !DILexicalBlock(scope: !3675, file: !165, line: 561, column: 19)
!3680 = !DILocation(line: 561, column: 30, scope: !3679)
!3681 = !DILocation(line: 561, column: 35, scope: !3679)
!3682 = !DILocation(line: 561, column: 19, scope: !3675)
!3683 = !DILocation(line: 566, column: 37, scope: !3684)
!3684 = distinct !DILexicalBlock(scope: !3679, file: !165, line: 562, column: 17)
!3685 = !DILocation(line: 566, column: 35, scope: !3684)
!3686 = !DILocation(line: 567, column: 30, scope: !3684)
!3687 = !DILocation(line: 568, column: 17, scope: !3684)
!3688 = !DILocation(line: 570, column: 15, scope: !3675)
!3689 = !DILocation(line: 570, column: 15, scope: !3690)
!3690 = distinct !DILexicalBlock(scope: !3691, file: !165, line: 570, column: 15)
!3691 = distinct !DILexicalBlock(scope: !3675, file: !165, line: 570, column: 15)
!3692 = !DILocation(line: 570, column: 15, scope: !3691)
!3693 = !DILocation(line: 571, column: 15, scope: !3675)
!3694 = !DILocation(line: 571, column: 15, scope: !3695)
!3695 = distinct !DILexicalBlock(scope: !3696, file: !165, line: 571, column: 15)
!3696 = distinct !DILexicalBlock(scope: !3675, file: !165, line: 571, column: 15)
!3697 = !DILocation(line: 571, column: 15, scope: !3696)
!3698 = !DILocation(line: 572, column: 15, scope: !3675)
!3699 = !DILocation(line: 572, column: 15, scope: !3700)
!3700 = distinct !DILexicalBlock(scope: !3701, file: !165, line: 572, column: 15)
!3701 = distinct !DILexicalBlock(scope: !3675, file: !165, line: 572, column: 15)
!3702 = !DILocation(line: 572, column: 15, scope: !3701)
!3703 = !DILocation(line: 573, column: 40, scope: !3675)
!3704 = !DILocation(line: 574, column: 13, scope: !3675)
!3705 = !DILocation(line: 575, column: 11, scope: !3459)
!3706 = !DILocation(line: 599, column: 36, scope: !3459)
!3707 = !DILocation(line: 600, column: 11, scope: !3459)
!3708 = !DILocalVariable(name: "m", scope: !3709, file: !165, line: 610, type: !57)
!3709 = distinct !DILexicalBlock(scope: !3459, file: !165, line: 608, column: 11)
!3710 = !DILocation(line: 610, column: 20, scope: !3709)
!3711 = !DILocalVariable(name: "printable", scope: !3709, file: !165, line: 612, type: !89)
!3712 = !DILocation(line: 612, column: 18, scope: !3709)
!3713 = !DILocation(line: 614, column: 17, scope: !3714)
!3714 = distinct !DILexicalBlock(scope: !3709, file: !165, line: 614, column: 17)
!3715 = !DILocation(line: 614, column: 17, scope: !3709)
!3716 = !DILocation(line: 616, column: 19, scope: !3717)
!3717 = distinct !DILexicalBlock(scope: !3714, file: !165, line: 615, column: 15)
!3718 = !DILocation(line: 617, column: 29, scope: !3717)
!3719 = !DILocation(line: 617, column: 41, scope: !3717)
!3720 = !DILocation(line: 617, column: 27, scope: !3717)
!3721 = !DILocation(line: 618, column: 15, scope: !3717)
!3722 = !DILocalVariable(name: "mbstate", scope: !3723, file: !165, line: 621, type: !3724)
!3723 = distinct !DILexicalBlock(scope: !3714, file: !165, line: 620, column: 15)
!3724 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !2059, line: 6, baseType: !3725)
!3725 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !2061, line: 21, baseType: !3726)
!3726 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2061, line: 13, size: 64, elements: !3727)
!3727 = !{!3728, !3729}
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !3726, file: !2061, line: 15, baseType: !60, size: 32)
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !3726, file: !2061, line: 20, baseType: !3730, size: 32, offset: 32)
!3730 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3726, file: !2061, line: 16, size: 32, elements: !3731)
!3731 = !{!3732, !3733}
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !3730, file: !2061, line: 18, baseType: !7, size: 32)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !3730, file: !2061, line: 19, baseType: !2070, size: 32)
!3734 = !DILocation(line: 621, column: 27, scope: !3723)
!3735 = !DILocation(line: 622, column: 17, scope: !3723)
!3736 = !DILocation(line: 624, column: 19, scope: !3723)
!3737 = !DILocation(line: 625, column: 27, scope: !3723)
!3738 = !DILocation(line: 626, column: 21, scope: !3739)
!3739 = distinct !DILexicalBlock(scope: !3723, file: !165, line: 626, column: 21)
!3740 = !DILocation(line: 626, column: 29, scope: !3739)
!3741 = !DILocation(line: 626, column: 21, scope: !3723)
!3742 = !DILocation(line: 627, column: 37, scope: !3739)
!3743 = !DILocation(line: 627, column: 29, scope: !3739)
!3744 = !DILocation(line: 627, column: 27, scope: !3739)
!3745 = !DILocation(line: 627, column: 19, scope: !3739)
!3746 = !DILocation(line: 629, column: 17, scope: !3723)
!3747 = !DILocalVariable(name: "w", scope: !3748, file: !165, line: 631, type: !2112)
!3748 = distinct !DILexicalBlock(scope: !3723, file: !165, line: 630, column: 19)
!3749 = !DILocation(line: 631, column: 29, scope: !3748)
!3750 = !DILocalVariable(name: "bytes", scope: !3748, file: !165, line: 632, type: !57)
!3751 = !DILocation(line: 632, column: 28, scope: !3748)
!3752 = !DILocation(line: 632, column: 50, scope: !3748)
!3753 = !DILocation(line: 632, column: 54, scope: !3748)
!3754 = !DILocation(line: 632, column: 58, scope: !3748)
!3755 = !DILocation(line: 632, column: 56, scope: !3748)
!3756 = !DILocation(line: 633, column: 45, scope: !3748)
!3757 = !DILocation(line: 633, column: 56, scope: !3748)
!3758 = !DILocation(line: 633, column: 60, scope: !3748)
!3759 = !DILocation(line: 633, column: 58, scope: !3748)
!3760 = !DILocation(line: 633, column: 53, scope: !3748)
!3761 = !DILocation(line: 632, column: 36, scope: !3748)
!3762 = !DILocation(line: 634, column: 25, scope: !3763)
!3763 = distinct !DILexicalBlock(scope: !3748, file: !165, line: 634, column: 25)
!3764 = !DILocation(line: 634, column: 31, scope: !3763)
!3765 = !DILocation(line: 634, column: 25, scope: !3748)
!3766 = !DILocation(line: 635, column: 23, scope: !3763)
!3767 = !DILocation(line: 636, column: 30, scope: !3768)
!3768 = distinct !DILexicalBlock(scope: !3763, file: !165, line: 636, column: 30)
!3769 = !DILocation(line: 636, column: 36, scope: !3768)
!3770 = !DILocation(line: 636, column: 30, scope: !3763)
!3771 = !DILocation(line: 638, column: 35, scope: !3772)
!3772 = distinct !DILexicalBlock(scope: !3768, file: !165, line: 637, column: 23)
!3773 = !DILocation(line: 639, column: 25, scope: !3772)
!3774 = !DILocation(line: 641, column: 30, scope: !3775)
!3775 = distinct !DILexicalBlock(scope: !3768, file: !165, line: 641, column: 30)
!3776 = !DILocation(line: 641, column: 36, scope: !3775)
!3777 = !DILocation(line: 641, column: 30, scope: !3768)
!3778 = !DILocation(line: 643, column: 35, scope: !3779)
!3779 = distinct !DILexicalBlock(scope: !3775, file: !165, line: 642, column: 23)
!3780 = !DILocation(line: 644, column: 25, scope: !3779)
!3781 = !DILocation(line: 644, column: 32, scope: !3779)
!3782 = !DILocation(line: 644, column: 36, scope: !3779)
!3783 = !DILocation(line: 644, column: 34, scope: !3779)
!3784 = !DILocation(line: 644, column: 40, scope: !3779)
!3785 = !DILocation(line: 644, column: 38, scope: !3779)
!3786 = !DILocation(line: 644, column: 48, scope: !3779)
!3787 = !DILocation(line: 644, column: 51, scope: !3779)
!3788 = !DILocation(line: 644, column: 55, scope: !3779)
!3789 = !DILocation(line: 644, column: 59, scope: !3779)
!3790 = !DILocation(line: 644, column: 57, scope: !3779)
!3791 = !DILocation(line: 0, scope: !3779)
!3792 = !DILocation(line: 645, column: 28, scope: !3779)
!3793 = distinct !{!3793, !3780, !3792, !975}
!3794 = !DILocation(line: 646, column: 25, scope: !3779)
!3795 = !DILocation(line: 654, column: 44, scope: !3796)
!3796 = distinct !DILexicalBlock(scope: !3797, file: !165, line: 654, column: 29)
!3797 = distinct !DILexicalBlock(scope: !3775, file: !165, line: 649, column: 23)
!3798 = !DILocation(line: 655, column: 29, scope: !3796)
!3799 = !DILocation(line: 655, column: 32, scope: !3796)
!3800 = !DILocation(line: 655, column: 46, scope: !3796)
!3801 = !DILocation(line: 654, column: 29, scope: !3797)
!3802 = !DILocalVariable(name: "j", scope: !3803, file: !165, line: 657, type: !57)
!3803 = distinct !DILexicalBlock(scope: !3796, file: !165, line: 656, column: 27)
!3804 = !DILocation(line: 657, column: 36, scope: !3803)
!3805 = !DILocation(line: 658, column: 36, scope: !3806)
!3806 = distinct !DILexicalBlock(scope: !3803, file: !165, line: 658, column: 29)
!3807 = !DILocation(line: 658, column: 34, scope: !3806)
!3808 = !DILocation(line: 658, column: 41, scope: !3809)
!3809 = distinct !DILexicalBlock(scope: !3806, file: !165, line: 658, column: 29)
!3810 = !DILocation(line: 658, column: 45, scope: !3809)
!3811 = !DILocation(line: 658, column: 43, scope: !3809)
!3812 = !DILocation(line: 658, column: 29, scope: !3806)
!3813 = !DILocation(line: 659, column: 39, scope: !3809)
!3814 = !DILocation(line: 659, column: 43, scope: !3809)
!3815 = !DILocation(line: 659, column: 47, scope: !3809)
!3816 = !DILocation(line: 659, column: 45, scope: !3809)
!3817 = !DILocation(line: 659, column: 51, scope: !3809)
!3818 = !DILocation(line: 659, column: 49, scope: !3809)
!3819 = !DILocation(line: 659, column: 31, scope: !3809)
!3820 = !DILocation(line: 663, column: 35, scope: !3821)
!3821 = distinct !DILexicalBlock(scope: !3809, file: !165, line: 660, column: 33)
!3822 = !DILocation(line: 666, column: 35, scope: !3821)
!3823 = !DILocation(line: 667, column: 33, scope: !3821)
!3824 = !DILocation(line: 658, column: 53, scope: !3809)
!3825 = !DILocation(line: 658, column: 29, scope: !3809)
!3826 = distinct !{!3826, !3812, !3827, !975}
!3827 = !DILocation(line: 667, column: 33, scope: !3806)
!3828 = !DILocation(line: 668, column: 27, scope: !3803)
!3829 = !DILocation(line: 670, column: 41, scope: !3830)
!3830 = distinct !DILexicalBlock(scope: !3797, file: !165, line: 670, column: 29)
!3831 = !DILocation(line: 670, column: 31, scope: !3830)
!3832 = !DILocation(line: 670, column: 29, scope: !3797)
!3833 = !DILocation(line: 671, column: 37, scope: !3830)
!3834 = !DILocation(line: 671, column: 27, scope: !3830)
!3835 = !DILocation(line: 672, column: 30, scope: !3797)
!3836 = !DILocation(line: 672, column: 27, scope: !3797)
!3837 = !DILocation(line: 674, column: 19, scope: !3748)
!3838 = !DILocation(line: 675, column: 26, scope: !3723)
!3839 = !DILocation(line: 675, column: 24, scope: !3723)
!3840 = distinct !{!3840, !3746, !3841, !975}
!3841 = !DILocation(line: 675, column: 44, scope: !3723)
!3842 = !DILocation(line: 678, column: 40, scope: !3709)
!3843 = !DILocation(line: 678, column: 38, scope: !3709)
!3844 = !DILocation(line: 680, column: 21, scope: !3845)
!3845 = distinct !DILexicalBlock(scope: !3709, file: !165, line: 680, column: 17)
!3846 = !DILocation(line: 680, column: 19, scope: !3845)
!3847 = !DILocation(line: 680, column: 23, scope: !3845)
!3848 = !DILocation(line: 680, column: 27, scope: !3845)
!3849 = !DILocation(line: 680, column: 45, scope: !3845)
!3850 = !DILocation(line: 680, column: 50, scope: !3845)
!3851 = !DILocation(line: 680, column: 17, scope: !3709)
!3852 = !DILocalVariable(name: "ilim", scope: !3853, file: !165, line: 684, type: !57)
!3853 = distinct !DILexicalBlock(scope: !3845, file: !165, line: 681, column: 15)
!3854 = !DILocation(line: 684, column: 24, scope: !3853)
!3855 = !DILocation(line: 684, column: 31, scope: !3853)
!3856 = !DILocation(line: 684, column: 35, scope: !3853)
!3857 = !DILocation(line: 684, column: 33, scope: !3853)
!3858 = !DILocation(line: 686, column: 17, scope: !3853)
!3859 = !DILocation(line: 688, column: 25, scope: !3860)
!3860 = distinct !DILexicalBlock(scope: !3861, file: !165, line: 688, column: 25)
!3861 = distinct !DILexicalBlock(scope: !3862, file: !165, line: 687, column: 19)
!3862 = distinct !DILexicalBlock(scope: !3863, file: !165, line: 686, column: 17)
!3863 = distinct !DILexicalBlock(scope: !3853, file: !165, line: 686, column: 17)
!3864 = !DILocation(line: 688, column: 43, scope: !3860)
!3865 = !DILocation(line: 688, column: 48, scope: !3860)
!3866 = !DILocation(line: 688, column: 25, scope: !3861)
!3867 = !DILocation(line: 690, column: 25, scope: !3868)
!3868 = distinct !DILexicalBlock(scope: !3860, file: !165, line: 689, column: 23)
!3869 = !DILocation(line: 690, column: 25, scope: !3870)
!3870 = distinct !DILexicalBlock(scope: !3871, file: !165, line: 690, column: 25)
!3871 = distinct !DILexicalBlock(scope: !3868, file: !165, line: 690, column: 25)
!3872 = !DILocation(line: 690, column: 25, scope: !3871)
!3873 = !DILocation(line: 690, column: 25, scope: !3874)
!3874 = distinct !DILexicalBlock(scope: !3871, file: !165, line: 690, column: 25)
!3875 = !DILocation(line: 690, column: 25, scope: !3876)
!3876 = distinct !DILexicalBlock(scope: !3874, file: !165, line: 690, column: 25)
!3877 = !DILocation(line: 690, column: 25, scope: !3878)
!3878 = distinct !DILexicalBlock(scope: !3879, file: !165, line: 690, column: 25)
!3879 = distinct !DILexicalBlock(scope: !3876, file: !165, line: 690, column: 25)
!3880 = !DILocation(line: 690, column: 25, scope: !3879)
!3881 = !DILocation(line: 690, column: 25, scope: !3882)
!3882 = distinct !DILexicalBlock(scope: !3883, file: !165, line: 690, column: 25)
!3883 = distinct !DILexicalBlock(scope: !3876, file: !165, line: 690, column: 25)
!3884 = !DILocation(line: 690, column: 25, scope: !3883)
!3885 = !DILocation(line: 690, column: 25, scope: !3886)
!3886 = distinct !DILexicalBlock(scope: !3887, file: !165, line: 690, column: 25)
!3887 = distinct !DILexicalBlock(scope: !3876, file: !165, line: 690, column: 25)
!3888 = !DILocation(line: 690, column: 25, scope: !3887)
!3889 = !DILocation(line: 690, column: 25, scope: !3890)
!3890 = distinct !DILexicalBlock(scope: !3891, file: !165, line: 690, column: 25)
!3891 = distinct !DILexicalBlock(scope: !3871, file: !165, line: 690, column: 25)
!3892 = !DILocation(line: 690, column: 25, scope: !3891)
!3893 = !DILocation(line: 691, column: 25, scope: !3868)
!3894 = !DILocation(line: 691, column: 25, scope: !3895)
!3895 = distinct !DILexicalBlock(scope: !3896, file: !165, line: 691, column: 25)
!3896 = distinct !DILexicalBlock(scope: !3868, file: !165, line: 691, column: 25)
!3897 = !DILocation(line: 691, column: 25, scope: !3896)
!3898 = !DILocation(line: 692, column: 25, scope: !3868)
!3899 = !DILocation(line: 692, column: 25, scope: !3900)
!3900 = distinct !DILexicalBlock(scope: !3901, file: !165, line: 692, column: 25)
!3901 = distinct !DILexicalBlock(scope: !3868, file: !165, line: 692, column: 25)
!3902 = !DILocation(line: 692, column: 25, scope: !3901)
!3903 = !DILocation(line: 693, column: 36, scope: !3868)
!3904 = !DILocation(line: 693, column: 38, scope: !3868)
!3905 = !DILocation(line: 693, column: 33, scope: !3868)
!3906 = !DILocation(line: 693, column: 29, scope: !3868)
!3907 = !DILocation(line: 693, column: 27, scope: !3868)
!3908 = !DILocation(line: 694, column: 23, scope: !3868)
!3909 = !DILocation(line: 695, column: 30, scope: !3910)
!3910 = distinct !DILexicalBlock(scope: !3860, file: !165, line: 695, column: 30)
!3911 = !DILocation(line: 695, column: 30, scope: !3860)
!3912 = !DILocation(line: 697, column: 25, scope: !3913)
!3913 = distinct !DILexicalBlock(scope: !3910, file: !165, line: 696, column: 23)
!3914 = !DILocation(line: 697, column: 25, scope: !3915)
!3915 = distinct !DILexicalBlock(scope: !3916, file: !165, line: 697, column: 25)
!3916 = distinct !DILexicalBlock(scope: !3913, file: !165, line: 697, column: 25)
!3917 = !DILocation(line: 697, column: 25, scope: !3916)
!3918 = !DILocation(line: 698, column: 40, scope: !3913)
!3919 = !DILocation(line: 699, column: 23, scope: !3913)
!3920 = !DILocation(line: 700, column: 25, scope: !3921)
!3921 = distinct !DILexicalBlock(scope: !3861, file: !165, line: 700, column: 25)
!3922 = !DILocation(line: 700, column: 33, scope: !3921)
!3923 = !DILocation(line: 700, column: 35, scope: !3921)
!3924 = !DILocation(line: 700, column: 30, scope: !3921)
!3925 = !DILocation(line: 700, column: 25, scope: !3861)
!3926 = !DILocation(line: 701, column: 23, scope: !3921)
!3927 = !DILocation(line: 702, column: 21, scope: !3861)
!3928 = !DILocation(line: 702, column: 21, scope: !3929)
!3929 = distinct !DILexicalBlock(scope: !3930, file: !165, line: 702, column: 21)
!3930 = distinct !DILexicalBlock(scope: !3861, file: !165, line: 702, column: 21)
!3931 = !DILocation(line: 702, column: 21, scope: !3930)
!3932 = !DILocation(line: 702, column: 21, scope: !3933)
!3933 = distinct !DILexicalBlock(scope: !3929, file: !165, line: 702, column: 21)
!3934 = !DILocation(line: 702, column: 21, scope: !3935)
!3935 = distinct !DILexicalBlock(scope: !3936, file: !165, line: 702, column: 21)
!3936 = distinct !DILexicalBlock(scope: !3933, file: !165, line: 702, column: 21)
!3937 = !DILocation(line: 702, column: 21, scope: !3936)
!3938 = !DILocation(line: 702, column: 21, scope: !3939)
!3939 = distinct !DILexicalBlock(scope: !3940, file: !165, line: 702, column: 21)
!3940 = distinct !DILexicalBlock(scope: !3933, file: !165, line: 702, column: 21)
!3941 = !DILocation(line: 702, column: 21, scope: !3940)
!3942 = !DILocation(line: 703, column: 21, scope: !3861)
!3943 = !DILocation(line: 703, column: 21, scope: !3944)
!3944 = distinct !DILexicalBlock(scope: !3945, file: !165, line: 703, column: 21)
!3945 = distinct !DILexicalBlock(scope: !3861, file: !165, line: 703, column: 21)
!3946 = !DILocation(line: 703, column: 21, scope: !3945)
!3947 = !DILocation(line: 704, column: 25, scope: !3861)
!3948 = !DILocation(line: 704, column: 29, scope: !3861)
!3949 = !DILocation(line: 704, column: 23, scope: !3861)
!3950 = !DILocation(line: 686, column: 17, scope: !3862)
!3951 = distinct !{!3951, !3952, !3953}
!3952 = !DILocation(line: 686, column: 17, scope: !3863)
!3953 = !DILocation(line: 705, column: 19, scope: !3863)
!3954 = !DILocation(line: 707, column: 17, scope: !3853)
!3955 = !DILocation(line: 710, column: 9, scope: !3459)
!3956 = !DILocation(line: 712, column: 16, scope: !3957)
!3957 = distinct !DILexicalBlock(scope: !3405, file: !165, line: 712, column: 11)
!3958 = !DILocation(line: 712, column: 34, scope: !3957)
!3959 = !DILocation(line: 712, column: 37, scope: !3957)
!3960 = !DILocation(line: 712, column: 51, scope: !3957)
!3961 = !DILocation(line: 713, column: 15, scope: !3957)
!3962 = !DILocation(line: 713, column: 18, scope: !3957)
!3963 = !DILocation(line: 714, column: 14, scope: !3957)
!3964 = !DILocation(line: 714, column: 17, scope: !3957)
!3965 = !DILocation(line: 715, column: 14, scope: !3957)
!3966 = !DILocation(line: 715, column: 17, scope: !3957)
!3967 = !DILocation(line: 715, column: 33, scope: !3957)
!3968 = !DILocation(line: 715, column: 35, scope: !3957)
!3969 = !DILocation(line: 715, column: 51, scope: !3957)
!3970 = !DILocation(line: 715, column: 53, scope: !3957)
!3971 = !DILocation(line: 715, column: 47, scope: !3957)
!3972 = !DILocation(line: 715, column: 65, scope: !3957)
!3973 = !DILocation(line: 716, column: 11, scope: !3957)
!3974 = !DILocation(line: 716, column: 15, scope: !3957)
!3975 = !DILocation(line: 712, column: 11, scope: !3405)
!3976 = !DILocation(line: 717, column: 9, scope: !3957)
!3977 = !DILabel(scope: !3405, name: "store_escape", file: !165, line: 719)
!3978 = !DILocation(line: 719, column: 5, scope: !3405)
!3979 = !DILocation(line: 720, column: 7, scope: !3405)
!3980 = !DILocation(line: 720, column: 7, scope: !3981)
!3981 = distinct !DILexicalBlock(scope: !3982, file: !165, line: 720, column: 7)
!3982 = distinct !DILexicalBlock(scope: !3405, file: !165, line: 720, column: 7)
!3983 = !DILocation(line: 720, column: 7, scope: !3982)
!3984 = !DILocation(line: 720, column: 7, scope: !3985)
!3985 = distinct !DILexicalBlock(scope: !3982, file: !165, line: 720, column: 7)
!3986 = !DILocation(line: 720, column: 7, scope: !3987)
!3987 = distinct !DILexicalBlock(scope: !3985, file: !165, line: 720, column: 7)
!3988 = !DILocation(line: 720, column: 7, scope: !3989)
!3989 = distinct !DILexicalBlock(scope: !3990, file: !165, line: 720, column: 7)
!3990 = distinct !DILexicalBlock(scope: !3987, file: !165, line: 720, column: 7)
!3991 = !DILocation(line: 720, column: 7, scope: !3990)
!3992 = !DILocation(line: 720, column: 7, scope: !3993)
!3993 = distinct !DILexicalBlock(scope: !3994, file: !165, line: 720, column: 7)
!3994 = distinct !DILexicalBlock(scope: !3987, file: !165, line: 720, column: 7)
!3995 = !DILocation(line: 720, column: 7, scope: !3994)
!3996 = !DILocation(line: 720, column: 7, scope: !3997)
!3997 = distinct !DILexicalBlock(scope: !3998, file: !165, line: 720, column: 7)
!3998 = distinct !DILexicalBlock(scope: !3987, file: !165, line: 720, column: 7)
!3999 = !DILocation(line: 720, column: 7, scope: !3998)
!4000 = !DILocation(line: 720, column: 7, scope: !4001)
!4001 = distinct !DILexicalBlock(scope: !4002, file: !165, line: 720, column: 7)
!4002 = distinct !DILexicalBlock(scope: !3982, file: !165, line: 720, column: 7)
!4003 = !DILocation(line: 720, column: 7, scope: !4002)
!4004 = !DILabel(scope: !3405, name: "store_c", file: !165, line: 722)
!4005 = !DILocation(line: 722, column: 5, scope: !3405)
!4006 = !DILocation(line: 723, column: 7, scope: !3405)
!4007 = !DILocation(line: 723, column: 7, scope: !4008)
!4008 = distinct !DILexicalBlock(scope: !4009, file: !165, line: 723, column: 7)
!4009 = distinct !DILexicalBlock(scope: !3405, file: !165, line: 723, column: 7)
!4010 = !DILocation(line: 723, column: 7, scope: !4009)
!4011 = !DILocation(line: 723, column: 7, scope: !4012)
!4012 = distinct !DILexicalBlock(scope: !4008, file: !165, line: 723, column: 7)
!4013 = !DILocation(line: 723, column: 7, scope: !4014)
!4014 = distinct !DILexicalBlock(scope: !4015, file: !165, line: 723, column: 7)
!4015 = distinct !DILexicalBlock(scope: !4012, file: !165, line: 723, column: 7)
!4016 = !DILocation(line: 723, column: 7, scope: !4015)
!4017 = !DILocation(line: 723, column: 7, scope: !4018)
!4018 = distinct !DILexicalBlock(scope: !4019, file: !165, line: 723, column: 7)
!4019 = distinct !DILexicalBlock(scope: !4012, file: !165, line: 723, column: 7)
!4020 = !DILocation(line: 723, column: 7, scope: !4019)
!4021 = !DILocation(line: 724, column: 7, scope: !3405)
!4022 = !DILocation(line: 724, column: 7, scope: !4023)
!4023 = distinct !DILexicalBlock(scope: !4024, file: !165, line: 724, column: 7)
!4024 = distinct !DILexicalBlock(scope: !3405, file: !165, line: 724, column: 7)
!4025 = !DILocation(line: 724, column: 7, scope: !4024)
!4026 = !DILocation(line: 726, column: 13, scope: !4027)
!4027 = distinct !DILexicalBlock(scope: !3405, file: !165, line: 726, column: 11)
!4028 = !DILocation(line: 726, column: 11, scope: !3405)
!4029 = !DILocation(line: 727, column: 38, scope: !4027)
!4030 = !DILocation(line: 727, column: 9, scope: !4027)
!4031 = !DILocation(line: 728, column: 5, scope: !3405)
!4032 = !DILocation(line: 400, column: 75, scope: !3394)
!4033 = !DILocation(line: 400, column: 3, scope: !3394)
!4034 = distinct !{!4034, !3403, !4035, !975}
!4035 = !DILocation(line: 728, column: 5, scope: !3391)
!4036 = !DILocation(line: 730, column: 7, scope: !4037)
!4037 = distinct !DILexicalBlock(scope: !3252, file: !165, line: 730, column: 7)
!4038 = !DILocation(line: 730, column: 11, scope: !4037)
!4039 = !DILocation(line: 730, column: 16, scope: !4037)
!4040 = !DILocation(line: 730, column: 19, scope: !4037)
!4041 = !DILocation(line: 730, column: 33, scope: !4037)
!4042 = !DILocation(line: 731, column: 7, scope: !4037)
!4043 = !DILocation(line: 731, column: 10, scope: !4037)
!4044 = !DILocation(line: 730, column: 7, scope: !3252)
!4045 = !DILocation(line: 732, column: 5, scope: !4037)
!4046 = !DILocation(line: 738, column: 7, scope: !4047)
!4047 = distinct !DILexicalBlock(scope: !3252, file: !165, line: 738, column: 7)
!4048 = !DILocation(line: 738, column: 21, scope: !4047)
!4049 = !DILocation(line: 738, column: 51, scope: !4047)
!4050 = !DILocation(line: 738, column: 56, scope: !4047)
!4051 = !DILocation(line: 739, column: 7, scope: !4047)
!4052 = !DILocation(line: 739, column: 10, scope: !4047)
!4053 = !DILocation(line: 738, column: 7, scope: !3252)
!4054 = !DILocation(line: 741, column: 11, scope: !4055)
!4055 = distinct !DILexicalBlock(scope: !4056, file: !165, line: 741, column: 11)
!4056 = distinct !DILexicalBlock(scope: !4047, file: !165, line: 740, column: 5)
!4057 = !DILocation(line: 741, column: 11, scope: !4056)
!4058 = !DILocation(line: 742, column: 42, scope: !4055)
!4059 = !DILocation(line: 742, column: 50, scope: !4055)
!4060 = !DILocation(line: 742, column: 67, scope: !4055)
!4061 = !DILocation(line: 742, column: 72, scope: !4055)
!4062 = !DILocation(line: 744, column: 42, scope: !4055)
!4063 = !DILocation(line: 744, column: 49, scope: !4055)
!4064 = !DILocation(line: 745, column: 42, scope: !4055)
!4065 = !DILocation(line: 745, column: 54, scope: !4055)
!4066 = !DILocation(line: 742, column: 16, scope: !4055)
!4067 = !DILocation(line: 742, column: 9, scope: !4055)
!4068 = !DILocation(line: 746, column: 18, scope: !4069)
!4069 = distinct !DILexicalBlock(scope: !4055, file: !165, line: 746, column: 16)
!4070 = !DILocation(line: 746, column: 29, scope: !4069)
!4071 = !DILocation(line: 746, column: 32, scope: !4069)
!4072 = !DILocation(line: 746, column: 16, scope: !4055)
!4073 = !DILocation(line: 749, column: 24, scope: !4074)
!4074 = distinct !DILexicalBlock(scope: !4069, file: !165, line: 747, column: 9)
!4075 = !DILocation(line: 749, column: 22, scope: !4074)
!4076 = !DILocation(line: 750, column: 15, scope: !4074)
!4077 = !DILocation(line: 751, column: 11, scope: !4074)
!4078 = !DILocation(line: 753, column: 5, scope: !4056)
!4079 = !DILocation(line: 755, column: 7, scope: !4080)
!4080 = distinct !DILexicalBlock(scope: !3252, file: !165, line: 755, column: 7)
!4081 = !DILocation(line: 755, column: 20, scope: !4080)
!4082 = !DILocation(line: 755, column: 24, scope: !4080)
!4083 = !DILocation(line: 755, column: 7, scope: !3252)
!4084 = !DILocation(line: 756, column: 5, scope: !4080)
!4085 = !DILocation(line: 756, column: 13, scope: !4086)
!4086 = distinct !DILexicalBlock(scope: !4087, file: !165, line: 756, column: 5)
!4087 = distinct !DILexicalBlock(scope: !4080, file: !165, line: 756, column: 5)
!4088 = !DILocation(line: 756, column: 12, scope: !4086)
!4089 = !DILocation(line: 756, column: 5, scope: !4087)
!4090 = !DILocation(line: 757, column: 7, scope: !4086)
!4091 = !DILocation(line: 757, column: 7, scope: !4092)
!4092 = distinct !DILexicalBlock(scope: !4093, file: !165, line: 757, column: 7)
!4093 = distinct !DILexicalBlock(scope: !4086, file: !165, line: 757, column: 7)
!4094 = !DILocation(line: 757, column: 7, scope: !4093)
!4095 = !DILocation(line: 756, column: 39, scope: !4086)
!4096 = !DILocation(line: 756, column: 5, scope: !4086)
!4097 = distinct !{!4097, !4089, !4098, !975}
!4098 = !DILocation(line: 757, column: 7, scope: !4087)
!4099 = !DILocation(line: 759, column: 7, scope: !4100)
!4100 = distinct !DILexicalBlock(scope: !3252, file: !165, line: 759, column: 7)
!4101 = !DILocation(line: 759, column: 13, scope: !4100)
!4102 = !DILocation(line: 759, column: 11, scope: !4100)
!4103 = !DILocation(line: 759, column: 7, scope: !3252)
!4104 = !DILocation(line: 760, column: 5, scope: !4100)
!4105 = !DILocation(line: 760, column: 12, scope: !4100)
!4106 = !DILocation(line: 760, column: 17, scope: !4100)
!4107 = !DILocation(line: 761, column: 10, scope: !3252)
!4108 = !DILocation(line: 761, column: 3, scope: !3252)
!4109 = !DILabel(scope: !3252, name: "force_outer_quoting_style", file: !165, line: 763)
!4110 = !DILocation(line: 763, column: 2, scope: !3252)
!4111 = !DILocation(line: 766, column: 7, scope: !4112)
!4112 = distinct !DILexicalBlock(scope: !3252, file: !165, line: 766, column: 7)
!4113 = !DILocation(line: 766, column: 21, scope: !4112)
!4114 = !DILocation(line: 766, column: 51, scope: !4112)
!4115 = !DILocation(line: 766, column: 54, scope: !4112)
!4116 = !DILocation(line: 766, column: 7, scope: !3252)
!4117 = !DILocation(line: 767, column: 19, scope: !4112)
!4118 = !DILocation(line: 767, column: 5, scope: !4112)
!4119 = !DILocation(line: 768, column: 36, scope: !3252)
!4120 = !DILocation(line: 768, column: 44, scope: !3252)
!4121 = !DILocation(line: 768, column: 56, scope: !3252)
!4122 = !DILocation(line: 768, column: 61, scope: !3252)
!4123 = !DILocation(line: 769, column: 36, scope: !3252)
!4124 = !DILocation(line: 770, column: 36, scope: !3252)
!4125 = !DILocation(line: 770, column: 42, scope: !3252)
!4126 = !DILocation(line: 771, column: 36, scope: !3252)
!4127 = !DILocation(line: 771, column: 48, scope: !3252)
!4128 = !DILocation(line: 768, column: 10, scope: !3252)
!4129 = !DILocation(line: 768, column: 3, scope: !3252)
!4130 = !DILocation(line: 772, column: 1, scope: !3252)
!4131 = distinct !DISubprogram(name: "gettext_quote", scope: !165, file: !165, line: 207, type: !4132, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !164, retainedNodes: !69)
!4132 = !DISubroutineType(types: !4133)
!4133 = !{!52, !52, !5}
!4134 = !DILocalVariable(name: "msgid", arg: 1, scope: !4131, file: !165, line: 207, type: !52)
!4135 = !DILocation(line: 207, column: 28, scope: !4131)
!4136 = !DILocalVariable(name: "s", arg: 2, scope: !4131, file: !165, line: 207, type: !5)
!4137 = !DILocation(line: 207, column: 54, scope: !4131)
!4138 = !DILocalVariable(name: "translation", scope: !4131, file: !165, line: 209, type: !52)
!4139 = !DILocation(line: 209, column: 15, scope: !4131)
!4140 = !DILocation(line: 209, column: 29, scope: !4131)
!4141 = !DILocalVariable(name: "locale_code", scope: !4131, file: !165, line: 210, type: !52)
!4142 = !DILocation(line: 210, column: 15, scope: !4131)
!4143 = !DILocation(line: 212, column: 7, scope: !4144)
!4144 = distinct !DILexicalBlock(scope: !4131, file: !165, line: 212, column: 7)
!4145 = !DILocation(line: 212, column: 22, scope: !4144)
!4146 = !DILocation(line: 212, column: 19, scope: !4144)
!4147 = !DILocation(line: 212, column: 7, scope: !4131)
!4148 = !DILocation(line: 213, column: 12, scope: !4144)
!4149 = !DILocation(line: 213, column: 5, scope: !4144)
!4150 = !DILocation(line: 233, column: 17, scope: !4131)
!4151 = !DILocation(line: 233, column: 15, scope: !4131)
!4152 = !DILocation(line: 234, column: 7, scope: !4153)
!4153 = distinct !DILexicalBlock(scope: !4131, file: !165, line: 234, column: 7)
!4154 = !DILocation(line: 234, column: 7, scope: !4131)
!4155 = !DILocation(line: 235, column: 12, scope: !4153)
!4156 = !DILocation(line: 235, column: 21, scope: !4153)
!4157 = !DILocation(line: 235, column: 5, scope: !4153)
!4158 = !DILocation(line: 236, column: 7, scope: !4159)
!4159 = distinct !DILexicalBlock(scope: !4131, file: !165, line: 236, column: 7)
!4160 = !DILocation(line: 236, column: 7, scope: !4131)
!4161 = !DILocation(line: 237, column: 12, scope: !4159)
!4162 = !DILocation(line: 237, column: 21, scope: !4159)
!4163 = !DILocation(line: 237, column: 5, scope: !4159)
!4164 = !DILocation(line: 239, column: 11, scope: !4131)
!4165 = !DILocation(line: 239, column: 13, scope: !4131)
!4166 = !DILocation(line: 239, column: 3, scope: !4131)
!4167 = !DILocation(line: 240, column: 1, scope: !4131)
!4168 = distinct !DISubprogram(name: "quotearg_alloc", scope: !165, file: !165, line: 799, type: !4169, scopeLine: 801, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !164, retainedNodes: !69)
!4169 = !DISubroutineType(types: !4170)
!4170 = !{!56, !52, !57, !3091}
!4171 = !DILocalVariable(name: "arg", arg: 1, scope: !4168, file: !165, line: 799, type: !52)
!4172 = !DILocation(line: 799, column: 29, scope: !4168)
!4173 = !DILocalVariable(name: "argsize", arg: 2, scope: !4168, file: !165, line: 799, type: !57)
!4174 = !DILocation(line: 799, column: 41, scope: !4168)
!4175 = !DILocalVariable(name: "o", arg: 3, scope: !4168, file: !165, line: 800, type: !3091)
!4176 = !DILocation(line: 800, column: 47, scope: !4168)
!4177 = !DILocation(line: 802, column: 30, scope: !4168)
!4178 = !DILocation(line: 802, column: 35, scope: !4168)
!4179 = !DILocation(line: 802, column: 50, scope: !4168)
!4180 = !DILocation(line: 802, column: 10, scope: !4168)
!4181 = !DILocation(line: 802, column: 3, scope: !4168)
!4182 = distinct !DISubprogram(name: "quotearg_alloc_mem", scope: !165, file: !165, line: 812, type: !4183, scopeLine: 814, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !164, retainedNodes: !69)
!4183 = !DISubroutineType(types: !4184)
!4184 = !{!56, !52, !57, !490, !3091}
!4185 = !DILocalVariable(name: "arg", arg: 1, scope: !4182, file: !165, line: 812, type: !52)
!4186 = !DILocation(line: 812, column: 33, scope: !4182)
!4187 = !DILocalVariable(name: "argsize", arg: 2, scope: !4182, file: !165, line: 812, type: !57)
!4188 = !DILocation(line: 812, column: 45, scope: !4182)
!4189 = !DILocalVariable(name: "size", arg: 3, scope: !4182, file: !165, line: 812, type: !490)
!4190 = !DILocation(line: 812, column: 62, scope: !4182)
!4191 = !DILocalVariable(name: "o", arg: 4, scope: !4182, file: !165, line: 813, type: !3091)
!4192 = !DILocation(line: 813, column: 51, scope: !4182)
!4193 = !DILocalVariable(name: "p", scope: !4182, file: !165, line: 815, type: !3091)
!4194 = !DILocation(line: 815, column: 33, scope: !4182)
!4195 = !DILocation(line: 815, column: 37, scope: !4182)
!4196 = !DILocation(line: 815, column: 41, scope: !4182)
!4197 = !DILocalVariable(name: "e", scope: !4182, file: !165, line: 816, type: !60)
!4198 = !DILocation(line: 816, column: 7, scope: !4182)
!4199 = !DILocation(line: 816, column: 11, scope: !4182)
!4200 = !DILocalVariable(name: "flags", scope: !4182, file: !165, line: 818, type: !60)
!4201 = !DILocation(line: 818, column: 7, scope: !4182)
!4202 = !DILocation(line: 818, column: 15, scope: !4182)
!4203 = !DILocation(line: 818, column: 18, scope: !4182)
!4204 = !DILocation(line: 818, column: 27, scope: !4182)
!4205 = !DILocation(line: 818, column: 24, scope: !4182)
!4206 = !DILocalVariable(name: "bufsize", scope: !4182, file: !165, line: 819, type: !57)
!4207 = !DILocation(line: 819, column: 10, scope: !4182)
!4208 = !DILocation(line: 819, column: 52, scope: !4182)
!4209 = !DILocation(line: 819, column: 57, scope: !4182)
!4210 = !DILocation(line: 819, column: 66, scope: !4182)
!4211 = !DILocation(line: 819, column: 69, scope: !4182)
!4212 = !DILocation(line: 820, column: 46, scope: !4182)
!4213 = !DILocation(line: 820, column: 53, scope: !4182)
!4214 = !DILocation(line: 820, column: 56, scope: !4182)
!4215 = !DILocation(line: 821, column: 46, scope: !4182)
!4216 = !DILocation(line: 821, column: 49, scope: !4182)
!4217 = !DILocation(line: 822, column: 46, scope: !4182)
!4218 = !DILocation(line: 822, column: 49, scope: !4182)
!4219 = !DILocation(line: 819, column: 20, scope: !4182)
!4220 = !DILocation(line: 822, column: 62, scope: !4182)
!4221 = !DILocalVariable(name: "buf", scope: !4182, file: !165, line: 823, type: !56)
!4222 = !DILocation(line: 823, column: 9, scope: !4182)
!4223 = !DILocation(line: 823, column: 27, scope: !4182)
!4224 = !DILocation(line: 823, column: 15, scope: !4182)
!4225 = !DILocation(line: 824, column: 29, scope: !4182)
!4226 = !DILocation(line: 824, column: 34, scope: !4182)
!4227 = !DILocation(line: 824, column: 43, scope: !4182)
!4228 = !DILocation(line: 824, column: 48, scope: !4182)
!4229 = !DILocation(line: 824, column: 57, scope: !4182)
!4230 = !DILocation(line: 824, column: 60, scope: !4182)
!4231 = !DILocation(line: 824, column: 67, scope: !4182)
!4232 = !DILocation(line: 825, column: 29, scope: !4182)
!4233 = !DILocation(line: 825, column: 32, scope: !4182)
!4234 = !DILocation(line: 826, column: 29, scope: !4182)
!4235 = !DILocation(line: 826, column: 32, scope: !4182)
!4236 = !DILocation(line: 826, column: 44, scope: !4182)
!4237 = !DILocation(line: 826, column: 47, scope: !4182)
!4238 = !DILocation(line: 824, column: 3, scope: !4182)
!4239 = !DILocation(line: 827, column: 11, scope: !4182)
!4240 = !DILocation(line: 827, column: 3, scope: !4182)
!4241 = !DILocation(line: 827, column: 9, scope: !4182)
!4242 = !DILocation(line: 828, column: 7, scope: !4243)
!4243 = distinct !DILexicalBlock(scope: !4182, file: !165, line: 828, column: 7)
!4244 = !DILocation(line: 828, column: 7, scope: !4182)
!4245 = !DILocation(line: 829, column: 13, scope: !4243)
!4246 = !DILocation(line: 829, column: 21, scope: !4243)
!4247 = !DILocation(line: 829, column: 6, scope: !4243)
!4248 = !DILocation(line: 829, column: 11, scope: !4243)
!4249 = !DILocation(line: 829, column: 5, scope: !4243)
!4250 = !DILocation(line: 830, column: 10, scope: !4182)
!4251 = !DILocation(line: 830, column: 3, scope: !4182)
!4252 = distinct !DISubprogram(name: "quotearg_free", scope: !165, file: !165, line: 848, type: !227, scopeLine: 849, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !164, retainedNodes: !69)
!4253 = !DILocalVariable(name: "sv", scope: !4252, file: !165, line: 850, type: !199)
!4254 = !DILocation(line: 850, column: 19, scope: !4252)
!4255 = !DILocation(line: 850, column: 24, scope: !4252)
!4256 = !DILocalVariable(name: "i", scope: !4252, file: !165, line: 851, type: !60)
!4257 = !DILocation(line: 851, column: 7, scope: !4252)
!4258 = !DILocation(line: 852, column: 10, scope: !4259)
!4259 = distinct !DILexicalBlock(scope: !4252, file: !165, line: 852, column: 3)
!4260 = !DILocation(line: 852, column: 8, scope: !4259)
!4261 = !DILocation(line: 852, column: 15, scope: !4262)
!4262 = distinct !DILexicalBlock(scope: !4259, file: !165, line: 852, column: 3)
!4263 = !DILocation(line: 852, column: 19, scope: !4262)
!4264 = !DILocation(line: 852, column: 17, scope: !4262)
!4265 = !DILocation(line: 852, column: 3, scope: !4259)
!4266 = !DILocation(line: 853, column: 11, scope: !4262)
!4267 = !DILocation(line: 853, column: 14, scope: !4262)
!4268 = !DILocation(line: 853, column: 17, scope: !4262)
!4269 = !DILocation(line: 853, column: 5, scope: !4262)
!4270 = !DILocation(line: 852, column: 28, scope: !4262)
!4271 = !DILocation(line: 852, column: 3, scope: !4262)
!4272 = distinct !{!4272, !4265, !4273, !975}
!4273 = !DILocation(line: 853, column: 20, scope: !4259)
!4274 = !DILocation(line: 854, column: 7, scope: !4275)
!4275 = distinct !DILexicalBlock(scope: !4252, file: !165, line: 854, column: 7)
!4276 = !DILocation(line: 854, column: 13, scope: !4275)
!4277 = !DILocation(line: 854, column: 17, scope: !4275)
!4278 = !DILocation(line: 854, column: 7, scope: !4252)
!4279 = !DILocation(line: 856, column: 13, scope: !4280)
!4280 = distinct !DILexicalBlock(scope: !4275, file: !165, line: 855, column: 5)
!4281 = !DILocation(line: 856, column: 19, scope: !4280)
!4282 = !DILocation(line: 856, column: 7, scope: !4280)
!4283 = !DILocation(line: 857, column: 21, scope: !4280)
!4284 = !DILocation(line: 858, column: 20, scope: !4280)
!4285 = !DILocation(line: 859, column: 5, scope: !4280)
!4286 = !DILocation(line: 860, column: 7, scope: !4287)
!4287 = distinct !DILexicalBlock(scope: !4252, file: !165, line: 860, column: 7)
!4288 = !DILocation(line: 860, column: 10, scope: !4287)
!4289 = !DILocation(line: 860, column: 7, scope: !4252)
!4290 = !DILocation(line: 862, column: 13, scope: !4291)
!4291 = distinct !DILexicalBlock(scope: !4287, file: !165, line: 861, column: 5)
!4292 = !DILocation(line: 862, column: 7, scope: !4291)
!4293 = !DILocation(line: 863, column: 15, scope: !4291)
!4294 = !DILocation(line: 864, column: 5, scope: !4291)
!4295 = !DILocation(line: 865, column: 10, scope: !4252)
!4296 = !DILocation(line: 866, column: 1, scope: !4252)
!4297 = distinct !DISubprogram(name: "quotearg_n", scope: !165, file: !165, line: 931, type: !4298, scopeLine: 932, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !164, retainedNodes: !69)
!4298 = !DISubroutineType(types: !4299)
!4299 = !{!56, !60, !52}
!4300 = !DILocalVariable(name: "n", arg: 1, scope: !4297, file: !165, line: 931, type: !60)
!4301 = !DILocation(line: 931, column: 17, scope: !4297)
!4302 = !DILocalVariable(name: "arg", arg: 2, scope: !4297, file: !165, line: 931, type: !52)
!4303 = !DILocation(line: 931, column: 32, scope: !4297)
!4304 = !DILocation(line: 933, column: 30, scope: !4297)
!4305 = !DILocation(line: 933, column: 33, scope: !4297)
!4306 = !DILocation(line: 933, column: 10, scope: !4297)
!4307 = !DILocation(line: 933, column: 3, scope: !4297)
!4308 = distinct !DISubprogram(name: "quotearg_n_options", scope: !165, file: !165, line: 877, type: !4309, scopeLine: 879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !164, retainedNodes: !69)
!4309 = !DISubroutineType(types: !4310)
!4310 = !{!56, !60, !52, !57, !3091}
!4311 = !DILocalVariable(name: "n", arg: 1, scope: !4308, file: !165, line: 877, type: !60)
!4312 = !DILocation(line: 877, column: 25, scope: !4308)
!4313 = !DILocalVariable(name: "arg", arg: 2, scope: !4308, file: !165, line: 877, type: !52)
!4314 = !DILocation(line: 877, column: 40, scope: !4308)
!4315 = !DILocalVariable(name: "argsize", arg: 3, scope: !4308, file: !165, line: 877, type: !57)
!4316 = !DILocation(line: 877, column: 52, scope: !4308)
!4317 = !DILocalVariable(name: "options", arg: 4, scope: !4308, file: !165, line: 878, type: !3091)
!4318 = !DILocation(line: 878, column: 51, scope: !4308)
!4319 = !DILocalVariable(name: "e", scope: !4308, file: !165, line: 880, type: !60)
!4320 = !DILocation(line: 880, column: 7, scope: !4308)
!4321 = !DILocation(line: 880, column: 11, scope: !4308)
!4322 = !DILocalVariable(name: "sv", scope: !4308, file: !165, line: 882, type: !199)
!4323 = !DILocation(line: 882, column: 19, scope: !4308)
!4324 = !DILocation(line: 882, column: 24, scope: !4308)
!4325 = !DILocation(line: 884, column: 7, scope: !4326)
!4326 = distinct !DILexicalBlock(scope: !4308, file: !165, line: 884, column: 7)
!4327 = !DILocation(line: 884, column: 9, scope: !4326)
!4328 = !DILocation(line: 884, column: 7, scope: !4308)
!4329 = !DILocation(line: 885, column: 5, scope: !4326)
!4330 = !DILocation(line: 887, column: 7, scope: !4331)
!4331 = distinct !DILexicalBlock(scope: !4308, file: !165, line: 887, column: 7)
!4332 = !DILocation(line: 887, column: 17, scope: !4331)
!4333 = !DILocation(line: 887, column: 14, scope: !4331)
!4334 = !DILocation(line: 887, column: 7, scope: !4308)
!4335 = !DILocalVariable(name: "preallocated", scope: !4336, file: !165, line: 889, type: !89)
!4336 = distinct !DILexicalBlock(scope: !4331, file: !165, line: 888, column: 5)
!4337 = !DILocation(line: 889, column: 12, scope: !4336)
!4338 = !DILocation(line: 889, column: 28, scope: !4336)
!4339 = !DILocation(line: 889, column: 31, scope: !4336)
!4340 = !DILocalVariable(name: "nmax", scope: !4336, file: !165, line: 890, type: !60)
!4341 = !DILocation(line: 890, column: 11, scope: !4336)
!4342 = !DILocation(line: 892, column: 11, scope: !4343)
!4343 = distinct !DILexicalBlock(scope: !4336, file: !165, line: 892, column: 11)
!4344 = !DILocation(line: 892, column: 18, scope: !4343)
!4345 = !DILocation(line: 892, column: 16, scope: !4343)
!4346 = !DILocation(line: 892, column: 11, scope: !4336)
!4347 = !DILocation(line: 893, column: 9, scope: !4343)
!4348 = !DILocation(line: 895, column: 32, scope: !4336)
!4349 = !DILocation(line: 895, column: 54, scope: !4336)
!4350 = !DILocation(line: 895, column: 59, scope: !4336)
!4351 = !DILocation(line: 895, column: 61, scope: !4336)
!4352 = !DILocation(line: 895, column: 58, scope: !4336)
!4353 = !DILocation(line: 895, column: 66, scope: !4336)
!4354 = !DILocation(line: 895, column: 22, scope: !4336)
!4355 = !DILocation(line: 895, column: 20, scope: !4336)
!4356 = !DILocation(line: 895, column: 15, scope: !4336)
!4357 = !DILocation(line: 896, column: 11, scope: !4358)
!4358 = distinct !DILexicalBlock(scope: !4336, file: !165, line: 896, column: 11)
!4359 = !DILocation(line: 896, column: 11, scope: !4336)
!4360 = !DILocation(line: 897, column: 10, scope: !4358)
!4361 = !DILocation(line: 897, column: 15, scope: !4358)
!4362 = !DILocation(line: 897, column: 9, scope: !4358)
!4363 = !DILocation(line: 898, column: 15, scope: !4336)
!4364 = !DILocation(line: 898, column: 20, scope: !4336)
!4365 = !DILocation(line: 898, column: 18, scope: !4336)
!4366 = !DILocation(line: 898, column: 7, scope: !4336)
!4367 = !DILocation(line: 898, column: 32, scope: !4336)
!4368 = !DILocation(line: 898, column: 34, scope: !4336)
!4369 = !DILocation(line: 898, column: 40, scope: !4336)
!4370 = !DILocation(line: 898, column: 38, scope: !4336)
!4371 = !DILocation(line: 898, column: 31, scope: !4336)
!4372 = !DILocation(line: 898, column: 48, scope: !4336)
!4373 = !DILocation(line: 899, column: 16, scope: !4336)
!4374 = !DILocation(line: 899, column: 18, scope: !4336)
!4375 = !DILocation(line: 899, column: 14, scope: !4336)
!4376 = !DILocation(line: 900, column: 5, scope: !4336)
!4377 = !DILocalVariable(name: "size", scope: !4378, file: !165, line: 903, type: !57)
!4378 = distinct !DILexicalBlock(scope: !4308, file: !165, line: 902, column: 3)
!4379 = !DILocation(line: 903, column: 12, scope: !4378)
!4380 = !DILocation(line: 903, column: 19, scope: !4378)
!4381 = !DILocation(line: 903, column: 22, scope: !4378)
!4382 = !DILocation(line: 903, column: 25, scope: !4378)
!4383 = !DILocalVariable(name: "val", scope: !4378, file: !165, line: 904, type: !56)
!4384 = !DILocation(line: 904, column: 11, scope: !4378)
!4385 = !DILocation(line: 904, column: 17, scope: !4378)
!4386 = !DILocation(line: 904, column: 20, scope: !4378)
!4387 = !DILocation(line: 904, column: 23, scope: !4378)
!4388 = !DILocalVariable(name: "flags", scope: !4378, file: !165, line: 906, type: !60)
!4389 = !DILocation(line: 906, column: 9, scope: !4378)
!4390 = !DILocation(line: 906, column: 17, scope: !4378)
!4391 = !DILocation(line: 906, column: 26, scope: !4378)
!4392 = !DILocation(line: 906, column: 32, scope: !4378)
!4393 = !DILocalVariable(name: "qsize", scope: !4378, file: !165, line: 907, type: !57)
!4394 = !DILocation(line: 907, column: 12, scope: !4378)
!4395 = !DILocation(line: 907, column: 46, scope: !4378)
!4396 = !DILocation(line: 907, column: 51, scope: !4378)
!4397 = !DILocation(line: 907, column: 57, scope: !4378)
!4398 = !DILocation(line: 907, column: 62, scope: !4378)
!4399 = !DILocation(line: 908, column: 46, scope: !4378)
!4400 = !DILocation(line: 908, column: 55, scope: !4378)
!4401 = !DILocation(line: 908, column: 62, scope: !4378)
!4402 = !DILocation(line: 909, column: 46, scope: !4378)
!4403 = !DILocation(line: 909, column: 55, scope: !4378)
!4404 = !DILocation(line: 910, column: 46, scope: !4378)
!4405 = !DILocation(line: 910, column: 55, scope: !4378)
!4406 = !DILocation(line: 911, column: 46, scope: !4378)
!4407 = !DILocation(line: 911, column: 55, scope: !4378)
!4408 = !DILocation(line: 907, column: 20, scope: !4378)
!4409 = !DILocation(line: 913, column: 9, scope: !4410)
!4410 = distinct !DILexicalBlock(scope: !4378, file: !165, line: 913, column: 9)
!4411 = !DILocation(line: 913, column: 17, scope: !4410)
!4412 = !DILocation(line: 913, column: 14, scope: !4410)
!4413 = !DILocation(line: 913, column: 9, scope: !4378)
!4414 = !DILocation(line: 915, column: 29, scope: !4415)
!4415 = distinct !DILexicalBlock(scope: !4410, file: !165, line: 914, column: 7)
!4416 = !DILocation(line: 915, column: 35, scope: !4415)
!4417 = !DILocation(line: 915, column: 27, scope: !4415)
!4418 = !DILocation(line: 915, column: 9, scope: !4415)
!4419 = !DILocation(line: 915, column: 12, scope: !4415)
!4420 = !DILocation(line: 915, column: 15, scope: !4415)
!4421 = !DILocation(line: 915, column: 20, scope: !4415)
!4422 = !DILocation(line: 916, column: 13, scope: !4423)
!4423 = distinct !DILexicalBlock(scope: !4415, file: !165, line: 916, column: 13)
!4424 = !DILocation(line: 916, column: 17, scope: !4423)
!4425 = !DILocation(line: 916, column: 13, scope: !4415)
!4426 = !DILocation(line: 917, column: 17, scope: !4423)
!4427 = !DILocation(line: 917, column: 11, scope: !4423)
!4428 = !DILocation(line: 918, column: 39, scope: !4415)
!4429 = !DILocation(line: 918, column: 27, scope: !4415)
!4430 = !DILocation(line: 918, column: 25, scope: !4415)
!4431 = !DILocation(line: 918, column: 9, scope: !4415)
!4432 = !DILocation(line: 918, column: 12, scope: !4415)
!4433 = !DILocation(line: 918, column: 15, scope: !4415)
!4434 = !DILocation(line: 918, column: 19, scope: !4415)
!4435 = !DILocation(line: 919, column: 35, scope: !4415)
!4436 = !DILocation(line: 919, column: 40, scope: !4415)
!4437 = !DILocation(line: 919, column: 46, scope: !4415)
!4438 = !DILocation(line: 919, column: 51, scope: !4415)
!4439 = !DILocation(line: 919, column: 60, scope: !4415)
!4440 = !DILocation(line: 919, column: 69, scope: !4415)
!4441 = !DILocation(line: 920, column: 35, scope: !4415)
!4442 = !DILocation(line: 920, column: 42, scope: !4415)
!4443 = !DILocation(line: 920, column: 51, scope: !4415)
!4444 = !DILocation(line: 921, column: 35, scope: !4415)
!4445 = !DILocation(line: 921, column: 44, scope: !4415)
!4446 = !DILocation(line: 922, column: 35, scope: !4415)
!4447 = !DILocation(line: 922, column: 44, scope: !4415)
!4448 = !DILocation(line: 919, column: 9, scope: !4415)
!4449 = !DILocation(line: 923, column: 7, scope: !4415)
!4450 = !DILocation(line: 925, column: 13, scope: !4378)
!4451 = !DILocation(line: 925, column: 5, scope: !4378)
!4452 = !DILocation(line: 925, column: 11, scope: !4378)
!4453 = !DILocation(line: 926, column: 12, scope: !4378)
!4454 = !DILocation(line: 926, column: 5, scope: !4378)
!4455 = distinct !DISubprogram(name: "quotearg_n_mem", scope: !165, file: !165, line: 937, type: !4456, scopeLine: 938, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !164, retainedNodes: !69)
!4456 = !DISubroutineType(types: !4457)
!4457 = !{!56, !60, !52, !57}
!4458 = !DILocalVariable(name: "n", arg: 1, scope: !4455, file: !165, line: 937, type: !60)
!4459 = !DILocation(line: 937, column: 21, scope: !4455)
!4460 = !DILocalVariable(name: "arg", arg: 2, scope: !4455, file: !165, line: 937, type: !52)
!4461 = !DILocation(line: 937, column: 36, scope: !4455)
!4462 = !DILocalVariable(name: "argsize", arg: 3, scope: !4455, file: !165, line: 937, type: !57)
!4463 = !DILocation(line: 937, column: 48, scope: !4455)
!4464 = !DILocation(line: 939, column: 30, scope: !4455)
!4465 = !DILocation(line: 939, column: 33, scope: !4455)
!4466 = !DILocation(line: 939, column: 38, scope: !4455)
!4467 = !DILocation(line: 939, column: 10, scope: !4455)
!4468 = !DILocation(line: 939, column: 3, scope: !4455)
!4469 = distinct !DISubprogram(name: "quotearg", scope: !165, file: !165, line: 943, type: !4470, scopeLine: 944, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !164, retainedNodes: !69)
!4470 = !DISubroutineType(types: !4471)
!4471 = !{!56, !52}
!4472 = !DILocalVariable(name: "arg", arg: 1, scope: !4469, file: !165, line: 943, type: !52)
!4473 = !DILocation(line: 943, column: 23, scope: !4469)
!4474 = !DILocation(line: 945, column: 25, scope: !4469)
!4475 = !DILocation(line: 945, column: 10, scope: !4469)
!4476 = !DILocation(line: 945, column: 3, scope: !4469)
!4477 = distinct !DISubprogram(name: "quotearg_mem", scope: !165, file: !165, line: 949, type: !4478, scopeLine: 950, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !164, retainedNodes: !69)
!4478 = !DISubroutineType(types: !4479)
!4479 = !{!56, !52, !57}
!4480 = !DILocalVariable(name: "arg", arg: 1, scope: !4477, file: !165, line: 949, type: !52)
!4481 = !DILocation(line: 949, column: 27, scope: !4477)
!4482 = !DILocalVariable(name: "argsize", arg: 2, scope: !4477, file: !165, line: 949, type: !57)
!4483 = !DILocation(line: 949, column: 39, scope: !4477)
!4484 = !DILocation(line: 951, column: 29, scope: !4477)
!4485 = !DILocation(line: 951, column: 34, scope: !4477)
!4486 = !DILocation(line: 951, column: 10, scope: !4477)
!4487 = !DILocation(line: 951, column: 3, scope: !4477)
!4488 = distinct !DISubprogram(name: "quotearg_n_style", scope: !165, file: !165, line: 955, type: !4489, scopeLine: 956, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !164, retainedNodes: !69)
!4489 = !DISubroutineType(types: !4490)
!4490 = !{!56, !60, !5, !52}
!4491 = !DILocalVariable(name: "n", arg: 1, scope: !4488, file: !165, line: 955, type: !60)
!4492 = !DILocation(line: 955, column: 23, scope: !4488)
!4493 = !DILocalVariable(name: "s", arg: 2, scope: !4488, file: !165, line: 955, type: !5)
!4494 = !DILocation(line: 955, column: 45, scope: !4488)
!4495 = !DILocalVariable(name: "arg", arg: 3, scope: !4488, file: !165, line: 955, type: !52)
!4496 = !DILocation(line: 955, column: 60, scope: !4488)
!4497 = !DILocalVariable(name: "o", scope: !4488, file: !165, line: 957, type: !3092)
!4498 = !DILocation(line: 957, column: 32, scope: !4488)
!4499 = !DILocation(line: 957, column: 64, scope: !4488)
!4500 = !DILocation(line: 957, column: 36, scope: !4488)
!4501 = !DILocation(line: 958, column: 30, scope: !4488)
!4502 = !DILocation(line: 958, column: 33, scope: !4488)
!4503 = !DILocation(line: 958, column: 10, scope: !4488)
!4504 = !DILocation(line: 958, column: 3, scope: !4488)
!4505 = distinct !DISubprogram(name: "quoting_options_from_style", scope: !165, file: !165, line: 193, type: !4506, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !164, retainedNodes: !69)
!4506 = !DISubroutineType(types: !4507)
!4507 = !{!182, !5}
!4508 = !DILocalVariable(name: "style", arg: 1, scope: !4505, file: !165, line: 193, type: !5)
!4509 = !DILocation(line: 193, column: 48, scope: !4505)
!4510 = !DILocalVariable(name: "o", scope: !4505, file: !165, line: 195, type: !182)
!4511 = !DILocation(line: 195, column: 26, scope: !4505)
!4512 = !DILocation(line: 196, column: 7, scope: !4513)
!4513 = distinct !DILexicalBlock(scope: !4505, file: !165, line: 196, column: 7)
!4514 = !DILocation(line: 196, column: 13, scope: !4513)
!4515 = !DILocation(line: 196, column: 7, scope: !4505)
!4516 = !DILocation(line: 197, column: 5, scope: !4513)
!4517 = !DILocation(line: 198, column: 13, scope: !4505)
!4518 = !DILocation(line: 198, column: 5, scope: !4505)
!4519 = !DILocation(line: 198, column: 11, scope: !4505)
!4520 = !DILocation(line: 199, column: 3, scope: !4505)
!4521 = distinct !DISubprogram(name: "quotearg_n_style_mem", scope: !165, file: !165, line: 962, type: !4522, scopeLine: 964, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !164, retainedNodes: !69)
!4522 = !DISubroutineType(types: !4523)
!4523 = !{!56, !60, !5, !52, !57}
!4524 = !DILocalVariable(name: "n", arg: 1, scope: !4521, file: !165, line: 962, type: !60)
!4525 = !DILocation(line: 962, column: 27, scope: !4521)
!4526 = !DILocalVariable(name: "s", arg: 2, scope: !4521, file: !165, line: 962, type: !5)
!4527 = !DILocation(line: 962, column: 49, scope: !4521)
!4528 = !DILocalVariable(name: "arg", arg: 3, scope: !4521, file: !165, line: 963, type: !52)
!4529 = !DILocation(line: 963, column: 35, scope: !4521)
!4530 = !DILocalVariable(name: "argsize", arg: 4, scope: !4521, file: !165, line: 963, type: !57)
!4531 = !DILocation(line: 963, column: 47, scope: !4521)
!4532 = !DILocalVariable(name: "o", scope: !4521, file: !165, line: 965, type: !3092)
!4533 = !DILocation(line: 965, column: 32, scope: !4521)
!4534 = !DILocation(line: 965, column: 64, scope: !4521)
!4535 = !DILocation(line: 965, column: 36, scope: !4521)
!4536 = !DILocation(line: 966, column: 30, scope: !4521)
!4537 = !DILocation(line: 966, column: 33, scope: !4521)
!4538 = !DILocation(line: 966, column: 38, scope: !4521)
!4539 = !DILocation(line: 966, column: 10, scope: !4521)
!4540 = !DILocation(line: 966, column: 3, scope: !4521)
!4541 = distinct !DISubprogram(name: "quotearg_style", scope: !165, file: !165, line: 970, type: !4542, scopeLine: 971, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !164, retainedNodes: !69)
!4542 = !DISubroutineType(types: !4543)
!4543 = !{!56, !5, !52}
!4544 = !DILocalVariable(name: "s", arg: 1, scope: !4541, file: !165, line: 970, type: !5)
!4545 = !DILocation(line: 970, column: 36, scope: !4541)
!4546 = !DILocalVariable(name: "arg", arg: 2, scope: !4541, file: !165, line: 970, type: !52)
!4547 = !DILocation(line: 970, column: 51, scope: !4541)
!4548 = !DILocation(line: 972, column: 31, scope: !4541)
!4549 = !DILocation(line: 972, column: 34, scope: !4541)
!4550 = !DILocation(line: 972, column: 10, scope: !4541)
!4551 = !DILocation(line: 972, column: 3, scope: !4541)
!4552 = distinct !DISubprogram(name: "quotearg_style_mem", scope: !165, file: !165, line: 976, type: !4553, scopeLine: 977, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !164, retainedNodes: !69)
!4553 = !DISubroutineType(types: !4554)
!4554 = !{!56, !5, !52, !57}
!4555 = !DILocalVariable(name: "s", arg: 1, scope: !4552, file: !165, line: 976, type: !5)
!4556 = !DILocation(line: 976, column: 40, scope: !4552)
!4557 = !DILocalVariable(name: "arg", arg: 2, scope: !4552, file: !165, line: 976, type: !52)
!4558 = !DILocation(line: 976, column: 55, scope: !4552)
!4559 = !DILocalVariable(name: "argsize", arg: 3, scope: !4552, file: !165, line: 976, type: !57)
!4560 = !DILocation(line: 976, column: 67, scope: !4552)
!4561 = !DILocation(line: 978, column: 35, scope: !4552)
!4562 = !DILocation(line: 978, column: 38, scope: !4552)
!4563 = !DILocation(line: 978, column: 43, scope: !4552)
!4564 = !DILocation(line: 978, column: 10, scope: !4552)
!4565 = !DILocation(line: 978, column: 3, scope: !4552)
!4566 = distinct !DISubprogram(name: "quotearg_char_mem", scope: !165, file: !165, line: 982, type: !4567, scopeLine: 983, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !164, retainedNodes: !69)
!4567 = !DISubroutineType(types: !4568)
!4568 = !{!56, !52, !57, !54}
!4569 = !DILocalVariable(name: "arg", arg: 1, scope: !4566, file: !165, line: 982, type: !52)
!4570 = !DILocation(line: 982, column: 32, scope: !4566)
!4571 = !DILocalVariable(name: "argsize", arg: 2, scope: !4566, file: !165, line: 982, type: !57)
!4572 = !DILocation(line: 982, column: 44, scope: !4566)
!4573 = !DILocalVariable(name: "ch", arg: 3, scope: !4566, file: !165, line: 982, type: !54)
!4574 = !DILocation(line: 982, column: 58, scope: !4566)
!4575 = !DILocalVariable(name: "options", scope: !4566, file: !165, line: 984, type: !182)
!4576 = !DILocation(line: 984, column: 26, scope: !4566)
!4577 = !DILocation(line: 985, column: 13, scope: !4566)
!4578 = !DILocation(line: 986, column: 31, scope: !4566)
!4579 = !DILocation(line: 986, column: 3, scope: !4566)
!4580 = !DILocation(line: 987, column: 33, scope: !4566)
!4581 = !DILocation(line: 987, column: 38, scope: !4566)
!4582 = !DILocation(line: 987, column: 10, scope: !4566)
!4583 = !DILocation(line: 987, column: 3, scope: !4566)
!4584 = distinct !DISubprogram(name: "quotearg_char", scope: !165, file: !165, line: 991, type: !4585, scopeLine: 992, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !164, retainedNodes: !69)
!4585 = !DISubroutineType(types: !4586)
!4586 = !{!56, !52, !54}
!4587 = !DILocalVariable(name: "arg", arg: 1, scope: !4584, file: !165, line: 991, type: !52)
!4588 = !DILocation(line: 991, column: 28, scope: !4584)
!4589 = !DILocalVariable(name: "ch", arg: 2, scope: !4584, file: !165, line: 991, type: !54)
!4590 = !DILocation(line: 991, column: 38, scope: !4584)
!4591 = !DILocation(line: 993, column: 29, scope: !4584)
!4592 = !DILocation(line: 993, column: 44, scope: !4584)
!4593 = !DILocation(line: 993, column: 10, scope: !4584)
!4594 = !DILocation(line: 993, column: 3, scope: !4584)
!4595 = distinct !DISubprogram(name: "quotearg_colon", scope: !165, file: !165, line: 997, type: !4470, scopeLine: 998, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !164, retainedNodes: !69)
!4596 = !DILocalVariable(name: "arg", arg: 1, scope: !4595, file: !165, line: 997, type: !52)
!4597 = !DILocation(line: 997, column: 29, scope: !4595)
!4598 = !DILocation(line: 999, column: 25, scope: !4595)
!4599 = !DILocation(line: 999, column: 10, scope: !4595)
!4600 = !DILocation(line: 999, column: 3, scope: !4595)
!4601 = distinct !DISubprogram(name: "quotearg_colon_mem", scope: !165, file: !165, line: 1003, type: !4478, scopeLine: 1004, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !164, retainedNodes: !69)
!4602 = !DILocalVariable(name: "arg", arg: 1, scope: !4601, file: !165, line: 1003, type: !52)
!4603 = !DILocation(line: 1003, column: 33, scope: !4601)
!4604 = !DILocalVariable(name: "argsize", arg: 2, scope: !4601, file: !165, line: 1003, type: !57)
!4605 = !DILocation(line: 1003, column: 45, scope: !4601)
!4606 = !DILocation(line: 1005, column: 29, scope: !4601)
!4607 = !DILocation(line: 1005, column: 34, scope: !4601)
!4608 = !DILocation(line: 1005, column: 10, scope: !4601)
!4609 = !DILocation(line: 1005, column: 3, scope: !4601)
!4610 = distinct !DISubprogram(name: "quotearg_n_style_colon", scope: !165, file: !165, line: 1009, type: !4489, scopeLine: 1010, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !164, retainedNodes: !69)
!4611 = !DILocalVariable(name: "n", arg: 1, scope: !4610, file: !165, line: 1009, type: !60)
!4612 = !DILocation(line: 1009, column: 29, scope: !4610)
!4613 = !DILocalVariable(name: "s", arg: 2, scope: !4610, file: !165, line: 1009, type: !5)
!4614 = !DILocation(line: 1009, column: 51, scope: !4610)
!4615 = !DILocalVariable(name: "arg", arg: 3, scope: !4610, file: !165, line: 1009, type: !52)
!4616 = !DILocation(line: 1009, column: 66, scope: !4610)
!4617 = !DILocalVariable(name: "options", scope: !4610, file: !165, line: 1011, type: !182)
!4618 = !DILocation(line: 1011, column: 26, scope: !4610)
!4619 = !DILocation(line: 1012, column: 41, scope: !4610)
!4620 = !DILocation(line: 1012, column: 13, scope: !4610)
!4621 = !DILocation(line: 1013, column: 3, scope: !4610)
!4622 = !DILocation(line: 1014, column: 30, scope: !4610)
!4623 = !DILocation(line: 1014, column: 33, scope: !4610)
!4624 = !DILocation(line: 1014, column: 10, scope: !4610)
!4625 = !DILocation(line: 1014, column: 3, scope: !4610)
!4626 = distinct !DISubprogram(name: "quotearg_n_custom", scope: !165, file: !165, line: 1018, type: !4627, scopeLine: 1020, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !164, retainedNodes: !69)
!4627 = !DISubroutineType(types: !4628)
!4628 = !{!56, !60, !52, !52, !52}
!4629 = !DILocalVariable(name: "n", arg: 1, scope: !4626, file: !165, line: 1018, type: !60)
!4630 = !DILocation(line: 1018, column: 24, scope: !4626)
!4631 = !DILocalVariable(name: "left_quote", arg: 2, scope: !4626, file: !165, line: 1018, type: !52)
!4632 = !DILocation(line: 1018, column: 39, scope: !4626)
!4633 = !DILocalVariable(name: "right_quote", arg: 3, scope: !4626, file: !165, line: 1019, type: !52)
!4634 = !DILocation(line: 1019, column: 32, scope: !4626)
!4635 = !DILocalVariable(name: "arg", arg: 4, scope: !4626, file: !165, line: 1019, type: !52)
!4636 = !DILocation(line: 1019, column: 57, scope: !4626)
!4637 = !DILocation(line: 1021, column: 33, scope: !4626)
!4638 = !DILocation(line: 1021, column: 36, scope: !4626)
!4639 = !DILocation(line: 1021, column: 48, scope: !4626)
!4640 = !DILocation(line: 1021, column: 61, scope: !4626)
!4641 = !DILocation(line: 1021, column: 10, scope: !4626)
!4642 = !DILocation(line: 1021, column: 3, scope: !4626)
!4643 = distinct !DISubprogram(name: "quotearg_n_custom_mem", scope: !165, file: !165, line: 1026, type: !4644, scopeLine: 1029, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !164, retainedNodes: !69)
!4644 = !DISubroutineType(types: !4645)
!4645 = !{!56, !60, !52, !52, !52, !57}
!4646 = !DILocalVariable(name: "n", arg: 1, scope: !4643, file: !165, line: 1026, type: !60)
!4647 = !DILocation(line: 1026, column: 28, scope: !4643)
!4648 = !DILocalVariable(name: "left_quote", arg: 2, scope: !4643, file: !165, line: 1026, type: !52)
!4649 = !DILocation(line: 1026, column: 43, scope: !4643)
!4650 = !DILocalVariable(name: "right_quote", arg: 3, scope: !4643, file: !165, line: 1027, type: !52)
!4651 = !DILocation(line: 1027, column: 36, scope: !4643)
!4652 = !DILocalVariable(name: "arg", arg: 4, scope: !4643, file: !165, line: 1028, type: !52)
!4653 = !DILocation(line: 1028, column: 36, scope: !4643)
!4654 = !DILocalVariable(name: "argsize", arg: 5, scope: !4643, file: !165, line: 1028, type: !57)
!4655 = !DILocation(line: 1028, column: 48, scope: !4643)
!4656 = !DILocalVariable(name: "o", scope: !4643, file: !165, line: 1030, type: !182)
!4657 = !DILocation(line: 1030, column: 26, scope: !4643)
!4658 = !DILocation(line: 1030, column: 30, scope: !4643)
!4659 = !DILocation(line: 1031, column: 27, scope: !4643)
!4660 = !DILocation(line: 1031, column: 39, scope: !4643)
!4661 = !DILocation(line: 1031, column: 3, scope: !4643)
!4662 = !DILocation(line: 1032, column: 30, scope: !4643)
!4663 = !DILocation(line: 1032, column: 33, scope: !4643)
!4664 = !DILocation(line: 1032, column: 38, scope: !4643)
!4665 = !DILocation(line: 1032, column: 10, scope: !4643)
!4666 = !DILocation(line: 1032, column: 3, scope: !4643)
!4667 = distinct !DISubprogram(name: "quotearg_custom", scope: !165, file: !165, line: 1036, type: !4668, scopeLine: 1038, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !164, retainedNodes: !69)
!4668 = !DISubroutineType(types: !4669)
!4669 = !{!56, !52, !52, !52}
!4670 = !DILocalVariable(name: "left_quote", arg: 1, scope: !4667, file: !165, line: 1036, type: !52)
!4671 = !DILocation(line: 1036, column: 30, scope: !4667)
!4672 = !DILocalVariable(name: "right_quote", arg: 2, scope: !4667, file: !165, line: 1036, type: !52)
!4673 = !DILocation(line: 1036, column: 54, scope: !4667)
!4674 = !DILocalVariable(name: "arg", arg: 3, scope: !4667, file: !165, line: 1037, type: !52)
!4675 = !DILocation(line: 1037, column: 30, scope: !4667)
!4676 = !DILocation(line: 1039, column: 32, scope: !4667)
!4677 = !DILocation(line: 1039, column: 44, scope: !4667)
!4678 = !DILocation(line: 1039, column: 57, scope: !4667)
!4679 = !DILocation(line: 1039, column: 10, scope: !4667)
!4680 = !DILocation(line: 1039, column: 3, scope: !4667)
!4681 = distinct !DISubprogram(name: "quotearg_custom_mem", scope: !165, file: !165, line: 1043, type: !4682, scopeLine: 1045, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !164, retainedNodes: !69)
!4682 = !DISubroutineType(types: !4683)
!4683 = !{!56, !52, !52, !52, !57}
!4684 = !DILocalVariable(name: "left_quote", arg: 1, scope: !4681, file: !165, line: 1043, type: !52)
!4685 = !DILocation(line: 1043, column: 34, scope: !4681)
!4686 = !DILocalVariable(name: "right_quote", arg: 2, scope: !4681, file: !165, line: 1043, type: !52)
!4687 = !DILocation(line: 1043, column: 58, scope: !4681)
!4688 = !DILocalVariable(name: "arg", arg: 3, scope: !4681, file: !165, line: 1044, type: !52)
!4689 = !DILocation(line: 1044, column: 34, scope: !4681)
!4690 = !DILocalVariable(name: "argsize", arg: 4, scope: !4681, file: !165, line: 1044, type: !57)
!4691 = !DILocation(line: 1044, column: 46, scope: !4681)
!4692 = !DILocation(line: 1046, column: 36, scope: !4681)
!4693 = !DILocation(line: 1046, column: 48, scope: !4681)
!4694 = !DILocation(line: 1046, column: 61, scope: !4681)
!4695 = !DILocation(line: 1047, column: 33, scope: !4681)
!4696 = !DILocation(line: 1046, column: 10, scope: !4681)
!4697 = !DILocation(line: 1046, column: 3, scope: !4681)
!4698 = distinct !DISubprogram(name: "quote_n_mem", scope: !165, file: !165, line: 1061, type: !4699, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !164, retainedNodes: !69)
!4699 = !DISubroutineType(types: !4700)
!4700 = !{!52, !60, !52, !57}
!4701 = !DILocalVariable(name: "n", arg: 1, scope: !4698, file: !165, line: 1061, type: !60)
!4702 = !DILocation(line: 1061, column: 18, scope: !4698)
!4703 = !DILocalVariable(name: "arg", arg: 2, scope: !4698, file: !165, line: 1061, type: !52)
!4704 = !DILocation(line: 1061, column: 33, scope: !4698)
!4705 = !DILocalVariable(name: "argsize", arg: 3, scope: !4698, file: !165, line: 1061, type: !57)
!4706 = !DILocation(line: 1061, column: 45, scope: !4698)
!4707 = !DILocation(line: 1063, column: 30, scope: !4698)
!4708 = !DILocation(line: 1063, column: 33, scope: !4698)
!4709 = !DILocation(line: 1063, column: 38, scope: !4698)
!4710 = !DILocation(line: 1063, column: 10, scope: !4698)
!4711 = !DILocation(line: 1063, column: 3, scope: !4698)
!4712 = distinct !DISubprogram(name: "quote_mem", scope: !165, file: !165, line: 1067, type: !4713, scopeLine: 1068, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !164, retainedNodes: !69)
!4713 = !DISubroutineType(types: !4714)
!4714 = !{!52, !52, !57}
!4715 = !DILocalVariable(name: "arg", arg: 1, scope: !4712, file: !165, line: 1067, type: !52)
!4716 = !DILocation(line: 1067, column: 24, scope: !4712)
!4717 = !DILocalVariable(name: "argsize", arg: 2, scope: !4712, file: !165, line: 1067, type: !57)
!4718 = !DILocation(line: 1067, column: 36, scope: !4712)
!4719 = !DILocation(line: 1069, column: 26, scope: !4712)
!4720 = !DILocation(line: 1069, column: 31, scope: !4712)
!4721 = !DILocation(line: 1069, column: 10, scope: !4712)
!4722 = !DILocation(line: 1069, column: 3, scope: !4712)
!4723 = distinct !DISubprogram(name: "quote_n", scope: !165, file: !165, line: 1073, type: !4724, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !164, retainedNodes: !69)
!4724 = !DISubroutineType(types: !4725)
!4725 = !{!52, !60, !52}
!4726 = !DILocalVariable(name: "n", arg: 1, scope: !4723, file: !165, line: 1073, type: !60)
!4727 = !DILocation(line: 1073, column: 14, scope: !4723)
!4728 = !DILocalVariable(name: "arg", arg: 2, scope: !4723, file: !165, line: 1073, type: !52)
!4729 = !DILocation(line: 1073, column: 29, scope: !4723)
!4730 = !DILocation(line: 1075, column: 23, scope: !4723)
!4731 = !DILocation(line: 1075, column: 26, scope: !4723)
!4732 = !DILocation(line: 1075, column: 10, scope: !4723)
!4733 = !DILocation(line: 1075, column: 3, scope: !4723)
!4734 = distinct !DISubprogram(name: "quote", scope: !165, file: !165, line: 1079, type: !4735, scopeLine: 1080, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !164, retainedNodes: !69)
!4735 = !DISubroutineType(types: !4736)
!4736 = !{!52, !52}
!4737 = !DILocalVariable(name: "arg", arg: 1, scope: !4734, file: !165, line: 1079, type: !52)
!4738 = !DILocation(line: 1079, column: 20, scope: !4734)
!4739 = !DILocation(line: 1081, column: 22, scope: !4734)
!4740 = !DILocation(line: 1081, column: 10, scope: !4734)
!4741 = !DILocation(line: 1081, column: 3, scope: !4734)
!4742 = distinct !DISubprogram(name: "readtokens0_init", scope: !463, file: !463, line: 30, type: !4743, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !462, retainedNodes: !69)
!4743 = !DISubroutineType(types: !4744)
!4744 = !{null, !4745}
!4745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4746, size: 64)
!4746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Tokens", file: !1067, line: 28, size: 2304, elements: !4747)
!4747 = !{!4748, !4749, !4750, !4751, !4785, !4786}
!4748 = !DIDerivedType(tag: DW_TAG_member, name: "n_tok", scope: !4746, file: !1067, line: 30, baseType: !57, size: 64)
!4749 = !DIDerivedType(tag: DW_TAG_member, name: "tok", scope: !4746, file: !1067, line: 31, baseType: !68, size: 64, offset: 64)
!4750 = !DIDerivedType(tag: DW_TAG_member, name: "tok_len", scope: !4746, file: !1067, line: 32, baseType: !490, size: 64, offset: 128)
!4751 = !DIDerivedType(tag: DW_TAG_member, name: "o_data", scope: !4746, file: !1067, line: 33, baseType: !4752, size: 704, offset: 192)
!4752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !1074, line: 174, size: 704, elements: !4753)
!4753 = !{!4754, !4755, !4762, !4763, !4764, !4765, !4770, !4771, !4776, !4781, !4782, !4783, !4784}
!4754 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !4752, file: !1074, line: 176, baseType: !57, size: 64)
!4755 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !4752, file: !1074, line: 177, baseType: !4756, size: 64, offset: 64)
!4756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4757, size: 64)
!4757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !1074, line: 167, size: 128, elements: !4758)
!4758 = !{!4759, !4760, !4761}
!4759 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !4757, file: !1074, line: 169, baseType: !56, size: 64)
!4760 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4757, file: !1074, line: 170, baseType: !4756, size: 64, offset: 64)
!4761 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !4757, file: !1074, line: 171, baseType: !1084, offset: 128)
!4762 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !4752, file: !1074, line: 178, baseType: !56, size: 64, offset: 128)
!4763 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !4752, file: !1074, line: 179, baseType: !56, size: 64, offset: 192)
!4764 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !4752, file: !1074, line: 180, baseType: !56, size: 64, offset: 256)
!4765 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !4752, file: !1074, line: 185, baseType: !4766, size: 64, offset: 320)
!4766 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4752, file: !1074, line: 181, size: 64, elements: !4767)
!4767 = !{!4768, !4769}
!4768 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !4766, file: !1074, line: 183, baseType: !57, size: 64)
!4769 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4766, file: !1074, line: 184, baseType: !55, size: 64)
!4770 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !4752, file: !1074, line: 186, baseType: !57, size: 64, offset: 384)
!4771 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !4752, file: !1074, line: 193, baseType: !4772, size: 64, offset: 448)
!4772 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4752, file: !1074, line: 189, size: 64, elements: !4773)
!4773 = !{!4774, !4775}
!4774 = !DIDerivedType(tag: DW_TAG_member, name: "plain", scope: !4772, file: !1074, line: 191, baseType: !1100, size: 64)
!4775 = !DIDerivedType(tag: DW_TAG_member, name: "extra", scope: !4772, file: !1074, line: 192, baseType: !1104, size: 64)
!4776 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !4752, file: !1074, line: 198, baseType: !4777, size: 64, offset: 512)
!4777 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4752, file: !1074, line: 194, size: 64, elements: !4778)
!4778 = !{!4779, !4780}
!4779 = !DIDerivedType(tag: DW_TAG_member, name: "plain", scope: !4777, file: !1074, line: 196, baseType: !1111, size: 64)
!4780 = !DIDerivedType(tag: DW_TAG_member, name: "extra", scope: !4777, file: !1074, line: 197, baseType: !1115, size: 64)
!4781 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !4752, file: !1074, line: 200, baseType: !55, size: 64, offset: 576)
!4782 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !4752, file: !1074, line: 201, baseType: !7, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!4783 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !4752, file: !1074, line: 202, baseType: !7, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!4784 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !4752, file: !1074, line: 206, baseType: !7, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!4785 = !DIDerivedType(tag: DW_TAG_member, name: "o_tok", scope: !4746, file: !1067, line: 34, baseType: !4752, size: 704, offset: 896)
!4786 = !DIDerivedType(tag: DW_TAG_member, name: "o_tok_len", scope: !4746, file: !1067, line: 35, baseType: !4752, size: 704, offset: 1600)
!4787 = !DILocalVariable(name: "t", arg: 1, scope: !4742, file: !463, line: 30, type: !4745)
!4788 = !DILocation(line: 30, column: 34, scope: !4742)
!4789 = !DILocation(line: 32, column: 3, scope: !4742)
!4790 = !DILocation(line: 32, column: 6, scope: !4742)
!4791 = !DILocation(line: 32, column: 12, scope: !4742)
!4792 = !DILocation(line: 33, column: 3, scope: !4742)
!4793 = !DILocation(line: 33, column: 6, scope: !4742)
!4794 = !DILocation(line: 33, column: 10, scope: !4742)
!4795 = !DILocation(line: 34, column: 3, scope: !4742)
!4796 = !DILocation(line: 34, column: 6, scope: !4742)
!4797 = !DILocation(line: 34, column: 14, scope: !4742)
!4798 = !DILocation(line: 35, column: 3, scope: !4742)
!4799 = !DILocation(line: 36, column: 3, scope: !4742)
!4800 = !DILocation(line: 37, column: 3, scope: !4742)
!4801 = !DILocation(line: 38, column: 1, scope: !4742)
!4802 = distinct !DISubprogram(name: "readtokens0_free", scope: !463, file: !463, line: 41, type: !4743, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !462, retainedNodes: !69)
!4803 = !DILocalVariable(name: "t", arg: 1, scope: !4802, file: !463, line: 41, type: !4745)
!4804 = !DILocation(line: 41, column: 34, scope: !4802)
!4805 = !DILocalVariable(name: "__o", scope: !4806, file: !463, line: 43, type: !4807)
!4806 = distinct !DILexicalBlock(scope: !4802, file: !463, line: 43, column: 3)
!4807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4752, size: 64)
!4808 = !DILocation(line: 43, column: 3, scope: !4806)
!4809 = !DILocalVariable(name: "__obj", scope: !4806, file: !463, line: 43, type: !55)
!4810 = !DILocation(line: 43, column: 3, scope: !4811)
!4811 = distinct !DILexicalBlock(scope: !4806, file: !463, line: 43, column: 3)
!4812 = !DILocalVariable(name: "__o", scope: !4813, file: !463, line: 44, type: !4807)
!4813 = distinct !DILexicalBlock(scope: !4802, file: !463, line: 44, column: 3)
!4814 = !DILocation(line: 44, column: 3, scope: !4813)
!4815 = !DILocalVariable(name: "__obj", scope: !4813, file: !463, line: 44, type: !55)
!4816 = !DILocation(line: 44, column: 3, scope: !4817)
!4817 = distinct !DILexicalBlock(scope: !4813, file: !463, line: 44, column: 3)
!4818 = !DILocalVariable(name: "__o", scope: !4819, file: !463, line: 45, type: !4807)
!4819 = distinct !DILexicalBlock(scope: !4802, file: !463, line: 45, column: 3)
!4820 = !DILocation(line: 45, column: 3, scope: !4819)
!4821 = !DILocalVariable(name: "__obj", scope: !4819, file: !463, line: 45, type: !55)
!4822 = !DILocation(line: 45, column: 3, scope: !4823)
!4823 = distinct !DILexicalBlock(scope: !4819, file: !463, line: 45, column: 3)
!4824 = !DILocation(line: 46, column: 1, scope: !4802)
!4825 = distinct !DISubprogram(name: "readtokens0", scope: !463, file: !463, line: 66, type: !4826, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !462, retainedNodes: !69)
!4826 = !DISubroutineType(types: !4827)
!4827 = !{!89, !4828, !4745}
!4828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4829, size: 64)
!4829 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1202, line: 7, baseType: !4830)
!4830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !1204, line: 49, size: 1728, elements: !4831)
!4831 = !{!4832, !4833, !4834, !4835, !4836, !4837, !4838, !4839, !4840, !4841, !4842, !4843, !4844, !4845, !4847, !4848, !4849, !4850, !4851, !4852, !4853, !4854, !4855, !4856, !4857, !4858, !4859, !4860, !4861}
!4832 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !4830, file: !1204, line: 51, baseType: !60, size: 32)
!4833 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !4830, file: !1204, line: 54, baseType: !56, size: 64, offset: 64)
!4834 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !4830, file: !1204, line: 55, baseType: !56, size: 64, offset: 128)
!4835 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !4830, file: !1204, line: 56, baseType: !56, size: 64, offset: 192)
!4836 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !4830, file: !1204, line: 57, baseType: !56, size: 64, offset: 256)
!4837 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !4830, file: !1204, line: 58, baseType: !56, size: 64, offset: 320)
!4838 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !4830, file: !1204, line: 59, baseType: !56, size: 64, offset: 384)
!4839 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !4830, file: !1204, line: 60, baseType: !56, size: 64, offset: 448)
!4840 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !4830, file: !1204, line: 61, baseType: !56, size: 64, offset: 512)
!4841 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !4830, file: !1204, line: 64, baseType: !56, size: 64, offset: 576)
!4842 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !4830, file: !1204, line: 65, baseType: !56, size: 64, offset: 640)
!4843 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !4830, file: !1204, line: 66, baseType: !56, size: 64, offset: 704)
!4844 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !4830, file: !1204, line: 68, baseType: !1219, size: 64, offset: 768)
!4845 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !4830, file: !1204, line: 70, baseType: !4846, size: 64, offset: 832)
!4846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4830, size: 64)
!4847 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !4830, file: !1204, line: 72, baseType: !60, size: 32, offset: 896)
!4848 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !4830, file: !1204, line: 73, baseType: !60, size: 32, offset: 928)
!4849 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !4830, file: !1204, line: 74, baseType: !1044, size: 64, offset: 960)
!4850 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !4830, file: !1204, line: 77, baseType: !61, size: 16, offset: 1024)
!4851 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !4830, file: !1204, line: 78, baseType: !1228, size: 8, offset: 1040)
!4852 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !4830, file: !1204, line: 79, baseType: !1230, size: 8, offset: 1048)
!4853 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !4830, file: !1204, line: 81, baseType: !1232, size: 64, offset: 1088)
!4854 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !4830, file: !1204, line: 89, baseType: !1235, size: 64, offset: 1152)
!4855 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !4830, file: !1204, line: 91, baseType: !1237, size: 64, offset: 1216)
!4856 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !4830, file: !1204, line: 92, baseType: !1240, size: 64, offset: 1280)
!4857 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !4830, file: !1204, line: 93, baseType: !4846, size: 64, offset: 1344)
!4858 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !4830, file: !1204, line: 94, baseType: !55, size: 64, offset: 1408)
!4859 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !4830, file: !1204, line: 95, baseType: !57, size: 64, offset: 1472)
!4860 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !4830, file: !1204, line: 96, baseType: !60, size: 32, offset: 1536)
!4861 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !4830, file: !1204, line: 98, baseType: !1247, size: 160, offset: 1568)
!4862 = !DILocalVariable(name: "in", arg: 1, scope: !4825, file: !463, line: 66, type: !4828)
!4863 = !DILocation(line: 66, column: 20, scope: !4825)
!4864 = !DILocalVariable(name: "t", arg: 2, scope: !4825, file: !463, line: 66, type: !4745)
!4865 = !DILocation(line: 66, column: 39, scope: !4825)
!4866 = !DILocation(line: 69, column: 3, scope: !4825)
!4867 = !DILocalVariable(name: "c", scope: !4868, file: !463, line: 71, type: !60)
!4868 = distinct !DILexicalBlock(scope: !4825, file: !463, line: 70, column: 5)
!4869 = !DILocation(line: 71, column: 11, scope: !4868)
!4870 = !DILocation(line: 71, column: 22, scope: !4868)
!4871 = !DILocation(line: 71, column: 15, scope: !4868)
!4872 = !DILocation(line: 72, column: 11, scope: !4873)
!4873 = distinct !DILexicalBlock(scope: !4868, file: !463, line: 72, column: 11)
!4874 = !DILocation(line: 72, column: 13, scope: !4873)
!4875 = !DILocation(line: 72, column: 11, scope: !4868)
!4876 = !DILocalVariable(name: "len", scope: !4877, file: !463, line: 74, type: !57)
!4877 = distinct !DILexicalBlock(scope: !4873, file: !463, line: 73, column: 9)
!4878 = !DILocation(line: 74, column: 18, scope: !4877)
!4879 = !DILocalVariable(name: "__o", scope: !4880, file: !463, line: 74, type: !4881)
!4880 = distinct !DILexicalBlock(scope: !4877, file: !463, line: 74, column: 24)
!4881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4882, size: 64)
!4882 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4752)
!4883 = !DILocation(line: 74, column: 24, scope: !4880)
!4884 = !DILocation(line: 78, column: 15, scope: !4885)
!4885 = distinct !DILexicalBlock(scope: !4877, file: !463, line: 78, column: 15)
!4886 = !DILocation(line: 78, column: 15, scope: !4877)
!4887 = !DILocalVariable(name: "__o", scope: !4888, file: !463, line: 80, type: !4807)
!4888 = distinct !DILexicalBlock(scope: !4889, file: !463, line: 80, column: 15)
!4889 = distinct !DILexicalBlock(scope: !4885, file: !463, line: 79, column: 13)
!4890 = !DILocation(line: 80, column: 15, scope: !4888)
!4891 = !DILocalVariable(name: "__o1", scope: !4892, file: !463, line: 80, type: !4881)
!4892 = distinct !DILexicalBlock(scope: !4893, file: !463, line: 80, column: 15)
!4893 = distinct !DILexicalBlock(scope: !4888, file: !463, line: 80, column: 15)
!4894 = !DILocation(line: 80, column: 15, scope: !4892)
!4895 = !DILocation(line: 80, column: 15, scope: !4893)
!4896 = !DILocation(line: 81, column: 27, scope: !4889)
!4897 = !DILocation(line: 81, column: 15, scope: !4889)
!4898 = !DILocation(line: 82, column: 13, scope: !4889)
!4899 = !DILocation(line: 84, column: 11, scope: !4877)
!4900 = !DILocalVariable(name: "__o", scope: !4901, file: !463, line: 87, type: !4807)
!4901 = distinct !DILexicalBlock(scope: !4868, file: !463, line: 87, column: 7)
!4902 = !DILocation(line: 87, column: 7, scope: !4901)
!4903 = !DILocalVariable(name: "__o1", scope: !4904, file: !463, line: 87, type: !4881)
!4904 = distinct !DILexicalBlock(scope: !4905, file: !463, line: 87, column: 7)
!4905 = distinct !DILexicalBlock(scope: !4901, file: !463, line: 87, column: 7)
!4906 = !DILocation(line: 87, column: 7, scope: !4904)
!4907 = !DILocation(line: 87, column: 7, scope: !4905)
!4908 = !DILocation(line: 88, column: 11, scope: !4909)
!4909 = distinct !DILexicalBlock(scope: !4868, file: !463, line: 88, column: 11)
!4910 = !DILocation(line: 88, column: 13, scope: !4909)
!4911 = !DILocation(line: 88, column: 11, scope: !4868)
!4912 = !DILocation(line: 89, column: 21, scope: !4909)
!4913 = !DILocation(line: 89, column: 9, scope: !4909)
!4914 = distinct !{!4914, !4866, !4915}
!4915 = !DILocation(line: 90, column: 5, scope: !4825)
!4916 = !DILocalVariable(name: "__o", scope: !4917, file: !463, line: 94, type: !4807)
!4917 = distinct !DILexicalBlock(scope: !4825, file: !463, line: 94, column: 3)
!4918 = !DILocation(line: 94, column: 3, scope: !4917)
!4919 = !DILocalVariable(name: "__o1", scope: !4920, file: !463, line: 94, type: !4881)
!4920 = distinct !DILexicalBlock(scope: !4921, file: !463, line: 94, column: 3)
!4921 = distinct !DILexicalBlock(scope: !4917, file: !463, line: 94, column: 3)
!4922 = !DILocation(line: 94, column: 3, scope: !4920)
!4923 = !DILocation(line: 94, column: 3, scope: !4921)
!4924 = !DILocalVariable(name: "__o1", scope: !4925, file: !463, line: 94, type: !4807)
!4925 = distinct !DILexicalBlock(scope: !4917, file: !463, line: 94, column: 3)
!4926 = !DILocation(line: 94, column: 3, scope: !4925)
!4927 = !DILocalVariable(name: "__p1", scope: !4925, file: !463, line: 94, type: !55)
!4928 = !DILocalVariable(name: "__o1", scope: !4929, file: !463, line: 96, type: !4807)
!4929 = distinct !DILexicalBlock(scope: !4825, file: !463, line: 96, column: 12)
!4930 = !DILocation(line: 96, column: 12, scope: !4929)
!4931 = !DILocalVariable(name: "__value", scope: !4929, file: !463, line: 96, type: !55)
!4932 = !DILocation(line: 96, column: 12, scope: !4933)
!4933 = distinct !DILexicalBlock(scope: !4929, file: !463, line: 96, column: 12)
!4934 = !DILocation(line: 96, column: 12, scope: !4935)
!4935 = distinct !DILexicalBlock(scope: !4929, file: !463, line: 96, column: 12)
!4936 = !DILocation(line: 96, column: 12, scope: !4825)
!4937 = !DILocation(line: 96, column: 3, scope: !4825)
!4938 = !DILocation(line: 96, column: 6, scope: !4825)
!4939 = !DILocation(line: 96, column: 10, scope: !4825)
!4940 = !DILocalVariable(name: "__o1", scope: !4941, file: !463, line: 97, type: !4807)
!4941 = distinct !DILexicalBlock(scope: !4825, file: !463, line: 97, column: 16)
!4942 = !DILocation(line: 97, column: 16, scope: !4941)
!4943 = !DILocalVariable(name: "__value", scope: !4941, file: !463, line: 97, type: !55)
!4944 = !DILocation(line: 97, column: 16, scope: !4945)
!4945 = distinct !DILexicalBlock(scope: !4941, file: !463, line: 97, column: 16)
!4946 = !DILocation(line: 97, column: 16, scope: !4947)
!4947 = distinct !DILexicalBlock(scope: !4941, file: !463, line: 97, column: 16)
!4948 = !DILocation(line: 97, column: 16, scope: !4825)
!4949 = !DILocation(line: 97, column: 3, scope: !4825)
!4950 = !DILocation(line: 97, column: 6, scope: !4825)
!4951 = !DILocation(line: 97, column: 14, scope: !4825)
!4952 = !DILocation(line: 98, column: 20, scope: !4825)
!4953 = !DILocation(line: 98, column: 12, scope: !4825)
!4954 = !DILocation(line: 98, column: 10, scope: !4825)
!4955 = !DILocation(line: 98, column: 3, scope: !4825)
!4956 = distinct !DISubprogram(name: "save_token", scope: !463, file: !463, line: 51, type: !4743, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !462, retainedNodes: !69)
!4957 = !DILocalVariable(name: "t", arg: 1, scope: !4956, file: !463, line: 51, type: !4745)
!4958 = !DILocation(line: 51, column: 28, scope: !4956)
!4959 = !DILocalVariable(name: "len", scope: !4956, file: !463, line: 54, type: !57)
!4960 = !DILocation(line: 54, column: 10, scope: !4956)
!4961 = !DILocalVariable(name: "__o", scope: !4962, file: !463, line: 54, type: !4881)
!4962 = distinct !DILexicalBlock(scope: !4956, file: !463, line: 54, column: 16)
!4963 = !DILocation(line: 54, column: 16, scope: !4962)
!4964 = !DILocation(line: 54, column: 49, scope: !4956)
!4965 = !DILocalVariable(name: "s", scope: !4956, file: !463, line: 55, type: !52)
!4966 = !DILocation(line: 55, column: 15, scope: !4956)
!4967 = !DILocalVariable(name: "__o1", scope: !4968, file: !463, line: 55, type: !4807)
!4968 = distinct !DILexicalBlock(scope: !4956, file: !463, line: 55, column: 19)
!4969 = !DILocation(line: 55, column: 19, scope: !4968)
!4970 = !DILocalVariable(name: "__value", scope: !4968, file: !463, line: 55, type: !55)
!4971 = !DILocation(line: 55, column: 19, scope: !4972)
!4972 = distinct !DILexicalBlock(scope: !4968, file: !463, line: 55, column: 19)
!4973 = !DILocation(line: 55, column: 19, scope: !4974)
!4974 = distinct !DILexicalBlock(scope: !4968, file: !463, line: 55, column: 19)
!4975 = !DILocalVariable(name: "__o", scope: !4976, file: !463, line: 56, type: !4807)
!4976 = distinct !DILexicalBlock(scope: !4956, file: !463, line: 56, column: 3)
!4977 = !DILocation(line: 56, column: 3, scope: !4976)
!4978 = !DILocalVariable(name: "__o1", scope: !4979, file: !463, line: 56, type: !4881)
!4979 = distinct !DILexicalBlock(scope: !4980, file: !463, line: 56, column: 3)
!4980 = distinct !DILexicalBlock(scope: !4976, file: !463, line: 56, column: 3)
!4981 = !DILocation(line: 56, column: 3, scope: !4979)
!4982 = !DILocation(line: 56, column: 3, scope: !4980)
!4983 = !DILocalVariable(name: "__o1", scope: !4984, file: !463, line: 56, type: !4807)
!4984 = distinct !DILexicalBlock(scope: !4976, file: !463, line: 56, column: 3)
!4985 = !DILocation(line: 56, column: 3, scope: !4984)
!4986 = !DILocalVariable(name: "__p1", scope: !4984, file: !463, line: 56, type: !55)
!4987 = !DILocalVariable(name: "__o", scope: !4988, file: !463, line: 57, type: !4807)
!4988 = distinct !DILexicalBlock(scope: !4956, file: !463, line: 57, column: 3)
!4989 = !DILocation(line: 57, column: 3, scope: !4988)
!4990 = !DILocalVariable(name: "__len", scope: !4988, file: !463, line: 57, type: !57)
!4991 = !DILocalVariable(name: "__o1", scope: !4992, file: !463, line: 57, type: !4881)
!4992 = distinct !DILexicalBlock(scope: !4993, file: !463, line: 57, column: 3)
!4993 = distinct !DILexicalBlock(scope: !4988, file: !463, line: 57, column: 3)
!4994 = !DILocation(line: 57, column: 3, scope: !4992)
!4995 = !DILocation(line: 57, column: 3, scope: !4993)
!4996 = !DILocation(line: 58, column: 3, scope: !4956)
!4997 = !DILocation(line: 58, column: 6, scope: !4956)
!4998 = !DILocation(line: 58, column: 11, scope: !4956)
!4999 = !DILocation(line: 59, column: 1, scope: !4956)
!5000 = distinct !DISubprogram(name: "safe_read", scope: !469, file: !469, line: 56, type: !5001, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !468, retainedNodes: !69)
!5001 = !DISubroutineType(types: !5002)
!5002 = !{!57, !60, !55, !57}
!5003 = !DILocalVariable(name: "fd", arg: 1, scope: !5000, file: !469, line: 56, type: !60)
!5004 = !DILocation(line: 56, column: 14, scope: !5000)
!5005 = !DILocalVariable(name: "buf", arg: 2, scope: !5000, file: !469, line: 56, type: !55)
!5006 = !DILocation(line: 56, column: 30, scope: !5000)
!5007 = !DILocalVariable(name: "count", arg: 3, scope: !5000, file: !469, line: 56, type: !57)
!5008 = !DILocation(line: 56, column: 42, scope: !5000)
!5009 = !DILocation(line: 58, column: 3, scope: !5000)
!5010 = !DILocalVariable(name: "result", scope: !5011, file: !469, line: 60, type: !5014)
!5011 = distinct !DILexicalBlock(scope: !5012, file: !469, line: 59, column: 5)
!5012 = distinct !DILexicalBlock(scope: !5013, file: !469, line: 58, column: 3)
!5013 = distinct !DILexicalBlock(scope: !5000, file: !469, line: 58, column: 3)
!5014 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !5015, line: 108, baseType: !2574)
!5015 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/types.h", directory: "")
!5016 = !DILocation(line: 60, column: 15, scope: !5011)
!5017 = !DILocation(line: 60, column: 28, scope: !5011)
!5018 = !DILocation(line: 60, column: 32, scope: !5011)
!5019 = !DILocation(line: 60, column: 37, scope: !5011)
!5020 = !DILocation(line: 60, column: 24, scope: !5011)
!5021 = !DILocation(line: 62, column: 16, scope: !5022)
!5022 = distinct !DILexicalBlock(scope: !5011, file: !469, line: 62, column: 11)
!5023 = !DILocation(line: 62, column: 13, scope: !5022)
!5024 = !DILocation(line: 62, column: 11, scope: !5011)
!5025 = !DILocation(line: 63, column: 16, scope: !5022)
!5026 = !DILocation(line: 63, column: 9, scope: !5022)
!5027 = !DILocation(line: 64, column: 16, scope: !5028)
!5028 = distinct !DILexicalBlock(scope: !5022, file: !469, line: 64, column: 16)
!5029 = !DILocation(line: 64, column: 16, scope: !5022)
!5030 = !DILocation(line: 65, column: 9, scope: !5028)
!5031 = distinct !{!5031, !5032, !5033}
!5032 = !DILocation(line: 58, column: 3, scope: !5013)
!5033 = !DILocation(line: 70, column: 5, scope: !5013)
!5034 = !DILocation(line: 66, column: 16, scope: !5035)
!5035 = distinct !DILexicalBlock(scope: !5028, file: !469, line: 66, column: 16)
!5036 = !DILocation(line: 66, column: 22, scope: !5035)
!5037 = !DILocation(line: 66, column: 32, scope: !5035)
!5038 = !DILocation(line: 66, column: 53, scope: !5035)
!5039 = !DILocation(line: 66, column: 51, scope: !5035)
!5040 = !DILocation(line: 66, column: 16, scope: !5028)
!5041 = !DILocation(line: 67, column: 15, scope: !5035)
!5042 = !DILocation(line: 67, column: 9, scope: !5035)
!5043 = !DILocation(line: 69, column: 16, scope: !5035)
!5044 = !DILocation(line: 69, column: 9, scope: !5035)
!5045 = !DILocation(line: 58, column: 3, scope: !5012)
!5046 = !DILocation(line: 71, column: 1, scope: !5000)
!5047 = distinct !DISubprogram(name: "version_etc_arn", scope: !476, file: !476, line: 61, type: !5048, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !475, retainedNodes: !69)
!5048 = !DISubroutineType(types: !5049)
!5049 = !{null, !5050, !52, !52, !52, !5084, !57}
!5050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5051, size: 64)
!5051 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1202, line: 7, baseType: !5052)
!5052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !1204, line: 49, size: 1728, elements: !5053)
!5053 = !{!5054, !5055, !5056, !5057, !5058, !5059, !5060, !5061, !5062, !5063, !5064, !5065, !5066, !5067, !5069, !5070, !5071, !5072, !5073, !5074, !5075, !5076, !5077, !5078, !5079, !5080, !5081, !5082, !5083}
!5054 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !5052, file: !1204, line: 51, baseType: !60, size: 32)
!5055 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !5052, file: !1204, line: 54, baseType: !56, size: 64, offset: 64)
!5056 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !5052, file: !1204, line: 55, baseType: !56, size: 64, offset: 128)
!5057 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !5052, file: !1204, line: 56, baseType: !56, size: 64, offset: 192)
!5058 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !5052, file: !1204, line: 57, baseType: !56, size: 64, offset: 256)
!5059 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !5052, file: !1204, line: 58, baseType: !56, size: 64, offset: 320)
!5060 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !5052, file: !1204, line: 59, baseType: !56, size: 64, offset: 384)
!5061 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !5052, file: !1204, line: 60, baseType: !56, size: 64, offset: 448)
!5062 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !5052, file: !1204, line: 61, baseType: !56, size: 64, offset: 512)
!5063 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !5052, file: !1204, line: 64, baseType: !56, size: 64, offset: 576)
!5064 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !5052, file: !1204, line: 65, baseType: !56, size: 64, offset: 640)
!5065 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !5052, file: !1204, line: 66, baseType: !56, size: 64, offset: 704)
!5066 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !5052, file: !1204, line: 68, baseType: !1219, size: 64, offset: 768)
!5067 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !5052, file: !1204, line: 70, baseType: !5068, size: 64, offset: 832)
!5068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5052, size: 64)
!5069 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !5052, file: !1204, line: 72, baseType: !60, size: 32, offset: 896)
!5070 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !5052, file: !1204, line: 73, baseType: !60, size: 32, offset: 928)
!5071 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !5052, file: !1204, line: 74, baseType: !1044, size: 64, offset: 960)
!5072 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !5052, file: !1204, line: 77, baseType: !61, size: 16, offset: 1024)
!5073 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !5052, file: !1204, line: 78, baseType: !1228, size: 8, offset: 1040)
!5074 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !5052, file: !1204, line: 79, baseType: !1230, size: 8, offset: 1048)
!5075 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !5052, file: !1204, line: 81, baseType: !1232, size: 64, offset: 1088)
!5076 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !5052, file: !1204, line: 89, baseType: !1235, size: 64, offset: 1152)
!5077 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !5052, file: !1204, line: 91, baseType: !1237, size: 64, offset: 1216)
!5078 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !5052, file: !1204, line: 92, baseType: !1240, size: 64, offset: 1280)
!5079 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !5052, file: !1204, line: 93, baseType: !5068, size: 64, offset: 1344)
!5080 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !5052, file: !1204, line: 94, baseType: !55, size: 64, offset: 1408)
!5081 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !5052, file: !1204, line: 95, baseType: !57, size: 64, offset: 1472)
!5082 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !5052, file: !1204, line: 96, baseType: !60, size: 32, offset: 1536)
!5083 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !5052, file: !1204, line: 98, baseType: !1247, size: 160, offset: 1568)
!5084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !209, size: 64)
!5085 = !DILocalVariable(name: "stream", arg: 1, scope: !5047, file: !476, line: 61, type: !5050)
!5086 = !DILocation(line: 61, column: 24, scope: !5047)
!5087 = !DILocalVariable(name: "command_name", arg: 2, scope: !5047, file: !476, line: 62, type: !52)
!5088 = !DILocation(line: 62, column: 30, scope: !5047)
!5089 = !DILocalVariable(name: "package", arg: 3, scope: !5047, file: !476, line: 62, type: !52)
!5090 = !DILocation(line: 62, column: 56, scope: !5047)
!5091 = !DILocalVariable(name: "version", arg: 4, scope: !5047, file: !476, line: 63, type: !52)
!5092 = !DILocation(line: 63, column: 30, scope: !5047)
!5093 = !DILocalVariable(name: "authors", arg: 5, scope: !5047, file: !476, line: 64, type: !5084)
!5094 = !DILocation(line: 64, column: 39, scope: !5047)
!5095 = !DILocalVariable(name: "n_authors", arg: 6, scope: !5047, file: !476, line: 64, type: !57)
!5096 = !DILocation(line: 64, column: 55, scope: !5047)
!5097 = !DILocation(line: 66, column: 7, scope: !5098)
!5098 = distinct !DILexicalBlock(scope: !5047, file: !476, line: 66, column: 7)
!5099 = !DILocation(line: 66, column: 7, scope: !5047)
!5100 = !DILocation(line: 67, column: 14, scope: !5098)
!5101 = !DILocation(line: 67, column: 38, scope: !5098)
!5102 = !DILocation(line: 67, column: 52, scope: !5098)
!5103 = !DILocation(line: 67, column: 61, scope: !5098)
!5104 = !DILocation(line: 67, column: 5, scope: !5098)
!5105 = !DILocation(line: 69, column: 14, scope: !5098)
!5106 = !DILocation(line: 69, column: 33, scope: !5098)
!5107 = !DILocation(line: 69, column: 42, scope: !5098)
!5108 = !DILocation(line: 69, column: 5, scope: !5098)
!5109 = !DILocation(line: 83, column: 12, scope: !5047)
!5110 = !DILocation(line: 83, column: 3, scope: !5047)
!5111 = !DILocation(line: 85, column: 3, scope: !5047)
!5112 = !DILocation(line: 88, column: 12, scope: !5047)
!5113 = !DILocation(line: 88, column: 3, scope: !5047)
!5114 = !DILocation(line: 95, column: 3, scope: !5047)
!5115 = !DILocation(line: 97, column: 11, scope: !5047)
!5116 = !DILocation(line: 97, column: 3, scope: !5047)
!5117 = !DILocation(line: 102, column: 7, scope: !5118)
!5118 = distinct !DILexicalBlock(scope: !5047, file: !476, line: 98, column: 5)
!5119 = !DILocation(line: 105, column: 16, scope: !5118)
!5120 = !DILocation(line: 105, column: 47, scope: !5118)
!5121 = !DILocation(line: 105, column: 7, scope: !5118)
!5122 = !DILocation(line: 106, column: 7, scope: !5118)
!5123 = !DILocation(line: 109, column: 16, scope: !5118)
!5124 = !DILocation(line: 109, column: 54, scope: !5118)
!5125 = !DILocation(line: 109, column: 66, scope: !5118)
!5126 = !DILocation(line: 109, column: 7, scope: !5118)
!5127 = !DILocation(line: 110, column: 7, scope: !5118)
!5128 = !DILocation(line: 113, column: 16, scope: !5118)
!5129 = !DILocation(line: 114, column: 16, scope: !5118)
!5130 = !DILocation(line: 114, column: 28, scope: !5118)
!5131 = !DILocation(line: 114, column: 40, scope: !5118)
!5132 = !DILocation(line: 113, column: 7, scope: !5118)
!5133 = !DILocation(line: 115, column: 7, scope: !5118)
!5134 = !DILocation(line: 120, column: 16, scope: !5118)
!5135 = !DILocation(line: 121, column: 16, scope: !5118)
!5136 = !DILocation(line: 121, column: 28, scope: !5118)
!5137 = !DILocation(line: 121, column: 40, scope: !5118)
!5138 = !DILocation(line: 121, column: 52, scope: !5118)
!5139 = !DILocation(line: 120, column: 7, scope: !5118)
!5140 = !DILocation(line: 122, column: 7, scope: !5118)
!5141 = !DILocation(line: 127, column: 16, scope: !5118)
!5142 = !DILocation(line: 128, column: 16, scope: !5118)
!5143 = !DILocation(line: 128, column: 28, scope: !5118)
!5144 = !DILocation(line: 128, column: 40, scope: !5118)
!5145 = !DILocation(line: 128, column: 52, scope: !5118)
!5146 = !DILocation(line: 128, column: 64, scope: !5118)
!5147 = !DILocation(line: 127, column: 7, scope: !5118)
!5148 = !DILocation(line: 129, column: 7, scope: !5118)
!5149 = !DILocation(line: 134, column: 16, scope: !5118)
!5150 = !DILocation(line: 135, column: 16, scope: !5118)
!5151 = !DILocation(line: 135, column: 28, scope: !5118)
!5152 = !DILocation(line: 135, column: 40, scope: !5118)
!5153 = !DILocation(line: 135, column: 52, scope: !5118)
!5154 = !DILocation(line: 135, column: 64, scope: !5118)
!5155 = !DILocation(line: 136, column: 16, scope: !5118)
!5156 = !DILocation(line: 134, column: 7, scope: !5118)
!5157 = !DILocation(line: 137, column: 7, scope: !5118)
!5158 = !DILocation(line: 142, column: 16, scope: !5118)
!5159 = !DILocation(line: 143, column: 16, scope: !5118)
!5160 = !DILocation(line: 143, column: 28, scope: !5118)
!5161 = !DILocation(line: 143, column: 40, scope: !5118)
!5162 = !DILocation(line: 143, column: 52, scope: !5118)
!5163 = !DILocation(line: 143, column: 64, scope: !5118)
!5164 = !DILocation(line: 144, column: 16, scope: !5118)
!5165 = !DILocation(line: 144, column: 28, scope: !5118)
!5166 = !DILocation(line: 142, column: 7, scope: !5118)
!5167 = !DILocation(line: 145, column: 7, scope: !5118)
!5168 = !DILocation(line: 150, column: 16, scope: !5118)
!5169 = !DILocation(line: 152, column: 17, scope: !5118)
!5170 = !DILocation(line: 152, column: 29, scope: !5118)
!5171 = !DILocation(line: 152, column: 41, scope: !5118)
!5172 = !DILocation(line: 152, column: 53, scope: !5118)
!5173 = !DILocation(line: 152, column: 65, scope: !5118)
!5174 = !DILocation(line: 153, column: 17, scope: !5118)
!5175 = !DILocation(line: 153, column: 29, scope: !5118)
!5176 = !DILocation(line: 153, column: 41, scope: !5118)
!5177 = !DILocation(line: 150, column: 7, scope: !5118)
!5178 = !DILocation(line: 154, column: 7, scope: !5118)
!5179 = !DILocation(line: 159, column: 16, scope: !5118)
!5180 = !DILocation(line: 161, column: 16, scope: !5118)
!5181 = !DILocation(line: 161, column: 28, scope: !5118)
!5182 = !DILocation(line: 161, column: 40, scope: !5118)
!5183 = !DILocation(line: 161, column: 52, scope: !5118)
!5184 = !DILocation(line: 161, column: 64, scope: !5118)
!5185 = !DILocation(line: 162, column: 16, scope: !5118)
!5186 = !DILocation(line: 162, column: 28, scope: !5118)
!5187 = !DILocation(line: 162, column: 40, scope: !5118)
!5188 = !DILocation(line: 162, column: 52, scope: !5118)
!5189 = !DILocation(line: 159, column: 7, scope: !5118)
!5190 = !DILocation(line: 163, column: 7, scope: !5118)
!5191 = !DILocation(line: 170, column: 16, scope: !5118)
!5192 = !DILocation(line: 172, column: 17, scope: !5118)
!5193 = !DILocation(line: 172, column: 29, scope: !5118)
!5194 = !DILocation(line: 172, column: 41, scope: !5118)
!5195 = !DILocation(line: 172, column: 53, scope: !5118)
!5196 = !DILocation(line: 172, column: 65, scope: !5118)
!5197 = !DILocation(line: 173, column: 17, scope: !5118)
!5198 = !DILocation(line: 173, column: 29, scope: !5118)
!5199 = !DILocation(line: 173, column: 41, scope: !5118)
!5200 = !DILocation(line: 173, column: 53, scope: !5118)
!5201 = !DILocation(line: 170, column: 7, scope: !5118)
!5202 = !DILocation(line: 174, column: 7, scope: !5118)
!5203 = !DILocation(line: 176, column: 1, scope: !5047)
!5204 = distinct !DISubprogram(name: "version_etc_ar", scope: !476, file: !476, line: 183, type: !5205, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !475, retainedNodes: !69)
!5205 = !DISubroutineType(types: !5206)
!5206 = !{null, !5050, !52, !52, !52, !5084}
!5207 = !DILocalVariable(name: "stream", arg: 1, scope: !5204, file: !476, line: 183, type: !5050)
!5208 = !DILocation(line: 183, column: 23, scope: !5204)
!5209 = !DILocalVariable(name: "command_name", arg: 2, scope: !5204, file: !476, line: 184, type: !52)
!5210 = !DILocation(line: 184, column: 29, scope: !5204)
!5211 = !DILocalVariable(name: "package", arg: 3, scope: !5204, file: !476, line: 184, type: !52)
!5212 = !DILocation(line: 184, column: 55, scope: !5204)
!5213 = !DILocalVariable(name: "version", arg: 4, scope: !5204, file: !476, line: 185, type: !52)
!5214 = !DILocation(line: 185, column: 29, scope: !5204)
!5215 = !DILocalVariable(name: "authors", arg: 5, scope: !5204, file: !476, line: 185, type: !5084)
!5216 = !DILocation(line: 185, column: 59, scope: !5204)
!5217 = !DILocalVariable(name: "n_authors", scope: !5204, file: !476, line: 187, type: !57)
!5218 = !DILocation(line: 187, column: 10, scope: !5204)
!5219 = !DILocation(line: 189, column: 18, scope: !5220)
!5220 = distinct !DILexicalBlock(scope: !5204, file: !476, line: 189, column: 3)
!5221 = !DILocation(line: 189, column: 8, scope: !5220)
!5222 = !DILocation(line: 189, column: 23, scope: !5223)
!5223 = distinct !DILexicalBlock(scope: !5220, file: !476, line: 189, column: 3)
!5224 = !DILocation(line: 189, column: 31, scope: !5223)
!5225 = !DILocation(line: 189, column: 3, scope: !5220)
!5226 = !DILocation(line: 189, column: 52, scope: !5223)
!5227 = !DILocation(line: 189, column: 3, scope: !5223)
!5228 = distinct !{!5228, !5225, !5229, !975}
!5229 = !DILocation(line: 190, column: 5, scope: !5220)
!5230 = !DILocation(line: 191, column: 20, scope: !5204)
!5231 = !DILocation(line: 191, column: 28, scope: !5204)
!5232 = !DILocation(line: 191, column: 42, scope: !5204)
!5233 = !DILocation(line: 191, column: 51, scope: !5204)
!5234 = !DILocation(line: 191, column: 60, scope: !5204)
!5235 = !DILocation(line: 191, column: 69, scope: !5204)
!5236 = !DILocation(line: 191, column: 3, scope: !5204)
!5237 = !DILocation(line: 192, column: 1, scope: !5204)
!5238 = distinct !DISubprogram(name: "version_etc_va", scope: !476, file: !476, line: 199, type: !5239, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !475, retainedNodes: !69)
!5239 = !DISubroutineType(types: !5240)
!5240 = !{null, !5050, !52, !52, !52, !5241}
!5241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5242, size: 64)
!5242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", size: 192, elements: !5243)
!5243 = !{!5244, !5245, !5246, !5247}
!5244 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !5242, file: !476, line: 192, baseType: !7, size: 32)
!5245 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !5242, file: !476, line: 192, baseType: !7, size: 32, offset: 32)
!5246 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !5242, file: !476, line: 192, baseType: !55, size: 64, offset: 64)
!5247 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !5242, file: !476, line: 192, baseType: !55, size: 64, offset: 128)
!5248 = !DILocalVariable(name: "stream", arg: 1, scope: !5238, file: !476, line: 199, type: !5050)
!5249 = !DILocation(line: 199, column: 23, scope: !5238)
!5250 = !DILocalVariable(name: "command_name", arg: 2, scope: !5238, file: !476, line: 200, type: !52)
!5251 = !DILocation(line: 200, column: 29, scope: !5238)
!5252 = !DILocalVariable(name: "package", arg: 3, scope: !5238, file: !476, line: 200, type: !52)
!5253 = !DILocation(line: 200, column: 55, scope: !5238)
!5254 = !DILocalVariable(name: "version", arg: 4, scope: !5238, file: !476, line: 201, type: !52)
!5255 = !DILocation(line: 201, column: 29, scope: !5238)
!5256 = !DILocalVariable(name: "authors", arg: 5, scope: !5238, file: !476, line: 201, type: !5241)
!5257 = !DILocation(line: 201, column: 46, scope: !5238)
!5258 = !DILocalVariable(name: "n_authors", scope: !5238, file: !476, line: 203, type: !57)
!5259 = !DILocation(line: 203, column: 10, scope: !5238)
!5260 = !DILocalVariable(name: "authtab", scope: !5238, file: !476, line: 204, type: !5261)
!5261 = !DICompositeType(tag: DW_TAG_array_type, baseType: !52, size: 640, elements: !178)
!5262 = !DILocation(line: 204, column: 15, scope: !5238)
!5263 = !DILocation(line: 206, column: 18, scope: !5264)
!5264 = distinct !DILexicalBlock(scope: !5238, file: !476, line: 206, column: 3)
!5265 = !DILocation(line: 206, column: 8, scope: !5264)
!5266 = !DILocation(line: 207, column: 8, scope: !5267)
!5267 = distinct !DILexicalBlock(scope: !5264, file: !476, line: 206, column: 3)
!5268 = !DILocation(line: 207, column: 18, scope: !5267)
!5269 = !DILocation(line: 208, column: 10, scope: !5267)
!5270 = !DILocation(line: 208, column: 35, scope: !5267)
!5271 = !DILocation(line: 208, column: 22, scope: !5267)
!5272 = !DILocation(line: 208, column: 14, scope: !5267)
!5273 = !DILocation(line: 208, column: 33, scope: !5267)
!5274 = !DILocation(line: 208, column: 67, scope: !5267)
!5275 = !DILocation(line: 0, scope: !5267)
!5276 = !DILocation(line: 206, column: 3, scope: !5264)
!5277 = !DILocation(line: 209, column: 17, scope: !5267)
!5278 = !DILocation(line: 206, column: 3, scope: !5267)
!5279 = distinct !{!5279, !5276, !5280, !975}
!5280 = !DILocation(line: 210, column: 5, scope: !5264)
!5281 = !DILocation(line: 211, column: 20, scope: !5238)
!5282 = !DILocation(line: 211, column: 28, scope: !5238)
!5283 = !DILocation(line: 211, column: 42, scope: !5238)
!5284 = !DILocation(line: 211, column: 51, scope: !5238)
!5285 = !DILocation(line: 212, column: 20, scope: !5238)
!5286 = !DILocation(line: 212, column: 29, scope: !5238)
!5287 = !DILocation(line: 211, column: 3, scope: !5238)
!5288 = !DILocation(line: 213, column: 1, scope: !5238)
!5289 = distinct !DISubprogram(name: "version_etc", scope: !476, file: !476, line: 230, type: !5290, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !475, retainedNodes: !69)
!5290 = !DISubroutineType(types: !5291)
!5291 = !{null, !5050, !52, !52, !52, null}
!5292 = !DILocalVariable(name: "stream", arg: 1, scope: !5289, file: !476, line: 230, type: !5050)
!5293 = !DILocation(line: 230, column: 20, scope: !5289)
!5294 = !DILocalVariable(name: "command_name", arg: 2, scope: !5289, file: !476, line: 231, type: !52)
!5295 = !DILocation(line: 231, column: 26, scope: !5289)
!5296 = !DILocalVariable(name: "package", arg: 3, scope: !5289, file: !476, line: 231, type: !52)
!5297 = !DILocation(line: 231, column: 52, scope: !5289)
!5298 = !DILocalVariable(name: "version", arg: 4, scope: !5289, file: !476, line: 232, type: !52)
!5299 = !DILocation(line: 232, column: 26, scope: !5289)
!5300 = !DILocalVariable(name: "authors", scope: !5289, file: !476, line: 234, type: !5301)
!5301 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !1771, line: 52, baseType: !5302)
!5302 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !5303, line: 32, baseType: !5304)
!5303 = !DIFile(filename: "LLVM_12.0_src/llvm-project/build/lib/clang/12.0.1/include/stdarg.h", directory: "/nobackup")
!5304 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !476, baseType: !5305)
!5305 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5242, size: 192, elements: !71)
!5306 = !DILocation(line: 234, column: 11, scope: !5289)
!5307 = !DILocation(line: 236, column: 3, scope: !5289)
!5308 = !DILocation(line: 237, column: 19, scope: !5289)
!5309 = !DILocation(line: 237, column: 27, scope: !5289)
!5310 = !DILocation(line: 237, column: 41, scope: !5289)
!5311 = !DILocation(line: 237, column: 50, scope: !5289)
!5312 = !DILocation(line: 237, column: 59, scope: !5289)
!5313 = !DILocation(line: 237, column: 3, scope: !5289)
!5314 = !DILocation(line: 238, column: 3, scope: !5289)
!5315 = !DILocation(line: 239, column: 1, scope: !5289)
!5316 = distinct !DISubprogram(name: "emit_bug_reporting_address", scope: !476, file: !476, line: 242, type: !227, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !475, retainedNodes: !69)
!5317 = !DILocation(line: 244, column: 3, scope: !5316)
!5318 = !DILocation(line: 249, column: 3, scope: !5316)
!5319 = !DILocation(line: 255, column: 3, scope: !5316)
!5320 = !DILocation(line: 260, column: 3, scope: !5316)
!5321 = !DILocation(line: 262, column: 1, scope: !5316)
!5322 = distinct !DISubprogram(name: "xnmalloc", scope: !486, file: !486, line: 99, type: !5323, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !482, retainedNodes: !69)
!5323 = !DISubroutineType(types: !5324)
!5324 = !{!55, !57, !57}
!5325 = !DILocalVariable(name: "n", arg: 1, scope: !5322, file: !486, line: 99, type: !57)
!5326 = !DILocation(line: 99, column: 18, scope: !5322)
!5327 = !DILocalVariable(name: "s", arg: 2, scope: !5322, file: !486, line: 99, type: !57)
!5328 = !DILocation(line: 99, column: 28, scope: !5322)
!5329 = !DILocation(line: 101, column: 7, scope: !5330)
!5330 = distinct !DILexicalBlock(scope: !5322, file: !486, line: 101, column: 7)
!5331 = !DILocation(line: 101, column: 7, scope: !5322)
!5332 = !DILocation(line: 102, column: 5, scope: !5330)
!5333 = !DILocation(line: 103, column: 19, scope: !5322)
!5334 = !DILocation(line: 103, column: 23, scope: !5322)
!5335 = !DILocation(line: 103, column: 21, scope: !5322)
!5336 = !DILocation(line: 103, column: 10, scope: !5322)
!5337 = !DILocation(line: 103, column: 3, scope: !5322)
!5338 = distinct !DISubprogram(name: "xmalloc", scope: !483, file: !483, line: 39, type: !1101, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !482, retainedNodes: !69)
!5339 = !DILocalVariable(name: "n", arg: 1, scope: !5338, file: !483, line: 39, type: !57)
!5340 = !DILocation(line: 39, column: 17, scope: !5338)
!5341 = !DILocalVariable(name: "p", scope: !5338, file: !483, line: 41, type: !55)
!5342 = !DILocation(line: 41, column: 9, scope: !5338)
!5343 = !DILocation(line: 41, column: 21, scope: !5338)
!5344 = !DILocation(line: 41, column: 13, scope: !5338)
!5345 = !DILocation(line: 42, column: 8, scope: !5346)
!5346 = distinct !DILexicalBlock(scope: !5338, file: !483, line: 42, column: 7)
!5347 = !DILocation(line: 42, column: 10, scope: !5346)
!5348 = !DILocation(line: 42, column: 13, scope: !5346)
!5349 = !DILocation(line: 42, column: 15, scope: !5346)
!5350 = !DILocation(line: 42, column: 7, scope: !5338)
!5351 = !DILocation(line: 43, column: 5, scope: !5346)
!5352 = !DILocation(line: 44, column: 10, scope: !5338)
!5353 = !DILocation(line: 44, column: 3, scope: !5338)
!5354 = distinct !DISubprogram(name: "xnrealloc", scope: !486, file: !486, line: 112, type: !5355, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !482, retainedNodes: !69)
!5355 = !DISubroutineType(types: !5356)
!5356 = !{!55, !55, !57, !57}
!5357 = !DILocalVariable(name: "p", arg: 1, scope: !5354, file: !486, line: 112, type: !55)
!5358 = !DILocation(line: 112, column: 18, scope: !5354)
!5359 = !DILocalVariable(name: "n", arg: 2, scope: !5354, file: !486, line: 112, type: !57)
!5360 = !DILocation(line: 112, column: 28, scope: !5354)
!5361 = !DILocalVariable(name: "s", arg: 3, scope: !5354, file: !486, line: 112, type: !57)
!5362 = !DILocation(line: 112, column: 38, scope: !5354)
!5363 = !DILocation(line: 114, column: 7, scope: !5364)
!5364 = distinct !DILexicalBlock(scope: !5354, file: !486, line: 114, column: 7)
!5365 = !DILocation(line: 114, column: 7, scope: !5354)
!5366 = !DILocation(line: 115, column: 5, scope: !5364)
!5367 = !DILocation(line: 116, column: 20, scope: !5354)
!5368 = !DILocation(line: 116, column: 23, scope: !5354)
!5369 = !DILocation(line: 116, column: 27, scope: !5354)
!5370 = !DILocation(line: 116, column: 25, scope: !5354)
!5371 = !DILocation(line: 116, column: 10, scope: !5354)
!5372 = !DILocation(line: 116, column: 3, scope: !5354)
!5373 = distinct !DISubprogram(name: "xrealloc", scope: !483, file: !483, line: 51, type: !1105, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !482, retainedNodes: !69)
!5374 = !DILocalVariable(name: "p", arg: 1, scope: !5373, file: !483, line: 51, type: !55)
!5375 = !DILocation(line: 51, column: 17, scope: !5373)
!5376 = !DILocalVariable(name: "n", arg: 2, scope: !5373, file: !483, line: 51, type: !57)
!5377 = !DILocation(line: 51, column: 27, scope: !5373)
!5378 = !DILocation(line: 53, column: 8, scope: !5379)
!5379 = distinct !DILexicalBlock(scope: !5373, file: !483, line: 53, column: 7)
!5380 = !DILocation(line: 53, column: 10, scope: !5379)
!5381 = !DILocation(line: 53, column: 13, scope: !5379)
!5382 = !DILocation(line: 53, column: 7, scope: !5373)
!5383 = !DILocation(line: 57, column: 13, scope: !5384)
!5384 = distinct !DILexicalBlock(scope: !5379, file: !483, line: 54, column: 5)
!5385 = !DILocation(line: 57, column: 7, scope: !5384)
!5386 = !DILocation(line: 58, column: 7, scope: !5384)
!5387 = !DILocation(line: 61, column: 16, scope: !5373)
!5388 = !DILocation(line: 61, column: 19, scope: !5373)
!5389 = !DILocation(line: 61, column: 7, scope: !5373)
!5390 = !DILocation(line: 61, column: 5, scope: !5373)
!5391 = !DILocation(line: 62, column: 8, scope: !5392)
!5392 = distinct !DILexicalBlock(scope: !5373, file: !483, line: 62, column: 7)
!5393 = !DILocation(line: 62, column: 10, scope: !5392)
!5394 = !DILocation(line: 62, column: 13, scope: !5392)
!5395 = !DILocation(line: 62, column: 7, scope: !5373)
!5396 = !DILocation(line: 63, column: 5, scope: !5392)
!5397 = !DILocation(line: 64, column: 10, scope: !5373)
!5398 = !DILocation(line: 64, column: 3, scope: !5373)
!5399 = !DILocation(line: 65, column: 1, scope: !5373)
!5400 = !DILocalVariable(name: "p", arg: 1, scope: !487, file: !486, line: 174, type: !55)
!5401 = !DILocation(line: 174, column: 19, scope: !487)
!5402 = !DILocalVariable(name: "pn", arg: 2, scope: !487, file: !486, line: 174, type: !490)
!5403 = !DILocation(line: 174, column: 30, scope: !487)
!5404 = !DILocalVariable(name: "s", arg: 3, scope: !487, file: !486, line: 174, type: !57)
!5405 = !DILocation(line: 174, column: 41, scope: !487)
!5406 = !DILocalVariable(name: "n", scope: !487, file: !486, line: 176, type: !57)
!5407 = !DILocation(line: 176, column: 10, scope: !487)
!5408 = !DILocation(line: 176, column: 15, scope: !487)
!5409 = !DILocation(line: 176, column: 14, scope: !487)
!5410 = !DILocation(line: 178, column: 9, scope: !5411)
!5411 = distinct !DILexicalBlock(scope: !487, file: !486, line: 178, column: 7)
!5412 = !DILocation(line: 178, column: 7, scope: !487)
!5413 = !DILocation(line: 180, column: 13, scope: !5414)
!5414 = distinct !DILexicalBlock(scope: !5415, file: !486, line: 180, column: 11)
!5415 = distinct !DILexicalBlock(scope: !5411, file: !486, line: 179, column: 5)
!5416 = !DILocation(line: 180, column: 11, scope: !5415)
!5417 = !DILocation(line: 188, column: 32, scope: !5418)
!5418 = distinct !DILexicalBlock(scope: !5414, file: !486, line: 181, column: 9)
!5419 = !DILocation(line: 188, column: 30, scope: !5418)
!5420 = !DILocation(line: 188, column: 13, scope: !5418)
!5421 = !DILocation(line: 189, column: 17, scope: !5418)
!5422 = !DILocation(line: 189, column: 16, scope: !5418)
!5423 = !DILocation(line: 189, column: 13, scope: !5418)
!5424 = !DILocation(line: 190, column: 9, scope: !5418)
!5425 = !DILocation(line: 191, column: 11, scope: !5426)
!5426 = distinct !DILexicalBlock(scope: !5415, file: !486, line: 191, column: 11)
!5427 = !DILocation(line: 191, column: 11, scope: !5415)
!5428 = !DILocation(line: 192, column: 9, scope: !5426)
!5429 = !DILocation(line: 193, column: 5, scope: !5415)
!5430 = !DILocation(line: 200, column: 71, scope: !5431)
!5431 = distinct !DILexicalBlock(scope: !5432, file: !486, line: 200, column: 11)
!5432 = distinct !DILexicalBlock(scope: !5411, file: !486, line: 195, column: 5)
!5433 = !DILocation(line: 200, column: 69, scope: !5431)
!5434 = !DILocation(line: 201, column: 14, scope: !5431)
!5435 = !DILocation(line: 201, column: 11, scope: !5431)
!5436 = !DILocation(line: 200, column: 11, scope: !5432)
!5437 = !DILocation(line: 202, column: 9, scope: !5431)
!5438 = !DILocation(line: 203, column: 12, scope: !5432)
!5439 = !DILocation(line: 203, column: 14, scope: !5432)
!5440 = !DILocation(line: 203, column: 18, scope: !5432)
!5441 = !DILocation(line: 203, column: 9, scope: !5432)
!5442 = !DILocation(line: 206, column: 9, scope: !487)
!5443 = !DILocation(line: 206, column: 4, scope: !487)
!5444 = !DILocation(line: 206, column: 7, scope: !487)
!5445 = !DILocation(line: 207, column: 20, scope: !487)
!5446 = !DILocation(line: 207, column: 23, scope: !487)
!5447 = !DILocation(line: 207, column: 27, scope: !487)
!5448 = !DILocation(line: 207, column: 25, scope: !487)
!5449 = !DILocation(line: 207, column: 10, scope: !487)
!5450 = !DILocation(line: 207, column: 3, scope: !487)
!5451 = distinct !DISubprogram(name: "xcharalloc", scope: !486, file: !486, line: 216, type: !5452, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !482, retainedNodes: !69)
!5452 = !DISubroutineType(types: !5453)
!5453 = !{!56, !57}
!5454 = !DILocalVariable(name: "n", arg: 1, scope: !5451, file: !486, line: 216, type: !57)
!5455 = !DILocation(line: 216, column: 20, scope: !5451)
!5456 = !DILocation(line: 218, column: 10, scope: !5451)
!5457 = !DILocation(line: 218, column: 3, scope: !5451)
!5458 = distinct !DISubprogram(name: "x2realloc", scope: !483, file: !483, line: 74, type: !5459, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !482, retainedNodes: !69)
!5459 = !DISubroutineType(types: !5460)
!5460 = !{!55, !55, !490}
!5461 = !DILocalVariable(name: "p", arg: 1, scope: !5458, file: !483, line: 74, type: !55)
!5462 = !DILocation(line: 74, column: 18, scope: !5458)
!5463 = !DILocalVariable(name: "pn", arg: 2, scope: !5458, file: !483, line: 74, type: !490)
!5464 = !DILocation(line: 74, column: 29, scope: !5458)
!5465 = !DILocation(line: 76, column: 22, scope: !5458)
!5466 = !DILocation(line: 76, column: 25, scope: !5458)
!5467 = !DILocation(line: 76, column: 10, scope: !5458)
!5468 = !DILocation(line: 76, column: 3, scope: !5458)
!5469 = distinct !DISubprogram(name: "xzalloc", scope: !483, file: !483, line: 84, type: !1101, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !482, retainedNodes: !69)
!5470 = !DILocalVariable(name: "n", arg: 1, scope: !5469, file: !483, line: 84, type: !57)
!5471 = !DILocation(line: 84, column: 17, scope: !5469)
!5472 = !DILocation(line: 86, column: 19, scope: !5469)
!5473 = !DILocation(line: 86, column: 10, scope: !5469)
!5474 = !DILocation(line: 86, column: 3, scope: !5469)
!5475 = distinct !DISubprogram(name: "xcalloc", scope: !483, file: !483, line: 93, type: !5323, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !482, retainedNodes: !69)
!5476 = !DILocalVariable(name: "n", arg: 1, scope: !5475, file: !483, line: 93, type: !57)
!5477 = !DILocation(line: 93, column: 17, scope: !5475)
!5478 = !DILocalVariable(name: "s", arg: 2, scope: !5475, file: !483, line: 93, type: !57)
!5479 = !DILocation(line: 93, column: 27, scope: !5475)
!5480 = !DILocalVariable(name: "p", scope: !5475, file: !483, line: 95, type: !55)
!5481 = !DILocation(line: 95, column: 9, scope: !5475)
!5482 = !DILocation(line: 100, column: 7, scope: !5483)
!5483 = distinct !DILexicalBlock(scope: !5475, file: !483, line: 100, column: 7)
!5484 = !DILocation(line: 101, column: 7, scope: !5483)
!5485 = !DILocation(line: 101, column: 26, scope: !5483)
!5486 = !DILocation(line: 101, column: 29, scope: !5483)
!5487 = !DILocation(line: 101, column: 18, scope: !5483)
!5488 = !DILocation(line: 101, column: 16, scope: !5483)
!5489 = !DILocation(line: 100, column: 7, scope: !5475)
!5490 = !DILocation(line: 102, column: 5, scope: !5483)
!5491 = !DILocation(line: 103, column: 10, scope: !5475)
!5492 = !DILocation(line: 103, column: 3, scope: !5475)
!5493 = distinct !DISubprogram(name: "xmemdup", scope: !483, file: !483, line: 111, type: !5494, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !482, retainedNodes: !69)
!5494 = !DISubroutineType(types: !5495)
!5495 = !{!55, !466, !57}
!5496 = !DILocalVariable(name: "p", arg: 1, scope: !5493, file: !483, line: 111, type: !466)
!5497 = !DILocation(line: 111, column: 22, scope: !5493)
!5498 = !DILocalVariable(name: "s", arg: 2, scope: !5493, file: !483, line: 111, type: !57)
!5499 = !DILocation(line: 111, column: 32, scope: !5493)
!5500 = !DILocation(line: 113, column: 27, scope: !5493)
!5501 = !DILocation(line: 113, column: 18, scope: !5493)
!5502 = !DILocation(line: 113, column: 31, scope: !5493)
!5503 = !DILocation(line: 113, column: 34, scope: !5493)
!5504 = !DILocation(line: 113, column: 10, scope: !5493)
!5505 = !DILocation(line: 113, column: 3, scope: !5493)
!5506 = distinct !DISubprogram(name: "xstrdup", scope: !483, file: !483, line: 119, type: !4470, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !482, retainedNodes: !69)
!5507 = !DILocalVariable(name: "string", arg: 1, scope: !5506, file: !483, line: 119, type: !52)
!5508 = !DILocation(line: 119, column: 22, scope: !5506)
!5509 = !DILocation(line: 121, column: 19, scope: !5506)
!5510 = !DILocation(line: 121, column: 35, scope: !5506)
!5511 = !DILocation(line: 121, column: 27, scope: !5506)
!5512 = !DILocation(line: 121, column: 43, scope: !5506)
!5513 = !DILocation(line: 121, column: 10, scope: !5506)
!5514 = !DILocation(line: 121, column: 3, scope: !5506)
!5515 = distinct !DISubprogram(name: "xalloc_die", scope: !495, file: !495, line: 32, type: !227, scopeLine: 33, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !494, retainedNodes: !69)
!5516 = !DILocation(line: 34, column: 10, scope: !5515)
!5517 = !DILocation(line: 34, column: 3, scope: !5515)
!5518 = !DILocation(line: 40, column: 3, scope: !5515)
!5519 = distinct !DISubprogram(name: "xset_binary_mode_error", scope: !5520, file: !5520, line: 33, type: !227, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !496, retainedNodes: !69)
!5520 = !DIFile(filename: "../lib/xbinary-io.h", directory: "/nobackup/klee_LLVM_12/Dataset-1/coreutils-8.32/obj-llvm")
!5521 = !DILocation(line: 33, column: 55, scope: !5519)
!5522 = distinct !DISubprogram(name: "xset_binary_mode", scope: !5520, file: !5520, line: 40, type: !5523, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !496, retainedNodes: !69)
!5523 = !DISubroutineType(types: !5524)
!5524 = !{null, !60, !60}
!5525 = !DILocalVariable(name: "fd", arg: 1, scope: !5522, file: !5520, line: 40, type: !60)
!5526 = !DILocation(line: 40, column: 23, scope: !5522)
!5527 = !DILocalVariable(name: "mode", arg: 2, scope: !5522, file: !5520, line: 40, type: !60)
!5528 = !DILocation(line: 40, column: 31, scope: !5522)
!5529 = !DILocation(line: 42, column: 24, scope: !5530)
!5530 = distinct !DILexicalBlock(scope: !5522, file: !5520, line: 42, column: 7)
!5531 = !DILocation(line: 42, column: 28, scope: !5530)
!5532 = !DILocation(line: 42, column: 7, scope: !5530)
!5533 = !DILocation(line: 42, column: 34, scope: !5530)
!5534 = !DILocation(line: 42, column: 7, scope: !5522)
!5535 = !DILocation(line: 43, column: 5, scope: !5530)
!5536 = !DILocation(line: 44, column: 1, scope: !5522)
!5537 = distinct !DISubprogram(name: "rpl_fclose", scope: !499, file: !499, line: 58, type: !5538, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !498, retainedNodes: !69)
!5538 = !DISubroutineType(types: !5539)
!5539 = !{!60, !5540}
!5540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5541, size: 64)
!5541 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1202, line: 7, baseType: !5542)
!5542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !1204, line: 49, size: 1728, elements: !5543)
!5543 = !{!5544, !5545, !5546, !5547, !5548, !5549, !5550, !5551, !5552, !5553, !5554, !5555, !5556, !5557, !5559, !5560, !5561, !5562, !5563, !5564, !5565, !5566, !5567, !5568, !5569, !5570, !5571, !5572, !5573}
!5544 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !5542, file: !1204, line: 51, baseType: !60, size: 32)
!5545 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !5542, file: !1204, line: 54, baseType: !56, size: 64, offset: 64)
!5546 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !5542, file: !1204, line: 55, baseType: !56, size: 64, offset: 128)
!5547 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !5542, file: !1204, line: 56, baseType: !56, size: 64, offset: 192)
!5548 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !5542, file: !1204, line: 57, baseType: !56, size: 64, offset: 256)
!5549 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !5542, file: !1204, line: 58, baseType: !56, size: 64, offset: 320)
!5550 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !5542, file: !1204, line: 59, baseType: !56, size: 64, offset: 384)
!5551 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !5542, file: !1204, line: 60, baseType: !56, size: 64, offset: 448)
!5552 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !5542, file: !1204, line: 61, baseType: !56, size: 64, offset: 512)
!5553 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !5542, file: !1204, line: 64, baseType: !56, size: 64, offset: 576)
!5554 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !5542, file: !1204, line: 65, baseType: !56, size: 64, offset: 640)
!5555 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !5542, file: !1204, line: 66, baseType: !56, size: 64, offset: 704)
!5556 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !5542, file: !1204, line: 68, baseType: !1219, size: 64, offset: 768)
!5557 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !5542, file: !1204, line: 70, baseType: !5558, size: 64, offset: 832)
!5558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5542, size: 64)
!5559 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !5542, file: !1204, line: 72, baseType: !60, size: 32, offset: 896)
!5560 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !5542, file: !1204, line: 73, baseType: !60, size: 32, offset: 928)
!5561 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !5542, file: !1204, line: 74, baseType: !1044, size: 64, offset: 960)
!5562 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !5542, file: !1204, line: 77, baseType: !61, size: 16, offset: 1024)
!5563 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !5542, file: !1204, line: 78, baseType: !1228, size: 8, offset: 1040)
!5564 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !5542, file: !1204, line: 79, baseType: !1230, size: 8, offset: 1048)
!5565 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !5542, file: !1204, line: 81, baseType: !1232, size: 64, offset: 1088)
!5566 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !5542, file: !1204, line: 89, baseType: !1235, size: 64, offset: 1152)
!5567 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !5542, file: !1204, line: 91, baseType: !1237, size: 64, offset: 1216)
!5568 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !5542, file: !1204, line: 92, baseType: !1240, size: 64, offset: 1280)
!5569 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !5542, file: !1204, line: 93, baseType: !5558, size: 64, offset: 1344)
!5570 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !5542, file: !1204, line: 94, baseType: !55, size: 64, offset: 1408)
!5571 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !5542, file: !1204, line: 95, baseType: !57, size: 64, offset: 1472)
!5572 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !5542, file: !1204, line: 96, baseType: !60, size: 32, offset: 1536)
!5573 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !5542, file: !1204, line: 98, baseType: !1247, size: 160, offset: 1568)
!5574 = !DILocalVariable(name: "fp", arg: 1, scope: !5537, file: !499, line: 58, type: !5540)
!5575 = !DILocation(line: 58, column: 19, scope: !5537)
!5576 = !DILocalVariable(name: "saved_errno", scope: !5537, file: !499, line: 60, type: !60)
!5577 = !DILocation(line: 60, column: 7, scope: !5537)
!5578 = !DILocalVariable(name: "fd", scope: !5537, file: !499, line: 61, type: !60)
!5579 = !DILocation(line: 61, column: 7, scope: !5537)
!5580 = !DILocalVariable(name: "result", scope: !5537, file: !499, line: 62, type: !60)
!5581 = !DILocation(line: 62, column: 7, scope: !5537)
!5582 = !DILocation(line: 65, column: 16, scope: !5537)
!5583 = !DILocation(line: 65, column: 8, scope: !5537)
!5584 = !DILocation(line: 65, column: 6, scope: !5537)
!5585 = !DILocation(line: 66, column: 7, scope: !5586)
!5586 = distinct !DILexicalBlock(scope: !5537, file: !499, line: 66, column: 7)
!5587 = !DILocation(line: 66, column: 10, scope: !5586)
!5588 = !DILocation(line: 66, column: 7, scope: !5537)
!5589 = !DILocation(line: 67, column: 28, scope: !5586)
!5590 = !DILocation(line: 67, column: 12, scope: !5586)
!5591 = !DILocation(line: 67, column: 5, scope: !5586)
!5592 = !DILocation(line: 72, column: 9, scope: !5593)
!5593 = distinct !DILexicalBlock(scope: !5537, file: !499, line: 72, column: 7)
!5594 = !DILocation(line: 72, column: 23, scope: !5593)
!5595 = !DILocation(line: 72, column: 41, scope: !5593)
!5596 = !DILocation(line: 72, column: 33, scope: !5593)
!5597 = !DILocation(line: 72, column: 26, scope: !5593)
!5598 = !DILocation(line: 72, column: 59, scope: !5593)
!5599 = !DILocation(line: 73, column: 7, scope: !5593)
!5600 = !DILocation(line: 73, column: 18, scope: !5593)
!5601 = !DILocation(line: 73, column: 10, scope: !5593)
!5602 = !DILocation(line: 72, column: 7, scope: !5537)
!5603 = !DILocation(line: 74, column: 19, scope: !5593)
!5604 = !DILocation(line: 74, column: 17, scope: !5593)
!5605 = !DILocation(line: 74, column: 5, scope: !5593)
!5606 = !DILocation(line: 100, column: 28, scope: !5537)
!5607 = !DILocation(line: 100, column: 12, scope: !5537)
!5608 = !DILocation(line: 100, column: 10, scope: !5537)
!5609 = !DILocation(line: 105, column: 7, scope: !5610)
!5610 = distinct !DILexicalBlock(scope: !5537, file: !499, line: 105, column: 7)
!5611 = !DILocation(line: 105, column: 19, scope: !5610)
!5612 = !DILocation(line: 105, column: 7, scope: !5537)
!5613 = !DILocation(line: 107, column: 15, scope: !5614)
!5614 = distinct !DILexicalBlock(scope: !5610, file: !499, line: 106, column: 5)
!5615 = !DILocation(line: 107, column: 7, scope: !5614)
!5616 = !DILocation(line: 107, column: 13, scope: !5614)
!5617 = !DILocation(line: 108, column: 14, scope: !5614)
!5618 = !DILocation(line: 109, column: 5, scope: !5614)
!5619 = !DILocation(line: 111, column: 10, scope: !5537)
!5620 = !DILocation(line: 111, column: 3, scope: !5537)
!5621 = !DILocation(line: 112, column: 1, scope: !5537)
!5622 = distinct !DISubprogram(name: "rpl_fflush", scope: !501, file: !501, line: 129, type: !5623, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !500, retainedNodes: !69)
!5623 = !DISubroutineType(types: !5624)
!5624 = !{!60, !5625}
!5625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5626, size: 64)
!5626 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1202, line: 7, baseType: !5627)
!5627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !1204, line: 49, size: 1728, elements: !5628)
!5628 = !{!5629, !5630, !5631, !5632, !5633, !5634, !5635, !5636, !5637, !5638, !5639, !5640, !5641, !5642, !5644, !5645, !5646, !5647, !5648, !5649, !5650, !5651, !5652, !5653, !5654, !5655, !5656, !5657, !5658}
!5629 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !5627, file: !1204, line: 51, baseType: !60, size: 32)
!5630 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !5627, file: !1204, line: 54, baseType: !56, size: 64, offset: 64)
!5631 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !5627, file: !1204, line: 55, baseType: !56, size: 64, offset: 128)
!5632 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !5627, file: !1204, line: 56, baseType: !56, size: 64, offset: 192)
!5633 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !5627, file: !1204, line: 57, baseType: !56, size: 64, offset: 256)
!5634 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !5627, file: !1204, line: 58, baseType: !56, size: 64, offset: 320)
!5635 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !5627, file: !1204, line: 59, baseType: !56, size: 64, offset: 384)
!5636 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !5627, file: !1204, line: 60, baseType: !56, size: 64, offset: 448)
!5637 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !5627, file: !1204, line: 61, baseType: !56, size: 64, offset: 512)
!5638 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !5627, file: !1204, line: 64, baseType: !56, size: 64, offset: 576)
!5639 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !5627, file: !1204, line: 65, baseType: !56, size: 64, offset: 640)
!5640 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !5627, file: !1204, line: 66, baseType: !56, size: 64, offset: 704)
!5641 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !5627, file: !1204, line: 68, baseType: !1219, size: 64, offset: 768)
!5642 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !5627, file: !1204, line: 70, baseType: !5643, size: 64, offset: 832)
!5643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5627, size: 64)
!5644 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !5627, file: !1204, line: 72, baseType: !60, size: 32, offset: 896)
!5645 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !5627, file: !1204, line: 73, baseType: !60, size: 32, offset: 928)
!5646 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !5627, file: !1204, line: 74, baseType: !1044, size: 64, offset: 960)
!5647 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !5627, file: !1204, line: 77, baseType: !61, size: 16, offset: 1024)
!5648 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !5627, file: !1204, line: 78, baseType: !1228, size: 8, offset: 1040)
!5649 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !5627, file: !1204, line: 79, baseType: !1230, size: 8, offset: 1048)
!5650 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !5627, file: !1204, line: 81, baseType: !1232, size: 64, offset: 1088)
!5651 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !5627, file: !1204, line: 89, baseType: !1235, size: 64, offset: 1152)
!5652 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !5627, file: !1204, line: 91, baseType: !1237, size: 64, offset: 1216)
!5653 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !5627, file: !1204, line: 92, baseType: !1240, size: 64, offset: 1280)
!5654 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !5627, file: !1204, line: 93, baseType: !5643, size: 64, offset: 1344)
!5655 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !5627, file: !1204, line: 94, baseType: !55, size: 64, offset: 1408)
!5656 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !5627, file: !1204, line: 95, baseType: !57, size: 64, offset: 1472)
!5657 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !5627, file: !1204, line: 96, baseType: !60, size: 32, offset: 1536)
!5658 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !5627, file: !1204, line: 98, baseType: !1247, size: 160, offset: 1568)
!5659 = !DILocalVariable(name: "stream", arg: 1, scope: !5622, file: !501, line: 129, type: !5625)
!5660 = !DILocation(line: 129, column: 19, scope: !5622)
!5661 = !DILocation(line: 150, column: 7, scope: !5662)
!5662 = distinct !DILexicalBlock(scope: !5622, file: !501, line: 150, column: 7)
!5663 = !DILocation(line: 150, column: 14, scope: !5662)
!5664 = !DILocation(line: 150, column: 22, scope: !5662)
!5665 = !DILocation(line: 150, column: 27, scope: !5662)
!5666 = !DILocation(line: 150, column: 7, scope: !5622)
!5667 = !DILocation(line: 151, column: 20, scope: !5662)
!5668 = !DILocation(line: 151, column: 12, scope: !5662)
!5669 = !DILocation(line: 151, column: 5, scope: !5662)
!5670 = !DILocation(line: 156, column: 44, scope: !5622)
!5671 = !DILocation(line: 156, column: 3, scope: !5622)
!5672 = !DILocation(line: 158, column: 18, scope: !5622)
!5673 = !DILocation(line: 158, column: 10, scope: !5622)
!5674 = !DILocation(line: 158, column: 3, scope: !5622)
!5675 = !DILocation(line: 235, column: 1, scope: !5622)
!5676 = distinct !DISubprogram(name: "clear_ungetc_buffer_preserving_position", scope: !501, file: !501, line: 41, type: !5677, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !500, retainedNodes: !69)
!5677 = !DISubroutineType(types: !5678)
!5678 = !{null, !5625}
!5679 = !DILocalVariable(name: "fp", arg: 1, scope: !5676, file: !501, line: 41, type: !5625)
!5680 = !DILocation(line: 41, column: 48, scope: !5676)
!5681 = !DILocation(line: 43, column: 7, scope: !5682)
!5682 = distinct !DILexicalBlock(scope: !5676, file: !501, line: 43, column: 7)
!5683 = !DILocation(line: 43, column: 11, scope: !5682)
!5684 = !DILocation(line: 43, column: 18, scope: !5682)
!5685 = !DILocation(line: 43, column: 7, scope: !5676)
!5686 = !DILocation(line: 45, column: 13, scope: !5682)
!5687 = !DILocation(line: 45, column: 5, scope: !5682)
!5688 = !DILocation(line: 46, column: 1, scope: !5676)
!5689 = distinct !DISubprogram(name: "rpl_fseeko", scope: !503, file: !503, line: 28, type: !5690, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !502, retainedNodes: !69)
!5690 = !DISubroutineType(types: !5691)
!5691 = !{!60, !5692, !1770, !60}
!5692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5693, size: 64)
!5693 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1202, line: 7, baseType: !5694)
!5694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !1204, line: 49, size: 1728, elements: !5695)
!5695 = !{!5696, !5697, !5698, !5699, !5700, !5701, !5702, !5703, !5704, !5705, !5706, !5707, !5708, !5709, !5711, !5712, !5713, !5714, !5715, !5716, !5717, !5718, !5719, !5720, !5721, !5722, !5723, !5724, !5725}
!5696 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !5694, file: !1204, line: 51, baseType: !60, size: 32)
!5697 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !5694, file: !1204, line: 54, baseType: !56, size: 64, offset: 64)
!5698 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !5694, file: !1204, line: 55, baseType: !56, size: 64, offset: 128)
!5699 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !5694, file: !1204, line: 56, baseType: !56, size: 64, offset: 192)
!5700 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !5694, file: !1204, line: 57, baseType: !56, size: 64, offset: 256)
!5701 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !5694, file: !1204, line: 58, baseType: !56, size: 64, offset: 320)
!5702 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !5694, file: !1204, line: 59, baseType: !56, size: 64, offset: 384)
!5703 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !5694, file: !1204, line: 60, baseType: !56, size: 64, offset: 448)
!5704 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !5694, file: !1204, line: 61, baseType: !56, size: 64, offset: 512)
!5705 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !5694, file: !1204, line: 64, baseType: !56, size: 64, offset: 576)
!5706 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !5694, file: !1204, line: 65, baseType: !56, size: 64, offset: 640)
!5707 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !5694, file: !1204, line: 66, baseType: !56, size: 64, offset: 704)
!5708 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !5694, file: !1204, line: 68, baseType: !1219, size: 64, offset: 768)
!5709 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !5694, file: !1204, line: 70, baseType: !5710, size: 64, offset: 832)
!5710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5694, size: 64)
!5711 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !5694, file: !1204, line: 72, baseType: !60, size: 32, offset: 896)
!5712 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !5694, file: !1204, line: 73, baseType: !60, size: 32, offset: 928)
!5713 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !5694, file: !1204, line: 74, baseType: !1044, size: 64, offset: 960)
!5714 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !5694, file: !1204, line: 77, baseType: !61, size: 16, offset: 1024)
!5715 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !5694, file: !1204, line: 78, baseType: !1228, size: 8, offset: 1040)
!5716 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !5694, file: !1204, line: 79, baseType: !1230, size: 8, offset: 1048)
!5717 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !5694, file: !1204, line: 81, baseType: !1232, size: 64, offset: 1088)
!5718 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !5694, file: !1204, line: 89, baseType: !1235, size: 64, offset: 1152)
!5719 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !5694, file: !1204, line: 91, baseType: !1237, size: 64, offset: 1216)
!5720 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !5694, file: !1204, line: 92, baseType: !1240, size: 64, offset: 1280)
!5721 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !5694, file: !1204, line: 93, baseType: !5710, size: 64, offset: 1344)
!5722 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !5694, file: !1204, line: 94, baseType: !55, size: 64, offset: 1408)
!5723 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !5694, file: !1204, line: 95, baseType: !57, size: 64, offset: 1472)
!5724 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !5694, file: !1204, line: 96, baseType: !60, size: 32, offset: 1536)
!5725 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !5694, file: !1204, line: 98, baseType: !1247, size: 160, offset: 1568)
!5726 = !DILocalVariable(name: "fp", arg: 1, scope: !5689, file: !503, line: 28, type: !5692)
!5727 = !DILocation(line: 28, column: 15, scope: !5689)
!5728 = !DILocalVariable(name: "offset", arg: 2, scope: !5689, file: !503, line: 28, type: !1770)
!5729 = !DILocation(line: 28, column: 25, scope: !5689)
!5730 = !DILocalVariable(name: "whence", arg: 3, scope: !5689, file: !503, line: 28, type: !60)
!5731 = !DILocation(line: 28, column: 37, scope: !5689)
!5732 = !DILocation(line: 52, column: 7, scope: !5733)
!5733 = distinct !DILexicalBlock(scope: !5689, file: !503, line: 52, column: 7)
!5734 = !DILocation(line: 52, column: 11, scope: !5733)
!5735 = !DILocation(line: 52, column: 27, scope: !5733)
!5736 = !DILocation(line: 52, column: 31, scope: !5733)
!5737 = !DILocation(line: 52, column: 24, scope: !5733)
!5738 = !DILocation(line: 53, column: 7, scope: !5733)
!5739 = !DILocation(line: 53, column: 10, scope: !5733)
!5740 = !DILocation(line: 53, column: 14, scope: !5733)
!5741 = !DILocation(line: 53, column: 31, scope: !5733)
!5742 = !DILocation(line: 53, column: 35, scope: !5733)
!5743 = !DILocation(line: 53, column: 28, scope: !5733)
!5744 = !DILocation(line: 54, column: 7, scope: !5733)
!5745 = !DILocation(line: 54, column: 10, scope: !5733)
!5746 = !DILocation(line: 54, column: 14, scope: !5733)
!5747 = !DILocation(line: 54, column: 28, scope: !5733)
!5748 = !DILocation(line: 52, column: 7, scope: !5689)
!5749 = !DILocalVariable(name: "pos", scope: !5750, file: !503, line: 117, type: !1770)
!5750 = distinct !DILexicalBlock(scope: !5733, file: !503, line: 113, column: 5)
!5751 = !DILocation(line: 117, column: 13, scope: !5750)
!5752 = !DILocation(line: 117, column: 34, scope: !5750)
!5753 = !DILocation(line: 117, column: 26, scope: !5750)
!5754 = !DILocation(line: 117, column: 39, scope: !5750)
!5755 = !DILocation(line: 117, column: 47, scope: !5750)
!5756 = !DILocation(line: 117, column: 19, scope: !5750)
!5757 = !DILocation(line: 118, column: 11, scope: !5758)
!5758 = distinct !DILexicalBlock(scope: !5750, file: !503, line: 118, column: 11)
!5759 = !DILocation(line: 118, column: 15, scope: !5758)
!5760 = !DILocation(line: 118, column: 11, scope: !5750)
!5761 = !DILocation(line: 124, column: 11, scope: !5762)
!5762 = distinct !DILexicalBlock(scope: !5758, file: !503, line: 119, column: 9)
!5763 = !DILocation(line: 129, column: 7, scope: !5750)
!5764 = !DILocation(line: 129, column: 11, scope: !5750)
!5765 = !DILocation(line: 129, column: 18, scope: !5750)
!5766 = !DILocation(line: 130, column: 21, scope: !5750)
!5767 = !DILocation(line: 130, column: 7, scope: !5750)
!5768 = !DILocation(line: 130, column: 11, scope: !5750)
!5769 = !DILocation(line: 130, column: 19, scope: !5750)
!5770 = !DILocation(line: 161, column: 7, scope: !5750)
!5771 = !DILocation(line: 163, column: 18, scope: !5689)
!5772 = !DILocation(line: 163, column: 22, scope: !5689)
!5773 = !DILocation(line: 163, column: 30, scope: !5689)
!5774 = !DILocation(line: 163, column: 10, scope: !5689)
!5775 = !DILocation(line: 163, column: 3, scope: !5689)
!5776 = !DILocation(line: 164, column: 1, scope: !5689)
!5777 = distinct !DISubprogram(name: "rpl_mbrtowc", scope: !505, file: !505, line: 86, type: !5778, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !504, retainedNodes: !69)
!5778 = !DISubroutineType(types: !5779)
!5779 = !{!57, !5780, !52, !57, !5781}
!5780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2112, size: 64)
!5781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5782, size: 64)
!5782 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !2059, line: 6, baseType: !5783)
!5783 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !2061, line: 21, baseType: !5784)
!5784 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2061, line: 13, size: 64, elements: !5785)
!5785 = !{!5786, !5787}
!5786 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !5784, file: !2061, line: 15, baseType: !60, size: 32)
!5787 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !5784, file: !2061, line: 20, baseType: !5788, size: 32, offset: 32)
!5788 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5784, file: !2061, line: 16, size: 32, elements: !5789)
!5789 = !{!5790, !5791}
!5790 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !5788, file: !2061, line: 18, baseType: !7, size: 32)
!5791 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !5788, file: !2061, line: 19, baseType: !2070, size: 32)
!5792 = !DILocalVariable(name: "pwc", arg: 1, scope: !5777, file: !505, line: 86, type: !5780)
!5793 = !DILocation(line: 86, column: 23, scope: !5777)
!5794 = !DILocalVariable(name: "s", arg: 2, scope: !5777, file: !505, line: 86, type: !52)
!5795 = !DILocation(line: 86, column: 40, scope: !5777)
!5796 = !DILocalVariable(name: "n", arg: 3, scope: !5777, file: !505, line: 86, type: !57)
!5797 = !DILocation(line: 86, column: 50, scope: !5777)
!5798 = !DILocalVariable(name: "ps", arg: 4, scope: !5777, file: !505, line: 86, type: !5781)
!5799 = !DILocation(line: 86, column: 64, scope: !5777)
!5800 = !DILocalVariable(name: "ret", scope: !5777, file: !505, line: 88, type: !57)
!5801 = !DILocation(line: 88, column: 10, scope: !5777)
!5802 = !DILocalVariable(name: "wc", scope: !5777, file: !505, line: 89, type: !2112)
!5803 = !DILocation(line: 89, column: 11, scope: !5777)
!5804 = !DILocation(line: 105, column: 9, scope: !5805)
!5805 = distinct !DILexicalBlock(scope: !5777, file: !505, line: 105, column: 7)
!5806 = !DILocation(line: 105, column: 7, scope: !5777)
!5807 = !DILocation(line: 106, column: 9, scope: !5805)
!5808 = !DILocation(line: 106, column: 5, scope: !5805)
!5809 = !DILocation(line: 145, column: 18, scope: !5777)
!5810 = !DILocation(line: 145, column: 23, scope: !5777)
!5811 = !DILocation(line: 145, column: 26, scope: !5777)
!5812 = !DILocation(line: 145, column: 29, scope: !5777)
!5813 = !DILocation(line: 145, column: 9, scope: !5777)
!5814 = !DILocation(line: 145, column: 7, scope: !5777)
!5815 = !DILocation(line: 154, column: 22, scope: !5816)
!5816 = distinct !DILexicalBlock(scope: !5777, file: !505, line: 154, column: 7)
!5817 = !DILocation(line: 154, column: 19, scope: !5816)
!5818 = !DILocation(line: 154, column: 26, scope: !5816)
!5819 = !DILocation(line: 154, column: 29, scope: !5816)
!5820 = !DILocation(line: 154, column: 31, scope: !5816)
!5821 = !DILocation(line: 154, column: 36, scope: !5816)
!5822 = !DILocation(line: 154, column: 41, scope: !5816)
!5823 = !DILocation(line: 154, column: 7, scope: !5777)
!5824 = !DILocalVariable(name: "uc", scope: !5825, file: !505, line: 156, type: !150)
!5825 = distinct !DILexicalBlock(scope: !5816, file: !505, line: 155, column: 5)
!5826 = !DILocation(line: 156, column: 21, scope: !5825)
!5827 = !DILocation(line: 156, column: 27, scope: !5825)
!5828 = !DILocation(line: 156, column: 26, scope: !5825)
!5829 = !DILocation(line: 157, column: 14, scope: !5825)
!5830 = !DILocation(line: 157, column: 8, scope: !5825)
!5831 = !DILocation(line: 157, column: 12, scope: !5825)
!5832 = !DILocation(line: 158, column: 7, scope: !5825)
!5833 = !DILocation(line: 162, column: 10, scope: !5777)
!5834 = !DILocation(line: 162, column: 3, scope: !5777)
!5835 = !DILocation(line: 163, column: 1, scope: !5777)
!5836 = distinct !DISubprogram(name: "print_and_abort", scope: !223, file: !223, line: 330, type: !227, scopeLine: 331, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !222, retainedNodes: !69)
!5837 = !DILocation(line: 340, column: 12, scope: !5836)
!5838 = !DILocation(line: 340, column: 3, scope: !5836)
!5839 = !DILocation(line: 342, column: 9, scope: !5836)
!5840 = !DILocation(line: 342, column: 3, scope: !5836)
!5841 = distinct !DISubprogram(name: "_obstack_begin", scope: !223, file: !223, line: 150, type: !5842, scopeLine: 154, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !222, retainedNodes: !69)
!5842 = !DISubroutineType(types: !5843)
!5843 = !{!60, !5844, !57, !57, !1100, !1111}
!5844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5845, size: 64)
!5845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !1074, line: 174, size: 704, elements: !5846)
!5846 = !{!5847, !5848, !5855, !5856, !5857, !5858, !5863, !5864, !5869, !5874, !5875, !5876, !5877}
!5847 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !5845, file: !1074, line: 176, baseType: !57, size: 64)
!5848 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !5845, file: !1074, line: 177, baseType: !5849, size: 64, offset: 64)
!5849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5850, size: 64)
!5850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !1074, line: 167, size: 128, elements: !5851)
!5851 = !{!5852, !5853, !5854}
!5852 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !5850, file: !1074, line: 169, baseType: !56, size: 64)
!5853 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5850, file: !1074, line: 170, baseType: !5849, size: 64, offset: 64)
!5854 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !5850, file: !1074, line: 171, baseType: !1084, offset: 128)
!5855 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !5845, file: !1074, line: 178, baseType: !56, size: 64, offset: 128)
!5856 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !5845, file: !1074, line: 179, baseType: !56, size: 64, offset: 192)
!5857 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !5845, file: !1074, line: 180, baseType: !56, size: 64, offset: 256)
!5858 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !5845, file: !1074, line: 185, baseType: !5859, size: 64, offset: 320)
!5859 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5845, file: !1074, line: 181, size: 64, elements: !5860)
!5860 = !{!5861, !5862}
!5861 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !5859, file: !1074, line: 183, baseType: !57, size: 64)
!5862 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !5859, file: !1074, line: 184, baseType: !55, size: 64)
!5863 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !5845, file: !1074, line: 186, baseType: !57, size: 64, offset: 384)
!5864 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !5845, file: !1074, line: 193, baseType: !5865, size: 64, offset: 448)
!5865 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5845, file: !1074, line: 189, size: 64, elements: !5866)
!5866 = !{!5867, !5868}
!5867 = !DIDerivedType(tag: DW_TAG_member, name: "plain", scope: !5865, file: !1074, line: 191, baseType: !1100, size: 64)
!5868 = !DIDerivedType(tag: DW_TAG_member, name: "extra", scope: !5865, file: !1074, line: 192, baseType: !1104, size: 64)
!5869 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !5845, file: !1074, line: 198, baseType: !5870, size: 64, offset: 512)
!5870 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5845, file: !1074, line: 194, size: 64, elements: !5871)
!5871 = !{!5872, !5873}
!5872 = !DIDerivedType(tag: DW_TAG_member, name: "plain", scope: !5870, file: !1074, line: 196, baseType: !1111, size: 64)
!5873 = !DIDerivedType(tag: DW_TAG_member, name: "extra", scope: !5870, file: !1074, line: 197, baseType: !1115, size: 64)
!5874 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !5845, file: !1074, line: 200, baseType: !55, size: 64, offset: 576)
!5875 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !5845, file: !1074, line: 201, baseType: !7, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!5876 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !5845, file: !1074, line: 202, baseType: !7, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!5877 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !5845, file: !1074, line: 206, baseType: !7, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!5878 = !DILocalVariable(name: "h", arg: 1, scope: !5841, file: !223, line: 150, type: !5844)
!5879 = !DILocation(line: 150, column: 33, scope: !5841)
!5880 = !DILocalVariable(name: "size", arg: 2, scope: !5841, file: !223, line: 151, type: !57)
!5881 = !DILocation(line: 151, column: 33, scope: !5841)
!5882 = !DILocalVariable(name: "alignment", arg: 3, scope: !5841, file: !223, line: 151, type: !57)
!5883 = !DILocation(line: 151, column: 55, scope: !5841)
!5884 = !DILocalVariable(name: "chunkfun", arg: 4, scope: !5841, file: !223, line: 152, type: !1100)
!5885 = !DILocation(line: 152, column: 25, scope: !5841)
!5886 = !DILocalVariable(name: "freefun", arg: 5, scope: !5841, file: !223, line: 153, type: !1111)
!5887 = !DILocation(line: 153, column: 24, scope: !5841)
!5888 = !DILocation(line: 155, column: 23, scope: !5841)
!5889 = !DILocation(line: 155, column: 3, scope: !5841)
!5890 = !DILocation(line: 155, column: 6, scope: !5841)
!5891 = !DILocation(line: 155, column: 15, scope: !5841)
!5892 = !DILocation(line: 155, column: 21, scope: !5841)
!5893 = !DILocation(line: 156, column: 22, scope: !5841)
!5894 = !DILocation(line: 156, column: 3, scope: !5841)
!5895 = !DILocation(line: 156, column: 6, scope: !5841)
!5896 = !DILocation(line: 156, column: 14, scope: !5841)
!5897 = !DILocation(line: 156, column: 20, scope: !5841)
!5898 = !DILocation(line: 157, column: 3, scope: !5841)
!5899 = !DILocation(line: 157, column: 6, scope: !5841)
!5900 = !DILocation(line: 157, column: 20, scope: !5841)
!5901 = !DILocation(line: 158, column: 33, scope: !5841)
!5902 = !DILocation(line: 158, column: 36, scope: !5841)
!5903 = !DILocation(line: 158, column: 42, scope: !5841)
!5904 = !DILocation(line: 158, column: 10, scope: !5841)
!5905 = !DILocation(line: 158, column: 3, scope: !5841)
!5906 = distinct !DISubprogram(name: "_obstack_begin_worker", scope: !223, file: !223, line: 109, type: !5907, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !222, retainedNodes: !69)
!5907 = !DISubroutineType(types: !5908)
!5908 = !{!60, !5844, !57, !57}
!5909 = !DILocalVariable(name: "h", arg: 1, scope: !5906, file: !223, line: 109, type: !5844)
!5910 = !DILocation(line: 109, column: 40, scope: !5906)
!5911 = !DILocalVariable(name: "size", arg: 2, scope: !5906, file: !223, line: 110, type: !57)
!5912 = !DILocation(line: 110, column: 40, scope: !5906)
!5913 = !DILocalVariable(name: "alignment", arg: 3, scope: !5906, file: !223, line: 110, type: !57)
!5914 = !DILocation(line: 110, column: 62, scope: !5906)
!5915 = !DILocalVariable(name: "chunk", scope: !5906, file: !223, line: 112, type: !5849)
!5916 = !DILocation(line: 112, column: 26, scope: !5906)
!5917 = !DILocation(line: 114, column: 7, scope: !5918)
!5918 = distinct !DILexicalBlock(scope: !5906, file: !223, line: 114, column: 7)
!5919 = !DILocation(line: 114, column: 17, scope: !5918)
!5920 = !DILocation(line: 114, column: 7, scope: !5906)
!5921 = !DILocation(line: 115, column: 15, scope: !5918)
!5922 = !DILocation(line: 115, column: 5, scope: !5918)
!5923 = !DILocation(line: 116, column: 7, scope: !5924)
!5924 = distinct !DILexicalBlock(scope: !5906, file: !223, line: 116, column: 7)
!5925 = !DILocation(line: 116, column: 12, scope: !5924)
!5926 = !DILocation(line: 116, column: 7, scope: !5906)
!5927 = !DILocalVariable(name: "extra", scope: !5928, file: !223, line: 127, type: !60)
!5928 = distinct !DILexicalBlock(scope: !5924, file: !223, line: 118, column: 5)
!5929 = !DILocation(line: 127, column: 11, scope: !5928)
!5930 = !DILocation(line: 130, column: 21, scope: !5928)
!5931 = !DILocation(line: 130, column: 19, scope: !5928)
!5932 = !DILocation(line: 130, column: 14, scope: !5928)
!5933 = !DILocation(line: 130, column: 12, scope: !5928)
!5934 = !DILocation(line: 131, column: 5, scope: !5928)
!5935 = !DILocation(line: 133, column: 19, scope: !5906)
!5936 = !DILocation(line: 133, column: 3, scope: !5906)
!5937 = !DILocation(line: 133, column: 6, scope: !5906)
!5938 = !DILocation(line: 133, column: 17, scope: !5906)
!5939 = !DILocation(line: 134, column: 23, scope: !5906)
!5940 = !DILocation(line: 134, column: 33, scope: !5906)
!5941 = !DILocation(line: 134, column: 3, scope: !5906)
!5942 = !DILocation(line: 134, column: 6, scope: !5906)
!5943 = !DILocation(line: 134, column: 21, scope: !5906)
!5944 = !DILocation(line: 136, column: 37, scope: !5906)
!5945 = !DILocation(line: 136, column: 40, scope: !5906)
!5946 = !DILocation(line: 136, column: 43, scope: !5906)
!5947 = !DILocation(line: 136, column: 22, scope: !5906)
!5948 = !DILocation(line: 136, column: 11, scope: !5906)
!5949 = !DILocation(line: 136, column: 14, scope: !5906)
!5950 = !DILocation(line: 136, column: 20, scope: !5906)
!5951 = !DILocation(line: 136, column: 9, scope: !5906)
!5952 = !DILocation(line: 137, column: 8, scope: !5953)
!5953 = distinct !DILexicalBlock(scope: !5906, file: !223, line: 137, column: 7)
!5954 = !DILocation(line: 137, column: 7, scope: !5906)
!5955 = !DILocation(line: 138, column: 7, scope: !5953)
!5956 = !DILocation(line: 138, column: 5, scope: !5953)
!5957 = !DILocation(line: 139, column: 35, scope: !5906)
!5958 = !DILocation(line: 139, column: 18, scope: !5906)
!5959 = !DILocation(line: 139, column: 21, scope: !5906)
!5960 = !DILocation(line: 139, column: 33, scope: !5906)
!5961 = !DILocation(line: 139, column: 3, scope: !5906)
!5962 = !DILocation(line: 139, column: 6, scope: !5906)
!5963 = !DILocation(line: 139, column: 16, scope: !5906)
!5964 = !DILocation(line: 141, column: 44, scope: !5906)
!5965 = !DILocation(line: 141, column: 35, scope: !5906)
!5966 = !DILocation(line: 141, column: 52, scope: !5906)
!5967 = !DILocation(line: 141, column: 55, scope: !5906)
!5968 = !DILocation(line: 141, column: 50, scope: !5906)
!5969 = !DILocation(line: 141, column: 20, scope: !5906)
!5970 = !DILocation(line: 141, column: 27, scope: !5906)
!5971 = !DILocation(line: 141, column: 33, scope: !5906)
!5972 = !DILocation(line: 141, column: 3, scope: !5906)
!5973 = !DILocation(line: 141, column: 6, scope: !5906)
!5974 = !DILocation(line: 141, column: 18, scope: !5906)
!5975 = !DILocation(line: 142, column: 3, scope: !5906)
!5976 = !DILocation(line: 142, column: 10, scope: !5906)
!5977 = !DILocation(line: 142, column: 15, scope: !5906)
!5978 = !DILocation(line: 144, column: 3, scope: !5906)
!5979 = !DILocation(line: 144, column: 6, scope: !5906)
!5980 = !DILocation(line: 144, column: 25, scope: !5906)
!5981 = !DILocation(line: 145, column: 3, scope: !5906)
!5982 = !DILocation(line: 145, column: 6, scope: !5906)
!5983 = !DILocation(line: 145, column: 19, scope: !5906)
!5984 = !DILocation(line: 146, column: 3, scope: !5906)
!5985 = distinct !DISubprogram(name: "call_chunkfun", scope: !223, file: !223, line: 84, type: !5986, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !222, retainedNodes: !69)
!5986 = !DISubroutineType(types: !5987)
!5987 = !{!55, !5844, !57}
!5988 = !DILocalVariable(name: "h", arg: 1, scope: !5985, file: !223, line: 84, type: !5844)
!5989 = !DILocation(line: 84, column: 32, scope: !5985)
!5990 = !DILocalVariable(name: "size", arg: 2, scope: !5985, file: !223, line: 84, type: !57)
!5991 = !DILocation(line: 84, column: 42, scope: !5985)
!5992 = !DILocation(line: 86, column: 7, scope: !5993)
!5993 = distinct !DILexicalBlock(scope: !5985, file: !223, line: 86, column: 7)
!5994 = !DILocation(line: 86, column: 10, scope: !5993)
!5995 = !DILocation(line: 86, column: 7, scope: !5985)
!5996 = !DILocation(line: 87, column: 12, scope: !5993)
!5997 = !DILocation(line: 87, column: 15, scope: !5993)
!5998 = !DILocation(line: 87, column: 24, scope: !5993)
!5999 = !DILocation(line: 87, column: 31, scope: !5993)
!6000 = !DILocation(line: 87, column: 34, scope: !5993)
!6001 = !DILocation(line: 87, column: 45, scope: !5993)
!6002 = !DILocation(line: 87, column: 5, scope: !5993)
!6003 = !DILocation(line: 89, column: 12, scope: !5993)
!6004 = !DILocation(line: 89, column: 15, scope: !5993)
!6005 = !DILocation(line: 89, column: 24, scope: !5993)
!6006 = !DILocation(line: 89, column: 31, scope: !5993)
!6007 = !DILocation(line: 89, column: 5, scope: !5993)
!6008 = !DILocation(line: 90, column: 1, scope: !5985)
!6009 = distinct !DISubprogram(name: "_obstack_begin_1", scope: !223, file: !223, line: 162, type: !6010, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !222, retainedNodes: !69)
!6010 = !DISubroutineType(types: !6011)
!6011 = !{!60, !5844, !57, !57, !1104, !1115, !55}
!6012 = !DILocalVariable(name: "h", arg: 1, scope: !6009, file: !223, line: 162, type: !5844)
!6013 = !DILocation(line: 162, column: 35, scope: !6009)
!6014 = !DILocalVariable(name: "size", arg: 2, scope: !6009, file: !223, line: 163, type: !57)
!6015 = !DILocation(line: 163, column: 35, scope: !6009)
!6016 = !DILocalVariable(name: "alignment", arg: 3, scope: !6009, file: !223, line: 163, type: !57)
!6017 = !DILocation(line: 163, column: 57, scope: !6009)
!6018 = !DILocalVariable(name: "chunkfun", arg: 4, scope: !6009, file: !223, line: 164, type: !1104)
!6019 = !DILocation(line: 164, column: 27, scope: !6009)
!6020 = !DILocalVariable(name: "freefun", arg: 5, scope: !6009, file: !223, line: 165, type: !1115)
!6021 = !DILocation(line: 165, column: 26, scope: !6009)
!6022 = !DILocalVariable(name: "arg", arg: 6, scope: !6009, file: !223, line: 166, type: !55)
!6023 = !DILocation(line: 166, column: 25, scope: !6009)
!6024 = !DILocation(line: 168, column: 23, scope: !6009)
!6025 = !DILocation(line: 168, column: 3, scope: !6009)
!6026 = !DILocation(line: 168, column: 6, scope: !6009)
!6027 = !DILocation(line: 168, column: 15, scope: !6009)
!6028 = !DILocation(line: 168, column: 21, scope: !6009)
!6029 = !DILocation(line: 169, column: 22, scope: !6009)
!6030 = !DILocation(line: 169, column: 3, scope: !6009)
!6031 = !DILocation(line: 169, column: 6, scope: !6009)
!6032 = !DILocation(line: 169, column: 14, scope: !6009)
!6033 = !DILocation(line: 169, column: 20, scope: !6009)
!6034 = !DILocation(line: 170, column: 18, scope: !6009)
!6035 = !DILocation(line: 170, column: 3, scope: !6009)
!6036 = !DILocation(line: 170, column: 6, scope: !6009)
!6037 = !DILocation(line: 170, column: 16, scope: !6009)
!6038 = !DILocation(line: 171, column: 3, scope: !6009)
!6039 = !DILocation(line: 171, column: 6, scope: !6009)
!6040 = !DILocation(line: 171, column: 20, scope: !6009)
!6041 = !DILocation(line: 172, column: 33, scope: !6009)
!6042 = !DILocation(line: 172, column: 36, scope: !6009)
!6043 = !DILocation(line: 172, column: 42, scope: !6009)
!6044 = !DILocation(line: 172, column: 10, scope: !6009)
!6045 = !DILocation(line: 172, column: 3, scope: !6009)
!6046 = distinct !DISubprogram(name: "_obstack_newchunk", scope: !223, file: !223, line: 182, type: !6047, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !222, retainedNodes: !69)
!6047 = !DISubroutineType(types: !6048)
!6048 = !{null, !5844, !57}
!6049 = !DILocalVariable(name: "h", arg: 1, scope: !6046, file: !223, line: 182, type: !5844)
!6050 = !DILocation(line: 182, column: 36, scope: !6046)
!6051 = !DILocalVariable(name: "length", arg: 2, scope: !6046, file: !223, line: 182, type: !57)
!6052 = !DILocation(line: 182, column: 55, scope: !6046)
!6053 = !DILocalVariable(name: "old_chunk", scope: !6046, file: !223, line: 184, type: !5849)
!6054 = !DILocation(line: 184, column: 26, scope: !6046)
!6055 = !DILocation(line: 184, column: 38, scope: !6046)
!6056 = !DILocation(line: 184, column: 41, scope: !6046)
!6057 = !DILocalVariable(name: "new_chunk", scope: !6046, file: !223, line: 185, type: !5849)
!6058 = !DILocation(line: 185, column: 26, scope: !6046)
!6059 = !DILocalVariable(name: "obj_size", scope: !6046, file: !223, line: 186, type: !57)
!6060 = !DILocation(line: 186, column: 10, scope: !6046)
!6061 = !DILocation(line: 186, column: 21, scope: !6046)
!6062 = !DILocation(line: 186, column: 24, scope: !6046)
!6063 = !DILocation(line: 186, column: 36, scope: !6046)
!6064 = !DILocation(line: 186, column: 39, scope: !6046)
!6065 = !DILocation(line: 186, column: 34, scope: !6046)
!6066 = !DILocalVariable(name: "object_base", scope: !6046, file: !223, line: 187, type: !56)
!6067 = !DILocation(line: 187, column: 9, scope: !6046)
!6068 = !DILocalVariable(name: "sum1", scope: !6046, file: !223, line: 190, type: !57)
!6069 = !DILocation(line: 190, column: 10, scope: !6046)
!6070 = !DILocation(line: 190, column: 17, scope: !6046)
!6071 = !DILocation(line: 190, column: 28, scope: !6046)
!6072 = !DILocation(line: 190, column: 26, scope: !6046)
!6073 = !DILocalVariable(name: "sum2", scope: !6046, file: !223, line: 191, type: !57)
!6074 = !DILocation(line: 191, column: 10, scope: !6046)
!6075 = !DILocation(line: 191, column: 17, scope: !6046)
!6076 = !DILocation(line: 191, column: 24, scope: !6046)
!6077 = !DILocation(line: 191, column: 27, scope: !6046)
!6078 = !DILocation(line: 191, column: 22, scope: !6046)
!6079 = !DILocalVariable(name: "new_size", scope: !6046, file: !223, line: 192, type: !57)
!6080 = !DILocation(line: 192, column: 10, scope: !6046)
!6081 = !DILocation(line: 192, column: 21, scope: !6046)
!6082 = !DILocation(line: 192, column: 29, scope: !6046)
!6083 = !DILocation(line: 192, column: 38, scope: !6046)
!6084 = !DILocation(line: 192, column: 26, scope: !6046)
!6085 = !DILocation(line: 192, column: 44, scope: !6046)
!6086 = !DILocation(line: 193, column: 7, scope: !6087)
!6087 = distinct !DILexicalBlock(scope: !6046, file: !223, line: 193, column: 7)
!6088 = !DILocation(line: 193, column: 18, scope: !6087)
!6089 = !DILocation(line: 193, column: 16, scope: !6087)
!6090 = !DILocation(line: 193, column: 7, scope: !6046)
!6091 = !DILocation(line: 194, column: 16, scope: !6087)
!6092 = !DILocation(line: 194, column: 14, scope: !6087)
!6093 = !DILocation(line: 194, column: 5, scope: !6087)
!6094 = !DILocation(line: 195, column: 7, scope: !6095)
!6095 = distinct !DILexicalBlock(scope: !6046, file: !223, line: 195, column: 7)
!6096 = !DILocation(line: 195, column: 18, scope: !6095)
!6097 = !DILocation(line: 195, column: 21, scope: !6095)
!6098 = !DILocation(line: 195, column: 16, scope: !6095)
!6099 = !DILocation(line: 195, column: 7, scope: !6046)
!6100 = !DILocation(line: 196, column: 16, scope: !6095)
!6101 = !DILocation(line: 196, column: 19, scope: !6095)
!6102 = !DILocation(line: 196, column: 14, scope: !6095)
!6103 = !DILocation(line: 196, column: 5, scope: !6095)
!6104 = !DILocation(line: 199, column: 7, scope: !6105)
!6105 = distinct !DILexicalBlock(scope: !6046, file: !223, line: 199, column: 7)
!6106 = !DILocation(line: 199, column: 19, scope: !6105)
!6107 = !DILocation(line: 199, column: 16, scope: !6105)
!6108 = !DILocation(line: 199, column: 24, scope: !6105)
!6109 = !DILocation(line: 199, column: 27, scope: !6105)
!6110 = !DILocation(line: 199, column: 35, scope: !6105)
!6111 = !DILocation(line: 199, column: 32, scope: !6105)
!6112 = !DILocation(line: 199, column: 7, scope: !6046)
!6113 = !DILocation(line: 200, column: 32, scope: !6105)
!6114 = !DILocation(line: 200, column: 35, scope: !6105)
!6115 = !DILocation(line: 200, column: 17, scope: !6105)
!6116 = !DILocation(line: 200, column: 15, scope: !6105)
!6117 = !DILocation(line: 200, column: 5, scope: !6105)
!6118 = !DILocation(line: 201, column: 8, scope: !6119)
!6119 = distinct !DILexicalBlock(scope: !6046, file: !223, line: 201, column: 7)
!6120 = !DILocation(line: 201, column: 7, scope: !6046)
!6121 = !DILocation(line: 202, column: 7, scope: !6119)
!6122 = !DILocation(line: 202, column: 5, scope: !6119)
!6123 = !DILocation(line: 203, column: 14, scope: !6046)
!6124 = !DILocation(line: 203, column: 3, scope: !6046)
!6125 = !DILocation(line: 203, column: 6, scope: !6046)
!6126 = !DILocation(line: 203, column: 12, scope: !6046)
!6127 = !DILocation(line: 204, column: 21, scope: !6046)
!6128 = !DILocation(line: 204, column: 3, scope: !6046)
!6129 = !DILocation(line: 204, column: 14, scope: !6046)
!6130 = !DILocation(line: 204, column: 19, scope: !6046)
!6131 = !DILocation(line: 205, column: 48, scope: !6046)
!6132 = !DILocation(line: 205, column: 39, scope: !6046)
!6133 = !DILocation(line: 205, column: 60, scope: !6046)
!6134 = !DILocation(line: 205, column: 58, scope: !6046)
!6135 = !DILocation(line: 205, column: 22, scope: !6046)
!6136 = !DILocation(line: 205, column: 25, scope: !6046)
!6137 = !DILocation(line: 205, column: 37, scope: !6046)
!6138 = !DILocation(line: 205, column: 3, scope: !6046)
!6139 = !DILocation(line: 205, column: 14, scope: !6046)
!6140 = !DILocation(line: 205, column: 20, scope: !6046)
!6141 = !DILocation(line: 209, column: 5, scope: !6046)
!6142 = !DILocation(line: 208, column: 15, scope: !6046)
!6143 = !DILocation(line: 212, column: 11, scope: !6046)
!6144 = !DILocation(line: 212, column: 24, scope: !6046)
!6145 = !DILocation(line: 212, column: 27, scope: !6046)
!6146 = !DILocation(line: 212, column: 40, scope: !6046)
!6147 = !DILocation(line: 212, column: 3, scope: !6046)
!6148 = !DILocation(line: 217, column: 8, scope: !6149)
!6149 = distinct !DILexicalBlock(scope: !6046, file: !223, line: 217, column: 7)
!6150 = !DILocation(line: 217, column: 11, scope: !6149)
!6151 = !DILocation(line: 218, column: 7, scope: !6149)
!6152 = !DILocation(line: 218, column: 11, scope: !6149)
!6153 = !DILocation(line: 218, column: 14, scope: !6149)
!6154 = !DILocation(line: 219, column: 14, scope: !6149)
!6155 = !DILocation(line: 219, column: 11, scope: !6149)
!6156 = !DILocation(line: 217, column: 7, scope: !6046)
!6157 = !DILocation(line: 222, column: 25, scope: !6158)
!6158 = distinct !DILexicalBlock(scope: !6149, file: !223, line: 221, column: 5)
!6159 = !DILocation(line: 222, column: 36, scope: !6158)
!6160 = !DILocation(line: 222, column: 7, scope: !6158)
!6161 = !DILocation(line: 222, column: 18, scope: !6158)
!6162 = !DILocation(line: 222, column: 23, scope: !6158)
!6163 = !DILocation(line: 223, column: 21, scope: !6158)
!6164 = !DILocation(line: 223, column: 24, scope: !6158)
!6165 = !DILocation(line: 223, column: 7, scope: !6158)
!6166 = !DILocation(line: 224, column: 5, scope: !6158)
!6167 = !DILocation(line: 226, column: 20, scope: !6046)
!6168 = !DILocation(line: 226, column: 3, scope: !6046)
!6169 = !DILocation(line: 226, column: 6, scope: !6046)
!6170 = !DILocation(line: 226, column: 18, scope: !6046)
!6171 = !DILocation(line: 227, column: 18, scope: !6046)
!6172 = !DILocation(line: 227, column: 21, scope: !6046)
!6173 = !DILocation(line: 227, column: 35, scope: !6046)
!6174 = !DILocation(line: 227, column: 33, scope: !6046)
!6175 = !DILocation(line: 227, column: 3, scope: !6046)
!6176 = !DILocation(line: 227, column: 6, scope: !6046)
!6177 = !DILocation(line: 227, column: 16, scope: !6046)
!6178 = !DILocation(line: 229, column: 3, scope: !6046)
!6179 = !DILocation(line: 229, column: 6, scope: !6046)
!6180 = !DILocation(line: 229, column: 25, scope: !6046)
!6181 = !DILocation(line: 230, column: 1, scope: !6046)
!6182 = distinct !DISubprogram(name: "call_freefun", scope: !223, file: !223, line: 93, type: !6183, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !222, retainedNodes: !69)
!6183 = !DISubroutineType(types: !6184)
!6184 = !{null, !5844, !55}
!6185 = !DILocalVariable(name: "h", arg: 1, scope: !6182, file: !223, line: 93, type: !5844)
!6186 = !DILocation(line: 93, column: 31, scope: !6182)
!6187 = !DILocalVariable(name: "old_chunk", arg: 2, scope: !6182, file: !223, line: 93, type: !55)
!6188 = !DILocation(line: 93, column: 40, scope: !6182)
!6189 = !DILocation(line: 95, column: 7, scope: !6190)
!6190 = distinct !DILexicalBlock(scope: !6182, file: !223, line: 95, column: 7)
!6191 = !DILocation(line: 95, column: 10, scope: !6190)
!6192 = !DILocation(line: 95, column: 7, scope: !6182)
!6193 = !DILocation(line: 96, column: 5, scope: !6190)
!6194 = !DILocation(line: 96, column: 8, scope: !6190)
!6195 = !DILocation(line: 96, column: 16, scope: !6190)
!6196 = !DILocation(line: 96, column: 23, scope: !6190)
!6197 = !DILocation(line: 96, column: 26, scope: !6190)
!6198 = !DILocation(line: 96, column: 37, scope: !6190)
!6199 = !DILocation(line: 98, column: 5, scope: !6190)
!6200 = !DILocation(line: 98, column: 8, scope: !6190)
!6201 = !DILocation(line: 98, column: 16, scope: !6190)
!6202 = !DILocation(line: 98, column: 23, scope: !6190)
!6203 = !DILocation(line: 99, column: 1, scope: !6182)
!6204 = distinct !DISubprogram(name: "_obstack_allocated_p", scope: !223, file: !223, line: 241, type: !6205, scopeLine: 242, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !222, retainedNodes: !69)
!6205 = !DISubroutineType(types: !6206)
!6206 = !{!60, !5844, !55}
!6207 = !DILocalVariable(name: "h", arg: 1, scope: !6204, file: !223, line: 241, type: !5844)
!6208 = !DILocation(line: 241, column: 39, scope: !6204)
!6209 = !DILocalVariable(name: "obj", arg: 2, scope: !6204, file: !223, line: 241, type: !55)
!6210 = !DILocation(line: 241, column: 48, scope: !6204)
!6211 = !DILocalVariable(name: "lp", scope: !6204, file: !223, line: 243, type: !5849)
!6212 = !DILocation(line: 243, column: 26, scope: !6204)
!6213 = !DILocalVariable(name: "plp", scope: !6204, file: !223, line: 244, type: !5849)
!6214 = !DILocation(line: 244, column: 26, scope: !6204)
!6215 = !DILocation(line: 246, column: 9, scope: !6204)
!6216 = !DILocation(line: 246, column: 13, scope: !6204)
!6217 = !DILocation(line: 246, column: 6, scope: !6204)
!6218 = !DILocation(line: 250, column: 3, scope: !6204)
!6219 = !DILocation(line: 250, column: 10, scope: !6204)
!6220 = !DILocation(line: 250, column: 13, scope: !6204)
!6221 = !DILocation(line: 250, column: 18, scope: !6204)
!6222 = !DILocation(line: 250, column: 31, scope: !6204)
!6223 = !DILocation(line: 250, column: 22, scope: !6204)
!6224 = !DILocation(line: 250, column: 37, scope: !6204)
!6225 = !DILocation(line: 250, column: 34, scope: !6204)
!6226 = !DILocation(line: 250, column: 41, scope: !6204)
!6227 = !DILocation(line: 250, column: 54, scope: !6204)
!6228 = !DILocation(line: 250, column: 59, scope: !6204)
!6229 = !DILocation(line: 250, column: 67, scope: !6204)
!6230 = !DILocation(line: 250, column: 65, scope: !6204)
!6231 = !DILocation(line: 0, scope: !6204)
!6232 = !DILocation(line: 252, column: 13, scope: !6233)
!6233 = distinct !DILexicalBlock(scope: !6204, file: !223, line: 251, column: 5)
!6234 = !DILocation(line: 252, column: 17, scope: !6233)
!6235 = !DILocation(line: 252, column: 11, scope: !6233)
!6236 = !DILocation(line: 253, column: 12, scope: !6233)
!6237 = !DILocation(line: 253, column: 10, scope: !6233)
!6238 = distinct !{!6238, !6218, !6239, !975}
!6239 = !DILocation(line: 254, column: 5, scope: !6204)
!6240 = !DILocation(line: 255, column: 10, scope: !6204)
!6241 = !DILocation(line: 255, column: 13, scope: !6204)
!6242 = !DILocation(line: 255, column: 3, scope: !6204)
!6243 = distinct !DISubprogram(name: "_obstack_free", scope: !223, file: !223, line: 262, type: !6183, scopeLine: 263, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !222, retainedNodes: !69)
!6244 = !DILocalVariable(name: "h", arg: 1, scope: !6243, file: !223, line: 262, type: !5844)
!6245 = !DILocation(line: 262, column: 32, scope: !6243)
!6246 = !DILocalVariable(name: "obj", arg: 2, scope: !6243, file: !223, line: 262, type: !55)
!6247 = !DILocation(line: 262, column: 41, scope: !6243)
!6248 = !DILocalVariable(name: "lp", scope: !6243, file: !223, line: 264, type: !5849)
!6249 = !DILocation(line: 264, column: 26, scope: !6243)
!6250 = !DILocalVariable(name: "plp", scope: !6243, file: !223, line: 265, type: !5849)
!6251 = !DILocation(line: 265, column: 26, scope: !6243)
!6252 = !DILocation(line: 267, column: 8, scope: !6243)
!6253 = !DILocation(line: 267, column: 11, scope: !6243)
!6254 = !DILocation(line: 267, column: 6, scope: !6243)
!6255 = !DILocation(line: 271, column: 3, scope: !6243)
!6256 = !DILocation(line: 271, column: 10, scope: !6243)
!6257 = !DILocation(line: 271, column: 13, scope: !6243)
!6258 = !DILocation(line: 271, column: 18, scope: !6243)
!6259 = !DILocation(line: 271, column: 31, scope: !6243)
!6260 = !DILocation(line: 271, column: 22, scope: !6243)
!6261 = !DILocation(line: 271, column: 37, scope: !6243)
!6262 = !DILocation(line: 271, column: 34, scope: !6243)
!6263 = !DILocation(line: 271, column: 41, scope: !6243)
!6264 = !DILocation(line: 271, column: 54, scope: !6243)
!6265 = !DILocation(line: 271, column: 59, scope: !6243)
!6266 = !DILocation(line: 271, column: 67, scope: !6243)
!6267 = !DILocation(line: 271, column: 65, scope: !6243)
!6268 = !DILocation(line: 0, scope: !6243)
!6269 = !DILocation(line: 273, column: 13, scope: !6270)
!6270 = distinct !DILexicalBlock(scope: !6243, file: !223, line: 272, column: 5)
!6271 = !DILocation(line: 273, column: 17, scope: !6270)
!6272 = !DILocation(line: 273, column: 11, scope: !6270)
!6273 = !DILocation(line: 274, column: 21, scope: !6270)
!6274 = !DILocation(line: 274, column: 24, scope: !6270)
!6275 = !DILocation(line: 274, column: 7, scope: !6270)
!6276 = !DILocation(line: 275, column: 12, scope: !6270)
!6277 = !DILocation(line: 275, column: 10, scope: !6270)
!6278 = !DILocation(line: 278, column: 7, scope: !6270)
!6279 = !DILocation(line: 278, column: 10, scope: !6270)
!6280 = !DILocation(line: 278, column: 29, scope: !6270)
!6281 = distinct !{!6281, !6255, !6282, !975}
!6282 = !DILocation(line: 279, column: 5, scope: !6243)
!6283 = !DILocation(line: 280, column: 7, scope: !6284)
!6284 = distinct !DILexicalBlock(scope: !6243, file: !223, line: 280, column: 7)
!6285 = !DILocation(line: 280, column: 7, scope: !6243)
!6286 = !DILocation(line: 282, column: 49, scope: !6287)
!6287 = distinct !DILexicalBlock(scope: !6284, file: !223, line: 281, column: 5)
!6288 = !DILocation(line: 282, column: 24, scope: !6287)
!6289 = !DILocation(line: 282, column: 27, scope: !6287)
!6290 = !DILocation(line: 282, column: 37, scope: !6287)
!6291 = !DILocation(line: 282, column: 7, scope: !6287)
!6292 = !DILocation(line: 282, column: 10, scope: !6287)
!6293 = !DILocation(line: 282, column: 22, scope: !6287)
!6294 = !DILocation(line: 283, column: 24, scope: !6287)
!6295 = !DILocation(line: 283, column: 28, scope: !6287)
!6296 = !DILocation(line: 283, column: 7, scope: !6287)
!6297 = !DILocation(line: 283, column: 10, scope: !6287)
!6298 = !DILocation(line: 283, column: 22, scope: !6287)
!6299 = !DILocation(line: 284, column: 18, scope: !6287)
!6300 = !DILocation(line: 284, column: 7, scope: !6287)
!6301 = !DILocation(line: 284, column: 10, scope: !6287)
!6302 = !DILocation(line: 284, column: 16, scope: !6287)
!6303 = !DILocation(line: 285, column: 5, scope: !6287)
!6304 = !DILocation(line: 286, column: 12, scope: !6305)
!6305 = distinct !DILexicalBlock(scope: !6284, file: !223, line: 286, column: 12)
!6306 = !DILocation(line: 286, column: 16, scope: !6305)
!6307 = !DILocation(line: 286, column: 12, scope: !6284)
!6308 = !DILocation(line: 288, column: 5, scope: !6305)
!6309 = !DILocation(line: 289, column: 1, scope: !6243)
!6310 = distinct !DISubprogram(name: "_obstack_memory_used", scope: !223, file: !223, line: 292, type: !6311, scopeLine: 293, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !222, retainedNodes: !69)
!6311 = !DISubroutineType(types: !6312)
!6312 = !{!57, !5844}
!6313 = !DILocalVariable(name: "h", arg: 1, scope: !6310, file: !223, line: 292, type: !5844)
!6314 = !DILocation(line: 292, column: 39, scope: !6310)
!6315 = !DILocalVariable(name: "lp", scope: !6310, file: !223, line: 294, type: !5849)
!6316 = !DILocation(line: 294, column: 26, scope: !6310)
!6317 = !DILocalVariable(name: "nbytes", scope: !6310, file: !223, line: 295, type: !57)
!6318 = !DILocation(line: 295, column: 19, scope: !6310)
!6319 = !DILocation(line: 297, column: 13, scope: !6320)
!6320 = distinct !DILexicalBlock(scope: !6310, file: !223, line: 297, column: 3)
!6321 = !DILocation(line: 297, column: 16, scope: !6320)
!6322 = !DILocation(line: 297, column: 11, scope: !6320)
!6323 = !DILocation(line: 297, column: 8, scope: !6320)
!6324 = !DILocation(line: 297, column: 23, scope: !6325)
!6325 = distinct !DILexicalBlock(scope: !6320, file: !223, line: 297, column: 3)
!6326 = !DILocation(line: 297, column: 26, scope: !6325)
!6327 = !DILocation(line: 297, column: 3, scope: !6320)
!6328 = !DILocation(line: 299, column: 17, scope: !6329)
!6329 = distinct !DILexicalBlock(scope: !6325, file: !223, line: 298, column: 5)
!6330 = !DILocation(line: 299, column: 21, scope: !6329)
!6331 = !DILocation(line: 299, column: 38, scope: !6329)
!6332 = !DILocation(line: 299, column: 29, scope: !6329)
!6333 = !DILocation(line: 299, column: 27, scope: !6329)
!6334 = !DILocation(line: 299, column: 14, scope: !6329)
!6335 = !DILocation(line: 300, column: 5, scope: !6329)
!6336 = !DILocation(line: 297, column: 37, scope: !6325)
!6337 = !DILocation(line: 297, column: 41, scope: !6325)
!6338 = !DILocation(line: 297, column: 35, scope: !6325)
!6339 = !DILocation(line: 297, column: 3, scope: !6325)
!6340 = distinct !{!6340, !6327, !6341, !975}
!6341 = !DILocation(line: 300, column: 5, scope: !6320)
!6342 = !DILocation(line: 301, column: 10, scope: !6310)
!6343 = !DILocation(line: 301, column: 3, scope: !6310)
!6344 = distinct !DISubprogram(name: "__gl_setmode", scope: !6345, file: !6345, line: 50, type: !6346, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !507, retainedNodes: !69)
!6345 = !DIFile(filename: "../lib/binary-io.h", directory: "/nobackup/klee_LLVM_12/Dataset-1/coreutils-8.32/obj-llvm")
!6346 = !DISubroutineType(types: !6347)
!6347 = !{!60, !60, !60}
!6348 = !DILocalVariable(name: "fd", arg: 1, scope: !6344, file: !6345, line: 50, type: !60)
!6349 = !DILocation(line: 50, column: 19, scope: !6344)
!6350 = !DILocalVariable(name: "mode", arg: 2, scope: !6344, file: !6345, line: 50, type: !60)
!6351 = !DILocation(line: 50, column: 38, scope: !6344)
!6352 = !DILocation(line: 52, column: 3, scope: !6344)
!6353 = distinct !DISubprogram(name: "set_binary_mode", scope: !6345, file: !6345, line: 66, type: !6346, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !507, retainedNodes: !69)
!6354 = !DILocalVariable(name: "fd", arg: 1, scope: !6353, file: !6345, line: 66, type: !60)
!6355 = !DILocation(line: 66, column: 22, scope: !6353)
!6356 = !DILocalVariable(name: "mode", arg: 2, scope: !6353, file: !6345, line: 66, type: !60)
!6357 = !DILocation(line: 66, column: 30, scope: !6353)
!6358 = !DILocation(line: 68, column: 24, scope: !6353)
!6359 = !DILocation(line: 68, column: 28, scope: !6353)
!6360 = !DILocation(line: 68, column: 10, scope: !6353)
!6361 = !DILocation(line: 68, column: 3, scope: !6353)
!6362 = distinct !DISubprogram(name: "c_strcasecmp", scope: !510, file: !510, line: 27, type: !6363, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !509, retainedNodes: !69)
!6363 = !DISubroutineType(types: !6364)
!6364 = !{!60, !52, !52}
!6365 = !DILocalVariable(name: "s1", arg: 1, scope: !6362, file: !510, line: 27, type: !52)
!6366 = !DILocation(line: 27, column: 27, scope: !6362)
!6367 = !DILocalVariable(name: "s2", arg: 2, scope: !6362, file: !510, line: 27, type: !52)
!6368 = !DILocation(line: 27, column: 43, scope: !6362)
!6369 = !DILocalVariable(name: "p1", scope: !6362, file: !510, line: 29, type: !512)
!6370 = !DILocation(line: 29, column: 33, scope: !6362)
!6371 = !DILocation(line: 29, column: 62, scope: !6362)
!6372 = !DILocalVariable(name: "p2", scope: !6362, file: !510, line: 30, type: !512)
!6373 = !DILocation(line: 30, column: 33, scope: !6362)
!6374 = !DILocation(line: 30, column: 62, scope: !6362)
!6375 = !DILocalVariable(name: "c1", scope: !6362, file: !510, line: 31, type: !150)
!6376 = !DILocation(line: 31, column: 17, scope: !6362)
!6377 = !DILocalVariable(name: "c2", scope: !6362, file: !510, line: 31, type: !150)
!6378 = !DILocation(line: 31, column: 21, scope: !6362)
!6379 = !DILocation(line: 33, column: 7, scope: !6380)
!6380 = distinct !DILexicalBlock(scope: !6362, file: !510, line: 33, column: 7)
!6381 = !DILocation(line: 33, column: 13, scope: !6380)
!6382 = !DILocation(line: 33, column: 10, scope: !6380)
!6383 = !DILocation(line: 33, column: 7, scope: !6362)
!6384 = !DILocation(line: 34, column: 5, scope: !6380)
!6385 = !DILocation(line: 36, column: 3, scope: !6362)
!6386 = !DILocation(line: 38, column: 24, scope: !6387)
!6387 = distinct !DILexicalBlock(scope: !6362, file: !510, line: 37, column: 5)
!6388 = !DILocation(line: 38, column: 23, scope: !6387)
!6389 = !DILocation(line: 38, column: 12, scope: !6387)
!6390 = !DILocation(line: 38, column: 10, scope: !6387)
!6391 = !DILocation(line: 39, column: 24, scope: !6387)
!6392 = !DILocation(line: 39, column: 23, scope: !6387)
!6393 = !DILocation(line: 39, column: 12, scope: !6387)
!6394 = !DILocation(line: 39, column: 10, scope: !6387)
!6395 = !DILocation(line: 41, column: 11, scope: !6396)
!6396 = distinct !DILexicalBlock(scope: !6387, file: !510, line: 41, column: 11)
!6397 = !DILocation(line: 41, column: 14, scope: !6396)
!6398 = !DILocation(line: 41, column: 11, scope: !6387)
!6399 = !DILocation(line: 42, column: 9, scope: !6396)
!6400 = !DILocation(line: 44, column: 7, scope: !6387)
!6401 = !DILocation(line: 45, column: 7, scope: !6387)
!6402 = !DILocation(line: 46, column: 5, scope: !6387)
!6403 = !DILocation(line: 47, column: 10, scope: !6362)
!6404 = !DILocation(line: 47, column: 16, scope: !6362)
!6405 = !DILocation(line: 47, column: 13, scope: !6362)
!6406 = distinct !{!6406, !6385, !6407, !975}
!6407 = !DILocation(line: 47, column: 18, scope: !6362)
!6408 = !DILocation(line: 50, column: 12, scope: !6409)
!6409 = distinct !DILexicalBlock(scope: !6362, file: !510, line: 49, column: 7)
!6410 = !DILocation(line: 50, column: 17, scope: !6409)
!6411 = !DILocation(line: 50, column: 15, scope: !6409)
!6412 = !DILocation(line: 50, column: 5, scope: !6409)
!6413 = !DILocation(line: 56, column: 1, scope: !6362)
!6414 = distinct !DISubprogram(name: "close_stream", scope: !515, file: !515, line: 56, type: !6415, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !514, retainedNodes: !69)
!6415 = !DISubroutineType(types: !6416)
!6416 = !{!60, !6417}
!6417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6418, size: 64)
!6418 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1202, line: 7, baseType: !6419)
!6419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !1204, line: 49, size: 1728, elements: !6420)
!6420 = !{!6421, !6422, !6423, !6424, !6425, !6426, !6427, !6428, !6429, !6430, !6431, !6432, !6433, !6434, !6436, !6437, !6438, !6439, !6440, !6441, !6442, !6443, !6444, !6445, !6446, !6447, !6448, !6449, !6450}
!6421 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !6419, file: !1204, line: 51, baseType: !60, size: 32)
!6422 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !6419, file: !1204, line: 54, baseType: !56, size: 64, offset: 64)
!6423 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !6419, file: !1204, line: 55, baseType: !56, size: 64, offset: 128)
!6424 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !6419, file: !1204, line: 56, baseType: !56, size: 64, offset: 192)
!6425 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !6419, file: !1204, line: 57, baseType: !56, size: 64, offset: 256)
!6426 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !6419, file: !1204, line: 58, baseType: !56, size: 64, offset: 320)
!6427 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !6419, file: !1204, line: 59, baseType: !56, size: 64, offset: 384)
!6428 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !6419, file: !1204, line: 60, baseType: !56, size: 64, offset: 448)
!6429 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !6419, file: !1204, line: 61, baseType: !56, size: 64, offset: 512)
!6430 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !6419, file: !1204, line: 64, baseType: !56, size: 64, offset: 576)
!6431 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !6419, file: !1204, line: 65, baseType: !56, size: 64, offset: 640)
!6432 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !6419, file: !1204, line: 66, baseType: !56, size: 64, offset: 704)
!6433 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !6419, file: !1204, line: 68, baseType: !1219, size: 64, offset: 768)
!6434 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !6419, file: !1204, line: 70, baseType: !6435, size: 64, offset: 832)
!6435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6419, size: 64)
!6436 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !6419, file: !1204, line: 72, baseType: !60, size: 32, offset: 896)
!6437 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !6419, file: !1204, line: 73, baseType: !60, size: 32, offset: 928)
!6438 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !6419, file: !1204, line: 74, baseType: !1044, size: 64, offset: 960)
!6439 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !6419, file: !1204, line: 77, baseType: !61, size: 16, offset: 1024)
!6440 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !6419, file: !1204, line: 78, baseType: !1228, size: 8, offset: 1040)
!6441 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !6419, file: !1204, line: 79, baseType: !1230, size: 8, offset: 1048)
!6442 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !6419, file: !1204, line: 81, baseType: !1232, size: 64, offset: 1088)
!6443 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !6419, file: !1204, line: 89, baseType: !1235, size: 64, offset: 1152)
!6444 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !6419, file: !1204, line: 91, baseType: !1237, size: 64, offset: 1216)
!6445 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !6419, file: !1204, line: 92, baseType: !1240, size: 64, offset: 1280)
!6446 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !6419, file: !1204, line: 93, baseType: !6435, size: 64, offset: 1344)
!6447 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !6419, file: !1204, line: 94, baseType: !55, size: 64, offset: 1408)
!6448 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !6419, file: !1204, line: 95, baseType: !57, size: 64, offset: 1472)
!6449 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !6419, file: !1204, line: 96, baseType: !60, size: 32, offset: 1536)
!6450 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !6419, file: !1204, line: 98, baseType: !1247, size: 160, offset: 1568)
!6451 = !DILocalVariable(name: "stream", arg: 1, scope: !6414, file: !515, line: 56, type: !6417)
!6452 = !DILocation(line: 56, column: 21, scope: !6414)
!6453 = !DILocalVariable(name: "some_pending", scope: !6414, file: !515, line: 58, type: !6454)
!6454 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !89)
!6455 = !DILocation(line: 58, column: 14, scope: !6414)
!6456 = !DILocation(line: 58, column: 42, scope: !6414)
!6457 = !DILocation(line: 58, column: 30, scope: !6414)
!6458 = !DILocation(line: 58, column: 50, scope: !6414)
!6459 = !DILocalVariable(name: "prev_fail", scope: !6414, file: !515, line: 59, type: !6454)
!6460 = !DILocation(line: 59, column: 14, scope: !6414)
!6461 = !DILocation(line: 59, column: 27, scope: !6414)
!6462 = !DILocation(line: 59, column: 43, scope: !6414)
!6463 = !DILocalVariable(name: "fclose_fail", scope: !6414, file: !515, line: 60, type: !6454)
!6464 = !DILocation(line: 60, column: 14, scope: !6414)
!6465 = !DILocation(line: 60, column: 37, scope: !6414)
!6466 = !DILocation(line: 60, column: 29, scope: !6414)
!6467 = !DILocation(line: 60, column: 45, scope: !6414)
!6468 = !DILocation(line: 70, column: 7, scope: !6469)
!6469 = distinct !DILexicalBlock(scope: !6414, file: !515, line: 70, column: 7)
!6470 = !DILocation(line: 70, column: 17, scope: !6469)
!6471 = !DILocation(line: 70, column: 21, scope: !6469)
!6472 = !DILocation(line: 70, column: 33, scope: !6469)
!6473 = !DILocation(line: 70, column: 37, scope: !6469)
!6474 = !DILocation(line: 70, column: 50, scope: !6469)
!6475 = !DILocation(line: 70, column: 53, scope: !6469)
!6476 = !DILocation(line: 70, column: 59, scope: !6469)
!6477 = !DILocation(line: 70, column: 7, scope: !6414)
!6478 = !DILocation(line: 72, column: 13, scope: !6479)
!6479 = distinct !DILexicalBlock(scope: !6480, file: !515, line: 72, column: 11)
!6480 = distinct !DILexicalBlock(scope: !6469, file: !515, line: 71, column: 5)
!6481 = !DILocation(line: 72, column: 11, scope: !6480)
!6482 = !DILocation(line: 73, column: 9, scope: !6479)
!6483 = !DILocation(line: 73, column: 15, scope: !6479)
!6484 = !DILocation(line: 74, column: 7, scope: !6480)
!6485 = !DILocation(line: 77, column: 3, scope: !6414)
!6486 = !DILocation(line: 78, column: 1, scope: !6414)
!6487 = distinct !DISubprogram(name: "hard_locale", scope: !517, file: !517, line: 27, type: !6488, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !516, retainedNodes: !69)
!6488 = !DISubroutineType(types: !6489)
!6489 = !{!89, !60}
!6490 = !DILocalVariable(name: "category", arg: 1, scope: !6487, file: !517, line: 27, type: !60)
!6491 = !DILocation(line: 27, column: 18, scope: !6487)
!6492 = !DILocalVariable(name: "locale", scope: !6487, file: !517, line: 29, type: !6493)
!6493 = !DICompositeType(tag: DW_TAG_array_type, baseType: !54, size: 2056, elements: !6494)
!6494 = !{!6495}
!6495 = !DISubrange(count: 257)
!6496 = !DILocation(line: 29, column: 8, scope: !6487)
!6497 = !DILocation(line: 31, column: 25, scope: !6498)
!6498 = distinct !DILexicalBlock(scope: !6487, file: !517, line: 31, column: 7)
!6499 = !DILocation(line: 31, column: 35, scope: !6498)
!6500 = !DILocation(line: 31, column: 7, scope: !6498)
!6501 = !DILocation(line: 31, column: 7, scope: !6487)
!6502 = !DILocation(line: 32, column: 5, scope: !6498)
!6503 = !DILocation(line: 34, column: 20, scope: !6487)
!6504 = !DILocation(line: 34, column: 12, scope: !6487)
!6505 = !DILocation(line: 34, column: 33, scope: !6487)
!6506 = !DILocation(line: 34, column: 38, scope: !6487)
!6507 = !DILocation(line: 34, column: 49, scope: !6487)
!6508 = !DILocation(line: 34, column: 41, scope: !6487)
!6509 = !DILocation(line: 34, column: 66, scope: !6487)
!6510 = !DILocation(line: 34, column: 10, scope: !6487)
!6511 = !DILocation(line: 34, column: 3, scope: !6487)
!6512 = !DILocation(line: 35, column: 1, scope: !6487)
!6513 = distinct !DISubprogram(name: "locale_charset", scope: !519, file: !519, line: 831, type: !6514, scopeLine: 832, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !518, retainedNodes: !69)
!6514 = !DISubroutineType(types: !135)
!6515 = !DILocalVariable(name: "codeset", scope: !6513, file: !519, line: 833, type: !52)
!6516 = !DILocation(line: 833, column: 15, scope: !6513)
!6517 = !DILocation(line: 847, column: 13, scope: !6513)
!6518 = !DILocation(line: 847, column: 11, scope: !6513)
!6519 = !DILocation(line: 911, column: 7, scope: !6520)
!6520 = distinct !DILexicalBlock(scope: !6513, file: !519, line: 911, column: 7)
!6521 = !DILocation(line: 911, column: 15, scope: !6520)
!6522 = !DILocation(line: 911, column: 7, scope: !6513)
!6523 = !DILocation(line: 913, column: 13, scope: !6520)
!6524 = !DILocation(line: 913, column: 5, scope: !6520)
!6525 = !DILocation(line: 1070, column: 13, scope: !6526)
!6526 = distinct !DILexicalBlock(scope: !6527, file: !519, line: 1070, column: 13)
!6527 = distinct !DILexicalBlock(scope: !6528, file: !519, line: 1060, column: 7)
!6528 = distinct !DILexicalBlock(scope: !6513, file: !519, line: 1019, column: 3)
!6529 = !DILocation(line: 1070, column: 24, scope: !6526)
!6530 = !DILocation(line: 1070, column: 13, scope: !6527)
!6531 = !DILocation(line: 1071, column: 19, scope: !6526)
!6532 = !DILocation(line: 1071, column: 11, scope: !6526)
!6533 = !DILocation(line: 1158, column: 10, scope: !6513)
!6534 = !DILocation(line: 1158, column: 3, scope: !6513)
!6535 = distinct !DISubprogram(name: "setlocale_null_r", scope: !908, file: !908, line: 269, type: !6536, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !907, retainedNodes: !69)
!6536 = !DISubroutineType(types: !6537)
!6537 = !{!60, !60, !56, !57}
!6538 = !DILocalVariable(name: "category", arg: 1, scope: !6535, file: !908, line: 269, type: !60)
!6539 = !DILocation(line: 269, column: 23, scope: !6535)
!6540 = !DILocalVariable(name: "buf", arg: 2, scope: !6535, file: !908, line: 269, type: !56)
!6541 = !DILocation(line: 269, column: 39, scope: !6535)
!6542 = !DILocalVariable(name: "bufsize", arg: 3, scope: !6535, file: !908, line: 269, type: !57)
!6543 = !DILocation(line: 269, column: 51, scope: !6535)
!6544 = !DILocation(line: 274, column: 35, scope: !6535)
!6545 = !DILocation(line: 274, column: 45, scope: !6535)
!6546 = !DILocation(line: 274, column: 50, scope: !6535)
!6547 = !DILocation(line: 274, column: 10, scope: !6535)
!6548 = !DILocation(line: 274, column: 3, scope: !6535)
!6549 = distinct !DISubprogram(name: "setlocale_null_unlocked", scope: !908, file: !908, line: 91, type: !6536, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !907, retainedNodes: !69)
!6550 = !DILocalVariable(name: "category", arg: 1, scope: !6549, file: !908, line: 91, type: !60)
!6551 = !DILocation(line: 91, column: 30, scope: !6549)
!6552 = !DILocalVariable(name: "buf", arg: 2, scope: !6549, file: !908, line: 91, type: !56)
!6553 = !DILocation(line: 91, column: 46, scope: !6549)
!6554 = !DILocalVariable(name: "bufsize", arg: 3, scope: !6549, file: !908, line: 91, type: !57)
!6555 = !DILocation(line: 91, column: 58, scope: !6549)
!6556 = !DILocalVariable(name: "result", scope: !6549, file: !908, line: 140, type: !52)
!6557 = !DILocation(line: 140, column: 15, scope: !6549)
!6558 = !DILocation(line: 140, column: 51, scope: !6549)
!6559 = !DILocation(line: 140, column: 24, scope: !6549)
!6560 = !DILocation(line: 142, column: 7, scope: !6561)
!6561 = distinct !DILexicalBlock(scope: !6549, file: !908, line: 142, column: 7)
!6562 = !DILocation(line: 142, column: 14, scope: !6561)
!6563 = !DILocation(line: 142, column: 7, scope: !6549)
!6564 = !DILocation(line: 145, column: 11, scope: !6565)
!6565 = distinct !DILexicalBlock(scope: !6566, file: !908, line: 145, column: 11)
!6566 = distinct !DILexicalBlock(scope: !6561, file: !908, line: 143, column: 5)
!6567 = !DILocation(line: 145, column: 19, scope: !6565)
!6568 = !DILocation(line: 145, column: 11, scope: !6566)
!6569 = !DILocation(line: 149, column: 9, scope: !6565)
!6570 = !DILocation(line: 149, column: 16, scope: !6565)
!6571 = !DILocation(line: 150, column: 7, scope: !6566)
!6572 = !DILocalVariable(name: "length", scope: !6573, file: !908, line: 154, type: !57)
!6573 = distinct !DILexicalBlock(scope: !6561, file: !908, line: 153, column: 5)
!6574 = !DILocation(line: 154, column: 14, scope: !6573)
!6575 = !DILocation(line: 154, column: 31, scope: !6573)
!6576 = !DILocation(line: 154, column: 23, scope: !6573)
!6577 = !DILocation(line: 155, column: 11, scope: !6578)
!6578 = distinct !DILexicalBlock(scope: !6573, file: !908, line: 155, column: 11)
!6579 = !DILocation(line: 155, column: 20, scope: !6578)
!6580 = !DILocation(line: 155, column: 18, scope: !6578)
!6581 = !DILocation(line: 155, column: 11, scope: !6573)
!6582 = !DILocation(line: 157, column: 19, scope: !6583)
!6583 = distinct !DILexicalBlock(scope: !6578, file: !908, line: 156, column: 9)
!6584 = !DILocation(line: 157, column: 24, scope: !6583)
!6585 = !DILocation(line: 157, column: 32, scope: !6583)
!6586 = !DILocation(line: 157, column: 39, scope: !6583)
!6587 = !DILocation(line: 157, column: 11, scope: !6583)
!6588 = !DILocation(line: 158, column: 11, scope: !6583)
!6589 = !DILocation(line: 162, column: 15, scope: !6590)
!6590 = distinct !DILexicalBlock(scope: !6591, file: !908, line: 162, column: 15)
!6591 = distinct !DILexicalBlock(scope: !6578, file: !908, line: 161, column: 9)
!6592 = !DILocation(line: 162, column: 23, scope: !6590)
!6593 = !DILocation(line: 162, column: 15, scope: !6591)
!6594 = !DILocation(line: 167, column: 23, scope: !6595)
!6595 = distinct !DILexicalBlock(scope: !6590, file: !908, line: 163, column: 13)
!6596 = !DILocation(line: 167, column: 28, scope: !6595)
!6597 = !DILocation(line: 167, column: 36, scope: !6595)
!6598 = !DILocation(line: 167, column: 44, scope: !6595)
!6599 = !DILocation(line: 167, column: 15, scope: !6595)
!6600 = !DILocation(line: 168, column: 15, scope: !6595)
!6601 = !DILocation(line: 168, column: 19, scope: !6595)
!6602 = !DILocation(line: 168, column: 27, scope: !6595)
!6603 = !DILocation(line: 168, column: 32, scope: !6595)
!6604 = !DILocation(line: 169, column: 13, scope: !6595)
!6605 = !DILocation(line: 170, column: 11, scope: !6591)
!6606 = !DILocation(line: 174, column: 1, scope: !6549)
!6607 = distinct !DISubprogram(name: "setlocale_null_androidfix", scope: !908, file: !908, line: 60, type: !6608, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !907, retainedNodes: !69)
!6608 = !DISubroutineType(types: !6609)
!6609 = !{!52, !60}
!6610 = !DILocalVariable(name: "category", arg: 1, scope: !6607, file: !908, line: 60, type: !60)
!6611 = !DILocation(line: 60, column: 32, scope: !6607)
!6612 = !DILocalVariable(name: "result", scope: !6607, file: !908, line: 62, type: !52)
!6613 = !DILocation(line: 62, column: 15, scope: !6607)
!6614 = !DILocation(line: 62, column: 35, scope: !6607)
!6615 = !DILocation(line: 62, column: 24, scope: !6607)
!6616 = !DILocation(line: 87, column: 10, scope: !6607)
!6617 = !DILocation(line: 87, column: 3, scope: !6607)
!6618 = distinct !DISubprogram(name: "setlocale_null", scope: !908, file: !908, line: 301, type: !6608, scopeLine: 302, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !907, retainedNodes: !69)
!6619 = !DILocalVariable(name: "category", arg: 1, scope: !6618, file: !908, line: 301, type: !60)
!6620 = !DILocation(line: 301, column: 21, scope: !6618)
!6621 = !DILocation(line: 304, column: 37, scope: !6618)
!6622 = !DILocation(line: 304, column: 10, scope: !6618)
!6623 = !DILocation(line: 304, column: 3, scope: !6618)
!6624 = distinct !DISubprogram(name: "c_isalnum", scope: !6625, file: !6625, line: 169, type: !6488, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !909, retainedNodes: !69)
!6625 = !DIFile(filename: "../lib/c-ctype.h", directory: "/nobackup/klee_LLVM_12/Dataset-1/coreutils-8.32/obj-llvm")
!6626 = !DILocalVariable(name: "c", arg: 1, scope: !6624, file: !6625, line: 169, type: !60)
!6627 = !DILocation(line: 169, column: 16, scope: !6624)
!6628 = !DILocation(line: 171, column: 11, scope: !6624)
!6629 = !DILocation(line: 171, column: 3, scope: !6624)
!6630 = !DILocation(line: 176, column: 7, scope: !6631)
!6631 = distinct !DILexicalBlock(scope: !6624, file: !6625, line: 172, column: 5)
!6632 = !DILocation(line: 178, column: 7, scope: !6631)
!6633 = !DILocation(line: 180, column: 1, scope: !6624)
!6634 = distinct !DISubprogram(name: "c_isalpha", scope: !6625, file: !6625, line: 183, type: !6488, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !909, retainedNodes: !69)
!6635 = !DILocalVariable(name: "c", arg: 1, scope: !6634, file: !6625, line: 183, type: !60)
!6636 = !DILocation(line: 183, column: 16, scope: !6634)
!6637 = !DILocation(line: 185, column: 11, scope: !6634)
!6638 = !DILocation(line: 185, column: 3, scope: !6634)
!6639 = !DILocation(line: 189, column: 7, scope: !6640)
!6640 = distinct !DILexicalBlock(scope: !6634, file: !6625, line: 186, column: 5)
!6641 = !DILocation(line: 191, column: 7, scope: !6640)
!6642 = !DILocation(line: 193, column: 1, scope: !6634)
!6643 = distinct !DISubprogram(name: "c_isascii", scope: !6625, file: !6625, line: 198, type: !6488, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !909, retainedNodes: !69)
!6644 = !DILocalVariable(name: "c", arg: 1, scope: !6643, file: !6625, line: 198, type: !60)
!6645 = !DILocation(line: 198, column: 16, scope: !6643)
!6646 = !DILocation(line: 200, column: 11, scope: !6643)
!6647 = !DILocation(line: 200, column: 3, scope: !6643)
!6648 = !DILocation(line: 208, column: 7, scope: !6649)
!6649 = distinct !DILexicalBlock(scope: !6643, file: !6625, line: 201, column: 5)
!6650 = !DILocation(line: 210, column: 7, scope: !6649)
!6651 = !DILocation(line: 212, column: 1, scope: !6643)
!6652 = distinct !DISubprogram(name: "c_isblank", scope: !6625, file: !6625, line: 215, type: !6488, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !909, retainedNodes: !69)
!6653 = !DILocalVariable(name: "c", arg: 1, scope: !6652, file: !6625, line: 215, type: !60)
!6654 = !DILocation(line: 215, column: 16, scope: !6652)
!6655 = !DILocation(line: 217, column: 10, scope: !6652)
!6656 = !DILocation(line: 217, column: 12, scope: !6652)
!6657 = !DILocation(line: 217, column: 19, scope: !6652)
!6658 = !DILocation(line: 217, column: 22, scope: !6652)
!6659 = !DILocation(line: 217, column: 24, scope: !6652)
!6660 = !DILocation(line: 217, column: 3, scope: !6652)
!6661 = distinct !DISubprogram(name: "c_iscntrl", scope: !6625, file: !6625, line: 221, type: !6488, scopeLine: 222, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !909, retainedNodes: !69)
!6662 = !DILocalVariable(name: "c", arg: 1, scope: !6661, file: !6625, line: 221, type: !60)
!6663 = !DILocation(line: 221, column: 16, scope: !6661)
!6664 = !DILocation(line: 223, column: 11, scope: !6661)
!6665 = !DILocation(line: 223, column: 3, scope: !6661)
!6666 = !DILocation(line: 226, column: 7, scope: !6667)
!6667 = distinct !DILexicalBlock(scope: !6661, file: !6625, line: 224, column: 5)
!6668 = !DILocation(line: 228, column: 7, scope: !6667)
!6669 = !DILocation(line: 230, column: 1, scope: !6661)
!6670 = distinct !DISubprogram(name: "c_isdigit", scope: !6625, file: !6625, line: 233, type: !6488, scopeLine: 234, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !909, retainedNodes: !69)
!6671 = !DILocalVariable(name: "c", arg: 1, scope: !6670, file: !6625, line: 233, type: !60)
!6672 = !DILocation(line: 233, column: 16, scope: !6670)
!6673 = !DILocation(line: 235, column: 11, scope: !6670)
!6674 = !DILocation(line: 235, column: 3, scope: !6670)
!6675 = !DILocation(line: 238, column: 7, scope: !6676)
!6676 = distinct !DILexicalBlock(scope: !6670, file: !6625, line: 236, column: 5)
!6677 = !DILocation(line: 240, column: 7, scope: !6676)
!6678 = !DILocation(line: 242, column: 1, scope: !6670)
!6679 = distinct !DISubprogram(name: "c_isgraph", scope: !6625, file: !6625, line: 245, type: !6488, scopeLine: 246, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !909, retainedNodes: !69)
!6680 = !DILocalVariable(name: "c", arg: 1, scope: !6679, file: !6625, line: 245, type: !60)
!6681 = !DILocation(line: 245, column: 16, scope: !6679)
!6682 = !DILocation(line: 247, column: 11, scope: !6679)
!6683 = !DILocation(line: 247, column: 3, scope: !6679)
!6684 = !DILocation(line: 253, column: 7, scope: !6685)
!6685 = distinct !DILexicalBlock(scope: !6679, file: !6625, line: 248, column: 5)
!6686 = !DILocation(line: 255, column: 7, scope: !6685)
!6687 = !DILocation(line: 257, column: 1, scope: !6679)
!6688 = distinct !DISubprogram(name: "c_islower", scope: !6625, file: !6625, line: 260, type: !6488, scopeLine: 261, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !909, retainedNodes: !69)
!6689 = !DILocalVariable(name: "c", arg: 1, scope: !6688, file: !6625, line: 260, type: !60)
!6690 = !DILocation(line: 260, column: 16, scope: !6688)
!6691 = !DILocation(line: 262, column: 11, scope: !6688)
!6692 = !DILocation(line: 262, column: 3, scope: !6688)
!6693 = !DILocation(line: 265, column: 7, scope: !6694)
!6694 = distinct !DILexicalBlock(scope: !6688, file: !6625, line: 263, column: 5)
!6695 = !DILocation(line: 267, column: 7, scope: !6694)
!6696 = !DILocation(line: 269, column: 1, scope: !6688)
!6697 = distinct !DISubprogram(name: "c_isprint", scope: !6625, file: !6625, line: 272, type: !6488, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !909, retainedNodes: !69)
!6698 = !DILocalVariable(name: "c", arg: 1, scope: !6697, file: !6625, line: 272, type: !60)
!6699 = !DILocation(line: 272, column: 16, scope: !6697)
!6700 = !DILocation(line: 274, column: 11, scope: !6697)
!6701 = !DILocation(line: 274, column: 3, scope: !6697)
!6702 = !DILocation(line: 281, column: 7, scope: !6703)
!6703 = distinct !DILexicalBlock(scope: !6697, file: !6625, line: 275, column: 5)
!6704 = !DILocation(line: 283, column: 7, scope: !6703)
!6705 = !DILocation(line: 285, column: 1, scope: !6697)
!6706 = distinct !DISubprogram(name: "c_ispunct", scope: !6625, file: !6625, line: 288, type: !6488, scopeLine: 289, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !909, retainedNodes: !69)
!6707 = !DILocalVariable(name: "c", arg: 1, scope: !6706, file: !6625, line: 288, type: !60)
!6708 = !DILocation(line: 288, column: 16, scope: !6706)
!6709 = !DILocation(line: 290, column: 11, scope: !6706)
!6710 = !DILocation(line: 290, column: 3, scope: !6706)
!6711 = !DILocation(line: 293, column: 7, scope: !6712)
!6712 = distinct !DILexicalBlock(scope: !6706, file: !6625, line: 291, column: 5)
!6713 = !DILocation(line: 295, column: 7, scope: !6712)
!6714 = !DILocation(line: 297, column: 1, scope: !6706)
!6715 = distinct !DISubprogram(name: "c_isspace", scope: !6625, file: !6625, line: 300, type: !6488, scopeLine: 301, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !909, retainedNodes: !69)
!6716 = !DILocalVariable(name: "c", arg: 1, scope: !6715, file: !6625, line: 300, type: !60)
!6717 = !DILocation(line: 300, column: 16, scope: !6715)
!6718 = !DILocation(line: 302, column: 11, scope: !6715)
!6719 = !DILocation(line: 302, column: 3, scope: !6715)
!6720 = !DILocation(line: 305, column: 7, scope: !6721)
!6721 = distinct !DILexicalBlock(scope: !6715, file: !6625, line: 303, column: 5)
!6722 = !DILocation(line: 307, column: 7, scope: !6721)
!6723 = !DILocation(line: 309, column: 1, scope: !6715)
!6724 = distinct !DISubprogram(name: "c_isupper", scope: !6625, file: !6625, line: 312, type: !6488, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !909, retainedNodes: !69)
!6725 = !DILocalVariable(name: "c", arg: 1, scope: !6724, file: !6625, line: 312, type: !60)
!6726 = !DILocation(line: 312, column: 16, scope: !6724)
!6727 = !DILocation(line: 314, column: 11, scope: !6724)
!6728 = !DILocation(line: 314, column: 3, scope: !6724)
!6729 = !DILocation(line: 317, column: 7, scope: !6730)
!6730 = distinct !DILexicalBlock(scope: !6724, file: !6625, line: 315, column: 5)
!6731 = !DILocation(line: 319, column: 7, scope: !6730)
!6732 = !DILocation(line: 321, column: 1, scope: !6724)
!6733 = distinct !DISubprogram(name: "c_isxdigit", scope: !6625, file: !6625, line: 324, type: !6488, scopeLine: 325, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !909, retainedNodes: !69)
!6734 = !DILocalVariable(name: "c", arg: 1, scope: !6733, file: !6625, line: 324, type: !60)
!6735 = !DILocation(line: 324, column: 17, scope: !6733)
!6736 = !DILocation(line: 326, column: 11, scope: !6733)
!6737 = !DILocation(line: 326, column: 3, scope: !6733)
!6738 = !DILocation(line: 330, column: 7, scope: !6739)
!6739 = distinct !DILexicalBlock(scope: !6733, file: !6625, line: 327, column: 5)
!6740 = !DILocation(line: 332, column: 7, scope: !6739)
!6741 = !DILocation(line: 334, column: 1, scope: !6733)
!6742 = distinct !DISubprogram(name: "c_tolower", scope: !6625, file: !6625, line: 337, type: !2451, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !909, retainedNodes: !69)
!6743 = !DILocalVariable(name: "c", arg: 1, scope: !6742, file: !6625, line: 337, type: !60)
!6744 = !DILocation(line: 337, column: 16, scope: !6742)
!6745 = !DILocation(line: 339, column: 11, scope: !6742)
!6746 = !DILocation(line: 339, column: 3, scope: !6742)
!6747 = !DILocation(line: 342, column: 14, scope: !6748)
!6748 = distinct !DILexicalBlock(scope: !6742, file: !6625, line: 340, column: 5)
!6749 = !DILocation(line: 342, column: 16, scope: !6748)
!6750 = !DILocation(line: 342, column: 22, scope: !6748)
!6751 = !DILocation(line: 342, column: 7, scope: !6748)
!6752 = !DILocation(line: 344, column: 14, scope: !6748)
!6753 = !DILocation(line: 344, column: 7, scope: !6748)
!6754 = !DILocation(line: 346, column: 1, scope: !6742)
!6755 = distinct !DISubprogram(name: "c_toupper", scope: !6625, file: !6625, line: 349, type: !2451, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !909, retainedNodes: !69)
!6756 = !DILocalVariable(name: "c", arg: 1, scope: !6755, file: !6625, line: 349, type: !60)
!6757 = !DILocation(line: 349, column: 16, scope: !6755)
!6758 = !DILocation(line: 351, column: 11, scope: !6755)
!6759 = !DILocation(line: 351, column: 3, scope: !6755)
!6760 = !DILocation(line: 354, column: 14, scope: !6761)
!6761 = distinct !DILexicalBlock(scope: !6755, file: !6625, line: 352, column: 5)
!6762 = !DILocation(line: 354, column: 16, scope: !6761)
!6763 = !DILocation(line: 354, column: 22, scope: !6761)
!6764 = !DILocation(line: 354, column: 7, scope: !6761)
!6765 = !DILocation(line: 356, column: 14, scope: !6761)
!6766 = !DILocation(line: 356, column: 7, scope: !6761)
!6767 = !DILocation(line: 358, column: 1, scope: !6755)
